Gadgets information
============================================================
0x0000000000194fb4 : adc ah, byte ptr [rcx - 0x5e1d0003] ; std ; jmp rdx
0x0000000000187e1c : adc ah, ch ; int1 ; jmp qword ptr [rax]
0x00000000001af230 : adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000019cfc5 : adc al, 0 ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x000000000014712f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149191 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c4c8 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147199 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c523 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c522 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001a7d80 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a7d98 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000000fcd2e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000001a7dc8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000004b515 : adc al, 0 ; call 0x777f4
0x0000000000047065 : adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000033295 : adc al, 0 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000012afb5 : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000012afb4 : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001510f5 : adc al, 0x13 ; jmp rdx
0x00000000001511ba : adc al, 0x13 ; jmp rdx
0x00000000001512a9 : adc al, 0x13 ; jmp rdx
0x0000000000151313 : adc al, 0x13 ; jmp rdx
0x00000000001513d2 : adc al, 0x13 ; jmp rdx
0x00000000001514c3 : adc al, 0x13 ; jmp rdx
0x000000000015156f : adc al, 0x13 ; jmp rdx
0x000000000015160d : adc al, 0x13 ; jmp rdx
0x00000000001516bf : adc al, 0x13 ; jmp rdx
0x000000000015175d : adc al, 0x13 ; jmp rdx
0x000000000015180f : adc al, 0x13 ; jmp rdx
0x00000000001518ad : adc al, 0x13 ; jmp rdx
0x000000000015195f : adc al, 0x13 ; jmp rdx
0x00000000001519fd : adc al, 0x13 ; jmp rdx
0x0000000000151aaf : adc al, 0x13 ; jmp rdx
0x0000000000151b4d : adc al, 0x13 ; jmp rdx
0x0000000000151bff : adc al, 0x13 ; jmp rdx
0x0000000000151c9d : adc al, 0x13 ; jmp rdx
0x0000000000151d4f : adc al, 0x13 ; jmp rdx
0x0000000000151ded : adc al, 0x13 ; jmp rdx
0x0000000000151ea4 : adc al, 0x13 ; jmp rdx
0x0000000000151f3d : adc al, 0x13 ; jmp rdx
0x0000000000151fef : adc al, 0x13 ; jmp rdx
0x000000000015208d : adc al, 0x13 ; jmp rdx
0x000000000015213f : adc al, 0x13 ; jmp rdx
0x00000000001521dd : adc al, 0x13 ; jmp rdx
0x000000000015228f : adc al, 0x13 ; jmp rdx
0x000000000015232d : adc al, 0x13 ; jmp rdx
0x00000000001523df : adc al, 0x13 ; jmp rdx
0x000000000015247d : adc al, 0x13 ; jmp rdx
0x000000000015252f : adc al, 0x13 ; jmp rdx
0x00000000001525cd : adc al, 0x13 ; jmp rdx
0x000000000015267f : adc al, 0x13 ; jmp rdx
0x000000000015271d : adc al, 0x13 ; jmp rdx
0x00000000001527cf : adc al, 0x13 ; jmp rdx
0x000000000015286d : adc al, 0x13 ; jmp rdx
0x0000000000153876 : adc al, 0x13 ; jmp rdx
0x0000000000153950 : adc al, 0x13 ; jmp rdx
0x0000000000153ac5 : adc al, 0x13 ; jmp rdx
0x0000000000153b8a : adc al, 0x13 ; jmp rdx
0x0000000000153c79 : adc al, 0x13 ; jmp rdx
0x0000000000153ce3 : adc al, 0x13 ; jmp rdx
0x0000000000153da2 : adc al, 0x13 ; jmp rdx
0x0000000000153e93 : adc al, 0x13 ; jmp rdx
0x0000000000153f3f : adc al, 0x13 ; jmp rdx
0x0000000000153fdd : adc al, 0x13 ; jmp rdx
0x000000000015408f : adc al, 0x13 ; jmp rdx
0x000000000015412d : adc al, 0x13 ; jmp rdx
0x00000000001541df : adc al, 0x13 ; jmp rdx
0x000000000015427d : adc al, 0x13 ; jmp rdx
0x000000000015432f : adc al, 0x13 ; jmp rdx
0x00000000001543cd : adc al, 0x13 ; jmp rdx
0x000000000015447f : adc al, 0x13 ; jmp rdx
0x000000000015451d : adc al, 0x13 ; jmp rdx
0x00000000001545cf : adc al, 0x13 ; jmp rdx
0x000000000015466d : adc al, 0x13 ; jmp rdx
0x000000000015471f : adc al, 0x13 ; jmp rdx
0x00000000001547bd : adc al, 0x13 ; jmp rdx
0x0000000000154874 : adc al, 0x13 ; jmp rdx
0x000000000015490d : adc al, 0x13 ; jmp rdx
0x00000000001549bf : adc al, 0x13 ; jmp rdx
0x0000000000154a5d : adc al, 0x13 ; jmp rdx
0x0000000000154b0f : adc al, 0x13 ; jmp rdx
0x0000000000154bad : adc al, 0x13 ; jmp rdx
0x0000000000154c5f : adc al, 0x13 ; jmp rdx
0x0000000000154cfd : adc al, 0x13 ; jmp rdx
0x0000000000154daf : adc al, 0x13 ; jmp rdx
0x0000000000154e4d : adc al, 0x13 ; jmp rdx
0x0000000000154eff : adc al, 0x13 ; jmp rdx
0x0000000000154f9d : adc al, 0x13 ; jmp rdx
0x000000000015504f : adc al, 0x13 ; jmp rdx
0x00000000001550ed : adc al, 0x13 ; jmp rdx
0x000000000015519f : adc al, 0x13 ; jmp rdx
0x000000000015523d : adc al, 0x13 ; jmp rdx
0x0000000000156246 : adc al, 0x13 ; jmp rdx
0x0000000000156320 : adc al, 0x13 ; jmp rdx
0x0000000000156495 : adc al, 0x13 ; jmp rdx
0x000000000015655a : adc al, 0x13 ; jmp rdx
0x0000000000156649 : adc al, 0x13 ; jmp rdx
0x00000000001566b3 : adc al, 0x13 ; jmp rdx
0x0000000000156772 : adc al, 0x13 ; jmp rdx
0x0000000000156863 : adc al, 0x13 ; jmp rdx
0x000000000015690f : adc al, 0x13 ; jmp rdx
0x00000000001569ad : adc al, 0x13 ; jmp rdx
0x0000000000156a5f : adc al, 0x13 ; jmp rdx
0x0000000000156afd : adc al, 0x13 ; jmp rdx
0x0000000000156baf : adc al, 0x13 ; jmp rdx
0x0000000000156c4d : adc al, 0x13 ; jmp rdx
0x0000000000156cff : adc al, 0x13 ; jmp rdx
0x0000000000156d9d : adc al, 0x13 ; jmp rdx
0x0000000000156e4f : adc al, 0x13 ; jmp rdx
0x0000000000156eed : adc al, 0x13 ; jmp rdx
0x0000000000156f9f : adc al, 0x13 ; jmp rdx
0x000000000015703d : adc al, 0x13 ; jmp rdx
0x00000000001570ef : adc al, 0x13 ; jmp rdx
0x000000000015718d : adc al, 0x13 ; jmp rdx
0x0000000000157244 : adc al, 0x13 ; jmp rdx
0x00000000001572dd : adc al, 0x13 ; jmp rdx
0x000000000015738f : adc al, 0x13 ; jmp rdx
0x000000000015742d : adc al, 0x13 ; jmp rdx
0x00000000001574df : adc al, 0x13 ; jmp rdx
0x000000000015757d : adc al, 0x13 ; jmp rdx
0x000000000015762f : adc al, 0x13 ; jmp rdx
0x00000000001576cd : adc al, 0x13 ; jmp rdx
0x000000000015777f : adc al, 0x13 ; jmp rdx
0x000000000015781d : adc al, 0x13 ; jmp rdx
0x00000000001578cf : adc al, 0x13 ; jmp rdx
0x000000000015796d : adc al, 0x13 ; jmp rdx
0x0000000000157a1f : adc al, 0x13 ; jmp rdx
0x0000000000157abd : adc al, 0x13 ; jmp rdx
0x0000000000157b6f : adc al, 0x13 ; jmp rdx
0x0000000000157c0d : adc al, 0x13 ; jmp rdx
0x0000000000158c2e : adc al, 0x13 ; jmp rdx
0x0000000000158cf9 : adc al, 0x13 ; jmp rdx
0x0000000000158de4 : adc al, 0x13 ; jmp rdx
0x0000000000158ea1 : adc al, 0x13 ; jmp rdx
0x0000000000158ee4 : adc al, 0x13 ; jmp rdx
0x0000000000158ef7 : adc al, 0x13 ; jmp rdx
0x0000000000159056 : adc al, 0x13 ; jmp rdx
0x00000000001590d7 : adc al, 0x13 ; jmp rdx
0x0000000000159193 : adc al, 0x13 ; jmp rdx
0x0000000000159250 : adc al, 0x13 ; jmp rdx
0x0000000000159313 : adc al, 0x13 ; jmp rdx
0x00000000001593d0 : adc al, 0x13 ; jmp rdx
0x0000000000159493 : adc al, 0x13 ; jmp rdx
0x0000000000159550 : adc al, 0x13 ; jmp rdx
0x0000000000159613 : adc al, 0x13 ; jmp rdx
0x00000000001596d0 : adc al, 0x13 ; jmp rdx
0x0000000000159793 : adc al, 0x13 ; jmp rdx
0x0000000000159850 : adc al, 0x13 ; jmp rdx
0x0000000000159913 : adc al, 0x13 ; jmp rdx
0x00000000001599d0 : adc al, 0x13 ; jmp rdx
0x0000000000159a93 : adc al, 0x13 ; jmp rdx
0x0000000000159b50 : adc al, 0x13 ; jmp rdx
0x0000000000159c13 : adc al, 0x13 ; jmp rdx
0x0000000000159cd0 : adc al, 0x13 ; jmp rdx
0x0000000000159d93 : adc al, 0x13 ; jmp rdx
0x0000000000159e50 : adc al, 0x13 ; jmp rdx
0x0000000000159f13 : adc al, 0x13 ; jmp rdx
0x0000000000159fd0 : adc al, 0x13 ; jmp rdx
0x000000000015a093 : adc al, 0x13 ; jmp rdx
0x000000000015a150 : adc al, 0x13 ; jmp rdx
0x000000000015a214 : adc al, 0x13 ; jmp rdx
0x000000000015a2d0 : adc al, 0x13 ; jmp rdx
0x000000000015a393 : adc al, 0x13 ; jmp rdx
0x000000000015a450 : adc al, 0x13 ; jmp rdx
0x000000000015a513 : adc al, 0x13 ; jmp rdx
0x000000000015a5d0 : adc al, 0x13 ; jmp rdx
0x000000000015a693 : adc al, 0x13 ; jmp rdx
0x000000000015a750 : adc al, 0x13 ; jmp rdx
0x000000000015a8e7 : adc al, 0x13 ; jmp rdx
0x000000000015aa7a : adc al, 0x13 ; jmp rdx
0x000000000015b9b7 : adc al, 0x13 ; jmp rdx
0x000000000015b9ca : adc al, 0x13 ; jmp rdx
0x000000000015bb26 : adc al, 0x13 ; jmp rdx
0x000000000015bba7 : adc al, 0x13 ; jmp rdx
0x000000000015bc63 : adc al, 0x13 ; jmp rdx
0x000000000015bd20 : adc al, 0x13 ; jmp rdx
0x000000000015bde3 : adc al, 0x13 ; jmp rdx
0x000000000015bea0 : adc al, 0x13 ; jmp rdx
0x000000000015bf63 : adc al, 0x13 ; jmp rdx
0x000000000015c020 : adc al, 0x13 ; jmp rdx
0x000000000015c0e3 : adc al, 0x13 ; jmp rdx
0x000000000015c1a0 : adc al, 0x13 ; jmp rdx
0x000000000015c263 : adc al, 0x13 ; jmp rdx
0x000000000015c320 : adc al, 0x13 ; jmp rdx
0x000000000015c3e3 : adc al, 0x13 ; jmp rdx
0x000000000015c4a0 : adc al, 0x13 ; jmp rdx
0x000000000015c563 : adc al, 0x13 ; jmp rdx
0x000000000015c620 : adc al, 0x13 ; jmp rdx
0x000000000015c6e3 : adc al, 0x13 ; jmp rdx
0x000000000015c7a0 : adc al, 0x13 ; jmp rdx
0x000000000015c863 : adc al, 0x13 ; jmp rdx
0x000000000015c920 : adc al, 0x13 ; jmp rdx
0x000000000015c9e3 : adc al, 0x13 ; jmp rdx
0x000000000015caa0 : adc al, 0x13 ; jmp rdx
0x000000000015cb63 : adc al, 0x13 ; jmp rdx
0x000000000015cc20 : adc al, 0x13 ; jmp rdx
0x000000000015cce4 : adc al, 0x13 ; jmp rdx
0x000000000015cda0 : adc al, 0x13 ; jmp rdx
0x000000000015ce63 : adc al, 0x13 ; jmp rdx
0x000000000015cf20 : adc al, 0x13 ; jmp rdx
0x000000000015cfe3 : adc al, 0x13 ; jmp rdx
0x000000000015d0a0 : adc al, 0x13 ; jmp rdx
0x000000000015d163 : adc al, 0x13 ; jmp rdx
0x000000000015d220 : adc al, 0x13 ; jmp rdx
0x000000000015d3b7 : adc al, 0x13 ; jmp rdx
0x000000000015d54a : adc al, 0x13 ; jmp rdx
0x000000000015e488 : adc al, 0x13 ; jmp rdx
0x000000000015e4aa : adc al, 0x13 ; jmp rdx
0x000000000015e606 : adc al, 0x13 ; jmp rdx
0x000000000015e687 : adc al, 0x13 ; jmp rdx
0x000000000015e743 : adc al, 0x13 ; jmp rdx
0x000000000015e800 : adc al, 0x13 ; jmp rdx
0x000000000015e8c3 : adc al, 0x13 ; jmp rdx
0x000000000015e980 : adc al, 0x13 ; jmp rdx
0x000000000015ea43 : adc al, 0x13 ; jmp rdx
0x000000000015eb00 : adc al, 0x13 ; jmp rdx
0x000000000015ebc3 : adc al, 0x13 ; jmp rdx
0x000000000015ec80 : adc al, 0x13 ; jmp rdx
0x000000000015ed43 : adc al, 0x13 ; jmp rdx
0x000000000015ee00 : adc al, 0x13 ; jmp rdx
0x000000000015eec3 : adc al, 0x13 ; jmp rdx
0x000000000015ef80 : adc al, 0x13 ; jmp rdx
0x000000000015f043 : adc al, 0x13 ; jmp rdx
0x000000000015f100 : adc al, 0x13 ; jmp rdx
0x000000000015f1c3 : adc al, 0x13 ; jmp rdx
0x000000000015f280 : adc al, 0x13 ; jmp rdx
0x000000000015f343 : adc al, 0x13 ; jmp rdx
0x000000000015f400 : adc al, 0x13 ; jmp rdx
0x000000000015f4c3 : adc al, 0x13 ; jmp rdx
0x000000000015f580 : adc al, 0x13 ; jmp rdx
0x000000000015f643 : adc al, 0x13 ; jmp rdx
0x000000000015f700 : adc al, 0x13 ; jmp rdx
0x000000000015f7c4 : adc al, 0x13 ; jmp rdx
0x000000000015f880 : adc al, 0x13 ; jmp rdx
0x000000000015f943 : adc al, 0x13 ; jmp rdx
0x000000000015fa00 : adc al, 0x13 ; jmp rdx
0x000000000015fac3 : adc al, 0x13 ; jmp rdx
0x000000000015fb80 : adc al, 0x13 ; jmp rdx
0x000000000015fc43 : adc al, 0x13 ; jmp rdx
0x000000000015fd00 : adc al, 0x13 ; jmp rdx
0x000000000015feab : adc al, 0x13 ; jmp rdx
0x000000000016005e : adc al, 0x13 ; jmp rdx
0x00000000001971b0 : adc al, 0x14 ; jmp 0x1971b6
0x000000000009f5b5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000019d54c : adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x000000000019b0f8 : adc al, 0x22 ; cli ; call rsp
0x00000000000fd42a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000fd429 : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000039fc8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000039ff0 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000003a362 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000003a420 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000a9de3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000c23ab : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000001af44c : adc al, 0x39 ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x00000000001afa4c : adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x000000000007ef0a : adc al, 0x41 ; pop rsp ; ret
0x00000000000a7520 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a8373 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009f16b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000020825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001b094c : adc al, 0x4e ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c4c : adc al, 0x51 ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x000000000019ab10 : adc al, 0x52 ; stc ; call rsp
0x00000000001b114c : adc al, 0x56 ; add dword ptr [rax], eax ; nop ; jp 0x1b114f ; jmp qword ptr [rcx]
0x000000000019b310 : adc al, 0x56 ; cli ; jmp rsp
0x0000000000198c18 : adc al, 0x6d ; call rsp
0x00000000001b2a4c : adc al, 0x6f ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x000000000008635a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00000000001b364c : adc al, 0x7b ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x000000000002ec97 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000002ed87 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000f7716 : adc al, 0x89 ; ret 0xdaf7
0x0000000000072eee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000005bf54 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063d2c : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e63 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000c31df : adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000e6282 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000f262b : adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000f3800 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000134a46 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e47 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x000000000006cbbd : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000e1294 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000198e80 : adc al, 0x91 ; hlt ; jmp rsp
0x00000000001485c0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014a585 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014bf90 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014d935 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000146cee : adc al, 0x91 ; sub eax, edx ; ret
0x00000000001488f7 : adc al, 0x91 ; sub eax, edx ; ret
0x000000000014ab7e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000014c257 : adc al, 0x91 ; sub eax, edx ; ret
0x00000000001510f1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001511b6 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001512a5 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015130f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001513ce : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001514bf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015156b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151609 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001516bb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151759 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015180b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001518a9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015195b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001519f9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151aab : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151b49 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151bfb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151c99 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151d4b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151de9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151ea0 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151f39 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151feb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152089 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015213b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001521d9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015228b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152329 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001523db : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152479 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015252b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001525c9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015267b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152719 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001527cb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152869 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153872 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015394c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153ac1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153b86 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153c75 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153cdf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153d9e : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153e8f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153f3b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153fd9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015408b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154129 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001541db : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154279 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015432b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001543c9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015447b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154519 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001545cb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154669 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015471b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001547b9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154870 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154909 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001549bb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154a59 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154b0b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154ba9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154c5b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154cf9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154dab : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154e49 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154efb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154f99 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015504b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001550e9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015519b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000155239 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156242 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015631c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156491 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156556 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156645 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001566af : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015676e : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015685f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015690b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001569a9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156a5b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156af9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156bab : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156c49 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156cfb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156d99 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156e4b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156ee9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156f9b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157039 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001570eb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157189 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157240 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001572d9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015738b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157429 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001574db : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157579 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015762b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001576c9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015777b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157819 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001578cb : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157969 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157a1b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157ab9 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157b6b : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157c09 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158c2a : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158cf5 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158de0 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158e9d : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ee0 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ef3 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159052 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001590d3 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015918f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015924c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015930f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001593cc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015948f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015954c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015960f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001596cc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015978f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015984c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015990f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001599cc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159a8f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159b4c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159c0f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159ccc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159d8f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159e4c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159f0f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159fcc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a08f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a14c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a210 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a2cc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a38f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a44c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a50f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a5cc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a68f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a74c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a8e3 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015aa76 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9b3 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9c6 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bb22 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bba3 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bc5f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bd1c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bddf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015be9c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bf5f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c01c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c0df : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c19c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c25f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c31c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c3df : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c49c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c55f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c61c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c6df : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c79c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c85f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c91c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c9df : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ca9c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cb5f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cc1c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cce0 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cd9c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ce5f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cf1c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cfdf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d09c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d15f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d21c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d3b3 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d546 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e484 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e4a6 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e602 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e683 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e73f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e7fc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e8bf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e97c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ea3f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eafc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ebbf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ec7c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ed3f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015edfc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eebf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ef7c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f03f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f0fc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f1bf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f27c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f33f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f3fc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f4bf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f57c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f63f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f6fc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f7c0 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f87c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f93f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f9fc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fabf : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fb7c : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fc3f : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fcfc : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fea7 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000016005a : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000852ea : adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000000ce04d : adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000197668 : adc al, 0x9c ; in eax, dx ; call rsp
0x0000000000089d97 : adc al, 0xa ; jmp r10
0x000000000008bc17 : adc al, 0xa ; jmp r10
0x000000000008fb77 : adc al, 0xa ; jmp r10
0x0000000000091e87 : adc al, 0xa ; jmp r10
0x0000000000144d77 : adc al, 0xa ; jmp r10
0x0000000000145b47 : adc al, 0xa ; jmp r10
0x0000000000146b87 : adc al, 0xa ; jmp r10
0x0000000000148757 : adc al, 0xa ; jmp r10
0x000000000014aa77 : adc al, 0xa ; jmp r10
0x000000000014c107 : adc al, 0xa ; jmp r10
0x000000000014e657 : adc al, 0xa ; jmp r10
0x000000000014f8d7 : adc al, 0xa ; jmp r10
0x0000000000161087 : adc al, 0xa ; jmp r10
0x00000000001631f7 : adc al, 0xa ; jmp r10
0x000000000009f723 : adc al, 0xa ; sub eax, edx ; ret
0x000000000009f7e9 : adc al, 0xa ; sub eax, edx ; ret
0x000000000005c14a : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000005c41c : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00000000000d9b47 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x0000000000109624 : adc al, 0xac ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000cdcdd : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000000ce74c : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000000d1be0 : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000000d39b0 : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x000000000010ab84 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010abdf : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b406 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b453 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001a794c : adc al, 0xbe ; add byte ptr [rax], al ; sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x0000000000048031 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000019b660 : adc al, 0xc3 ; cli ; jmp rsp
0x0000000000048035 : adc al, 0xc6 ; xor eax, eax ; pop rbx ; ret
0x0000000000035f44 : adc al, 0xc7 ; xor eax, eax ; ret
0x0000000000197840 : adc al, 0xcc ; in eax, dx ; jmp rsp
0x00000000000bcd3e : adc al, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000001a994c : adc al, 0xde ; add byte ptr [rax], al ; mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x00000000000bb252 : adc al, 0xe ; jne 0xbb24d ; ret
0x0000000000144e01 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000145bfa : adc al, 0xe ; sub eax, edx ; ret
0x0000000000002b87 : adc al, 0xe7 ; ret
0x00000000000c1555 : adc al, 0xe9 ; ret 0xffef
0x00000000000c1554 : adc al, 0xe9 ; ret 0xffef
0x00000000000c260c : adc al, 0xe9 ; ret 0xfff9
0x00000000000c260b : adc al, 0xe9 ; ret 0xfff9
0x0000000000173e61 : adc al, 0xea ; test rdx, rdx ; je 0x173e71 ; call rdx
0x00000000001971b1 : adc al, 0xeb ; call rsp
0x00000000000a7ee9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000001978f8 : adc al, 0xf0 ; in eax, dx ; call rsp
0x00000000001aac71 : adc al, 0xf2 ; call qword ptr [rdx]
0x0000000000198ed9 : adc al, 0xf5 ; call rsp
0x0000000000199309 : adc al, 0xf6 ; call rsp
0x00000000001956dd : adc al, 0xfc ; call qword ptr [rax - 0x1f0003eb]
0x00000000001956dc : adc al, 0xfc ; call qword ptr [rax - 0x1f0003eb]
0x0000000000172818 : adc al, 1 ; add byte ptr [rax], al ; ret
0x000000000007d9bf : adc al, 2 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e6
0x00000000000b9f3f : adc al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x000000000009ebb6 : adc al, 7 ; cmp edx, esi ; je 0x9ebb7 ; ret
0x000000000009eae2 : adc al, 7 ; test dl, dl ; jne 0x9eadf ; ret
0x000000000019c34c : adc al, 8 ; add byte ptr [rax], al ; js 0x19c342 ; jmp qword ptr [rcx]
0x0000000000044e0f : adc al, 9 ; ret 0x9f74
0x00000000000b63e0 : adc al, 9 ; ret 0x9f74
0x0000000000195230 : adc al, bl ; sti ; call rax
0x00000000001472d7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149371 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147341 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ac9f : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c69b : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000057e8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000007600 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000021bdd : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00000000000222bb : adc al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000063882 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000005bf50 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000063e5f : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000063e43 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000b05bd : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccd9ae0
0x00000000000b5a65 : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccdef88
0x00000000001ab5ea : adc al, byte ptr [rbx] ; ret 0xa02
0x00000000001acdd5 : adc al, byte ptr [rcx] ; add al, ch ; fpatan ; jmp qword ptr [rcx]
0x00000000001acdbd : adc al, byte ptr [rcx] ; add al, dl ; fpatan ; jmp qword ptr [rcx]
0x00000000001ace35 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x00000000000a2a14 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2b37 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a53e4 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a5507 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000f351e : adc al, ch ; cmp al, 0xb3 ; stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x0000000000046eef : adc al, ch ; imul edi, eax, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000013f917 : adc al, ch ; ret
0x00000000001bab21 : adc bh, al ; jmp qword ptr [rbx]
0x0000000000003afb : adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000195f20 : adc bh, byte ptr [rbp - 4] ; call qword ptr [rdx + 0x12fffc7c]
0x0000000000195f30 : adc bh, byte ptr [rbx - 4] ; call qword ptr [rdx + 0x12fffc7a]
0x00000000000ac820 : adc bh, byte ptr [rbx] ; ja 0xac834 ; cmove rax, rcx ; ret
0x0000000000195f38 : adc bh, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x12fffc79]
0x0000000000195f28 : adc bh, byte ptr [rsp + rdi*8 - 1] ; xchg eax, edx ; jnp 0x195f32 ; call qword ptr [rdx]
0x0000000000187ed0 : adc bh, ch ; int1 ; jmp qword ptr [rax]
0x00000000000e2009 : adc bh, dh ; ret 0x30f
0x000000000011e1b4 : adc bh, dh ; ret 0x8080
0x000000000013777b : adc bh, dh ; ret 0x8080
0x0000000000137a02 : adc bh, dh ; ret 0x8080
0x0000000000195288 : adc bl, ah ; sti ; call qword ptr [rax]
0x00000000001ae810 : adc bl, bl ; hlt ; call qword ptr [rbx]
0x0000000000034f38 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001952b8 : adc bl, bl ; sti ; push rax ; fdiv st(3), st(0) ; call rax
0x0000000000196448 : adc bl, byte ptr [rsi - 0x627d0004] ; cld ; call qword ptr [rdx]
0x000000000008f965 : adc bl, ch ; call 0xffffffffc3d982ba
0x0000000000089a75 : adc bl, ch ; call 0xffffffffc40123ca
0x000000000008b275 : adc bl, ch ; call 0xffffffffc4013bca
0x0000000000048982 : adc bl, ch ; jno 0x489d8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000008f284 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000000a6b06 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e76 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6b46 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8f56 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9a26 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5ee7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a6bb7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8fc7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9a97 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5e47 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a6b17 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8f27 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a99f7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000002da6a : adc bl, dh ; ret
0x00000000000ff257 : adc bl, dh ; ret
0x00000000000a6b05 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e75 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6b45 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8f55 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9a25 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000079616 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x0000000000115191 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x0000000000089382 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000003737d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037eca : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000049bc8 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000037376 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000001435f7 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000c84b9 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc848d
0x000000000007cd7c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000cf485 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000001031c2 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000a9d5c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d7e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000074083 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000004857c : adc byte ptr [rax + 0x29], cl ; ret
0x00000000000e44a4 : adc byte ptr [rax + 0x29], cl ; ret
0x0000000000052b9f : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000037377 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000b6fc9 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000da29b : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000da29a : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000136082 : adc byte ptr [rax + 0x39], cl ; ret 0x1872
0x0000000000108a9f : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000e2441 : adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e2466 : adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x000000000007eaab : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000136081 : adc byte ptr [rax + 0x39], r9b ; ret 0x1872
0x0000000000108a9e : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000001435f8 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000078b3b : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000795eb : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000001096fa : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000012eb7a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000012ebfa : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013a9d9 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013aa49 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013aaf9 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013ae5a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013aeca : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013b03f : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013b0a9 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013bbea : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013bc5a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013bcc9 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000013bd39 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000144331 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000132316 : adc byte ptr [rax + 1], bh ; ret
0x0000000000135085 : adc byte ptr [rax + 1], bh ; ret
0x00000000001359de : adc byte ptr [rax + 1], bh ; ret
0x00000000000aaf8e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000004906e : adc byte ptr [rax + 1], cl ; ret
0x000000000009f166 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000010a228 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x00000000001359dd : adc byte ptr [rax + 1], dil ; ret
0x00000000000d8e3f : adc byte ptr [rax + 2], bh ; ret
0x00000000000a9f64 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9e62 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9de0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000fda53 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000010ab81 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010abdc : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b403 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b450 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002da63 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002daae : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000944e4 : adc byte ptr [rax - 0x73], cl ; jg 0x94501 ; jne 0x944d8 ; ret
0x000000000010ada5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010b605 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010ada4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010b604 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000020828 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000102e32 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000009490a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000a585c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000071c77 : adc byte ptr [rax - 0x77], cl ; jo 0x71c95 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072fac : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x0000000000072fab : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x00000000000c84ba : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc848c
0x000000000012c02b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000071c37 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000023654 : adc byte ptr [rax - 0x77], cl ; push rbp ; test al, 0xe8 ; ret 0xffff
0x00000000000891d2 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000089287 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000392b3 : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000623f8 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000071c3b : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000071c7b : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000d932c : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000deb6a : adc byte ptr [rax - 0x77], cl ; ret
0x000000000007cd7d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000115cd6 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000061d02 : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000003d6d4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x00000000000409d4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x0000000000043844 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x0000000000082c39 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000012fb24 : adc byte ptr [rax - 0x77], cl ; ret 0x948
0x00000000000e5734 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000014dc6f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e14f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e4ef : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001657f7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000169b27 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000165833 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000169b63 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1604 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000123480 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x000000000005bce1 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000062059 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000062420 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000cf486 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000001031c3 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000143afc : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000087293 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000087292 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e16b2 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010f78b : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002656a : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000048d91 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000004920c : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000498e5 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000009eec3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000495a9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000049c3d : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fe857 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000fe8d7 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000fe957 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000ea99b : adc byte ptr [rax - 1], bh ; ret
0x00000000000fcd4b : adc byte ptr [rax - 1], bh ; ret
0x0000000000195c30 : adc byte ptr [rax - 4], al ; call qword ptr [rax + 0x10fffc41]
0x000000000010627a : adc byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000000fc32b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000006abcc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000006abde : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000149551 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeec : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c948 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001474e1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014af3d : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003b19c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003b20c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012d8da : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012bf75 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000aacc3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008bb5c : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018abcd : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000006b454 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6b469 ; ret
0x0000000000115731 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000080fda : adc byte ptr [rax], al ; mov edx, 0x234 ; call 0x7d289
0x000000000008105b : adc byte ptr [rax], al ; mov edx, 0x237 ; call 0x7d289
0x0000000000088855 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x88824
0x0000000000088854 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x88825
0x00000000000852e6 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000045afb : adc byte ptr [rax], al ; ret
0x0000000000195bdc : adc byte ptr [rax], bh ; cld ; call qword ptr [rax + 0x10fffc39]
0x00000000000d8eb5 : adc byte ptr [rax], bh ; ret 0x860f
0x00000000000d8dd8 : adc byte ptr [rax], bh ; ret 0x870f
0x00000000001955d0 : adc byte ptr [rax], ch ; cld ; call rax
0x0000000000194e38 : adc byte ptr [rax], cl ; sti ; jmp rax
0x00000000000a9d5d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d7f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9f41 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000001a9500 : adc byte ptr [rax], dh ; int1 ; jmp qword ptr [rcx]
0x00000000000e7e21 : adc byte ptr [rbp + 0x39], al ; enter -0x2e89, 0x39 ; ret
0x000000000007ee9a : adc byte ptr [rbp + 0x39], cl ; ret
0x0000000000048525 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x000000000008f428 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x00000000000944e8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000194f80 : adc byte ptr [rbp - 0x796f0005], al ; sti ; call qword ptr [rax]
0x00000000000c49f3 : adc byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000102ca7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000115192 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000ac952 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000195b70 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x0000000000082d70 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bc915 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d7fd1 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d9835 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001082db : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010845b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000108991 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c875 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c8e9 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010d350 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011b119 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c32c : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c75b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124ed3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124f19 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012cdc0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139313 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b6fc : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000850bb : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003adb0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000480db : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000004827b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006aad3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006ab45 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006f667 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000073753 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000085f45 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000086a11 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c8335 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cc0e6 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fc8ee : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fcb4b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000101991 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011597c : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000119e18 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012e703 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013bf9e : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013bfbc : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013bfe3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a5e93 : adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001a1dad : adc byte ptr [rbx + 0xa], ch ; ret
0x00000000001a02fc : adc byte ptr [rbx + 0xaae0202], al ; ret
0x0000000000079617 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000194f68 : adc byte ptr [rbx + rdi*8 - 1], bh ; nop ; jge 0x194f71 ; call qword ptr [rax]
0x000000000007c892 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000075ad7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x75af1 ; ret
0x00000000000aa960 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000123d0b : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000000ac99f : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x0000000000115326 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x11533f ; pop rbp ; pop r12 ; ret
0x00000000001b05c0 : adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000195c38 : adc byte ptr [rbx - 4], al ; call qword ptr [rax + 0x10fffc44]
0x0000000000194f50 : adc byte ptr [rbx - 5], dh ; call qword ptr [rax + 0x10fffb74]
0x0000000000195be4 : adc byte ptr [rbx], bh ; cld ; call qword ptr [rax + 0x10fffc3c]
0x0000000000112f25 : adc byte ptr [rbx], ch ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000074084 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000095127 : adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00000000000f35bd : adc byte ptr [rcx + rcx*4 + 0x6c], cl ; and al, 8 ; call 0x1f8b0
0x00000000000edc90 : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000074fe7 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000751a6 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000008605b : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006c478 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c4a2 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006cb88 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006cc0a : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9ec2 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ea2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000172b78 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000fe822 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000331b0 : adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000fe8a2 : adc byte ptr [rcx - 0x77], cl ; ret 0x8348
0x00000000000e3d0c : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b8cf8 : adc byte ptr [rcx - 0x7cb7e8cc], cl ; ret 0x4804
0x00000000000b8c7c : adc byte ptr [rcx - 0x7cb7eecc], cl ; ret 0x4804
0x000000000007ee47 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000007ee46 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000012fae1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e3cb7 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4201
0x00000000000b973b : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0x0000000000144e83 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000144f53 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145019 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001450e3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001451b3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145283 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145353 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145423 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001454f3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001455c3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145693 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145763 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145833 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145903 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001459cf : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145c8d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145d7d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145e6d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000145f5d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014604d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014613d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014622d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014631d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014640d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001464fd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001465ed : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001466dd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001467cd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001468bd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001469a9 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000146dfd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000146f9d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000147135 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001472dd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014747d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014761d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001477bd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014795d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000147afd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000147c9d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000147e3d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000147fdd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014817d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014831d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001484bd : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ac54 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ada4 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014aef2 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014b044 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014b194 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014b2e4 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014b434 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014b584 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014b6d4 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014b824 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014b974 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014bac4 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014bc14 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014bd64 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014beb4 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014c34e : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014c4ce : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014c646 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014c7ce : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014c94e : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014cace : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014cc4e : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014cdce : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014cf4e : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014d0ce : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014d24e : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014d3ce : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014d54e : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014d6ce : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014d84e : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000012fd0f : adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x0000000000148a27 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000148c07 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000148dd9 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000148fb7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149197 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149377 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149557 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149737 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149917 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149af7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149cd7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149eb7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a097 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a277 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a457 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000195bf4 : adc byte ptr [rcx - 4], al ; call qword ptr [rax + 0x10fffc42]
0x0000000000194f60 : adc byte ptr [rcx - 5], bh ; call qword ptr [rax + 0x10fffb7a]
0x00000000001acc2d : adc byte ptr [rcx], al ; add al, ah ; ret
0x000000000010627b : adc byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000ba324 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba323 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ed7d : adc byte ptr [rcx], bh ; ret
0x0000000000195654 : adc byte ptr [rcx], ch ; cld ; push rax ; sub bh, ah ; call rax
0x000000000003ad3e : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007c895 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000086a79 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ccb5 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012e722 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000124137 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00000000000fce2d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfce69 ; ret
0x000000000010eee3 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x00000000000c7886 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001b0a40 : adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000195c04 : adc byte ptr [rdi - 4], al ; call qword ptr [rax + 0x10fffc48]
0x0000000000195e90 : adc byte ptr [rdi - 4], dh ; call rax
0x0000000000195b60 : adc byte ptr [rdi - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x0000000000194f70 : adc byte ptr [rdi - 5], bh ; call qword ptr [rax + 0x10fffb80]
0x0000000000195670 : adc byte ptr [rdi], ah ; cld ; call rax
0x00000000001a0710 : adc byte ptr [rdi], ah ; jmp 0x1a0716
0x000000000011e2be : adc byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000002de55 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000002e09e : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010ab1c : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010b3b5 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000011940a : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000089383 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000035d72 : adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000001688d8 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000001688d7 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000170943 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000146071 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146161 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f81 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014d89b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c39f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014d59f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cc9f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cf9f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c697 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001469c9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000146521 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000145cb1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000146701 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145e91 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001468e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001467f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146133 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146223 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146043 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c944 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d544 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d844 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cc44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014c63c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145da1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000149ccd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149aed : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a4c5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001493e5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2e5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145f53 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d73 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e63 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145c83 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000035de3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x000000000009a6f8 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x000000000003737e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000000378ed : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000048d1d : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000004919f : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000049535 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000049877 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000099bc8 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037ecb : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000049bc9 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000edc99 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x0000000000195c18 : adc byte ptr [rdi], dh ; cld ; call qword ptr [rax + 0x10fffc38]
0x00000000000378ec : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000048d1c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000004919e : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000049876 : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000003955 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00000000001515e9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151739 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151889 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519d9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b29 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c79 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dc9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f19 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152069 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001521b9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152309 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152459 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001525a9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001526f9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152849 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fb9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154109 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154259 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543a9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544f9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154649 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154799 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548e9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a39 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b89 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cd9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e29 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f79 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001550c9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000155219 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156989 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ad9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c29 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d79 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ec9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157019 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157169 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572b9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157409 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157559 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001576a9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577f9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157949 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157a99 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157be9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000062031 : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x0000000000194f78 : adc byte ptr [rdx - 0x7c6f0005], al ; sti ; call qword ptr [rax]
0x00000000001b0c80 : adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000012839f : adc byte ptr [rdx], al ; je 0x1283ac ; ret
0x0000000000195c20 : adc byte ptr [rdx], bh ; cld ; call qword ptr [rax + 0x10fffc3b]
0x00000000001956b8 : adc byte ptr [rdx], ch ; cld ; push rax ; sub edi, esp ; jmp rax
0x000000000016f02b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000195bd4 : adc byte ptr [rip + 0x3690fffc], dh ; cld ; call qword ptr [rax]
0x0000000000195c28 : adc byte ptr [rip + 0x3e90fffc], bh ; cld ; call qword ptr [rax]
0x000000000014081d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x000000000016eeda : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000017050a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000016e4d5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5a4 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e668 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6bb : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e864 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e9dd : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eaad : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eb71 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebd3 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed7c : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eec7 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb05 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbd4 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc98 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fceb : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe94 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017000d : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001700dd : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001701a1 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170203 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001703ac : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001704f7 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089ee5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a025 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a165 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a2a5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a3e5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a525 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a665 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a7a5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a8e5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008aa25 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ab65 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008aca5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ade5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008af25 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008b065 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008bdbf : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008bf3f : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c0bf : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c23f : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c3bf : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c53f : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c6bf : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c83f : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c9bf : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008cb3f : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ccbf : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ce3f : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008cfbf : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d13f : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d2bf : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014e799 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014e8b9 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014e9d9 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014eaf9 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ec19 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ed39 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ee59 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ef79 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f099 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f1b9 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f2d9 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f3f9 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f519 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f639 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f759 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fa77 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fbe7 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fd57 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fec7 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150037 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000001501a7 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150317 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150487 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000001505f7 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150767 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000001508d7 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150a47 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150bb7 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150d27 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150e97 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fe2b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009003b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009024b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009045b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009066b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009087b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000090a8b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000090c9b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000090eab : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000910bb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000912cb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000914db : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000916eb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000918fb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000091b0b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092185 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000923d5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092625 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092875 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092ac5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092d15 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092f65 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000931b5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093405 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093655 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000938a5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093af5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093d45 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093f95 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000941e5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161333 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161533 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161733 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161933 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161b33 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161d33 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161f33 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162133 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162333 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162533 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162733 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162933 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162b33 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162d33 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162f33 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001634ed : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000016372d : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000016396d : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163bad : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163ded : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000016402d : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000016426d : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001644ad : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001646ed : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000016492d : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164b6d : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164dad : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164fed : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000016522d : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000016546d : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000a605b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a76e8 : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a93fc : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a605a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a76e7 : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a93fb : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000195c40 : adc byte ptr [rsi - 4], al ; call qword ptr [rax + 0x10fffc47]
0x0000000000195b68 : adc byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc55]
0x0000000000194f58 : adc byte ptr [rsi - 5], dh ; call qword ptr [rax + 0x10fffb77]
0x0000000000195bec : adc byte ptr [rsi], bh ; cld ; call qword ptr [rax + 0x10fffc3f]
0x000000000003afea : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x000000000003b017 : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000195bfc : adc byte ptr [rsp + rdi*8 - 1], al ; nop ; cld ; call qword ptr [rax]
0x0000000000195b78 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x00000000000bb8fa : adc byte ptr [rsp - 0x10], al ; ret
0x000000000004a18f : adc byte ptr [rsp - 4], al ; ret
0x000000000004a1d5 : adc byte ptr [rsp - 8], al ; ret
0x000000000014c947 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000195284 : adc cl, ah ; sti ; call qword ptr [rax]
0x000000000009f545 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000bc5ee : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc640 : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc56f : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000aa833 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30f358f
0x000000000004acef : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000000503d7 : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000009f85d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000fe5f8 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000fe5f7 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000004709d : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33db8ad
0x00000000000ff9ce : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000010c71d : adc cl, byte ptr [rax - 0x7d] ; ret
0x0000000000111895 : adc cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e3a9c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x000000000009b6f4 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000009c262 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000089a65 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000008b265 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000008f955 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000004acf2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000000503da : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000000b8a74 : adc cl, byte ptr [rcx - 0x7cb7e8cc] ; ret 0x4804
0x00000000000495a1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000072854 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000000fe052 : adc cl, byte ptr [rdi - 0x76b7ffd4] ; ret 0xb6e9
0x0000000000188748 : adc cl, byte ptr [rdx - 0x7c0b000d] ; jmp rsi
0x00000000000548df : adc cl, ch ; ret
0x000000000008f310 : adc dh, bh ; ret
0x0000000000195320 : adc dh, bl ; sti ; jmp rax
0x0000000000195320 : adc dh, bl ; sti ; jmp rax
0x000000000012c73e : adc dh, dh ; ret 0x7401
0x000000000012c916 : adc dh, dh ; ret 0x7401
0x00000000001369ea : adc dh, dh ; ret 0x7401
0x000000000008156e : adc dh, dh ; ret 0xf0f
0x00000000000022e3 : adc dh, dl ; ret
0x0000000000025946 : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x000000000002869d : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000029597 : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000048f13 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000074075 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000495ec : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000017439b : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a51e : adc dword ptr [rax - 0x77], ecx ; ret
0x000000000007dfd5 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000007c83c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000b8c7f : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000d9006 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000089387 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000014aeeb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000019cc7d : adc dword ptr [rax], eax ; add al, ah ; fld1 ; call qword ptr [rdx]
0x000000000013f009 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000111449 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000147477 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad9e : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c7c8 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001493e9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014adef : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c823 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019cccd : adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19ccd6 ; jmp qword ptr [rdi]
0x000000000017433b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000006589c : adc dword ptr [rax], eax ; add dh, dh ; ret
0x000000000008103c : adc dword ptr [rax], eax ; mov edx, 0x23a ; call 0x7d289
0x0000000000029c44 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000006bc82 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c3f8 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006bc82 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c3f8 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006cbb9 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000006ca9b : adc dword ptr [rax], eax ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x000000000019cc7c : adc dword ptr [rax], r8d ; add al, ah ; fld1 ; call qword ptr [rdx]
0x000000000009731a : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000974ba : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000003b172 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d8fe8 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x00000000000d9058 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x000000000009fe87 : adc dword ptr [rcx + 7], edi ; ret
0x00000000000a05da : adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0d27 : adc dword ptr [rcx + 7], edi ; ret
0x000000000009fb22 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a0275 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a09c2 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000009fae6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000009fd20 : adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0239 : adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0473 : adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0986 : adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0bc0 : adc dword ptr [rcx - 1], edi ; ret
0x000000000013c1de : adc dword ptr [rcx], eax ; ja 0x13c212 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000010c9d6 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000009ffe9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000000a073c : adc dword ptr [rdi - 8], edi ; ret
0x00000000000a0e89 : adc dword ptr [rdi - 8], edi ; ret
0x00000000000348c4 : adc dword ptr [rdi], ecx ; ret
0x0000000000034c3b : adc dword ptr [rdi], ecx ; ret
0x000000000003488d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000034c22 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000000aa5bc : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000006bd9a : adc dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000aa6ef : adc dword ptr [rsi + 3], edx ; ret
0x00000000000aa78c : adc dword ptr [rsi + 7], edx ; ret
0x00000000000e0ff2 : adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe0f94
0x00000000000c9953 : adc dword ptr [rsi - 0x76b7ffd1], edi ; ret 0x8d48
0x00000000000aa58e : adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5af : adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5c2 : adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa697 : adc dword ptr [rsi - 1], edx ; ret
0x0000000000147476 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000aaf8a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x0000000000194e71 : adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000000dec77 : adc eax, 0x1fffffe ; ret 0x8b49
0x000000000017435b : adc eax, 0x252518 ; je 0x17436a ; ret
0x0000000000140d77 : adc eax, 0x284694 ; add rsp, 8 ; ret
0x0000000000138219 : adc eax, 0x290d82 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012ddb2 : adc eax, 0x295dc9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000012ddb2 : adc eax, 0x295dc9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001095af : adc eax, 0x2bac8c ; je 0x1095c0 ; pop rbp ; ret
0x00000000000ffa5e : adc eax, 0x2c768d ; add rsp, 8 ; ret
0x000000000008958a : adc eax, 0x33a9c9 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000000886a1 : adc eax, 0x33e172 ; add rsp, 0x18 ; ret
0x0000000000137382 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000368ad : adc eax, 0x38d7d6 ; ret
0x000000000002e196 : adc eax, 0x395d95 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002cae9 : adc eax, 0x398faf ; ret
0x000000000001f929 : adc eax, 0x3a99da ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000abc1a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001162ec : adc eax, 0x4003f ; cmove rax, rdx ; ret
0x00000000000f5f87 : adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x00000000001341cd : adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x0000000000034ab6 : adc eax, 0x540f6600 ; ret 0xf66
0x0000000000034cdc : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x0000000000034d09 : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x00000000000a6808 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000000a7f1c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000019b9a5 : adc eax, 0x77340001 ; std ; call rsp
0x0000000000147001 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000149029 : adc eax, 0x83480000 ; ret 0xe910
0x000000000014c3a3 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000234fd : adc eax, 0x83489066 ; ret
0x00000000001400ad : adc eax, 0x8348fffc ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000de2ed : adc eax, 0x8949fff4 ; ret 0x8949
0x000000000003d249 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000040541 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000040540 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000043418 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000008f197 : adc eax, 0xc71a4 ; cmove rax, rdx ; ret
0x00000000001ad04d : adc eax, 0xd300001 ; hlt ; jmp rcx
0x00000000000abf1a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000006e511 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000c18ff : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014ac4e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c640 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149209 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000e458 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000091ba : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000c42a : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004b600 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000fba5c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000001ace4d : adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x26], ah ; jmp qword ptr [rcx]
0x000000000011e2e3 : adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000a2a18 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a2b3b : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a53e8 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a550b : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000014c63f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000482f9 : adc eax, eax ; ret
0x0000000000049ed9 : adc eax, eax ; ret
0x0000000000048436 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x000000000004a016 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000183dc5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000001186a0 : adc ebp, ebx ; ret 0x1f0f
0x00000000000896d4 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000896fe : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010adac : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000010b60c : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000013d6be : adc ecx, dword ptr [rax + 0x39] ; ret
0x000000000002cb2b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x000000000007ba4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000024301 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000133bbd : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000017437f : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000175141 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000099a6d : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000b8141 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000010f484 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ac604 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000e3f55 : adc ecx, dword ptr [rbp + 0xf049044] ; xchg eax, esp ; ret 0x9848
0x0000000000127ad4 : adc ecx, dword ptr [rbx + rcx*4 + 0x25] ; ret
0x00000000000adcd9 : adc ecx, dword ptr [rcx - 0x77] ; ret 0x8b8
0x000000000012de80 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000a2be4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a55b4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a2c04 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a55d4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a2c24 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a55f4 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a2a6e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a2c44 : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a543e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a5614 : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a5774 : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000dbeda : adc ecx, edx ; call 0x42d04827
0x00000000000dbf2a : adc ecx, edx ; call 0x43d04877
0x000000000019a3f1 : adc edi, eax ; call rsp
0x0000000000199af9 : adc edi, esi ; jmp rsp
0x0000000000199af8 : adc edi, r14d ; jmp rsp
0x000000000006bc5e : adc edx, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001852de : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000199b49 : adc esi, edi ; call rsp
0x00000000001aabe1 : adc esi, edx ; jmp qword ptr [rcx]
0x000000000006ee5a : adc esi, esi ; ret 0xf20
0x000000000011703c : adc esi, esi ; ret 0xf20
0x0000000000102c93 : adc esp, ecx ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000014c822 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009fe86 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000000a05d9 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000000a0d26 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000009fb21 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000000a0274 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000000a09c1 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000009fae5 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000009fd1f : adc qword ptr [rcx - 1], rdi ; ret
0x00000000000a0238 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000000a0472 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000000a0985 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000000a0bbf : adc qword ptr [rcx - 1], rdi ; ret
0x000000000009ffe8 : adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a073b : adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a0e88 : adc qword ptr [rdi - 8], rdi ; ret
0x00000000000aa6ee : adc qword ptr [rsi + 3], rdx ; ret
0x00000000000aa78b : adc qword ptr [rsi + 7], rdx ; ret
0x00000000000aa58d : adc qword ptr [rsi - 1], rdx ; ret
0x00000000000aa5ae : adc qword ptr [rsi - 1], rdx ; ret
0x00000000000aa5c1 : adc qword ptr [rsi - 1], rdx ; ret
0x00000000000aa696 : adc qword ptr [rsi - 1], rdx ; ret
0x000000000008f283 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000006e510 : adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000149370 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000048435 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000004a015 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008f30f : adc sil, r15b ; ret
0x000000000019e21b : add ah, ah ; add byte ptr es:[rax], al ; jne 0x19e214 ; jmp qword ptr [rcx]
0x00000000001bc11b : add ah, ah ; add eax, 0x73f00002 ; clc ; call qword ptr [rdi]
0x0000000000198f2f : add ah, ah ; and ch, dh ; jmp rsp
0x000000000019b19f : add ah, ah ; cli ; jmp rsp
0x00000000001982c7 : add ah, ah ; cli ; out dx, eax ; call rsp
0x000000000019aa3f : add ah, ah ; cmp edi, ecx ; jmp rsp
0x00000000001969cf : add ah, ah ; ja 0x1969c0 ; call rsp
0x00000000001a761b : add ah, ah ; mov edx, 0x75800000 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001bab1b : add ah, ah ; out dx, eax ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001b0f1b : add ah, ah ; push rbx ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0f20 ; jmp qword ptr [rcx]
0x000000000019b34f : add ah, ah ; push rdi ; cli ; jmp rsp
0x000000000019b9d7 : add ah, ah ; ret 0xfffd
0x0000000000198217 : add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x00000000001a531b : add ah, ah ; xchg eax, edi ; add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000001a931b : add ah, ah ; xlatb ; add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x0000000000196ddf : add ah, al ; add ebp, edx ; jmp rsp
0x00000000001b0afb : add ah, al ; add qword ptr [r8], r8 ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001adbfb : add ah, al ; and byte ptr [rcx], al ; add al, dl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000019f6fb : add ah, al ; cmp eax, dword ptr [rax] ; add al, ah ; sub dl, ch ; jmp rax
0x00000000001a94fb : add ah, al ; fld dword ptr [rax] ; add byte ptr [rax], dl ; xor cl, dh ; jmp qword ptr [rcx]
0x000000000019a117 : add ah, al ; in al, 0xf7 ; jmp qword ptr [rbx + rax*8]
0x000000000019b4a7 : add ah, al ; jg 0x19b4a9 ; call rsp
0x00000000001b2bfb : add ah, al ; jo 0x1b2c08 ; add al, dl ; and dh, dh ; jmp qword ptr [rsi]
0x000000000019ace7 : add ah, al ; mov bh, cl ; call rsp
0x000000000019985f : add ah, al ; mov bl, 0xf6 ; jmp rsp
0x000000000019928f : add ah, al ; or al, 0xf6 ; call rsp
0x000000000019b3ff : add ah, al ; pop rbp ; cli ; call rsp
0x00000000001a63fb : add ah, al ; test al, 0 ; add byte ptr [rax + 0x4d], dl ; out dx, al ; call qword ptr [rax]
0x00000000001983cf : add ah, al ; test eax, esi ; jmp rsp
0x00000000001aeefb : add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ace33 : add ah, bh ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x00000000001a11ab : add ah, bh ; add byte ptr [rax], al ; add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000000aac1e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac3e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001b0933 : add ah, bh ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0833 : add ah, bh ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b0633 : add ah, bh ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001aa033 : add ah, bh ; in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001954f5 : add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000aacd6 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aabfd : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001953f1 : add ah, bh ; jmp rax
0x00000000001b0c33 : add ah, bh ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0c38 ; jmp qword ptr [rcx]
0x00000000001953d1 : add ah, bh ; push rax ; add esp, edi ; call rax
0x00000000001b2660 : add ah, bh ; ret
0x00000000001a0b13 : add ah, bl ; add byte ptr [r8], r8b ; push rbx ; jmp 0x1a0b23
0x00000000001afd13 : add ah, bl ; add dword ptr [r8], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000001b0b13 : add ah, bl ; add qword ptr [r8], r8 ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001adc13 : add ah, bl ; and byte ptr [rcx], al ; add al, ch ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001af513 : add ah, bl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001af913 : add ah, bl ; cmp eax, 0x1e280001 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2c13 : add ah, bl ; jo 0x1b2c20 ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6c13 : add ah, bl ; mov al, 0 ; add byte ptr [rax], bh ; mov cl, 0xee ; call qword ptr [rax]
0x00000000001a4613 : add ah, bl ; mov al, byte ptr [rax] ; add al, ch ; jae 0x1a4610 ; call qword ptr [rcx]
0x000000000019d413 : add ah, bl ; sbb byte ptr [rax], al ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rdx]
0x00000000001a3fe7 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001a41b8 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x00000000000aa6ea : add ah, byte ptr [rdx - 0xf] ; jl 0xaa73f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000a2a6b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a2c41 : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a543b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a5611 : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001b0a23 : add ah, ch ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adf23 : add ah, ch ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000187e18 : add ah, ch ; int1 ; call qword ptr [rax]
0x0000000000187e08 : add ah, ch ; int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x00000000001a6e23 : add ah, ch ; mov dl, 0 ; add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x00000000001b2b23 : add ah, ch ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b244d
0x00000000001a6b23 : add ah, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a6723 : add ah, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jae 0x1a6721 ; jmp qword ptr [rdx]
0x00000000001b3c03 : add ah, cl ; add byte ptr [rcx], 0 ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b0103 : add ah, cl ; add dword ptr [r8], r8d ; cmc ; jmp rax
0x00000000001b0803 : add ah, cl ; add qword ptr [rax], r8 ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0603 : add ah, cl ; add qword ptr [rax], rax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001aa003 : add ah, cl ; in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; jmp qword ptr [rdi]
0x00000000001a6d03 : add ah, cl ; mov cl, 0 ; add byte ptr [rax], bl ; fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001b2a03 : add ah, cl ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b0c03 : add ah, cl ; push rax ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019e403 : add ah, cl ; sub byte ptr [rax], al ; add byte ptr [rax], bl ; jp 0x19e3fc ; jmp qword ptr [rcx]
0x00000000001ab203 : add ah, cl ; test byte ptr [rax], 0 ; call 0x281aa43e
0x00000000001aec03 : add ah, cl ; xor byte ptr [rcx], al ; add byte ptr [rax], bh ; jrcxz 0x1aec07 ; jmp qword ptr [rcx]
0x00000000001acc2b : add ah, dh ; adc byte ptr [rcx], al ; add al, ah ; ret
0x00000000001b032b : add ah, dh ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001aea2b : add ah, dh ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af22b : add ah, dh ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0b2b : add ah, dh ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001ade2b : add ah, dh ; and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001af92b : add ah, dh ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x00000000001a622b : add ah, dh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x00000000001b2c2b : add ah, dh ; jo 0x1b2c38 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a0f7 : add ah, dh ; jrcxz 0x19a0f8 ; inc esp ; ret 1
0x00000000001a682b : add ah, dh ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x00000000001aa22b : add ah, dh ; out 0, al ; add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x000000000019b9df : add ah, dh ; ret 0xfffd
0x000000000019aea7 : add ah, dh ; sar cl, 1 ; call rsp
0x00000000001ad82b : add ah, dh ; sbb al, 1 ; add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x0000000000199c47 : add ah, dh ; sbb edi, esi ; call rsp
0x00000000001a070b : add ah, dl ; add byte ptr [r8], al ; adc byte ptr [rdi], ah ; jmp 0x1a071b
0x00000000001a1483 : add ah, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x3c], bl ; in al, dx ; jmp rbx
0x00000000001b0a0b : add ah, dl ; add qword ptr [rax], r8 ; loopne 0x1b0a88 ; cmc ; jmp qword ptr [rcx]
0x000000000019e00b : add ah, dl ; and al, 0 ; add byte ptr [rax], al ; jb 0x19e004 ; jmp qword ptr [rsi]
0x00000000001970ff : add ah, dl ; in eax, 0xea ; jmp rsp
0x00000000001abb0b : add ah, dl ; inc dword ptr [rax] ; add al, ah ; ret
0x0000000000197e17 : add ah, dl ; jo 0x197e0d ; jmp rsp
0x0000000000197cc7 : add ah, dl ; pop rax ; out dx, al ; call rsp
0x00000000001b1b0b : add ah, dl ; pop rdi ; add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001b0d0b : add ah, dl ; push rcx ; add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b120b : add ah, dl ; push rsi ; add dword ptr [rax], eax ; push rax ; jnp 0x1b1210 ; jmp qword ptr [rcx]
0x000000000019b74f : add ah, dl ; salc ; cli ; call rsp
0x00000000001ad80b : add ah, dl ; sbb al, 1 ; add al, dl ; stc ; call qword ptr [rax]
0x000000000019796f : add ah, dl ; std ; in eax, dx ; call rsp
0x00000000001ae80b : add ah, dl ; sub al, 1 ; add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x00000000001ae60b : add ah, dl ; sub al, byte ptr [rcx] ; add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x000000000004b2d8 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f12f3 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000047463 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000047462 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001270d1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001270d0 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122530 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000001455bd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001465e7 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148177 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148176 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014babe : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d548 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d547 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a109 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bb0f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455e1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001455e0 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146615 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000143a2f : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000000b320 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000103692 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000010370b : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001037b7 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103830 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103910 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103989 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103a35 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103aae : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103bbf : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103c38 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103ce4 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103d5d : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103e3d : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103eb6 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103f62 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103fdb : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000000abfa3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d95ba : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d87bc : add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000134abb : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000134ec8 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006a96f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001bd099 : add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x0000000000026e51 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000662b5 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x00000000000662b4 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x000000000007e54d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x000000000007e5c5 : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x000000000007e5f8 : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x000000000007e5f7 : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000080941 : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000081f57 : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010eee5 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x0000000000040f83 : add al, 0 ; add cl, ch ; ret 0xffec
0x000000000007f0c6 : add al, 0 ; add dh, dh ; ret
0x000000000007f416 : add al, 0 ; add dh, dh ; ret
0x0000000000122983 : add al, 0 ; add dh, dh ; ret 0xf04
0x00000000001162ef : add al, 0 ; cmove rax, rdx ; ret
0x00000000001162ef : add al, 0 ; cmove rax, rdx ; ret
0x000000000009ea94 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ea93 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000001419db : add al, 0 ; mov edx, 0x159 ; call 0x2dc49
0x000000000009ea04 : add al, 0 ; mov rax, rdi ; ret
0x000000000009ea03 : add al, 0 ; mov rax, rdi ; ret
0x0000000000045afa : add al, 0x10 ; add bl, dh ; ret
0x0000000000130340 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x000000000002da69 : add al, 0x10 ; ret
0x000000000002dab4 : add al, 0x10 ; ret
0x000000000010acd5 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b545 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x000000000010adab : add al, 0x11 ; ret
0x000000000010b60b : add al, 0x11 ; ret
0x00000000000aac6d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000004e619 : add al, 0x13 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000019b9dc : add al, 0x17 ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x000000000009f5b1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008b12a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000008d39f : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000145a6a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000146a4f : add al, 0x17 ; sub eax, ecx ; ret
0x000000000014f80a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000150f6f : add al, 0x17 ; sub eax, ecx ; ret
0x000000000013a97a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000001177bd : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000000c9d0f : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000096ce0 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000bf1e5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbf1b6
0x00000000000cc271 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000133759 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f693d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000f693c : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000010a3a4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a405 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000004698a : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000089591 : add al, 0x24 ; call qword ptr [rdx]
0x0000000000198a20 : add al, 0x24 ; jmp rsp
0x00000000000ac673 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000020bea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002e0fa : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002e11a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002e13a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001196da : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000143d6a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000107413 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cd225 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000002084c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000020b47 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002272c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000229bc : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002ae13 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002ae58 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b135 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b2fd : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b41d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b450 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b475 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d17d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d1f2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d586 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d79d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d7ca : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d875 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d895 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002dbfa : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002e29d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002e375 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002e4f1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002e5d5 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002f2e5 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002f308 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002f600 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002f97f : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002fb89 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000300e1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003010c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003012e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030157 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000301b5 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000301e0 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030276 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000302a1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003047d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000304a8 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000305b8 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000305f6 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030715 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003073d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000308c8 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000308e7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003269e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000326fd : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003a010 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000045105 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000047769 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000477ac : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000477d8 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000050023 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000058ba6 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000005b7d7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000005be81 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000063b34 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000006f1f3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000006f54b : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007ac83 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007af13 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007be25 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007c247 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007c714 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000008d804 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000008d9cb : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000008da24 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000008da54 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ba06d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ba09b : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c767d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7ac2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7af5 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7c55 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7c85 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7e2f : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7e60 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c969e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cc66b : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cd30b : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cd37b : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cd5d9 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cd659 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ef5dc : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000f3177 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000f3649 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fd1f2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fd262 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fd2ed : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fd39d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fe4cc : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000010547c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001054a8 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000105618 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000105648 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000114ec3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000115b9c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000012b9ac : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000138294 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000144508 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035321 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000c765d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114ace : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114afe : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114b2e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114b5e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114b8e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114bbe : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114bee : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114c1e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114c4e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114c7e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114cae : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114cde : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114d0e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114d3e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114d6e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114d9e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114dce : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114dfe : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114e2e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114e5e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114e8e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114eee : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114f1e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114f4e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114f7e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114fae : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114fde : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000011500e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000011503e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000011506e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000012837c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001443ce : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001443fe : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000014442e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000014445e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000014448e : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001444be : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001744ae : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002f6d2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000004d397 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000058b63 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000001ae23c : add al, 0x27 ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019b158 : add al, 0x29 ; cli ; jmp rsp
0x000000000002a21d : add al, 0x29 ; ret 0x8941
0x000000000002a21c : add al, 0x29 ; ret 0x8941
0x00000000000a9c19 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008d5ee : add al, 0x31 ; ret
0x0000000000122214 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000198050 : add al, 0x32 ; out dx, eax ; call rsp
0x000000000019f23c : add al, 0x37 ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x000000000008d4ea : add al, 0x37 ; ret
0x00000000000f5c1d : add al, 0x39 ; ret
0x00000000000f5cae : add al, 0x39 ; ret
0x00000000000d79cf : add al, 0x39 ; ret 0xec7f
0x0000000000072d5f : add al, 0x3a ; ret
0x000000000007c00f : add al, 0x3a ; ret
0x0000000000097354 : add al, 0x3c ; cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x000000000005c464 : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c439
0x00000000000ac916 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000208f2 : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000f5c53 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f395 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009eaa5 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a738b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a81a9 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009eab5 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a81bb : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000009ea55 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000009ea54 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000012418e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000016b049 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000016b048 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000016b05b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000016b05a : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000072163 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000072162 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000705c7 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000007074f : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000007074e : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000720a3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000015b4aa : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000015df7a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000160a9a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000710cc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071272 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000071f84 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009ea15 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e9a5 : add al, 0x48 ; mov eax, edi ; ret
0x000000000009e9b5 : add al, 0x48 ; mov eax, edi ; ret
0x000000000009e9b4 : add al, 0x48 ; mov eax, edi ; ret
0x00000000000a2ade : add al, 0x48 ; mov eax, edi ; ret
0x00000000000a2add : add al, 0x48 ; mov eax, edi ; ret
0x00000000000a2b00 : add al, 0x48 ; mov eax, edi ; ret
0x00000000000a2aff : add al, 0x48 ; mov eax, edi ; ret
0x00000000000a54ae : add al, 0x48 ; mov eax, edi ; ret
0x00000000000a54ad : add al, 0x48 ; mov eax, edi ; ret
0x00000000000a54d0 : add al, 0x48 ; mov eax, edi ; ret
0x00000000000a54cf : add al, 0x48 ; mov eax, edi ; ret
0x0000000000166d09 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000166d08 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000166d1b : add al, 0x48 ; mov eax, edi ; ret
0x0000000000166d1a : add al, 0x48 ; mov eax, edi ; ret
0x000000000008b8c4 : add al, 0x48 ; xor eax, eax ; ret
0x00000000000ad120 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000ad11f : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000001b0a3c : add al, 0x4f ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000114a24 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000001fc05 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000001fc04 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000016b057 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2afc : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000a2afb : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000a54cc : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000a54cb : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000166d17 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000166d16 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000003512d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x0000000000197da8 : add al, 0x66 ; out dx, al ; call rsp
0x00000000001bad57 : add al, 0x66 ; ret
0x0000000000197520 : add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000197df8 : add al, 0x6c ; out dx, al ; call rsp
0x00000000001a72b7 : add al, 0x71 ; ret
0x0000000000029ae2 : add al, 0x72 ; jns 0x29d4cced ; ret
0x000000000002da7d : add al, 0x72 ; or bl, dh ; ret
0x00000000001a8da7 : add al, 0x72 ; ret
0x00000000000821f4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000ac914 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000e513a : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000ac052 : add al, 0x75 ; ret
0x00000000000ac051 : add al, 0x75 ; ret
0x00000000001ab8af : add al, 0x75 ; ret
0x0000000000086537 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000fb5a2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002de30 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e079 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010aa7f : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010b330 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de50 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002e099 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010ab17 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010b3b0 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd90 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dfd9 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010a777 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010b0b0 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de10 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002e059 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010a9e7 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010b2b0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd30 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002df79 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010a527 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010aeb0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002e019 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010a8b7 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010b1b0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd70 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dfb9 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002dff9 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010a817 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010b130 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002ded0 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002df49 : add al, 0x78 ; and eax, 1 ; ret
0x000000000010a5c7 : add al, 0x78 ; and eax, 1 ; ret
0x000000000010af30 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002dd50 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002df99 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010a657 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010afb0 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002ddf0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002e039 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010a957 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010b230 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd10 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002df59 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000010a497 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000010ae30 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001a4177 : add al, 0x79 ; ret
0x00000000001a71df : add al, 0x7b ; ret
0x0000000000063886 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000aadc3 : add al, 0x81 ; je 0xaada5 ; ret
0x0000000000146ceb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001488f4 : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014ab7b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014c254 : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000aadbf : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xaada9 ; ret
0x00000000001485c3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000014a588 : add al, 0x81 ; sub eax, edx ; ret
0x000000000014bf93 : add al, 0x81 ; sub eax, edx ; ret
0x000000000014d938 : add al, 0x81 ; sub eax, edx ; ret
0x000000000009e8c9 : add al, 0x82 ; add r10, rax ; jmp r10
0x00000000000c325a : add al, 0x82 ; add rdx, r8 ; jmp rdx
0x00000000000c325a : add al, 0x82 ; add rdx, r8 ; jmp rdx
0x00000000000210b5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006bc86 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c3fc : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000c0eef : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000c105f : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000d9c19 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000e1ffc : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000f2137 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000210b5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006bc86 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c3fc : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000c0eef : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000c105f : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000d9c19 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000e1ffc : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000f2137 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000aad78 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaad68 ; ret
0x0000000000091c77 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000091c91 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000009436c : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000094391 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000001485f7 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000148611 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000014a5bc : add al, 0x82 ; sub eax, ecx ; ret
0x000000000014a5e1 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000014bfc7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000014bfe1 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000014d96c : add al, 0x82 ; sub eax, ecx ; ret
0x000000000014d991 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000163097 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000001630b1 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000001655ec : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000165611 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000026483 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000759b2 : add al, 0x83 ; loop 0x759bd ; mov eax, edx ; ret
0x0000000000077f04 : add al, 0x83 ; loopne 0x77f0d ; ret
0x00000000000ae46b : add al, 0x83 ; ret 0x4101
0x00000000000b0dcb : add al, 0x83 ; ret 0x4101
0x00000000000b355b : add al, 0x83 ; ret 0x4101
0x00000000000d5dcb : add al, 0x83 ; ret 0x4101
0x00000000000dbfc2 : add al, 0x83 ; ret 0x4801
0x00000000000dbfc1 : add al, 0x83 ; ret 0x4801
0x0000000000035d5b : add al, 0x83 ; ret 0xf701
0x0000000000118699 : add al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11866e
0x00000000000deab8 : add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000aae12 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xaae10 ; ret
0x00000000000ac94e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000adac9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000002ebb9 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000006c1d4 : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000006c94e : add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000000d221d : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000006c303 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x00000000000d3fe3 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000e008c : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000ac61e : add al, 0x87 ; test r8d, r8d ; jne 0xac5f8 ; ret
0x000000000016b046 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000016b045 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00000000000a2adb : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000a2ada : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000a54ab : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000a54aa : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000166d06 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000166d05 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000003918a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009e947 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x00000000000556a1 : add al, 0x89 ; ret 0x2944
0x000000000009e992 : add al, 0x8a ; add r10, rax ; jmp r10
0x00000000000aad7b : add al, 0x8a ; je 0xaad65 ; ret
0x00000000000a2ac4 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000a5494 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000f6ae7 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000108849 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000ac608 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000054d40 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000dea72 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000f5bd5 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000081bd4 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000003d39d : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040695 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004356c : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000001a7eb0 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a6fb6 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb61b : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000002e8ef : add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b604 : add al, 0x90 ; add rax, rdi ; jmp rax
0x00000000000dfd75 : add al, 0x90 ; add rax, rdi ; jmp rax
0x0000000000197320 : add al, 0x9a ; jmp 0x197326
0x000000000010ab87 : add al, 0xa ; ret
0x000000000010abe2 : add al, 0xa ; ret
0x000000000010b409 : add al, 0xa ; ret
0x000000000010b456 : add al, 0xa ; ret
0x00000000001986a0 : add al, 0xa7 ; int1 ; jmp rsp
0x0000000000002315 : add al, 0xaa ; ret
0x000000000002da66 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002dab1 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000013c193 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c243 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002e0b8 : add al, 0xb8 ; ret
0x000000000002e0c8 : add al, 0xb8 ; ret
0x0000000000108a76 : add al, 0xb8 ; ret
0x00000000000aabc9 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000012ddb9 : add al, 0xc2 ; jmp rax
0x000000000012ddb9 : add al, 0xc2 ; jmp rax
0x00000000000ac83b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000035f24 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00000000000c7983 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000035f67 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000004838d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x483e9
0x0000000000049f6d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x49fc9
0x000000000019f180 : add al, 0xe9 ; call qword ptr [rsi]
0x000000000002dd35 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000002ddf4 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000002df7e : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000002e03d : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000010a52c : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000010a95b : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000010aeb5 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000010b234 : add al, 0xf ; mov bh, 0xc0 ; ret
0x0000000000144dfd : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000145bf6 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000014a66b : add al, 0xf ; sub rax, r8 ; ret
0x00000000000d7c79 : add al, 0xf ; test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000663b6 : add al, 0xf ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00000000000f0caa : add al, 0xf ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00000000000d7797 : add al, 0xf ; test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000000abb25 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000abb24 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000a65db : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e45e3 : add al, 0xf ; test edx, eax ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000fdb19 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000e3f59 : add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00000000000481c8 : add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x000000000002b020 : add al, 0xf0 ; test rax, rax ; je 0x2b030 ; call rax
0x00000000000481cc : add al, 0xf1 ; xor eax, eax ; pop rbx ; ret
0x000000000018806d : add al, 0xf2 ; call rax
0x0000000000188091 : add al, 0xf2 ; call rax
0x000000000018808d : add al, 0xf2 ; inc eax ; add al, 0xf2 ; call rax
0x0000000000188095 : add al, 0xf2 ; jmp rax
0x000000000015b813 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b812 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e2e3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e2e2 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160e03 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160e02 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006b45b : add al, 0xf3 ; ret
0x00000000000f5f4b : add al, 0xf3 ; ret
0x00000000000f6c3b : add al, 0xf3 ; ret
0x000000000008f3e9 : add al, 0xf6 ; ret 0x7408
0x00000000000944b0 : add al, 0xf6 ; ret 0x7408
0x00000000001bb33c : add al, 0xf8 ; add dword ptr [rax], eax ; jo 0x1bb2de ; sti ; jmp qword ptr [rdx]
0x0000000000194e25 : add al, 0xfb ; call rax
0x00000000001954dd : add al, 0xfc ; jmp qword ptr [rax]
0x000000000002f33d : add al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000198215 : add al, 1 ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x00000000001238cb : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001238cb : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000abb58 : add al, 1 ; add byte ptr [rax], al ; ret
0x0000000000123913 : add al, 1 ; add byte ptr [rax], al ; ret
0x000000000005cb58 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000d5c23 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c22 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b419 : add al, 1 ; ret
0x000000000006b418 : add al, 1 ; ret
0x000000000006b47a : add al, 1 ; xor eax, eax ; ret
0x000000000006b479 : add al, 1 ; xor eax, eax ; ret
0x00000000001a404f : add al, 2 ; hlt ; ret
0x00000000001ac9ff : add al, 2 ; jle 0x1aca11 ; ret
0x000000000009f49c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x000000000016f737 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x00000000000004b6 : add al, 4 ; ret 0x6080
0x00000000000d89b2 : add al, 6 ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000000a6728 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000089afd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000089c1b : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000d5191 : add al, 7 ; mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd51c0
0x00000000000967a8 : add al, 7 ; ret
0x00000000000968c6 : add al, 7 ; ret
0x000000000009eb7f : add al, 7 ; test r8b, r8b ; jne 0x9eb68 ; ret
0x0000000000077403 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000009f71f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000009f7e5 : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001ab12f : add al, ah ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b29ef : add al, ah ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019cc7f : add al, ah ; fld1 ; call qword ptr [rdx]
0x00000000001b0dcf : add al, ah ; jae 0x1b0dcc ; jmp qword ptr [rcx]
0x000000000019df6f : add al, ah ; jo 0x19df60 ; call qword ptr [rcx]
0x00000000001bc6c9 : add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bc721 : add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001aa9df : add al, ah ; or edx, esi ; call rsi
0x00000000001b0a0f : add al, ah ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001abb0f : add al, ah ; ret
0x00000000001acc2f : add al, ah ; ret
0x0000000000018807 : add al, ah ; ret 0x17
0x0000000000005fd7 : add al, ah ; ret 0xc
0x000000000000781f : add al, ah ; ret 0xc
0x00000000001af3bf : add al, ah ; std ; hlt ; jmp qword ptr [rcx]
0x000000000019f6ff : add al, ah ; sub dl, ch ; jmp rax
0x00000000001ae1af : add al, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001b07bf : add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x000000000019e5bf : add al, al ; jg 0x19e5b0 ; jmp rsp
0x00000000001b117f : add al, al ; jp 0x1b117c ; jmp qword ptr [rcx]
0x00000000001ad9bf : add al, al ; nop ; hlt ; call qword ptr [rcx]
0x0000000000006637 : add al, al ; ret 0x12
0x0000000000010aef : add al, al ; ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017d407 : add al, al ; sldt word ptr [rax] ; ret
0x00000000001ab147 : add al, bh ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b2a07 : add al, bh ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019e597 : add al, bh ; jl 0x19e588 ; jmp rsp
0x00000000001860f7 : add al, bh ; loope 0x1860fe ; jmp qword ptr [rdi]
0x0000000000186177 : add al, bh ; loope 0x18617e ; jmp qword ptr [rdi]
0x00000000001861f7 : add al, bh ; loope 0x1861fe ; jmp qword ptr [rdi]
0x00000000001b64a7 : add al, bh ; loope 0x1b64aa ; call rsi
0x000000000019ecb7 : add al, bh ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000001a9a47 : add al, bh ; movsxd rsi, ecx ; call qword ptr [rdx]
0x00000000001a6387 : add al, bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0a27 : add al, bh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b90c7 : add al, bh ; ret
0x00000000001ab287 : add al, bh ; sub esi, edx ; jmp rcx
0x00000000001a7b77 : add al, bh ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001adae7 : add al, bh ; xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001b95d7 : add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001a7787 : add al, bl ; frndint ; call qword ptr [rax]
0x00000000001b07d7 : add al, bl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a4447 : add al, bl ; insd dword ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001b1197 : add al, bl ; jp 0x1b1194 ; jmp qword ptr [rcx]
0x00000000000a6a2b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001aa2f7 : add al, bl ; out dx, al ; int1 ; jmp rcx
0x00000000001afd17 : add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001a7d57 : add al, bl ; sub edx, edi ; jmp qword ptr [rdi]
0x00000000000f8d06 : add al, bpl ; ret
0x000000000019b30d : add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000014d722 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019b455 : add al, byte ptr [r8] ; and al, 0x66 ; cli ; call rsp
0x0000000000089a61 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000008b261 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000008f951 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000019b0f6 : add al, byte ptr [rax] ; adc al, 0x22 ; cli ; call rsp
0x000000000019ab0e : add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x000000000019b30e : add al, byte ptr [rax] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000019b65e : add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b156 : add al, byte ptr [rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000002de87 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000002deb7 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000007f52d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b6f92 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000107416 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008e8f3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000074155 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000013e00d : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000088102 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000842e1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000befe6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e5cb9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00000000000d779b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000008e5e9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000109f9e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000009563b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000010e55b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a2d6f
0x0000000000085e55 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000020d31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f277b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013f315 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003b4fd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b9cd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000b684a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014575d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014582d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001467c7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148317 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd5e : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d6c8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148381 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2e9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d723 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d7785 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000145781 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001467f5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000063ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000008902 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000132def : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000138f6f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000013968f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000013586f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000134fcf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000005f80d : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5baf6
0x0000000000067494 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63702
0x0000000000102882 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000ccdd2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f9a3a : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001428e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000138269 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000103b02 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000010402f : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103875 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103af3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103da2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104020 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103741 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103866 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001039bf : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103ae4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103c6e : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103d93 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103eec : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104011 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001036b9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103732 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001037de : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103857 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103937 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001039b0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103a5c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103ad5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103be6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103c5f : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103d0b : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103d84 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103e64 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103edd : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103f89 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104002 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000013a97c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000109635 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000abf83 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000adaa4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d599c : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d59d2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d59e5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d8e41 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e84fa : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000012dda6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000012e091 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000012e0a1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000132db1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000138f31 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000139651 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c80da : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c824a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000010625b : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000071910 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007690b : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000baed5 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036de9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000036de8 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e5cfa : add al, byte ptr [rax] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00000000000b9a99 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000e7603 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000171f44 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000d823e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x0000000000046076 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000005e78e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000000f38f3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007eb53 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000083527 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000809e2 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001256ce : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000024c24 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000002426c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000e0d0d : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x0000000000055930 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x0000000000055a55 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x0000000000055ae5 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000019b456 : add al, byte ptr [rax] ; and al, 0x66 ; cli ; call rsp
0x000000000019aea6 : add al, byte ptr [rax] ; hlt ; sar cl, 1 ; call rsp
0x000000000019b19e : add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x000000000019aa3e : add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x000000000019b34e : add al, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b1fe : add al, byte ptr [rax] ; je 0x19b245 ; cli ; jmp rsp
0x000000000019b6de : add al, byte ptr [rax] ; je 0x19b6b0 ; cli ; jmp rsp
0x0000000000123de2 : add al, byte ptr [rax] ; jne 0x123e36 ; mov eax, r8d ; ret
0x000000000009ea75 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001bbf46 : add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001bc066 : add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x000000000009e9e5 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000019ae26 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff9
0x000000000016e44b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e55a : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e68b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e887 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e91e : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e99c : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ea62 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016eb94 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ed9f : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ee2e : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016eea8 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016fa89 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016fb8a : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016fcbb : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016feb7 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ff4e : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ffcc : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000170092 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001701c4 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001703cf : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000017045e : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001704d8 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001bc1b6 : add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x000000000011d0d9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105e32 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000019b666 : add al, byte ptr [rax] ; ret
0x00000000001bc487 : add al, byte ptr [rax] ; ret
0x00000000001bc4b7 : add al, byte ptr [rax] ; ret
0x00000000001bc4a7 : add al, byte ptr [rax] ; ret 0x503
0x000000000019b076 : add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019ab9e : add al, byte ptr [rax] ; stc ; call rsp
0x000000000019afc6 : add al, byte ptr [rax] ; sti ; stc ; jmp rsp
0x00000000001bbf76 : add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x000000000019ab36 : add al, byte ptr [rax] ; test byte ptr [rax - 7], bl ; jmp rsp
0x000000000019b43e : add al, byte ptr [rax] ; test byte ptr [rcx - 6], ah ; call rsp
0x000000000019b43d : add al, byte ptr [rax] ; test byte ptr [rcx - 6], ah ; call rsp
0x000000000019ae66 : add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x000000000019b2de : add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019b2dd : add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019acce : add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x000000000019add6 : add al, byte ptr [rax] ; xor al, 0xb7 ; stc ; call rsp
0x000000000019afde : add al, byte ptr [rax] ; xor al, 3 ; cli ; call rsp
0x000000000009a2f9 : add al, byte ptr [rbp + 0x38] ; ret
0x00000000001ae789 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000001150de : add al, byte ptr [rcx + 0x39] ; ret
0x000000000019d110 : add al, byte ptr [rcx + 0xa] ; ret
0x0000000000035d6c : add al, byte ptr [rcx + 0xe1] ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000000ebcdf : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000000ebcde : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000005a6d9 : add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00000000000dc34d : add al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000dd9d3 : add al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000001116a5 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000001abdbd : add al, byte ptr [rcx] ; add byte ptr [rax], ah ; in eax, 0xf2 ; call qword ptr [rsi]
0x0000000000123908 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000123908 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000123927 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000001a2010 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000001a3c20 : add al, byte ptr [rdi + 0xa] ; ret
0x000000000019fe1e : add al, byte ptr [rdx] ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a288d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000001a2665 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000001a7705 : add al, byte ptr [rdx] ; ret
0x00000000001a9bb5 : add al, byte ptr [rdx] ; ret
0x00000000001b5bed : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x000000000006e575 : add al, byte ptr [rip + 0x5b000000] ; ret
0x0000000000076ff5 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000001a7eb4 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x0000000000195d24 : add al, byte ptr [rsi - 0x7a6d0004] ; cld ; jmp qword ptr [rdx]
0x000000000004cfc7 : add al, byte ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a682a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000019b155 : add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x00000000001b2c17 : add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x0000000000134d81 : add al, ch ; cdq ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001acdd7 : add al, ch ; fpatan ; jmp qword ptr [rcx]
0x000000000013cd0e : add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000187d94 : add al, ch ; int1 ; jmp qword ptr [rax]
0x00000000000b1949 : add al, ch ; int1 ; ret 0xfff7
0x00000000001a4617 : add al, ch ; jae 0x1a460c ; call qword ptr [rcx]
0x000000000010f93b : add al, ch ; jmp rdx
0x00000000000bf80e : add al, ch ; mov esp, 0x89000373 ; ret 0x3b8
0x00000000001b0ae7 : add al, ch ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000033542 : add al, ch ; pop rax ; ret
0x0000000000088e1d : add al, ch ; pop rbp ; ret 8
0x00000000001419e1 : add al, ch ; pop rcx ; ret 0xffee
0x00000000001123ca : add al, ch ; push rax ; ret 0xfff1
0x00000000001ba1a7 : add al, ch ; push rdi ; call qword ptr [rdx]
0x000000000005c487 : add al, ch ; ret
0x00000000000704b7 : add al, ch ; ret
0x000000000007aee7 : add al, ch ; ret
0x000000000007d1e7 : add al, ch ; ret
0x00000000000802b7 : add al, ch ; ret
0x00000000000819e7 : add al, ch ; ret
0x0000000000088d65 : add al, ch ; ret
0x00000000000b6077 : add al, ch ; ret
0x00000000000f4cdf : add al, ch ; ret
0x00000000000f7577 : add al, ch ; ret
0x00000000000f8d07 : add al, ch ; ret
0x00000000000f9e57 : add al, ch ; ret
0x0000000000136eb7 : add al, ch ; ret
0x0000000000136fb7 : add al, ch ; ret
0x000000000006f648 : add al, ch ; ret 0xa1
0x000000000006d3b8 : add al, ch ; ret 0xa7c
0x000000000012c048 : add al, ch ; ret 0xcd
0x000000000002aca8 : add al, ch ; ret 0xea
0x0000000000120678 : add al, ch ; ret 0xf0d5
0x00000000000e14e0 : add al, ch ; ret 0xf3e3
0x00000000000f1138 : add al, ch ; ret 0xf48b
0x00000000000e3378 : add al, ch ; ret 0xf4a8
0x00000000000bd0a8 : add al, ch ; ret 0xf7c6
0x0000000000141d48 : add al, ch ; ret 0xfb58
0x0000000000044b78 : add al, ch ; ret 0xfe90
0x00000000001242e8 : add al, ch ; ret 0xff0d
0x00000000001b2ac7 : add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2af7 : add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b27 : add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b57 : add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b87 : add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2bb7 : add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000007676d : add al, ch ; std ; imul edi, ebp, 0x89c085ff ; ret
0x00000000001ab207 : add al, ch ; sub edx, esi ; jmp qword ptr [rdi]
0x00000000001adc17 : add al, ch ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000000f3fdc : add al, ch ; xchg eax, edi ; ret 0xfff2
0x00000000001ab117 : add al, cl ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b29d7 : add al, cl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b0db7 : add al, cl ; jae 0x1b0db4 ; jmp qword ptr [rcx]
0x00000000001a6887 : add al, cl ; jg 0x1a687d ; call qword ptr [rax]
0x00000000001aed47 : add al, cl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001b09f7 : add al, cl ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0577 : add al, cl ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001a9967 : add al, cl ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001b56f7 : add al, cl ; ret
0x00000000001b9077 : add al, cl ; ret
0x00000000001af3a7 : add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1df : add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a11af : add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000001b07ef : add al, dh ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001bc11f : add al, dh ; jae 0x1bc11f ; call qword ptr [rdi]
0x00000000001bc36f : add al, dh ; jns 0x1bc36f ; call qword ptr [rcx]
0x000000000000f13f : add al, dh ; ret
0x000000000001bd47 : add al, dh ; ret
0x00000000001a7d6f : add al, dh ; sub bh, dl ; call qword ptr [rdi]
0x00000000001b2bff : add al, dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b93bf : add al, dl ; fdiv st(7) ; jmp rdi
0x00000000001acdbf : add al, dl ; fpatan ; jmp qword ptr [rcx]
0x00000000001b0d0f : add al, dl ; jb 0x1b0d0c ; jmp qword ptr [rcx]
0x00000000001a49af : add al, dl ; jg 0x1a49a4 ; jmp qword ptr [rbx]
0x00000000001a794f : add al, dl ; jle 0x1a7946 ; call qword ptr [rdi]
0x00000000001a647f : add al, dl ; out dx, al ; call qword ptr [rdx]
0x00000000001b0acf : add al, dl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b032f : add al, dl ; push rbx ; cmc ; call qword ptr [rdx]
0x0000000000010f3f : add al, dl ; ret 0xa
0x00000000001ad80f : add al, dl ; stc ; call qword ptr [rax]
0x00000000001add3f : add al, dl ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001adbff : add al, dl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001954f9 : add bh, ah ; jmp rax
0x00000000001954d9 : add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x000000000012afb2 : add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000218ff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000edbcd : add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000017513f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000140ec9 : add bh, bh ; and eax, 0x281a70 ; ret
0x00000000001af450 : add bh, bh ; hlt ; call rsi
0x00000000001bc5e4 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x000000000013225c : add bh, bh ; loope 0x1321f5 ; ret
0x000000000007a3da : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000bb1ea : add bh, bh ; ret
0x00000000000bb205 : add bh, bh ; ret
0x00000000000cdbbc : add bh, bh ; ret
0x00000000000cdc14 : add bh, bh ; ret
0x00000000001952a0 : add bh, bl ; sti ; jmp rax
0x00000000000f68d2 : add bh, byte ptr [rax + 0x16] ; jbe 0xf68e9 ; ret
0x000000000004a080 : add bh, byte ptr [rax + 1] ; ret
0x000000000004a140 : add bh, byte ptr [rax + 1] ; ret
0x0000000000055768 : add bh, byte ptr [rax + 1] ; ret
0x00000000001323c3 : add bh, byte ptr [rax + 1] ; ret
0x00000000001323fc : add bh, byte ptr [rax + 1] ; ret
0x000000000013242c : add bh, byte ptr [rax + 1] ; ret
0x000000000013245c : add bh, byte ptr [rax + 1] ; ret
0x00000000001350c3 : add bh, byte ptr [rax + 1] ; ret
0x00000000001350f9 : add bh, byte ptr [rax + 1] ; ret
0x0000000000135121 : add bh, byte ptr [rax + 1] ; ret
0x0000000000135149 : add bh, byte ptr [rax + 1] ; ret
0x0000000000135943 : add bh, byte ptr [rax + 1] ; ret
0x000000000013597f : add bh, byte ptr [rax + 1] ; ret
0x00000000001359a0 : add bh, byte ptr [rax + 1] ; ret
0x00000000001359c0 : add bh, byte ptr [rax + 1] ; ret
0x00000000001359f8 : add bh, byte ptr [rax + 1] ; ret
0x0000000000078962 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x00000000000c83f3 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000003545b : add bh, byte ptr [rax - 1] ; ret
0x000000000003574b : add bh, byte ptr [rax - 1] ; ret
0x00000000000357bb : add bh, byte ptr [rax - 1] ; ret
0x00000000000357fb : add bh, byte ptr [rax - 1] ; ret
0x000000000007835e : add bh, byte ptr [rax - 1] ; ret
0x00000000000bc453 : add bh, byte ptr [rax - 1] ; ret
0x00000000000c966b : add bh, byte ptr [rax - 1] ; ret
0x00000000000cbffb : add bh, byte ptr [rax - 1] ; ret
0x00000000000cc093 : add bh, byte ptr [rax - 1] ; ret
0x00000000000cc183 : add bh, byte ptr [rax - 1] ; ret
0x00000000000cd2db : add bh, byte ptr [rax - 1] ; ret
0x00000000000cd34b : add bh, byte ptr [rax - 1] ; ret
0x00000000000cd59b : add bh, byte ptr [rax - 1] ; ret
0x00000000000cd61b : add bh, byte ptr [rax - 1] ; ret
0x00000000000f6bfb : add bh, byte ptr [rax - 1] ; ret
0x00000000000f6c4b : add bh, byte ptr [rax - 1] ; ret
0x00000000000f6c9b : add bh, byte ptr [rax - 1] ; ret
0x00000000000f6cfb : add bh, byte ptr [rax - 1] ; ret
0x00000000000f6d5b : add bh, byte ptr [rax - 1] ; ret
0x00000000000f6db3 : add bh, byte ptr [rax - 1] ; ret
0x00000000000f6f93 : add bh, byte ptr [rax - 1] ; ret
0x00000000000f768b : add bh, byte ptr [rax - 1] ; ret
0x00000000000fbaeb : add bh, byte ptr [rax - 1] ; ret
0x00000000000fbb3b : add bh, byte ptr [rax - 1] ; ret
0x00000000000fc293 : add bh, byte ptr [rax - 1] ; ret
0x00000000000fc7bb : add bh, byte ptr [rax - 1] ; ret
0x00000000000fd1bb : add bh, byte ptr [rax - 1] ; ret
0x00000000000fd22b : add bh, byte ptr [rax - 1] ; ret
0x00000000000fd2ab : add bh, byte ptr [rax - 1] ; ret
0x00000000000fd35b : add bh, byte ptr [rax - 1] ; ret
0x00000000000fd8ab : add bh, byte ptr [rax - 1] ; ret
0x00000000000fddb5 : add bh, byte ptr [rax - 1] ; ret
0x00000000000fddd5 : add bh, byte ptr [rax - 1] ; ret
0x00000000000fefd3 : add bh, byte ptr [rax - 1] ; ret
0x00000000000ff063 : add bh, byte ptr [rax - 1] ; ret
0x00000000000ff103 : add bh, byte ptr [rax - 1] ; ret
0x00000000000ff15b : add bh, byte ptr [rax - 1] ; ret
0x00000000000ff1e5 : add bh, byte ptr [rax - 1] ; ret
0x00000000001056db : add bh, byte ptr [rax - 1] ; ret
0x000000000010739b : add bh, byte ptr [rax - 1] ; ret
0x00000000001075db : add bh, byte ptr [rax - 1] ; ret
0x000000000010768b : add bh, byte ptr [rax - 1] ; ret
0x00000000001076cb : add bh, byte ptr [rax - 1] ; ret
0x000000000010888b : add bh, byte ptr [rax - 1] ; ret
0x0000000000108933 : add bh, byte ptr [rax - 1] ; ret
0x00000000001089e3 : add bh, byte ptr [rax - 1] ; ret
0x0000000000115843 : add bh, byte ptr [rax - 1] ; ret
0x0000000000115905 : add bh, byte ptr [rax - 1] ; ret
0x0000000000140c75 : add bh, byte ptr [rax - 1] ; ret
0x00000000001a2b0c : add bh, byte ptr [rbp + 0x41380e0a] ; ret
0x0000000000172312 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000109e9f : add bh, byte ptr [rcx] ; ret
0x00000000001aca00 : add bh, byte ptr [rsi + 0xa] ; ret
0x0000000000187ecc : add bh, ch ; int1 ; call qword ptr [rax]
0x00000000001a4d81 : add bh, ch ; jmp rsp
0x00000000001bd097 : add bh, cl ; add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000d4825 : add bh, dh ; dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00000000000d729d : add bh, dh ; ret
0x000000000009d4f1 : add bh, dh ; ret 0
0x000000000009d4fd : add bh, dh ; ret 0
0x000000000009d9d2 : add bh, dh ; ret 0
0x000000000009d9de : add bh, dh ; ret 0
0x000000000009e40c : add bh, dh ; ret 0
0x000000000009e418 : add bh, dh ; ret 0
0x0000000000036882 : add bl, al ; cmp byte ptr [rax], al ; ret
0x00000000000abc99 : add bl, al ; lea rax, qword ptr [rip + 0xc210e] ; ret
0x00000000000ac87d : add bl, al ; lea rax, qword ptr [rip + 0xc5aaa] ; ret
0x000000000008ebdd : add bl, al ; lea rax, qword ptr [rip + 0xe1fda] ; ret
0x000000000012391e : add bl, al ; mov eax, 0x100 ; ret
0x0000000000123924 : add bl, al ; mov eax, 0x102 ; ret
0x00000000000cea3c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000adaa1 : add bl, al ; mov eax, 2 ; ret
0x00000000000d95bd : add bl, al ; mov eax, 3 ; ret
0x00000000000d95b7 : add bl, al ; mov eax, 4 ; ret
0x00000000000877a4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000758bc : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000cda0c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000fc32d : add bl, al ; nop ; xor eax, eax ; ret
0x00000000001359fd : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000132461 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001434fa : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000895dc : add bl, al ; ret
0x0000000000123916 : add bl, al ; ret
0x0000000000168c7e : add bl, al ; ret
0x000000000013514e : add bl, al ; xor eax, eax ; ret
0x0000000000194e11 : add bl, bh ; call rax
0x000000000018a4f7 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001a9e07 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000001a9e4f : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x000000000019db9d : add bl, byte ptr [rax + 0xa] ; ret
0x000000000019db9d : add bl, byte ptr [rax + 0xa] ; ret
0x00000000001b2855 : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000735aa : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a2637 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000001a266f : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000001b5958 : add bl, byte ptr [rdi + 0x41280e0a] ; ret
0x00000000001a9ec5 : add bl, byte ptr [rdx + 0xa] ; ret
0x00000000001a9ec5 : add bl, byte ptr [rdx + 0xa] ; ret
0x0000000000195838 : add bl, byte ptr [rsi - 4] ; call qword ptr [rdx + 0x22fffc5d]
0x00000000001bcd67 : add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x000000000007b5dd : add bl, ch ; fucomp st(0) ; ret
0x0000000000126a74 : add bl, ch ; leave ; mov eax, 0x200000 ; jmp 0x126a49
0x00000000000bf1ea : add bl, ch ; ret 0x1f0f
0x0000000000126a7b : add bl, ch ; ret 0xb8
0x00000000000a6ddf : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a85ef : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a6def : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000a85ff : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000034cdd : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034d0a : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000020582 : add bl, dh ; ret
0x000000000002bd57 : add bl, dh ; ret
0x000000000002cb3e : add bl, dh ; ret
0x000000000002de89 : add bl, dh ; ret
0x000000000002deb9 : add bl, dh ; ret
0x00000000000330bf : add bl, dh ; ret
0x0000000000045a37 : add bl, dh ; ret
0x0000000000045a3f : add bl, dh ; ret
0x0000000000045afc : add bl, dh ; ret
0x000000000006b4be : add bl, dh ; ret
0x000000000006dcbc : add bl, dh ; ret
0x000000000006f299 : add bl, dh ; ret
0x00000000000758cf : add bl, dh ; ret
0x00000000000773f4 : add bl, dh ; ret
0x00000000000791cf : add bl, dh ; ret
0x000000000007a9cc : add bl, dh ; ret
0x000000000007bb20 : add bl, dh ; ret
0x000000000007caff : add bl, dh ; ret
0x000000000007cbf9 : add bl, dh ; ret
0x0000000000084013 : add bl, dh ; ret
0x00000000000840af : add bl, dh ; ret
0x0000000000088f0f : add bl, dh ; ret
0x000000000008b45f : add bl, dh ; ret
0x0000000000095d07 : add bl, dh ; ret
0x0000000000095d0f : add bl, dh ; ret
0x000000000009eaef : add bl, dh ; ret
0x000000000009eb8f : add bl, dh ; ret
0x00000000000ac0af : add bl, dh ; ret
0x00000000000ac78f : add bl, dh ; ret
0x00000000000ada97 : add bl, dh ; ret
0x00000000000bf6f4 : add bl, dh ; ret
0x00000000000d1687 : add bl, dh ; ret
0x00000000000d168f : add bl, dh ; ret
0x00000000000ea983 : add bl, dh ; ret
0x00000000000fe56f : add bl, dh ; ret
0x00000000001014af : add bl, dh ; ret
0x0000000000104937 : add bl, dh ; ret
0x000000000010cc2f : add bl, dh ; ret
0x00000000001161ff : add bl, dh ; ret
0x00000000001235c7 : add bl, dh ; ret
0x0000000000123ff7 : add bl, dh ; ret
0x00000000001266af : add bl, dh ; ret
0x000000000012b7cf : add bl, dh ; ret
0x000000000012beef : add bl, dh ; ret
0x000000000012beff : add bl, dh ; ret
0x000000000012bf1f : add bl, dh ; ret
0x000000000012e0af : add bl, dh ; ret
0x000000000013376f : add bl, dh ; ret
0x0000000000133fff : add bl, dh ; ret
0x0000000000134fdf : add bl, dh ; ret
0x000000000013587f : add bl, dh ; ret
0x000000000013bd6f : add bl, dh ; ret
0x000000000013be27 : add bl, dh ; ret
0x000000000013be56 : add bl, dh ; ret
0x000000000013be88 : add bl, dh ; ret
0x000000000013beb9 : add bl, dh ; ret
0x000000000013c707 : add bl, dh ; ret
0x0000000000140ecf : add bl, dh ; ret
0x000000000014137f : add bl, dh ; ret
0x000000000014355f : add bl, dh ; ret
0x0000000000173d5f : add bl, dh ; ret
0x0000000000173d9f : add bl, dh ; ret
0x00000000001745ab : add bl, dh ; ret
0x000000000017483f : add bl, dh ; ret
0x000000000017486f : add bl, dh ; ret
0x000000000017489f : add bl, dh ; ret
0x00000000001748cf : add bl, dh ; ret
0x00000000001748ff : add bl, dh ; ret
0x00000000001750f1 : add bl, dh ; ret
0x00000000000330be : add bl, sil ; ret
0x00000000001161fe : add bl, sil ; ret
0x00000000001235c6 : add bl, sil ; ret
0x000000000013376e : add bl, sil ; ret
0x00000000001aa04b : add byte ptr [0xffffffffe8600000], dl ; int1 ; call qword ptr [rbx]
0x00000000000cdb77 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000051fe7 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc23e67f9
0x0000000000023de5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000001a070d : add byte ptr [r8], al ; adc byte ptr [rdi], ah ; jmp 0x1a0719
0x00000000001a06bd : add byte ptr [r8], al ; jmp 0x1a06c9
0x0000000000036e8d : add byte ptr [r8], r8b ; add rsp, 8 ; ret
0x00000000001a0a5d : add byte ptr [r8], r8b ; nop ; push rax ; jmp 0x1a0a69
0x00000000001a0b15 : add byte ptr [r8], r8b ; push rbx ; jmp 0x1a0b21
0x000000000008779f : add byte ptr [rax + 0x16], bh ; ret
0x0000000000115987 : add byte ptr [rax + 0x16], bh ; ret
0x0000000000142cad : add byte ptr [rax + 0x16], bh ; ret
0x00000000001baeb7 : add byte ptr [rax + 0x16], cl ; clc ; jmp qword ptr [rcx]
0x00000000001bc71c : add byte ptr [rax + 0x1809], dh ; loopne 0x1bc736 ; ret 0xa
0x00000000001bc6c4 : add byte ptr [rax + 0x180a], dh ; loopne 0x1bc6df ; ret 0xb
0x00000000001a6bb7 : add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000001af92f : add byte ptr [rax + 0x1e], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a91f7 : add byte ptr [rax + 0x1f], ch ; int1 ; call qword ptr [rsi]
0x0000000000034bab : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000001a06bf : add byte ptr [rax + 0x26], al ; jmp 0x1a06c7
0x0000000000172a7f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000032857 : add byte ptr [rax + 0x29], cl ; ret
0x000000000003294b : add byte ptr [rax + 0x29], cl ; ret
0x00000000000329db : add byte ptr [rax + 0x29], cl ; ret
0x0000000000032a43 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000055b8d : add byte ptr [rax + 0x29], cl ; ret
0x0000000000097b2d : add byte ptr [rax + 0x29], cl ; ret
0x00000000000981cf : add byte ptr [rax + 0x29], cl ; ret
0x00000000000983ed : add byte ptr [rax + 0x29], cl ; ret
0x000000000009933f : add byte ptr [rax + 0x29], cl ; ret
0x000000000009a42f : add byte ptr [rax + 0x29], cl ; ret
0x000000000009b58e : add byte ptr [rax + 0x29], cl ; ret
0x0000000000122b0c : add byte ptr [rax + 0x29], cl ; ret
0x00000000000e3a32 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c1504 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002944a : add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000007f085 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000028552 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000001a5f0f : add byte ptr [rax + 0x29], dh ; out dx, al ; jmp qword ptr [rdi]
0x000000000012fd7d : add byte ptr [rax + 0x31], cl ; ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x00000000001a964f : add byte ptr [rax + 0x35], al ; int1 ; jmp rdi
0x0000000000045b6c : add byte ptr [rax + 0x39], cl ; ret
0x0000000000045be3 : add byte ptr [rax + 0x39], cl ; ret
0x0000000000047086 : add byte ptr [rax + 0x39], cl ; ret
0x000000000004b879 : add byte ptr [rax + 0x39], cl ; ret
0x000000000004bab1 : add byte ptr [rax + 0x39], cl ; ret
0x000000000004c017 : add byte ptr [rax + 0x39], cl ; ret
0x000000000004c4e7 : add byte ptr [rax + 0x39], cl ; ret
0x000000000004c671 : add byte ptr [rax + 0x39], cl ; ret
0x000000000004c73e : add byte ptr [rax + 0x39], cl ; ret
0x00000000000575a7 : add byte ptr [rax + 0x39], cl ; ret
0x000000000006f0bf : add byte ptr [rax + 0x39], cl ; ret
0x0000000000078183 : add byte ptr [rax + 0x39], cl ; ret
0x000000000007d55f : add byte ptr [rax + 0x39], cl ; ret
0x000000000007f104 : add byte ptr [rax + 0x39], cl ; ret
0x000000000007f52f : add byte ptr [rax + 0x39], cl ; ret
0x000000000007fe56 : add byte ptr [rax + 0x39], cl ; ret
0x00000000000812f5 : add byte ptr [rax + 0x39], cl ; ret
0x0000000000081c92 : add byte ptr [rax + 0x39], cl ; ret
0x0000000000098068 : add byte ptr [rax + 0x39], cl ; ret
0x00000000000ad175 : add byte ptr [rax + 0x39], cl ; ret
0x00000000000b6f94 : add byte ptr [rax + 0x39], cl ; ret
0x00000000000fcab2 : add byte ptr [rax + 0x39], cl ; ret
0x0000000000173fbe : add byte ptr [rax + 0x39], cl ; ret
0x00000000001752d4 : add byte ptr [rax + 0x39], cl ; ret
0x00000000000f149c : add byte ptr [rax + 0x39], cl ; ret 0x3c76
0x000000000007d9d6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007dabd : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007dc57 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000115558 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000bdc83 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000002bdbe : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000eff3a : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000f13c4 : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000f15b6 : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000f3fc1 : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000007d997 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000001152e1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00000000001153a0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000008873b : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00000000001a6b27 : add byte ptr [rax + 0x3e], bl ; cli ; call qword ptr [rax]
0x00000000001946b5 : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x0000000000075f86 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000076e76 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000001bb58f : add byte ptr [rax + 0x47], dl ; clc ; call qword ptr [rbx]
0x000000000019d9d7 : add byte ptr [rax + 0x4a], bh ; jmp 0x1b9ce3
0x00000000001b0107 : add byte ptr [rax + 0x4b], cl ; cmc ; jmp rax
0x00000000001a3df7 : add byte ptr [rax + 0x4d], ch ; in eax, dx ; call qword ptr [rax]
0x00000000001a63ff : add byte ptr [rax + 0x4d], dl ; out dx, al ; call qword ptr [rax]
0x00000000001a0b17 : add byte ptr [rax + 0x53], cl ; jmp 0x1a0b1f
0x0000000000070675 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000001b05ef : add byte ptr [rax + 0x5b], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0607 : add byte ptr [rax + 0x5b], bl ; cmc ; jmp qword ptr [rcx]
0x000000000001f92d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000006e0d7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000107418 : add byte ptr [rax + 0x5f], bl ; call rax
0x000000000002ec94 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000002ed84 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000005bf51 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e60 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000e627f : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000f2628 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000f37fd : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000134a43 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e44 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x000000000006cbba : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000852e7 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000000ce04a : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000063883 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000006bc83 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c3f9 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000e1ff9 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000f2134 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006bc83 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c3f9 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000e1ff9 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000f2134 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c94b : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000000d221a : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000002e8ec : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b601 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00000000000dfd72 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00000000000aabc6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x00000000000f2e5b : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00000000000f3779 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000033296 : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000004b2da : add byte ptr [rax + 0x63], cl ; ret
0x00000000000563e4 : add byte ptr [rax + 0x63], cl ; ret
0x00000000000b062b : add byte ptr [rax + 0x63], cl ; ret
0x00000000000b5ad3 : add byte ptr [rax + 0x63], cl ; ret
0x00000000000df11e : add byte ptr [rax + 0x63], cl ; ret
0x0000000000123d17 : add byte ptr [rax + 0x63], cl ; ret
0x00000000001345ff : add byte ptr [rax + 0x63], cl ; ret
0x000000000006bd6a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000113075 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000b2e2f : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000000000b2e2e : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x0000000000072d2f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000dd298 : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000e919f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004617d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000004b64c : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000006ca9c : add byte ptr [rax + 0x63], cl ; xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00000000000cd23f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000000cd25f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000cd24f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000cd26f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000001b094f : add byte ptr [rax + 0x6e], al ; cmc ; jmp qword ptr [rcx]
0x00000000000cd22f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000001b0967 : add byte ptr [rax + 0x6e], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000cd22e : add byte ptr [rax + 0x6e], dil ; syscall ; ret
0x00000000001bc063 : add byte ptr [rax + 0x6f880002], ch ; clc ; call rcx
0x00000000000cd47f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x000000000019cfc7 : add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001b0b77 : add byte ptr [rax + 0x70], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a6677 : add byte ptr [rax + 0x70], bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a45a7 : add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000001b0caf : add byte ptr [rax + 0x72], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0cc7 : add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a6727 : add byte ptr [rax + 0x73], bl ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0d87 : add byte ptr [rax + 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000089a5f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000008b25f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000008f94f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001b0f37 : add byte ptr [rax + 0x76], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f1f : add byte ptr [rax + 0x76], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000071323 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000704f3 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000001b0fe7 : add byte ptr [rax + 0x78], cl ; cmc ; jmp qword ptr [rbx]
0x00000000000a732f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000019c1ff : add byte ptr [rax + 0x7b], al ; std ; jmp qword ptr [rdx]
0x00000000001b1227 : add byte ptr [rax + 0x7b], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b120f : add byte ptr [rax + 0x7b], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000cda07 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000cd95a : add byte ptr [rax + 0x7f], bh ; ret
0x000000000006d82a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000078082 : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000760aa : add byte ptr [rax + 0x8740000], al ; mov eax, esi ; pop rbx ; ret
0x0000000000075b81 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000764d1 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000bc36f : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x00000000001077ef : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x000000000007118c : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000761ec : add byte ptr [rax + 0xe740000], al ; mov eax, esi ; pop rbx ; ret
0x000000000002ddd4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000002e01d : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000010a8bb : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000010b1b4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000008d455 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000c959c : add byte ptr [rax + 0xf], cl ; ret
0x00000000000fdc98 : add byte ptr [rax + 0xf], cl ; ret
0x0000000000112f27 : add byte ptr [rax + 0xf], cl ; ret
0x0000000000078cdb : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000008e64b : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000140854 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000142f12 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000140854 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000142f12 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010f00b : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000ff571 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000517bb : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000078a2f : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000794e5 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000796a4 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000ff571 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f9706 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000be066 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000008f19b : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001162f0 : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f19b : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001162f0 : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000f967c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00000000000f967c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b98 : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025397 : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028094 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x0000000000028f64 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cbf7d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cd9ae : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cdade : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001266cc : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000cda1f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000001adb9b : add byte ptr [rax + 1], ah ; add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a58bf : add byte ptr [rax + 1], al ; out dx, al ; call qword ptr [rsi]
0x00000000001adbb3 : add byte ptr [rax + 1], bh ; add byte ptr [rax - 0x6d], bl ; hlt ; jmp qword ptr [rcx]
0x000000000012b04f : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b5 : add byte ptr [rax + 1], bh ; ret
0x000000000004a108 : add byte ptr [rax + 1], bh ; ret
0x00000000000773ef : add byte ptr [rax + 1], bh ; ret
0x00000000000895d7 : add byte ptr [rax + 1], bh ; ret
0x00000000000cea37 : add byte ptr [rax + 1], bh ; ret
0x00000000000fb5bd : add byte ptr [rax + 1], bh ; ret
0x00000000000fe65f : add byte ptr [rax + 1], bh ; ret
0x0000000000110c0f : add byte ptr [rax + 1], bh ; ret
0x000000000012b05f : add byte ptr [rax + 1], bh ; ret
0x000000000012b7af : add byte ptr [rax + 1], bh ; ret
0x00000000001322fa : add byte ptr [rax + 1], bh ; ret
0x00000000001323d6 : add byte ptr [rax + 1], bh ; ret
0x00000000001323e6 : add byte ptr [rax + 1], bh ; ret
0x0000000000132415 : add byte ptr [rax + 1], bh ; ret
0x0000000000132442 : add byte ptr [rax + 1], bh ; ret
0x00000000001350d6 : add byte ptr [rax + 1], bh ; ret
0x00000000001350e6 : add byte ptr [rax + 1], bh ; ret
0x0000000000135956 : add byte ptr [rax + 1], bh ; ret
0x0000000000135966 : add byte ptr [rax + 1], bh ; ret
0x000000000013a98f : add byte ptr [rax + 1], bh ; ret
0x000000000013b11f : add byte ptr [rax + 1], bh ; ret
0x000000000008e8f5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000aaec2 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000c00b2 : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x00000000000c00b2 : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000003c036 : add byte ptr [rax + 1], cl ; ret
0x000000000003f2f6 : add byte ptr [rax + 1], cl ; ret
0x0000000000042256 : add byte ptr [rax + 1], cl ; ret
0x0000000000064f2e : add byte ptr [rax + 1], cl ; ret
0x0000000000074157 : add byte ptr [rax + 1], cl ; ret
0x000000000007e04a : add byte ptr [rax + 1], cl ; ret
0x00000000000bd339 : add byte ptr [rax + 1], cl ; ret
0x000000000003bf0f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000003f1cf : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000004211f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000ae4ef : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000b0e4f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000b35df : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000bb5fc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000bd5f2 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000049510 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000773ee : add byte ptr [rax + 1], dil ; ret
0x000000000012e08f : add byte ptr [rax + 2], bh ; ret
0x000000000012e09f : add byte ptr [rax + 2], bh ; ret
0x0000000000132daf : add byte ptr [rax + 2], bh ; ret
0x0000000000138f2f : add byte ptr [rax + 2], bh ; ret
0x000000000013964f : add byte ptr [rax + 2], bh ; ret
0x00000000000cdbf6 : add byte ptr [rax + 7], bh ; ret
0x00000000000ec9b2 : add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000ebb18 : add byte ptr [rax + 9], cl ; ret 0x8b48
0x000000000017c3ab : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000001975c7 : add byte ptr [rax + rax*4 - 0x13], ah ; jmp rsp
0x00000000001a7b73 : add byte ptr [rax + rax*8], bh ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001a7ba3 : add byte ptr [rax + rax*8], ch ; add byte ptr [rax], bl ; mov ch, 0xfb ; call qword ptr [rax]
0x00000000000a69ac : add byte ptr [rax + rax], 0 ; ret
0x00000000000f12f2 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000b31f : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x000000000006a96e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001162ee : add byte ptr [rax + rax], al ; cmove rax, rdx ; ret
0x00000000001162ee : add byte ptr [rax + rax], al ; cmove rax, rdx ; ret
0x000000000008241c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000082d89 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000082f29 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000d7af : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00000000001a7d7f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a7d97 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a7dc7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000ac565 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001a6383 : add byte ptr [rax + rbp*4], cl ; add al, bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b13ab : add byte ptr [rax + rbx*2 + 1], dh ; add byte ptr [rax - 0x7b], ah ; cmc ; jmp rax
0x000000000019d383 : add byte ptr [rax + rbx], cl ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x0000000000070a75 : add byte ptr [rax + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000ffe1d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000045ce6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000019780f : add byte ptr [rax + rcx*8], ah ; in eax, dx ; jmp rsp
0x000000000019c34b : add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; js 0x19c343 ; jmp qword ptr [rcx]
0x00000000001af3a3 : add byte ptr [rax + rdi + 1], ch ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001af3bb : add byte ptr [rax + rdi - 0x21fffff], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a73cb : add byte ptr [rax + rdi*4 + 0x1900000], dl ; out dx, eax ; jmp rsi
0x00000000001bb33b : add byte ptr [rax + rdi*8], al ; add dword ptr [rax], eax ; jo 0x1bb2df ; sti ; jmp qword ptr [rdx]
0x000000000017d557 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000001acbd3 : add byte ptr [rax + rdx - 0x4327ffff], bl ; jmp qword ptr [rdi]
0x00000000001b0b73 : add byte ptr [rax + rdx*2], bh ; add dword ptr [rax], eax ; js 0x1b0bf2 ; cmc ; jmp qword ptr [rcx]
0x00000000001a0b93 : add byte ptr [rax + rdx*2], bl ; add byte ptr [rax - 0x56], bl ; jmp 0x1a0ba3
0x00000000001aebeb : add byte ptr [rax + rsi - 0x1ccfffff], dh ; hlt ; call qword ptr [rsi]
0x00000000001b2bb3 : add byte ptr [rax + rsi*2 + 1], bh ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b83 : add byte ptr [rax + rsi*2 + 1], cl ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b53 : add byte ptr [rax + rsi*2], bl ; add dword ptr [rax], eax ; call 0x271b247d
0x00000000001a6be3 : add byte ptr [rax + rsi*4 + 0x54080000], ch ; cli ; call qword ptr [rax]
0x00000000001a6bb3 : add byte ptr [rax + rsi*4], bh ; add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000001978f7 : add byte ptr [rax + rsi*8], dl ; in eax, dx ; call rsp
0x00000000001a565f : add byte ptr [rax - 0x10], ah ; in eax, dx ; call rsi
0x00000000001aefaf : add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aefc7 : add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aa22f : add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x00000000001aef67 : add byte ptr [rax - 0x15], cl ; hlt ; jmp rdx
0x0000000000133bcd : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00000000001aeeff : add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000302f9 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000000f1464 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b48
0x00000000001aa04f : add byte ptr [rax - 0x18], ah ; int1 ; call qword ptr [rbx]
0x00000000001aee87 : add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aa037 : add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001aa007 : add byte ptr [rax - 0x18], bl ; int1 ; jmp qword ptr [rdi]
0x00000000001aedf7 : add byte ptr [rax - 0x19], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a6e27 : add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x00000000001aea5f : add byte ptr [rax - 0x21], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001aea77 : add byte ptr [rax - 0x21], bh ; hlt ; call qword ptr [rbx]
0x00000000001aea47 : add byte ptr [rax - 0x21], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a7c67 : add byte ptr [rax - 0x23], ch ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001ace4f : add byte ptr [rax - 0x26], ah ; jmp qword ptr [rcx]
0x00000000001ace37 : add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x0000000000036081 : add byte ptr [rax - 0x2d], cl ; loopne 0x360d7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001ae60f : add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x00000000001a1637 : add byte ptr [rax - 0x38], cl ; in al, dx ; call qword ptr [rax]
0x0000000000033dc7 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000033dc6 : add byte ptr [rax - 0x39], cl ; ret
0x000000000003c2c9 : add byte ptr [rax - 0x39], cl ; ret
0x000000000003f589 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000ae899 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000b3989 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000fca36 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000fcec3 : add byte ptr [rax - 0x39], cl ; ret
0x000000000013c998 : add byte ptr [rax - 0x39], cl ; ret
0x000000000013e00f : add byte ptr [rax - 0x39], cl ; ret
0x000000000008767e : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000005c4f9 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000005df1f : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000074177 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000073edc : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000074177 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ca1df : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ca1de : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ca47f : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ca47e : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000cb6ef : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000cb6ee : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000cb98f : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000cb98e : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000cd99e : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000cdace : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000010c50f : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000010dc8f : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000011babf : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000011c19f : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000011c5df : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000011c5de : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000011c9ff : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000011c9fe : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001205fa : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000120dff : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000131f7f : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001321af : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000140bd1 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000abf8f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abf6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abfcf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000abf7f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abfbf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001a1487 : add byte ptr [rax - 0x3c], bl ; in al, dx ; jmp rbx
0x00000000000091b7 : add byte ptr [rax - 0x3e], dl ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000034f15 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x0000000000187f6f : add byte ptr [rax - 0x3f000e04], ah ; cld ; int1 ; jmp rax
0x00000000000519d8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fedbe : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000034c0a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x0000000000034c4c : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000001f91b : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000029c5d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000351e4 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000006df12 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca189 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1a2 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca429 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca442 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000cb699 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000cb6b2 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000cb939 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000cb952 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000010c4d9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000010c4f2 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000010dc59 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000010dc72 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a3a6 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a3bf : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a3e6 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a766 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a77f : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a7a6 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011ba89 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011baa2 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c169 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c182 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c589 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c5a2 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c9a9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c9c2 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011faf5 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000120615 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000120dc9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000120de2 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000131f49 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000131f62 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000132179 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000132192 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1ef : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000ca48f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000cb6ff : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000cb99f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000010c51f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000010dc9f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000011bacf : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000011c1af : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000011c5ef : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000011ca0f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x0000000000120e0f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x0000000000131f8f : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001321bf : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001b1f9f : add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x000000000003c932 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000b3eaf : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001b1e57 : add byte ptr [rax - 0x4b], bl ; cmc ; call rdi
0x00000000001a0b97 : add byte ptr [rax - 0x56], bl ; jmp 0x1a0b9f
0x00000000001ae257 : add byte ptr [rax - 0x58], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae23f : add byte ptr [rax - 0x58], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001b1b0f : add byte ptr [rax - 0x59], dl ; cmc ; call rsi
0x00000000001adf27 : add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ade2f : add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001bafa7 : add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x00000000000ff9bf : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000001a9adf : add byte ptr [rax - 0x6b], ah ; int1 ; call qword ptr [rax]
0x00000000001a9ac7 : add byte ptr [rax - 0x6b], ch ; int1 ; call qword ptr [rax]
0x00000000001bb33f : add byte ptr [rax - 0x6b], dh ; sti ; jmp qword ptr [rdx]
0x00000000001adb9f : add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000001adbb7 : add byte ptr [rax - 0x6d], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ada27 : add byte ptr [rax - 0x6f], cl ; hlt ; jmp qword ptr [rsi]
0x0000000000037373 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000026b0f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000002cb37 : add byte ptr [rax - 0x73], cl ; add eax, 0x15ffe6 ; ret
0x000000000002092f : add byte ptr [rax - 0x73], cl ; add eax, 0x16bd34 ; ret
0x000000000002093f : add byte ptr [rax - 0x73], cl ; add eax, 0x16dc63 ; ret
0x00000000000fe32c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8c64 ; ret
0x00000000000fe16c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8e24 ; ret
0x000000000012b0ef : add byte ptr [rax - 0x73], cl ; add eax, 0x61a2e ; ret
0x0000000000026b2b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ac5af : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bf : add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000012070f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a7fe5 ; call rax
0x00000000000ac59f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000008156a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000450dd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x000000000006f218 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007c748 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe1e0 ; call rax
0x000000000007c2f8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe630 ; call rax
0x000000000007bf08 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffea20 ; call rax
0x000000000007aea8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x000000000007ac38 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x000000000006f511 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x0000000000106277 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000012ddb6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x000000000012ddb6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000000eff37 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000003a721 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000003a7f1 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000140f22 : add byte ptr [rax - 0x75], cl ; add eax, 0x2844e6 ; call qword ptr [rax]
0x000000000014090f : add byte ptr [rax - 0x75], cl ; add eax, 0x284af9 ; call qword ptr [rax]
0x000000000007cb0f : add byte ptr [rax - 0x75], cl ; add eax, 0x348a09 ; ret
0x0000000000029c8f : add byte ptr [rax - 0x75], cl ; add eax, 0x39bc59 ; ret
0x0000000000029c8e : add byte ptr [rax - 0x75], cl ; add eax, 0x39bc59 ; ret
0x0000000000021a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a78b9 ; ret
0x0000000000021a3f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a78d9 ; ret
0x000000000007ff33 : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fde4e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x0000000000073d18 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000845df : add byte ptr [rax - 0x75], cl ; je 0x8460e ; call rax
0x00000000000845de : add byte ptr [rax - 0x75], cl ; je 0x8460f ; call rax
0x000000000007b706 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe6 : add byte ptr [rax - 0x75], cl ; jp 0x73031 ; jmp 0x72fb6
0x00000000000cf303 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x00000000000ec325 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rbx
0x00000000000ec428 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rbx
0x0000000000074f6f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000d724f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x000000000013bb47 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000013bb57 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000013bb87 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000013bb97 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000002342f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010626f : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000152a1f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553ef : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157dbf : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015aeff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015d9cf : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001604ef : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000848e7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x00000000000c9b8f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000001099ce : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000105365 : add byte ptr [rax - 0x75], cl ; xor al, ch ; ret 0xf6b7
0x000000000005be57 : add byte ptr [rax - 0x75], cl ; xor eax, 0x368111 ; call rax
0x000000000005b801 : add byte ptr [rax - 0x75], cl ; xor eax, 0x368767 ; call rax
0x0000000000050049 : add byte ptr [rax - 0x75], cl ; xor eax, 0x373f1f ; call rax
0x000000000004d3cd : add byte ptr [rax - 0x75], cl ; xor eax, 0x376b9b ; call rax
0x00000000001895ac : add byte ptr [rax - 0x761d000c], cl ; hlt ; jmp rdx
0x0000000000123c2f : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000ff454 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ff5f1 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ffb32 : add byte ptr [rax - 0x76b80000], al ; ret
0x00000000001177bf : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000001435f4 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000896d1 : add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008958e : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x000000000014381f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000033630 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x0000000000033674 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x0000000000100ee8 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0xcd1f8
0x000000000008921e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000892d6 : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000011646f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x0000000000117aff : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x0000000000117afe : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003a69f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000003a6af : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000007cb3f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000963cf : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000009e9c2 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000009e9e6 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000009ea05 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000009ea42 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000009eccf : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a586f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a6fcf : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a813f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a87df : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000ac82f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001179bf : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007a361 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000103157 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000011d3eb : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006abce : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000006abe0 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000844e1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007221c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007b29e : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072064 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000007b3ee : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000033c47 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x0000000000033c46 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x00000000001430d9 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000009f49e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000088104 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000bea26 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000100ce5 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xf775
0x0000000000103f55 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103e55 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000010c054 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000007019f : add byte ptr [rax - 0x77], cl ; jmp 0x48f58af8
0x00000000000be4d5 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece6e2b
0x000000000006dcb5 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000784b3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000008588c : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x81b89
0x00000000000bda26 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x89d19
0x0000000000088b75 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012e34c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000103b11 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012cac3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000076ca3 : add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x0000000000114701 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000084ba5 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000008672e : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000002ad35 : add byte ptr [rax - 0x77], cl ; ret
0x000000000002cdd4 : add byte ptr [rax - 0x77], cl ; ret
0x000000000002dcc0 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000030420 : add byte ptr [rax - 0x77], cl ; ret
0x000000000003ea22 : add byte ptr [rax - 0x77], cl ; ret
0x000000000003ea90 : add byte ptr [rax - 0x77], cl ; ret
0x000000000003eaa5 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000419cf : add byte ptr [rax - 0x77], cl ; ret
0x0000000000041a5d : add byte ptr [rax - 0x77], cl ; ret
0x00000000000470af : add byte ptr [rax - 0x77], cl ; ret
0x000000000004c989 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000055ceb : add byte ptr [rax - 0x77], cl ; ret
0x000000000005e85c : add byte ptr [rax - 0x77], cl ; ret
0x0000000000064708 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000066506 : add byte ptr [rax - 0x77], cl ; ret
0x000000000006f6a2 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000075742 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000076392 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000077a0c : add byte ptr [rax - 0x77], cl ; ret
0x00000000000842e3 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000099711 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000ace16 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000af6de : add byte ptr [rax - 0x77], cl ; ret
0x00000000000b000f : add byte ptr [rax - 0x77], cl ; ret
0x00000000000b009d : add byte ptr [rax - 0x77], cl ; ret
0x00000000000b2c50 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000b47ea : add byte ptr [rax - 0x77], cl ; ret
0x00000000000b51da : add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5261 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000b527d : add byte ptr [rax - 0x77], cl ; ret
0x00000000000b67c7 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000bcbb7 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000bd9f3 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000befe8 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000bf363 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000c76b9 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000c924d : add byte ptr [rax - 0x77], cl ; ret
0x00000000000d195b : add byte ptr [rax - 0x77], cl ; ret
0x00000000000da21f : add byte ptr [rax - 0x77], cl ; ret
0x00000000000dcf58 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000df7ce : add byte ptr [rax - 0x77], cl ; ret
0x00000000000e5cbb : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f0498 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f053d : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f12f5 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1ea4 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f247e : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f2704 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f2d7b : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f3312 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f38f9 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f3cb9 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f7fb9 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000f8297 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000fb26a : add byte ptr [rax - 0x77], cl ; ret
0x00000000000ff457 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000ff5f4 : add byte ptr [rax - 0x77], cl ; ret
0x00000000000ffb35 : add byte ptr [rax - 0x77], cl ; ret
0x000000000010c701 : add byte ptr [rax - 0x77], cl ; ret
0x000000000010de7b : add byte ptr [rax - 0x77], cl ; ret
0x0000000000117193 : add byte ptr [rax - 0x77], cl ; ret
0x00000000001296ba : add byte ptr [rax - 0x77], cl ; ret
0x000000000012cee6 : add byte ptr [rax - 0x77], cl ; ret
0x000000000012cfda : add byte ptr [rax - 0x77], cl ; ret
0x000000000012f0da : add byte ptr [rax - 0x77], cl ; ret
0x00000000001335bf : add byte ptr [rax - 0x77], cl ; ret
0x000000000013439f : add byte ptr [rax - 0x77], cl ; ret
0x00000000001355f2 : add byte ptr [rax - 0x77], cl ; ret
0x00000000001363af : add byte ptr [rax - 0x77], cl ; ret
0x000000000013666f : add byte ptr [rax - 0x77], cl ; ret
0x0000000000136764 : add byte ptr [rax - 0x77], cl ; ret
0x00000000001383ab : add byte ptr [rax - 0x77], cl ; ret
0x000000000013957f : add byte ptr [rax - 0x77], cl ; ret
0x0000000000139d35 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000139f9d : add byte ptr [rax - 0x77], cl ; ret
0x000000000013c84f : add byte ptr [rax - 0x77], cl ; ret
0x000000000013cd13 : add byte ptr [rax - 0x77], cl ; ret
0x000000000013de94 : add byte ptr [rax - 0x77], cl ; ret
0x000000000013f00b : add byte ptr [rax - 0x77], cl ; ret
0x00000000001438b2 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000143f4d : add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000012804f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000128074 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000008408c : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000afc58 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000b2412 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000b4d8c : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000047465 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000012efc7 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000662e5 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006e513 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003413a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x00000000000341ee : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x0000000000046ef4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000bf2bf : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x00000000001177c2 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00000000000d779d : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000002fa5f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f006f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010d393 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000011b15b : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000007fe1f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000007fe1e : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000522b9 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000002c03d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000003265c : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004dc2b : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006bc60 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006bd9c : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bff4f : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e363a : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000111118 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bcd40 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000970b0 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000cdff3 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000ebf62 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000111f73 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001125f8 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001126ab : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001126fd : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000112863 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000112960 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000112a62 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000012e35e : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c537 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006f0c8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b6f6f : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e0daf : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000010f587 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000119d3e : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c97e6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000c9956 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000cafb6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000cb136 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000010b756 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000010b8d6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000010d106 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000010d28e : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000011b046 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000011b7f6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000011bec6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000120b26 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000001318c6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000131a46 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000c9956 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000fe4fa : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000c8f3e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000cac3e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x000000000010bbce : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x000000000010d57e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000fe055 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x0000000000105ed5 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000007db9b : add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x000000000008e5eb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000044dea : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000531d7 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000570df : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000b63bb : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001096dd : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000109fa0 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000528df : add byte ptr [rax - 0x77], cl ; ret 0xd5e9
0x0000000000045cea : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000061cd7 : add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000e0bff : add byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000951f5 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000009563d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000089162 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000010515a : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001092a5 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000011e2c0 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000011e2e5 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000011e71e : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000134ccf : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000134f8f : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000139b5f : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000013a1c6 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000007a3e0 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000011acd4 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x00000000001435ac : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000013232c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x132344 ; ret
0x000000000013509c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1350b4 ; ret
0x00000000001350b4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1350cc ; ret
0x00000000001358ec : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x135904 ; ret
0x0000000000135904 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13591c ; ret
0x0000000000135934 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13594c ; ret
0x000000000011935f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000001ad82f : add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x00000000001bc1b7 : add byte ptr [rax - 0x79], bl ; sti ; call rcx
0x00000000000c9d11 : add byte ptr [rax - 0x7af10000], al ; ret
0x00000000001b13af : add byte ptr [rax - 0x7b], ah ; cmc ; jmp rax
0x000000000008b8bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000072b0a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000063690 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x00000000000a32d3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001003e1 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000138f23 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000016cc07 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016cc6f : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016ce74 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016ce97 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016cebd : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016cee5 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016cf0b : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016cf3d : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016cf6b : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016cf9d : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016cfcd : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016cffd : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016d02d : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016d05f : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016d08f : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000016d0bf : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000051fe8 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc23e67f8
0x000000000010e55d : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a2d6d
0x0000000000084abb : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000085e57 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000086647 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000061cfe : add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000006ad90 : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000878cd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002db94 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004b78e : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004c8ae : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004cfc9 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007d35c : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007d478 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f846d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004d6d1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000059470 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed8d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000004ede0 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000f71ef : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000001745b6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x1745c7 ; ret
0x0000000000084be2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000085f82 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000086772 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000020c2c : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000020d33 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000022c7f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000235e5 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000002b961 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000002d81f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000320a7 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000320df : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000032e79 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000003424f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000003440f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000003448f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000003c457 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000003f727 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000047267 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000048400 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000049fe0 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000005096f : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000054a7a : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000057451 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000005bc18 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000005e5a0 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000006846d : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000096b80 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000abcc7 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000abcc6 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ac2a7 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ac2a6 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aca5f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000adc17 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000adf92 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae077 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae37a : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae467 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aea37 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b0dc7 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b3557 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b3b17 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bc6f7 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bd0d8 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bda10 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf04f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf0b4 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf26f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf36f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf53f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c0287 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c0286 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c02a7 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c031f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c163f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c186f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c1901 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c1aaf : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ca52f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ca689 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d266f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dab7f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db71f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db87f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e9b50 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ea086 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000eab2f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f277d : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f448f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f4e57 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f638f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff95f : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000101b30 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000001020b0 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000010df61 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000010e022 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000010f497 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000011018f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000001101d2 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000011024f : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000111407 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000011144b : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000111dff : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000111dfe : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000111e57 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000011318f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000011318e : add byte ptr [rax - 0x7d], cl ; ret
0x000000000011f197 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000011f20f : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000123625 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000126787 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000126bf8 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000126d67 : add byte ptr [rax - 0x7d], cl ; ret
0x00000000001270d3 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000128bb7 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000128d8f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000012b027 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000012d337 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000013f317 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000173f5f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1dea : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000126bcf : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000122e44 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000aa14f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000aa1ff : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000aa4bf : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feaaf : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000feb0f : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000feb6f : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000122532 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000082bd9 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000bee1f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00000000001226ba : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000013e4ef : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021905 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b4ff : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b9cf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c237 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c236 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000b684c : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000b69cc : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ca627 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000dd58f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010df07 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000011d0af : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e58df : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001749ef : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174a57 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174ab7 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174b0f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174b5f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174baf : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174bff : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174c4f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174e4f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174e9f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174ee7 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174ee6 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174f2f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174fff : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174ffe : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000108f7a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a07 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000009f02f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000023de6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000029016 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000144e7f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144f4f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145015 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001450df : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001451af : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014527f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014534f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014541f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001454ef : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001455bf : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014568f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014575f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014582f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001458ff : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145c89 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d79 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e69 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145f59 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146049 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146139 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146229 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146319 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146409 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001464f9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001465e9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001466d9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001467c9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001468b9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001469a5 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146df9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146f99 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147131 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001472d9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147479 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147619 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001477b9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147959 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147af9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147c99 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147e39 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147fd9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148179 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148319 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001484b9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148a23 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148c03 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148dd5 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148fb3 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149193 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149373 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149553 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149733 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149913 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149af3 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149cd3 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149eb3 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a093 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a273 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a453 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac50 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ada0 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeee : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b040 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b190 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b2e0 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b430 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b580 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b6d0 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b820 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b970 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bac0 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bc10 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd60 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014beb0 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c34a : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c4ca : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c642 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c7ca : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c94a : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014caca : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cc4a : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cdca : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf4a : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d0ca : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d24a : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d3ca : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d54a : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d6ca : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d84a : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000072a27 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000d7c3f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7c7f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7ccf : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7d27 : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7d9f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7e5f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7e5e : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7e9f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaef : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000343b9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000afc8f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000b2447 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d8d47 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000242b7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000002443f : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000002443e : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000025077 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000002519f : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000002691f : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c9f : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006c95f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000006c95e : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000609ef : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000613b7 : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006167f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006224f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006250f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006768f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000677ff : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000678bf : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000067a0f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000681c7 : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000681c6 : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006931f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006954f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000697df : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000069c9f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000069d9f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006a2a7 : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010e657 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000011f735 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000011f821 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008de80 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008de9a : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008e3e0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008e3f8 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000096008 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000096020 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000963e0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000963f8 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000146e63 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147003 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014719b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147343 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001474e3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147683 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147823 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001479c3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147b63 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147d03 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147ea3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148043 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001481e3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148383 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148523 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148a9b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148c7b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148e4d : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014902b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014920b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001493eb : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001495cb : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001497ab : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014998b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149b6b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d4b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149f2b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a10b : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2eb : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a4cb : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aca1 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014adf1 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014af3f : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b091 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b1e1 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b331 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b481 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b5d1 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b721 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b871 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b9c1 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bb11 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bc61 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bdb1 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c3a5 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c525 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c69d : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c825 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c9a5 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cb25 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cca5 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ce25 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cfa5 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d125 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d2a5 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d425 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d5a5 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d725 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d8a1 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d7787 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000144ea3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f73 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145039 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145103 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001451d3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001452a3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145373 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145443 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145513 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001455e3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001456b3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145783 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145853 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145923 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145cb7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145da7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145e97 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f87 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146077 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146167 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146257 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146347 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146437 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146527 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146617 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146707 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001467f7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001468e7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001469cf : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000034217 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000bc73f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000c004f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000d4d5a : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000126db3 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009f65f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008b9ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000008b9fe : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000297fc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000029ac0 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000006ee54 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000117036 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000046067 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000aff17 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000b2857 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000b2856 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000bc589 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00000000000802b0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000136eb0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000136fb0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000001242e1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000007186c : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000117d98 : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000143a31 : add byte ptr [rax - 0x7f], cl ; ret
0x000000000015903b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000001590bc : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159178 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159235 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000001592f8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000001593b5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159478 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159535 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000001595f8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000001596b5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159778 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159835 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000001598f8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000001599b5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159a78 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159b35 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159bf8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159cb5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159d78 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159e35 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159ef8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000159fb5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a078 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a135 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a1f9 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a2b5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a378 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a435 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a4f8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a5b5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a678 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a735 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a836 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a9ca : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015aa5f : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015bb0b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015bb8c : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015bc48 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015bd05 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015bdc8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015be85 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015bf48 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c005 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c0c8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c185 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c248 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c305 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c3c8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c485 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c548 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c605 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c6c8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c785 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c848 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c905 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015c9c8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ca85 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015cb48 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015cc05 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ccc9 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015cd85 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ce48 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015cf05 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015cfc8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d085 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d148 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d205 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d306 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d49a : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d52f : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015e5eb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015e66c : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015e728 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015e7e5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015e8a8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015e965 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ea28 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015eae5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015eba8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ec65 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ed28 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ede5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015eea8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ef65 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f028 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f0e5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f1a8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f265 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f328 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f3e5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f4a8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f565 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f628 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f6e5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f7a9 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f865 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f928 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015f9e5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015faa8 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015fb65 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015fc28 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015fce5 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015fdfa : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ffae : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000160043 : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006f1bf : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x000000000006f1be : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000001b0b00 : add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x000000000011958b : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001428ca : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000033f0d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000072092 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000072252 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548d : add byte ptr [rax - 1], bh ; ret
0x000000000003570d : add byte ptr [rax - 1], bh ; ret
0x0000000000035fad : add byte ptr [rax - 1], bh ; ret
0x0000000000036065 : add byte ptr [rax - 1], bh ; ret
0x000000000003609d : add byte ptr [rax - 1], bh ; ret
0x00000000000360dd : add byte ptr [rax - 1], bh ; ret
0x000000000003611d : add byte ptr [rax - 1], bh ; ret
0x000000000003613d : add byte ptr [rax - 1], bh ; ret
0x0000000000036280 : add byte ptr [rax - 1], bh ; ret
0x000000000003656d : add byte ptr [rax - 1], bh ; ret
0x000000000003685d : add byte ptr [rax - 1], bh ; ret
0x00000000000368c7 : add byte ptr [rax - 1], bh ; ret
0x000000000003ac35 : add byte ptr [rax - 1], bh ; ret
0x000000000003accd : add byte ptr [rax - 1], bh ; ret
0x000000000003b19f : add byte ptr [rax - 1], bh ; ret
0x000000000003b20f : add byte ptr [rax - 1], bh ; ret
0x0000000000052ce5 : add byte ptr [rax - 1], bh ; ret
0x000000000007222f : add byte ptr [rax - 1], bh ; ret
0x0000000000073ca2 : add byte ptr [rax - 1], bh ; ret
0x0000000000074652 : add byte ptr [rax - 1], bh ; ret
0x00000000000748b9 : add byte ptr [rax - 1], bh ; ret
0x0000000000074f57 : add byte ptr [rax - 1], bh ; ret
0x0000000000075af5 : add byte ptr [rax - 1], bh ; ret
0x000000000007786d : add byte ptr [rax - 1], bh ; ret
0x000000000007a6d2 : add byte ptr [rax - 1], bh ; ret
0x000000000007a8e2 : add byte ptr [rax - 1], bh ; ret
0x000000000007b5ef : add byte ptr [rax - 1], bh ; ret
0x000000000007cabf : add byte ptr [rax - 1], bh ; ret
0x000000000007caef : add byte ptr [rax - 1], bh ; ret
0x000000000007cc6f : add byte ptr [rax - 1], bh ; ret
0x00000000000886af : add byte ptr [rax - 1], bh ; ret
0x0000000000088747 : add byte ptr [rax - 1], bh ; ret
0x00000000000acb17 : add byte ptr [rax - 1], bh ; ret
0x00000000000bf69d : add byte ptr [rax - 1], bh ; ret
0x00000000000c840d : add byte ptr [rax - 1], bh ; ret
0x00000000000cacfd : add byte ptr [rax - 1], bh ; ret
0x00000000000cc84d : add byte ptr [rax - 1], bh ; ret
0x00000000000ccdd5 : add byte ptr [rax - 1], bh ; ret
0x00000000000ea945 : add byte ptr [rax - 1], bh ; ret
0x00000000000f6c15 : add byte ptr [rax - 1], bh ; ret
0x00000000000f6c65 : add byte ptr [rax - 1], bh ; ret
0x00000000000f6cb5 : add byte ptr [rax - 1], bh ; ret
0x00000000000f6d15 : add byte ptr [rax - 1], bh ; ret
0x00000000000f6d75 : add byte ptr [rax - 1], bh ; ret
0x00000000000f6dcd : add byte ptr [rax - 1], bh ; ret
0x00000000000f6f4d : add byte ptr [rax - 1], bh ; ret
0x00000000000f6fad : add byte ptr [rax - 1], bh ; ret
0x00000000000f6fc5 : add byte ptr [rax - 1], bh ; ret
0x00000000000f9a3d : add byte ptr [rax - 1], bh ; ret
0x00000000000f9add : add byte ptr [rax - 1], bh ; ret
0x00000000000fbaff : add byte ptr [rax - 1], bh ; ret
0x00000000000fbb55 : add byte ptr [rax - 1], bh ; ret
0x00000000000fc37d : add byte ptr [rax - 1], bh ; ret
0x00000000000fc3dd : add byte ptr [rax - 1], bh ; ret
0x00000000000fce6d : add byte ptr [rax - 1], bh ; ret
0x00000000000fdbad : add byte ptr [rax - 1], bh ; ret
0x00000000000fdccd : add byte ptr [rax - 1], bh ; ret
0x00000000000fdcfd : add byte ptr [rax - 1], bh ; ret
0x00000000000ff085 : add byte ptr [rax - 1], bh ; ret
0x00000000000ff125 : add byte ptr [rax - 1], bh ; ret
0x0000000000101d37 : add byte ptr [rax - 1], bh ; ret
0x00000000001056f5 : add byte ptr [rax - 1], bh ; ret
0x000000000011591d : add byte ptr [rax - 1], bh ; ret
0x00000000001186f5 : add byte ptr [rax - 1], bh ; ret
0x00000000001234df : add byte ptr [rax - 1], bh ; ret
0x00000000001235cf : add byte ptr [rax - 1], bh ; ret
0x0000000000123c1f : add byte ptr [rax - 1], bh ; ret
0x000000000012408f : add byte ptr [rax - 1], bh ; ret
0x0000000000124167 : add byte ptr [rax - 1], bh ; ret
0x000000000013cc1f : add byte ptr [rax - 1], bh ; ret
0x000000000013dd67 : add byte ptr [rax - 1], bh ; ret
0x000000000014067d : add byte ptr [rax - 1], bh ; ret
0x00000000001406cd : add byte ptr [rax - 1], bh ; ret
0x000000000014071d : add byte ptr [rax - 1], bh ; ret
0x000000000014073d : add byte ptr [rax - 1], bh ; ret
0x0000000000140cdd : add byte ptr [rax - 1], bh ; ret
0x00000000001412d4 : add byte ptr [rax - 1], bh ; ret
0x00000000001428e5 : add byte ptr [rax - 1], bh ; ret
0x0000000000143ebd : add byte ptr [rax - 1], bh ; ret
0x00000000001a6af7 : add byte ptr [rax - 1], bh ; stc ; call qword ptr [rax]
0x00000000000368c6 : add byte ptr [rax - 1], dil ; ret
0x000000000007cc6e : add byte ptr [rax - 1], dil ; ret
0x00000000001234de : add byte ptr [rax - 1], dil ; ret
0x0000000000124166 : add byte ptr [rax - 1], dil ; ret
0x0000000000195964 : add byte ptr [rax - 4], ah ; call qword ptr [rax + 0x20fffc5f]
0x000000000019b52f : add byte ptr [rax - 6], ah ; call rsp
0x0000000000088e1a : add byte ptr [rax], 0 ; add al, ch ; pop rbp ; ret 8
0x00000000000704b4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000007aee4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000802b4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000088d62 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000136eb4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000136fb4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000006d3b5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xa7c
0x00000000001242e5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000006b4bb : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000006f296 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000007a9c9 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000007cbf6 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000084010 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00000000001750ee : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000073ed9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000003ea8d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b525e : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007a3dd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000017513b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000017513b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000013c15b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000015b81b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015e2eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000160e0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000963cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000ac82b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002bd53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000095d03 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000a6ceb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000a84fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000010cc2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000134fdb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000013587b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000082f33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000aad83 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aadcb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b9e8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001266a3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013c223 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009674b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000006fe0b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000362c6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000365b6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x0000000000071033 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df32 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000b5c13 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000016e751 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec69 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd81 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170299 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000002b0ae : add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000065892 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x000000000006d82b : add byte ptr [rax], 0 ; je 0x6d840 ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc0 : add byte ptr [rax], 0 ; je 0x6fdd9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f4 : add byte ptr [rax], 0 ; je 0x70508 ; mov eax, esi ; pop rbx ; ret
0x0000000000070676 : add byte ptr [rax], 0 ; je 0x70688 ; mov eax, esi ; pop rbx ; ret
0x0000000000070fea : add byte ptr [rax], 0 ; je 0x71001 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118d : add byte ptr [rax], 0 ; je 0x711a8 ; mov eax, edx ; pop rbx ; ret
0x0000000000071324 : add byte ptr [rax], 0 ; je 0x71338 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b82 : add byte ptr [rax], 0 ; je 0x75b98 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f87 : add byte ptr [rax], 0 ; je 0x75f98 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ab : add byte ptr [rax], 0 ; je 0x760c0 ; mov eax, esi ; pop rbx ; ret
0x00000000000761ed : add byte ptr [rax], 0 ; je 0x76208 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d2 : add byte ptr [rax], 0 ; je 0x764e8 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e77 : add byte ptr [rax], 0 ; je 0x76e88 ; mov eax, edx ; pop rbx ; ret
0x0000000000078083 : add byte ptr [rax], 0 ; je 0x78098 ; mov eax, edx ; pop rbx ; ret
0x0000000000126a79 : add byte ptr [rax], ah ; add bl, ch ; ret 0xb8
0x00000000001a248f : add byte ptr [rax], ah ; cmc ; in al, dx ; call qword ptr [rsi]
0x00000000001abdbf : add byte ptr [rax], ah ; in eax, 0xf2 ; call qword ptr [rsi]
0x00000000001a758f : add byte ptr [rax], ah ; jae 0x1a7586 ; call rax
0x000000000010e74e : add byte ptr [rax], ah ; jmp 0x10e718
0x00000000001b11df : add byte ptr [rax], ah ; jnp 0x1b11dc ; jmp qword ptr [rcx]
0x000000000002de14 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000002e05d : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000010a9eb : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000010b2b4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000000f367 : add byte ptr [rax], ah ; ret
0x000000000001bdd7 : add byte ptr [rax], ah ; ret
0x00000000001ae20f : add byte ptr [rax], ah ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a7d7e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a7d96 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a7dc6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001971ae : add byte ptr [rax], al ; adc al, 0x14 ; jmp 0x1971b8
0x000000000019d54a : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x00000000001af44a : add byte ptr [rax], al ; adc al, 0x39 ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x00000000001afa4a : add byte ptr [rax], al ; adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001b094a : add byte ptr [rax], al ; adc al, 0x4e ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c4a : add byte ptr [rax], al ; adc al, 0x51 ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b114a : add byte ptr [rax], al ; adc al, 0x56 ; add dword ptr [rax], eax ; nop ; jp 0x1b1151 ; jmp qword ptr [rcx]
0x00000000001b2a4a : add byte ptr [rax], al ; adc al, 0x6f ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001b364a : add byte ptr [rax], al ; adc al, 0x7b ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x0000000000197666 : add byte ptr [rax], al ; adc al, 0x9c ; in eax, dx ; call rsp
0x00000000001a794a : add byte ptr [rax], al ; adc al, 0xbe ; add byte ptr [rax], al ; sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x000000000019783e : add byte ptr [rax], al ; adc al, 0xcc ; in eax, dx ; jmp rsp
0x00000000001a994a : add byte ptr [rax], al ; adc al, 0xde ; add byte ptr [rax], al ; mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x00000000001978f6 : add byte ptr [rax], al ; adc al, 0xf0 ; in eax, dx ; call rsp
0x000000000019c34a : add byte ptr [rax], al ; adc al, 8 ; add byte ptr [rax], al ; js 0x19c344 ; jmp qword ptr [rcx]
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001a94fe : add byte ptr [rax], al ; adc byte ptr [rax], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001a070e : add byte ptr [rax], al ; adc byte ptr [rdi], ah ; jmp 0x1a0718
0x0000000000035d70 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x000000000019cc7a : add byte ptr [rax], al ; adc dword ptr [rax], r8d ; add al, ah ; fld1 ; call qword ptr [rdx]
0x00000000001acc29 : add byte ptr [rax], al ; add ah, dh ; adc byte ptr [rcx], al ; add al, ah ; ret
0x00000000001abb09 : add byte ptr [rax], al ; add ah, dl ; inc dword ptr [rax] ; add al, ah ; ret
0x00000000001ae23a : add byte ptr [rax], al ; add al, 0x27 ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019804e : add byte ptr [rax], al ; add al, 0x32 ; out dx, eax ; call rsp
0x000000000019f23a : add byte ptr [rax], al ; add al, 0x37 ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x00000000001b0a3a : add byte ptr [rax], al ; add al, 0x4f ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000197da6 : add byte ptr [rax], al ; add al, 0x66 ; out dx, al ; call rsp
0x000000000019751e : add byte ptr [rax], al ; add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000197df6 : add byte ptr [rax], al ; add al, 0x6c ; out dx, al ; call rsp
0x000000000019731e : add byte ptr [rax], al ; add al, 0x9a ; jmp 0x197328
0x000000000019f17e : add byte ptr [rax], al ; add al, 0xe9 ; call qword ptr [rsi]
0x00000000001bb33a : add byte ptr [rax], al ; add al, 0xf8 ; add dword ptr [rax], eax ; jo 0x1bb2e0 ; sti ; jmp qword ptr [rdx]
0x0000000000018805 : add byte ptr [rax], al ; add al, ah ; ret 0x17
0x00000000001860f5 : add byte ptr [rax], al ; add al, bh ; loope 0x186100 ; jmp qword ptr [rdi]
0x0000000000186175 : add byte ptr [rax], al ; add al, bh ; loope 0x186180 ; jmp qword ptr [rdi]
0x00000000001861f5 : add byte ptr [rax], al ; add al, bh ; loope 0x186200 ; jmp qword ptr [rdi]
0x00000000001ae787 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000001116a3 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000bf80c : add byte ptr [rax], al ; add al, ch ; mov esp, 0x89000373 ; ret 0x3b8
0x0000000000033540 : add byte ptr [rax], al ; add al, ch ; pop rax ; ret
0x0000000000088e1b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret 8
0x00000000001123c8 : add byte ptr [rax], al ; add al, ch ; push rax ; ret 0xfff1
0x000000000005c485 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000704b5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000007aee5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000802b5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000088d63 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000f4cdd : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000f7575 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000f9e55 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000136eb5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000136fb5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000006f646 : add byte ptr [rax], al ; add al, ch ; ret 0xa1
0x000000000006d3b6 : add byte ptr [rax], al ; add al, ch ; ret 0xa7c
0x000000000012c046 : add byte ptr [rax], al ; add al, ch ; ret 0xcd
0x000000000002aca6 : add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00000000000e14de : add byte ptr [rax], al ; add al, ch ; ret 0xf3e3
0x00000000000bd0a6 : add byte ptr [rax], al ; add al, ch ; ret 0xf7c6
0x0000000000141d46 : add byte ptr [rax], al ; add al, ch ; ret 0xfb58
0x00000000001242e6 : add byte ptr [rax], al ; add al, ch ; ret 0xff0d
0x00000000001a11ad : add byte ptr [rax], al ; add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x000000000001bd45 : add byte ptr [rax], al ; add al, dh ; ret
0x000000000017513d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013225a : add byte ptr [rax], al ; add bh, bh ; loope 0x1321f7 ; ret
0x00000000000d729b : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000cea3a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ada9f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000000d95bb : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00000000000d95b5 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x00000000001359fb : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000895da : add byte ptr [rax], al ; add bl, al ; ret
0x000000000013514c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000194e0f : add byte ptr [rax], al ; add bl, bh ; call rax
0x000000000007b5db : add byte ptr [rax], al ; add bl, ch ; fucomp st(0) ; ret
0x00000000000bf1e8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000000a6ddd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a85ed : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a6ded : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000a85fd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002bd55 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000006b4bc : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000006f297 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000758cd : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000773f2 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007a9ca : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007bb1e : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007cafd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007cbf7 : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000084011 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000840ad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000088f0d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000008b45d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000095d05 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000009eb8d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000ac78d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000ea981 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000010cc2d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000012b7cd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000012befd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000012bf1d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000012e0ad : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000134fdd : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000013587d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000013be25 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000013be54 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000013be86 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000013beb7 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000014137d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000014355d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001745a9 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001750ef : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000142cab : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000055b8b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000981cd : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000983eb : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000009933d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000009a42d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000009b58c : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e3a30 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c1502 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002bdbc : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000001946b3 : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000b0629 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000b5ad1 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000df11c : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000072d2d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000dd296 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000e919d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004b64a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000a732d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000cd958 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000c959a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000c9599 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000fdc96 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000140852 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000142f10 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010f009 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000ff56f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f9704 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000f967a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00000000000f967a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b96 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025395 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028092 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x0000000000028f62 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cbf7b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cd9ac : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cdadc : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cda1d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x000000000012b04d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000004a106 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000fb5bb : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000fe65d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000012b05d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000012b7ad : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001322f8 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001323d4 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001323e4 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000132413 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000132440 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001350d4 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001350e4 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000135954 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000135964 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000013b11d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000aaec0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003c034 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000003f2f4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000042254 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000003bf0d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000003f1cd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000004211d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000ae4ed : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000b0e4d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000b35dd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000012e09d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000132dad : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000cdbf4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00000000001a7d7d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a7d95 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a7dc5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000ac563 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000003c2c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000003f587 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000ae897 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000b3987 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000fca34 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000fcec1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000073eda : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000140bcf : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000034c08 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x0000000000034c4a : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000001f919 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000029c5b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000351e2 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000006df10 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca187 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1a0 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca427 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca440 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000cb697 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000cb6b0 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000cb937 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000cb950 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000010c4d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000010c4f0 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000010dc57 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000010dc70 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a3a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a3bd : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a3e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a764 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a77d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011a7a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011ba87 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011baa0 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c167 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c180 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c587 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c5a0 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c9a7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011c9c0 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000011faf3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000120613 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000120dc7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000120de0 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000131f47 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000131f60 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000132177 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000132190 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1ed : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000ca48d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000cb6fd : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000cb99d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000010c51d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000010dc9d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000011bacd : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000011c1ad : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000011c5ed : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000011ca0d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x0000000000120e0d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x0000000000131f8d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001321bd : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000ff9bd : add byte ptr [rax], al ; add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000000ac5ad : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ac59d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007ff31 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fde4c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000007b704 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x73033 ; jmp 0x72fb8
0x000000000002342d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000c9b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007cb3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000963cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000009eccd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a586d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a813d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000ac82d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001179bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000bea24 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103f53 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103e53 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000010c052 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000088b73 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012e34a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000103b0f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000076ca1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x000000000003ea20 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003ea1f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003ea8e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003eaa3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000419cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000419cc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000041a5b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000470ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000004c987 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000055ce9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000064706 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000075740 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000076390 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009970f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000af6dc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b000d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b000c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b009b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b2c4e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b2c4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b47e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b51d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b51d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b525f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b527b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b67c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bcbb5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bf361 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dcf56 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000df7cc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f7fb7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f8295 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fb268 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012cfd8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001355f0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001363ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013666d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001383a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013c84d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008408a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000afc56 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000b2410 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000b4d8a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000f006d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002c03b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bff4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cdff1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000ebf60 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000012e35c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006f0c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000b6f6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000105ed3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000570dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061cd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000951f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007a3de : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000006368e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000138f21 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000f71ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000000320dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003424d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003440d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000047265 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006846b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aca5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000adf90 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae378 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf04d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf26d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf36d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c02a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c031d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c163d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c1aad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dab7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db71d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db87d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e9b4e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ea084 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f448d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f4e55 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f638d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff95d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000101b2e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001020ae : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011024d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000111405 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000111e55 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000123623 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000173f5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000126bcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000aa14d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000aa4bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feb6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013e4ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021903 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ca625 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000dd58d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010df05 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e58dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001749ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174a55 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174b0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174b5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174bad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174bfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174e9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174f2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000108f78 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a05 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000029014 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000001469a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001484b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014beae : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d7c3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7c7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7ccd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7e9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000afc8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000b2445 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000609ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006167d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006224d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006250d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000677fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000678bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000067a0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006931d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006954d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000697dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006a2a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010e655 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x0000000000148521 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a4c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d89f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001469cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bc73d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000c004d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000d4d58 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009f65d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000029abe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000015a834 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015a9c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d304 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d498 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015fdf8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ffac : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000033f0b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003570b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000035fab : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000036063 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003609b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000360db : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003611b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003613b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003627e : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003656b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003685b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003ac33 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003accb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003b19d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003b20d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000052ce3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007222d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000073ca0 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000074650 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000748b7 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000075af3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007786b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007a6d0 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007a8e0 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007b5ed : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007cabd : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007caed : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000bf69b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000c840b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000cacfb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000cc84b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000ccdd3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6c13 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6c63 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6cb3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6d13 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6d73 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6dcb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6f4b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6fab : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6fc3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f9a3b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f9adb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fbafd : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fbb53 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fc37b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fc3db : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fce6b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fdbab : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fdccb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fdcfb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000ff083 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000ff123 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000101d35 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001056f3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000011591b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001186f3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000123c1d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000013cc1d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000013dd65 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000014067b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001406cb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000014071b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000014073b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000140cdb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001412d2 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001428e3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000001bdd5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000001a7d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a7d94 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a7dc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000018803 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x17
0x00000000001860f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x186102 ; jmp qword ptr [rdi]
0x0000000000186173 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x186182 ; jmp qword ptr [rdi]
0x00000000001861f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x186202 ; jmp qword ptr [rdi]
0x000000000001bd43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x0000000000194e0d : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bh ; call rax
0x00000000000a6deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000a85fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000758cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007cafb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000840ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000088f0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000009eb8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000ac78b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000ea97f : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000012b7cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000012befb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000012bf1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000012e0ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000014137b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000014355b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001745a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000072d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000e919b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000ac5ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ac59b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007cb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000009eccb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a586b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a813b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001179bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000084088 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000bff4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000570db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061cd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000320db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003424b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003440b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bf36b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c031b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c163b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c1aab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dab7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db71b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000db87b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f448b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff95b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011024b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000173f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aa14b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000aa4bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feb6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013e4eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000001749eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174b0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174b5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174bfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000174f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000d7c3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7ccb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000d7e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000afc8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006167b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006224b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006250b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000677fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000678bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006931b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000006954b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000697db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000c004b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000001bdd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000018801 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x17
0x000000000001bd41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x0000000000194e0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bh ; call rax
0x00000000000ea97d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000ea97c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000001bdd1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000001beeb0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bf964 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000194e0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x000000000001be19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000018249 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000017585a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi - 0x15], ah ; jmp rax
0x00000000000093a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000001860f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186103 ; jmp qword ptr [rdi]
0x0000000000186172 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186183 ; jmp qword ptr [rdi]
0x00000000001861f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186203 ; jmp qword ptr [rdi]
0x000000000017585b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x17586b
0x000000000019432a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000000404a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000045d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000004752 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000057ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000005eaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000069a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000008fca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000920a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000953a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000d34a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000102a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000191c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ea97e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017e23a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017e72a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bd47e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bd932 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bebca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001beeb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bf966 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcbaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001c05a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x000000000001e66a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x000000000001a07a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d0
0x000000000001b3b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18f8
0x0000000000003fea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017e232 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017e722 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b532 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bf392 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001bf012 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bd786 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bd636 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000194e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x00000000000a9bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001be1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001824b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000003a899 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000101a3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000aa38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000011012b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000144f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001450bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014518b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014525b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014532b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001453fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001454cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014559b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014566b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014573b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014580b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001458db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001459ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014e75b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014e87b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014e99b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014eabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ebdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ecfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ee1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ef3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f05b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f17b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f29b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f3bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f4db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f5fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f71b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000089fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a11b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a25b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a39b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a4db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a75b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a89b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a9db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ab1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ac5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ad9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008aedb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008b01b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008bd6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008beeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c06b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c1eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c36b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c4eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c7eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c96b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008caeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008cc6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008cdeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008cf6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008d0eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008d26b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000920eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009233b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009258b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000927db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000092a2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000092c7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000092ecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009311b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009336b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000935bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009380b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000093a5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000093cab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000093efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009414b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000146d8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000146f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014726b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014740b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001475ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014774b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001478eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014810b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001482ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014844b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001489ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000148b8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000148f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014911b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001492fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001494db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001496bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014989b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149a7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149c5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149e3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a01b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a1fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a3db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c2eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c46b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c76b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c8eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014ca6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014cbeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014cd6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014ceeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d06b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d1eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d36b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d4eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d7eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fa2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fb9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fd0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fe7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014ffeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015015b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001502cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015043b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001505ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015071b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015088b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001509fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000150b6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000150cdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000150e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016345b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016369b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001638db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000163b1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000163d5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000163f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001641db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016441b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016465b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016489b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000164adb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000164d1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000164f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016519b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001653db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000019432b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000017585c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi - 0x15], ah ; jmp rax
0x000000000007a61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000011740b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000011755b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000011852b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000011867b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000000abf4c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005b162 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004db0e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004fcd8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00000000000fe43c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ffac9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000173dee : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000174243 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000077eec : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000017513c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000017513c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000001439ec : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000018025c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017f40c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000001860f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186101 ; jmp qword ptr [rdi]
0x0000000000186174 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186181 ; jmp qword ptr [rdi]
0x00000000001861f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186201 ; jmp qword ptr [rdi]
0x00000000000fb887 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000108ab7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000d6c3d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fdc95 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cbf7a : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000cbf7a : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000097486 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000001a7ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1a7deb ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000017585d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x175869
0x000000000006084e : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5ca9d
0x00000000000bf711 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xbb947
0x0000000000058e19 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000170b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000170b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000170b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000170b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000170bac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000170aec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000170afc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000170b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000170b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000170b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000170b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000170b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac59c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac5bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000170adc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000168c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000016d0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a732c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a8e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a98dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a850c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a69fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000168ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000016d11c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000016d13c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000016d10c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f5f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a6d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a852c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a6d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a854c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000a853c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000cda1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007222c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007b5ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007cabc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007caec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000013cc1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000013dd64 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001412d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000004a0b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000004a105 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000fe65c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012b05c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012b7ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001323e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001350e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000135963 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000013b11c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012e09c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000132dac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000013c15c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d723c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000011869b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11866c
0x000000000015b81c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015e2ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000160e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000168cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000016d14c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000013c518 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a6d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a856c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000a857c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000012d9ba : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000c884c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007cb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007cb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000963cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000009eccc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a586c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a813c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000ac82c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001179bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000168c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000016d0ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a6d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a851c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a6ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a85ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a6dec : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a85fc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007a61c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015b96c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015e43c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000160f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000002058b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000133768 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013c319 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000096ce2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000109628 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003a89a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007b9b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013309f : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001391ff : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000072c7a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000072c79 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000072c78 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000072fd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000072fd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000072fd1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007b20e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007c960 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e83be : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001025d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013c1c8 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013c54f : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001743fa : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000019432c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001946b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000000404c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000045d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000004754 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000057ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000005eac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000063cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000069a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000008904 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000008fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000091bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000920c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000953c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ac8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000c42c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000d34c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000e61c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000102a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010af4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000191c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000020bec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002bd54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002e0fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002e11c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002e13c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000758cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007bb1d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cafc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cc1b : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000840ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000084126 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000088f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000095d04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000009eb8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a69ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a6cec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a84fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ac09b : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ac78c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e888a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ea980 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ff23b : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010cc2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001196dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012b7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012befc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012bf1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012d8f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012e0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000134fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000013587c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000014137c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000014355c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000143d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016d0cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001745a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017e23c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017e72c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017f234 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017f9cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bd480 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bd934 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bebcc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001beeb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bf968 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcbac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001c05c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x000000000001e66c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x000000000001a07c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d0
0x000000000001b3b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18f8
0x000000000017f22c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f9c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017e234 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017e724 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bf394 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001bf014 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bd788 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bd638 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000194e0e : add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x00000000000a9bac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000003a7a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000006accc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000082f34 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000fba6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007b6ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007cadc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007cb1c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aa4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aab5c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aad84 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aadcc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b9e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d6c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d8e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001266a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012b7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012bf0c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013c16c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013c17c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013c224 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014a8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017294c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009674c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000009f17c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000aaf9c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000abf5c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000ac5cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000017091c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000094422 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x94433 ; ret
0x00000000000a9bad : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001be1d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001824d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000029a6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c311b : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094f31 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000054d9c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000782f1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000088485 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000891f7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000892ac : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000096ce3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000efcbe : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001192eb : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012e1c0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000586b5 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x000000000012cf67 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000006d714 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x00000000000aa8e1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c36d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x000000000006caad : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000024aae : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000000db233 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d5d2d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000dbe75 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000df255 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000f5bad : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000006b455 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000000aac39 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000943e3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000cd416 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000115a5c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000015b0fd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000015dbcd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000001606ed : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000029da9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000029dcd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036bf0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006bbd0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007027b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000750ed : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000075106 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000078a60 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ba44d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000efdfb : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f0376 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f9b62 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f9bba : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ffa15 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000104e2e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000104e96 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001098a4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001098f5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000134305 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013a243 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000035a94 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035b1d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035c46 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035c97 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035ec0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006d1fc : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006fe0c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007b9b1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007ba64 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008985a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdc59 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdc7e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdcb2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdcfe : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce6d8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce6f6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce71e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce76e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d5c3c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d5c6c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000dc122 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f5d69 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000105488 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000108644 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000112e86 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012cd1e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012e8b7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012edd7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001330a0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001330d3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000133adf : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000137ced : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000139200 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013921a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036954 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000003696b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036ab6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036acb : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036c5f : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036caf : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000079510 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000796cc : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007978a : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c8086 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c81f3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c89cd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000fccf3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000104f71 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000104fbf : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000001063e1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000010ea62 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000112fae : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000012bf76 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000130531 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136b67 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136c12 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000013a938 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b145 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000013bef6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000013bf3c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000014282c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000003a9fd : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x0000000000170888 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000005a37c : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000005a5dc : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000005721c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x000000000005778a : add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x000000000003a89b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000047a0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006e136 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000070abc : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000e13fd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f71a], al ; ret
0x000000000013c60d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000e17ed : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000e97bd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x0000000000101a3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000072fd4 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000007c961 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000013c1c9 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000b5776 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x0000000000168ced : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000016d13d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000012fb49 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000006f7d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000001015df : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000116a0e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000116a63 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000117f0e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000117f63 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000168ccd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000016d11d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a6d3d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000000a854d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000075510 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000c4990 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x0000000000056802 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056785 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000362c7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000365b7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000aa900 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dc1e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x00000000000aa38d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001bcd31 : add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000000e4781 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000002f6d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000103751 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103876 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000001039cf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103af4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103c7e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103da3 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103efc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000104021 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000001040d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000001040f5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000104115 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000104135 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103885 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000103b03 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000103db2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000104030 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000010407e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000010409e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000088cfd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00000000000d9808 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd981f
0x0000000000071034 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df33 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000001036ba : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103733 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001037df : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103858 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103938 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001039b1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103a5d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103ad6 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103be7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103c60 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103d0c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103d85 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103e65 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103ede : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103f8a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104003 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104255 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104275 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104295 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001042b5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001042d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001042f5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104315 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104335 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104355 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104375 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104395 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001043b5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001043d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001043f5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104415 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104435 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001036c9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103742 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001037ee : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103867 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103947 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001039c0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103a6c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103ae5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103bf6 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103c6f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103d1b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103d94 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103e74 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103eed : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103f99 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104012 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104155 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104175 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104195 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001041b5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001041d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001041f5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104215 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104235 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000000f5f6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000045f92 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000046328 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000046661 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000046c1c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000047d67 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000ddda7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000008e1e1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000009bd2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000affb7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000affb6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000b517c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000b517b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000005aef4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b5c14 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000dc610 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000005133c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010f7ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000094f9f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000094fc0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000e1a84 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000d5380 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000011012d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000144f2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001450bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014518d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014525d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014532d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001453fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001454cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014559d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014566d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014573d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014580d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001458dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001459ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014e75d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014e87d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014e99d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014eabd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ebdd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ecfd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ee1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ef3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f05d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f17d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f29d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f3bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f4dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f5fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f71d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000089fdd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a11d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a25d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a39d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a4dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a61d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a75d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a89d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a9dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ab1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ac5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ad9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008aedd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008b01d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008bd6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008beed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c06d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c1ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c36d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c4ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c66d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c7ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c96d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008caed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008cc6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008cded : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008cf6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008d0ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008d26d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000920ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009233d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009258d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000927dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000092a2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000092c7d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000092ecd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009311d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009336d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000935bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009380d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000093a5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000093cad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000093efd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009414d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000146d8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000146f2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014726d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014740d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001475ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014774d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001478ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147a8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147c2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147dcd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147f6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014810d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001482ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014844d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001489ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000148b8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000148f3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014911d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001492fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001494dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001496bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014989d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149a7d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149c5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149e3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a01d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a1fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a3dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c2ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c46d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c76d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c8ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014ca6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014cbed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014cd6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014ceed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d06d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d1ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d36d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d4ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d66d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d7ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fa2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fb9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fd0d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fe7d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014ffed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015015d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001502cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015043d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001505ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015071d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015088d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001509fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000150b6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000150cdd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000150e4d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016345d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016369d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001638dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000163b1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000163d5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000163f9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001641dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016441d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016465d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016489d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000164add : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000164d1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000164f5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016519d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001653dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000bd86d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x00000000001215b7 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000835df : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000019432d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000019ccce : add byte ptr [rax], al ; add byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x000000000008ec10 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ec36 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000d5b95 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5b26
0x00000000000b9df5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000f5d75 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000109d9d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000db242 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000db39e : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e07c5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000db0db : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000008d9f4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000c286f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000c5fe1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c7234 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c41fd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c4e71 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c2832 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a82b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x000000000005401a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000005478f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c4166 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c4572 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c67bd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c672d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c245e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c247e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c27b9 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c27d9 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c3c7a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c5f51 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fcd2f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000e072d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000003a26a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000003a2be : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006df7d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000077cbb : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000089819 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d33b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d3c2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012d9fd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ec8d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ae505 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000b0e65 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000b35f5 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000abc62 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000172932 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000017585e : add byte ptr [rax], al ; add byte ptr [rdi - 0x15], ah ; jmp rax
0x00000000000e8228 : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], dh ; ret
0x00000000001159b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00000000000aab95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b8fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015e3cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000160eed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015b96d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000015e43d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000160f5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000025c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d191d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ce25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000007a61d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000008eb2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000009671d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000c52e4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c7115 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000cae01 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c55fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x000000000013d44b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bc6a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a84e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000000df15a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00000000000456ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x0000000000142b5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00000000000fb888 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x0000000000115808 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000eaf38 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xa6e9
0x00000000000b64ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000b64ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d789e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c354f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00000000000e071b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000014a775 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000061a3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d8eac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00000000001a839e : add byte ptr [rax], al ; add byte ptr [rdx - 0x10], cl ; call qword ptr [rdx]
0x000000000019e00e : add byte ptr [rax], al ; add byte ptr [rdx - 0x17], dh ; jmp qword ptr [rsi]
0x000000000016e752 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e76d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e788 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7a3 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7be : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7d9 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7f4 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e80f : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec6a : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec85 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eca0 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecbb : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecd6 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecf1 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed0c : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed27 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd82 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd9d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdb8 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdd3 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdee : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe09 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe24 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe3f : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017029a : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702b5 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702d0 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702eb : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170306 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170321 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017033c : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170357 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008ea42 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000103693 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000010370c : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000001037b8 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103831 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103911 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000010398a : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103a36 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103aaf : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103bc0 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103c39 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103ce5 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103d5e : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103e3e : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103eb7 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103f63 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103fdc : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f68d5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000001bad26 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000001a682e : add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x00000000000f5f47 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000019f17a : add byte ptr [rax], al ; add byte ptr ss:[rax], al ; add al, 0xe9 ; call qword ptr [rsi]
0x000000000019f23e : add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x000000000019f26e : add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x00000000000e4c95 : add byte ptr [rax], al ; add cl, al ; call 0x66d0d5ad
0x0000000000067495 : add byte ptr [rax], al ; add cl, ch ; pop rdi ; ret 0xffff
0x000000000002d2c5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000067f52 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000009e3af : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000b9da7 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000edbd2 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000f41d2 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000012afb7 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000014a655 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000060226 : add byte ptr [rax], al ; add cl, ch ; ret 0xffb8
0x0000000000067732 : add byte ptr [rax], al ; add cl, ch ; ret 0xffbf
0x000000000009e7e5 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd3
0x000000000009e6b1 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff5
0x000000000002b0af : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000000f0c31 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000006084f : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x0000000000065893 : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000007d778 : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000007e241 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000084609 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000023ff4 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e45e7 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000e45f6 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000011740d : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000011755d : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000011852d : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000011867d : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000171da1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000171da1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000061ba2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000000a12b0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000a2ed0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000a12b9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000a2ed9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000e46a9 : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00000000000d5b96 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001af19a : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000001a58be : add byte ptr [rax], al ; add esi, ebp ; call qword ptr [rsi]
0x00000000000abf4e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059820 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x00000000000598d3 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005996c : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x0000000000059ca7 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x0000000000059cfe : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x0000000000059fb7 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005a004 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005a073 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005a0c0 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005b164 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005b2db : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000008e8f4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000000aaec1 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000004da4e : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004daaf : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004db10 : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004e61b : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004e6fc : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004e753 : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004f9c1 : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004fa18 : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004facf : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004fc79 : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004fcda : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004fd6e : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x0000000000132df1 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000138f71 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000139691 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000135871 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000134fd1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000132254 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000012eb55 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ebd5 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014439c : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014433e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000359da : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000035a2d : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000353a8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00000000000361ae : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000013af21 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013afa0 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f5f89 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000f5f99 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000f6b8f : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000f6bc1 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000fc777 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000020b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007abac : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ae5b : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034b20 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000034e53 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000119353 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000012f81d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000209ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000035697 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000045cf1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000006a915 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000006bb55 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000071530 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000000bae55 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000001166ab : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000001167f6 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000117ce6 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000001188f0 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000118af0 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008d85a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e6b8 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bdb69 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c883d : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cf4a9 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f44b3 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c25 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106312 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f2f3 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f92b : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013046e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013061e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013ddcb : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001752e9 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035178 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000036e8e : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003a957 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fdea2 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fe43e : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fe651 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff798 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff7c8 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ffacb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000101485 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000109318 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001191e1 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000011fe8f : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001249fe : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138349 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138379 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140f60 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014113f : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000141621 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000173df0 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000174245 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001745d2 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000017467e : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001a5eae : add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x000000000019d45a : add byte ptr [rax], al ; and al, 0x19 ; add byte ptr [rax], al ; push rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001972f6 : add byte ptr [rax], al ; and al, 0x44 ; jmp 0x197300
0x00000000001b055a : add byte ptr [rax], al ; and al, 0x4a ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a0a5a : add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; nop ; push rax ; jmp 0x1a0a6c
0x0000000000197d1e : add byte ptr [rax], al ; and al, 0x62 ; out dx, al ; call rsp
0x00000000001b295a : add byte ptr [rax], al ; and al, 0x6e ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019780e : add byte ptr [rax], al ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001a7c7e : add byte ptr [rax], al ; and bl, 0xef ; call rsp
0x0000000000126a78 : add byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0x126a45
0x00000000001a758e : add byte ptr [rax], al ; and byte ptr [rbx - 0x11], dh ; call rax
0x00000000001adb9a : add byte ptr [rax], al ; and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a248e : add byte ptr [rax], al ; and ch, dh ; in al, dx ; call qword ptr [rsi]
0x0000000000077eee : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000002e0eb : add byte ptr [rax], al ; and eax, esi ; ret
0x00000000001b2c2f : add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008eb2e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000009671e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000008b7a0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008b960 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008b7a0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008b960 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008d454 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000019bc66 : add byte ptr [rax], al ; call 0x1119a4be
0x0000000000088e1c : add byte ptr [rax], al ; call 0x115084
0x00000000000c8dc5 : add byte ptr [rax], al ; call 0x115084
0x00000000001a4616 : add byte ptr [rax], al ; call 0x121a3395
0x000000000019d986 : add byte ptr [rax], al ; call 0x1319c2d7
0x000000000019ed96 : add byte ptr [rax], al ; call 0x1319d75a
0x000000000019da36 : add byte ptr [rax], al ; call 0x1819c38d
0x00000000000f3fdb : add byte ptr [rax], al ; call 0x2027d
0x00000000001a8246 : add byte ptr [rax], al ; call 0x281a7298
0x00000000001ab206 : add byte ptr [rax], al ; call 0x281aa43b
0x0000000000021956 : add byte ptr [rax], al ; call 0x2dc44
0x0000000000021975 : add byte ptr [rax], al ; call 0x2dc44
0x00000000000b1948 : add byte ptr [rax], al ; call 0x2dc44
0x00000000001419e0 : add byte ptr [rax], al ; call 0x2dc44
0x00000000001123c9 : add byte ptr [rax], al ; call 0x2e624
0x0000000000080fdf : add byte ptr [rax], al ; call 0x7d284
0x0000000000081041 : add byte ptr [rax], al ; call 0x7d284
0x0000000000081060 : add byte ptr [rax], al ; call 0x7d284
0x000000000017513e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000017513e : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a6 : add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000000bc20d : add byte ptr [rax], al ; call r12
0x0000000000020850 : add byte ptr [rax], al ; call rax
0x0000000000020b4b : add byte ptr [rax], al ; call rax
0x0000000000022730 : add byte ptr [rax], al ; call rax
0x00000000000229c0 : add byte ptr [rax], al ; call rax
0x000000000002ae17 : add byte ptr [rax], al ; call rax
0x000000000002ae5c : add byte ptr [rax], al ; call rax
0x000000000002b139 : add byte ptr [rax], al ; call rax
0x000000000002b301 : add byte ptr [rax], al ; call rax
0x000000000002b421 : add byte ptr [rax], al ; call rax
0x000000000002b454 : add byte ptr [rax], al ; call rax
0x000000000002b479 : add byte ptr [rax], al ; call rax
0x000000000002d181 : add byte ptr [rax], al ; call rax
0x000000000002d1f6 : add byte ptr [rax], al ; call rax
0x000000000002d58a : add byte ptr [rax], al ; call rax
0x000000000002d7a1 : add byte ptr [rax], al ; call rax
0x000000000002d7ce : add byte ptr [rax], al ; call rax
0x000000000002d879 : add byte ptr [rax], al ; call rax
0x000000000002d899 : add byte ptr [rax], al ; call rax
0x000000000002dbfe : add byte ptr [rax], al ; call rax
0x000000000002e2a1 : add byte ptr [rax], al ; call rax
0x000000000002e379 : add byte ptr [rax], al ; call rax
0x000000000002e4f5 : add byte ptr [rax], al ; call rax
0x000000000002e5d9 : add byte ptr [rax], al ; call rax
0x000000000002f2e9 : add byte ptr [rax], al ; call rax
0x000000000002f30c : add byte ptr [rax], al ; call rax
0x000000000002f604 : add byte ptr [rax], al ; call rax
0x000000000002f983 : add byte ptr [rax], al ; call rax
0x000000000002fb8d : add byte ptr [rax], al ; call rax
0x00000000000300e5 : add byte ptr [rax], al ; call rax
0x0000000000030110 : add byte ptr [rax], al ; call rax
0x0000000000030132 : add byte ptr [rax], al ; call rax
0x000000000003015b : add byte ptr [rax], al ; call rax
0x00000000000301b9 : add byte ptr [rax], al ; call rax
0x00000000000301e4 : add byte ptr [rax], al ; call rax
0x000000000003027a : add byte ptr [rax], al ; call rax
0x00000000000302a5 : add byte ptr [rax], al ; call rax
0x0000000000030481 : add byte ptr [rax], al ; call rax
0x00000000000304ac : add byte ptr [rax], al ; call rax
0x00000000000305bc : add byte ptr [rax], al ; call rax
0x00000000000305fa : add byte ptr [rax], al ; call rax
0x0000000000030719 : add byte ptr [rax], al ; call rax
0x0000000000030741 : add byte ptr [rax], al ; call rax
0x00000000000308cc : add byte ptr [rax], al ; call rax
0x00000000000308eb : add byte ptr [rax], al ; call rax
0x00000000000326a2 : add byte ptr [rax], al ; call rax
0x0000000000032701 : add byte ptr [rax], al ; call rax
0x000000000003a014 : add byte ptr [rax], al ; call rax
0x00000000000450e3 : add byte ptr [rax], al ; call rax
0x0000000000045109 : add byte ptr [rax], al ; call rax
0x000000000004776d : add byte ptr [rax], al ; call rax
0x00000000000477b0 : add byte ptr [rax], al ; call rax
0x00000000000477dc : add byte ptr [rax], al ; call rax
0x0000000000050027 : add byte ptr [rax], al ; call rax
0x0000000000058baa : add byte ptr [rax], al ; call rax
0x000000000005b7db : add byte ptr [rax], al ; call rax
0x000000000005be85 : add byte ptr [rax], al ; call rax
0x0000000000063b38 : add byte ptr [rax], al ; call rax
0x000000000006ddda : add byte ptr [rax], al ; call rax
0x000000000006de2c : add byte ptr [rax], al ; call rax
0x000000000006f1f7 : add byte ptr [rax], al ; call rax
0x000000000006f21e : add byte ptr [rax], al ; call rax
0x000000000006f54f : add byte ptr [rax], al ; call rax
0x000000000007ac87 : add byte ptr [rax], al ; call rax
0x000000000007af17 : add byte ptr [rax], al ; call rax
0x000000000007be29 : add byte ptr [rax], al ; call rax
0x000000000007c24b : add byte ptr [rax], al ; call rax
0x000000000007c718 : add byte ptr [rax], al ; call rax
0x000000000008d808 : add byte ptr [rax], al ; call rax
0x000000000008d9cf : add byte ptr [rax], al ; call rax
0x000000000008da28 : add byte ptr [rax], al ; call rax
0x000000000008da58 : add byte ptr [rax], al ; call rax
0x00000000000ba071 : add byte ptr [rax], al ; call rax
0x00000000000ba09f : add byte ptr [rax], al ; call rax
0x00000000000c7681 : add byte ptr [rax], al ; call rax
0x00000000000c7ac6 : add byte ptr [rax], al ; call rax
0x00000000000c7af9 : add byte ptr [rax], al ; call rax
0x00000000000c7c59 : add byte ptr [rax], al ; call rax
0x00000000000c7c89 : add byte ptr [rax], al ; call rax
0x00000000000c7e33 : add byte ptr [rax], al ; call rax
0x00000000000c7e64 : add byte ptr [rax], al ; call rax
0x00000000000c96a2 : add byte ptr [rax], al ; call rax
0x00000000000cc66f : add byte ptr [rax], al ; call rax
0x00000000000cd30f : add byte ptr [rax], al ; call rax
0x00000000000cd37f : add byte ptr [rax], al ; call rax
0x00000000000cd5dd : add byte ptr [rax], al ; call rax
0x00000000000cd65d : add byte ptr [rax], al ; call rax
0x00000000000ef5e0 : add byte ptr [rax], al ; call rax
0x00000000000f317b : add byte ptr [rax], al ; call rax
0x00000000000f364d : add byte ptr [rax], al ; call rax
0x00000000000fd1f6 : add byte ptr [rax], al ; call rax
0x00000000000fd266 : add byte ptr [rax], al ; call rax
0x00000000000fd2f1 : add byte ptr [rax], al ; call rax
0x00000000000fd3a1 : add byte ptr [rax], al ; call rax
0x00000000000fe4d0 : add byte ptr [rax], al ; call rax
0x0000000000105422 : add byte ptr [rax], al ; call rax
0x0000000000105480 : add byte ptr [rax], al ; call rax
0x00000000001054ac : add byte ptr [rax], al ; call rax
0x0000000000105599 : add byte ptr [rax], al ; call rax
0x000000000010561c : add byte ptr [rax], al ; call rax
0x000000000010564c : add byte ptr [rax], al ; call rax
0x0000000000114ec7 : add byte ptr [rax], al ; call rax
0x0000000000115ba0 : add byte ptr [rax], al ; call rax
0x0000000000129099 : add byte ptr [rax], al ; call rax
0x000000000012a1b1 : add byte ptr [rax], al ; call rax
0x000000000012b9b0 : add byte ptr [rax], al ; call rax
0x0000000000132299 : add byte ptr [rax], al ; call rax
0x0000000000138298 : add byte ptr [rax], al ; call rax
0x000000000014450c : add byte ptr [rax], al ; call rax
0x0000000000103699 : add byte ptr [rax], al ; call rbx
0x0000000000103712 : add byte ptr [rax], al ; call rbx
0x00000000001037be : add byte ptr [rax], al ; call rbx
0x0000000000103837 : add byte ptr [rax], al ; call rbx
0x0000000000103917 : add byte ptr [rax], al ; call rbx
0x0000000000103990 : add byte ptr [rax], al ; call rbx
0x0000000000103a3c : add byte ptr [rax], al ; call rbx
0x0000000000103ab5 : add byte ptr [rax], al ; call rbx
0x0000000000103bc6 : add byte ptr [rax], al ; call rbx
0x0000000000103c3f : add byte ptr [rax], al ; call rbx
0x0000000000103ceb : add byte ptr [rax], al ; call rbx
0x0000000000103d64 : add byte ptr [rax], al ; call rbx
0x0000000000103e44 : add byte ptr [rax], al ; call rbx
0x0000000000103ebd : add byte ptr [rax], al ; call rbx
0x0000000000103f69 : add byte ptr [rax], al ; call rbx
0x0000000000103fe2 : add byte ptr [rax], al ; call rbx
0x00000000001439ee : add byte ptr [rax], al ; call rcx
0x000000000018025e : add byte ptr [rax], al ; call rdi
0x0000000000039fcc : add byte ptr [rax], al ; call rdx
0x0000000000039ff4 : add byte ptr [rax], al ; call rdx
0x000000000003a366 : add byte ptr [rax], al ; call rdx
0x000000000003a424 : add byte ptr [rax], al ; call rdx
0x000000000017f40e : add byte ptr [rax], al ; call rsp
0x00000000001ab146 : add byte ptr [rax], al ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x000000000019e596 : add byte ptr [rax], al ; clc ; jl 0x19e589 ; jmp rsp
0x00000000001860f6 : add byte ptr [rax], al ; clc ; loope 0x1860ff ; jmp qword ptr [rdi]
0x0000000000186176 : add byte ptr [rax], al ; clc ; loope 0x18617f ; jmp qword ptr [rdi]
0x00000000001861f6 : add byte ptr [rax], al ; clc ; loope 0x1861ff ; jmp qword ptr [rdi]
0x000000000019ecb6 : add byte ptr [rax], al ; clc ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000001a9a46 : add byte ptr [rax], al ; clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x00000000001a6386 : add byte ptr [rax], al ; clc ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab286 : add byte ptr [rax], al ; clc ; sub esi, edx ; jmp rcx
0x00000000001a7b76 : add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001ace32 : add byte ptr [rax], al ; cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x00000000001a11aa : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000001b0932 : add byte ptr [rax], al ; cld ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0832 : add byte ptr [rax], al ; cld ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b0632 : add byte ptr [rax], al ; cld ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001aa032 : add byte ptr [rax], al ; cld ; in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001b0c32 : add byte ptr [rax], al ; cld ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0c39 ; jmp qword ptr [rcx]
0x00000000001ab082 : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; cwde ; and esi, edx ; jmp qword ptr [rcx]
0x00000000000fb889 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000108ab9 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000b64ed : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001238af : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001238cd : add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000012390a : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000b64ed : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001238af : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001238cd : add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000012390a : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000d6c3f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fdc97 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cbf7c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000cbf7c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000115809 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000097488 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000000cd9ad : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000cdadd : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000cd9ad : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000cdadd : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000010ed0f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000019d472 : add byte ptr [rax], al ; cmp al, 0x19 ; add byte ptr [rax], al ; pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001aea72 : add byte ptr [rax], al ; cmp al, 0x2f ; add dword ptr [rax], eax ; js 0x1aea62 ; hlt ; call qword ptr [rbx]
0x00000000001b0772 : add byte ptr [rax], al ; cmp al, 0x4c ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0b72 : add byte ptr [rax], al ; cmp al, 0x50 ; add dword ptr [rax], eax ; js 0x1b0bf3 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2c72 : add byte ptr [rax], al ; cmp al, 0x71 ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b5472 : add byte ptr [rax], al ; cmp al, 0x99 ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a6672 : add byte ptr [rax], al ; cmp al, 0xab ; add byte ptr [rax], al ; js 0x1a66f3 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a7b72 : add byte ptr [rax], al ; cmp al, 0xc0 ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001a8036 : add byte ptr [rax], al ; cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00000000001bbf72 : add byte ptr [rax], al ; cmp al, 4 ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x000000000016cc06 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cc6e : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016ce73 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016ce96 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cebc : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cee4 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cf0a : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cf3c : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cf6a : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cf9c : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cfcc : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cffc : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d02c : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d05e : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d08e : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d0be : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001a6446 : add byte ptr [rax], al ; cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x0000000000074697 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x746a8 ; pop rbx ; ret
0x00000000000cc6f0 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcc703 ; ret
0x00000000001972a6 : add byte ptr [rax], al ; cmp ebp, ebx ; jmp rsp
0x00000000000acc17 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xacc31 ; mov eax, edi ; ret
0x0000000000072aa5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x72ab9 ; ret
0x0000000000083f87 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x83f58 ; ret
0x00000000000cda94 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xcdac7 ; ret
0x00000000001ab086 : add byte ptr [rax], al ; cwde ; and esi, edx ; jmp qword ptr [rcx]
0x000000000019d596 : add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001afd12 : add byte ptr [rax], al ; fadd qword ptr [rcx + 1] ; add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001acf12 : add byte ptr [rax], al ; fcom qword ptr [rbx] ; add dword ptr [rax], eax ; fcomp st(2) ; call qword ptr [rdx]
0x00000000001a7786 : add byte ptr [rax], al ; fcomp st(1) ; cld ; call qword ptr [rax]
0x00000000001b2c12 : add byte ptr [rax], al ; fdiv qword ptr [rax + 1] ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6c12 : add byte ptr [rax], al ; fdiv qword ptr [rax - 0x4ec80000] ; out dx, al ; call qword ptr [rax]
0x00000000001af512 : add byte ptr [rax], al ; fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001af912 : add byte ptr [rax], al ; fdivr qword ptr [rip + 0x1e280001] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b12 : add byte ptr [rax], al ; fmul qword ptr [rdi + 1] ; add byte ptr [rax], bl ; jo 0x1b0b19 ; jmp qword ptr [rcx]
0x00000000001a0b12 : add byte ptr [rax], al ; fmul qword ptr [rdi] ; add byte ptr [rax + 0x53], cl ; jmp 0x1a0b24
0x00000000001a4612 : add byte ptr [rax], al ; fmul qword ptr [rdx + 0x73e80000] ; in eax, dx ; call qword ptr [rcx]
0x00000000000350d6 : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000001adc12 : add byte ptr [rax], al ; fsub qword ptr [rax] ; add dword ptr [rax], eax ; call 0x221ad0b9
0x00000000001a4446 : add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x00000000001a7d56 : add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001aa2f6 : add byte ptr [rax], al ; fsubr st(6) ; int1 ; jmp rcx
0x00000000001acc2a : add byte ptr [rax], al ; hlt ; adc byte ptr [rcx], al ; add al, ah ; ret
0x00000000001b032a : add byte ptr [rax], al ; hlt ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001aea2a : add byte ptr [rax], al ; hlt ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af22a : add byte ptr [rax], al ; hlt ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0b2a : add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001ade2a : add byte ptr [rax], al ; hlt ; and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001af92a : add byte ptr [rax], al ; hlt ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x00000000001a622a : add byte ptr [rax], al ; hlt ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x00000000001b2c2a : add byte ptr [rax], al ; hlt ; jo 0x1b2c39 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a682a : add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x00000000001aa22a : add byte ptr [rax], al ; hlt ; out 0, al ; add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x00000000001ad82a : add byte ptr [rax], al ; hlt ; sbb al, 1 ; add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x00000000001ace1a : add byte ptr [rax], al ; in al, 0x12 ; add dword ptr [rax], eax ; xor dl, bl ; jmp qword ptr [rcx]
0x000000000019e21a : add byte ptr [rax], al ; in al, 0x26 ; add byte ptr [rax], al ; jne 0x19e215 ; jmp qword ptr [rcx]
0x00000000001b0f1a : add byte ptr [rax], al ; in al, 0x53 ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0f21 ; jmp qword ptr [rcx]
0x00000000001a531a : add byte ptr [rax], al ; in al, 0x97 ; add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000001a931a : add byte ptr [rax], al ; in al, 0xd7 ; add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x00000000001bab1a : add byte ptr [rax], al ; in al, 0xef ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001b0a22 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adf22 : add byte ptr [rax], al ; in al, dx ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a6e22 : add byte ptr [rax], al ; in al, dx ; mov dl, 0 ; add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x00000000001b2b22 : add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b244e
0x00000000001a6b22 : add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a6722 : add byte ptr [rax], al ; in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jae 0x1a6722 ; jmp qword ptr [rdx]
0x0000000000196be6 : add byte ptr [rax], al ; in eax, 0xe9 ; call rsp
0x00000000001974b6 : add byte ptr [rax], al ; in eax, dx ; jmp rsp
0x00000000001af9a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; call 0x221aeed4
0x00000000001bb0a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001af3a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001bafa2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; hlt ; add dword ptr [rax], eax ; js 0x1baf4b ; sti ; jmp qword ptr [rdx]
0x00000000001a45a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000001ba1a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x00000000001b29a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b59a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000001b64a2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test eax, 0xe1f80001 ; sti ; call rsi
0x00000000001aeda2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001bc57e : add byte ptr [rax], al ; int1 ; or byte ptr [rbx], al ; ret
0x000000000019e00f : add byte ptr [rax], al ; jb 0x19e000 ; jmp qword ptr [rsi]
0x00000000000f68d6 : add byte ptr [rax], al ; jbe 0xf68e5 ; ret
0x00000000001974de : add byte ptr [rax], al ; je 0x197538 ; in eax, dx ; jmp rsp
0x00000000001a49aa : add byte ptr [rax], al ; je 0x1a4945 ; add byte ptr [rax], al ; sar byte ptr [rdi - 0x13], 1 ; jmp qword ptr [rbx]
0x00000000001a5eaa : add byte ptr [rax], al ; je 0x1a5e5a ; add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x00000000001a69aa : add byte ptr [rax], al ; je 0x1a6965 ; add byte ptr [rax], al ; nop ; mov dh, ch ; jmp rbx
0x00000000001a7dde : add byte ptr [rax], al ; je 0x1a7de9 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001aefaa : add byte ptr [rax], al ; je 0x1aefeb ; add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0caa : add byte ptr [rax], al ; je 0x1b0d08 ; add dword ptr [rax], eax ; jb 0x1b0cb1 ; jmp qword ptr [rcx]
0x000000000006d82c : add byte ptr [rax], al ; je 0x6d83f ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc1 : add byte ptr [rax], al ; je 0x6fdd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f5 : add byte ptr [rax], al ; je 0x70507 ; mov eax, esi ; pop rbx ; ret
0x0000000000070677 : add byte ptr [rax], al ; je 0x70687 ; mov eax, esi ; pop rbx ; ret
0x0000000000070feb : add byte ptr [rax], al ; je 0x71000 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118e : add byte ptr [rax], al ; je 0x711a7 ; mov eax, edx ; pop rbx ; ret
0x0000000000071325 : add byte ptr [rax], al ; je 0x71337 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b83 : add byte ptr [rax], al ; je 0x75b97 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f88 : add byte ptr [rax], al ; je 0x75f97 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ac : add byte ptr [rax], al ; je 0x760bf ; mov eax, esi ; pop rbx ; ret
0x00000000000761ee : add byte ptr [rax], al ; je 0x76207 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d3 : add byte ptr [rax], al ; je 0x764e7 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e78 : add byte ptr [rax], al ; je 0x76e87 ; mov eax, edx ; pop rbx ; ret
0x0000000000078084 : add byte ptr [rax], al ; je 0x78097 ; mov eax, edx ; pop rbx ; ret
0x0000000000087607 : add byte ptr [rax], al ; je 0x87614 ; ret
0x0000000000088f26 : add byte ptr [rax], al ; je 0x88f34 ; ret
0x0000000000094426 : add byte ptr [rax], al ; je 0x9442f ; ret
0x00000000000ac564 : add byte ptr [rax], al ; je 0xac5d8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000cdabb : add byte ptr [rax], al ; je 0xcdb0e ; mov eax, 0x20 ; ret
0x00000000000e8496 : add byte ptr [rax], al ; je 0xe84d6 ; xor eax, eax ; ret
0x00000000000f5f48 : add byte ptr [rax], al ; je 0xf5f55 ; ret
0x0000000000172933 : add byte ptr [rax], al ; jg 0x172946 ; neg eax ; ret
0x00000000000abc63 : add byte ptr [rax], al ; jg 0xabc6f ; neg eax ; ret
0x0000000000170889 : add byte ptr [rax], al ; jl 0x170896 ; neg eax ; ret
0x000000000019dbb2 : add byte ptr [rax], al ; jl 0x19dbdf ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0x17], dl ; jmp rdx
0x000000000019ecb2 : add byte ptr [rax], al ; jl 0x19ecf0 ; add byte ptr [rax], al ; clc ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000001adbb2 : add byte ptr [rax], al ; jl 0x1adbdf ; add dword ptr [rax], eax ; pop rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001b2bb2 : add byte ptr [rax], al ; jl 0x1b2c2f ; add dword ptr [rax], eax ; call 0x271b24de
0x00000000001bc1b2 : add byte ptr [rax], al ; jl 0x1bc1c5 ; add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x00000000001a682f : add byte ptr [rax], al ; jle 0x1a6825 ; jmp qword ptr [rcx]
0x000000000017585f : add byte ptr [rax], al ; jmp 0x175867
0x00000000001a06be : add byte ptr [rax], al ; jmp 0x1a06c8
0x000000000005f80f : add byte ptr [rax], al ; jmp 0x5baf4
0x0000000000060850 : add byte ptr [rax], al ; jmp 0x5ca9b
0x0000000000067496 : add byte ptr [rax], al ; jmp 0x63700
0x000000000007b5dc : add byte ptr [rax], al ; jmp 0x7b5c2
0x00000000000bf713 : add byte ptr [rax], al ; jmp 0xbb945
0x00000000000bf1e9 : add byte ptr [rax], al ; jmp 0xbf1b2
0x0000000000035325 : add byte ptr [rax], al ; jmp rax
0x0000000000058e1b : add byte ptr [rax], al ; jmp rax
0x000000000006dd9e : add byte ptr [rax], al ; jmp rax
0x000000000006de6e : add byte ptr [rax], al ; jmp rax
0x00000000000c7661 : add byte ptr [rax], al ; jmp rax
0x0000000000102884 : add byte ptr [rax], al ; jmp rax
0x000000000010289e : add byte ptr [rax], al ; jmp rax
0x0000000000114ad2 : add byte ptr [rax], al ; jmp rax
0x0000000000114b02 : add byte ptr [rax], al ; jmp rax
0x0000000000114b32 : add byte ptr [rax], al ; jmp rax
0x0000000000114b62 : add byte ptr [rax], al ; jmp rax
0x0000000000114b92 : add byte ptr [rax], al ; jmp rax
0x0000000000114bc2 : add byte ptr [rax], al ; jmp rax
0x0000000000114bf2 : add byte ptr [rax], al ; jmp rax
0x0000000000114c22 : add byte ptr [rax], al ; jmp rax
0x0000000000114c52 : add byte ptr [rax], al ; jmp rax
0x0000000000114c82 : add byte ptr [rax], al ; jmp rax
0x0000000000114cb2 : add byte ptr [rax], al ; jmp rax
0x0000000000114ce2 : add byte ptr [rax], al ; jmp rax
0x0000000000114d12 : add byte ptr [rax], al ; jmp rax
0x0000000000114d42 : add byte ptr [rax], al ; jmp rax
0x0000000000114d72 : add byte ptr [rax], al ; jmp rax
0x0000000000114da2 : add byte ptr [rax], al ; jmp rax
0x0000000000114dd2 : add byte ptr [rax], al ; jmp rax
0x0000000000114e02 : add byte ptr [rax], al ; jmp rax
0x0000000000114e32 : add byte ptr [rax], al ; jmp rax
0x0000000000114e62 : add byte ptr [rax], al ; jmp rax
0x0000000000114e92 : add byte ptr [rax], al ; jmp rax
0x0000000000114ef2 : add byte ptr [rax], al ; jmp rax
0x0000000000114f22 : add byte ptr [rax], al ; jmp rax
0x0000000000114f52 : add byte ptr [rax], al ; jmp rax
0x0000000000114f82 : add byte ptr [rax], al ; jmp rax
0x0000000000114fb2 : add byte ptr [rax], al ; jmp rax
0x0000000000114fe2 : add byte ptr [rax], al ; jmp rax
0x0000000000115012 : add byte ptr [rax], al ; jmp rax
0x0000000000115042 : add byte ptr [rax], al ; jmp rax
0x0000000000115072 : add byte ptr [rax], al ; jmp rax
0x0000000000128380 : add byte ptr [rax], al ; jmp rax
0x0000000000143523 : add byte ptr [rax], al ; jmp rax
0x0000000000143554 : add byte ptr [rax], al ; jmp rax
0x00000000001443d2 : add byte ptr [rax], al ; jmp rax
0x0000000000144402 : add byte ptr [rax], al ; jmp rax
0x0000000000144432 : add byte ptr [rax], al ; jmp rax
0x0000000000144462 : add byte ptr [rax], al ; jmp rax
0x0000000000144492 : add byte ptr [rax], al ; jmp rax
0x00000000001444c2 : add byte ptr [rax], al ; jmp rax
0x00000000001744b2 : add byte ptr [rax], al ; jmp rax
0x000000000013225b : add byte ptr [rax], al ; jmp rcx
0x000000000019e21e : add byte ptr [rax], al ; jne 0x19e211 ; jmp qword ptr [rcx]
0x00000000000cd98f : add byte ptr [rax], al ; jne 0xcd960 ; ret
0x00000000000cdb9e : add byte ptr [rax], al ; jne 0xcdb81 ; xor eax, eax ; ret
0x000000000019cccf : add byte ptr [rax], al ; jno 0x19ccd4 ; jmp qword ptr [rdi]
0x000000000019c1fe : add byte ptr [rax], al ; jnp 0x19c205 ; jmp qword ptr [rdx]
0x00000000001a5f0e : add byte ptr [rax], al ; jo 0x1a5f40 ; out dx, al ; jmp qword ptr [rdi]
0x00000000001b0aff : add byte ptr [rax], al ; jo 0x1b0afc ; jmp qword ptr [rcx]
0x00000000001b2b82 : add byte ptr [rax], al ; jo 0x1b2b91 ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000019c336 : add byte ptr [rax], al ; js 0x19c328 ; call qword ptr [rax]
0x000000000019c34e : add byte ptr [rax], al ; js 0x19c340 ; jmp qword ptr [rcx]
0x000000000019d9d6 : add byte ptr [rax], al ; js 0x19da2a ; jmp 0x1b9ce4
0x00000000001a6676 : add byte ptr [rax], al ; js 0x1a66ef ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6af6 : add byte ptr [rax], al ; js 0x1a6afe ; stc ; call qword ptr [rax]
0x00000000000cdbf5 : add byte ptr [rax], al ; js 0xcdc05 ; ret
0x00000000001bc714 : add byte ptr [rax], al ; lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bc6bc : add byte ptr [rax], al ; lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x000000000012cb81 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cf68 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000170b6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000170b7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000170b8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000170b9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000170bae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000170acd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000170aee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000170afe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000170b0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170b1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000170b2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000170b3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000170a7a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170b4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000170b5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac43b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac49d : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac4e0 : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac50a : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac59e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac5be : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac5ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000170ade : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002092e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16bd34] ; ret
0x000000000002093e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16dc63] ; ret
0x000000000012b0ee : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x61a2e] ; ret
0x000000000012070e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a7fe5] ; call rax
0x00000000000450dc : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f217 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007bf07 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c2f7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c747 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f510 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ac37 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007aea7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000001b0ae2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; call 0x221b0065
0x00000000001a6be2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b0fe2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fe9 ; jmp qword ptr [rbx]
0x00000000001a7de2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001bc6c8 : add byte ptr [rax], al ; loopne 0x1bc6db ; ret 0xb
0x00000000001bc720 : add byte ptr [rax], al ; loopne 0x1bc732 ; ret 0xa
0x00000000001acdea : add byte ptr [rax], al ; mov ah, 0x12 ; add dword ptr [rax], eax ; add dl, bl ; jmp qword ptr [rcx]
0x000000000019d4ea : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000001ad7ea : add byte ptr [rax], al ; mov ah, 0x1c ; add dword ptr [rax], eax ; nop ; xchg esp, esi ; call qword ptr [rax]
0x00000000001aebea : add byte ptr [rax], al ; mov ah, 0x30 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001af9ea : add byte ptr [rax], al ; mov ah, 0x3e ; add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b05ea : add byte ptr [rax], al ; mov ah, 0x4a ; add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b3bea : add byte ptr [rax], al ; mov ah, 0x80 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000019762e : add byte ptr [rax], al ; mov ah, 0x94 ; in eax, dx ; jmp rsp
0x00000000001977ce : add byte ptr [rax], al ; mov ah, 0xc4 ; in eax, dx ; call rsp
0x00000000001a994e : add byte ptr [rax], al ; mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x00000000001a531e : add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000001a4d7e : add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000016afee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000166cbe : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000168c8e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000016d0de : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d590e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009e9be : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009ea3e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a732e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5d2e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a8e0e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a98de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfe : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a850e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a69fe : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000072b7b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168cce : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000016d11e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cee : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000016d13e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168cde : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000016d12e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168cbe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000016d10e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f5f6e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a6d1e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a852e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009e9ee : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a6d3e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a854e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d4e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a855e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6d2e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000a853e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000055765 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000012d97e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000012d96e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x000000000012d99e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000012d98e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000f67f4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f6804 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000c9dd0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000cb2e0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010c180 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010d900 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011a966 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011b2f6 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011bc96 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011cbc6 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000120830 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000131bf6 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000a5d3e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a6a0e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a8e1e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a98ee : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000008779e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x0000000000115986 : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x0000000000142cac : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000cd23e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000cd25e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000cd24e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000cd26e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000cd47e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000cd959 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000bc36e : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x00000000001077ee : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000cda1e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000011958a : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000001428c9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033f0c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000072091 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000072251 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003548c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003570c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000035fac : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000036064 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003609c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000360dc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003611c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003613c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003627f : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003656c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003685c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003ac34 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003accc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003b19e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000003b20e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000052ce4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007222e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000073ca1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000074651 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000748b8 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000075af4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007786c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007a6d1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007a8e1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007b5ee : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007cabe : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007caee : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000886ae : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000bf69c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000c840c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000cacfc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000cc84c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ccdd4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f6c14 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f6c64 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f6cb4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f6d14 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f6d74 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f6dcc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f6f4c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f6fac : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f6fc4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f9a3c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f9adc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fbafe : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fbb54 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fc37c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fc3dc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fce6c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fdbac : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fdccc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fdcfc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ff084 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ff124 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000101d36 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001056f4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000011591c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001186f4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001235ce : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000123c1e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000013cc1e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000013dd66 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000014067c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001406cc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000014071c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000014073c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000140cdc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001412d3 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001428e4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012b04e : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000004a0b4 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000004a107 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000cea36 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000fb5bc : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000fe65e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000110c0e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012b05e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012b7ae : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001322f9 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001323d5 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001323e5 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000132414 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000132441 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001350d5 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001350e5 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000135955 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000135965 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000013a98e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000013b11e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012e09e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000132dae : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000138f2e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000105fca : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000016e3de : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007c85e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000012d8cc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013c15e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d723e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f5f5e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007742e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000773fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000007302e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x000000000003687e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38d802] ; ret
0x000000000006f7d8 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001015e0 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000002122c : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000070156 : add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000fd30c : add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000fd3bc : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010cfbb : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000140fff : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000001412af : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x000000000014136f : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000054e52 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006d875 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000007014d : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000711dd : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000007136d : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000075bcd : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000075fcd : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000007651d : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000076ebd : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000780cd : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000bc60a : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000bc66d : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000011fc9a : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000218a3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000754ca : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000759a4 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000075a94 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000116a0f : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116a64 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117f0f : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117f64 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116be8 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116c34 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001180e8 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000118134 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b631 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x000000000006b93b : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x000000000006ba65 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x000000000007053d : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000706bd : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000760f5 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x000000000007623d : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000ba931 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000bac3b : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000bad65 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000071035 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000013302a : add byte ptr [rax], al ; mov ebp, eax ; call 0x12f306
0x00000000001b90c2 : add byte ptr [rax], al ; mov ebp, ss ; add dword ptr [rax], eax ; clc ; ret
0x00000000000a5d6e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8e4e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a991e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000011869d : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11866a
0x000000000015b0fe : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015dbce : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001606ee : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a5d5e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a8e3e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a990e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015b81e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015e2ee : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000160e0e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000070103 : add byte ptr [rax], al ; mov edx, eax ; je 0x70119 ; mov eax, edx ; pop rbx ; ret
0x00000000000711f5 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7118d
0x0000000000071386 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71324
0x0000000000075be1 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b82
0x0000000000076531 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x764d2
0x0000000000075511 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000103694 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000010370d : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001037b9 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103832 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103912 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000010398b : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103a37 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103ab0 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103bc1 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103c3a : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103ce6 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103d5f : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103e3f : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103eb8 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103f64 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000103fdd : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001b11f2 : add byte ptr [rax], al ; mov esp, 0x38000156 ; jnp 0x1b11f9 ; jmp qword ptr [rcx]
0x00000000001a3df2 : add byte ptr [rax], al ; mov esp, 0x68000082 ; in eax, dx ; call qword ptr [rax]
0x00000000001aedf2 : add byte ptr [rax], al ; mov esp, 0x78000132 ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001adef2 : add byte ptr [rax], al ; mov esp, 0x8000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1f2 : add byte ptr [rax], al ; mov esp, 0x8000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001b09f2 : add byte ptr [rax], al ; mov esp, 0xc800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b56f2 : add byte ptr [rax], al ; mov esp, 0xc800019b ; ret
0x00000000001aa2f2 : add byte ptr [rax], al ; mov esp, 0xd80000e7 ; out dx, al ; int1 ; jmp rcx
0x00000000001b2af2 : add byte ptr [rax], al ; mov esp, 0xe800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000004d64b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000114700 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000001435f3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001435ab : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014381e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000896d0 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168d0e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000016d15e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168d2e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000016d17e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d3e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000016d18e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d4e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000016d19e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d5e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000016d1ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d6e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000016d1be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d7e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000016d1ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168d1e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000016d16e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168cfe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000016d14e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000094cce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000013c51a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a6d5e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a856e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d7e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a858e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6d9e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a85ae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6dae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a85be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dbe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a85ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a85de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d8e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a859e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a6d6e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000a857e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000004a0a0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000762dc : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000013232b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000013509b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001350b3 : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001358eb : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000135903 : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000135933 : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000012d90c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012d9bc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013222e : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b293 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000f5e8c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f67d9 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000012d8dc : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000011935e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000003362f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x0000000000033673 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x000000000003a5f6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013826b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001335b1 : add byte ptr [rax], al ; mov r13d, esi ; call 0x1f8a7
0x00000000000353e4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000361dc : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000006dda6 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000006f924 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000007caae : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000007cace : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000fcf2c : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000010807c : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000abf6e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000abf7e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000abf8e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000abf9e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000abfae : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000abfbe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000abfce : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007b239 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000746b0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000001149d6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b705 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000106266 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000003a720 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003a7f0 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000c884e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000074f6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000140f21 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2844e6] ; call qword ptr [rax]
0x000000000014090e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x284af9] ; call qword ptr [rax]
0x000000000007cb0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x348a09] ; ret
0x0000000000021a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a78d9] ; ret
0x00000000000fde4d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000007df34 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000006dc05 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006eec5 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000708a8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f822b : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103156 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d3ea : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006abcd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006abdf : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaac : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000844e0 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000001407df : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000033ea4 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000033eae : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000008241f : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000007cb3e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000963ce : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000009ecce : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a586e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a6fce : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a813e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a87de : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000ac82e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001179be : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000014109a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000084ba4 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008672d : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e539 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000076fb9 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000001335be : add byte ptr [rax], al ; mov rbx, rax ; call 0x1f8a7
0x00000000000ec324 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00000000000ec427 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x0000000000072fe5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb7
0x0000000000143696 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8b1
0x0000000000103886 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103b04 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103db3 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000104031 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000010407f : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000010409f : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000002f6d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000103752 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103877 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001039d0 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103af5 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103c7f : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103da4 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103efd : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104022 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001040d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001040f6 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104116 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104136 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001036ca : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103743 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001037ef : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103868 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103948 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001039c1 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103a6d : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103ae6 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103bf7 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103c70 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103d1c : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103d95 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103e75 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103eee : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103f9a : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104013 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104156 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104176 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104196 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001041b6 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001041d6 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001041f6 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104216 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104236 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001036bb : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103734 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001037e0 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103859 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103939 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001039b2 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103a5e : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103ad7 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103be8 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103c61 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103d0d : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103d86 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103e66 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103edf : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000103f8b : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104004 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104256 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104276 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104296 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001042b6 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001042d6 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001042f6 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104316 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104336 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104356 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104376 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104396 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001043b6 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001043d6 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001043f6 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104416 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104436 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000230ae : add byte ptr [rax], al ; mov rdi, rax ; call 0x8f3b7
0x000000000012e34b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000103b10 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000137385 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006cb46 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c433 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000088103 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000013a97e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000a5d9e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6a6e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a8e7e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a994e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000015b65e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000015e12e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000160c4e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000087bf0 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000d9809 : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd981e
0x000000000007d9c1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e4
0x000000000005be56 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x368111] ; call rax
0x000000000005b800 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x368767] ; call rax
0x0000000000050048 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3cc : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x376b9b] ; call rax
0x0000000000088cfe : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087e60 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000879d2 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000088b74 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000019cfc2 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001ac6c2 : add byte ptr [rax], al ; mov word ptr [rbx], cs ; add dword ptr [rax], eax ; cwde ; xchg ebx, esi ; call qword ptr [rsi]
0x00000000001acec2 : add byte ptr [rax], al ; mov word ptr [rbx], ss ; add dword ptr [rax], eax ; call 0x181ac2b0
0x00000000001b0cc2 : add byte ptr [rax], al ; mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000168cae : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000016d0fe : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168c9e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000016d0ee : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000001b2ac2 : add byte ptr [rax], al ; mov word ptr [rdi + 1], gs ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000a6d0e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a851e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009ea5e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e9ce : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003b2dd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b324 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000034e5e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000000e0d0e : add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe0cf8
0x00000000000a6dde : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a85ee : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a6dee : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a85fe : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001b09da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001a9ada : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rax] ; add byte ptr [rax - 0x6b], ah ; int1 ; call qword ptr [rax]
0x0000000000197eae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x000000000019697e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x196971 ; jmp rsp
0x0000000000196aae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196aa1 ; jmp rsp
0x00000000001aabda : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; lock add byte ptr [rax], al ; push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000001979e6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x00000000001b11da : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000006c94a : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000047c8f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000007a61e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015b28e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015dd5e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016087e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b96e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015e43e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000160f5e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b8fe : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000015e3ce : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000160eee : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001aac6e : add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000001a73ce : add byte ptr [rax], al ; nop ; add edi, ebp ; jmp rsi
0x00000000001a697e : add byte ptr [rax], al ; nop ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a69ae : add byte ptr [rax], al ; nop ; mov dh, ch ; jmp rbx
0x000000000011939d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000019d57e : add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001a0a5e : add byte ptr [rax], al ; nop ; push rax ; jmp 0x1a0a68
0x000000000002058d : add byte ptr [rax], al ; nop ; ret
0x000000000017433d : add byte ptr [rax], al ; nop ; ret
0x000000000013bd69 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000013376a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013c31b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000019d442 : add byte ptr [rax], al ; or al, 0x19 ; add byte ptr [rax], al ; or rbp, rcx ; call qword ptr [rdx]
0x00000000001aea42 : add byte ptr [rax], al ; or al, 0x2f ; add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a4442 : add byte ptr [rax], al ; or al, 0x89 ; add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x00000000001a6442 : add byte ptr [rax], al ; or al, 0xa9 ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x00000000001a8242 : add byte ptr [rax], al ; or al, 0xc7 ; add byte ptr [rax], al ; call 0x281a729c
0x00000000001a9a42 : add byte ptr [rax], al ; or al, 0xdf ; add byte ptr [rax], al ; clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x00000000001ab142 : add byte ptr [rax], al ; or al, 0xf6 ; add byte ptr [rax], al ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001bbf42 : add byte ptr [rax], al ; or al, 4 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x000000000019d4ee : add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x000000000019d54e : add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x0000000000035d62 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00000000000fc5f8 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00000000001aa106 : add byte ptr [rax], al ; or cl, ch ; int1 ; jmp qword ptr [rdi]
0x0000000000107554 : add byte ptr [rax], al ; or eax, edi ; ret
0x000000000019d42e : add byte ptr [rax], al ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d446 : add byte ptr [rax], al ; or rbp, rcx ; call qword ptr [rdx]
0x00000000001bd206 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rax], al ; ret 4
0x0000000000034e6e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000001a6b26 : add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a6726 : add byte ptr [rax], al ; pop rax ; jae 0x1a671e ; jmp qword ptr [rdx]
0x000000000019e566 : add byte ptr [rax], al ; pop rax ; jl 0x19e559 ; jmp qword ptr [rsi]
0x000000000019d476 : add byte ptr [rax], al ; pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a6e26 : add byte ptr [rax], al ; pop rax ; out 0xee, al ; call qword ptr [rax]
0x000000000019cfc6 : add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000107417 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001a1446 : add byte ptr [rax], al ; pop rax ; ret
0x00000000001a0b96 : add byte ptr [rax], al ; pop rax ; stosb byte ptr [rdi], al ; jmp 0x1a0ba0
0x0000000000054ccd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bc9db : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000da3ec : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de455 : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ed3d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054d9d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b70 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000782f2 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000088486 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000891f8 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000892ad : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000096ce4 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000efcbf : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001192ec : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000012e1c1 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000010962a : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000109637 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000001a167a : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x00000000000aac3a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000003a89c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000047a0f : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006e137 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070abd : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000116d95 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000118295 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000052c8c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000006fc80 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000cd417 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000115a5d : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000029daa : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029dce : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036bf1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004fff2 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006bbd1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007027c : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071911 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000750ee : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000075107 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007690c : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078a61 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba44e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000baed6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efdfc : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0377 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f85a7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f9b63 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f9bbb : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ffa16 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104e2f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104e97 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001098a5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001098f6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000134306 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000134abc : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000134ec9 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137989 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a244 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb0e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035a95 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035b1e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035c47 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035c98 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035ec1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036dea : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045098 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a970 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d1fd : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fe0d : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b9b2 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ba65 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008985b : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cdc5a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cdc7f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cdcb3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cdcff : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce6d9 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce6f7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce71f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce76f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c3d : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c6d : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc123 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5d6a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd54f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105489 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108645 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112e87 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115732 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cd1f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e8b8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012edd8 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001330a1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001330d4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000133ae0 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000137673 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001376bc : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000137cee : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139201 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013921b : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000036955 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000003696c : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000036ab7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000036acc : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000036c60 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000036cb0 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000079511 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000796cd : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000007978b : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000c8087 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000c81f4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000c89ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000fccf4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000104f72 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000104fc0 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000001063e2 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000010ea63 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000112faf : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000012bf77 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000130532 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000136b68 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000136c13 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000013a939 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000013b146 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000013bef7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000013bf3d : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000014282d : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002a6d6 : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000035b9d : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000035bef : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000035d8f : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000045387 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000004a680 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000004a698 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000006ad27 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000006e578 : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000072c7c : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000072fd5 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000007664f : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000076ff8 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000007832b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000784b9 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000007b210 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000007c962 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000008870c : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aac9b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aaca2 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aaca9 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aacb0 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aacb7 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aacbe : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aacc5 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c7f42 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c7fbe : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c879f : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e83c0 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f82b2 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000001025d6 : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000108b06 : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000115206 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000001288c8 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000001289c2 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000012b053 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000012c58e : add byte ptr [rax], al ; pop rbx ; ret
0x000000000012e28f : add byte ptr [rax], al ; pop rbx ; ret
0x000000000012eb7e : add byte ptr [rax], al ; pop rbx ; ret
0x000000000012ebfe : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013a9dd : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013aa4d : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013aafd : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013ae5e : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013aece : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013b043 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013b0ad : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013bbee : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013bc5e : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013bccd : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013bd3d : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013c1ca : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013c551 : add byte ptr [rax], al ; pop rbx ; ret
0x0000000000144335 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000001743fc : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000943e4 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000019432e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000197cee : add byte ptr [rax], al ; pop rsi ; out dx, al ; jmp rsp
0x00000000001a3c92 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed46a800 ; jmp qword ptr [rsi]
0x00000000001b9592 : add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001a0b92 : add byte ptr [rax], al ; pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; stosb byte ptr [rdi], al ; jmp 0x1a0ba4
0x00000000001b1192 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x000000000019e592 : add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add al, bh ; jl 0x19e58d ; jmp rsp
0x00000000001aef92 : add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aabde : add byte ptr [rax], al ; push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x000000000019d45e : add byte ptr [rax], al ; push rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a63fe : add byte ptr [rax], al ; push rax ; out dx, al ; call qword ptr [rax]
0x00000000001946b4 : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001159ce : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001a0b16 : add byte ptr [rax], al ; push rbx ; jmp 0x1a0b20
0x00000000001b0c7a : add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b078a : add byte ptr [rax], al ; push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x000000000019684e : add byte ptr [rax], al ; push rsp ; and ecx, ebp ; call rsp
0x00000000001af44f : add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001bb8ef : add byte ptr [rax], al ; push rsp ; clc ; call qword ptr [rax]
0x00000000001bb58a : add byte ptr [rax], al ; push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a248a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xecf52000 ; call qword ptr [rsi]
0x00000000001a2c8a : add byte ptr [rax], al ; push rsp ; jno 0x1a2c98 ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x0000000000196b96 : add byte ptr [rax], al ; push rsp ; loope 0x196b89 ; call rsp
0x00000000001a758a : add byte ptr [rax], al ; push rsp ; mov edx, 0x73200000 ; out dx, eax ; call rax
0x00000000001b298a : add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b0b8a : add byte ptr [rax], al ; push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b91 ; jmp qword ptr [rcx]
0x00000000001acdd2 : add byte ptr [rax], al ; pushfq ; adc al, byte ptr [rcx] ; add al, ch ; fpatan ; jmp qword ptr [rcx]
0x00000000001b3bd2 : add byte ptr [rax], al ; pushfq ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001af9d2 : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b95d2 : add byte ptr [rax], al ; pushfq ; fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001b5fd2 : add byte ptr [rax], al ; pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001a7ed2 : add byte ptr [rax], al ; pushfq ; ret
0x0000000000000977 : add byte ptr [rax], al ; ret
0x0000000000000c32 : add byte ptr [rax], al ; ret
0x0000000000001002 : add byte ptr [rax], al ; ret
0x0000000000001392 : add byte ptr [rax], al ; ret
0x0000000000001a8e : add byte ptr [rax], al ; ret
0x000000000000404e : add byte ptr [rax], al ; ret
0x00000000000045d6 : add byte ptr [rax], al ; ret
0x0000000000004756 : add byte ptr [rax], al ; ret
0x00000000000057ee : add byte ptr [rax], al ; ret
0x0000000000005eae : add byte ptr [rax], al ; ret
0x00000000000063ce : add byte ptr [rax], al ; ret
0x00000000000069a6 : add byte ptr [rax], al ; ret
0x0000000000008906 : add byte ptr [rax], al ; ret
0x0000000000008fce : add byte ptr [rax], al ; ret
0x00000000000091be : add byte ptr [rax], al ; ret
0x000000000000920e : add byte ptr [rax], al ; ret
0x000000000000953e : add byte ptr [rax], al ; ret
0x000000000000ac8e : add byte ptr [rax], al ; ret
0x000000000000c42e : add byte ptr [rax], al ; ret
0x000000000000d34e : add byte ptr [rax], al ; ret
0x000000000000e61e : add byte ptr [rax], al ; ret
0x00000000000102a6 : add byte ptr [rax], al ; ret
0x0000000000010af6 : add byte ptr [rax], al ; ret
0x00000000000191c6 : add byte ptr [rax], al ; ret
0x0000000000020581 : add byte ptr [rax], al ; ret
0x00000000000209b3 : add byte ptr [rax], al ; ret
0x0000000000020bee : add byte ptr [rax], al ; ret
0x000000000002bd56 : add byte ptr [rax], al ; ret
0x000000000002cb4e : add byte ptr [rax], al ; ret
0x000000000002cb72 : add byte ptr [rax], al ; ret
0x000000000002da24 : add byte ptr [rax], al ; ret
0x000000000002de88 : add byte ptr [rax], al ; ret
0x000000000002deb8 : add byte ptr [rax], al ; ret
0x000000000002defa : add byte ptr [rax], al ; ret
0x000000000002df1a : add byte ptr [rax], al ; ret
0x000000000002e0fe : add byte ptr [rax], al ; ret
0x000000000002e11e : add byte ptr [rax], al ; ret
0x000000000002e13e : add byte ptr [rax], al ; ret
0x0000000000034b47 : add byte ptr [rax], al ; ret
0x000000000003518d : add byte ptr [rax], al ; ret
0x00000000000353af : add byte ptr [rax], al ; ret
0x000000000003569e : add byte ptr [rax], al ; ret
0x00000000000356e6 : add byte ptr [rax], al ; ret
0x00000000000359e1 : add byte ptr [rax], al ; ret
0x0000000000035a34 : add byte ptr [rax], al ; ret
0x00000000000361b5 : add byte ptr [rax], al ; ret
0x0000000000036d01 : add byte ptr [rax], al ; ret
0x0000000000045a36 : add byte ptr [rax], al ; ret
0x0000000000045a3e : add byte ptr [rax], al ; ret
0x0000000000045cf8 : add byte ptr [rax], al ; ret
0x0000000000046eb2 : add byte ptr [rax], al ; ret
0x0000000000048066 : add byte ptr [rax], al ; ret
0x00000000000481fe : add byte ptr [rax], al ; ret
0x000000000004a084 : add byte ptr [rax], al ; ret
0x000000000004a0b9 : add byte ptr [rax], al ; ret
0x000000000004a10c : add byte ptr [rax], al ; ret
0x000000000004a144 : add byte ptr [rax], al ; ret
0x000000000005576c : add byte ptr [rax], al ; ret
0x00000000000557fc : add byte ptr [rax], al ; ret
0x000000000005589e : add byte ptr [rax], al ; ret
0x0000000000055937 : add byte ptr [rax], al ; ret
0x00000000000559cc : add byte ptr [rax], al ; ret
0x0000000000055a5c : add byte ptr [rax], al ; ret
0x0000000000055aec : add byte ptr [rax], al ; ret
0x000000000006a7dc : add byte ptr [rax], al ; ret
0x000000000006a880 : add byte ptr [rax], al ; ret
0x000000000006a91c : add byte ptr [rax], al ; ret
0x000000000006b4bd : add byte ptr [rax], al ; ret
0x000000000006bb5c : add byte ptr [rax], al ; ret
0x000000000006dcbb : add byte ptr [rax], al ; ret
0x000000000006f298 : add byte ptr [rax], al ; ret
0x00000000000714ac : add byte ptr [rax], al ; ret
0x0000000000071537 : add byte ptr [rax], al ; ret
0x00000000000715fe : add byte ptr [rax], al ; ret
0x00000000000716b0 : add byte ptr [rax], al ; ret
0x000000000007174c : add byte ptr [rax], al ; ret
0x00000000000719ac : add byte ptr [rax], al ; ret
0x00000000000758bb : add byte ptr [rax], al ; ret
0x00000000000758ce : add byte ptr [rax], al ; ret
0x0000000000076ddc : add byte ptr [rax], al ; ret
0x00000000000773f3 : add byte ptr [rax], al ; ret
0x0000000000077405 : add byte ptr [rax], al ; ret
0x0000000000077435 : add byte ptr [rax], al ; ret
0x00000000000791ce : add byte ptr [rax], al ; ret
0x000000000007a9cb : add byte ptr [rax], al ; ret
0x000000000007bb1f : add byte ptr [rax], al ; ret
0x000000000007cafe : add byte ptr [rax], al ; ret
0x000000000007cbf8 : add byte ptr [rax], al ; ret
0x000000000007cc1d : add byte ptr [rax], al ; ret
0x0000000000084012 : add byte ptr [rax], al ; ret
0x00000000000840ae : add byte ptr [rax], al ; ret
0x0000000000084128 : add byte ptr [rax], al ; ret
0x00000000000877a3 : add byte ptr [rax], al ; ret
0x00000000000878a7 : add byte ptr [rax], al ; ret
0x0000000000088f0e : add byte ptr [rax], al ; ret
0x00000000000895db : add byte ptr [rax], al ; ret
0x0000000000089d02 : add byte ptr [rax], al ; ret
0x000000000008b45e : add byte ptr [rax], al ; ret
0x000000000008bb5e : add byte ptr [rax], al ; ret
0x000000000008e743 : add byte ptr [rax], al ; ret
0x000000000008e83e : add byte ptr [rax], al ; ret
0x000000000008ebc8 : add byte ptr [rax], al ; ret
0x000000000008f9ee : add byte ptr [rax], al ; ret
0x000000000008fa51 : add byte ptr [rax], al ; ret
0x0000000000091cde : add byte ptr [rax], al ; ret
0x0000000000091d41 : add byte ptr [rax], al ; ret
0x0000000000094414 : add byte ptr [rax], al ; ret
0x0000000000094443 : add byte ptr [rax], al ; ret
0x0000000000095d06 : add byte ptr [rax], al ; ret
0x0000000000095d0e : add byte ptr [rax], al ; ret
0x000000000009eaee : add byte ptr [rax], al ; ret
0x000000000009eb8e : add byte ptr [rax], al ; ret
0x00000000000a657e : add byte ptr [rax], al ; ret
0x00000000000a65a2 : add byte ptr [rax], al ; ret
0x00000000000a65c5 : add byte ptr [rax], al ; ret
0x00000000000a65e0 : add byte ptr [rax], al ; ret
0x00000000000a6603 : add byte ptr [rax], al ; ret
0x00000000000a6628 : add byte ptr [rax], al ; ret
0x00000000000a6646 : add byte ptr [rax], al ; ret
0x00000000000a6662 : add byte ptr [rax], al ; ret
0x00000000000a6685 : add byte ptr [rax], al ; ret
0x00000000000a66aa : add byte ptr [rax], al ; ret
0x00000000000a66c8 : add byte ptr [rax], al ; ret
0x00000000000a66e8 : add byte ptr [rax], al ; ret
0x00000000000a670a : add byte ptr [rax], al ; ret
0x00000000000a672a : add byte ptr [rax], al ; ret
0x00000000000a674a : add byte ptr [rax], al ; ret
0x00000000000a6764 : add byte ptr [rax], al ; ret
0x00000000000a6787 : add byte ptr [rax], al ; ret
0x00000000000a67ac : add byte ptr [rax], al ; ret
0x00000000000a67ca : add byte ptr [rax], al ; ret
0x00000000000a67ea : add byte ptr [rax], al ; ret
0x00000000000a680d : add byte ptr [rax], al ; ret
0x00000000000a682c : add byte ptr [rax], al ; ret
0x00000000000a684c : add byte ptr [rax], al ; ret
0x00000000000a686c : add byte ptr [rax], al ; ret
0x00000000000a688f : add byte ptr [rax], al ; ret
0x00000000000a68c4 : add byte ptr [rax], al ; ret
0x00000000000a68f2 : add byte ptr [rax], al ; ret
0x00000000000a6922 : add byte ptr [rax], al ; ret
0x00000000000a694e : add byte ptr [rax], al ; ret
0x00000000000a697e : add byte ptr [rax], al ; ret
0x00000000000a69ae : add byte ptr [rax], al ; ret
0x00000000000a69de : add byte ptr [rax], al ; ret
0x00000000000a69ee : add byte ptr [rax], al ; ret
0x00000000000a6cee : add byte ptr [rax], al ; ret
0x00000000000a7c21 : add byte ptr [rax], al ; ret
0x00000000000a7c46 : add byte ptr [rax], al ; ret
0x00000000000a7c69 : add byte ptr [rax], al ; ret
0x00000000000a7c84 : add byte ptr [rax], al ; ret
0x00000000000a7ca7 : add byte ptr [rax], al ; ret
0x00000000000a7ccc : add byte ptr [rax], al ; ret
0x00000000000a7cea : add byte ptr [rax], al ; ret
0x00000000000a7d06 : add byte ptr [rax], al ; ret
0x00000000000a7d29 : add byte ptr [rax], al ; ret
0x00000000000a7d4e : add byte ptr [rax], al ; ret
0x00000000000a7d7c : add byte ptr [rax], al ; ret
0x00000000000a7d9c : add byte ptr [rax], al ; ret
0x00000000000a7dbe : add byte ptr [rax], al ; ret
0x00000000000a7dee : add byte ptr [rax], al ; ret
0x00000000000a7e1e : add byte ptr [rax], al ; ret
0x00000000000a7e48 : add byte ptr [rax], al ; ret
0x00000000000a7e6b : add byte ptr [rax], al ; ret
0x00000000000a7e90 : add byte ptr [rax], al ; ret
0x00000000000a7ebe : add byte ptr [rax], al ; ret
0x00000000000a7eee : add byte ptr [rax], al ; ret
0x00000000000a7f21 : add byte ptr [rax], al ; ret
0x00000000000a7f50 : add byte ptr [rax], al ; ret
0x00000000000a7f80 : add byte ptr [rax], al ; ret
0x00000000000a7fb0 : add byte ptr [rax], al ; ret
0x00000000000a7fe3 : add byte ptr [rax], al ; ret
0x00000000000a8018 : add byte ptr [rax], al ; ret
0x00000000000a8046 : add byte ptr [rax], al ; ret
0x00000000000a8076 : add byte ptr [rax], al ; ret
0x00000000000a80a2 : add byte ptr [rax], al ; ret
0x00000000000a80d2 : add byte ptr [rax], al ; ret
0x00000000000a8102 : add byte ptr [rax], al ; ret
0x00000000000a8132 : add byte ptr [rax], al ; ret
0x00000000000a84fe : add byte ptr [rax], al ; ret
0x00000000000aa05e : add byte ptr [rax], al ; ret
0x00000000000abb13 : add byte ptr [rax], al ; ret
0x00000000000abb2a : add byte ptr [rax], al ; ret
0x00000000000abb3f : add byte ptr [rax], al ; ret
0x00000000000abb5a : add byte ptr [rax], al ; ret
0x00000000000abb75 : add byte ptr [rax], al ; ret
0x00000000000abb8a : add byte ptr [rax], al ; ret
0x00000000000abb9f : add byte ptr [rax], al ; ret
0x00000000000abbba : add byte ptr [rax], al ; ret
0x00000000000abbd5 : add byte ptr [rax], al ; ret
0x00000000000abc98 : add byte ptr [rax], al ; ret
0x00000000000abf75 : add byte ptr [rax], al ; ret
0x00000000000abf85 : add byte ptr [rax], al ; ret
0x00000000000abf95 : add byte ptr [rax], al ; ret
0x00000000000abfa5 : add byte ptr [rax], al ; ret
0x00000000000abfb5 : add byte ptr [rax], al ; ret
0x00000000000abfc5 : add byte ptr [rax], al ; ret
0x00000000000abfd5 : add byte ptr [rax], al ; ret
0x00000000000ac09d : add byte ptr [rax], al ; ret
0x00000000000ac0ae : add byte ptr [rax], al ; ret
0x00000000000ac78e : add byte ptr [rax], al ; ret
0x00000000000ac868 : add byte ptr [rax], al ; ret
0x00000000000acd73 : add byte ptr [rax], al ; ret
0x00000000000ada96 : add byte ptr [rax], al ; ret
0x00000000000adaa0 : add byte ptr [rax], al ; ret
0x00000000000adaa6 : add byte ptr [rax], al ; ret
0x00000000000bae5c : add byte ptr [rax], al ; ret
0x00000000000bf6f3 : add byte ptr [rax], al ; ret
0x00000000000cd229 : add byte ptr [rax], al ; ret
0x00000000000cd95e : add byte ptr [rax], al ; ret
0x00000000000cd9dc : add byte ptr [rax], al ; ret
0x00000000000cda02 : add byte ptr [rax], al ; ret
0x00000000000cda0b : add byte ptr [rax], al ; ret
0x00000000000cda13 : add byte ptr [rax], al ; ret
0x00000000000cda23 : add byte ptr [rax], al ; ret
0x00000000000cdac2 : add byte ptr [rax], al ; ret
0x00000000000cdb08 : add byte ptr [rax], al ; ret
0x00000000000cdb7e : add byte ptr [rax], al ; ret
0x00000000000cdbd3 : add byte ptr [rax], al ; ret
0x00000000000cdbe9 : add byte ptr [rax], al ; ret
0x00000000000cea3b : add byte ptr [rax], al ; ret
0x00000000000d163d : add byte ptr [rax], al ; ret
0x00000000000d164d : add byte ptr [rax], al ; ret
0x00000000000d168e : add byte ptr [rax], al ; ret
0x00000000000d1713 : add byte ptr [rax], al ; ret
0x00000000000d172b : add byte ptr [rax], al ; ret
0x00000000000d5908 : add byte ptr [rax], al ; ret
0x00000000000d5937 : add byte ptr [rax], al ; ret
0x00000000000d5947 : add byte ptr [rax], al ; ret
0x00000000000d5966 : add byte ptr [rax], al ; ret
0x00000000000d5977 : add byte ptr [rax], al ; ret
0x00000000000d599e : add byte ptr [rax], al ; ret
0x00000000000d59be : add byte ptr [rax], al ; ret
0x00000000000d59d4 : add byte ptr [rax], al ; ret
0x00000000000d59e7 : add byte ptr [rax], al ; ret
0x00000000000d8e43 : add byte ptr [rax], al ; ret
0x00000000000d91a0 : add byte ptr [rax], al ; ret
0x00000000000d95b6 : add byte ptr [rax], al ; ret
0x00000000000d95bc : add byte ptr [rax], al ; ret
0x00000000000d95c2 : add byte ptr [rax], al ; ret
0x00000000000dc0ed : add byte ptr [rax], al ; ret
0x00000000000e84fc : add byte ptr [rax], al ; ret
0x00000000000e888c : add byte ptr [rax], al ; ret
0x00000000000ea982 : add byte ptr [rax], al ; ret
0x00000000000f5f22 : add byte ptr [rax], al ; ret
0x00000000000f68bf : add byte ptr [rax], al ; ret
0x00000000000fb5c1 : add byte ptr [rax], al ; ret
0x00000000000fc316 : add byte ptr [rax], al ; ret
0x00000000000fc32c : add byte ptr [rax], al ; ret
0x00000000000fe56e : add byte ptr [rax], al ; ret
0x00000000000fe663 : add byte ptr [rax], al ; ret
0x00000000000ff23d : add byte ptr [rax], al ; ret
0x00000000000ff813 : add byte ptr [rax], al ; ret
0x00000000000ffdf4 : add byte ptr [rax], al ; ret
0x0000000000100be7 : add byte ptr [rax], al ; ret
0x00000000001025ec : add byte ptr [rax], al ; ret
0x000000000010516c : add byte ptr [rax], al ; ret
0x000000000010627d : add byte ptr [rax], al ; ret
0x000000000010cc2e : add byte ptr [rax], al ; ret
0x000000000010e9d0 : add byte ptr [rax], al ; ret
0x0000000000110c13 : add byte ptr [rax], al ; ret
0x0000000000113308 : add byte ptr [rax], al ; ret
0x0000000000114abd : add byte ptr [rax], al ; ret
0x000000000011598b : add byte ptr [rax], al ; ret
0x00000000001166b2 : add byte ptr [rax], al ; ret
0x00000000001167fd : add byte ptr [rax], al ; ret
0x0000000000117ced : add byte ptr [rax], al ; ret
0x00000000001188f7 : add byte ptr [rax], al ; ret
0x0000000000118af7 : add byte ptr [rax], al ; ret
0x00000000001196de : add byte ptr [rax], al ; ret
0x0000000000123915 : add byte ptr [rax], al ; ret
0x000000000012391d : add byte ptr [rax], al ; ret
0x0000000000123923 : add byte ptr [rax], al ; ret
0x0000000000123929 : add byte ptr [rax], al ; ret
0x0000000000123ff6 : add byte ptr [rax], al ; ret
0x00000000001266ae : add byte ptr [rax], al ; ret
0x000000000012b003 : add byte ptr [rax], al ; ret
0x000000000012b063 : add byte ptr [rax], al ; ret
0x000000000012b7b3 : add byte ptr [rax], al ; ret
0x000000000012b7ce : add byte ptr [rax], al ; ret
0x000000000012befe : add byte ptr [rax], al ; ret
0x000000000012bf1e : add byte ptr [rax], al ; ret
0x000000000012d8f3 : add byte ptr [rax], al ; ret
0x000000000012d974 : add byte ptr [rax], al ; ret
0x000000000012d984 : add byte ptr [rax], al ; ret
0x000000000012d994 : add byte ptr [rax], al ; ret
0x000000000012d9a4 : add byte ptr [rax], al ; ret
0x000000000012dda8 : add byte ptr [rax], al ; ret
0x000000000012e093 : add byte ptr [rax], al ; ret
0x000000000012e0a3 : add byte ptr [rax], al ; ret
0x000000000012e0ae : add byte ptr [rax], al ; ret
0x00000000001322fe : add byte ptr [rax], al ; ret
0x000000000013231a : add byte ptr [rax], al ; ret
0x00000000001323b6 : add byte ptr [rax], al ; ret
0x00000000001323c7 : add byte ptr [rax], al ; ret
0x00000000001323da : add byte ptr [rax], al ; ret
0x00000000001323ea : add byte ptr [rax], al ; ret
0x0000000000132400 : add byte ptr [rax], al ; ret
0x0000000000132419 : add byte ptr [rax], al ; ret
0x0000000000132430 : add byte ptr [rax], al ; ret
0x0000000000132446 : add byte ptr [rax], al ; ret
0x0000000000132460 : add byte ptr [rax], al ; ret
0x0000000000132db3 : add byte ptr [rax], al ; ret
0x0000000000134218 : add byte ptr [rax], al ; ret
0x0000000000134fde : add byte ptr [rax], al ; ret
0x000000000013506b : add byte ptr [rax], al ; ret
0x0000000000135089 : add byte ptr [rax], al ; ret
0x00000000001350c7 : add byte ptr [rax], al ; ret
0x00000000001350da : add byte ptr [rax], al ; ret
0x00000000001350ea : add byte ptr [rax], al ; ret
0x00000000001350fd : add byte ptr [rax], al ; ret
0x000000000013510e : add byte ptr [rax], al ; ret
0x0000000000135125 : add byte ptr [rax], al ; ret
0x000000000013513b : add byte ptr [rax], al ; ret
0x000000000013514d : add byte ptr [rax], al ; ret
0x000000000013587e : add byte ptr [rax], al ; ret
0x00000000001358c2 : add byte ptr [rax], al ; ret
0x00000000001358da : add byte ptr [rax], al ; ret
0x0000000000135922 : add byte ptr [rax], al ; ret
0x0000000000135947 : add byte ptr [rax], al ; ret
0x000000000013595a : add byte ptr [rax], al ; ret
0x000000000013596a : add byte ptr [rax], al ; ret
0x0000000000135983 : add byte ptr [rax], al ; ret
0x00000000001359a4 : add byte ptr [rax], al ; ret
0x00000000001359c4 : add byte ptr [rax], al ; ret
0x00000000001359e2 : add byte ptr [rax], al ; ret
0x00000000001359fc : add byte ptr [rax], al ; ret
0x0000000000138f33 : add byte ptr [rax], al ; ret
0x0000000000139653 : add byte ptr [rax], al ; ret
0x000000000013a8a7 : add byte ptr [rax], al ; ret
0x000000000013a993 : add byte ptr [rax], al ; ret
0x000000000013b123 : add byte ptr [rax], al ; ret
0x000000000013bd6e : add byte ptr [rax], al ; ret
0x000000000013bdca : add byte ptr [rax], al ; ret
0x000000000013be26 : add byte ptr [rax], al ; ret
0x000000000013be55 : add byte ptr [rax], al ; ret
0x000000000013be87 : add byte ptr [rax], al ; ret
0x000000000013beb8 : add byte ptr [rax], al ; ret
0x000000000013c156 : add byte ptr [rax], al ; ret
0x000000000013c197 : add byte ptr [rax], al ; ret
0x000000000013c247 : add byte ptr [rax], al ; ret
0x000000000013c487 : add byte ptr [rax], al ; ret
0x000000000013c4c7 : add byte ptr [rax], al ; ret
0x000000000013c706 : add byte ptr [rax], al ; ret
0x000000000014137e : add byte ptr [rax], al ; ret
0x0000000000142cb1 : add byte ptr [rax], al ; ret
0x0000000000142ee4 : add byte ptr [rax], al ; ret
0x00000000001434f9 : add byte ptr [rax], al ; ret
0x000000000014355e : add byte ptr [rax], al ; ret
0x0000000000143d6e : add byte ptr [rax], al ; ret
0x0000000000168875 : add byte ptr [rax], al ; ret
0x00000000001688dd : add byte ptr [rax], al ; ret
0x0000000000168ad3 : add byte ptr [rax], al ; ret
0x0000000000168af5 : add byte ptr [rax], al ; ret
0x0000000000168b1b : add byte ptr [rax], al ; ret
0x0000000000168b33 : add byte ptr [rax], al ; ret
0x0000000000168b59 : add byte ptr [rax], al ; ret
0x0000000000168b7b : add byte ptr [rax], al ; ret
0x0000000000168b99 : add byte ptr [rax], al ; ret
0x0000000000168bbb : add byte ptr [rax], al ; ret
0x0000000000168bdb : add byte ptr [rax], al ; ret
0x0000000000168bfb : add byte ptr [rax], al ; ret
0x0000000000168c1b : add byte ptr [rax], al ; ret
0x0000000000168c3d : add byte ptr [rax], al ; ret
0x0000000000168c5d : add byte ptr [rax], al ; ret
0x0000000000168c7d : add byte ptr [rax], al ; ret
0x000000000016d0ce : add byte ptr [rax], al ; ret
0x0000000000172801 : add byte ptr [rax], al ; ret
0x000000000017281a : add byte ptr [rax], al ; ret
0x000000000017282f : add byte ptr [rax], al ; ret
0x000000000017284a : add byte ptr [rax], al ; ret
0x000000000017293e : add byte ptr [rax], al ; ret
0x00000000001745aa : add byte ptr [rax], al ; ret
0x00000000001750f0 : add byte ptr [rax], al ; ret
0x00000000001765ea : add byte ptr [rax], al ; ret
0x00000000001769ea : add byte ptr [rax], al ; ret
0x0000000000176bea : add byte ptr [rax], al ; ret
0x0000000000176fea : add byte ptr [rax], al ; ret
0x000000000017c5c2 : add byte ptr [rax], al ; ret
0x000000000017c69a : add byte ptr [rax], al ; ret
0x000000000017cab6 : add byte ptr [rax], al ; ret
0x000000000017cc0a : add byte ptr [rax], al ; ret
0x000000000017d00a : add byte ptr [rax], al ; ret
0x000000000017d40a : add byte ptr [rax], al ; ret
0x000000000017e23e : add byte ptr [rax], al ; ret
0x000000000017e72e : add byte ptr [rax], al ; ret
0x000000000017f236 : add byte ptr [rax], al ; ret
0x000000000017f9ce : add byte ptr [rax], al ; ret
0x0000000000181b86 : add byte ptr [rax], al ; ret
0x00000000001bcd6e : add byte ptr [rax], al ; ret
0x00000000001bcf52 : add byte ptr [rax], al ; ret
0x00000000001bd09e : add byte ptr [rax], al ; ret
0x00000000001bd482 : add byte ptr [rax], al ; ret
0x00000000001bd936 : add byte ptr [rax], al ; ret
0x00000000001bde6e : add byte ptr [rax], al ; ret
0x00000000001bebce : add byte ptr [rax], al ; ret
0x00000000001beeb6 : add byte ptr [rax], al ; ret
0x00000000001bf96a : add byte ptr [rax], al ; ret
0x00000000001765e6 : add byte ptr [rax], al ; ret 0
0x00000000001769e6 : add byte ptr [rax], al ; ret 0
0x0000000000176be6 : add byte ptr [rax], al ; ret 0
0x0000000000176fe6 : add byte ptr [rax], al ; ret 0
0x000000000017c3b2 : add byte ptr [rax], al ; ret 0
0x0000000000180402 : add byte ptr [rax], al ; ret 0
0x0000000000181b82 : add byte ptr [rax], al ; ret 0
0x00000000001a7d82 : add byte ptr [rax], al ; ret 0
0x00000000001a7d9a : add byte ptr [rax], al ; ret 0
0x00000000001bcbae : add byte ptr [rax], al ; ret 0
0x000000000017d55e : add byte ptr [rax], al ; ret 0x10
0x000000000000bac7 : add byte ptr [rax], al ; ret 0x11
0x000000000000e45e : add byte ptr [rax], al ; ret 0x16
0x000000000001c05e : add byte ptr [rax], al ; ret 0x18c7
0x000000000001e66e : add byte ptr [rax], al ; ret 0x18c7
0x000000000001a07e : add byte ptr [rax], al ; ret 0x18d0
0x000000000001b3b6 : add byte ptr [rax], al ; ret 0x18f8
0x000000000017f22e : add byte ptr [rax], al ; ret 0x1d4
0x000000000017f9c6 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fee : add byte ptr [rax], al ; ret 0x23
0x000000000017e236 : add byte ptr [rax], al ; ret 0x24
0x0000000000005ec6 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8e : add byte ptr [rax], al ; ret 0x30
0x000000000000d7b6 : add byte ptr [rax], al ; ret 0x31
0x000000000017e726 : add byte ptr [rax], al ; ret 0x33
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000b326 : add byte ptr [rax], al ; ret 0x4f
0x0000000000008656 : add byte ptr [rax], al ; ret 0x53
0x000000000000b536 : add byte ptr [rax], al ; ret 0x56
0x000000000017cd5e : add byte ptr [rax], al ; ret 0xa
0x000000000000bbcf : add byte ptr [rax], al ; ret 0xc
0x000000000017d15e : add byte ptr [rax], al ; ret 0xd
0x0000000000005917 : add byte ptr [rax], al ; ret 0xf
0x000000000001f6ba : add byte ptr [rax], al ; ret 1
0x0000000000180602 : add byte ptr [rax], al ; ret 1
0x000000000018abcf : add byte ptr [rax], al ; ret 1
0x00000000001b7d82 : add byte ptr [rax], al ; ret 1
0x00000000001bf396 : add byte ptr [rax], al ; ret 1
0x0000000000180802 : add byte ptr [rax], al ; ret 2
0x00000000001bcd36 : add byte ptr [rax], al ; ret 2
0x00000000000011c6 : add byte ptr [rax], al ; ret 3
0x0000000000180a02 : add byte ptr [rax], al ; ret 3
0x00000000001bf016 : add byte ptr [rax], al ; ret 3
0x0000000000007606 : add byte ptr [rax], al ; ret 4
0x0000000000180c02 : add byte ptr [rax], al ; ret 4
0x00000000001bd20a : add byte ptr [rax], al ; ret 4
0x000000000000156e : add byte ptr [rax], al ; ret 5
0x0000000000180e02 : add byte ptr [rax], al ; ret 5
0x00000000001bd78a : add byte ptr [rax], al ; ret 5
0x000000000000dd9e : add byte ptr [rax], al ; ret 6
0x000000000017c906 : add byte ptr [rax], al ; ret 6
0x0000000000181002 : add byte ptr [rax], al ; ret 6
0x00000000001bf306 : add byte ptr [rax], al ; ret 6
0x0000000000181202 : add byte ptr [rax], al ; ret 7
0x00000000001bd63a : add byte ptr [rax], al ; ret 7
0x0000000000001a8a : add byte ptr [rax], al ; ret 8
0x0000000000181402 : add byte ptr [rax], al ; ret 8
0x00000000001bf692 : add byte ptr [rax], al ; ret 8
0x0000000000181602 : add byte ptr [rax], al ; ret 9
0x000000000000138e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x0000000000180bfe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001a7c7a : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; and bl, 0xef ; call rsp
0x00000000001a167e : add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x000000000017d006 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000001a647e : add byte ptr [rax], al ; ror byte ptr [rsi - 0x12], 1 ; call qword ptr [rdx]
0x00000000001a49ae : add byte ptr [rax], al ; sar byte ptr [rdi - 0x13], 1 ; jmp qword ptr [rbx]
0x00000000001a794e : add byte ptr [rax], al ; sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x00000000001b0a52 : add byte ptr [rax], al ; sbb al, 0x4f ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0d52 : add byte ptr [rax], al ; sbb al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1e52 : add byte ptr [rax], al ; sbb al, 0x63 ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b2b52 : add byte ptr [rax], al ; sbb al, 0x70 ; add dword ptr [rax], eax ; call 0x271b247e
0x00000000001b6652 : add byte ptr [rax], al ; sbb al, 0xab ; add dword ptr [rax], eax ; call 0xffffffffd21b5d95
0x00000000001a7d52 : add byte ptr [rax], al ; sbb al, 0xc2 ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x000000000019d382 : add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x000000000019dbb6 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0x17], dl ; jmp rdx
0x000000000019e406 : add byte ptr [rax], al ; sbb byte ptr [rdx - 0x17], bh ; jmp qword ptr [rcx]
0x00000000001a6d06 : add byte ptr [rax], al ; sbb ch, bl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a697a : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a946e : add byte ptr [rax], al ; shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x00000000000f5df6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000194e10 : add byte ptr [rax], al ; sti ; call rax
0x000000000019e562 : add byte ptr [rax], al ; sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; jl 0x19e55d ; jmp qword ptr [rsi]
0x00000000001b0962 : add byte ptr [rax], al ; sub al, 0x4e ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b1162 : add byte ptr [rax], al ; sub al, 0x56 ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a62 : add byte ptr [rax], al ; sub al, 0x6f ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x000000000019bc62 : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; call 0x1119a4c2
0x00000000001bc062 : add byte ptr [rax], al ; sub al, 5 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x00000000001aa586 : add byte ptr [rax], al ; sub cl, bh ; int1 ; call rsi
0x000000000016f19c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000016f207 : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000016fa57 : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000016fa69 : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000fcd30 : add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000034efd : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x000000000007c016 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000008b341 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000008db41 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000fdb25 : add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00000000000f690b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000001150c5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000bc373 : add byte ptr [rax], al ; syscall ; ret
0x00000000000cd233 : add byte ptr [rax], al ; syscall ; ret
0x00000000000cd243 : add byte ptr [rax], al ; syscall ; ret
0x00000000000cd253 : add byte ptr [rax], al ; syscall ; ret
0x00000000000cd263 : add byte ptr [rax], al ; syscall ; ret
0x00000000000cd273 : add byte ptr [rax], al ; syscall ; ret
0x00000000000cd483 : add byte ptr [rax], al ; syscall ; ret
0x00000000000f6ed3 : add byte ptr [rax], al ; syscall ; ret
0x00000000001077f3 : add byte ptr [rax], al ; syscall ; ret
0x0000000000122196 : add byte ptr [rax], al ; syscall ; ret
0x00000000001a6382 : add byte ptr [rax], al ; test al, 0 ; add al, bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a3726 : add byte ptr [rax], al ; test al, 0x3c ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3c96 : add byte ptr [rax], al ; test al, 0x46 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001af3ba : add byte ptr [rax], al ; test byte ptr [rax], bh ; add dword ptr [rax], eax ; loopne 0x1af3c8 ; hlt ; jmp qword ptr [rcx]
0x00000000001a58ba : add byte ptr [rax], al ; test byte ptr [rbp + 0x1400000], bl ; out dx, al ; call qword ptr [rsi]
0x00000000001a06ba : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add byte ptr [rax + 0x26], al ; jmp 0x1a06cc
0x00000000001b05ba : add byte ptr [rax], al ; test byte ptr [rdx + 1], cl ; add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001acdba : add byte ptr [rax], al ; test byte ptr [rdx], dl ; add dword ptr [rax], eax ; rcr cl, 1 ; jmp qword ptr [rcx]
0x00000000001af9ba : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a4caf : add byte ptr [rax], al ; test ch, ch ; call qword ptr [rdx]
0x00000000001a647a : add byte ptr [rax], al ; test eax, 0x4ed00000 ; out dx, al ; call qword ptr [rdx]
0x000000000012d82f : add byte ptr [rax], al ; test eax, eax ; je 0x12d848 ; xor eax, eax ; ret
0x00000000000aebd3 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xaebf1
0x00000000000b14f4 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb1511
0x00000000000b3cab : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3cd1
0x000000000006b456 : add byte ptr [rax], al ; test ecx, ecx ; je 0x6b467 ; ret
0x00000000001ab282 : add byte ptr [rax], al ; test qword ptr [rax], -0xdd40800 ; jmp rcx
0x000000000011586d : add byte ptr [rax], al ; test rax, rax ; je 0x1158a7 ; call rax
0x0000000000138f22 : add byte ptr [rax], al ; test rax, rax ; jne 0x138f18 ; pop rbx ; ret
0x00000000001bb17f : add byte ptr [rax], al ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001a4d7a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x0000000000196682 : add byte ptr [rax], al ; xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x000000000019ccca : add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19ccd9 ; jmp qword ptr [rdi]
0x00000000001b0aca : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000019693e : add byte ptr [rax], al ; xchg eax, esp ; jae 0x196931 ; jmp rsp
0x00000000001a73ca : add byte ptr [rax], al ; xchg eax, esp ; mov eax, 0x1900000 ; out dx, eax ; jmp rsi
0x00000000001b0dca : add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e4e ; cmc ; jmp qword ptr [rcx]
0x00000000001a7dca : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000197726 : add byte ptr [rax], al ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x000000000019f26a : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x00000000001b716a : add byte ptr [rax], al ; xor al, 0xb6 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001a946a : add byte ptr [rax], al ; xor al, 0xd9 ; add byte ptr [rax], al ; shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x00000000001aac6a : add byte ptr [rax], al ; xor al, 0xf1 ; add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000001a931e : add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x00000000000fc3ca : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000001a2c8e : add byte ptr [rax], al ; xor byte ptr [rdx], bl ; in eax, dx ; call rdx
0x00000000001a622e : add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x00000000000a9bae : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000011eae6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000143e06 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000bb80c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000e7ade : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012e13e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e0f6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000003a26b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a2bf : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006df7e : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077cbc : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008981a : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d33c : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d3c3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d9fe : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ec8e : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c80c5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c8235 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c89eb : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000039ee3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003a7a4 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003a7fe : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000006acce : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000006ad35 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000082f36 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000086527 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000fba6e : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000011ce66 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000014081f : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000039f06 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000045a2e : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000048476 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006b470 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006de76 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000709be : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007829e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007a36e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007b6ee : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007cade : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007cb1e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007d26e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007df3e : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000082d8c : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000082f2c : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000885f5 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008b41e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f091 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aa4fe : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aab5e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aad86 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aadce : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000abaf2 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b9e8e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bb744 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bb82c : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bdf94 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c80dc : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c824c : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cea2e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d6c5e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d8e4e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f68e4 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f68f6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f6916 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000fb70c : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000010625d : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001186a6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001233c6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001266a6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012b7be : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012bf0e : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000132466 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013bdee : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013c16e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013c17e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013c226 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000143e3c : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014a78e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014a8ae : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f005 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f02d : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f0e0 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f1d0 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f28f : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f2c0 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f2ea : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f388 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f40b : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f48b : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f50b : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f58b : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f739 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f7c9 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f85c : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f8fc : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f99c : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000170635 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017065b : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001706d6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017075b : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001707e7 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001720f8 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001721a5 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000172260 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017231e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017294e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007a38e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7a3a9 ; ret
0x000000000003afbc : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000008d7b1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000004d39b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000058b67 : add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000103606 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000103b33 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000010362b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001038a9 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000103b58 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000103dd6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010364f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103774 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001038cd : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001039f2 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103b7c : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103ca1 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103dfa : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103f1f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010366f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001036e8 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103794 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010380d : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001038ed : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103966 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103a12 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103a8b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103b9c : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103c15 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103cc1 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103d3a : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103e1a : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103e93 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103f3f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103fb8 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001aee82 : add byte ptr [rax], al ; xor r8, qword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000029a70 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000008eadd : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000009674e : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000009f17e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000aaf9e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000abc6e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000abf5e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000ac5ce : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000017091e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001b0c07 : add byte ptr [rax], bh ; jno 0x1b0c04 ; jmp qword ptr [rcx]
0x00000000001b11f7 : add byte ptr [rax], bh ; jnp 0x1b11f4 ; jmp qword ptr [rcx]
0x00000000001aec07 : add byte ptr [rax], bh ; jrcxz 0x1aec03 ; jmp qword ptr [rcx]
0x00000000001a6c17 : add byte ptr [rax], bh ; mov cl, 0xee ; call qword ptr [rax]
0x00000000001ae147 : add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x000000000019d417 : add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rdx]
0x000000000019d387 : add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x00000000001a6447 : add byte ptr [rax], bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001bb927 : add byte ptr [rax], bh ; push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001af867 : add byte ptr [rax], bh ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000001b2c47 : add byte ptr [rax], bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a6d07 : add byte ptr [rax], bl ; fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001b0d57 : add byte ptr [rax], bl ; jae 0x1b0d54 ; call qword ptr [rsi]
0x00000000001b0b17 : add byte ptr [rax], bl ; jo 0x1b0b14 ; jmp qword ptr [rcx]
0x000000000019e407 : add byte ptr [rax], bl ; jp 0x19e3f8 ; jmp qword ptr [rcx]
0x00000000001a7ba7 : add byte ptr [rax], bl ; mov ch, 0xfb ; call qword ptr [rax]
0x0000000000194e7c : add byte ptr [rax], bl ; sti ; push rax ; sbb bl, bh ; jmp rax
0x00000000001b1447 : add byte ptr [rax], bl ; xchg ebp, esi ; jmp rax
0x00000000001b2a37 : add byte ptr [rax], ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b9597 : add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001aef97 : add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0837 : add byte ptr [rax], ch ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001aeb37 : add byte ptr [rax], ch ; loop 0x1aeb33 ; jmp qword ptr [rcx]
0x00000000001a7cc7 : add byte ptr [rax], ch ; or esi, eax ; jmp rbx
0x00000000001aeda7 : add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001b0937 : add byte ptr [rax], ch ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0a57 : add byte ptr [rax], ch ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001aa587 : add byte ptr [rax], ch ; stc ; int1 ; call rsi
0x0000000000094424 : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x94431 ; ret
0x00000000001af517 : add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001b0807 : add byte ptr [rax], cl ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x000000000002dd74 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x000000000002dfbd : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001a6be7 : add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b21d7 : add byte ptr [rax], cl ; ret 0xfff5
0x00000000001ae1f7 : add byte ptr [rax], cl ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001adef7 : add byte ptr [rax], cl ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001a9227 : add byte ptr [rax], cl ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001a931f : add byte ptr [rax], dh ; and al, 0xf1 ; jmp rcx
0x00000000001b2c5f : add byte ptr [rax], dh ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019f9ef : add byte ptr [rax], dh ; cli ; jmp qword ptr [rcx]
0x00000000001aea2f : add byte ptr [rax], dh ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000000a9baf : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001b0b2f : add byte ptr [rax], dh ; jo 0x1b0b2c ; jmp qword ptr [rcx]
0x00000000001aebef : add byte ptr [rax], dh ; jrcxz 0x1aebeb ; call qword ptr [rsi]
0x000000000001be1f : add byte ptr [rax], dh ; ret
0x000000000000ea7f : add byte ptr [rax], dh ; ret 0xc
0x00000000001a2c8f : add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x00000000001ada0f : add byte ptr [rax], dh ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001a622f : add byte ptr [rax], dh ; xor al, 0xee ; jmp qword ptr [rcx]
0x0000000000115730 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ad25 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006ad33 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000001b2a1f : add byte ptr [rax], dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001ae80f : add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x00000000001af22f : add byte ptr [rax], dl ; hlt ; hlt ; jmp qword ptr [rsi]
0x00000000001b06ff : add byte ptr [rax], dl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c7f : add byte ptr [rax], dl ; jb 0x1b0c7c ; jmp qword ptr [rcx]
0x00000000001b0dff : add byte ptr [rax], dl ; je 0x1b0dfc ; jmp qword ptr [rcx]
0x000000000002de54 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x000000000002e09d : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x000000000010ab1b : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x000000000010b3b4 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001b0a3f : add byte ptr [rax], dl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b05bf : add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000008d37 : add byte ptr [rax], dl ; ret
0x000000000001824f : add byte ptr [rax], dl ; ret
0x00000000001adaff : add byte ptr [rax], dl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a94ff : add byte ptr [rax], dl ; xor cl, dh ; jmp qword ptr [rcx]
0x00000000001acc28 : add byte ptr [rax], r8b ; add ah, dh ; adc byte ptr [rcx], al ; add al, ah ; ret
0x00000000001abb08 : add byte ptr [rax], r8b ; add ah, dl ; inc dword ptr [rax] ; add al, ah ; ret
0x0000000000074696 : add byte ptr [rax], r8b ; cmp eax, -1 ; jne 0x746a9 ; pop rbx ; ret
0x00000000000350d5 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000000d590d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009e9bd : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009e9ed : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000008779d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x0000000000115985 : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000000886ad : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000001235cd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000cea35 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x0000000000110c0d : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000013a98d : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x0000000000138f2d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000007302d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x0000000000070155 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00000000000a5d5d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a8e3d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a990d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076530 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d3
0x0000000000094ccd : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000011935d : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000001149d5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000106265 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033ead : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000000a6fcd : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a87dd : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a5d9d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6a6d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a8e7d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a994d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000012c58d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000045a35 : add byte ptr [rax], r8b ; ret
0x0000000000045a3d : add byte ptr [rax], r8b ; ret
0x00000000000791cd : add byte ptr [rax], r8b ; ret
0x0000000000095d0d : add byte ptr [rax], r8b ; ret
0x000000000009eaed : add byte ptr [rax], r8b ; ret
0x00000000000aa05d : add byte ptr [rax], r8b ; ret
0x00000000000ac0ad : add byte ptr [rax], r8b ; ret
0x00000000000ada95 : add byte ptr [rax], r8b ; ret
0x00000000000d168d : add byte ptr [rax], r8b ; ret
0x00000000000fe56d : add byte ptr [rax], r8b ; ret
0x0000000000123ff5 : add byte ptr [rax], r8b ; ret
0x00000000001266ad : add byte ptr [rax], r8b ; ret
0x000000000013bd6d : add byte ptr [rax], r8b ; ret
0x000000000013c705 : add byte ptr [rax], r8b ; ret
0x000000000017293d : add byte ptr [rax], r8b ; ret
0x0000000000143e05 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x000000000003a7fd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x000000000011ce65 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000039f05 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000045a2d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000048475 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000006de75 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000709bd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000007a36d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000007d26d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000007df3d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000008b41d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000cea2d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000f6915 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000001186a5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000001233c5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000132465 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000013bded : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000014a78d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000017231d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000abc6d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000001437a7 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000004a59f : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x000000000004a59e : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x000000000014366c : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000b9e17 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x0000000000112d2d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000053993 : add byte ptr [rbp + 0x310c75c0], al ; div dh ; ret 0x4050
0x0000000000029a71 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c311d : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094f33 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000001159cf : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000b9e6b : add byte ptr [rbp + 0x390a74db], al ; ret
0x00000000000b9f41 : add byte ptr [rbp + 0x390a74db], al ; ret
0x000000000010267a : add byte ptr [rbp + 0x395374c0], al ; ret
0x000000000008167e : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x00000000000817f6 : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000203df : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054cce : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000097920 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bc9dc : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000da3ed : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de456 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012ed3e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054d9e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000011d0da : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b71 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000782f3 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000088487 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000891f9 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000892ae : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000096ce5 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000efcc0 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000101f70 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001192ed : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012e1c2 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008d82e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000006acbe : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000123de3 : add byte ptr [rbp + 0x49], dh ; mov eax, r8d ; ret
0x0000000000083b62 : add byte ptr [rbp + 0xa], dh ; jmp 0x83b91
0x000000000007ef51 : add byte ptr [rbp + 0xb], dh ; jmp 0x7ef81
0x0000000000048aef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000489df : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000003a6ca : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000143734 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001991bf : add byte ptr [rbp + rax - 0xa], dl ; call rsp
0x00000000001a6883 : add byte ptr [rbp + rbp*4], cl ; add al, cl ; jg 0x1a6881 ; call qword ptr [rax]
0x0000000000199487 : add byte ptr [rbp + rbx*2 - 0xa], dh ; call rsp
0x00000000001a58bb : add byte ptr [rbp + rbx*4 + 0x1400000], al ; out dx, al ; call qword ptr [rsi]
0x000000000017d157 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000001974b7 : add byte ptr [rbp + rcx*2 - 0x13], al ; jmp rsp
0x000000000019703f : add byte ptr [rbp + rcx*2 - 0x16], ah ; call rsp
0x0000000000043e35 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x00000000000586b7 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x00000000000751a1 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012cb82 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000000750be : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000012cf69 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000004a6b6 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x13b7
0x000000000006d716 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x00000000001bb8eb : add byte ptr [rbp + rdi*8 + 0x54000001], dh ; clc ; call qword ptr [rax]
0x000000000019a2cf : add byte ptr [rbp + rdi*8 - 9], al ; jmp rsp
0x0000000000199f2f : add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000196be7 : add byte ptr [rbp - 0x17], al ; call rsp
0x0000000000174324 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000aebd4 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xaebf0
0x00000000000b14f5 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb1510
0x00000000000b3cac : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb3cd0
0x00000000000cdb9f : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000cd990 : add byte ptr [rbp - 0x38], dh ; ret
0x000000000017d403 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00000000000cdb02 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x00000000000aa8e3 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c36f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x000000000006caaf : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000000e396c : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000c4392 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x0000000000039957 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000024ab0 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x000000000009ee0b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x000000000005beff : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000000db235 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d5d2f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000d87be : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000dbe77 : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000df257 : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000f5baf : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000012298e : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x0000000000047057 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x0000000000085815 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000035305 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000174495 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000006b457 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000019ab9f : add byte ptr [rbp - 7], ah ; call rsp
0x000000000019a687 : add byte ptr [rbp - 8], dl ; jmp rsp
0x0000000000146ce9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000001488f2 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000014ab79 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000014c252 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000130cb9 : add byte ptr [rbx + 0x149fce0], al ; ret 0x8b41
0x000000000007742f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000aac3b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000074698 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000943e5 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e847f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e847e : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000817e7 : add byte ptr [rbx + 0x34333615], cl ; add dh, dh ; ret 0xf02
0x000000000007cba7 : add byte ptr [rbx + 0x349bb505], al ; add byte ptr [rcx], al ; ret
0x00000000000cd418 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000115a5e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000052c8d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a5d6f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8e4f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000000a991f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000016b02f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000016e3df : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000a818f : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000009ee6c : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x000000000006fc81 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000086837 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000086836 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000015b0ff : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000015dbcf : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000001606ef : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000d5c20 : add byte ptr [rbx + 0x5b010443], al ; pop rbp ; pop r12 ; ret
0x0000000000084ca7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000084ca6 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000000202e0 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000022bad : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000049837 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bd1b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bf90 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007188a : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007501d : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075038 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000751df : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000751f8 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000767c0 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076a65 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078be1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087e74 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089753 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096bd1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c8d58 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8c38 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8c98 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001002fd : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105626 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001110c7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000118baf : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124f69 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000125000 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012e41b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137863 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a4c5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a68d : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b7a7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000142279 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029dab : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000029dcf : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036bf2 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000004fff3 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006bbd2 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007027d : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000071912 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000750ef : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000075108 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007690d : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000078a62 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ba44f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000baed7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000efdfd : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f0378 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f85a8 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f9b64 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f9bbc : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ff8d7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ffa17 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000104e30 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000104e98 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001098a6 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001098f7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000134307 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000134abd : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000134eca : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013798a : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013a245 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001fb0f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035a96 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035b1f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035c48 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035c99 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035ec2 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000036deb : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000045099 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006a971 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006d1fe : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006fe0e : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000070984 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000078264 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007b9b3 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007ba66 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008985c : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdc5b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdc80 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdcb4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdd00 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce6da : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce6f8 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce720 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce770 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d5c3e : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d5c6e : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000dc124 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f5d6b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fd550 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ff5bd : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001019cd : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010548a : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000108646 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000112e88 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000115733 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000121e74 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012cd20 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012e8b9 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012edd9 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001330a2 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001330d5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000133ae1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000137674 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001376bd : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000137cef : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000139202 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013921c : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358d8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036956 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000003696d : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036ab8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036acd : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036c61 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036cb1 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000006ac89 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000079512 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000796ce : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007978c : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c8088 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c81f5 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c89cf : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000fccf5 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000104f73 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000104fc1 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000001063e3 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000010ea64 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000112fb0 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000123e93 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000123fd6 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000012bf78 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000130533 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136b69 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136c14 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000013a93a : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b147 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000013bef8 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000013bf3e : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000014282e : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000077f0f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00000000000a6459 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6489 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64a6 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64c4 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64e9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6512 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6532 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a655b : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ea0 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ebf : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ed4 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6fbf : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7af9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b29 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b46 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b64 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b89 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bb2 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bd2 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bfb : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86b0 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86cf : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86e4 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a87cf : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a97c9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a97f9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9816 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9834 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9859 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9882 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a98a2 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a98cb : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000aa04f : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001ad84b : add byte ptr [rbx + 0x66a00001], dl ; stc ; call qword ptr [rax]
0x00000000000f5f5f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x00000000000773ff : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000acc18 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00000000001a5e90 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000000e5cfc : add byte ptr [rbx + 0xf4801e1], al ; ret
0x000000000003a9ff : add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000001bd09b : add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x000000000017088a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000019b65f : add byte ptr [rbx + rax*8], dl ; cli ; jmp rsp
0x000000000019afdf : add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000019751f : add byte ptr [rbx + rbp*2], al ; in eax, dx ; jmp rsp
0x00000000001a6673 : add byte ptr [rbx + rbp*4], bh ; add byte ptr [rax], al ; js 0x1a66f2 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b6653 : add byte ptr [rbx + rbp*4], bl ; add dword ptr [rax], eax ; call 0xffffffffd21b5d94
0x000000000019a907 : add byte ptr [rbx + rbx*8], ah ; clc ; call rsp
0x000000000010c99a : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006fdc2 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001ac6c3 : add byte ptr [rbx + rcx - 0x7867ffff], cl ; call qword ptr [rsi]
0x0000000000114a4a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x00000000001a06bb : add byte ptr [rbx + rcx*2 + 0x26400000], al ; jmp 0x1a06cb
0x00000000001b06e3 : add byte ptr [rbx + rcx*2 + 0x6bf80001], ch ; cmc ; jmp qword ptr [rcx]
0x000000000004a007 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000048427 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001972a7 : add byte ptr [rbx + rdi - 0x15], ah ; jmp rsp
0x00000000001b364b : add byte ptr [rbx + rdi*2], dl ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001977af : add byte ptr [rbx + rdi*4 - 0x13], al ; call rsp
0x0000000000196d9f : add byte ptr [rbx + rdi*8 - 0x17], al ; jmp rsp
0x000000000019afc7 : add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x0000000000194e24 : add byte ptr [rbx + rdi*8], al ; call rax
0x00000000001acec3 : add byte ptr [rbx + rdx - 0x2517ffff], cl ; call qword ptr [rdi]
0x000000000019b2df : add byte ptr [rbx + rdx*2], dh ; cli ; call rsp
0x00000000001aee83 : add byte ptr [rbx + rsi + 1], cl ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aeecb : add byte ptr [rbx + rsi - 0x170fffff], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019b8c7 : add byte ptr [rbx + rsi*2], ah ; sti ; call rsp
0x00000000001baeb3 : add byte ptr [rbx + rsi*8 + 1], bh ; add byte ptr [rax + 0x16], cl ; clc ; jmp qword ptr [rcx]
0x000000000019847f : add byte ptr [rbx + rsi*8 - 0x10], dl ; jmp rsp
0x000000000005a37e : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000005a5de : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00000000000cd1f7 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xcd211 ; ret
0x000000000007462f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000aacbf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000aacb8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000aacb1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000aacaa : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000aaca3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000aac9c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000105fcb : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000105fcb : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000128776 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x128788 ; ret
0x000000000011518f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x1151a9 ; ret
0x000000000005721e : add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x000000000005778c : add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00000000000aa9f9 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00000000000aa9e4 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000196170 : add byte ptr [rbx - 0x556f0004], ch ; cld ; jmp qword ptr [rax]
0x00000000001adef3 : add byte ptr [rbx - 0x64f7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001adedb : add byte ptr [rbx - 0x650fffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001adec3 : add byte ptr [rbx - 0x6527ffff], cl ; hlt ; jmp qword ptr [rcx]
0x000000000003a724 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000003a7f4 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000003a89d : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000010f6ad : add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000000b9a9b : add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000b9671 : add byte ptr [rbx - 0x76b6f020], al ; ret 0xc149
0x000000000002b769 : add byte ptr [rbx - 0x76be0008], al ; ret
0x00000000000e7605 : add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000047a10 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006e138 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000070abe : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000002076f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000057d38 : add byte ptr [rbx - 0x7af00008], al ; ret
0x00000000000e13ff : add byte ptr [rbx - 0x7af0f71a], al ; ret
0x0000000000073e94 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000171f46 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000006ce34 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000013c60f : add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000d1817 : add byte ptr [rbx - 0x7cb7f3b5], cl ; ret
0x00000000000d6d67 : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000d6d66 : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000e17ef : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000d8240 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00000000000e97bf : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x0000000000101a3f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000115b6f : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x0000000000072fd6 : add byte ptr [rbx - 0xd], bl ; ret
0x000000000007c963 : add byte ptr [rbx - 0xd], bl ; ret
0x000000000013c1cb : add byte ptr [rbx - 0xd], bl ; ret
0x0000000000195bc0 : add byte ptr [rbx - 4], dl ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000194ef4 : add byte ptr [rbx - 5], cl ; jmp rax
0x0000000000199f67 : add byte ptr [rbx - 9], dh ; jmp rsp
0x00000000001255c4 : add byte ptr [rbx], 0 ; add byte ptr [rcx], bh ; ret
0x000000000019a0d7 : add byte ptr [rbx], ah ; idiv edi ; ret 1
0x00000000001bd203 : add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00000000001b1e53 : add byte ptr [rbx], bl ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x0000000000055766 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000b5778 : add byte ptr [rcx + 0x29], al ; ret 0x8341
0x000000000002c2bf : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000002c2be : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00000000000bd758 : add byte ptr [rcx + 0x3093590d], cl ; add byte ptr [rcx + 1], cl ; ret
0x0000000000168cef : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000016d13f : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000008ba2f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000012fb4b : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000003ce6a : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000040161 : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000004305e : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000046078 : add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000008f526 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000000945f6 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000005b773 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f749e : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000010ce80 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006f7d9 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000001015e1 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000701e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000070200 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000116a10 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000116a65 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000117f10 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000117f65 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000168ccf : add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000016d11f : add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a6d3f : add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000000a854f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007ba06 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000000ea696 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000101f3a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x0000000000075512 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x0000000000072b7c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000001510ee : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001511b3 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001512a2 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015130c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001513cb : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001514bc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151568 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151606 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001516b8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151756 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151808 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001518a6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151958 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001519f6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151aa8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151b46 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151bf8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151c96 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151d48 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151de6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151e9d : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151f36 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151fe8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152086 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152138 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001521d6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152288 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152326 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001523d8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152476 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152528 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001525c6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152678 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152716 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001527c8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152866 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015386f : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153949 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153abe : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153b83 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153c72 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153cdc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153d9b : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153e8c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153f38 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153fd6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154088 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154126 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001541d8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154276 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154328 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001543c6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154478 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154516 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001545c8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154666 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154718 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001547b6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015486d : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154906 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001549b8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154a56 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154b08 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154ba6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154c58 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154cf6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154da8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154e46 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154ef8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154f96 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000155048 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001550e6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000155198 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000155236 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015623f : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156319 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015648e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156553 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156642 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001566ac : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015676b : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015685c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156908 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001569a6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156a58 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156af6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156ba8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156c46 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156cf8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156d96 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156e48 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156ee6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156f98 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157036 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001570e8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157186 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015723d : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001572d6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157388 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157426 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001574d8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157576 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157628 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001576c6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157778 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157816 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001578c8 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157966 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157a18 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157ab6 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157b68 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157c06 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158c27 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158cf2 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ddd : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158e9a : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158edd : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ef0 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015904f : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001590d0 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015918c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159249 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015930c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001593c9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015948c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159549 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015960c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001596c9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015978c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159849 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015990c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001599c9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159a8c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159b49 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159c0c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159cc9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159d8c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159e49 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159f0c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159fc9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a08c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a149 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a20d : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a2c9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a38c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a449 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a50c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a5c9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a68c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a749 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a8e0 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015aa73 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9b0 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9c3 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bb1f : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bba0 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bc5c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bd19 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bddc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015be99 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bf5c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c019 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c0dc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c199 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c25c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c319 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c3dc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c499 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c55c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c619 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c6dc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c799 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c85c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c919 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c9dc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ca99 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cb5c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cc19 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ccdd : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cd99 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ce5c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cf19 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cfdc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d099 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d15c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d219 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d3b0 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d543 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e481 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e4a3 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e5ff : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e680 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e73c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e7f9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e8bc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e979 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ea3c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eaf9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ebbc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ec79 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ed3c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015edf9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eebc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ef79 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f03c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f0f9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f1bc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f279 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f33c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f3f9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f4bc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f579 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f63c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f6f9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f7bd : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f879 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f93c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f9f9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fabc : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fb79 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fc3c : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fcf9 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fea4 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000160057 : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000009e8c6 : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add r10, rax ; jmp r10
0x0000000000047c90 : add byte ptr [rcx + 0x63], cl ; or al, 0x8b ; add rcx, r11 ; jmp rcx
0x000000000016e44c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e55b : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e68c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e888 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e91f : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e99d : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016ea63 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016eb95 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016eda0 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016ee2f : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016eea9 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016fa8a : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016fb8b : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016fcbc : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016feb8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016ff4f : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016ffcd : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000170093 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000001701c5 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000001703d0 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000017045f : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000001704d9 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a5be8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c40 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c5d : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c82 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5ca4 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5cba : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5ce6 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5d1b : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a62fd : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6326 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6354 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6426 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a71e8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7240 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a725d : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7282 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72a4 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72ba : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72e6 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a731b : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a798d : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79b6 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79e4 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7ac6 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8cc8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d20 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d3d : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d62 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d84 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d9a : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8dc6 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8dfb : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9633 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96a0 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96bd : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96e2 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9704 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a971a : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9746 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a977b : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9796 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002df1f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x0000000000034c57 : add byte ptr [rcx + 0x7fffff], ch ; je 0x34c52 ; ret
0x00000000000ffb2f : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c4992 : add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x0000000000102ea5 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000102f92 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000e3a97 : add byte ptr [rcx + 0xf], al ; mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00000000000d45f8 : add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000056804 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056787 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000005e59b : add byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000812c4 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000ee2ac : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000362c9 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000365b9 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000aa902 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dc20 : add byte ptr [rcx + 0xf], cl ; ret
0x00000000000e4c07 : add byte ptr [rcx + 1], al ; ret
0x00000000000aa38f : add byte ptr [rcx + 1], cl ; ret
0x00000000000bd75e : add byte ptr [rcx + 1], cl ; ret
0x00000000000bd836 : add byte ptr [rcx + 1], cl ; ret
0x00000000000bd8d5 : add byte ptr [rcx + 1], cl ; ret
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000001bcd33 : add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000085548 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000019bc63 : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; call 0x1119a4c1
0x000000000019a6af : add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x00000000001a248b : add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax], ah ; cmc ; in al, dx ; call qword ptr [rsi]
0x00000000001b64a3 : add byte ptr [rcx + rbp*4 + 1], ch ; add al, bh ; loope 0x1b64ae ; call rsi
0x00000000001a647b : add byte ptr [rcx + rbp*4], al ; add al, dl ; out dx, al ; call qword ptr [rdx]
0x00000000001a6443 : add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x000000000019b157 : add byte ptr [rcx + rbp], al ; cli ; jmp rsp
0x000000000019b077 : add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x00000000001b5473 : add byte ptr [rcx + rbx*4], bh ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a946b : add byte ptr [rcx + rbx*8], dh ; add byte ptr [rax], al ; shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x000000000019a8cf : add byte ptr [rcx + rbx*8], dh ; clc ; call rsp
0x000000000019d45b : add byte ptr [rcx + rbx], ah ; add byte ptr [rax], al ; push rax ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d473 : add byte ptr [rcx + rbx], bh ; add byte ptr [rax], al ; pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d443 : add byte ptr [rcx + rbx], cl ; add byte ptr [rax], al ; or rbp, rcx ; call qword ptr [rdx]
0x0000000000070fec : add byte ptr [rcx + rcx + 0x44], dh ; mov eax, eax ; pop rbx ; ret
0x000000000019a5e7 : add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000001383d1 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000c9dd1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000cb2e1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000010c181 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000010d901 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000011a967 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000011b2f7 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000011bc97 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000011cbc7 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x0000000000120831 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x0000000000131bf7 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c9e9b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000cb3ab : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000010c24b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000010d9cb : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000011aa2e : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000011b3be : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000011bd5b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000011cc8b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000001208fb : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x0000000000131cbb : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000e4783 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000008194f : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000094ccf : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000002f6d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000103753 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103878 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000001039d1 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103af6 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103c80 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103da5 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103efe : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000104023 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000001040d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000001040f7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000104117 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000104137 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000103887 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000103b05 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000103db4 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000104032 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000104080 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000001040a0 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000088cff : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x0000000000087e61 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087bf1 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000d980a : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd981d
0x000000000009ed32 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x0000000000071036 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df35 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000879d3 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000001036bc : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103735 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001037e1 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000010385a : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000010393a : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001039b3 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103a5f : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103ad8 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103be9 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103c62 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103d0e : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103d87 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103e67 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103ee0 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103f8c : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104005 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104257 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104277 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104297 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001042b7 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001042d7 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001042f7 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104317 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104337 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104357 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104377 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104397 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001043b7 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001043d7 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001043f7 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104417 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000104437 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000013809d : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000081865 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x00000000001036cb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103744 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001037f0 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103869 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103949 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001039c2 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103a6e : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103ae7 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103bf8 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103c71 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103d1d : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103d96 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103e76 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103eef : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000103f9b : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104014 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104157 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104177 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104197 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001041b7 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001041d7 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001041f7 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104217 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000104237 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000012c9d1 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d518 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012d626 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000001a4443 : add byte ptr [rcx + rcx*4], cl ; add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x000000000019b6df : add byte ptr [rcx + rcx*8 - 6], dh ; jmp rsp
0x0000000000083f88 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x83f57 ; ret
0x00000000001af44b : add byte ptr [rcx + rdi], dl ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x000000000019cccb : add byte ptr [rcx + rdx + 0x71000000], dl ; std ; jmp qword ptr [rdi]
0x0000000000199af7 : add byte ptr [rcx + rdx - 9], al ; jmp rsp
0x00000000001b0cc3 : add byte ptr [rcx + rdx*2 + 0x72580001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c7b : add byte ptr [rcx + rdx*2 + 1], al ; add byte ptr [rax], dl ; jb 0x1b0c80 ; jmp qword ptr [rcx]
0x00000000001b0cab : add byte ptr [rcx + rdx*2 + 1], dh ; add byte ptr [rax + 0x72], al ; cmc ; jmp qword ptr [rcx]
0x00000000001974df : add byte ptr [rcx + rdx*2 - 0x13], dh ; jmp rsp
0x00000000001b0c4b : add byte ptr [rcx + rdx*2], dl ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x0000000000196687 : add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x00000000001a4cab : add byte ptr [rcx + rdx*4], dh ; add byte ptr [rax], al ; test ch, ch ; call qword ptr [rdx]
0x0000000000198e7f : add byte ptr [rcx + rdx*4], dl ; hlt ; jmp rsp
0x000000000019cc7b : add byte ptr [rcx + rdx], al ; add al, ah ; fld1 ; call qword ptr [rdx]
0x00000000001b2c73 : add byte ptr [rcx + rsi*2], bh ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001a2c8b : add byte ptr [rcx + rsi*2], dl ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x00000000001aac6b : add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x000000000019ecb3 : add byte ptr [rcx + rsi], bh ; add al, bh ; mov bh, 0xe9 ; call qword ptr [rdx]
0x000000000019684f : add byte ptr [rcx - 0x17], dl ; call rsp
0x0000000000196b97 : add byte ptr [rcx - 0x17], dl ; call rsp
0x000000000000247b : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x000000000004242b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x00000000000b114b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000003f4d3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x00000000000ae7e3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x000000000003c213 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x00000000000b38d3 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x00000000000ad5c9 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000ff338 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00000000000f5f6f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000040f7f : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b2c4a : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000032964 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000026e53 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000026e70 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000005e790 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000001031bf : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000f247a : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f2d77 : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f330e : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f38f5 : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000045f94 : add byte ptr [rcx - 0x75], cl ; ret
0x000000000004632a : add byte ptr [rcx - 0x75], cl ; ret
0x0000000000046663 : add byte ptr [rcx - 0x75], cl ; ret
0x0000000000046c1e : add byte ptr [rcx - 0x75], cl ; ret
0x0000000000118ce7 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x000000000009e9ef : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000001335b2 : add byte ptr [rcx - 0x77], al ; cmc ; call 0x1f8a6
0x00000000000d2203 : add byte ptr [rcx - 0x77], al ; ret
0x00000000001150d7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000011513f : add byte ptr [rcx - 0x77], al ; ret
0x00000000000dddf4 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x0000000000047d69 : add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000ddda9 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000cf508 : add byte ptr [rcx - 0x77], cl ; cld ; je 0xcf52b ; call 0x8b728
0x0000000000059781 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000662ce : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000066571 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000008e1e3 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000009bd2f : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000affb9 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000b517e : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000662b7 : add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x000000000006655a : add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x000000000005aef6 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000011989b : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000006f777 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000074f13 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000000e32e6 : add byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x0000000000064326 : add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000b5c16 : add byte ptr [rcx - 0x7d], al ; ret
0x00000000000dc612 : add byte ptr [rcx - 0x7d], al ; ret
0x00000000000d1af7 : add byte ptr [rcx - 0x7d], al ; ret 0x4901
0x000000000005133e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000022d7e : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000004bcd2 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000066592 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000b9933 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d51d7 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000010f7af : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001433c7 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001433c6 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000094fa1 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000094fc2 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000ee1d5 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x000000000006657b : add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00000000000e1a86 : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000022cf7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x0000000000022d4f : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x0000000000022d4e : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000d5382 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000011012f : add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e5f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000144f2f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001450bf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014518f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014525f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014532f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001453ff : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001454cf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014559f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014566f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014573f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014580f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001458df : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001459af : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014e75f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014e87f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014e99f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014eabf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ebdf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ecff : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ee1f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014ef3f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f05f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f17f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f29f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f3bf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f4df : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f5ff : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014f71f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000086390 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000089e9f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000089fdf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a11f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a25f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a39f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a4df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a61f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a75f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a89f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008a9df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ab1f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ac5f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ad9f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008aedf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008b01f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008bd6f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008beef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c06f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c1ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c36f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c4ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c66f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c7ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008c96f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008caef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008cc6f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008cdef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008cf6f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008d0ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008d26f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008fd9f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000008ffaf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000901bf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000903cf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000905df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000907ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000909ff : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000090c0f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000090e1f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009102f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009123f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009144f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009165f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009186f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000091a7f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000920ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009233f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009258f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000927df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000092a2f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000092c7f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000092ecf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009311f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009336f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000935bf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009380f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000093a5f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000093caf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000093eff : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000009414f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000146d8f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000146f2f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014726f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014740f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001475af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014774f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001478ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147a8f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147c2f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147dcf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000147f6f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014810f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001482af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014844f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001489af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000148b8f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000148f3f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014911f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001492ff : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001494df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001496bf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014989f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149a7f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149c5f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000149e3f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a01f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a1ff : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014a3df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c2ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c46f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c76f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c8ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014ca6f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014cbef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014cd6f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014ceef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d06f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d1ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d36f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d4ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d66f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014d7ef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fa2f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fb9f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fd0f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014fe7f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014ffef : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015015f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001502cf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015043f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001505af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015071f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015088f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001509ff : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000150b6f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000150cdf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000150e4f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001612af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001614af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001616af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001618af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000161aaf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000161caf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000161eaf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001620af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001622af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001624af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001626af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001628af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000162aaf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000162caf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000162eaf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016345f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016369f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001638df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000163b1f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000163d5f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000163f9f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001641df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016441f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016465f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016489f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000164adf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000164d1f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000164f5f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016519f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001653df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000822ce : add byte ptr [rcx - 0x7d], cl ; sub rax, 0x39480108 ; ret
0x000000000003af9c : add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00000000000bd86f : add byte ptr [rcx - 0x7f], cl ; ret
0x00000000000f4890 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000f480f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000012abff : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026556 : add byte ptr [rcx - 0xa], al ; ret
0x000000000007e54f : add byte ptr [rcx - 0xa], al ; ret
0x000000000007e5c7 : add byte ptr [rcx - 0xa], al ; ret
0x000000000007e5fa : add byte ptr [rcx - 0xa], al ; ret
0x000000000007e604 : add byte ptr [rcx - 0xa], al ; ret
0x000000000007eb55 : add byte ptr [rcx - 0xa], al ; ret
0x00000000001216c7 : add byte ptr [rcx - 0xa], al ; ret 0x7502
0x0000000000080509 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000008073e : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080943 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000809da : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080a31 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080aa9 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000081f59 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000083529 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000835d7 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000001215b9 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000121627 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000121626 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080513 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000809e4 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000080a3b : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000835e1 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000110343 : add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00000000000cd1fa : add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000019432f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000019ccd0 : add byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x000000000008ec12 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ec38 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000001b3bd5 : add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b3c05 : add byte ptr [rcx], 0 ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b3bed : add byte ptr [rcx], 0 ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000018abcb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000bd0a4 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; ret 0xf7c6
0x0000000000088483 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000002e0e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000137671 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001376ba : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e741 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008e83c : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f68bd : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000123921 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008b33f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000008db3f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000195494 : add byte ptr [rcx], al ; cld ; jmp rax
0x000000000011a3d0 : add byte ptr [rcx], al ; jmp 0x11a19b
0x000000000011a790 : add byte ptr [rcx], al ; jmp 0x11a56b
0x000000000002de34 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000002e07d : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000010aa83 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000010b334 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000013c14f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007cbad : add byte ptr [rcx], al ; ret
0x00000000001099d5 : add byte ptr [rcx], al ; ret
0x0000000000109c24 : add byte ptr [rcx], al ; ret
0x00000000000daa57 : add byte ptr [rcx], al ; ret 0x8b48
0x00000000000dc1ea : add byte ptr [rcx], al ; ret 0xc083
0x00000000000de8ee : add byte ptr [rcx], al ; ret 0xda39
0x00000000000d5b97 : add byte ptr [rcx], al ; setg dl ; jmp 0xd5b24
0x00000000000b9df7 : add byte ptr [rcx], bh ; ret
0x00000000000b9ebf : add byte ptr [rcx], bh ; ret
0x00000000000e7e53 : add byte ptr [rcx], bh ; ret
0x00000000000f5d77 : add byte ptr [rcx], bh ; ret
0x0000000000109d9f : add byte ptr [rcx], bh ; ret
0x0000000000110cf1 : add byte ptr [rcx], bh ; ret
0x00000000001255c7 : add byte ptr [rcx], bh ; ret
0x00000000001256d0 : add byte ptr [rcx], bh ; ret
0x00000000000368a0 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000d45fd : add byte ptr [rcx], bh ; ret 0x840f
0x00000000000db244 : add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000db3a0 : add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e07c7 : add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000db0dd : add byte ptr [rcx], bh ; ret 0x947c
0x00000000001ad15f : add byte ptr [rcx], bh ; xor edi, esp ; jmp qword ptr [rax]
0x00000000001bcd6b : add byte ptr [rcx], ch ; add byte ptr [rax], al ; ret
0x0000000000110c07 : add byte ptr [rcx], ch ; clc ; ret
0x000000000008d9f6 : add byte ptr [rcx], ch ; ret
0x00000000000c2235 : add byte ptr [rcx], ch ; ret
0x00000000000c71fc : add byte ptr [rcx], ch ; ret
0x00000000001328bf : add byte ptr [rcx], ch ; ret
0x000000000013545f : add byte ptr [rcx], ch ; ret
0x000000000013924f : add byte ptr [rcx], ch ; ret
0x00000000000c2871 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bd6d6 : add byte ptr [rcx], ch ; ret 0x428d
0x00000000000c5fe3 : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c7236 : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c41ff : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c4e73 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c2834 : add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a82d : add byte ptr [rcx], ch ; ret 0xca39
0x0000000000034efe : add byte ptr [rcx], ch ; ret 0xd089
0x000000000005401c : add byte ptr [rcx], ch ; ret 0xd089
0x0000000000054791 : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c4168 : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c4574 : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c67bf : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c672f : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c2460 : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c2480 : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c27bb : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c27db : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c3c7c : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c5f53 : add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fcd31 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000181e3f : add byte ptr [rcx], ch ; sbb ebx, ebp ; ljmp ptr [rcx] ; sbb ebx, ebp ; jmp qword ptr [rdi]
0x00000000001ad12f : add byte ptr [rcx], ch ; xor edi, esp ; jmp qword ptr [rax]
0x0000000000119421 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x0000000000107555 : add byte ptr [rcx], cl ; clc ; ret
0x0000000000079d2a : add byte ptr [rcx], cl ; ret 0x8948
0x00000000000e072f : add byte ptr [rcx], cl ; ret 0xb60f
0x000000000019a4a7 : add byte ptr [rcx], dh ; clc ; jmp rsp
0x0000000000064122 : add byte ptr [rcx], dh ; div dh ; ret
0x0000000000034a6f : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x0000000000137ac8 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb567 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000003a2c0 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006df7f : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000077cbd : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008981b : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d7caf : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001192b7 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d33d : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d3c4 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012d9ff : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ec8f : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002df2f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000003bf27 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000003f1e7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000042137 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000ae507 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000b0e67 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000b35f7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000007a38f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a8 ; ret
0x000000000003a08b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003b1dd : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003b23c : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000101e2b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001023ad : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000112f41 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d7b2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000008d7b2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000024c26 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x000000000002426e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000facc3 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x61 ; ret
0x00000000001ad147 : add byte ptr [rcx], dh ; xor edi, esp ; jmp qword ptr [rax]
0x00000000001af863 : add byte ptr [rdi + 0x1c380001], ch ; cmc ; call qword ptr [rdx]
0x0000000000158f4a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000158fac : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015ba1a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015ba7c : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015e4f5 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015e55c : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000000abc64 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000172934 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000019accf : add byte ptr [rdi + rax*4], dh ; stc ; call rsp
0x00000000001a8243 : add byte ptr [rdi + rax*8], cl ; add byte ptr [rax], al ; call 0x281a729b
0x00000000001b2af3 : add byte ptr [rdi + rbp*2 + 0x18e80001], bh ; stc ; jmp qword ptr [rsi]
0x00000000001b2ac3 : add byte ptr [rdi + rbp*2 + 0x18e80001], cl ; stc ; jmp qword ptr [rsi]
0x00000000001b2a63 : add byte ptr [rdi + rbp*2], ch ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2a4b : add byte ptr [rdi + rbp*2], dl ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001a6af3 : add byte ptr [rdi + rbp*4 - 0x880000], bh ; stc ; call qword ptr [rax]
0x00000000001aea73 : add byte ptr [rdi + rbp], bh ; add dword ptr [rax], eax ; js 0x1aea61 ; hlt ; call qword ptr [rbx]
0x00000000001aea43 : add byte ptr [rdi + rbp], cl ; add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x0000000000197faf : add byte ptr [rdi + rbx - 0x11], al ; jmp rsp
0x00000000001adae3 : add byte ptr [rdi + rbx - 0x6d07ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a9ac3 : add byte ptr [rdi + rbx*8 - 0x6a980000], cl ; int1 ; call qword ptr [rax]
0x00000000001a9adb : add byte ptr [rdi + rbx*8 - 0x6aa00000], ah ; int1 ; call qword ptr [rax]
0x00000000001a9a43 : add byte ptr [rdi + rbx*8], cl ; add byte ptr [rax], al ; clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x000000000019baaf : add byte ptr [rdi + rbx*8], dh ; std ; call rsp
0x0000000000053f6a : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x0000000000052ef3 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x0000000000119597 : add byte ptr [rdi + rcx - 0x42], cl ; ret 0xf643
0x0000000000119596 : add byte ptr [rdi + rcx - 0x42], cl ; ret 0xf643
0x000000000019a37f : add byte ptr [rdi + rcx - 8], ah ; jmp rsp
0x00000000001b0acb : add byte ptr [rdi + rcx*2 + 0x6fd00001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0ae3 : add byte ptr [rdi + rcx*2 + 0x6fe80001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a0a5b : add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; nop ; push rax ; jmp 0x1a0a6b
0x00000000001b0a3b : add byte ptr [rdi + rcx*2], al ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0a53 : add byte ptr [rdi + rcx*2], bl ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x000000000002dd34 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000002df7d : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000010a52b : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000010aeb4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000019b63f : add byte ptr [rdi + rdi*4 - 6], al ; jmp rsp
0x00000000001afa4b : add byte ptr [rdi + rdi], dl ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x000000000019b9a7 : add byte ptr [rdi + rsi*2], dh ; std ; call rsp
0x000000000019add7 : add byte ptr [rdi + rsi*4], dh ; stc ; call rsp
0x00000000001999af : add byte ptr [rdi + rsi*8 - 0xa], al ; call rsp
0x00000000001ab283 : add byte ptr [rdi + rsi*8], cl ; add al, bh ; sub esi, edx ; jmp rcx
0x000000000019f23b : add byte ptr [rdi + rsi], al ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x000000000019f26b : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x00000000001aa2f3 : add byte ptr [rdi - 0x11280000], bh ; int1 ; jmp rcx
0x0000000000175860 : add byte ptr [rdi - 0x15], ah ; jmp rax
0x00000000000cdb78 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000196580 : add byte ptr [rdi - 0x618f0004], bl ; cld ; jmp rax
0x00000000000e822a : add byte ptr [rdi - 0xa], dh ; ret
0x00000000001a385b : add byte ptr [rdi*2 + 0x3f900000], ah ; in eax, dx ; jmp qword ptr [rax]
0x00000000001bd634 : add byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000001ae23b : add byte ptr [rdi], al ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019869f : add byte ptr [rdi], al ; int1 ; jmp rsp
0x0000000000034dd0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001af9c0 : add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001159b7 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x000000000015a8c6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000015d396 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000015fe8a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000aab97 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b8ff : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015e3cf : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000160eef : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000108a71 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010a5c4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10a555 ; loopne 0x10a5d5 ; ret
0x000000000002decd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2de5e ; loopne 0x2dede ; ret
0x000000000015b96f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000015e43f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000160f5f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000ceb87 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000128e0f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000128e0e : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000025c57 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d191f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ce27 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000008b13f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000008d3af : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000145a7f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000146a5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000014f81f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000150f7f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000acb00 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000007a61f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000016e45f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ecbf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000009f0ef : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f0ff : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f0df : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000009ec3f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009eaff : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000009670f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008eb4f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009673f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eb3f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000009672f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008eb2f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000009671f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000034bc7 : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000034df6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x00000000000c52e6 : add byte ptr [rdi], cl ; ret
0x00000000000c7117 : add byte ptr [rdi], cl ; ret
0x00000000000cae03 : add byte ptr [rdi], cl ; ret
0x00000000000c5600 : add byte ptr [rdi], cl ; ret 0x144
0x000000000013d44d : add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bc6a7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a850 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000000df15c : add byte ptr [rdi], cl ; ret 0x833b
0x00000000000456ae : add byte ptr [rdi], cl ; ret 0x8539
0x0000000000142b5e : add byte ptr [rdi], cl ; ret 0x8941
0x0000000000133be1 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000030316 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000f147a : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000fb88a : add byte ptr [rdi], cl ; ret 0x90c3
0x000000000011580a : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000eaf3a : add byte ptr [rdi], cl ; ret 0xa6e9
0x00000000000b64ee : add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000b64ee : add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d78a0 : add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c3551 : add byte ptr [rdi], cl ; ret 0xd801
0x000000000012390b : add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000001238b0 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001238ce : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001238eb : add byte ptr [rdi], cl ; ret 0xff83
0x00000000001238fb : add byte ptr [rdi], cl ; ret 0xff83
0x0000000000034e5f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x0000000000026550 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000003b4f9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b9c9 : add byte ptr [rdi], cl ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005744b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e071d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00000000000bcea1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000bce0d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000136e5b : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136ec8 ; ret
0x000000000014a777 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000061a3f : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000e22f6 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d8eae : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x00000000001419dc : add byte ptr [rdx + 0x159], bh ; call 0x2dc48
0x000000000012c4ab : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x0000000000080fdb : add byte ptr [rdx + 0x234], bh ; call 0x7d288
0x000000000008105c : add byte ptr [rdx + 0x237], bh ; call 0x7d288
0x000000000008103d : add byte ptr [rdx + 0x23a], bh ; call 0x7d288
0x0000000000021971 : add byte ptr [rdx + 0x2c], bh ; call 0x2dc48
0x00000000000b1944 : add byte ptr [rdx + 0x3e1], bh ; call 0x2dc48
0x000000000016afef : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x0000000000166cbf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000a814f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x0000000000021952 : add byte ptr [rdx + 0x4a], bh ; call 0x2dc48
0x00000000000d1bdd : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000000d39ad : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000001ad04b : add byte ptr [rdx + 0xd300001], dl ; hlt ; jmp rcx
0x0000000000009207 : add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bd92f : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002189f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00000000001095b3 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x0000000000198fd7 : add byte ptr [rdx + rax*2 - 0xb], ah ; jmp rsp
0x00000000001a3df3 : add byte ptr [rdx + rax*4 + 0x4d680000], bh ; in eax, dx ; call qword ptr [rax]
0x00000000001a7d53 : add byte ptr [rdx + rax*8], bl ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x0000000000034c5c : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x00000000001aa583 : add byte ptr [rdx + rbp*8], cl ; add byte ptr [rax], ch ; stc ; int1 ; call rsi
0x000000000019e593 : add byte ptr [rdx + rbp], bl ; add al, bh ; jl 0x19e58c ; jmp rsp
0x000000000019e563 : add byte ptr [rdx + rbp], ch ; add byte ptr [rax], al ; pop rax ; jl 0x19e55c ; jmp qword ptr [rsi]
0x000000000019731f : add byte ptr [rdx + rbx*4], al ; jmp 0x197327
0x00000000001b9593 : add byte ptr [rdx + rbx*8 + 1], bl ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x000000000019d54b : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x0000000000116d4b : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011824b : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000096c73 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000017cd57 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000199257 : add byte ptr [rdx + rcx - 0xa], al ; jmp rsp
0x00000000001b05bb : add byte ptr [rdx + rcx*2 + 0x5b100001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b05eb : add byte ptr [rdx + rcx*2 + 0x5b400001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b055b : add byte ptr [rdx + rcx*2], ah ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a45a3 : add byte ptr [rdx + rcx*4], ch ; add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x0000000000196a7f : add byte ptr [rdx + rdi*2 - 0x17], dh ; jmp rsp
0x00000000001a758b : add byte ptr [rdx + rdi*4], dl ; add byte ptr [rax], ah ; jae 0x1a758a ; call rax
0x00000000001bb58b : add byte ptr [rdx + rdi*8 + 1], dl ; add byte ptr [rax + 0x47], dl ; clc ; call qword ptr [rbx]
0x00000000001acdeb : add byte ptr [rdx + rdx - 0x25ffffff], dh ; jmp qword ptr [rcx]
0x00000000001acdd3 : add byte ptr [rdx + rdx - 0x2617ffff], bl ; jmp qword ptr [rcx]
0x00000000001acdbb : add byte ptr [rdx + rdx - 0x262fffff], al ; jmp qword ptr [rcx]
0x00000000001b0dcb : add byte ptr [rdx + rdx*2 + 0x73e00001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0db3 : add byte ptr [rdx + rdx*2 + 1], bh ; add al, cl ; jae 0x1b0db8 ; jmp qword ptr [rcx]
0x00000000001b0d83 : add byte ptr [rdx + rdx*2 + 1], cl ; add byte ptr [rax + 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d53 : add byte ptr [rdx + rdx*2], bl ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x000000000019ab0f : add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x00000000001aeda3 : add byte ptr [rdx + rsi + 1], ch ; add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001aedf3 : add byte ptr [rdx + rsi - 0x1887ffff], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000198a6f : add byte ptr [rdx + rsi - 0xd], ah ; jmp rsp
0x000000000019804f : add byte ptr [rdx + rsi], al ; out dx, eax ; call rsp
0x00000000001a83a0 : add byte ptr [rdx - 0x10], cl ; call qword ptr [rdx]
0x000000000019e010 : add byte ptr [rdx - 0x17], dh ; jmp qword ptr [rsi]
0x00000000000beb62 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbeb77
0x00000000001989f7 : add byte ptr [rdx - 0xd], dl ; jmp rsp
0x000000000010cfc7 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000010cfc6 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x000000000003c2c5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000003f585 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000ae895 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000b3985 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000197d1f : add byte ptr [rdx], ah ; out dx, al ; call rsp
0x000000000019aa3d : add byte ptr [rdx], al ; add ah, ah ; cmp edi, ecx ; jmp rsp
0x000000000002de86 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000002deb6 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000002def8 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000002df18 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000003518b : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000077433 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000128356 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000010eee7 : add byte ptr [rdx], al ; call rax
0x00000000001954f8 : add byte ptr [rdx], al ; cld ; jmp rax
0x000000000002dd94 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000002dfdd : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000010a77b : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000010b0b4 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00000000001ae788 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00000000000025af : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001bcd2f : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000195594 : add byte ptr [rdx], ch ; cld ; jmp rax
0x0000000000104c2f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019b0f7 : add byte ptr [rdx], dl ; cli ; call rsp
0x0000000000194e8c : add byte ptr [rip + 0x1e70fffb], cl ; sti ; call qword ptr [rax]
0x0000000000194ecc : add byte ptr [rip + 0x3a30fffb], bl ; sti ; call qword ptr [rax]
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x000000000012faea : add byte ptr [rip - 0x76b40000], al ; ret
0x00000000000cc6f1 : add byte ptr [rip - 0xfff], bh ; jae 0xcc702 ; ret
0x0000000000137cc7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014a635 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000016e754 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e76f : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e78a : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7a5 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7c0 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7db : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7f6 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e811 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec6c : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec87 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eca2 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecbd : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecd8 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecf3 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed0e : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed29 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd84 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd9f : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdba : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdd5 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdf0 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe0b : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe26 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe41 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017029c : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702b7 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702d2 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702ed : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170308 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170323 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017033e : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170359 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e0d0f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00000000000e0cf2 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x0000000000034ab7 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x0000000000034b2f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x000000000009effc : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008ea44 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000008fc7 : add byte ptr [rsi + 1], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000103695 : add byte ptr [rsi + 1], bh ; call rbx
0x000000000010370e : add byte ptr [rsi + 1], bh ; call rbx
0x00000000001037ba : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103833 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103913 : add byte ptr [rsi + 1], bh ; call rbx
0x000000000010398c : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103a38 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103ab1 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103bc2 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103c3b : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103ce7 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103d60 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103e40 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103eb9 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103f65 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103fde : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103882 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000103daf : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x000000000010374e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00000000001039cc : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000103c7b : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000103ef9 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00000000001036c6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000001037eb : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000103944 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000103a69 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000103bf3 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000103d18 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000103e71 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000103f96 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000001ba1a3 : add byte ptr [rsi + 1], ch ; add al, ch ; push rdi ; call qword ptr [rdx]
0x000000000000699f : add byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001ae1ab : add byte ptr [rsi + 1], dh ; add al, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x0000000000103b00 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x000000000010402d : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000103873 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000103af1 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000103da0 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000010401e : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000010373f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000103864 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00000000001039bd : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000103ae2 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000103c6c : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000103d91 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000103eea : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x000000000010400f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00000000001036b7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103730 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000001037dc : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103855 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103935 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000001039ae : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103a5a : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103ad3 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103be4 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103c5d : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103d09 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103d82 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103e62 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103edb : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000103f87 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000104000 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000000f68d7 : add byte ptr [rsi + 6], dh ; ret
0x00000000001024ef : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000001bc1b3 : add byte ptr [rsi + rax + 2], bh ; add byte ptr [rax - 0x79], bl ; sti ; call rcx
0x00000000000cdabc : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b295b : add byte ptr [rsi + rbp*2], ah ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019d9d3 : add byte ptr [rsi + rbx + 0x4a780000], bl ; jmp 0x1b9ce7
0x00000000001ad9bb : add byte ptr [rsi + rbx - 0x6f3fffff], al ; hlt ; call qword ptr [rcx]
0x0000000000197cef : add byte ptr [rsi + rbx*2 - 0x12], al ; jmp rsp
0x00000000001b19db : add byte ptr [rsi + rbx*2 - 0x5fdfffff], ah ; cmc ; call rdi
0x00000000001a994b : add byte ptr [rsi + rbx*8], dl ; add byte ptr [rax], al ; mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x00000000001bad28 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000001b09c3 : add byte ptr [rsi + rcx*2 + 0x6e980001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b09db : add byte ptr [rsi + rcx*2 + 0x6eb00001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b09f3 : add byte ptr [rsi + rcx*2 + 0x6ec80001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0963 : add byte ptr [rsi + rcx*2], ch ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b094b : add byte ptr [rsi + rcx*2], dl ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a49ab : add byte ptr [rsi + rcx*4], dh ; add al, dl ; jg 0x1a49a8 ; jmp qword ptr [rbx]
0x00000000001af9bb : add byte ptr [rsi + rdi + 0x1f000001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001af9d3 : add byte ptr [rsi + rdi + 0x1f180001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af9eb : add byte ptr [rsi + rdi + 0x1f300001], dh ; cmc ; jmp qword ptr [rcx]
0x000000000019f9eb : add byte ptr [rsi + rdi + 0x44300000], dh ; cli ; jmp qword ptr [rcx]
0x000000000019b1ff : add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x00000000001a794b : add byte ptr [rsi + rdi*4], dl ; add byte ptr [rax], al ; sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x00000000001b11db : add byte ptr [rsi + rdx*2 + 0x7b200001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b11f3 : add byte ptr [rsi + rdx*2 + 0x7b380001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b117b : add byte ptr [rsi + rdx*2 + 1], al ; add al, al ; jp 0x1b1180 ; jmp qword ptr [rcx]
0x00000000001b1193 : add byte ptr [rsi + rdx*2 + 1], bl ; add al, bl ; jp 0x1b1198 ; jmp qword ptr [rcx]
0x00000000001b1163 : add byte ptr [rsi + rdx*2], ch ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b114b : add byte ptr [rsi + rdx*2], dl ; add dword ptr [rax], eax ; nop ; jp 0x1b1150 ; jmp qword ptr [rcx]
0x000000000019b30f : add byte ptr [rsi + rdx*2], dl ; cli ; jmp rsp
0x00000000001a91f3 : add byte ptr [rsi + rdx*8 + 0x1f680000], bh ; int1 ; call qword ptr [rsi]
0x0000000000199657 : add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x00000000001b716b : add byte ptr [rsi + rsi*4], dh ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001bb17b : add byte ptr [rsi + rsi*8 + 1], al ; add byte ptr [rax], al ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001ab143 : add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001a6830 : add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x00000000001ae1f3 : add byte ptr [rsi - 0x57f7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1db : add byte ptr [rsi - 0x580fffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001950b4 : add byte ptr [rsi - 0x596f0003], ah ; std ; jmp qword ptr [rax]
0x0000000000021a2d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003686d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38d816] ; ret
0x00000000000f645c : add byte ptr [rsi - 3], ch ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000019a157 : add byte ptr [rsi - 9], al ; jmp rsp
0x000000000019b457 : add byte ptr [rsi], ah ; cli ; call rsp
0x000000000001fb0c : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000197da7 : add byte ptr [rsi], al ; out dx, al ; call rsp
0x00000000000fca32 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001b1f9b : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x00000000000f5f49 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000199007 : add byte ptr [rsp + rax*2 - 0xb], dh ; jmp rsp
0x00000000001972f7 : add byte ptr [rsp + rax*2], ah ; jmp 0x1972ff
0x00000000001bf00f : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001bbf73 : add byte ptr [rsp + rax], bh ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000001bbf43 : add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x0000000000197df7 : add byte ptr [rsp + rbp*2], al ; out dx, al ; call rsp
0x00000000001ad7eb : add byte ptr [rsp + rbx - 0x786fffff], dh ; hlt ; call qword ptr [rax]
0x000000000019854f : add byte ptr [rsp + rbx*2 - 0xf], dl ; call rsp
0x0000000000197667 : add byte ptr [rsp + rbx*4], dl ; in eax, dx ; call rsp
0x00000000001011c3 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001b07bb : add byte ptr [rsp + rcx*2 + 0x6cc00001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b07d3 : add byte ptr [rsp + rcx*2 + 0x6cd80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b07eb : add byte ptr [rsp + rcx*2 + 0x6cf00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0773 : add byte ptr [rsp + rcx*2], bh ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x000000000019783f : add byte ptr [rsp + rcx*8], dl ; in eax, dx ; jmp rsp
0x00000000001a7783 : add byte ptr [rsp + rdi*4], cl ; add al, bl ; frndint ; call qword ptr [rax]
0x0000000000195c78 : add byte ptr [rsp + rdi*8 - 0x37c6f01], al ; jmp qword ptr [rax]
0x000000000019570c : add byte ptr [rsp + rdi*8], ah ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019cfc3 : add byte ptr [rsp + rdx + 0x6f580000], cl ; std ; call qword ptr [rcx]
0x0000000000199307 : add byte ptr [rsp + rdx - 0xa], dh ; call rsp
0x0000000000198ed7 : add byte ptr [rsp + rdx - 0xb], dh ; call rsp
0x00000000001b0fe3 : add byte ptr [rsp + rdx*2 + 0x78480001], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001971af : add byte ptr [rsp + rdx], dl ; jmp 0x1971b7
0x00000000001aef93 : add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aefab : add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aefc3 : add byte ptr [rsp + rsi - 0x13a7ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001bafa3 : add byte ptr [rsp + rsi*8 + 1], ch ; add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x000000000019938f : add byte ptr [rsp - 0xa], al ; call rsp
0x00000000001b5fd3 : add byte ptr [rsp - 0xe67ffff], bl ; sti ; call rcx
0x000000000019a107 : add byte ptr [rsp - 9], ah ; push rsp ; ret 1
0x0000000000198a1f : add byte ptr [rsp], al ; jmp rsp
0x0000000000055ce8 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001024ee : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x000000000003613a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000f6f4a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fdbaa : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000014067a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001406ca : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000014071a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000014073a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000140cda : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000019e21d : add byte ptr es:[rax], al ; jne 0x19e212 ; jmp qword ptr [rcx]
0x000000000007a360 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000070983 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000078263 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000121e73 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005c4f8 : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x000000000005df1e : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x000000000019f17d : add byte ptr ss:[rax], al ; add al, 0xe9 ; call qword ptr [rsi]
0x000000000019f17c : add byte ptr ss:[rax], al ; add al, 0xe9 ; call qword ptr [rsi]
0x0000000000137384 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000de2ea : add ch, al ; mov al, 0x15 ; hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x0000000000187f7c : add ch, bh ; int1 ; jmp qword ptr [rax]
0x00000000000350d7 : add ch, bl ; fpatan ; ret
0x0000000000185e1c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000185e1b : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000185e1d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000019621c : add ch, byte ptr [rbp - 0x536d0004] ; cld ; jmp qword ptr [rdx]
0x00000000000bd40c : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000bd6c0 : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000100377 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000001008ff : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000100f17 : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000072e8a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000056840 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000187e58 : add ch, ch ; int1 ; jmp qword ptr [rax]
0x0000000000035f96 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000019f240 : add cl, 0xe9 ; call qword ptr [rdx]
0x000000000019f270 : add cl, 0xe9 ; call qword ptr [rdx]
0x0000000000195354 : add cl, 0xfb ; call rax
0x00000000000e4c97 : add cl, al ; call 0x66d0d5ab
0x0000000000052fc1 : add cl, bl ; in eax, 0xdf ; loopne 0x52f56 ; ret 0xe680
0x0000000000054f3a : add cl, bl ; in eax, 0xdf ; loopne 0x54ecf ; ret 0xe680
0x0000000000105e25 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000a2aac : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000a547c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000166ce7 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000005715e : add cl, byte ptr [rax + 0x29] ; ret
0x00000000000ac9c9 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000aca4d : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000aca6d : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000c391b : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c964 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003fc46 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000042b46 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000003fc6f : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000042b6c : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000aee2a : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000b1754 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000b3f0a : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000c3ac3 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000c57e3 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000c706d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000026b13 : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026b12 : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026e74 : add cl, byte ptr [rax + 0x39] ; ret
0x00000000001234c6 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x00000000001234d4 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x0000000000105e26 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x0000000000074079 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000002a293 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000105fab : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00000000000c0240 : add cl, byte ptr [rax - 0x46] ; ret
0x00000000000a2aad : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000a547d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000166ce8 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000009e927 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2a19 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2a88 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2a9a : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2ab0 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2aaf : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2ac8 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2b3c : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a53e9 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a5458 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a546a : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a5480 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a547f : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a5498 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a550c : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000166c55 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000166cc3 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000166cd5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000166ceb : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000166cea : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000166cf3 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000168fe0 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000016e3b3 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000016e3e3 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000016e3f5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000070caf : add cl, byte ptr [rax - 0x77] ; ret
0x00000000000d01f1 : add cl, byte ptr [rax - 0x77] ; ret
0x00000000000de6ff : add cl, byte ptr [rax - 0x77] ; ret
0x000000000007c842 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000ffa52 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000004945c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000000899f0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000089a11 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000089a32 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000008b1f0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000008b211 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000008b232 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000008f8e0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000008f901 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000008f922 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000025654 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000cf267 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000cf266 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000d0550 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000d054f : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000089a53 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000008b253 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000008f943 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000013bea5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000724b1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000000b789f : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000001a4258 : add cl, byte ptr [rbp + 0xa] ; ret
0x000000000012471f : add cl, byte ptr [rbp + 0xf] ; ret
0x000000000003d35d : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040655 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004352c : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000e7e4e : add cl, byte ptr [rbp - 0x73] ; std ; add byte ptr [rcx], bh ; ret
0x00000000000894c5 : add cl, byte ptr [rbp - 0x77] ; ret
0x000000000015b742 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000015e212 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000160d32 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000d64e6 : add cl, byte ptr [rcx + 0x39488a0c] ; ret
0x000000000006bcf2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x000000000006bcf1 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x0000000000082498 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x000000000012ed77 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x00000000000c9f7e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00000000000cb48e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000010c32e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000010daae : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000011ab23 : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000011b4b3 : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000011be44 : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000011cd74 : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00000000001209de : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x0000000000131da4 : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00000000000e0cfe : add cl, byte ptr [rcx - 0x7d] ; ret 0x4810
0x00000000000b853b : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c01
0x000000000002dd54 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x000000000002dd95 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x000000000002df9d : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x000000000002dfde : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x000000000010a65b : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x000000000010a77c : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x000000000010afb4 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x000000000010b0b5 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000f771f : add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f771f : add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f7677 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000111445 : add cl, byte ptr [rdi] ; test bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000065898 : add cl, byte ptr [rdi] ; test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000817f0 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000006d005 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000014a63b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000000aa963 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001b6a00 : add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x0000000000106e41 : add cl, ch ; int 0xf4
0x0000000000187db4 : add cl, ch ; int1 ; jmp qword ptr [rax]
0x0000000000067497 : add cl, ch ; pop rdi ; ret 0xffff
0x000000000002d2c7 : add cl, ch ; ret
0x0000000000067f54 : add cl, ch ; ret
0x000000000009e3b1 : add cl, ch ; ret
0x00000000000a4cc7 : add cl, ch ; ret
0x00000000000b9da9 : add cl, ch ; ret
0x00000000000ed5ba : add cl, ch ; ret
0x00000000000edbd4 : add cl, ch ; ret
0x00000000000f41d4 : add cl, ch ; ret
0x000000000012afb9 : add cl, ch ; ret
0x000000000014a657 : add cl, ch ; ret
0x0000000000060228 : add cl, ch ; ret 0xffb8
0x0000000000067734 : add cl, ch ; ret 0xffbf
0x000000000009e7e7 : add cl, ch ; ret 0xffd3
0x0000000000040f85 : add cl, ch ; ret 0xffec
0x0000000000031d06 : add cl, ch ; ret 0xfff1
0x000000000009e6b3 : add cl, ch ; ret 0xfff5
0x000000000002b0b1 : add cl, ch ; ret 0xfffb
0x00000000000f0c33 : add cl, ch ; ret 0xfffd
0x00000000001157bf : add cl, ch ; ret 0xfffe
0x000000000012820e : add cl, ch ; ret 0xfffe
0x0000000000060851 : add cl, ch ; ret 0xffff
0x0000000000115b66 : add cl, cl ; ret
0x00000000001bc57f : add cl, dh ; or byte ptr [rbx], al ; ret
0x00000000001a946f : add cl, dl ; int1 ; jmp qword ptr [rax]
0x00000000001a4050 : add dh, ah ; ret
0x0000000000045af8 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000d590f : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000018a4fb : add dh, bh ; jmp rdi
0x0000000000180257 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015b8f3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e3c3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160ee3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fbb2d : add dh, bl ; ret
0x00000000000fd3df : add dh, bl ; ret
0x00000000000fd89d : add dh, bl ; ret
0x00000000000a9beb : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001a3ff6 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x0000000000099b7d : add dh, byte ptr [rbp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00000000000d7ca8 : add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7c74
0x0000000000134212 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a0ee5 : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001a0ee5 : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001b69c5 : add dh, byte ptr [rdx + 0xa] ; ret
0x00000000001b69c5 : add dh, byte ptr [rdx + 0xa] ; ret
0x0000000000099563 : add dh, byte ptr [rdx + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009dac4 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x000000000009bb80 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009d5e4 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009dac3 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x000000000009dac2 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x0000000000134211 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000187e7c : add dh, ch ; int1 ; jmp qword ptr [rax]
0x0000000000064136 : add dh, dh ; ret
0x0000000000065895 : add dh, dh ; ret
0x000000000006589e : add dh, dh ; ret
0x000000000007d77a : add dh, dh ; ret
0x000000000007e243 : add dh, dh ; ret
0x000000000007f0c8 : add dh, dh ; ret
0x000000000007f418 : add dh, dh ; ret
0x000000000008460b : add dh, dh ; ret
0x00000000000dc5ce : add dh, dh ; ret
0x00000000000ec113 : add dh, dh ; ret 0x4002
0x0000000000023ff6 : add dh, dh ; ret 0x4801
0x000000000008f3d8 : add dh, dh ; ret 0x7404
0x000000000009449f : add dh, dh ; ret 0x7404
0x00000000001016cf : add dh, dh ; ret 0x7404
0x00000000000e45e9 : add dh, dh ; ret 0x7408
0x000000000006db9f : add dh, dh ; ret 0x7420
0x000000000007083f : add dh, dh ; ret 0x7420
0x000000000007098f : add dh, dh ; ret 0x7420
0x000000000007826f : add dh, dh ; ret 0x7420
0x00000000000e45f8 : add dh, dh ; ret 0x7420
0x000000000011740f : add dh, dh ; ret 0x7420
0x000000000011755f : add dh, dh ; ret 0x7420
0x000000000011852f : add dh, dh ; ret 0x7420
0x000000000011867f : add dh, dh ; ret 0x7420
0x0000000000170977 : add dh, dh ; ret 0x7501
0x0000000000171da3 : add dh, dh ; ret 0x7501
0x0000000000171da3 : add dh, dh ; ret 0x7501
0x0000000000170984 : add dh, dh ; ret 0x7502
0x0000000000061ba4 : add dh, dh ; ret 0x7504
0x00000000000d16df : add dh, dh ; ret 0x7504
0x0000000000170991 : add dh, dh ; ret 0x7504
0x0000000000170949 : add dh, dh ; ret 0x7510
0x0000000000170956 : add dh, dh ; ret 0x7520
0x0000000000170963 : add dh, dh ; ret 0x7540
0x00000000000f8d17 : add dh, dh ; ret 0xf01
0x00000000000817ed : add dh, dh ; ret 0xf02
0x00000000000f8d77 : add dh, dh ; ret 0xf02
0x0000000000122985 : add dh, dh ; ret 0xf04
0x000000000012de73 : add dh, dh ; ret 0xf04
0x000000000005421f : add dh, dh ; ret 0xf08
0x00000000000a12b2 : add dh, dh ; ret 0xf20
0x00000000000a2ed2 : add dh, dh ; ret 0xf20
0x00000000000a12bb : add dh, dh ; ret 0xf40
0x00000000000a2edb : add dh, dh ; ret 0xf40
0x0000000000188035 : add dh, dl ; call qword ptr [rax]
0x00000000001aa7b9 : add dh, dl ; call rdi
0x0000000000188029 : add dh, dl ; inc eax ; add dh, dl ; jmp rax
0x0000000000188015 : add dh, dl ; jmp qword ptr [rax]
0x000000000018802d : add dh, dl ; jmp rax
0x0000000000188031 : add dh, dl ; push rax ; add dh, dl ; call qword ptr [rax]
0x0000000000109e9e : add dil, byte ptr [rcx] ; ret
0x00000000000bb1e9 : add dil, r15b ; ret
0x00000000000bb204 : add dil, r15b ; ret
0x00000000000cdbbb : add dil, r15b ; ret
0x00000000000cdc13 : add dil, r15b ; ret
0x00000000001acdf0 : add dl, bl ; jmp qword ptr [rcx]
0x0000000000187dd4 : add dl, ch ; int1 ; jmp qword ptr [rax]
0x00000000001a5ee5 : add dl, ch ; ret
0x0000000000187fdd : add dl, dh ; call qword ptr [rax]
0x0000000000187fd9 : add dl, dh ; jmp rax
0x000000000003494f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000003497d : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000001bc4b0 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x0000000000198fd5 : add dword ptr [eax], eax ; cmc ; jmp rsp
0x00000000001a6cc4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000026e56 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000c01fc : add dword ptr [r8 - 0x73], ecx ; jl 0xc025b ; ror byte ptr [rax - 0x46], 1 ; ret
0x0000000000046274 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000d5d31 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000d5dde : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000d87c0 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000d890a : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000dbe79 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000dea21 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000dea74 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000df259 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000e46ad : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000f5bb1 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000f5bd7 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000128e12 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000006c70e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006c89a : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce92 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x000000000006cfe1 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000001afd15 : add dword ptr [r8], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x0000000000198ac5 : add dword ptr [r8], eax ; xchg eax, esp ; jmp rsp
0x00000000001b0105 : add dword ptr [r8], r8d ; cmc ; jmp rax
0x00000000001b032d : add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x0000000000026486 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000077ccc : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000d59b8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000016aff1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000d95cf : add dword ptr [rax + 0x29], ecx ; ret 0x8348
0x0000000000026af7 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000026af6 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000026e57 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000470a1 : add dword ptr [rax + 0x39], ecx ; ret
0x000000000007b681 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000822d4 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000823d1 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000082591 : add dword ptr [rax + 0x39], ecx ; ret
0x000000000009585a : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000096319 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000097005 : add dword ptr [rax + 0x39], ecx ; ret
0x000000000010e561 : add dword ptr [rax + 0x39], ecx ; ret
0x000000000010e7fd : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000d8fe3 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00000000000d9053 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00000000000b7957 : add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000000f9613 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000000e16b6 : add dword ptr [rax + 0x39], ecx ; ret 0x820f
0x00000000000495f0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00000000000495ef : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000049c84 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000049c83 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000051fec : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000f9607 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000d90b3 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000d3675 : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x00000000000b8dd2 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x000000000009f9c0 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x0000000000048083 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000004821b : add dword ptr [rax + 0x39], ecx ; salc ; jne 0x48218 ; xor eax, eax ; ret
0x000000000010de75 : add dword ptr [rax + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010de4f : add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00000000000c59d5 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c5a74 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000101ce1 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x0000000000102261 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000ff963 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00000000000e5cff : add dword ptr [rax + 0xf], ecx ; ret
0x000000000006432a : add dword ptr [rax + 1], ecx ; ret
0x0000000000020622 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000033bb6 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000bc3b7 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000bc497 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d5933 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000123f2c : add dword ptr [rax + rax*8 + 0x38414f74], eax ; ret 0x5a74
0x00000000001a273e : add dword ptr [rax + rbp*2], 0xa ; ret
0x0000000000099555 : add dword ptr [rax + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8349
0x00000000001ac0f6 : add dword ptr [rax + rsi*2], 0xa ; ret
0x000000000011b466 : add dword ptr [rax - 0x18], edx ; ret
0x00000000000d39e7 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x00000000000d39e6 : add dword ptr [rax - 0x6bf0a206], r8d ; ret 0xb60f
0x000000000002f453 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000002f4cb : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000105e22 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000c01fd : add dword ptr [rax - 0x73], ecx ; jl 0xc025a ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000f0035 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf007b
0x00000000000a2a86 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000000a5456 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000166cc1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000166c52 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000168fdd : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000016e3b0 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000016e3f2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009e916 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000af761 : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b486d : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000007eac9 : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000007b428 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000007b61a : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077f5d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000077f94 : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000008b4d1 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000959e4 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000c39bf : add dword ptr [rax - 0x77], ecx ; ret
0x00000000001049cb : add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad94 : add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000f0d4c : add dword ptr [rax - 0x77], ecx ; ret 0x349
0x00000000000cf890 : add dword ptr [rax - 0x77], ecx ; ret 0x57e9
0x00000000000e1ce2 : add dword ptr [rax - 0x77], ecx ; ret 0x75e8
0x00000000000793ef : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000d0440 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x000000000010e748 : add dword ptr [rax - 0x77], ecx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e71e
0x0000000000123c10 : add dword ptr [rax - 0x78], eax ; ja 0x123c1b ; ret
0x000000000016cc0a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016cc72 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016ce77 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016ce9a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016cec0 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016cee8 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016cf0e : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016cf40 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016cf6e : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016cfa0 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016cfd0 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016d000 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016d030 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016d062 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016d092 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016d0c2 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016d39c : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000016d447 : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000097428 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000000221f6 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002253d : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000256f7 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002c657 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002d61e : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000046275 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000519de : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000061e94 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008e0a2 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000954d5 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000096b5e : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000096ea9 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000096ed1 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000aecb3 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000b15d3 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000b3d93 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c1372 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c76ee : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d5461 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d5d32 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d5ddf : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d6d6a : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d6da2 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d87c1 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d890b : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d99fd : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dac1c : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000db238 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dbe7a : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dea22 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dea75 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000df25a : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e46ae : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f5bb2 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f5bd8 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fedc4 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000105f23 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001277ca : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000128be9 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000128daf : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000128e13 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000138d3e : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000175217 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000122648 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000d8243 : add dword ptr [rax - 0x7d], ecx ; ret 0x3d01
0x00000000000463dc : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000465eb : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000468ec : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000046aac : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000046b0c : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000046d6b : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000de32f : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000e97c2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x00000000000e17f2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x000000000006c70f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x000000000006c89b : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000037e49 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000038dbe : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000038ded : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000038e61 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000d89b7 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000d3803 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000002146c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x00000000000c7856 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x00000000000c78a5 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x0000000000023c9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x000000000003d24e : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000040546 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000004341d : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00000000000af240 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00000000000b1ac0 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00000000000b4340 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000122978 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000ceb8b : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000ceb8a : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cecf1 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cecf0 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cfa06 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cfa05 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cfbfe : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cfbfd : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000b710c : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x000000000006ce93 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000006cfe2 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000000fb171 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x000000000005cb5a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000e757a : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00000000000d9274 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d7a6e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x000000000007b5da : add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x00000000001a3c95 : add dword ptr [rax], 0xed46a800 ; jmp qword ptr [rsi]
0x00000000001099d4 : add dword ptr [rax], 1 ; ret
0x0000000000109c23 : add dword ptr [rax], 1 ; ret
0x00000000001af22e : add dword ptr [rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x0000000000198c16 : add dword ptr [rax], eax ; adc al, 0x6d ; call rsp
0x0000000000198e7e : add dword ptr [rax], eax ; adc al, 0x91 ; hlt ; jmp rsp
0x00000000001ae80e : add dword ptr [rax], eax ; adc bl, bl ; hlt ; call qword ptr [rbx]
0x00000000001b05be : add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b0a3e : add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0c7e : add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000199af6 : add dword ptr [rax], eax ; adc edi, r14d ; jmp rsp
0x0000000000198a1e : add dword ptr [rax], eax ; add al, 0x24 ; jmp rsp
0x000000000019869e : add dword ptr [rax], eax ; add al, 0xa7 ; int1 ; jmp rsp
0x00000000001419df : add dword ptr [rax], eax ; add al, ch ; pop rcx ; ret 0xffee
0x0000000000120676 : add dword ptr [rax], eax ; add al, ch ; ret 0xf0d5
0x00000000000f3fda : add dword ptr [rax], eax ; add al, ch ; xchg eax, edi ; ret 0xfff2
0x00000000001af44e : add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x000000000009e40a : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000009e416 : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000012391c : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x0000000000123922 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x0000000000123914 : add dword ptr [rax], eax ; add bl, al ; ret
0x0000000000168c7c : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006dcba : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000bf6f2 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000029448 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000028550 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000006f0bd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000006bd68 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000013c996 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000008767c : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000081568 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000014381d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000066504 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000077a0a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bd9f1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c76b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f2702 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010c6ff : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000117191 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001296b8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001335bd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013439d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013957d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000139d33 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000139f9b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001438b0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e3638 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000970ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c535 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000072b08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000084ab9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000086645 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000084be0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000085f80 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000086770 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002b95f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000032e77 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000054a78 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001101d0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011f20d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122e42 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000082bd7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000b69ca : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001458fd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001468b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a451 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d848 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000343b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002691d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000008de7e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008de98 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008e3de : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008e3f6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000096006 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000009601e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000963de : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000963f6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014bdaf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145851 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145921 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001468e5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000297fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000007186a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000117d96 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001b0afe : add dword ptr [rax], eax ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000072090 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000072250 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000021901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000018025a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017f40a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000017f232 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017f9ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017f22a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f9c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000005981e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x00000000000598d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005996a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x0000000000059ca5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x0000000000059fb5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005a002 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005a071 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005a0be : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000005b2d9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004da4c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004daad : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004e6fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004e751 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004f9bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004fa16 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004facd : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004fc77 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000004fd6c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000012eb53 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ebd3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014439a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fdea0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fe64f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff796 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff7c6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014161f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001745d0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000103697 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103710 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x00000000001037bc : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103835 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103915 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000010398e : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103a3a : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103ab3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103bc4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103c3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103ce9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103d62 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103e42 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103ebb : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103f67 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000103fe0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000172931 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x172948 ; neg eax ; ret
0x00000000000abc61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xabc71 ; neg eax ; ret
0x0000000000170887 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x170898 ; neg eax ; ret
0x00000000000bf1e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbf1b4
0x00000000000cdbf3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xcdc07 ; ret
0x00000000001323d3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001350d3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000135953 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000133028 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebp, eax ; call 0x12f308
0x000000000004a09e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000012d90a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000103884 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103db1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103750 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001039ce : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103c7d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103efb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001036c8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001037ed : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103946 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103a6b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103bf5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103d1a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103e73 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103f98 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103b0e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006cb44 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c431 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000d9807 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd9820
0x0000000000054d9b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000782f0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000088484 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000891f6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000892ab : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000012e1bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007ba63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089859 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c3b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c6b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cd1d : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e8b6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012edd6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001330d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000133ade : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000137cec : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139219 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ea61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000130530 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000013a937 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000013b144 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000013bef5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000013bf3b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000008870a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000115204 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012b051 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012eb7c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012ebfc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013a9db : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013aa4b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013aafb : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013ae5c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013aecc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013b041 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013b0ab : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013bbec : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013bc5c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013bccb : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013bd3b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000144333 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000048064 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000481fc : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004a082 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004a0b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004a10a : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004a142 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005576a : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000773f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000895d9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008b45c : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000abf73 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000acd71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ada9e : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000cdb7c : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000cdbd1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000cdbe7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000cea39 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d163b : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d164b : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d1711 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d1729 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d5906 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d5935 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d5945 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d5964 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d5975 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d59bc : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000fb5bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000fe661 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ff811 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010e9ce : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000110c11 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000114abb : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012b001 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012b061 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012b7b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001322fc : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000132318 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001323b4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001323c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001323d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001323e8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001323fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000132417 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013242e : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000132444 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013245e : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000134216 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000135069 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000135087 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001350c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001350d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001350e8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001350fb : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013510c : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000135123 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000135139 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013514b : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001358c0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001358d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000135920 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000135945 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000135958 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000135968 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000135981 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001359a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001359c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001359e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001359fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013a8a5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013a991 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013b121 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013bdc8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013be24 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013be53 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013be85 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013beb6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c154 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c195 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c245 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c485 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c4c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001434f7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006b46e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000885f3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000817f4 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000e396a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000f85a6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000137988 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000045097 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fd54e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000137672 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001376bb : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010f6ab : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x0000000000073e92 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000006ce32 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000087e5f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087bef : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000879d1 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000001335b0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; cmc ; call 0x1f8a8
0x0000000000066558 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x0000000000022d7c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000066590 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ee1d3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000066579 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x000000000008638e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000012abfd : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026554 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000835d5 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080511 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000110341 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000110cef : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000c2233 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000c71fa : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000079d28 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000023dc1 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00000000001af9be : add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000ceb85 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000123909 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000001238ae : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001238cc : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001238e9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x00000000001238f9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x000000000009effa : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000dc5cc : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000170975 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000170982 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000017098f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000170947 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000170954 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000170961 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000012de71 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001acdee : add dword ptr [rax], eax ; add dl, bl ; jmp qword ptr [rcx]
0x00000000000ffded : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000559c5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000019a6ae : add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x000000000019b8c6 : add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019a906 : add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x000000000019a0d6 : add dword ptr [rax], eax ; and al, 0xe3 ; idiv edi ; ret 1
0x000000000019a126 : add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000019938e : add dword ptr [rax], eax ; and al, 0xf6 ; call rsp
0x00000000001b11de : add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b298e : add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b2c76 : add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b2a4e : add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001ba1a6 : add dword ptr [rax], eax ; call 0x131b99b1
0x00000000001acec6 : add dword ptr [rax], eax ; call 0x181ac2ac
0x00000000001acdd6 : add dword ptr [rax], eax ; call 0x221ac1bb
0x00000000001adc16 : add dword ptr [rax], eax ; call 0x221ad0b5
0x00000000001af9a6 : add dword ptr [rax], eax ; call 0x221aeed0
0x00000000001b0ae6 : add dword ptr [rax], eax ; call 0x221b0061
0x00000000001b2c16 : add dword ptr [rax], eax ; call 0x271b2244
0x00000000001b2ac6 : add dword ptr [rax], eax ; call 0x271b23ea
0x00000000001b2af6 : add dword ptr [rax], eax ; call 0x271b241a
0x00000000001b2b26 : add dword ptr [rax], eax ; call 0x271b244a
0x00000000001b2b56 : add dword ptr [rax], eax ; call 0x271b247a
0x00000000001b2b86 : add dword ptr [rax], eax ; call 0x271b24aa
0x00000000001b2bb6 : add dword ptr [rax], eax ; call 0x271b24da
0x00000000001b6656 : add dword ptr [rax], eax ; call 0xffffffffd21b5d91
0x00000000001b2a06 : add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a5e6 : add dword ptr [rax], eax ; clc ; jmp rsp
0x00000000001b64a6 : add dword ptr [rax], eax ; clc ; loope 0x1b64ab ; call rsi
0x00000000001b0a26 : add dword ptr [rax], eax ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b90c6 : add dword ptr [rax], eax ; clc ; ret
0x00000000001adae6 : add dword ptr [rax], eax ; clc ; xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0106 : add dword ptr [rax], eax ; cmc ; jmp rax
0x0000000000198fd6 : add dword ptr [rax], eax ; cmc ; jmp rsp
0x000000000008e64a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000008e64a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000001b350e : add dword ptr [rax], eax ; cmp al, 0xf6 ; call qword ptr [rax]
0x00000000001aec06 : add dword ptr [rax], eax ; cmp bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b3bd6 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b11f6 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b0c06 : add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b364e : add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001b29a6 : add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5fd6 : add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001b0c36 : add dword ptr [rax], eax ; cwde ; jno 0x1b0c35 ; jmp qword ptr [rcx]
0x00000000001b5476 : add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001b09c6 : add dword ptr [rax], eax ; cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ac6c6 : add dword ptr [rax], eax ; cwde ; xchg ebx, esi ; call qword ptr [rsi]
0x00000000001ad7a6 : add dword ptr [rax], eax ; cwde ; xchg esp, esi ; call qword ptr [rsi]
0x00000000001999ae : add dword ptr [rax], eax ; div esi ; call rsp
0x00000000001acf16 : add dword ptr [rax], eax ; fcomp st(2) ; call qword ptr [rdx]
0x00000000001aea46 : add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001b1196 : add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001afd16 : add dword ptr [rax], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x000000000019a0f6 : add dword ptr [rax], eax ; hlt ; jrcxz 0x19a0f9 ; inc esp ; ret 1
0x000000000019b9de : add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x0000000000199c46 : add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x0000000000198f2e : add dword ptr [rax], eax ; in al, 0x20 ; cmc ; jmp rsp
0x000000000019815e : add dword ptr [rax], eax ; in al, 0x80 ; out dx, eax ; jmp rsp
0x0000000000198216 : add dword ptr [rax], eax ; in al, 0x93 ; out dx, eax ; call rsp
0x000000000019a106 : add dword ptr [rax], eax ; in al, 0xf7 ; push rsp ; ret 1
0x00000000001982c6 : add dword ptr [rax], eax ; in al, 0xfa ; out dx, eax ; call rsp
0x0000000000198d86 : add dword ptr [rax], eax ; in al, 7 ; hlt ; call rsp
0x00000000001aefae : add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0cae : add dword ptr [rax], eax ; jb 0x1b0cad ; jmp qword ptr [rcx]
0x0000000000199656 : add dword ptr [rax], eax ; jbe 0x199656 ; jmp rsp
0x0000000000198ed6 : add dword ptr [rax], eax ; je 0x198ef3 ; cmc ; call rsp
0x0000000000199006 : add dword ptr [rax], eax ; je 0x199053 ; cmc ; jmp rsp
0x000000000019a15e : add dword ptr [rax], eax ; je 0x19a14f ; idiv edi ; cld ; ret
0x0000000000047056 : add dword ptr [rax], eax ; jne 0x47058 ; mov rax, rbx ; pop rbx ; ret
0x00000000001ade2e : add dword ptr [rax], eax ; jo 0x1addd0 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae60e : add dword ptr [rax], eax ; jo 0x1ae5e8 ; hlt ; jmp rcx
0x00000000001bb33e : add dword ptr [rax], eax ; jo 0x1bb2dc ; sti ; jmp qword ptr [rdx]
0x00000000001aea76 : add dword ptr [rax], eax ; js 0x1aea5e ; hlt ; call qword ptr [rbx]
0x00000000001aedf6 : add dword ptr [rax], eax ; js 0x1aede6 ; hlt ; jmp qword ptr [rcx]
0x00000000001aee86 : add dword ptr [rax], eax ; js 0x1aee77 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0b76 : add dword ptr [rax], eax ; js 0x1b0bef ; cmc ; jmp qword ptr [rcx]
0x00000000001b0fe6 : add dword ptr [rax], eax ; js 0x1b0fe5 ; jmp qword ptr [rbx]
0x00000000001bafa6 : add dword ptr [rax], eax ; js 0x1baf47 ; sti ; jmp qword ptr [rdx]
0x00000000001b0776 : add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001af3be : add dword ptr [rax], eax ; loopne 0x1af3c4 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0a0e : add dword ptr [rax], eax ; loopne 0x1b0a85 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0dce : add dword ptr [rax], eax ; loopne 0x1b0e4a ; cmc ; jmp qword ptr [rcx]
0x000000000019b896 : add dword ptr [rax], eax ; mov ah, 0x40 ; sti ; call rsp
0x00000000001981e6 : add dword ptr [rax], eax ; mov ah, 0x91 ; out dx, eax ; jmp rsp
0x000000000019a13e : add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x00000000001bab1e : add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001b055e : add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001b078e : add dword ptr [rax], eax ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b09de : add dword ptr [rax], eax ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c4e : add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0636 : add dword ptr [rax], eax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000009edec : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ed31 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000198dbe : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x0000000000198f86 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x00000000001984de : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x00000000001b2cbe : add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b9fce : add dword ptr [rax], eax ; nop ; div bh ; call qword ptr [rdx]
0x00000000001b0b8e : add dword ptr [rax], eax ; nop ; jo 0x1b0b8d ; jmp qword ptr [rcx]
0x00000000001b114e : add dword ptr [rax], eax ; nop ; jp 0x1b114d ; jmp qword ptr [rcx]
0x00000000001ad7ee : add dword ptr [rax], eax ; nop ; xchg esp, esi ; call qword ptr [rax]
0x00000000001b0806 : add dword ptr [rax], eax ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af516 : add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001b2d86 : add dword ptr [rax], eax ; or byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x0000000000199256 : add dword ptr [rax], eax ; or r14b, sil ; jmp rsp
0x000000000019a156 : add dword ptr [rax], eax ; out 0xf7, al ; jmp rsp
0x00000000001b094e : add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a66 : add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b59a6 : add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000001aefc6 : add dword ptr [rax], eax ; pop rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0cc6 : add dword ptr [rax], eax ; pop rax ; jb 0x1b0cc5 ; jmp qword ptr [rcx]
0x00000000001b1e56 : add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b0966 : add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0606 : add dword ptr [rax], eax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001adbb6 : add dword ptr [rax], eax ; pop rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001b05ee : add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000009ee6b : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001b295e : add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001bb58e : add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001b1b0e : add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001b0f1e : add dword ptr [rax], eax ; push rax ; jbe 0x1b0f1d ; jmp qword ptr [rcx]
0x00000000001b120e : add dword ptr [rax], eax ; push rax ; jnp 0x1b120d ; jmp qword ptr [rcx]
0x00000000001ae23e : add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001989f6 : add dword ptr [rax], eax ; push rsp ; and dh, bl ; jmp rsp
0x000000000019a686 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x000000000019854e : add dword ptr [rax], eax ; push rsp ; pop rsp ; int1 ; call rsp
0x00000000001bad8e : add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001bad8d : add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b032e : add dword ptr [rax], eax ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001afa4e : add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001acdbe : add dword ptr [rax], eax ; rcr cl, 1 ; jmp qword ptr [rcx]
0x00000000000898b2 : add dword ptr [rax], eax ; ret
0x000000000008bb12 : add dword ptr [rax], eax ; ret
0x000000000008f1ee : add dword ptr [rax], eax ; ret
0x000000000008f354 : add dword ptr [rax], eax ; ret
0x00000000001b0d0e : add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b0b16 : add dword ptr [rax], eax ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0d56 : add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001af9d6 : add dword ptr [rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ace06 : add dword ptr [rax], eax ; sbb dl, bl ; jmp qword ptr [rcx]
0x00000000001ad80e : add dword ptr [rax], eax ; shl byte ptr [rsi - 7], 1 ; call qword ptr [rax]
0x00000000001b0ace : add dword ptr [rax], eax ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001aef96 : add dword ptr [rax], eax ; sub ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001aeda6 : add dword ptr [rax], eax ; sub bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b0836 : add dword ptr [rax], eax ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b3c06 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b0a56 : add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0936 : add dword ptr [rax], eax ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af916 : add dword ptr [rax], eax ; sub byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af436 : add dword ptr [rax], eax ; sub dh, bh ; hlt ; jmp rdi
0x00000000001aeb36 : add dword ptr [rax], eax ; sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b1166 : add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001ad9a6 : add dword ptr [rax], eax ; test al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x00000000001bb0a6 : add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001ade96 : add dword ptr [rax], eax ; test al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x000000000019b796 : add dword ptr [rax], eax ; test al, bl ; cli ; jmp rsp
0x000000000019a0e6 : add dword ptr [rax], eax ; test bl, ah ; idiv edi ; xchg eax, esp ; ret 1
0x000000000019a4de : add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000001adb9e : add dword ptr [rax], eax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000019a3ee : add dword ptr [rax], eax ; xchg eax, esp ; adc edi, eax ; call rsp
0x0000000000198626 : add dword ptr [rax], eax ; xchg eax, esp ; je 0x198621 ; jmp rsp
0x0000000000198ac6 : add dword ptr [rax], eax ; xchg eax, esp ; jmp rsp
0x00000000001ada26 : add dword ptr [rax], eax ; xchg rax, rcx ; hlt ; jmp qword ptr [rsi]
0x000000000019a4a6 : add dword ptr [rax], eax ; xor al, 0x21 ; clc ; jmp rsp
0x000000000019b9a6 : add dword ptr [rax], eax ; xor al, 0x77 ; std ; call rsp
0x000000000019a8ce : add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x000000000019baae : add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x00000000001aea2e : add dword ptr [rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aebee : add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001b0b2e : add dword ptr [rax], eax ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b3bee : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b716e : add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001af9ee : add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b409e : add dword ptr [rax], eax ; xor byte ptr [rsi - 0xa], dl ; call qword ptr [rcx]
0x0000000000198a6e : add dword ptr [rax], eax ; xor dh, bl ; jmp rsp
0x00000000001af19e : add dword ptr [rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000001ace1e : add dword ptr [rax], eax ; xor dl, bl ; jmp qword ptr [rcx]
0x000000000008e4a1 : add dword ptr [rax], edi ; ret
0x0000000000020ccc : add dword ptr [rax], edi ; ret 0xaf72
0x0000000000099aa7 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x0000000000097c9a : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x0000000000097f4a : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x00000000000aa99c : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x0000000000117bef : add dword ptr [rbp + 0x741189d2], eax ; ret 0x3949
0x00000000000c40bb : add dword ptr [rbp + 1], ecx ; ret
0x0000000000048060 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x00000000000481f8 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x000000000003d33d : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040635 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004350c : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000095c20 : add dword ptr [rbp - 0x77], ecx ; ret 0xc149
0x000000000004c5b1 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000000e46ab : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x0000000000105d39 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105da9 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000009751c : add dword ptr [rbp - 0xf], esi ; pop rbx ; pop rbp ; ret
0x0000000000097384 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000009742c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000015b7b2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000015e282 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000160da2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000d53a2 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000d9741 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x000000000000271e : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000011cfe8 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00000000000d5c24 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000012fa98 : add dword ptr [rbx + 0x94806e3], eax ; ret
0x00000000000d5c21 : add dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009dab5 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x000000000009bb71 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8348
0x000000000009d5d5 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8348
0x00000000000d72ea : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000123c32 : add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000033391 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000b7109 : add dword ptr [rbx - 0x7cb7fe15], eax ; ret 0x8504
0x00000000000d6d9f : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000d89b4 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000001bc484 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000001a52da : add dword ptr [rbx], eax ; or eax, 0x380e0a03 ; ret
0x000000000019c913 : add dword ptr [rbx], eax ; ret 0xe01
0x00000000001bc481 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000001323c1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00000000001350c1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x0000000000099d44 : add dword ptr [rcx + 0x29], ecx ; ret
0x00000000000ac72f : add dword ptr [rcx + 0x39], eax ; ret
0x0000000000094f80 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000bf2f9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000023dea : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000024298 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x0000000000024c46 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x00000000000e3ea0 : add dword ptr [rcx + 0x63], ecx ; ret
0x00000000000b1e71 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x000000000002d712 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000013ab3c : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abfc : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013acbc : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad7c : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000046987 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000194fd4 : add dword ptr [rcx - 0x5e2e0003], esp ; std ; call rcx
0x0000000000081e62 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x00000000000a2ac6 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000a5496 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000166cf1 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000016e3e1 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000006c208 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000006c207 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000006c855 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000006c854 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000004bccc : add dword ptr [rcx - 0x77], ecx ; push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000c30f5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000022d2d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x0000000000022d82 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000002b9a9 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x0000000000123eff : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009b314 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4201
0x000000000009a977 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4301
0x0000000000031491 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x0000000000123d04 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x0000000000123d03 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000010de65 : add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00000000000c2719 : add dword ptr [rcx - 0x7f], eax ; ret
0x000000000008de97 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000012ab7b : add dword ptr [rcx], 0xbe0f0000 ; ret 0xe883
0x0000000000199485 : add dword ptr [rcx], 0xf65d7400 ; call rsp
0x00000000000ac49b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000012391b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x0000000000082179 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000000d71e5 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000d722f : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000109d13 : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000e812b : add dword ptr [rcx], edi ; ret
0x0000000000109e88 : add dword ptr [rcx], edi ; ret
0x0000000000109e87 : add dword ptr [rcx], edi ; ret
0x000000000013e500 : add dword ptr [rcx], edi ; ret
0x00000000000d9599 : add dword ptr [rcx], edi ; ret 0xe875
0x00000000000e5e23 : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0x3941
0x000000000013c190 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013c240 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013c150 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013c1df : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001745ba : add dword ptr [rdi + 3], esi ; ret
0x00000000000959b7 : add dword ptr [rdi - 0x1a], edi ; ret
0x00000000001b0093 : add dword ptr [rdi], 2 ; cwde ; ret
0x00000000001aaf53 : add dword ptr [rdi], 2 ; ret
0x00000000001aaf52 : add dword ptr [rdi], 2 ; ret
0x00000000001bb863 : add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001bb862 : add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001ae37b : add dword ptr [rdi], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x0000000000125170 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d5b98 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x000000000002de35 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x000000000002e07e : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x000000000010aa84 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x000000000010b335 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x0000000000025942 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000028699 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000029593 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00000000000c23b1 : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000aa9fc : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000aa9e7 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000aa9e7 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000343b3 : add dword ptr [rdi], ecx ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000168ace : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000e45f2 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000007e5fe : add dword ptr [rdi], ecx ; test dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000005d530 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000000835db : add dword ptr [rdi], ecx ; test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000ebee9 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000011fa03 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x0000000000046dbc : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000ec6fb : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x00000000000aa8c5 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000aadc0 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00000000000a2a84 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00000000000a5454 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x000000000019c90f : add dword ptr [rdx + 0xe], eax ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000000aa60c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000172a82 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000006b417 : add dword ptr [rdx + 4], 1 ; ret
0x000000000006b478 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000009fbbd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0310 : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0a5d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000010971b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001a404e : add dword ptr [rdx + rax], -0xc ; ret
0x00000000001a53ad : add dword ptr [rdx], 0x43 ; ret
0x00000000001a770e : add dword ptr [rdx], 0x4b ; ret
0x00000000001bad2c : add dword ptr [rdx], 0x51 ; ret
0x00000000001afd04 : add dword ptr [rdx], 0x53 ; ret
0x00000000001ae78d : add dword ptr [rdx], 0x54 ; ret
0x00000000001b2ddb : add dword ptr [rdx], 0x5b ; ret
0x000000000019fbb4 : add dword ptr [rdx], 0x63 ; ret
0x00000000001a499c : add dword ptr [rdx], 0x63 ; ret
0x00000000001a02f4 : add dword ptr [rdx], 0x6f ; ret
0x00000000001a3014 : add dword ptr [rdx], 0x77 ; ret
0x000000000019fe1d : add dword ptr [rdx], 2 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a288c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000001a2664 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000001a7704 : add dword ptr [rdx], 2 ; ret
0x00000000001a9bb4 : add dword ptr [rdx], 2 ; ret
0x00000000001b5bec : add dword ptr [rdx], 2 ; xchg eax, ecx ; ret
0x0000000000123d0f : add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000019e5a9 : add dword ptr [rdx], ecx ; ret
0x000000000019e5d1 : add dword ptr [rdx], ecx ; ret
0x00000000001a426a : add dword ptr [rdx], ecx ; ret
0x00000000001b2690 : add dword ptr [rdx], ecx ; ret
0x00000000001bb867 : add dword ptr [rdx], ecx ; ret
0x0000000000123d0e : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000007cba8 : add dword ptr [rip + 0x349bb5], 1 ; ret
0x00000000000a2a15 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a2b38 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a53e5 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a5508 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001a71ef : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a145e : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a1474 ; ret
0x00000000001a146c : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1db8 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001b55d7 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000a2a97 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a5467 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000166cd2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001a8e60 : add dword ptr [rsi], 0x77 ; ret
0x00000000001a44fe : add dword ptr [rsi], 0xa ; ret
0x00000000001ac300 : add dword ptr [rsi], 2 ; ret
0x00000000001b60d9 : add dword ptr [rsi], 2 ; ret
0x00000000001a4570 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000001a6cc5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001afe9e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000099b6e : add dword ptr [rsp + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8349
0x00000000000d732c : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xd7343 ; je 0xd72d3 ; pop rbx ; ret
0x00000000001aea2d : add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x000000000009dab4 : add dword ptr cs:[rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x000000000009dab3 : add dword ptr cs:[rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00000000000343b6 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001af9bd : add dword ptr ds:[rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af9a5 : add dword ptr ds:[rax], eax ; call 0x221aeed1
0x00000000001af9d5 : add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af9ed : add dword ptr ds:[rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000014d847 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000198f2d : add dword ptr fs:[rax], eax ; in al, 0x20 ; cmc ; jmp rsp
0x00000000000d722e : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000001af22d : add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001af19d : add dword ptr ss:[rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000001af19c : add dword ptr ss:[rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x000000000008bb5b : add eax, 0x10 ; ret
0x0000000000123026 : add eax, 0x10 ; ret
0x000000000008f351 : add eax, 0x10e4a ; ret
0x0000000000134a42 : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x000000000002cb3a : add eax, 0x15ffe6 ; ret
0x0000000000020932 : add eax, 0x16bd34 ; ret
0x0000000000020942 : add eax, 0x16dc63 ; ret
0x00000000000bf6f0 : add eax, 0x16e ; ret
0x000000000008bb0f : add eax, 0x1713c ; ret
0x00000000000898af : add eax, 0x1777c ; ret
0x000000000008f1eb : add eax, 0x1b330 ; ret
0x000000000008e647 : add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x000000000008e647 : add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x00000000001bd205 : add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00000000001a9cf4 : add eax, 0x2300e44 ; ret 0xe0a
0x00000000001a5c54 : add eax, 0x2300e4a ; ret
0x00000000001a7e04 : add eax, 0x2300e55 ; ret
0x000000000008ebc5 : add eax, 0x26 ; ret
0x0000000000140f25 : add eax, 0x2844e6 ; call qword ptr [rax]
0x0000000000140912 : add eax, 0x284af9 ; call qword ptr [rax]
0x0000000000138382 : add eax, 0x28bb11 ; add rsp, 8 ; ret
0x0000000000138352 : add eax, 0x28bba9 ; add rsp, 8 ; ret
0x00000000001382f2 : add eax, 0x28bc91 ; add rsp, 8 ; ret
0x0000000000138322 : add eax, 0x28bcb9 ; add rsp, 8 ; ret
0x000000000008d9f3 : add eax, 0x29000000 ; ret
0x00000000000c276a : add eax, 0x2907fec1 ; ret 0x8944
0x00000000000c28aa : add eax, 0x2941c229 ; ret 0x6b45
0x00000000001289f2 : add eax, 0x29b5f1 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012c5ba : add eax, 0x29c7fd ; add rsp, 8 ; ret
0x000000000012c5a1 : add eax, 0x29c816 ; test eax, eax ; je 0x12c5b9 ; ret
0x000000000012b9ba : add eax, 0x29d381 ; pop rbx ; ret
0x000000000012b982 : add eax, 0x29d3b9 ; pop rbx ; ret
0x000000000012b8c3 : add eax, 0x29d478 ; pop rbx ; ret
0x000000000012833b : add eax, 0x2a0724 ; test eax, eax ; je 0x128351 ; ret
0x0000000000120fd2 : add eax, 0x2a48a1 ; ret
0x0000000000120690 : add eax, 0x2a51cb ; add rsp, 8 ; ret
0x0000000000115ae9 : add eax, 0x2b2632 ; pop rbp ; ret
0x000000000010a342 : add eax, 0x2b9b29 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000101fc0 : add eax, 0x2c525b ; add rsp, 0x18 ; ret
0x0000000000101f6c : add eax, 0x2c52ef ; pop rbp ; pop r12 ; ret
0x0000000000101a28 : add eax, 0x2c57a3 ; add rsp, 8 ; ret
0x00000000001019c9 : add eax, 0x2c5822 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168b54 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fe4f6 : add eax, 0x2c72a5 ; mov rdx, rax ; jmp 0xfe496
0x00000000000fe460 : add eax, 0x2c733b ; add rsp, 8 ; ret
0x00000000000ffaeb : add eax, 0x2c7600 ; add rsp, 8 ; ret
0x00000000000ff5b9 : add eax, 0x2c7a62 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe32f : add eax, 0x2c8c64 ; ret
0x00000000000fe16f : add eax, 0x2c8e24 ; ret
0x00000000000fdf9c : add eax, 0x2c8ff7 ; add rsp, 8 ; ret
0x00000000001a6cc3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000bb7de : add eax, 0x30b1dd ; add rsp, 8 ; ret
0x000000000008d7d7 : add eax, 0x3390ac ; add rsp, 8 ; ret
0x0000000000084110 : add eax, 0x33fdcb ; mov qword ptr [rax], rdi ; ret
0x0000000000081a86 : add eax, 0x342345 ; xor edi, edi ; call qword ptr [rax]
0x0000000000081861 : add eax, 0x34256a ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000084121 : add eax, 0x34269e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cb12 : add eax, 0x348a09 ; ret
0x000000000007cc16 : add eax, 0x349b49 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000013365d : add eax, 0x358d4800 ; ret
0x000000000006ac85 : add eax, 0x35ba76 ; pop rbx ; pop rbp ; ret
0x0000000000116272 : add eax, 0x37c19 ; ret
0x0000000000116362 : add eax, 0x37ec9 ; ret
0x00000000001b2659 : add eax, 0x38d048c ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x00000000000368bc : add eax, 0x38d7cb ; mov eax, edx ; ret
0x0000000000036881 : add eax, 0x38d802 ; ret
0x0000000000036871 : add eax, 0x38d816 ; ret
0x000000000003b0e2 : add eax, 0x38e36f ; add rsp, 8 ; ret
0x000000000002d9cd : add eax, 0x39641e ; mov qword ptr [rax], rdx ; ret
0x0000000000029c92 : add eax, 0x39bc59 ; ret
0x0000000000021a52 : add eax, 0x3a78b9 ; ret
0x0000000000021a42 : add eax, 0x3a78d9 ; ret
0x00000000001390f4 : add eax, 0x3d8d4800 ; ret
0x0000000000134ef5 : add eax, 0x3d8d4800 ; ret 0x57c
0x00000000000f5f97 : add eax, 0x48000000 ; add esp, 0x18 ; ret
0x000000000016b088 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000016b087 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000166d38 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000166d37 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000a5df6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000000a6ac6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000000a8ed6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000000a99a6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000125172 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000009e95a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x00000000001899bd : add eax, 0x518fff5 ; cmc ; call rax
0x00000000001899c9 : add eax, 0x518fff5 ; cmc ; jmp rax
0x000000000016b109 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000166d79 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000166d78 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000189a41 : add eax, 0x580fff5 ; cmc ; call rax
0x00000000001063e0 : add eax, 0x5b000000 ; pop rbp ; ret
0x000000000006e576 : add eax, 0x5b000000 ; ret
0x0000000000076ff6 : add eax, 0x5b000000 ; ret
0x0000000000001569 : add eax, 0x5be0000 ; add byte ptr [rax], al ; ret 5
0x0000000000180dfd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000007eed8 : add eax, 0x5c415d5b ; ret
0x00000000000efcbd : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000012b0f2 : add eax, 0x61a2e ; ret
0x0000000000189a4d : add eax, 0x628fff5 ; cmc ; call qword ptr [rcx]
0x00000000001bcd69 : add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00000000001bc065 : add eax, 0x6f880002 ; clc ; call rcx
0x000000000019b8c5 : add eax, 0x73240001 ; sti ; call rsp
0x00000000001bc11d : add eax, 0x73f00002 ; clc ; call qword ptr [rdi]
0x00000000000d3257 : add eax, 0x740e3941 ; ret
0x000000000019543d : add eax, 0x740fffc ; cld ; jmp qword ptr [rax]
0x00000000000b9e6a : add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000b9f40 : add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000b9e16 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x000000000002e50f : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x000000000008f9eb : add eax, 0x80 ; ret
0x0000000000091cdb : add eax, 0x80 ; ret
0x000000000003d3bd : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000406b5 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004358c : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000a65fe : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000d9593 : add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000aa8bf : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000e32e4 : add eax, 0x83410000 ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000f846b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001454ed : add eax, 0x83480000 ; ret 0x4910
0x00000000001454ec : add eax, 0x83480000 ; ret 0x4910
0x00000000001464f7 : add eax, 0x83480000 ; ret 0x4910
0x0000000000147fd7 : add eax, 0x83480000 ; ret 0x4910
0x000000000014a091 : add eax, 0x83480000 ; ret 0x4910
0x000000000014b96e : add eax, 0x83480000 ; ret 0x4910
0x000000000014d3c8 : add eax, 0x83480000 ; ret 0x4910
0x0000000000148041 : add eax, 0x83480000 ; ret 0xe910
0x000000000014b9bf : add eax, 0x83480000 ; ret 0xe910
0x000000000014d423 : add eax, 0x83480000 ; ret 0xe910
0x0000000000145441 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000145511 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000146525 : add eax, 0x83480000 ; ret 0xeb10
0x00000000000d543d : add eax, 0x83480f75 ; ret
0x000000000016b08b : add eax, 0x8428d48 ; ret
0x000000000016b08a : add eax, 0x8428d48 ; ret
0x000000000012faeb : add eax, 0x894c0000 ; ret
0x000000000006f34e : add eax, 0x89c08500 ; ret 0x8389
0x00000000001159b9 : add eax, 0x89c78944 ; ret
0x0000000000026b0d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af1 : add eax, 0x8d480000 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000026b29 : add eax, 0x8d480000 ; add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000026e6e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000000a7ca2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000138346 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000138376 : add eax, 0xa8 ; add rsp, 8 ; ret
0x0000000000094440 : add eax, 0xb3db ; ret
0x0000000000094411 : add eax, 0xb63a ; ret
0x0000000000094454 : add eax, 0xbcb47 ; ret
0x000000000008da9c : add eax, 0xbcdbf ; ret
0x000000000008d70c : add eax, 0xbd01f ; ret
0x000000000008f392 : add eax, 0xbeea9 ; ret
0x000000000008b29c : add eax, 0xbf34f ; ret
0x0000000000089cff : add eax, 0xc ; ret
0x000000000014081e : add eax, 0xc0310000 ; pop rbx ; ret
0x000000000016f48a : add eax, 0xc0310000 ; ret
0x000000000016f50a : add eax, 0xc0310000 ; ret
0x000000000016f509 : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x00000000000abc9d : add eax, 0xc210e ; ret
0x00000000000ac879 : add eax, 0xc31f2 ; ret
0x000000000016b10d : add eax, 0xc428d48 ; ret
0x000000000016b10c : add eax, 0xc428d48 ; ret
0x00000000000a743d : add eax, 0xc478d48 ; ret
0x00000000000ac881 : add eax, 0xc5aaa ; ret
0x00000000000310d7 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000313b5 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000008fa4e : add eax, 0xd ; ret
0x0000000000091d3e : add eax, 0xd ; ret
0x00000000000a827d : add eax, 0xd478d48 ; ret
0x000000000008d3ef : add eax, 0xd99dc ; ret
0x000000000008f87f : add eax, 0xda0cc ; ret
0x000000000008b18f : add eax, 0xda48c ; ret
0x000000000008f99f : add eax, 0xdb7bc ; ret
0x000000000008ebd9 : add eax, 0xdf852 ; ret
0x000000000008ebe1 : add eax, 0xe1fda ; ret
0x0000000000089a9c : add eax, 0xe6dff ; ret
0x00000000001123c7 : add eax, 0xe8000000 ; push rax ; ret 0xfff1
0x000000000009e3ae : add eax, 0xe9000000 ; ret
0x00000000000ac865 : add eax, 0xe916 ; ret
0x00000000000d45f6 : add eax, 0xf410000 ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000abc95 : add eax, 0xf596 ; ret
0x0000000000103b32 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000103b57 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000103ca0 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000103c9f : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000103d39 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000080507 : add eax, 0xf6410000 ; ret 0xf01
0x000000000015b7a3 : add eax, 0xf7f0ff3 ; ret
0x000000000015b7a2 : add eax, 0xf7f0ff3 ; ret
0x000000000015e273 : add eax, 0xf7f0ff3 ; ret
0x000000000015e272 : add eax, 0xf7f0ff3 ; ret
0x0000000000160d93 : add eax, 0xf7f0ff3 ; ret
0x0000000000160d92 : add eax, 0xf7f0ff3 ; ret
0x000000000004d6d0 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000005946f : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed8c : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000004eddf : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000116231 : add eax, 0xfff8980a ; ret
0x0000000000116321 : add eax, 0xfff89e6a ; ret
0x00000000001163ab : add eax, 0xfff94160 ; ret
0x0000000000136dfe : add eax, 0xffff97fd ; mov rdi, rax ; call qword ptr [r10]
0x00000000000569f7 : add eax, 0xfffffd06 ; add rax, rdx ; jmp rax
0x00000000000f6a67 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x00000000000f6a67 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x0000000000109c0b : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000001099bc : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000aa99a : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f82b : add eax, 1 ; ret
0x000000000008f83d : add eax, 1 ; ret
0x00000000000abf41 : add eax, 1 ; ret
0x00000000000218e5 : add eax, 2 ; push rax ; call rbx
0x00000000000abf38 : add eax, 2 ; ret
0x0000000000133066 : add eax, 2 ; ret
0x00000000001391c6 : add eax, 2 ; ret
0x00000000000abf51 : add eax, 3 ; ret
0x00000000000d71eb : add eax, 8 ; ret
0x0000000000020be9 : add eax, dword ptr [0] ; ret
0x000000000002e0f9 : add eax, dword ptr [0] ; ret
0x000000000002e119 : add eax, dword ptr [0] ; ret
0x000000000002e139 : add eax, dword ptr [0] ; ret
0x00000000001196d9 : add eax, dword ptr [0] ; ret
0x0000000000143d69 : add eax, dword ptr [0] ; ret
0x0000000000040f82 : add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b1947 : add eax, dword ptr [rax] ; add al, ch ; int1 ; ret 0xfff7
0x000000000010f939 : add eax, dword ptr [rax] ; add al, ch ; jmp rdx
0x00000000000b6075 : add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000007f083 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000007f082 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000007dabb : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000001a1485 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x3c], bl ; in al, dx ; jmp rbx
0x0000000000100ce3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xf775
0x00000000000e0bfd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000020c2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000022c7d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000235e3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1de8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001226b8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000014568d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001466d7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a271 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bc0e : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001481e1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bc5f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d5a3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001456b1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146705 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013309e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001391fe : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012f81b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000109316 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000115807 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000010289c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000010407d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000010409d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000001040d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001040f4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104114 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104134 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104154 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104174 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104194 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001041b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001041d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001041f4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104214 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104234 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104254 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104274 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104294 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001042b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001042d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001042f4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104314 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104334 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104354 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104374 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104394 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001043b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001043d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001043f4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104414 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000104434 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000abf93 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d95c0 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000fdb23 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x0000000000122194 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000aa9f7 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00000000001383cf : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000001150d5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000011513d : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000dddf2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000003af9a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x000000000007e602 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000080a39 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001255c5 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000054f38 : add eax, dword ptr [rax] ; add cl, bl ; in eax, 0xdf ; loopne 0x54ed1 ; ret 0xe680
0x00000000000fdc67 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000aac20 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac40 : add eax, dword ptr [rax] ; ret
0x0000000000116275 : add eax, dword ptr [rax] ; ret
0x0000000000116365 : add eax, dword ptr [rax] ; ret
0x0000000000126753 : add eax, dword ptr [rax] ; ret
0x00000000001aa843 : add eax, dword ptr [rbx + 0xa810204] ; ret
0x00000000001a4252 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x0000000000123c0d : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x123c1e ; ret
0x0000000000168b19 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000074d14 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000019d10a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a200a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x00000000001a3c1a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000010adaa : add eax, dword ptr [rcx + rdx] ; ret
0x000000000010b60a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000001266fd : add eax, dword ptr [rcx - 0x7d] ; ret 0x4401
0x0000000000033e90 : add eax, dword ptr [rdi + 0x20] ; ret
0x00000000000663b5 : add eax, dword ptr [rdi + rcx] ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x0000000000143dfa : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014371e : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x000000000010ab86 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000010abe1 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b408 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b455 : add eax, dword ptr [rdx + rcx] ; ret
0x0000000000168c19 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001ab9f0 : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x00000000001a2c52 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000001ba6fa : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00000000001a0772 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000001a404a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000001afe9a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000000aacf1 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000504c8 : add eax, eax ; ret
0x000000000009f218 : add eax, eax ; ret
0x000000000009f25b : add eax, eax ; ret
0x000000000013f006 : add eax, ebp ; hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008554a : add eax, ebp ; jmp rax
0x0000000000095750 : add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00000000001163f7 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059823 : add eax, ecx ; jmp rax
0x000000000005987f : add eax, ecx ; jmp rax
0x00000000000598d6 : add eax, ecx ; jmp rax
0x000000000005996f : add eax, ecx ; jmp rax
0x0000000000059caa : add eax, ecx ; jmp rax
0x0000000000059d01 : add eax, ecx ; jmp rax
0x0000000000059fba : add eax, ecx ; jmp rax
0x000000000005a007 : add eax, ecx ; jmp rax
0x000000000005a076 : add eax, ecx ; jmp rax
0x000000000005a0c3 : add eax, ecx ; jmp rax
0x000000000005b167 : add eax, ecx ; jmp rax
0x000000000005b2de : add eax, ecx ; jmp rax
0x000000000005c1f2 : add eax, ecx ; jmp rax
0x00000000000948f2 : add eax, ecx ; jmp rax
0x0000000000094b62 : add eax, ecx ; jmp rax
0x000000000009ea35 : add eax, ecx ; jmp rax
0x00000000001358ab : add eax, ecx ; jmp rax
0x000000000013c6fe : add eax, ecx ; jmp rax
0x000000000008e8fa : add eax, ecx ; ret
0x00000000000965b1 : add eax, ecx ; ret
0x00000000000aaec7 : add eax, ecx ; ret
0x000000000009f215 : add eax, edi ; add rax, r8 ; ret
0x000000000009f258 : add eax, edi ; add rax, r8 ; ret
0x000000000008e8f7 : add eax, edi ; add rax, rcx ; ret
0x00000000000965ae : add eax, edi ; add rax, rcx ; ret
0x00000000000aaec4 : add eax, edi ; add rax, rcx ; ret
0x00000000000c00b4 : add eax, edi ; jmp rax
0x000000000004b607 : add eax, edi ; jmp rax
0x00000000000c00b4 : add eax, edi ; jmp rax
0x00000000000d3fe6 : add eax, edi ; jmp rax
0x00000000000dfd78 : add eax, edi ; jmp rax
0x00000000000e008f : add eax, edi ; jmp rax
0x000000000008d45b : add eax, edi ; ret
0x000000000008d6df : add eax, edi ; ret
0x000000000008eb34 : add eax, edi ; ret
0x000000000008eb69 : add eax, edi ; ret
0x0000000000096724 : add eax, edi ; ret
0x000000000009f02a : add eax, edi ; ret
0x000000000009f0d4 : add eax, edi ; ret
0x000000000009f11d : add eax, edi ; ret
0x000000000009f1b2 : add eax, edi ; ret
0x00000000000aaf90 : add eax, edi ; ret
0x000000000014a787 : add eax, edi ; ret
0x000000000014a64b : add eax, edi ; sub rax, r8 ; ret
0x000000000014a8a0 : add eax, edi ; sub rax, rdx ; ret
0x00000000000f6a3d : add eax, edx ; cmp rdi, rsi ; ja 0xf6a38 ; ret
0x000000000002ec9a : add eax, edx ; jmp rax
0x000000000002ed8a : add eax, edx ; jmp rax
0x00000000000569fd : add eax, edx ; jmp rax
0x000000000005bf57 : add eax, edx ; jmp rax
0x000000000005c14d : add eax, edx ; jmp rax
0x000000000005c41f : add eax, edx ; jmp rax
0x0000000000063d2f : add eax, edx ; jmp rax
0x0000000000063e66 : add eax, edx ; jmp rax
0x00000000000852ed : add eax, edx ; jmp rax
0x00000000000c31e2 : add eax, edx ; jmp rax
0x00000000000cdce0 : add eax, edx ; jmp rax
0x00000000000ce050 : add eax, edx ; jmp rax
0x00000000000ce74f : add eax, edx ; jmp rax
0x00000000000d1be3 : add eax, edx ; jmp rax
0x00000000000d39b3 : add eax, edx ; jmp rax
0x00000000000d9b4a : add eax, edx ; jmp rax
0x00000000000e1c9d : add eax, edx ; jmp rax
0x00000000000e6285 : add eax, edx ; jmp rax
0x00000000000f262e : add eax, edx ; jmp rax
0x00000000000f3803 : add eax, edx ; jmp rax
0x0000000000134a49 : add eax, edx ; jmp rax
0x000000000012e87e : add eax, edx ; ret
0x000000000008b8b6 : add eax, edx ; sub rax, rdi ; ret
0x000000000008ba7b : add eax, edx ; sub rax, rdi ; ret
0x000000000008bad2 : add eax, edx ; sub rax, rdi ; ret
0x00000000000fdc65 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000002ebbc : add eax, esi ; jmp rax
0x000000000004da51 : add eax, esi ; jmp rax
0x000000000004dab2 : add eax, esi ; jmp rax
0x000000000004db13 : add eax, esi ; jmp rax
0x000000000004e61e : add eax, esi ; jmp rax
0x000000000004e6ff : add eax, esi ; jmp rax
0x000000000004e756 : add eax, esi ; jmp rax
0x000000000004f9c4 : add eax, esi ; jmp rax
0x000000000004fa1b : add eax, esi ; jmp rax
0x000000000004fad2 : add eax, esi ; jmp rax
0x000000000004fc7c : add eax, esi ; jmp rax
0x000000000004fcdd : add eax, esi ; jmp rax
0x000000000004fd71 : add eax, esi ; jmp rax
0x000000000006c1d7 : add eax, esi ; jmp rax
0x000000000006c951 : add eax, esi ; jmp rax
0x00000000000aac5c : add eax, esi ; jmp rax
0x00000000000c52d7 : add eax, esi ; jmp rax
0x00000000000d2220 : add eax, esi ; jmp rax
0x00000000001322eb : add eax, esi ; jmp rax
0x000000000013505b : add eax, esi ; jmp rax
0x00000000000bc6c7 : add eax, esi ; ret
0x00000000000504c7 : add eax, r8d ; ret
0x0000000000050198 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001bb865 : add ebp, dword ptr [rcx + rax + 0xa] ; ret
0x00000000000bbabb : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000bbc27 : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000bbe25 : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000012bc04 : add ebp, dword ptr [rcx] ; ret 0x828d
0x00000000001bc4b3 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x0000000000196de1 : add ebp, edx ; jmp rsp
0x00000000001bc4b5 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001bc4a5 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000003182 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000003181 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000d043e : add ebx, 1 ; mov rdx, rax ; jmp 0xd03e5
0x0000000000143822 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000012413d : add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00000000001a4268 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000114a2c : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000048471 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000fea4b : add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x0000000000003792 : add ebx, ebp ; in al, 0xee ; jne 0x3778 ; ret 0x975
0x0000000000101e61 : add ebx, ebp ; ret
0x000000000006045d : add ebx, ebp ; ret 0x894c
0x000000000018c5f1 : add ebx, edi ; jmp rax
0x000000000015b963 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e433 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160f53 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000010a47f : add ebx, esi ; ret
0x000000000010a50f : add ebx, esi ; ret
0x000000000010a5af : add ebx, esi ; ret
0x000000000010a63f : add ebx, esi ; ret
0x000000000010a6cf : add ebx, esi ; ret
0x000000000010a75f : add ebx, esi ; ret
0x000000000010a7ff : add ebx, esi ; ret
0x000000000010a89f : add ebx, esi ; ret
0x000000000010a93f : add ebx, esi ; ret
0x000000000010a9cf : add ebx, esi ; ret
0x000000000010aa6a : add ebx, esi ; ret
0x000000000010aaff : add ebx, esi ; ret
0x000000000010acdb : add ebx, esi ; ret
0x000000000010ae21 : add ebx, esi ; ret
0x000000000010aea1 : add ebx, esi ; ret
0x000000000010af21 : add ebx, esi ; ret
0x000000000010afa1 : add ebx, esi ; ret
0x000000000010b021 : add ebx, esi ; ret
0x000000000010b0a1 : add ebx, esi ; ret
0x000000000010b121 : add ebx, esi ; ret
0x000000000010b1a1 : add ebx, esi ; ret
0x000000000010b221 : add ebx, esi ; ret
0x000000000010b2a1 : add ebx, esi ; ret
0x000000000010b31e : add ebx, esi ; ret
0x000000000010b3a1 : add ebx, esi ; ret
0x000000000010b54b : add ebx, esi ; ret
0x000000000013a78e : add ebx, esp ; call r14
0x000000000008f2e4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8f2d9 ; ret
0x00000000000f5b7f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000123f9d : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00000000000a2b1a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x00000000000a54ea : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000166d25 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000011e188 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007e469 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000007ff36 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000d53a5 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000000d9744 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000111914 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x0000000000111963 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x00000000001119b2 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x0000000000111a01 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x0000000000111a01 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x0000000000127c96 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x000000000011f709 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x000000000011f7f5 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x0000000000096e31 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x000000000011ee69 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x000000000011ee69 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000096c5f : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x0000000000026b2f : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000026b2e : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000026e91 : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000724b7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000b78a5 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000010935d : add ecx, dword ptr [rax - 0x42] ; ret
0x000000000012415c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000ff254 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009e93a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000a2b1e : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000a2b1d : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000a54ee : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000a54ed : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000166d29 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000166d28 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000008392e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ef98 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000111e07 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x0000000000024205 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000242bd : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000024445 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000038f4d : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003918c : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003920d : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d1923 : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000039027 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007775b : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000003d37d : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040675 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004354c : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000143ae1 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x000000000015b6d2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000015e1a2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000160cc2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5d94 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000a6a64 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000a8e74 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000a9944 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000fa3d9 : add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x0000000000113294 : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00000000000a2b1b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000a54eb : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000166d26 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000b9269 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000dc371 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000dd9f7 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000b7f28 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4201
0x00000000000539a3 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4c05
0x00000000001a7eb2 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a6fb8 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb61d : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00000000000a65c0 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001ae37f : add ecx, dword ptr [rdx] ; ret
0x00000000001a52db : add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x000000000002be48 : add ecx, eax ; jmp rcx
0x0000000000063889 : add ecx, eax ; jmp rcx
0x0000000000150fbb : add ecx, ebx ; jmp r9
0x000000000015398e : add ecx, ebx ; jmp r9
0x000000000015636e : add ecx, ebx ; jmp r9
0x0000000000158f50 : add ecx, ebx ; jmp r9
0x0000000000158fb2 : add ecx, ebx ; jmp r9
0x000000000015ba20 : add ecx, ebx ; jmp r9
0x000000000015ba82 : add ecx, ebx ; jmp r9
0x000000000015e4fb : add ecx, ebx ; jmp r9
0x000000000015e562 : add ecx, ebx ; jmp r9
0x0000000000047c96 : add ecx, ebx ; jmp rcx
0x000000000016e452 : add ecx, ebx ; jmp rcx
0x000000000016e561 : add ecx, ebx ; jmp rcx
0x000000000016e692 : add ecx, ebx ; jmp rcx
0x000000000016e88e : add ecx, ebx ; jmp rcx
0x000000000016e925 : add ecx, ebx ; jmp rcx
0x000000000016e9a3 : add ecx, ebx ; jmp rcx
0x000000000016ea69 : add ecx, ebx ; jmp rcx
0x000000000016eb9b : add ecx, ebx ; jmp rcx
0x000000000016eda6 : add ecx, ebx ; jmp rcx
0x000000000016ee35 : add ecx, ebx ; jmp rcx
0x000000000016eeaf : add ecx, ebx ; jmp rcx
0x000000000016fa90 : add ecx, ebx ; jmp rcx
0x000000000016fb91 : add ecx, ebx ; jmp rcx
0x000000000016fcc2 : add ecx, ebx ; jmp rcx
0x000000000016febe : add ecx, ebx ; jmp rcx
0x000000000016ff55 : add ecx, ebx ; jmp rcx
0x000000000016ffd3 : add ecx, ebx ; jmp rcx
0x0000000000170099 : add ecx, ebx ; jmp rcx
0x00000000001701cb : add ecx, ebx ; jmp rcx
0x00000000001703d6 : add ecx, ebx ; jmp rcx
0x0000000000170465 : add ecx, ebx ; jmp rcx
0x00000000001704df : add ecx, ebx ; jmp rcx
0x0000000000102454 : add ecx, ebx ; ret
0x0000000000102168 : add ecx, ebx ; ret 0x3944
0x000000000003329c : add ecx, edi ; jmp rcx
0x0000000000063e4a : add ecx, edx ; jmp rcx
0x000000000006cbc0 : add ecx, edx ; jmp rcx
0x00000000000aac94 : add ecx, esi ; jmp rcx
0x0000000000132dcd : add edi, 0x10 ; jmp rcx
0x0000000000132df4 : add edi, 0x10 ; jmp rcx
0x0000000000138f4d : add edi, 0x10 ; jmp rcx
0x0000000000138f74 : add edi, 0x10 ; jmp rcx
0x000000000013966d : add edi, 0x10 ; jmp rcx
0x0000000000139694 : add edi, 0x10 ; jmp rcx
0x000000000012bf5f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012e13a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000135874 : add edi, 0x58 ; jmp rcx
0x0000000000134fd4 : add edi, 0x68 ; jmp rcx
0x0000000000132257 : add edi, 0xc8 ; jmp rcx
0x000000000009e914 : add edi, 1 ; mov rax, rdi ; ret
0x00000000000d15fb : add edi, 1 ; test dl, dl ; jne 0xd15e9 ; ret
0x000000000009e925 : add edi, 2 ; mov rax, rdi ; ret
0x000000000009e938 : add edi, 3 ; mov rax, rdi ; ret
0x000000000009e945 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009e958 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000009e8e2 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000172b6f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000000208f4 : add edi, ebp ; call rax
0x00000000001a73d1 : add edi, ebp ; jmp rsi
0x0000000000194e21 : add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000000e1a7d : add edi, ebx ; jmp rdi
0x0000000000150fb8 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000015398b : add edi, edx ; add r9, r11 ; jmp r9
0x000000000015636b : add edi, edx ; add r9, r11 ; jmp r9
0x000000000019afe1 : add edi, edx ; call rsp
0x0000000000123f75 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x000000000006caa2 : add edi, esi ; jmp rdi
0x00000000001954fd : add edi, esp ; call rax
0x0000000000123f01 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x000000000009f118 : add edx, eax ; jl 0x9f187 ; add rax, rdi ; ret
0x000000000009f128 : add edx, eax ; jl 0x9f189 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009f148 : add edx, eax ; jl 0x9f189 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009f168 : add edx, eax ; jl 0x9f189 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009e8cc : add edx, eax ; jmp r10
0x000000000009e995 : add edx, eax ; jmp r10
0x00000000000210b8 : add edx, eax ; jmp rdx
0x000000000006bc89 : add edx, eax ; jmp rdx
0x000000000006c3ff : add edx, eax ; jmp rdx
0x00000000000c0ef2 : add edx, eax ; jmp rdx
0x00000000000c1062 : add edx, eax ; jmp rdx
0x00000000000c325d : add edx, eax ; jmp rdx
0x00000000000d9c1c : add edx, eax ; jmp rdx
0x00000000000e1fff : add edx, eax ; jmp rdx
0x00000000000f213a : add edx, eax ; jmp rdx
0x00000000000210b8 : add edx, eax ; jmp rdx
0x000000000006bc89 : add edx, eax ; jmp rdx
0x000000000006c3ff : add edx, eax ; jmp rdx
0x00000000000c0ef2 : add edx, eax ; jmp rdx
0x00000000000c1062 : add edx, eax ; jmp rdx
0x00000000000c325d : add edx, eax ; jmp rdx
0x00000000000d9c1c : add edx, eax ; jmp rdx
0x00000000000e1fff : add edx, eax ; jmp rdx
0x00000000000f213a : add edx, eax ; jmp rdx
0x00000000000490b2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000e1297 : add edx, ecx ; jmp rdx
0x00000000000f2e61 : add edx, ecx ; jmp rdx
0x00000000000f377f : add edx, ecx ; jmp rdx
0x000000000012d943 : add edx, ecx ; jmp rdx
0x00000000000f65b4 : add edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000188011 : add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000188005 : add edx, esi ; inc eax ; add edx, esi ; jmp rax
0x0000000000188009 : add edx, esi ; jmp rax
0x00000000000c5265 : add edx, esi ; jmp rdx
0x00000000000bb885 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000134025 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a9c49 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001a2dc2 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000001370d4 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000137214 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000137586 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001aff92 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x00000000001aff91 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000012dda2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000002a697 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x000000000009edea : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee69 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004606b : add esi, eax ; jmp qword ptr [rax]
0x000000000010e65b : add esi, eax ; jmp qword ptr [rax]
0x000000000002e8f2 : add esi, eax ; jmp rsi
0x000000000006c306 : add esi, eax ; jmp rsi
0x00000000000aabcc : add esi, eax ; jmp rsi
0x000000000013bde3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001bc485 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000001af519 : add esi, ebp ; call qword ptr [rdi]
0x00000000001a58c1 : add esi, ebp ; call qword ptr [rsi]
0x00000000001a58c0 : add esi, ebp ; call qword ptr [rsi]
0x000000000015b883 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e353 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160e73 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000142fe3 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000f6bec : add esi, ebx ; ret
0x00000000000f6c8c : add esi, ebx ; ret
0x0000000000035f99 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000f5b84 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000f5dfa : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000017088c : add esi, edi ; fadd st(3) ; ret
0x00000000000aacd9 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000033413 : add esi, edi ; jmp rsi
0x0000000000150fb5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000153988 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000156368 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000188055 : add esi, edx ; call qword ptr [rax]
0x000000000018804d : add esi, edx ; call rax
0x0000000000188051 : add esi, edx ; push rax ; add esi, edx ; call qword ptr [rax]
0x00000000000d72bb : add esi, esi ; ret
0x00000000000e5161 : add esi, esi ; ret
0x000000000006e948 : add esi, esi ; ret 0x7420
0x000000000012eb78 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000012ebf8 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013a9d7 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013aa47 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013aaf7 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013ae58 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013aec8 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013b03d : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013b0a7 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013bbe8 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013bc58 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013bcc7 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013bd37 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000014432f : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000088504 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000008851d : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013c3e6 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000013c429 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000003adae : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000480d9 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048279 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006aad1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ab43 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f665 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073751 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085f43 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086a0f : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8333 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc0e4 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc8ec : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcb49 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010198f : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011597a : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000119e16 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e701 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bf9c : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bfba : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bfe1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583e : add esp, 0x10 ; pop rbx ; ret
0x00000000000ba009 : add esp, 0x10 ; pop rbx ; ret
0x00000000000c788a : add esp, 0x10 ; pop rbx ; ret
0x00000000000c78b3 : add esp, 0x10 ; pop rbx ; ret
0x00000000000c7986 : add esp, 0x10 ; pop rbx ; ret
0x00000000000cc047 : add esp, 0x10 ; pop rbx ; ret
0x00000000000da1ca : add esp, 0x10 ; pop rbx ; ret
0x00000000000fc804 : add esp, 0x10 ; pop rbx ; ret
0x000000000012e69b : add esp, 0x10 ; pop rbx ; ret
0x000000000012e6d5 : add esp, 0x10 ; pop rbx ; ret
0x000000000012eb58 : add esp, 0x10 ; pop rbx ; ret
0x000000000012ebd8 : add esp, 0x10 ; pop rbx ; ret
0x0000000000136a26 : add esp, 0x10 ; pop rbx ; ret
0x0000000000136d62 : add esp, 0x10 ; pop rbx ; ret
0x0000000000137492 : add esp, 0x10 ; pop rbx ; ret
0x000000000013a9bb : add esp, 0x10 ; pop rbx ; ret
0x000000000013a9fd : add esp, 0x10 ; pop rbx ; ret
0x000000000013aa2b : add esp, 0x10 ; pop rbx ; ret
0x000000000013aa6c : add esp, 0x10 ; pop rbx ; ret
0x000000000013aadb : add esp, 0x10 ; pop rbx ; ret
0x000000000013ae3b : add esp, 0x10 ; pop rbx ; ret
0x000000000013ae7e : add esp, 0x10 ; pop rbx ; ret
0x000000000013aeab : add esp, 0x10 ; pop rbx ; ret
0x000000000013aeed : add esp, 0x10 ; pop rbx ; ret
0x000000000013b01b : add esp, 0x10 ; pop rbx ; ret
0x000000000013b06b : add esp, 0x10 ; pop rbx ; ret
0x000000000013b08b : add esp, 0x10 ; pop rbx ; ret
0x000000000013b0cd : add esp, 0x10 ; pop rbx ; ret
0x000000000013bbcb : add esp, 0x10 ; pop rbx ; ret
0x000000000013bc0c : add esp, 0x10 ; pop rbx ; ret
0x000000000013bc3b : add esp, 0x10 ; pop rbx ; ret
0x000000000013bc7c : add esp, 0x10 ; pop rbx ; ret
0x000000000013bcab : add esp, 0x10 ; pop rbx ; ret
0x000000000013bcec : add esp, 0x10 ; pop rbx ; ret
0x000000000013bd1b : add esp, 0x10 ; pop rbx ; ret
0x000000000013bd5c : add esp, 0x10 ; pop rbx ; ret
0x000000000014117b : add esp, 0x10 ; pop rbx ; ret
0x00000000001411db : add esp, 0x10 ; pop rbx ; ret
0x000000000014439f : add esp, 0x10 ; pop rbx ; ret
0x0000000000086a77 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ccb3 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e720 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9ff1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000ba011 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000144341 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e73f : add esp, 0x100 ; ret
0x000000000008e83a : add esp, 0x100 ; ret
0x000000000008b33d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000008db3d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000006ad23 : add esp, 0x1000 ; pop rbx ; ret
0x000000000006ad31 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x00000000000359dd : add esp, 0x108 ; ret
0x0000000000035a30 : add esp, 0x108 ; ret
0x00000000000f82ae : add esp, 0x120 ; pop rbx ; ret
0x0000000000035d8b : add esp, 0x140 ; pop rbx ; ret
0x00000000000353ab : add esp, 0x148 ; ret
0x00000000000361b1 : add esp, 0x148 ; ret
0x00000000001201b0 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fd42d : add esp, 0x18 ; mov eax, edx ; ret
0x000000000006b316 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000107720 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013ab86 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ac46 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ad06 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013adc6 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013c35c : add esp, 0x18 ; movzx eax, al ; ret
0x000000000013c39d : add esp, 0x18 ; movzx eax, al ; ret
0x000000000009f44b : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba3b3 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba433 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9896 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9a07 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cb067 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cb1e6 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cba7f : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cbadd : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cc1d9 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc2e8 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fd0bb : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fd16b : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105ccc : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001088e1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000108a37 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b807 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b991 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010d1b7 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011a006 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011b8a6 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011bf77 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000120bd7 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131977 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131af6 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000142968 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012cb02 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000003b175 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000745f7 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074633 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000079aa0 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cae08 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cc274 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001178ed : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012cd95 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013375c : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013380f : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013758a : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137d64 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ab40 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ac00 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013acc0 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad80 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013af24 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013afa3 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b84f : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b90f : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b9cf : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ba8f : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000141f81 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000142c3e : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab50 : add esp, 0x18 ; ret
0x000000000003afef : add esp, 0x18 ; ret
0x000000000003b01c : add esp, 0x18 ; ret
0x000000000003b03e : add esp, 0x18 ; ret
0x000000000003b06b : add esp, 0x18 ; ret
0x000000000003b08e : add esp, 0x18 ; ret
0x000000000003b0bb : add esp, 0x18 ; ret
0x000000000006b2ea : add esp, 0x18 ; ret
0x000000000006de3b : add esp, 0x18 ; ret
0x00000000000886a7 : add esp, 0x18 ; ret
0x00000000000bb88b : add esp, 0x18 ; ret
0x00000000000bf684 : add esp, 0x18 ; ret
0x00000000000c50a7 : add esp, 0x18 ; ret
0x00000000000c7567 : add esp, 0x18 ; ret
0x00000000000c9dd6 : add esp, 0x18 ; ret
0x00000000000cb2e6 : add esp, 0x18 ; ret
0x00000000000e8634 : add esp, 0x18 ; ret
0x00000000000e8651 : add esp, 0x18 ; ret
0x00000000000ea6b4 : add esp, 0x18 ; ret
0x00000000000ea6d4 : add esp, 0x18 ; ret
0x00000000000ea6ef : add esp, 0x18 ; ret
0x00000000000ea711 : add esp, 0x18 ; ret
0x00000000000ea732 : add esp, 0x18 ; ret
0x00000000000ea754 : add esp, 0x18 ; ret
0x00000000000f5f8c : add esp, 0x18 ; ret
0x00000000000f5f9c : add esp, 0x18 ; ret
0x00000000000f6940 : add esp, 0x18 ; ret
0x00000000000f6aed : add esp, 0x18 ; ret
0x00000000000f6b10 : add esp, 0x18 ; ret
0x00000000000f6b92 : add esp, 0x18 ; ret
0x00000000000f6bc4 : add esp, 0x18 ; ret
0x00000000000fc74e : add esp, 0x18 ; ret
0x00000000000fc77a : add esp, 0x18 ; ret
0x00000000000fdd95 : add esp, 0x18 ; ret
0x0000000000101fc6 : add esp, 0x18 ; ret
0x00000000001024cb : add esp, 0x18 ; ret
0x000000000010884f : add esp, 0x18 ; ret
0x000000000010c186 : add esp, 0x18 ; ret
0x000000000010d906 : add esp, 0x18 ; ret
0x000000000011a96c : add esp, 0x18 ; ret
0x000000000011b2fc : add esp, 0x18 ; ret
0x000000000011bc9c : add esp, 0x18 ; ret
0x000000000011cbcc : add esp, 0x18 ; ret
0x000000000011e79f : add esp, 0x18 ; ret
0x000000000011ebad : add esp, 0x18 ; ret
0x000000000011f11c : add esp, 0x18 ; ret
0x0000000000120836 : add esp, 0x18 ; ret
0x0000000000131bfc : add esp, 0x18 ; ret
0x0000000000138ef0 : add esp, 0x18 ; ret
0x0000000000140d24 : add esp, 0x18 ; ret
0x0000000000143eec : add esp, 0x18 ; ret
0x0000000000143efc : add esp, 0x18 ; ret
0x00000000000cc262 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012cd5f : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013af31 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013afb1 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b869 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b929 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b9e9 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013baa9 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f7897 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000004a803 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088bc0 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9625 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb7c6 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb82a : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b323 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc8 : add esp, 0x20 ; pop rbx ; ret
0x000000000007b52f : add esp, 0x20 ; pop rbx ; ret
0x00000000000bf785 : add esp, 0x20 ; pop rbx ; ret
0x00000000000d6ce5 : add esp, 0x20 ; pop rbx ; ret
0x00000000000f7866 : add esp, 0x20 ; pop rbx ; ret
0x0000000000136f55 : add esp, 0x20 ; pop rbx ; ret
0x0000000000137055 : add esp, 0x20 ; pop rbx ; ret
0x0000000000133b69 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7844 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8e : add esp, 0x28 ; jmp rax
0x00000000000206bd : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022685 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000226fe : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033b8b : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007544d : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c71d : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e21e : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008453d : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000845d2 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000845e8 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000850a4 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0366 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0405 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f044c : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013079c : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b497 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b4bf : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b4e0 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044c95 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044d15 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044dc3 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006ac49 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007abaf : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ae5e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007bc64 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007be2e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b62e6 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6394 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6436 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000122218 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001373ad : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad3 : add esp, 0x28 ; ret
0x0000000000034b23 : add esp, 0x28 ; ret
0x0000000000034b35 : add esp, 0x28 ; ret
0x0000000000034e0e : add esp, 0x28 ; ret
0x0000000000034e56 : add esp, 0x28 ; ret
0x0000000000034e64 : add esp, 0x28 ; ret
0x000000000003a782 : add esp, 0x28 ; ret
0x000000000003a852 : add esp, 0x28 ; ret
0x00000000000bc406 : add esp, 0x28 ; ret
0x00000000000bc4e6 : add esp, 0x28 ; ret
0x0000000000118817 : add esp, 0x28 ; ret
0x0000000000118857 : add esp, 0x28 ; ret
0x0000000000119356 : add esp, 0x28 ; ret
0x000000000011eadd : add esp, 0x28 ; ret
0x000000000011eaeb : add esp, 0x28 ; ret
0x000000000011eb60 : add esp, 0x28 ; ret
0x0000000000143d44 : add esp, 0x28 ; ret
0x000000000006ac51 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fc705 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000000fc722 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000121a3a : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e0e : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b88b : add esp, 0x30 ; pop rbx ; ret
0x000000000012f820 : add esp, 0x30 ; pop rbx ; ret
0x0000000000121a69 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e35 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce098 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ce0a8 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001370d8 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000137218 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c96a7 : add esp, 0x38 ; ret
0x00000000000cd314 : add esp, 0x38 ; ret
0x00000000000cd384 : add esp, 0x38 ; ret
0x00000000000cd5e2 : add esp, 0x38 ; ret
0x00000000000cd662 : add esp, 0x38 ; ret
0x00000000000fd1fb : add esp, 0x38 ; ret
0x00000000000fd26b : add esp, 0x38 ; ret
0x00000000000fd2f6 : add esp, 0x38 ; ret
0x00000000000fd3a6 : add esp, 0x38 ; ret
0x000000000010a3a7 : add esp, 0x38 ; ret
0x000000000013a986 : add esp, 0x38 ; ret
0x00000000001437ab : add esp, 0x38 ; ret
0x00000000001437d3 : add esp, 0x38 ; ret
0x00000000001437e4 : add esp, 0x38 ; ret
0x0000000000143dfe : add esp, 0x38 ; ret
0x0000000000143e0b : add esp, 0x38 ; ret
0x0000000000035e0c : add esp, 0x40 ; pop rbx ; ret
0x00000000000bb8cc : add esp, 0x40 ; pop rbx ; ret
0x000000000010a408 : add esp, 0x40 ; ret
0x00000000001338f5 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105168 : add esp, 0x408 ; ret
0x000000000004a67c : add esp, 0x440 ; pop rbx ; ret
0x000000000004a694 : add esp, 0x440 ; pop rbx ; ret
0x00000000000f8962 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000012f707 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000125174 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9f82 : add esp, 0x48 ; ret
0x00000000000cb492 : add esp, 0x48 ; ret
0x00000000000fdd5a : add esp, 0x48 ; ret
0x000000000010c332 : add esp, 0x48 ; ret
0x000000000010dab2 : add esp, 0x48 ; ret
0x000000000011ab27 : add esp, 0x48 ; ret
0x000000000011b4b7 : add esp, 0x48 ; ret
0x000000000011be48 : add esp, 0x48 ; ret
0x000000000011cd78 : add esp, 0x48 ; ret
0x00000000001209e2 : add esp, 0x48 ; ret
0x0000000000131da8 : add esp, 0x48 ; ret
0x0000000000143672 : add esp, 0x48 ; ret
0x000000000014368e : add esp, 0x48 ; ret
0x00000000001436ab : add esp, 0x48 ; ret
0x0000000000143722 : add esp, 0x48 ; ret
0x000000000014373a : add esp, 0x48 ; ret
0x0000000000143754 : add esp, 0x48 ; ret
0x00000000000acb0c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014081b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00000000000fca3f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fca7a : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fcadf : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7137 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f71b0 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f76f0 : add esp, 0x60 ; pop rbx ; ret
0x00000000000f7724 : add esp, 0x60 ; pop rbx ; ret
0x00000000000e8a71 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012c258 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013876c : add esp, 0x68 ; ret
0x00000000001387b2 : add esp, 0x68 ; ret
0x0000000000138802 : add esp, 0x68 ; ret
0x0000000000138852 : add esp, 0x68 ; ret
0x000000000013888b : add esp, 0x68 ; ret
0x00000000001388bf : add esp, 0x68 ; ret
0x0000000000138912 : add esp, 0x68 ; ret
0x000000000013896c : add esp, 0x68 ; ret
0x0000000000136e60 : add esp, 0x70 ; pop rbx ; ret
0x0000000000105d3d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105dad : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000054e4e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000006d871 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000070149 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000711d9 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000071369 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000075bc9 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000075fc9 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000076519 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000076eb9 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000780c9 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000011fc96 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000759a0 : add esp, 0x80 ; mov eax, edx ; ret
0x0000000000075a90 : add esp, 0x80 ; mov eax, edx ; ret
0x000000000006ba61 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000070539 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x00000000000706b9 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x00000000000760f1 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000076239 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x00000000000bad61 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007df30 : add esp, 0x80 ; mov rax, r8 ; ret
0x0000000000045383 : add esp, 0x80 ; pop rbx ; ret
0x000000000007664b : add esp, 0x80 ; pop rbx ; ret
0x00000000000c879b : add esp, 0x80 ; pop rbx ; ret
0x000000000006b4b9 : add esp, 0x80 ; ret
0x000000000006f294 : add esp, 0x80 ; ret
0x00000000000758b7 : add esp, 0x80 ; ret
0x000000000007a9c7 : add esp, 0x80 ; ret
0x000000000007cbf4 : add esp, 0x80 ; ret
0x000000000008400e : add esp, 0x80 ; ret
0x00000000000ffdf0 : add esp, 0x80 ; ret
0x00000000001750ec : add esp, 0x80 ; ret
0x0000000000039edf : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000086523 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000358d3 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000036c5c : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000036cac : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000142829 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b99 : add esp, 0x90 ; pop rbx ; ret
0x0000000000035beb : add esp, 0x90 ; pop rbx ; ret
0x0000000000108b02 : add esp, 0x90 ; pop rbx ; ret
0x00000000001288c4 : add esp, 0x90 ; pop rbx ; ret
0x00000000001289be : add esp, 0x90 ; pop rbx ; ret
0x0000000000036951 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036968 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036ab3 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036ac8 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000007950d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000796c9 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000079787 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c8083 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c81f0 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c89ca : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000fccf0 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209af : add esp, 0x98 ; ret
0x0000000000142ee0 : add esp, 0x98 ; ret
0x0000000000136b64 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000136c0f : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfd : add esp, 0xa8 ; ret
0x00000000000bc606 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00000000000bc669 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x000000000006b62d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x000000000006b937 : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000ba92d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000bac37 : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000c7f3e : add esp, 0xd0 ; pop rbx ; ret
0x00000000000c7fba : add esp, 0xd0 ; pop rbx ; ret
0x000000000003569a : add esp, 0xd0 ; ret
0x00000000000356e2 : add esp, 0xd0 ; ret
0x0000000000104f6e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000104fbc : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf4 : add esp, 0xd8 ; ret
0x0000000000046eae : add esp, 0xd8 ; ret
0x00000000000557f8 : add esp, 0xd8 ; ret
0x000000000005589a : add esp, 0xd8 ; ret
0x0000000000055933 : add esp, 0xd8 ; ret
0x00000000000559c8 : add esp, 0xd8 ; ret
0x0000000000055a58 : add esp, 0xd8 ; ret
0x0000000000055ae8 : add esp, 0xd8 ; ret
0x000000000006a7d8 : add esp, 0xd8 ; ret
0x000000000006a87c : add esp, 0xd8 ; ret
0x000000000006a918 : add esp, 0xd8 ; ret
0x000000000006bb58 : add esp, 0xd8 ; ret
0x00000000000714a8 : add esp, 0xd8 ; ret
0x0000000000071533 : add esp, 0xd8 ; ret
0x00000000000715fa : add esp, 0xd8 ; ret
0x00000000000716ac : add esp, 0xd8 ; ret
0x0000000000071748 : add esp, 0xd8 ; ret
0x00000000000719a8 : add esp, 0xd8 ; ret
0x0000000000076dd8 : add esp, 0xd8 ; ret
0x00000000000bae58 : add esp, 0xd8 ; ret
0x0000000000100be3 : add esp, 0xd8 ; ret
0x00000000001166ae : add esp, 0xd8 ; ret
0x00000000001167f9 : add esp, 0xd8 ; ret
0x0000000000117ce9 : add esp, 0xd8 ; ret
0x00000000001188f3 : add esp, 0xd8 ; ret
0x0000000000118af3 : add esp, 0xd8 ; ret
0x0000000000133063 : add esp, 8 ; add eax, 2 ; ret
0x00000000001391c3 : add esp, 8 ; add eax, 2 ; ret
0x000000000008d85d : add esp, 8 ; jmp rax
0x0000000000123e8d : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x0000000000123fd0 : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00000000000500df : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000050163 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000501b7 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000070338 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007038d : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000749b3 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000133034 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000139194 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021218 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c44 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e3bc : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e408 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006ff5c : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006ffca : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000070f05 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000070f50 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000085370 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000f5b52 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012f348 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012f39e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006d9e1 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006da10 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000baa7e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116ea1 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116ef0 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001183a1 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001183f0 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009ed7d : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a7 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000077d38 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000094e94 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000096c0c : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000096c23 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ff6dd : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db28 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe34 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003a1d0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859bf : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a90c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000013b171 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000001076f6 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f5e7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013043a : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000130492 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001304f8 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001305f7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013a8d9 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013b10d : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b6 : add esp, 8 ; movzx eax, al ; ret
0x00000000000e88d0 : add esp, 8 ; movzx eax, al ; ret
0x00000000000ff807 : add esp, 8 ; movzx eax, al ; ret
0x000000000013035f : add esp, 8 ; movzx eax, al ; ret
0x0000000000130384 : add esp, 8 ; movzx eax, al ; ret
0x00000000001303a4 : add esp, 8 ; movzx eax, al ; ret
0x000000000013c4b3 : add esp, 8 ; movzx eax, al ; ret
0x000000000013c4f3 : add esp, 8 ; movzx eax, al ; ret
0x00000000001275da : add esp, 8 ; movzx eax, ax ; ret
0x000000000012e879 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fc0 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000008429e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000032dc1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003ae43 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003aecb : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a8d7 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054bac : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000055b30 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000734a5 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007a452 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007bbcc : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d02e : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d574 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084e49 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000087790 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f2d2 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aa87a : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aa9c9 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b9e7f : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb66f : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb6f6 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fef92 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ffe8b : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ffebf : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010126b : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001094ff : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ad49 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b5a9 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010bdf5 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011754d : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011866d : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000123365 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b0dc : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001328fe : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000135498 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000138451 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001384a4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000138511 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000174008 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017476c : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021a31 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000021aaa : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002e6a3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a08f : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a61f : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b1e1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b240 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006dde7 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e6bb : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072dbe : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007912d : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079836 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a611 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c795 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c8d3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007df89 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000083090 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000841f0 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085904 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000089083 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d903 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000094e7a : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac2c3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba327 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb6f3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bd08d : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bdb6c : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c8840 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cf4ac : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d71f4 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ef91e : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f44b6 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c28 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c55 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000101e2f : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001023b1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106315 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001072d6 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ec33 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ec88 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ecb8 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ece8 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112d31 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112f45 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115896 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001158b8 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f2f6 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f397 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f92e : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012403e : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001287bf : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b9e8 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d6d8 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e220 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e864 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f664 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001303df : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130471 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130621 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013ddce : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000140ca6 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000174143 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017514c : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001752ec : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079158 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035133 : add esp, 8 ; ret
0x000000000003517b : add esp, 8 ; ret
0x0000000000036e91 : add esp, 8 ; ret
0x000000000003a95a : add esp, 8 ; ret
0x000000000003af6a : add esp, 8 ; ret
0x000000000003b0e8 : add esp, 8 ; ret
0x000000000007d728 : add esp, 8 ; ret
0x00000000000878d7 : add esp, 8 ; ret
0x000000000008d7dd : add esp, 8 ; ret
0x000000000008d811 : add esp, 8 ; ret
0x000000000008d834 : add esp, 8 ; ret
0x00000000000bb7e4 : add esp, 8 ; ret
0x00000000000bb811 : add esp, 8 ; ret
0x00000000000bfe1f : add esp, 8 ; ret
0x00000000000c9768 : add esp, 8 ; ret
0x00000000000c9ea0 : add esp, 8 ; ret
0x00000000000caf38 : add esp, 8 ; ret
0x00000000000cb3b0 : add esp, 8 ; ret
0x00000000000e7ae3 : add esp, 8 ; ret
0x00000000000fdea5 : add esp, 8 ; ret
0x00000000000fdfa2 : add esp, 8 ; ret
0x00000000000fe441 : add esp, 8 ; ret
0x00000000000fe466 : add esp, 8 ; ret
0x00000000000fe654 : add esp, 8 ; ret
0x00000000000ff775 : add esp, 8 ; ret
0x00000000000ff79b : add esp, 8 ; ret
0x00000000000ff7cb : add esp, 8 ; ret
0x00000000000ffa64 : add esp, 8 ; ret
0x00000000000fface : add esp, 8 ; ret
0x00000000000ffaf1 : add esp, 8 ; ret
0x0000000000101488 : add esp, 8 ; ret
0x0000000000101a2e : add esp, 8 ; ret
0x000000000010931b : add esp, 8 ; ret
0x000000000010b6d8 : add esp, 8 ; ret
0x000000000010c250 : add esp, 8 ; ret
0x000000000010cfc0 : add esp, 8 ; ret
0x000000000010d088 : add esp, 8 ; ret
0x000000000010d9d0 : add esp, 8 ; ret
0x0000000000116474 : add esp, 8 ; ret
0x000000000011657a : add esp, 8 ; ret
0x000000000011769f : add esp, 8 ; ret
0x000000000011796a : add esp, 8 ; ret
0x0000000000117b04 : add esp, 8 ; ret
0x0000000000117bbc : add esp, 8 ; ret
0x00000000001191e4 : add esp, 8 ; ret
0x000000000011a8a5 : add esp, 8 ; ret
0x000000000011aa33 : add esp, 8 ; ret
0x000000000011b235 : add esp, 8 ; ret
0x000000000011b3c3 : add esp, 8 ; ret
0x000000000011bbd8 : add esp, 8 ; ret
0x000000000011bd60 : add esp, 8 ; ret
0x000000000011cb08 : add esp, 8 ; ret
0x000000000011cc90 : add esp, 8 ; ret
0x000000000011fe92 : add esp, 8 ; ret
0x0000000000120696 : add esp, 8 ; ret
0x0000000000120900 : add esp, 8 ; ret
0x0000000000120aa8 : add esp, 8 ; ret
0x0000000000124a01 : add esp, 8 ; ret
0x0000000000128359 : add esp, 8 ; ret
0x000000000012affc : add esp, 8 ; ret
0x000000000012c5c0 : add esp, 8 ; ret
0x0000000000131848 : add esp, 8 ; ret
0x0000000000131cc0 : add esp, 8 ; ret
0x00000000001382e6 : add esp, 8 ; ret
0x00000000001382f8 : add esp, 8 ; ret
0x000000000013831a : add esp, 8 ; ret
0x0000000000138328 : add esp, 8 ; ret
0x000000000013834c : add esp, 8 ; ret
0x0000000000138358 : add esp, 8 ; ret
0x000000000013837c : add esp, 8 ; ret
0x0000000000138388 : add esp, 8 ; ret
0x000000000013c46e : add esp, 8 ; ret
0x000000000014085a : add esp, 8 ; ret
0x0000000000140d7d : add esp, 8 ; ret
0x0000000000140f63 : add esp, 8 ; ret
0x0000000000141004 : add esp, 8 ; ret
0x00000000001410a0 : add esp, 8 ; ret
0x0000000000141142 : add esp, 8 ; ret
0x00000000001412b4 : add esp, 8 ; ret
0x0000000000141374 : add esp, 8 ; ret
0x0000000000141624 : add esp, 8 ; ret
0x00000000001429a4 : add esp, 8 ; ret
0x0000000000142f18 : add esp, 8 ; ret
0x0000000000173df3 : add esp, 8 ; ret
0x0000000000174248 : add esp, 8 ; ret
0x0000000000174479 : add esp, 8 ; ret
0x00000000001745d5 : add esp, 8 ; ret
0x0000000000174681 : add esp, 8 ; ret
0x0000000000140661 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000013c454 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d51 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007c902 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008b4a9 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008b501 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000abd31 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000bb71f : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000da2d1 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f5beb : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010ea35 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000112ef7 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000112fca : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011f331 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012cbf6 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d699 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d786 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d7d6 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d856 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e101 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e149 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f606 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013041b : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001304b6 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130551 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001305d0 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130679 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013a941 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b181 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ea92b : add esp, 8 ; xor eax, eax ; ret
0x0000000000143ea2 : add esp, 8 ; xor eax, eax ; ret
0x00000000001b2eac : add esp, dword ptr [rax + 0x200e0a01] ; ret
0x00000000001953d5 : add esp, edi ; call rax
0x0000000000195475 : add esp, edi ; jmp qword ptr [rax]
0x0000000000195474 : add esp, edi ; jmp qword ptr [rax]
0x0000000000195495 : add esp, edi ; jmp rax
0x000000000011cfe7 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x00000000001ae37a : add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001b0a3d : add qword ptr [r8], r8 ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0afd : add qword ptr [r8], r8 ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0ae5 : add qword ptr [r8], r8 ; call 0x221b0062
0x00000000001b0b15 : add qword ptr [r8], r8 ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0acd : add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b0a55 : add qword ptr [r8], r8 ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0935 : add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0b2d : add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000198c15 : add qword ptr [r8], rax ; adc al, 0x6d ; call rsp
0x000000000010de64 : add qword ptr [r9 - 0x7d], r9 ; ret 0x8408
0x0000000000023c9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x00000000001b0a25 : add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b09c5 : add qword ptr [rax], r8 ; cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0775 : add qword ptr [rax], r8 ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0a0d : add qword ptr [rax], r8 ; loopne 0x1b0a86 ; cmc ; jmp qword ptr [rcx]
0x00000000001b078d : add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b09dd : add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0805 : add qword ptr [rax], r8 ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b094d : add qword ptr [rax], r8 ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0965 : add qword ptr [rax], r8 ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0835 : add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b05bd : add qword ptr [rax], rax ; adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000011f20c : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001b055d : add qword ptr [rax], rax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001b0635 : add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b0605 : add qword ptr [rax], rax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b05ed : add qword ptr [rax], rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000082178 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000001b0092 : add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000168acd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009e8cb : add r10, rax ; jmp r10
0x000000000009e994 : add r10, rax ; jmp r10
0x000000000015b962 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e432 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160f52 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b8f2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e3c2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160ee2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b882 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e352 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160e72 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000014a270 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146704 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d823d : add r8b, byte ptr [r8] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x0000000000123de1 : add r8b, byte ptr [r8] ; jne 0x123e37 ; mov eax, r8d ; ret
0x000000000009ea74 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e9e4 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000019b34d : add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x0000000000054f37 : add r8d, dword ptr [r8] ; add cl, bl ; in eax, 0xdf ; loopne 0x54ed2 ; ret 0xe680
0x0000000000143ae0 : add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000150fba : add r9, r11 ; jmp r9
0x000000000015398d : add r9, r11 ; jmp r9
0x000000000015636d : add r9, r11 ; jmp r9
0x0000000000158f4f : add r9, r11 ; jmp r9
0x0000000000158fb1 : add r9, r11 ; jmp r9
0x000000000015ba1f : add r9, r11 ; jmp r9
0x000000000015ba81 : add r9, r11 ; jmp r9
0x000000000015e4fa : add r9, r11 ; jmp r9
0x000000000015e561 : add r9, r11 ; jmp r9
0x0000000000026e73 : add r9b, byte ptr [r8 + 0x39] ; ret
0x00000000001234c5 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1472
0x00000000000ed5b9 : add r9b, r13b ; ret
0x0000000000026e90 : add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000014d422 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000168b53 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000aa999 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000abf40 : add rax, 1 ; ret
0x00000000000abf37 : add rax, 2 ; ret
0x00000000000abf50 : add rax, 3 ; ret
0x0000000000020be8 : add rax, qword ptr [0] ; ret
0x000000000002e0f8 : add rax, qword ptr [0] ; ret
0x000000000002e118 : add rax, qword ptr [0] ; ret
0x000000000002e138 : add rax, qword ptr [0] ; ret
0x00000000001196d8 : add rax, qword ptr [0] ; ret
0x0000000000143d68 : add rax, qword ptr [0] ; ret
0x0000000000033e8f : add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000143df9 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014371d : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000020be7 : add rax, qword ptr fs:[0] ; ret
0x000000000002e0f7 : add rax, qword ptr fs:[0] ; ret
0x000000000002e117 : add rax, qword ptr fs:[0] ; ret
0x000000000002e137 : add rax, qword ptr fs:[0] ; ret
0x00000000001196d7 : add rax, qword ptr fs:[0] ; ret
0x0000000000143d67 : add rax, qword ptr fs:[0] ; ret
0x0000000000085549 : add rax, r13 ; jmp rax
0x000000000002ebbb : add rax, r14 ; jmp rax
0x000000000009f217 : add rax, r8 ; ret
0x000000000009f25a : add rax, r8 ; ret
0x000000000009ea34 : add rax, r9 ; jmp rax
0x00000000001163f6 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059822 : add rax, rcx ; jmp rax
0x000000000005987e : add rax, rcx ; jmp rax
0x00000000000598d5 : add rax, rcx ; jmp rax
0x000000000005996e : add rax, rcx ; jmp rax
0x0000000000059ca9 : add rax, rcx ; jmp rax
0x0000000000059d00 : add rax, rcx ; jmp rax
0x0000000000059fb9 : add rax, rcx ; jmp rax
0x000000000005a006 : add rax, rcx ; jmp rax
0x000000000005a075 : add rax, rcx ; jmp rax
0x000000000005a0c2 : add rax, rcx ; jmp rax
0x000000000005b166 : add rax, rcx ; jmp rax
0x000000000005b2dd : add rax, rcx ; jmp rax
0x000000000005c1f1 : add rax, rcx ; jmp rax
0x00000000000948f1 : add rax, rcx ; jmp rax
0x0000000000094b61 : add rax, rcx ; jmp rax
0x00000000001358aa : add rax, rcx ; jmp rax
0x000000000013c6fd : add rax, rcx ; jmp rax
0x000000000008e8f9 : add rax, rcx ; ret
0x00000000000965b0 : add rax, rcx ; ret
0x00000000000aaec6 : add rax, rcx ; ret
0x000000000009f214 : add rax, rdi ; add rax, r8 ; ret
0x000000000009f257 : add rax, rdi ; add rax, r8 ; ret
0x000000000008e8f6 : add rax, rdi ; add rax, rcx ; ret
0x00000000000965ad : add rax, rdi ; add rax, rcx ; ret
0x00000000000aaec3 : add rax, rdi ; add rax, rcx ; ret
0x00000000000c00b3 : add rax, rdi ; jmp rax
0x000000000004b606 : add rax, rdi ; jmp rax
0x00000000000c00b3 : add rax, rdi ; jmp rax
0x00000000000d3fe5 : add rax, rdi ; jmp rax
0x00000000000dfd77 : add rax, rdi ; jmp rax
0x00000000000e008e : add rax, rdi ; jmp rax
0x000000000008d45a : add rax, rdi ; ret
0x000000000008d6de : add rax, rdi ; ret
0x000000000008eb33 : add rax, rdi ; ret
0x000000000008eb68 : add rax, rdi ; ret
0x0000000000096723 : add rax, rdi ; ret
0x000000000009f029 : add rax, rdi ; ret
0x000000000009f0d3 : add rax, rdi ; ret
0x000000000009f11c : add rax, rdi ; ret
0x000000000009f11b : add rax, rdi ; ret
0x000000000009f1b1 : add rax, rdi ; ret
0x00000000000aaf8f : add rax, rdi ; ret
0x000000000014a786 : add rax, rdi ; ret
0x000000000014a64a : add rax, rdi ; sub rax, r8 ; ret
0x000000000014a89f : add rax, rdi ; sub rax, rdx ; ret
0x000000000002ec99 : add rax, rdx ; jmp rax
0x000000000002ed89 : add rax, rdx ; jmp rax
0x00000000000569fc : add rax, rdx ; jmp rax
0x000000000005bf56 : add rax, rdx ; jmp rax
0x000000000005c14c : add rax, rdx ; jmp rax
0x000000000005c41e : add rax, rdx ; jmp rax
0x0000000000063d2e : add rax, rdx ; jmp rax
0x0000000000063e65 : add rax, rdx ; jmp rax
0x00000000000852ec : add rax, rdx ; jmp rax
0x00000000000c31e1 : add rax, rdx ; jmp rax
0x00000000000cdcdf : add rax, rdx ; jmp rax
0x00000000000ce04f : add rax, rdx ; jmp rax
0x00000000000ce74e : add rax, rdx ; jmp rax
0x00000000000d1be2 : add rax, rdx ; jmp rax
0x00000000000d39b2 : add rax, rdx ; jmp rax
0x00000000000d9b49 : add rax, rdx ; jmp rax
0x00000000000e1c9c : add rax, rdx ; jmp rax
0x00000000000e1c9b : add rax, rdx ; jmp rax
0x00000000000e6284 : add rax, rdx ; jmp rax
0x00000000000f262d : add rax, rdx ; jmp rax
0x00000000000f3802 : add rax, rdx ; jmp rax
0x0000000000134a48 : add rax, rdx ; jmp rax
0x000000000008b8b5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000008ba7a : add rax, rdx ; sub rax, rdi ; ret
0x000000000008bad1 : add rax, rdx ; sub rax, rdi ; ret
0x000000000004da50 : add rax, rsi ; jmp rax
0x000000000004dab1 : add rax, rsi ; jmp rax
0x000000000004db12 : add rax, rsi ; jmp rax
0x000000000004e61d : add rax, rsi ; jmp rax
0x000000000004e6fe : add rax, rsi ; jmp rax
0x000000000004e755 : add rax, rsi ; jmp rax
0x000000000004f9c3 : add rax, rsi ; jmp rax
0x000000000004fa1a : add rax, rsi ; jmp rax
0x000000000004fad1 : add rax, rsi ; jmp rax
0x000000000004fc7b : add rax, rsi ; jmp rax
0x000000000004fcdc : add rax, rsi ; jmp rax
0x000000000004fd70 : add rax, rsi ; jmp rax
0x000000000006c1d6 : add rax, rsi ; jmp rax
0x000000000006c950 : add rax, rsi ; jmp rax
0x00000000000aac5b : add rax, rsi ; jmp rax
0x00000000000c52d6 : add rax, rsi ; jmp rax
0x00000000000d221f : add rax, rsi ; jmp rax
0x00000000001322ea : add rax, rsi ; jmp rax
0x000000000013505a : add rax, rsi ; jmp rax
0x00000000000d043d : add rbx, 1 ; mov rdx, rax ; jmp 0xd03e6
0x000000000013a78d : add rbx, r12 ; call r14
0x00000000000d1922 : add rcx, qword ptr [r8 - 0x7d] ; ret
0x0000000000047c95 : add rcx, r11 ; jmp rcx
0x000000000016e451 : add rcx, r11 ; jmp rcx
0x000000000016e560 : add rcx, r11 ; jmp rcx
0x000000000016e691 : add rcx, r11 ; jmp rcx
0x000000000016e88d : add rcx, r11 ; jmp rcx
0x000000000016e924 : add rcx, r11 ; jmp rcx
0x000000000016e9a2 : add rcx, r11 ; jmp rcx
0x000000000016ea68 : add rcx, r11 ; jmp rcx
0x000000000016eb9a : add rcx, r11 ; jmp rcx
0x000000000016eda5 : add rcx, r11 ; jmp rcx
0x000000000016ee34 : add rcx, r11 ; jmp rcx
0x000000000016eeae : add rcx, r11 ; jmp rcx
0x000000000016fa8f : add rcx, r11 ; jmp rcx
0x000000000016fb90 : add rcx, r11 ; jmp rcx
0x000000000016fcc1 : add rcx, r11 ; jmp rcx
0x000000000016febd : add rcx, r11 ; jmp rcx
0x000000000016ff54 : add rcx, r11 ; jmp rcx
0x000000000016ffd2 : add rcx, r11 ; jmp rcx
0x0000000000170098 : add rcx, r11 ; jmp rcx
0x00000000001701ca : add rcx, r11 ; jmp rcx
0x00000000001703d5 : add rcx, r11 ; jmp rcx
0x0000000000170464 : add rcx, r11 ; jmp rcx
0x00000000001704de : add rcx, r11 ; jmp rcx
0x000000000002be47 : add rcx, r8 ; jmp rcx
0x0000000000063888 : add rcx, rax ; jmp rcx
0x000000000003329b : add rcx, rdi ; jmp rcx
0x0000000000063e49 : add rcx, rdx ; jmp rcx
0x000000000006cbbf : add rcx, rdx ; jmp rcx
0x00000000000aac93 : add rcx, rsi ; jmp rcx
0x0000000000132dcc : add rdi, 0x10 ; jmp rcx
0x0000000000132df3 : add rdi, 0x10 ; jmp rcx
0x0000000000138f4c : add rdi, 0x10 ; jmp rcx
0x0000000000138f73 : add rdi, 0x10 ; jmp rcx
0x000000000013966c : add rdi, 0x10 ; jmp rcx
0x0000000000139693 : add rdi, 0x10 ; jmp rcx
0x000000000012bf5e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012e139 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000135873 : add rdi, 0x58 ; jmp rcx
0x0000000000134fd3 : add rdi, 0x68 ; jmp rcx
0x0000000000132256 : add rdi, 0xc8 ; jmp rcx
0x000000000009e913 : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000d15fa : add rdi, 1 ; test dl, dl ; jne 0xd15ea ; ret
0x000000000009e924 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000009e937 : add rdi, 3 ; mov rax, rdi ; ret
0x0000000000172b6e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e1a7c : add rdi, r11 ; jmp rdi
0x00000000000208f3 : add rdi, rbp ; call rax
0x0000000000150fb7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000015398a : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000015636a : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000123f74 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000006caa1 : add rdi, rsi ; jmp rdi
0x00000000000c325c : add rdx, r8 ; jmp rdx
0x00000000000c325c : add rdx, r8 ; jmp rdx
0x00000000000490b1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000009f117 : add rdx, rax ; jl 0x9f188 ; add rax, rdi ; ret
0x000000000009f116 : add rdx, rax ; jl 0x9f189 ; add rax, rdi ; ret
0x00000000000210b7 : add rdx, rax ; jmp rdx
0x000000000006bc88 : add rdx, rax ; jmp rdx
0x000000000006c3fe : add rdx, rax ; jmp rdx
0x00000000000c0ef1 : add rdx, rax ; jmp rdx
0x00000000000c1061 : add rdx, rax ; jmp rdx
0x00000000000d9c1b : add rdx, rax ; jmp rdx
0x00000000000e1ffe : add rdx, rax ; jmp rdx
0x00000000000f2139 : add rdx, rax ; jmp rdx
0x00000000000210b7 : add rdx, rax ; jmp rdx
0x000000000006bc88 : add rdx, rax ; jmp rdx
0x000000000006c3fe : add rdx, rax ; jmp rdx
0x00000000000c0ef1 : add rdx, rax ; jmp rdx
0x00000000000c1061 : add rdx, rax ; jmp rdx
0x00000000000d9c1b : add rdx, rax ; jmp rdx
0x00000000000e1ffe : add rdx, rax ; jmp rdx
0x00000000000f2139 : add rdx, rax ; jmp rdx
0x00000000000e1296 : add rdx, rcx ; jmp rdx
0x00000000000f2e60 : add rdx, rcx ; jmp rdx
0x00000000000f377e : add rdx, rcx ; jmp rdx
0x000000000012d942 : add rdx, rcx ; jmp rdx
0x00000000000c5264 : add rdx, rsi ; jmp rdx
0x0000000000134024 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002e8f1 : add rsi, rax ; jmp rsi
0x000000000006c305 : add rsi, rax ; jmp rsi
0x00000000000aabcb : add rsi, rax ; jmp rsi
0x000000000013bde2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000033412 : add rsi, rdi ; jmp rsi
0x0000000000088503 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000008851c : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013c3e5 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000013c428 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006f8c5 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006f8c4 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000003adad : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000480d8 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048278 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006aad0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ab42 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f664 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073750 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085f42 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086a0e : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8332 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc0e3 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc8eb : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcb48 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010198e : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115979 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000119e15 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e700 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bf9b : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bfb9 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bfe0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583d : add rsp, 0x10 ; pop rbx ; ret
0x00000000000ba008 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000c7889 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000c78b2 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000c7985 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000cc046 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000da1c9 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc803 : add rsp, 0x10 ; pop rbx ; ret
0x000000000012e69a : add rsp, 0x10 ; pop rbx ; ret
0x000000000012e6d4 : add rsp, 0x10 ; pop rbx ; ret
0x000000000012eb57 : add rsp, 0x10 ; pop rbx ; ret
0x000000000012ebd7 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000136a25 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000136d61 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000137491 : add rsp, 0x10 ; pop rbx ; ret
0x000000000013a9ba : add rsp, 0x10 ; pop rbx ; ret
0x000000000013a9fc : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aa2a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aa6b : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aada : add rsp, 0x10 ; pop rbx ; ret
0x000000000013ae3a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013ae7d : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aeaa : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aeec : add rsp, 0x10 ; pop rbx ; ret
0x000000000013b01a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013b06a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013b08a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013b0cc : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bbca : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc0b : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc0a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc3a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc7b : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc7a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bcaa : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bceb : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bcea : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd1a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd5b : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd5a : add rsp, 0x10 ; pop rbx ; ret
0x000000000014117a : add rsp, 0x10 ; pop rbx ; ret
0x00000000001411da : add rsp, 0x10 ; pop rbx ; ret
0x000000000014439e : add rsp, 0x10 ; pop rbx ; ret
0x00000000000b9ff0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000ba010 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000144340 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e73e : add rsp, 0x100 ; ret
0x000000000008e839 : add rsp, 0x100 ; ret
0x000000000006ad22 : add rsp, 0x1000 ; pop rbx ; ret
0x00000000000359dc : add rsp, 0x108 ; ret
0x0000000000035a2f : add rsp, 0x108 ; ret
0x00000000000f82ad : add rsp, 0x120 ; pop rbx ; ret
0x0000000000035d8a : add rsp, 0x140 ; pop rbx ; ret
0x00000000000353aa : add rsp, 0x148 ; ret
0x00000000000361b0 : add rsp, 0x148 ; ret
0x00000000001201af : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fd42c : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000006b315 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000010771f : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013ab85 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ac45 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ad05 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013adc5 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013c35b : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000013c39c : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003b174 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000745f6 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074632 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000079a9f : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cae07 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cc273 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001178ec : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012cd94 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013375b : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013380e : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137589 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137d63 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ab3f : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abff : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013acbf : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad7f : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013af23 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013afa2 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b84e : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b90e : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b9ce : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ba8e : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000141f80 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000142c3d : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4f : add rsp, 0x18 ; ret
0x000000000003afee : add rsp, 0x18 ; ret
0x000000000003b01b : add rsp, 0x18 ; ret
0x000000000003b03d : add rsp, 0x18 ; ret
0x000000000003b06a : add rsp, 0x18 ; ret
0x000000000003b08d : add rsp, 0x18 ; ret
0x000000000003b0ba : add rsp, 0x18 ; ret
0x000000000006b2e9 : add rsp, 0x18 ; ret
0x000000000006de3a : add rsp, 0x18 ; ret
0x00000000000886a6 : add rsp, 0x18 ; ret
0x00000000000bb88a : add rsp, 0x18 ; ret
0x00000000000bf683 : add rsp, 0x18 ; ret
0x00000000000c50a6 : add rsp, 0x18 ; ret
0x00000000000c7566 : add rsp, 0x18 ; ret
0x00000000000c9dd5 : add rsp, 0x18 ; ret
0x00000000000cb2e5 : add rsp, 0x18 ; ret
0x00000000000e8633 : add rsp, 0x18 ; ret
0x00000000000e8650 : add rsp, 0x18 ; ret
0x00000000000ea6b3 : add rsp, 0x18 ; ret
0x00000000000ea6d3 : add rsp, 0x18 ; ret
0x00000000000ea6ee : add rsp, 0x18 ; ret
0x00000000000ea710 : add rsp, 0x18 ; ret
0x00000000000ea731 : add rsp, 0x18 ; ret
0x00000000000ea753 : add rsp, 0x18 ; ret
0x00000000000f5f8b : add rsp, 0x18 ; ret
0x00000000000f5f9b : add rsp, 0x18 ; ret
0x00000000000f693f : add rsp, 0x18 ; ret
0x00000000000f6aec : add rsp, 0x18 ; ret
0x00000000000f6b0f : add rsp, 0x18 ; ret
0x00000000000f6b91 : add rsp, 0x18 ; ret
0x00000000000f6bc3 : add rsp, 0x18 ; ret
0x00000000000fc74d : add rsp, 0x18 ; ret
0x00000000000fc779 : add rsp, 0x18 ; ret
0x00000000000fdd94 : add rsp, 0x18 ; ret
0x0000000000101fc5 : add rsp, 0x18 ; ret
0x00000000001024ca : add rsp, 0x18 ; ret
0x000000000010884e : add rsp, 0x18 ; ret
0x000000000010c185 : add rsp, 0x18 ; ret
0x000000000010d905 : add rsp, 0x18 ; ret
0x000000000011a96b : add rsp, 0x18 ; ret
0x000000000011b2fb : add rsp, 0x18 ; ret
0x000000000011bc9b : add rsp, 0x18 ; ret
0x000000000011cbcb : add rsp, 0x18 ; ret
0x000000000011e79e : add rsp, 0x18 ; ret
0x000000000011ebac : add rsp, 0x18 ; ret
0x000000000011f11b : add rsp, 0x18 ; ret
0x0000000000120835 : add rsp, 0x18 ; ret
0x0000000000131bfb : add rsp, 0x18 ; ret
0x0000000000138eef : add rsp, 0x18 ; ret
0x0000000000140d23 : add rsp, 0x18 ; ret
0x0000000000143eeb : add rsp, 0x18 ; ret
0x0000000000143efb : add rsp, 0x18 ; ret
0x00000000000cc261 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012cd5e : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013af30 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013afb0 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b868 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b928 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b9e8 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013baa8 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004a802 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088bbf : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9624 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb7c5 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb829 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b322 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc7 : add rsp, 0x20 ; pop rbx ; ret
0x000000000007b52e : add rsp, 0x20 ; pop rbx ; ret
0x00000000000bf784 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000d6ce4 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f7865 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000136f54 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000137054 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f7843 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8d : add rsp, 0x28 ; jmp rax
0x0000000000044c94 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044d14 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044dc2 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006ac48 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007abae : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ae5d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007bc63 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007be2d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b62e5 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6393 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6435 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000122217 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001373ac : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad2 : add rsp, 0x28 ; ret
0x0000000000034b22 : add rsp, 0x28 ; ret
0x0000000000034b34 : add rsp, 0x28 ; ret
0x0000000000034e0d : add rsp, 0x28 ; ret
0x0000000000034e55 : add rsp, 0x28 ; ret
0x0000000000034e63 : add rsp, 0x28 ; ret
0x000000000003a781 : add rsp, 0x28 ; ret
0x000000000003a851 : add rsp, 0x28 ; ret
0x00000000000bc405 : add rsp, 0x28 ; ret
0x00000000000bc4e5 : add rsp, 0x28 ; ret
0x0000000000118816 : add rsp, 0x28 ; ret
0x0000000000118856 : add rsp, 0x28 ; ret
0x0000000000119355 : add rsp, 0x28 ; ret
0x000000000011eadc : add rsp, 0x28 ; ret
0x000000000011eaea : add rsp, 0x28 ; ret
0x000000000011eb5f : add rsp, 0x28 ; ret
0x0000000000143d43 : add rsp, 0x28 ; ret
0x000000000006ac50 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fc704 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000000fc721 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000121a39 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e0d : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b88a : add rsp, 0x30 ; pop rbx ; ret
0x000000000012f81f : add rsp, 0x30 ; pop rbx ; ret
0x00000000000ce097 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ce0a7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001370d7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000137217 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c96a6 : add rsp, 0x38 ; ret
0x00000000000cd313 : add rsp, 0x38 ; ret
0x00000000000cd383 : add rsp, 0x38 ; ret
0x00000000000cd5e1 : add rsp, 0x38 ; ret
0x00000000000cd661 : add rsp, 0x38 ; ret
0x00000000000fd1fa : add rsp, 0x38 ; ret
0x00000000000fd26a : add rsp, 0x38 ; ret
0x00000000000fd2f5 : add rsp, 0x38 ; ret
0x00000000000fd3a5 : add rsp, 0x38 ; ret
0x000000000010a3a6 : add rsp, 0x38 ; ret
0x000000000013a985 : add rsp, 0x38 ; ret
0x00000000001437aa : add rsp, 0x38 ; ret
0x00000000001437d2 : add rsp, 0x38 ; ret
0x00000000001437e3 : add rsp, 0x38 ; ret
0x0000000000143dfd : add rsp, 0x38 ; ret
0x0000000000143e0a : add rsp, 0x38 ; ret
0x0000000000035e0b : add rsp, 0x40 ; pop rbx ; ret
0x00000000000bb8cb : add rsp, 0x40 ; pop rbx ; ret
0x000000000010a407 : add rsp, 0x40 ; ret
0x0000000000105167 : add rsp, 0x408 ; ret
0x000000000004a67b : add rsp, 0x440 ; pop rbx ; ret
0x000000000004a693 : add rsp, 0x440 ; pop rbx ; ret
0x00000000000f8961 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000125173 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9f81 : add rsp, 0x48 ; ret
0x00000000000cb491 : add rsp, 0x48 ; ret
0x00000000000fdd59 : add rsp, 0x48 ; ret
0x000000000010c331 : add rsp, 0x48 ; ret
0x000000000010dab1 : add rsp, 0x48 ; ret
0x000000000011ab26 : add rsp, 0x48 ; ret
0x000000000011b4b6 : add rsp, 0x48 ; ret
0x000000000011be47 : add rsp, 0x48 ; ret
0x000000000011cd77 : add rsp, 0x48 ; ret
0x00000000001209e1 : add rsp, 0x48 ; ret
0x0000000000131da7 : add rsp, 0x48 ; ret
0x0000000000143671 : add rsp, 0x48 ; ret
0x000000000014368d : add rsp, 0x48 ; ret
0x00000000001436aa : add rsp, 0x48 ; ret
0x0000000000143721 : add rsp, 0x48 ; ret
0x0000000000143739 : add rsp, 0x48 ; ret
0x0000000000143753 : add rsp, 0x48 ; ret
0x00000000000acb0b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fca3e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fca79 : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fcade : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7136 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f71af : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f76ef : add rsp, 0x60 ; pop rbx ; ret
0x00000000000f76ee : add rsp, 0x60 ; pop rbx ; ret
0x00000000000f7723 : add rsp, 0x60 ; pop rbx ; ret
0x000000000013876b : add rsp, 0x68 ; ret
0x00000000001387b1 : add rsp, 0x68 ; ret
0x0000000000138801 : add rsp, 0x68 ; ret
0x0000000000138851 : add rsp, 0x68 ; ret
0x000000000013888a : add rsp, 0x68 ; ret
0x00000000001388be : add rsp, 0x68 ; ret
0x0000000000138911 : add rsp, 0x68 ; ret
0x000000000013896b : add rsp, 0x68 ; ret
0x0000000000136e5f : add rsp, 0x70 ; pop rbx ; ret
0x0000000000105d3c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105dac : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000007599f : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000075a8f : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000045382 : add rsp, 0x80 ; pop rbx ; ret
0x000000000007664a : add rsp, 0x80 ; pop rbx ; ret
0x00000000000c879a : add rsp, 0x80 ; pop rbx ; ret
0x000000000006b4b8 : add rsp, 0x80 ; ret
0x000000000006f293 : add rsp, 0x80 ; ret
0x00000000000758b6 : add rsp, 0x80 ; ret
0x000000000007a9c6 : add rsp, 0x80 ; ret
0x000000000007cbf3 : add rsp, 0x80 ; ret
0x000000000008400d : add rsp, 0x80 ; ret
0x00000000000ffdef : add rsp, 0x80 ; ret
0x00000000001750eb : add rsp, 0x80 ; ret
0x00000000000358d2 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000036c5b : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000036cab : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000142828 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b98 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000035bea : add rsp, 0x90 ; pop rbx ; ret
0x0000000000108b01 : add rsp, 0x90 ; pop rbx ; ret
0x00000000001288c3 : add rsp, 0x90 ; pop rbx ; ret
0x00000000001289bd : add rsp, 0x90 ; pop rbx ; ret
0x0000000000036950 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036967 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036ab2 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036ac7 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000007950c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000796c8 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000079786 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c8082 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c81ef : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c89c9 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000fccef : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209ae : add rsp, 0x98 ; ret
0x0000000000142edf : add rsp, 0x98 ; ret
0x0000000000136b63 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000136c0e : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfc : add rsp, 0xa8 ; ret
0x00000000000c7f3d : add rsp, 0xd0 ; pop rbx ; ret
0x00000000000c7fb9 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000035699 : add rsp, 0xd0 ; ret
0x00000000000356e1 : add rsp, 0xd0 ; ret
0x0000000000104f6d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000104fbb : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf3 : add rsp, 0xd8 ; ret
0x0000000000046ead : add rsp, 0xd8 ; ret
0x00000000000557f7 : add rsp, 0xd8 ; ret
0x0000000000055899 : add rsp, 0xd8 ; ret
0x0000000000055932 : add rsp, 0xd8 ; ret
0x00000000000559c7 : add rsp, 0xd8 ; ret
0x0000000000055a57 : add rsp, 0xd8 ; ret
0x0000000000055ae7 : add rsp, 0xd8 ; ret
0x000000000006a7d7 : add rsp, 0xd8 ; ret
0x000000000006a87b : add rsp, 0xd8 ; ret
0x000000000006a917 : add rsp, 0xd8 ; ret
0x000000000006bb57 : add rsp, 0xd8 ; ret
0x00000000000714a7 : add rsp, 0xd8 ; ret
0x0000000000071532 : add rsp, 0xd8 ; ret
0x00000000000715f9 : add rsp, 0xd8 ; ret
0x00000000000716ab : add rsp, 0xd8 ; ret
0x0000000000071747 : add rsp, 0xd8 ; ret
0x00000000000719a7 : add rsp, 0xd8 ; ret
0x0000000000076dd7 : add rsp, 0xd8 ; ret
0x00000000000bae57 : add rsp, 0xd8 ; ret
0x0000000000100be2 : add rsp, 0xd8 ; ret
0x00000000001166ad : add rsp, 0xd8 ; ret
0x00000000001167f8 : add rsp, 0xd8 ; ret
0x0000000000117ce8 : add rsp, 0xd8 ; ret
0x00000000001188f2 : add rsp, 0xd8 ; ret
0x0000000000118af2 : add rsp, 0xd8 ; ret
0x0000000000133062 : add rsp, 8 ; add eax, 2 ; ret
0x00000000001391c2 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008d85c : add rsp, 8 ; jmp rax
0x00000000000500de : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000050162 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000501b6 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000070337 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007038c : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000749b2 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000133033 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000139193 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021217 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c43 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e3bb : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e407 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006ff5b : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006ffc9 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000070f04 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000070f4f : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008536f : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000f5b51 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012f347 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012f39d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006d9e0 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006da0f : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000baa7d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116ea0 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116eef : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001183a0 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001183ef : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009ed7c : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000077d37 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000094e93 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000096c0b : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000096c22 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ff6dc : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db27 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe33 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003a1cf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859be : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a90b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000013b170 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000001076f5 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f5e6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000130439 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000130491 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001304f7 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001305f6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013a8d8 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013b10c : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b5 : add rsp, 8 ; movzx eax, al ; ret
0x00000000000e88cf : add rsp, 8 ; movzx eax, al ; ret
0x00000000000ff806 : add rsp, 8 ; movzx eax, al ; ret
0x000000000013035e : add rsp, 8 ; movzx eax, al ; ret
0x0000000000130383 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001303a3 : add rsp, 8 ; movzx eax, al ; ret
0x000000000013c4b2 : add rsp, 8 ; movzx eax, al ; ret
0x000000000013c4f2 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001275d9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000012e878 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fbf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000008429d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000021a30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000021aa9 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002e6a2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a08e : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a61e : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b1e0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b23f : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006dde6 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e6ba : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072dbd : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007912c : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079835 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a610 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c794 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c8d2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007df88 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008308f : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000841ef : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085903 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000089082 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d902 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000094e79 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac2c2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba326 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb6f2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bd08c : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bdb6b : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c883f : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cf4ab : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d71f3 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d71f2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d71f1 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ef91d : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f44b5 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c27 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c54 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000101e2e : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001023b0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106314 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001072d5 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ec32 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ec87 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ecb7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ece7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112d30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112f44 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115895 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001158b7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f2f5 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f396 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f92d : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012403d : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001287be : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b9e7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d6d7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e21f : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e863 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f663 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001303de : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130470 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130620 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013ddcd : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000140ca5 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000174142 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017514b : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001752eb : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079157 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035132 : add rsp, 8 ; ret
0x000000000003517a : add rsp, 8 ; ret
0x0000000000036e90 : add rsp, 8 ; ret
0x000000000003a959 : add rsp, 8 ; ret
0x000000000003af69 : add rsp, 8 ; ret
0x000000000003b0e7 : add rsp, 8 ; ret
0x000000000007d727 : add rsp, 8 ; ret
0x00000000000878d6 : add rsp, 8 ; ret
0x000000000008d7dc : add rsp, 8 ; ret
0x000000000008d810 : add rsp, 8 ; ret
0x000000000008d833 : add rsp, 8 ; ret
0x00000000000bb7e3 : add rsp, 8 ; ret
0x00000000000bb810 : add rsp, 8 ; ret
0x00000000000bfe1e : add rsp, 8 ; ret
0x00000000000c9767 : add rsp, 8 ; ret
0x00000000000c9e9f : add rsp, 8 ; ret
0x00000000000caf37 : add rsp, 8 ; ret
0x00000000000cb3af : add rsp, 8 ; ret
0x00000000000e7ae2 : add rsp, 8 ; ret
0x00000000000fdea4 : add rsp, 8 ; ret
0x00000000000fdfa1 : add rsp, 8 ; ret
0x00000000000fe440 : add rsp, 8 ; ret
0x00000000000fe465 : add rsp, 8 ; ret
0x00000000000fe653 : add rsp, 8 ; ret
0x00000000000ff774 : add rsp, 8 ; ret
0x00000000000ff79a : add rsp, 8 ; ret
0x00000000000ff7ca : add rsp, 8 ; ret
0x00000000000ffa63 : add rsp, 8 ; ret
0x00000000000ffacd : add rsp, 8 ; ret
0x00000000000ffaf0 : add rsp, 8 ; ret
0x0000000000101487 : add rsp, 8 ; ret
0x0000000000101a2d : add rsp, 8 ; ret
0x000000000010931a : add rsp, 8 ; ret
0x000000000010b6d7 : add rsp, 8 ; ret
0x000000000010c24f : add rsp, 8 ; ret
0x000000000010cfbf : add rsp, 8 ; ret
0x000000000010d087 : add rsp, 8 ; ret
0x000000000010d9cf : add rsp, 8 ; ret
0x0000000000116473 : add rsp, 8 ; ret
0x0000000000116579 : add rsp, 8 ; ret
0x000000000011769e : add rsp, 8 ; ret
0x0000000000117969 : add rsp, 8 ; ret
0x0000000000117b03 : add rsp, 8 ; ret
0x0000000000117bbb : add rsp, 8 ; ret
0x00000000001191e3 : add rsp, 8 ; ret
0x000000000011a8a4 : add rsp, 8 ; ret
0x000000000011aa32 : add rsp, 8 ; ret
0x000000000011b234 : add rsp, 8 ; ret
0x000000000011b3c2 : add rsp, 8 ; ret
0x000000000011bbd7 : add rsp, 8 ; ret
0x000000000011bd5f : add rsp, 8 ; ret
0x000000000011cb07 : add rsp, 8 ; ret
0x000000000011cc8f : add rsp, 8 ; ret
0x000000000011fe91 : add rsp, 8 ; ret
0x0000000000120695 : add rsp, 8 ; ret
0x00000000001208ff : add rsp, 8 ; ret
0x0000000000120aa7 : add rsp, 8 ; ret
0x0000000000124a00 : add rsp, 8 ; ret
0x0000000000128358 : add rsp, 8 ; ret
0x000000000012affb : add rsp, 8 ; ret
0x000000000012c5bf : add rsp, 8 ; ret
0x0000000000131847 : add rsp, 8 ; ret
0x0000000000131cbf : add rsp, 8 ; ret
0x00000000001382e5 : add rsp, 8 ; ret
0x00000000001382f7 : add rsp, 8 ; ret
0x0000000000138319 : add rsp, 8 ; ret
0x0000000000138327 : add rsp, 8 ; ret
0x000000000013834b : add rsp, 8 ; ret
0x0000000000138357 : add rsp, 8 ; ret
0x000000000013837b : add rsp, 8 ; ret
0x0000000000138387 : add rsp, 8 ; ret
0x000000000013c46d : add rsp, 8 ; ret
0x0000000000140859 : add rsp, 8 ; ret
0x0000000000140d7c : add rsp, 8 ; ret
0x0000000000140f62 : add rsp, 8 ; ret
0x0000000000141003 : add rsp, 8 ; ret
0x000000000014109f : add rsp, 8 ; ret
0x0000000000141141 : add rsp, 8 ; ret
0x00000000001412b3 : add rsp, 8 ; ret
0x0000000000141373 : add rsp, 8 ; ret
0x0000000000141623 : add rsp, 8 ; ret
0x00000000001429a3 : add rsp, 8 ; ret
0x0000000000142f17 : add rsp, 8 ; ret
0x0000000000173df2 : add rsp, 8 ; ret
0x0000000000174247 : add rsp, 8 ; ret
0x0000000000174478 : add rsp, 8 ; ret
0x00000000001745d4 : add rsp, 8 ; ret
0x0000000000174680 : add rsp, 8 ; ret
0x0000000000140660 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000013c453 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d50 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007c901 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008b4a8 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008b500 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000abd30 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000bb71e : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000da2d0 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f5bea : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010ea34 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000112ef6 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000112fc9 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011f330 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012cbf5 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d698 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d785 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d7d5 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d855 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e100 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e148 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f605 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013041a : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001304b5 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130550 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001305cf : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130678 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013a940 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b180 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ea92a : add rsp, 8 ; xor eax, eax ; ret
0x0000000000143ea1 : add rsp, 8 ; xor eax, eax ; ret
0x000000000009449e : add sil, sil ; ret 0x7404
0x00000000001099d3 : add word ptr [rax], 1 ; ret
0x0000000000198f85 : add word ptr [rax], ax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x000000000010971a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000001a5eb0 : and ah, 0xfc ; call qword ptr [rdx]
0x0000000000186e24 : and ah, al ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000195741 : and ah, bh ; call rax
0x000000000019531c : and ah, bl ; sti ; call qword ptr [rax]
0x0000000000198dc1 : and ah, dh ; call rsp
0x000000000019df6d : and al, 0 ; add al, ah ; jo 0x19df62 ; call qword ptr [rcx]
0x00000000000a32d1 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000096ce1 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000019e00d : and al, 0 ; add byte ptr [rax], al ; jb 0x19e002 ; jmp qword ptr [rsi]
0x0000000000096c72 : and al, 0 ; je 0x96c89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f771d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f2700 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000136efb : and al, 0x10 ; call qword ptr [r10]
0x0000000000136efa : and al, 0x10 ; call qword ptr [r10]
0x0000000000136ffb : and al, 0x10 ; call qword ptr [r10]
0x0000000000136ffa : and al, 0x10 ; call qword ptr [r10]
0x0000000000137156 : and al, 0x10 ; call qword ptr [r10]
0x0000000000137155 : and al, 0x10 ; call qword ptr [r10]
0x0000000000137296 : and al, 0x10 ; call qword ptr [r10]
0x0000000000137295 : and al, 0x10 ; call qword ptr [r10]
0x0000000000137530 : and al, 0x10 ; call qword ptr [r10]
0x000000000013752f : and al, 0x10 ; call qword ptr [r10]
0x00000000000c8b10 : and al, 0x10 ; call rax
0x00000000000c8b0f : and al, 0x10 ; call rax
0x00000000000c92b6 : and al, 0x10 ; call rax
0x00000000000c92b5 : and al, 0x10 ; call rax
0x00000000001430e0 : and al, 0x10 ; call rax
0x00000000001430df : and al, 0x10 ; call rax
0x0000000000135bbf : and al, 0x10 ; call rcx
0x0000000000135bbe : and al, 0x10 ; call rcx
0x0000000000081a6a : and al, 0x10 ; call rdi
0x0000000000081a69 : and al, 0x10 ; call rdi
0x0000000000034f37 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x0000000000034f36 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x000000000010eee2 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00000000000f35bc : and al, 0x10 ; mov qword ptr [rsp + 8], r13 ; call 0x1f8b1
0x0000000000102e31 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000074fe6 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000074fe5 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000751a5 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000751a4 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012c02a : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000010edde : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000081953 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000081952 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000026a19 : and al, 0x14 ; jmp 0x26830
0x0000000000026a18 : and al, 0x14 ; jmp 0x26831
0x000000000007ef09 : and al, 0x14 ; pop r12 ; ret
0x000000000007ef08 : and al, 0x14 ; pop r12 ; ret
0x000000000004305c : and al, 0x18 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000004305b : and al, 0x18 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000046dba : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x000000000008429b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000014369b : and al, 0x18 ; call 0x1f8ac
0x000000000003dfe4 : and al, 0x18 ; call 0x3c0a8
0x000000000012caca : and al, 0x18 ; call qword ptr [rax]
0x000000000012cac9 : and al, 0x18 ; call qword ptr [rax]
0x000000000012cb86 : and al, 0x18 ; call qword ptr [rax]
0x000000000012cb85 : and al, 0x18 ; call qword ptr [rax]
0x000000000013b23f : and al, 0x18 ; call qword ptr [rax]
0x000000000013b37f : and al, 0x18 ; call qword ptr [rax]
0x000000000013b4b4 : and al, 0x18 ; call qword ptr [rax]
0x0000000000024073 : and al, 0x18 ; call r12
0x0000000000024a43 : and al, 0x18 ; call r12
0x000000000002082c : and al, 0x18 ; call rax
0x000000000002082b : and al, 0x18 ; call rax
0x0000000000025f36 : and al, 0x18 ; call rax
0x0000000000025f35 : and al, 0x18 ; call rax
0x0000000000102e36 : and al, 0x18 ; call rax
0x0000000000102e35 : and al, 0x18 ; call rax
0x0000000000132787 : and al, 0x18 ; call rcx
0x0000000000132786 : and al, 0x18 ; call rcx
0x0000000000135427 : and al, 0x18 ; call rcx
0x0000000000135426 : and al, 0x18 ; call rcx
0x000000000012c7f9 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000137e60 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000137e5f : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009e8fd : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009e8fc : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000081a65 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000081a64 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000021858 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000000c92b1 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000ad667 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000038381 : and al, 0x18 ; mov rdi, r12 ; call r15
0x00000000000750c2 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000000750c1 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000000ad917 : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000ad3af : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000f0039 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0077
0x00000000000f0038 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0078
0x000000000019d45c : and al, 0x19 ; add byte ptr [rax], al ; push rax ; or ebp, ecx ; call qword ptr [rbx]
0x0000000000136d0c : and al, 0x1c ; call qword ptr [r10]
0x0000000000136d0b : and al, 0x1c ; call qword ptr [r10]
0x000000000013743c : and al, 0x1c ; call qword ptr [r10]
0x000000000013743b : and al, 0x1c ; call qword ptr [r10]
0x000000000012c9d8 : and al, 0x1c ; call qword ptr [rax]
0x000000000012c9d7 : and al, 0x1c ; call qword ptr [rax]
0x00000000001437a5 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00000000000e5cb7 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000e3636 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f3610 : and al, 0x20 ; call 0x1f8ac
0x0000000000081631 : and al, 0x20 ; call qword ptr [rax]
0x0000000000028abc : and al, 0x20 ; call r14
0x0000000000023e53 : and al, 0x20 ; call r15
0x0000000000023ef6 : and al, 0x20 ; call r15
0x0000000000037320 : and al, 0x20 ; call r15
0x00000000000819ad : and al, 0x20 ; call rax
0x00000000000ad07b : and al, 0x20 ; call rbx
0x00000000000ad07a : and al, 0x20 ; call rbx
0x00000000000ad124 : and al, 0x20 ; call rbx
0x00000000000ad123 : and al, 0x20 ; call rbx
0x000000000013258f : and al, 0x20 ; call rcx
0x000000000013258e : and al, 0x20 ; call rcx
0x000000000013525e : and al, 0x20 ; call rcx
0x000000000013525d : and al, 0x20 ; call rcx
0x00000000000accdb : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000accda : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000012bfaa : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x138239
0x0000000000025110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfe : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002406e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x0000000000024a3e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000ba6ef : and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x0000000000174322 : and al, 0x25 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000183f64 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000003ce68 : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000003ce67 : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012bfaf : and al, 0x28 ; call 0x138234
0x000000000012bfae : and al, 0x28 ; call 0x138235
0x00000000000335db : and al, 0x28 ; call 0x1f8a4
0x0000000000033634 : and al, 0x28 ; call 0x1f8a4
0x0000000000033678 : and al, 0x28 ; call 0x1f8a4
0x00000000000335da : and al, 0x28 ; call 0x1f8a5
0x0000000000033633 : and al, 0x28 ; call 0x1f8a5
0x0000000000033677 : and al, 0x28 ; call 0x1f8a5
0x0000000000100eec : and al, 0x28 ; call 0xcd1f4
0x0000000000100eeb : and al, 0x28 ; call 0xcd1f5
0x000000000002436c : and al, 0x28 ; call rax
0x000000000002436b : and al, 0x28 ; call rax
0x00000000000acbb0 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000acbaf : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000819a8 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000000819a7 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000028ab7 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e4e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000023ef1 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000084fb3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000001380a4 : and al, 0x2a ; call qword ptr [rax]
0x00000000001380a3 : and al, 0x2a ; call qword ptr [rax]
0x000000000012c7fe : and al, 0x2c ; call qword ptr [rax]
0x000000000012c7fd : and al, 0x2c ; call qword ptr [rax]
0x000000000004015f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000004015e : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012cf6d : and al, 0x30 ; call qword ptr [rax]
0x000000000012cf6c : and al, 0x30 ; call qword ptr [rax]
0x0000000000024807 : and al, 0x30 ; call r12
0x0000000000025592 : and al, 0x30 ; call r14
0x0000000000025352 : and al, 0x30 ; call r15
0x0000000000024d07 : and al, 0x30 ; call rax
0x0000000000024d06 : and al, 0x30 ; call rax
0x0000000000025115 : and al, 0x30 ; call rax
0x0000000000025114 : and al, 0x30 ; call rax
0x0000000000026caf : and al, 0x30 ; call rax
0x0000000000026cae : and al, 0x30 ; call rax
0x0000000000027c03 : and al, 0x30 ; call rax
0x0000000000027c02 : and al, 0x30 ; call rax
0x00000000000248bb : and al, 0x30 ; call rbx
0x0000000000038fe9 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000038fe8 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000013c2e9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000bb01e : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00000000000bb01d : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad55c : and al, 0x30 ; mov rdi, rbp ; call rbx
0x00000000000ad55b : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000005d9df : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000d52a1 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000282b1 : and al, 0x38 ; call r14
0x0000000000029189 : and al, 0x38 ; call r14
0x0000000000025b5a : and al, 0x38 ; call r15
0x000000000002804a : and al, 0x38 ; call rbx
0x0000000000028f1a : and al, 0x38 ; call rbx
0x0000000000112b97 : and al, 0x38 ; jmp 0x112b61
0x0000000000112b96 : and al, 0x38 ; jmp 0x112b62
0x0000000000143689 : and al, 0x38 ; jne 0x143670 ; add rsp, 0x48 ; ret
0x0000000000143688 : and al, 0x38 ; jne 0x143671 ; add rsp, 0x48 ; ret
0x00000000000fdd55 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000335d6 : and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x0000000000025f31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024802 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000001026c4 : and al, 0x39 ; ret
0x000000000009ec46 : and al, 0x39 ; ret 0x2574
0x0000000000137e65 : and al, 0x3a ; call qword ptr [rax]
0x0000000000137e64 : and al, 0x3a ; call qword ptr [rax]
0x00000000000e1c9a : and al, 0x40 ; add rax, rdx ; jmp rax
0x000000000002686a : and al, 0x40 ; call rbx
0x0000000000026caa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000127ab1 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000282ac : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000029184 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b55 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028045 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028f15 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000012a515 : and al, 0x41 ; call rsp
0x00000000001972f8 : and al, 0x44 ; jmp 0x1972fe
0x00000000000fd42b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000cc272 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013375a : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f693e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000006f1b2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a3a5 : and al, 0x48 ; add esp, 0x38 ; ret
0x000000000010a406 : and al, 0x48 ; add esp, 0x40 ; ret
0x00000000000845e3 : and al, 0x48 ; call rax
0x000000000014351d : and al, 0x48 ; mov eax, dword ptr [rax + 0x130] ; jmp rax
0x000000000014354e : and al, 0x48 ; mov eax, dword ptr [rax + 0x130] ; jmp rax
0x00000000000ac674 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000bbdad : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bc267 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x0000000000096aec : and al, 0x48 ; test esi, esi ; jne 0x96b03 ; jmp 0x96abd
0x00000000001b055c : and al, 0x4a ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a0a5c : and al, 0x4f ; add byte ptr [rax], al ; nop ; push rax ; jmp 0x1a0a6a
0x00000000000819e5 : and al, 0x50 ; add al, ch ; ret
0x00000000000819e4 : and al, 0x50 ; add al, ch ; ret
0x000000000007ef04 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000012d53b : and al, 0x60 ; call rax
0x0000000000043e31 : and al, 0x60 ; sbb eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x0000000000197d20 : and al, 0x62 ; out dx, al ; call rsp
0x0000000000189de4 : and al, 0x63 ; cmc ; call qword ptr [rbx]
0x0000000000189eb8 : and al, 0x63 ; cmc ; call rsi
0x0000000000189ec8 : and al, 0x63 ; cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x000000000019b458 : and al, 0x66 ; cli ; call rsp
0x00000000000fa3d7 : and al, 0x68 ; add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00000000000bbdb2 : and al, 0x68 ; call r12
0x00000000000bc26c : and al, 0x68 ; call r12
0x00000000000848eb : and al, 0x68 ; call rax
0x0000000000085c7b : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000019a6b0 : and al, 0x69 ; clc ; call rsp
0x00000000000e3560 : and al, 0x6c ; shl rsi, 2 ; call 0x1f7f8
0x00000000000e355f : and al, 0x6c ; shl rsi, 2 ; call 0x1f7f9
0x00000000001b295c : and al, 0x6e ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000143a2d : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000ad81d : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00000000000ad81c : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00000000000ad293 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00000000000ad292 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00000000000c1ceb : and al, 0x71 ; jmp 0xbff1f
0x000000000019b8c8 : and al, 0x73 ; sti ; call rsp
0x00000000000f5ced : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000003ea8c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b525d : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5c12 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000df14f : and al, 0x83 ; ret 0x4801
0x00000000000b67c3 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b6f6b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000821f6 : and al, 0x89 ; ret 0xb48b
0x00000000000f1f5f : and al, 0x89 ; ret 0xe883
0x0000000000082176 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000000fe170 : and al, 0x8e ; sub al, 0 ; ret
0x0000000000023ff2 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e07c3 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000f4cdb : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000029a6d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000b5774 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000db0d9 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000db240 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e072b : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000000db39c : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000f7675 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000fde52 : and al, 0xb0 ; ret
0x00000000000fde51 : and al, 0xb0 ; ret
0x0000000000104580 : and al, 0xb3 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000012fb47 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000008e648 : and al, 0xba ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000008e648 : and al, 0xba ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000003583b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003583a : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cc044 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cc043 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc801 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc800 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003ab4d : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000003ab4c : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000006b2e7 : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000006b2e6 : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000006b2e5 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000f6aea : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000f6ae9 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000fc74b : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000fc74a : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000010884c : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000010884b : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000001437d0 : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000001437cf : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000f6ad7 : and al, 0xc ; call rax
0x00000000000021d5 : and al, 0xc7 ; jno 0x2226 ; ret 0x1dd4
0x00000000000e0719 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x0000000000197810 : and al, 0xc8 ; in eax, dx ; jmp rsp
0x000000000013c84b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019a908 : and al, 0xdb ; clc ; call rsp
0x0000000000071868 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000117d94 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000019a0d8 : and al, 0xe3 ; idiv edi ; ret 1
0x000000000019a128 : and al, 0xe5 ; idiv edi ; push rsp ; ret
0x0000000000034f9c : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034fd6 : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000035009 : and al, 0xe8 ; ret
0x00000000000350cd : and al, 0xe8 ; ret
0x000000000004a21c : and al, 0xe8 ; ret
0x00000000001316b7 : and al, 0xe8 ; ret
0x000000000004a218 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a217 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035027 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035026 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035005 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035004 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000350c7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000350c6 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bb8f6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000bb8fc : and al, 0xf0 ; ret
0x00000000000bb8fb : and al, 0xf0 ; ret
0x00000000001a9321 : and al, 0xf1 ; jmp rcx
0x0000000000198a21 : and al, 0xf3 ; jmp rsp
0x00000000000cda9a : and al, 0xf3 ; ret
0x0000000000199391 : and al, 0xf6 ; call rsp
0x0000000000199390 : and al, 0xf6 ; call rsp
0x000000000019a4e1 : and al, 0xf8 ; jmp rsp
0x00000000000945a6 : and al, 0xf8 ; jne 0x94482 ; ret
0x00000000000945e2 : and al, 0xf8 ; jne 0x94482 ; ret
0x00000000000947cc : and al, 0xf8 ; jne 0x94482 ; ret
0x00000000000948cb : and al, 0xf8 ; jne 0x94482 ; ret
0x000000000004a1d1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a1d7 : and al, 0xf8 ; ret
0x000000000004a1d6 : and al, 0xf8 ; ret
0x000000000019570d : and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000004a18b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000004a191 : and al, 0xfc ; ret
0x000000000004a190 : and al, 0xfc ; ret
0x00000000000351a7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x00000000000351ab : and al, 0xfe ; ret
0x00000000000bf1e6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000019aea5 : and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x00000000001bf010 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000037304 : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000000a6708 : and al, 7 ; add byte ptr [rax], al ; ret
0x000000000012833c : and al, 7 ; sub al, byte ptr [rax] ; test eax, eax ; je 0x128350 ; ret
0x00000000000ba006 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ba005 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000141178 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000141177 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001411d8 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001411d7 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003afec : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003afeb : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b019 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b018 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b03b : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b03a : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b068 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b067 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b08b : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b08a : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b0b8 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b0b7 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000006de38 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000006de37 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000001024c8 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000001024c7 : and al, 8 ; add rsp, 0x18 ; ret
0x0000000000140d21 : and al, 8 ; add rsp, 0x18 ; ret
0x0000000000140d20 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000f35c1 : and al, 8 ; call 0x1f8ac
0x000000000012e6a7 : and al, 8 ; call qword ptr [rax]
0x000000000012e717 : and al, 8 ; call qword ptr [rax]
0x000000000013a9c7 : and al, 8 ; call qword ptr [rax]
0x000000000013aa37 : and al, 8 ; call qword ptr [rax]
0x000000000013aae7 : and al, 8 ; call qword ptr [rax]
0x000000000013ae47 : and al, 8 ; call qword ptr [rax]
0x000000000013aeb7 : and al, 8 ; call qword ptr [rax]
0x000000000013af67 : and al, 8 ; call qword ptr [rax]
0x000000000013afe7 : and al, 8 ; call qword ptr [rax]
0x000000000013b027 : and al, 8 ; call qword ptr [rax]
0x000000000013b097 : and al, 8 ; call qword ptr [rax]
0x0000000000089222 : and al, 8 ; call qword ptr [rdx]
0x0000000000089221 : and al, 8 ; call qword ptr [rdx]
0x00000000000892da : and al, 8 ; call qword ptr [rdx]
0x00000000000892d9 : and al, 8 ; call qword ptr [rdx]
0x000000000010ede3 : and al, 8 ; call rax
0x0000000000102d48 : and al, 8 ; call rbx
0x0000000000102d47 : and al, 8 ; call rbx
0x000000000012d51f : and al, 8 ; call rcx
0x000000000012d51e : and al, 8 ; call rcx
0x000000000012d62d : and al, 8 ; call rcx
0x000000000012d62c : and al, 8 ; call rcx
0x000000000003505a : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000013b4af : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b4ae : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000001fc01 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006de25 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013b5ec : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013b730 : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x000000000011ff5b : and al, 8 ; mov rdi, r13 ; call r12
0x000000000013abaf : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ac6f : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ad2f : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013adef : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000037d66 : and al, 8 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000000391a6 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000039227 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000039262 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000034f3b : and al, 8 ; ret
0x00000000000cc39c : and al, 8 ; test rax, rax ; je 0xcc3ac ; call rax
0x00000000000cc39b : and al, 8 ; test rax, rax ; je 0xcc3ad ; call rax
0x000000000013c2ee : and al, 8 ; xor eax, eax ; call rdx
0x000000000013c2ed : and al, 8 ; xor eax, eax ; call rdx
0x0000000000195304 : and al, ah ; sti ; jmp qword ptr [rax]
0x0000000000195334 : and al, bl ; sti ; push rax ; fsincos ; call rax
0x0000000000034b1e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000034e51 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035176 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000daf5d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x00000000001add3d : and al, byte ptr [rcx] ; add al, dl ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001ade2d : and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x000000000019869d : and al, byte ptr [rcx] ; add byte ptr [rdi], al ; int1 ; jmp rsp
0x0000000000089a6a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000008b26a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000008f95a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000e35a8 : and al, ch ; cli ; ret 0xfff3
0x000000000010f057 : and al, ch ; ret
0x00000000000f3611 : and al, ch ; xchg eax, ecx ; ret 0xfff2
0x000000000002de32 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e07b : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010aa81 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010b332 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de52 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002e09b : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010ab19 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010b3b2 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd92 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dfdb : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010a779 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010b0b2 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de12 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002e05b : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010a9e9 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010b2b2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd32 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002df7b : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010a529 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010aeb2 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002e01b : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010a8b9 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010b1b2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd72 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dfbb : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002dffb : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010a819 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010b132 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000005683e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000002f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000018a914 : and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x18a918 ; jmp qword ptr [rdx]
0x000000000018a90c : and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000018a8ac : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x18a8b0 ; jmp qword ptr [rdx]
0x000000000018a948 : and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x18a94c ; jmp qword ptr [rdx]
0x0000000000195f18 : and bh, byte ptr [rsi - 4] ; call qword ptr [rdx + 0x12fffc7d]
0x000000000019b0f9 : and bh, dl ; call rsp
0x00000000001a7c80 : and bl, 0xef ; call rsp
0x00000000000a6ce7 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000000a84f7 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000001019ca : and bl, byte ptr [rax + 0x2c] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010e74f : and bl, ch ; ret
0x000000000003542f : and bl, dh ; ret
0x0000000000110900 : and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000076b8a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000a9f66 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000f9e52 : and byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000007b1a4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x0000000000110a7d : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000087a3b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000087a3a : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000010f46d : and byte ptr [rax + 0x38], al ; cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10f48d
0x0000000000110901 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000080249 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000004ae2c : and byte ptr [rax + 1], cl ; ret
0x0000000000055f3c : and byte ptr [rax + 1], cl ; ret
0x000000000009f146 : and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000194fc0 : and byte ptr [rax - 0x5ecf0003], 0xfd ; jmp qword ptr [rax]
0x0000000000108a9b : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000025111 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000027bff : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000bbe72 : and byte ptr [rax - 0x75], cl ; je 0xbbea3 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x0000000000081f03 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000081f02 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000076b8b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000f3276 : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a68a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x000000000006dfe8 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008964b : and byte ptr [rax - 0x77], cl ; jae 0x89661 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b463 : and byte ptr [rax - 0x77], cl ; ret
0x000000000003b47d : and byte ptr [rax - 0x77], cl ; ret
0x000000000003b933 : and byte ptr [rax - 0x77], cl ; ret
0x000000000003b94d : and byte ptr [rax - 0x77], cl ; ret
0x00000000000f7bd5 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000fc1d5 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000127bd9 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000127bed : and byte ptr [rax - 0x77], cl ; ret
0x000000000012866b : and byte ptr [rax - 0x77], cl ; ret
0x00000000000c0601 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x00000000000c0743 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x0000000000141062 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000beb66 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x000000000004698c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000004698c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000e31b2 : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000119645 : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000022d04 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000002c374 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c388 ; call rax
0x0000000000022b96 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000097d07 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000097fb7 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000000789d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000f7899 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000195b58 : and byte ptr [rax - 4], bl ; call qword ptr [rax + 0x10fffc57]
0x0000000000195740 : and byte ptr [rax], 0xfc ; call rax
0x00000000000ec9b0 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000ebb16 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8b48
0x00000000000f9e53 : and byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000f7fb5 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cdadb : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000cdadb : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000230ac : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0x8f3b9
0x00000000000aacbc : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cdac0 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001953f0 : and byte ptr [rax], al ; cld ; jmp rax
0x0000000000126a7a : and byte ptr [rax], al ; jmp 0x126a43
0x00000000000a7e1c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a9f67 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000001386ee : and byte ptr [rbp + 0x5b0d74c0], al ; pop rbp ; pop r12 ; ret
0x00000000000d6d9c : and byte ptr [rbp - 0x3a7cfeaf], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d5ddc : and byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000032fc8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c128 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c177 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f3eb : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f43a : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000042398 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077a9d : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077e2c : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d14b : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d78c : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d817 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e0a3 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae6fb : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae74a : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b10b8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b37e8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3837 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001393dc : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b1de : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013c09a : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013cc87 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013d3a7 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f1b6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000088bc2 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c9627 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fb7c8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fb82c : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013b325 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013c21b : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019d10d : and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a200d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000001a3c1d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000001a4255 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000001ac9fd : and byte ptr [rbx + 0xa7e0204], al ; ret
0x000000000005a2af : and byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00000000001a7590 : and byte ptr [rbx - 0x11], dh ; call rax
0x000000000004dc5a : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x000000000006e0d9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001b11e0 : and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000195448 : and byte ptr [rbx], cl ; cld ; jmp qword ptr [rax]
0x000000000002981c : and byte ptr [rcx + 0x39], cl ; ret
0x000000000007b1a5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x000000000019fce6 : and byte ptr [rcx + 0xa], al ; ret
0x00000000001a0686 : and byte ptr [rcx + 0xa], al ; ret
0x000000000012bfab : and byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x28 ; call 0x138238
0x000000000004a805 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000000ba6f0 : and byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rbx
0x000000000004a215 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000013cfc8 : and byte ptr [rcx - 0x75], cl ; push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000022c8c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x0000000000195e50 : and byte ptr [rcx - 0x786f0004], al ; cld ; jmp qword ptr [rax]
0x0000000000194ef0 : and byte ptr [rcx - 5], cl ; inc dword ptr [rax] ; sti ; jmp rax
0x00000000001b2990 : and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001adc15 : and byte ptr [rcx], al ; add al, ch ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adbfd : and byte ptr [rcx], al ; add al, dl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adb9d : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000001adbb5 : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], bl ; hlt ; jmp qword ptr [rcx]
0x00000000000f82b0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000195444 : and byte ptr [rcx], cl ; cld ; jmp qword ptr [rax]
0x0000000000133b6b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c76e8 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001960cc : and byte ptr [rdi - 4], dh ; inc eax ; pop rcx ; cld ; jmp rax
0x000000000002de15 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000002e05e : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010a9ec : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010b2b5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000022c79 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a69d9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000022d78 : and byte ptr [rdi], cl ; test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000170950 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000126d40 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x00000000000fea8d : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00000000000feb4a : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00000000000fea2c : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000feae7 : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x000000000016e4ea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5b9 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6d0 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e9f2 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eac2 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebe8 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb1a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbe9 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd00 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170022 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001700f2 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170218 : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001ba6fd : and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00000000001a0775 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000000d7d09 : and byte ptr [rsi - 0x15], dh ; ret 0x9066
0x0000000000002c0e : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000194e74 : and byte ptr [rsi], dl ; sti ; call qword ptr [rax]
0x00000000000ff321 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000001adb9c : and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], al ; hlt ; jmp qword ptr [rcx]
0x00000000000abf32 : and ch, 0xf ; je 0xabf59 ; add rax, 2 ; ret
0x000000000019522c : and ch, 0xfb ; call qword ptr [rax]
0x00000000001a2490 : and ch, dh ; in al, dx ; call qword ptr [rsi]
0x0000000000198f31 : and ch, dh ; jmp rsp
0x00000000000abf1d : and cl, 0xf ; je 0xabf45 ; ret
0x000000000000395a : and cl, ah ; ret
0x0000000000047254 : and cl, byte ptr [rax - 0x7d] ; ret
0x0000000000142944 : and cl, byte ptr [rax - 0x7d] ; ret
0x0000000000094f88 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008eccd : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000119605 : and cl, byte ptr [rcx - 0x7d] ; ret 0x4104
0x0000000000051158 : and cl, ch ; ret 0xfffa
0x00000000001989f9 : and dh, bl ; jmp rsp
0x00000000001b2a21 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2a39 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2a51 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2a69 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2a81 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2a99 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2ab1 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2ae1 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2b11 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2b41 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2b71 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2ba1 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2bd1 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2c01 : and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2c19 : and dh, dh ; jmp qword ptr [rsi]
0x00000000000dc5df : and dh, dh ; ret
0x00000000000fa853 : and dh, dh ; ret
0x000000000008f2f7 : and dh, dh ; ret 0x7504
0x000000000008f2f7 : and dh, dh ; ret 0x7504
0x00000000001ab011 : and dh, dl ; jmp qword ptr [rcx]
0x000000000005683d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000195308 : and dl, ah ; sti ; jmp qword ptr [rax]
0x0000000000195a48 : and dl, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x22fffc51]
0x00000000000abc9f : and dword ptr [rax + rax], ecx ; ret
0x00000000000d2f67 : and dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000004fff1 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000185a82 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000072cbf : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072d03 : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007bf7c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007bfba : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006f779 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x0000000000189fec : and dword ptr [rcx - 0x6982000b], ebx ; cmc ; jmp qword ptr [rbx]
0x0000000000124116 : and dword ptr [rcx - 0xa], eax ; ret
0x0000000000042203 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000b0f2b : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000035f66 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000077ef0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000360c8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000186b50 : and dword ptr [rdx - 0x13], 0xedb99cff ; call qword ptr [rsi]
0x00000000001266ca : and dword ptr [rdx], ebp ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x000000000008167b : and dword ptr [rip + 0x394d0034], edi ; ret 0x8948
0x0000000000182b39 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a680b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000185a81 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000185a80 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000185a7f : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001745a6 : and eax, 0 ; add bl, dh ; ret
0x0000000000020beb : and eax, 0 ; ret
0x000000000002e0fb : and eax, 0 ; ret
0x000000000002e11b : and eax, 0 ; ret
0x000000000002e13b : and eax, 0 ; ret
0x00000000001196db : and eax, 0 ; ret
0x0000000000143d6b : and eax, 0 ; ret
0x00000000000fc313 : and eax, 0x100f ; ret
0x00000000000fc329 : and eax, 0x100f ; ret
0x000000000017435d : and eax, 0x1740025 ; ret
0x000000000003518a : and eax, 0x200 ; ret
0x0000000000077432 : and eax, 0x200 ; ret
0x0000000000140ecb : and eax, 0x281a70 ; ret
0x0000000000107414 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000cd226 : and eax, 0x2d0 ; ret
0x0000000000020b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008d857 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000002084d : and eax, 0x30 ; call rax
0x0000000000020b48 : and eax, 0x30 ; call rax
0x000000000002272d : and eax, 0x30 ; call rax
0x00000000000229bd : and eax, 0x30 ; call rax
0x000000000002ae14 : and eax, 0x30 ; call rax
0x000000000002ae59 : and eax, 0x30 ; call rax
0x000000000002b136 : and eax, 0x30 ; call rax
0x000000000002b2fe : and eax, 0x30 ; call rax
0x000000000002b41e : and eax, 0x30 ; call rax
0x000000000002b451 : and eax, 0x30 ; call rax
0x000000000002b476 : and eax, 0x30 ; call rax
0x000000000002d17e : and eax, 0x30 ; call rax
0x000000000002d1f3 : and eax, 0x30 ; call rax
0x000000000002d587 : and eax, 0x30 ; call rax
0x000000000002d79e : and eax, 0x30 ; call rax
0x000000000002d7cb : and eax, 0x30 ; call rax
0x000000000002d876 : and eax, 0x30 ; call rax
0x000000000002d896 : and eax, 0x30 ; call rax
0x000000000002dbfb : and eax, 0x30 ; call rax
0x000000000002e29e : and eax, 0x30 ; call rax
0x000000000002e376 : and eax, 0x30 ; call rax
0x000000000002e4f2 : and eax, 0x30 ; call rax
0x000000000002e5d6 : and eax, 0x30 ; call rax
0x000000000002f2e6 : and eax, 0x30 ; call rax
0x000000000002f309 : and eax, 0x30 ; call rax
0x000000000002f601 : and eax, 0x30 ; call rax
0x000000000002f980 : and eax, 0x30 ; call rax
0x000000000002fb8a : and eax, 0x30 ; call rax
0x00000000000300e2 : and eax, 0x30 ; call rax
0x000000000003010d : and eax, 0x30 ; call rax
0x000000000003012f : and eax, 0x30 ; call rax
0x0000000000030158 : and eax, 0x30 ; call rax
0x00000000000301b6 : and eax, 0x30 ; call rax
0x00000000000301e1 : and eax, 0x30 ; call rax
0x0000000000030277 : and eax, 0x30 ; call rax
0x00000000000302a2 : and eax, 0x30 ; call rax
0x000000000003047e : and eax, 0x30 ; call rax
0x00000000000304a9 : and eax, 0x30 ; call rax
0x00000000000305b9 : and eax, 0x30 ; call rax
0x00000000000305f7 : and eax, 0x30 ; call rax
0x0000000000030716 : and eax, 0x30 ; call rax
0x000000000003073e : and eax, 0x30 ; call rax
0x00000000000308c9 : and eax, 0x30 ; call rax
0x00000000000308e8 : and eax, 0x30 ; call rax
0x000000000003269f : and eax, 0x30 ; call rax
0x00000000000326fe : and eax, 0x30 ; call rax
0x000000000003a011 : and eax, 0x30 ; call rax
0x0000000000045106 : and eax, 0x30 ; call rax
0x000000000004776a : and eax, 0x30 ; call rax
0x00000000000477ad : and eax, 0x30 ; call rax
0x00000000000477d9 : and eax, 0x30 ; call rax
0x0000000000050024 : and eax, 0x30 ; call rax
0x0000000000058ba7 : and eax, 0x30 ; call rax
0x000000000005b7d8 : and eax, 0x30 ; call rax
0x000000000005be82 : and eax, 0x30 ; call rax
0x0000000000063b35 : and eax, 0x30 ; call rax
0x000000000006f1f4 : and eax, 0x30 ; call rax
0x000000000006f54c : and eax, 0x30 ; call rax
0x000000000007ac84 : and eax, 0x30 ; call rax
0x000000000007af14 : and eax, 0x30 ; call rax
0x000000000007be26 : and eax, 0x30 ; call rax
0x000000000007c248 : and eax, 0x30 ; call rax
0x000000000007c715 : and eax, 0x30 ; call rax
0x000000000008d805 : and eax, 0x30 ; call rax
0x000000000008d9cc : and eax, 0x30 ; call rax
0x000000000008da25 : and eax, 0x30 ; call rax
0x000000000008da55 : and eax, 0x30 ; call rax
0x00000000000ba06e : and eax, 0x30 ; call rax
0x00000000000ba09c : and eax, 0x30 ; call rax
0x00000000000c767e : and eax, 0x30 ; call rax
0x00000000000c7ac3 : and eax, 0x30 ; call rax
0x00000000000c7af6 : and eax, 0x30 ; call rax
0x00000000000c7c56 : and eax, 0x30 ; call rax
0x00000000000c7c86 : and eax, 0x30 ; call rax
0x00000000000c7e30 : and eax, 0x30 ; call rax
0x00000000000c7e61 : and eax, 0x30 ; call rax
0x00000000000c969f : and eax, 0x30 ; call rax
0x00000000000cc66c : and eax, 0x30 ; call rax
0x00000000000cd30c : and eax, 0x30 ; call rax
0x00000000000cd37c : and eax, 0x30 ; call rax
0x00000000000cd5da : and eax, 0x30 ; call rax
0x00000000000cd65a : and eax, 0x30 ; call rax
0x00000000000ef5dd : and eax, 0x30 ; call rax
0x00000000000f3178 : and eax, 0x30 ; call rax
0x00000000000f364a : and eax, 0x30 ; call rax
0x00000000000fd1f3 : and eax, 0x30 ; call rax
0x00000000000fd263 : and eax, 0x30 ; call rax
0x00000000000fd2ee : and eax, 0x30 ; call rax
0x00000000000fd39e : and eax, 0x30 ; call rax
0x00000000000fe4cd : and eax, 0x30 ; call rax
0x000000000010547d : and eax, 0x30 ; call rax
0x00000000001054a9 : and eax, 0x30 ; call rax
0x0000000000105619 : and eax, 0x30 ; call rax
0x0000000000105649 : and eax, 0x30 ; call rax
0x0000000000114ec4 : and eax, 0x30 ; call rax
0x0000000000115b9d : and eax, 0x30 ; call rax
0x0000000000129096 : and eax, 0x30 ; call rax
0x000000000012a1ae : and eax, 0x30 ; call rax
0x000000000012b9ad : and eax, 0x30 ; call rax
0x0000000000138295 : and eax, 0x30 ; call rax
0x0000000000144509 : and eax, 0x30 ; call rax
0x0000000000039fc9 : and eax, 0x30 ; call rdx
0x0000000000039ff1 : and eax, 0x30 ; call rdx
0x000000000003a363 : and eax, 0x30 ; call rdx
0x000000000003a421 : and eax, 0x30 ; call rdx
0x0000000000035322 : and eax, 0x30 ; jmp rax
0x00000000000c765e : and eax, 0x30 ; jmp rax
0x0000000000114acf : and eax, 0x30 ; jmp rax
0x0000000000114aff : and eax, 0x30 ; jmp rax
0x0000000000114b2f : and eax, 0x30 ; jmp rax
0x0000000000114b5f : and eax, 0x30 ; jmp rax
0x0000000000114b8f : and eax, 0x30 ; jmp rax
0x0000000000114bbf : and eax, 0x30 ; jmp rax
0x0000000000114bef : and eax, 0x30 ; jmp rax
0x0000000000114c1f : and eax, 0x30 ; jmp rax
0x0000000000114c4f : and eax, 0x30 ; jmp rax
0x0000000000114c7f : and eax, 0x30 ; jmp rax
0x0000000000114caf : and eax, 0x30 ; jmp rax
0x0000000000114cdf : and eax, 0x30 ; jmp rax
0x0000000000114d0f : and eax, 0x30 ; jmp rax
0x0000000000114d3f : and eax, 0x30 ; jmp rax
0x0000000000114d6f : and eax, 0x30 ; jmp rax
0x0000000000114d9f : and eax, 0x30 ; jmp rax
0x0000000000114dcf : and eax, 0x30 ; jmp rax
0x0000000000114dff : and eax, 0x30 ; jmp rax
0x0000000000114e2f : and eax, 0x30 ; jmp rax
0x0000000000114e5f : and eax, 0x30 ; jmp rax
0x0000000000114e8f : and eax, 0x30 ; jmp rax
0x0000000000114eef : and eax, 0x30 ; jmp rax
0x0000000000114f1f : and eax, 0x30 ; jmp rax
0x0000000000114f4f : and eax, 0x30 ; jmp rax
0x0000000000114f7f : and eax, 0x30 ; jmp rax
0x0000000000114faf : and eax, 0x30 ; jmp rax
0x0000000000114fdf : and eax, 0x30 ; jmp rax
0x000000000011500f : and eax, 0x30 ; jmp rax
0x000000000011503f : and eax, 0x30 ; jmp rax
0x000000000011506f : and eax, 0x30 ; jmp rax
0x000000000012837d : and eax, 0x30 ; jmp rax
0x00000000001443cf : and eax, 0x30 ; jmp rax
0x00000000001443ff : and eax, 0x30 ; jmp rax
0x000000000014442f : and eax, 0x30 ; jmp rax
0x000000000014445f : and eax, 0x30 ; jmp rax
0x000000000014448f : and eax, 0x30 ; jmp rax
0x00000000001444bf : and eax, 0x30 ; jmp rax
0x00000000001744af : and eax, 0x30 ; jmp rax
0x000000000002f6d3 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x000000000004d398 : and eax, 0x30 ; xor esi, esi ; call rax
0x0000000000058b64 : and eax, 0x30 ; xor esi, esi ; call rax
0x00000000000aac1d : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000aac3d : and eax, 0x3fc00 ; ret
0x00000000000aabfc : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000001a362c : and eax, 0x4000001 ; ret 0x18f
0x0000000000174323 : and eax, 0x5be17500 ; ret
0x000000000002df22 : and eax, 0x7f ; ret
0x00000000000aac70 : and eax, 0x7ff80000 ; ret
0x0000000000034b44 : and eax, 0x80 ; ret
0x0000000000034c07 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000034c49 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000077402 : and eax, 0x804 ; ret
0x00000000000fea4d : and eax, 0x83489066 ; ret 0x3c01
0x00000000000d9609 : and eax, 0x8348d231 ; ret 0x4801
0x00000000000f0eff : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000812c3 : and eax, 0x950f4100 ; ret
0x0000000000115157 : and eax, 0xc ; cmp eax, 4 ; je 0x115168 ; ret
0x0000000000115328 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000006d360 : and eax, 0xe889fffb ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001745b5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x0000000000107551 : and eax, 0xfff ; or eax, edi ; ret
0x000000000011941d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00000000001193b8 : and eax, 0xffffff ; ret
0x0000000000123023 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000101e5f : and eax, 1 ; jmp 0x101e2b
0x00000000000d72e8 : and eax, 1 ; pop rbx ; ret
0x000000000002ded2 : and eax, 1 ; ret
0x000000000002df4b : and eax, 1 ; ret
0x0000000000077f05 : and eax, 1 ; ret
0x0000000000077f15 : and eax, 1 ; ret
0x000000000010a47d : and eax, 1 ; ret
0x000000000010a50d : and eax, 1 ; ret
0x000000000010a5ad : and eax, 1 ; ret
0x000000000010a5c9 : and eax, 1 ; ret
0x000000000010a63d : and eax, 1 ; ret
0x000000000010a6cd : and eax, 1 ; ret
0x000000000010a75d : and eax, 1 ; ret
0x000000000010a7fd : and eax, 1 ; ret
0x000000000010a89d : and eax, 1 ; ret
0x000000000010a93d : and eax, 1 ; ret
0x000000000010a9cd : and eax, 1 ; ret
0x000000000010aa68 : and eax, 1 ; ret
0x000000000010aafd : and eax, 1 ; ret
0x000000000010acd9 : and eax, 1 ; ret
0x000000000010ae1f : and eax, 1 ; ret
0x000000000010ae9f : and eax, 1 ; ret
0x000000000010af1f : and eax, 1 ; ret
0x000000000010af32 : and eax, 1 ; ret
0x000000000010af9f : and eax, 1 ; ret
0x000000000010b01f : and eax, 1 ; ret
0x000000000010b09f : and eax, 1 ; ret
0x000000000010b11f : and eax, 1 ; ret
0x000000000010b19f : and eax, 1 ; ret
0x000000000010b21f : and eax, 1 ; ret
0x000000000010b29f : and eax, 1 ; ret
0x000000000010b31c : and eax, 1 ; ret
0x000000000010b39f : and eax, 1 ; ret
0x000000000010b549 : and eax, 1 ; ret
0x0000000000114a2a : and eax, 1 ; ret
0x00000000000d71e8 : and eax, 2 ; add eax, 8 ; ret
0x000000000002dd52 : and eax, 2 ; movzx eax, ax ; ret
0x000000000002df9b : and eax, 2 ; movzx eax, ax ; ret
0x000000000010a659 : and eax, 2 ; movzx eax, ax ; ret
0x000000000010afb2 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d7234 : and eax, 2 ; ret
0x000000000004846c : and eax, 2 ; sub eax, 1 ; ret
0x000000000002ddf2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002e03b : and eax, 4 ; movzx eax, ax ; ret
0x000000000010a959 : and eax, 4 ; movzx eax, ax ; ret
0x000000000010b232 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd12 : and eax, 8 ; movzx eax, ax ; ret
0x000000000002df5b : and eax, 8 ; movzx eax, ax ; ret
0x000000000010a499 : and eax, 8 ; movzx eax, ax ; ret
0x000000000010ae32 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000034e74 : and eax, 8 ; ret
0x000000000013de92 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d99fa : and eax, dword ptr [rbx - 0x7cb7fe3f] ; ret
0x00000000001adf25 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001adef5 : and eax, dword ptr [rcx] ; add byte ptr [rax], cl ; wait ; hlt ; jmp qword ptr [rcx]
0x0000000000168bf9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000036558 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000002d17 : and eax, ebp ; clc ; ret
0x0000000000188f10 : and eax, ebx ; jmp qword ptr [rdx]
0x000000000019a4a9 : and eax, edi ; jmp rsp
0x0000000000034852 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000034877 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000034792 : and eax, edx ; ret
0x0000000000034b6e : and eax, edx ; ret
0x0000000000034ec2 : and eax, edx ; ret
0x00000000000347e0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002e0ed : and eax, esi ; ret
0x00000000000fb511 : and ebp, eax ; leave ; ret
0x0000000000072cc0 : and ebp, edi ; pop rbx ; ret
0x0000000000072d04 : and ebp, edi ; pop rbx ; ret
0x000000000007bf7d : and ebp, edi ; pop rbx ; ret
0x000000000007bfbb : and ebp, edi ; pop rbx ; ret
0x00000000001150f2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x115105 ; ret
0x00000000000d732f : and ebx, 8 ; je 0xd72d0 ; pop rbx ; ret
0x00000000001890c4 : and ebx, ebx ; call qword ptr [rcx]
0x0000000000186d98 : and ebx, esp ; in eax, dx ; dec dword ptr [rdi - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dac : and ebx, esp ; in eax, dx ; inc dword ptr [rax - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186df0 : and ebx, esp ; in eax, dx ; inc dword ptr [rbp - 0x1d] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186ce8 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cec : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cf0 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cf4 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cf8 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cfc : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d00 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d04 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d08 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d0c : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d10 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d14 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d18 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d1c : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d20 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d24 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d28 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d2c : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d30 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d34 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d38 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d3c : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d40 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d44 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d48 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d4c : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d70 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d74 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d78 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d7c : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d80 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d84 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d88 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d8c : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d90 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d94 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186da0 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186da4 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186da8 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186db4 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dc0 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dc4 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dc8 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dcc : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186df8 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dfc : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e00 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e14 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e28 : and ebx, esp ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e20 : and ebx, esp ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000186db8 : and ebx, esp ; in eax, dx ; lcall ptr [rbx - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e18 : and ebx, esp ; in eax, dx ; push qword ptr [rdx - 0x20] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d58 : and ebx, esp ; in eax, dx ; push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000003afb8 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x000000000016fa65 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000016f198 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000016f203 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000016fa53 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000758c0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000802cb : and ecx, dword ptr [rax + 0x39] ; ret
0x00000000000f081b : and ecx, dword ptr [rax - 0x75] ; je 0xf084c ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012cc8e : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008635c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000007ef55 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000007cc4c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000127846 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x0000000000127a2a : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x0000000000127a4c : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000ff969 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x00000000000ff9c2 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000012786d : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x0000000000196851 : and ecx, ebp ; call rsp
0x000000000002df32 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000759b3 : and edx, 1 ; mov eax, edx ; ret
0x0000000000075aa3 : and edx, 1 ; mov eax, edx ; ret
0x0000000000002bf9 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004a1ee : and esi, 0xe0837fff ; jg 0x4a207 ; ret 0x5488
0x0000000000081a88 : and esi, dword ptr [rax + rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000001ab089 : and esi, edx ; jmp qword ptr [rcx]
0x00000000001ab0a1 : and esi, edx ; jmp qword ptr [rcx]
0x00000000001ab101 : and esi, edx ; jmp qword ptr [rcx]
0x00000000001ab119 : and esi, edx ; jmp qword ptr [rcx]
0x00000000001ab131 : and esi, edx ; jmp qword ptr [rcx]
0x00000000001ab149 : and esi, edx ; jmp qword ptr [rcx]
0x00000000001b2961 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2979 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2991 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b29a9 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b29c1 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b29d9 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b29f1 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2a09 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2c31 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2c49 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2c61 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2c79 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2c91 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2ca9 : and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2cc1 : and esi, esi ; jmp qword ptr [rsi]
0x0000000000195745 : and esp, edi ; jmp qword ptr [rax]
0x0000000000035f65 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000360c7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000081a87 : and r14d, dword ptr [r8 + rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000036557 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034851 : and rax, rdx ; movq xmm0, rax ; ret
0x0000000000034876 : and rax, rdx ; movq xmm0, rax ; ret
0x00000000001b2c78 : and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b2a50 : and sil, sil ; jmp qword ptr [rsi]
0x0000000000034bcb : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000034bc8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000071382 : bnd call 0x7b227 ; mov edx, eax ; jmp 0x71328
0x00000000000f41cd : bnd call qword ptr [rax + 0x1b8] ; add cl, ch ; ret
0x0000000000188066 : bnd call qword ptr [rax - 0x4f000dfc] ; add al, 0xf2 ; call rax
0x0000000000188046 : bnd call qword ptr [rax - 0x4f000dfd] ; add esi, edx ; call rax
0x00000000001882ca : bnd call qword ptr [rdi] ; sub dh, dl ; call qword ptr [rax]
0x0000000000188092 : bnd call rax ; add al, 0xf2 ; jmp rax
0x000000000018804e : bnd call rax ; add esi, edx ; push rax ; add esi, edx ; call qword ptr [rax]
0x000000000018830a : bnd call rdi ; sub edx, esi ; call rax
0x0000000000123ec7 : bnd jb 0x123ebc ; mov eax, 0xffffffff ; ret
0x000000000009ebb9 : bnd je 0x9ebb4 ; ret
0x00000000000adac7 : bnd je 0xadad6 ; test edx, edx ; jne 0xadac8 ; ret
0x0000000000188026 : bnd jmp qword ptr [rax - 0x3f000dfe] ; add dh, dl ; jmp rax
0x000000000018802e : bnd jmp rax ; add dh, dl ; push rax ; add dh, dl ; call qword ptr [rax]
0x0000000000187fda : bnd jmp rax ; add dl, dh ; call qword ptr [rax]
0x00000000000965aa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008eb30 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000096720 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008eb40 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000096730 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb50 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000096740 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008eb20 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000096710 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008ea6f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000966f9 : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000967a3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000968c1 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008f825 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000008b756 : bsf eax, edx ; ret
0x000000000008b7a3 : bsf eax, edx ; ret
0x000000000008b800 : bsf eax, edx ; ret
0x000000000008b963 : bsf eax, edx ; ret
0x000000000008b9cf : bsf eax, edx ; ret
0x000000000008b9e0 : bsf eax, edx ; ret
0x000000000008b756 : bsf eax, edx ; ret
0x000000000008b7a3 : bsf eax, edx ; ret
0x000000000008b800 : bsf eax, edx ; ret
0x000000000008b963 : bsf eax, edx ; ret
0x000000000008b9cf : bsf eax, edx ; ret
0x000000000008b9e0 : bsf eax, edx ; ret
0x000000000008b8b2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008ba77 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008bace : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000968c0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008b7a2 : bsf rax, rdx ; ret
0x000000000008b7ff : bsf rax, rdx ; ret
0x000000000008b962 : bsf rax, rdx ; ret
0x000000000008b9ce : bsf rax, rdx ; ret
0x000000000008b9df : bsf rax, rdx ; ret
0x000000000008b7a2 : bsf rax, rdx ; ret
0x000000000008b7ff : bsf rax, rdx ; ret
0x000000000008b962 : bsf rax, rdx ; ret
0x000000000008b9ce : bsf rax, rdx ; ret
0x000000000008b9df : bsf rax, rdx ; ret
0x000000000009f211 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000009f254 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008d457 : bsr eax, eax ; add rax, rdi ; ret
0x000000000009f026 : bsr eax, eax ; add rax, rdi ; ret
0x000000000009f0d0 : bsr eax, eax ; add rax, rdi ; ret
0x000000000009f1ae : bsr eax, eax ; add rax, rdi ; ret
0x000000000009f0e0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000009f260 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000009f0f0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009f100 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008d6db : bsr eax, esi ; add rax, rdi ; ret
0x000000000008d5e9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008d4e5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008d456 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008d6da : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008d5e8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008d5e7 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008d4e4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000013599d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000119392 : bswap eax ; ret
0x0000000000119402 : bswap eax ; ret
0x0000000000119410 : bswap eax ; ret
0x0000000000119424 : bswap eax ; ret
0x0000000000002bfb : bswap ebx ; clc ; ret
0x0000000000102995 : bswap edi ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1029a5 ; call rbx
0x0000000000064055 : call 0x11064057
0x0000000000064582 : call 0x11064584
0x0000000000064d3c : call 0x11064d3e
0x0000000000065126 : call 0x11065128
0x0000000000066b8b : call 0x11066b8d
0x000000000006903b : call 0x1106903d
0x000000000006a04f : call 0x1106a051
0x000000000019bc68 : call 0x1119a4bc
0x0000000000088e1e : call 0x115082
0x00000000000c8dc7 : call 0x115082
0x00000000001a4618 : call 0x121a3393
0x000000000013302e : call 0x12f302
0x000000000019d988 : call 0x1319c2d5
0x000000000019ed98 : call 0x1319d758
0x00000000001ba1a8 : call 0x131b99af
0x000000000012bf3c : call 0x138232
0x000000000012bfb1 : call 0x138232
0x0000000000035f40 : call 0x140ca753
0x00000000001205f6 : call 0x144ae7
0x000000000019da38 : call 0x1819c38b
0x00000000001acec8 : call 0x181ac2aa
0x00000000000283a9 : call 0x1c506f9
0x00000000000e3566 : call 0x1f7f2
0x0000000000023659 : call 0x1f8a2
0x00000000000335dd : call 0x1f8a2
0x0000000000033636 : call 0x1f8a2
0x000000000003367a : call 0x1f8a2
0x00000000001335b6 : call 0x1f8a2
0x00000000001335c3 : call 0x1f8a2
0x00000000000e35a9 : call 0x1f8aa
0x00000000000e35b2 : call 0x1f8aa
0x00000000000e35ba : call 0x1f8aa
0x00000000000f35c3 : call 0x1f8aa
0x00000000000f3612 : call 0x1f8aa
0x00000000000f3660 : call 0x1f8aa
0x0000000000133675 : call 0x1f8aa
0x000000000013367d : call 0x1f8aa
0x000000000014369d : call 0x1f8aa
0x00000000001735f4 : call 0x1f8aa
0x0000000000173606 : call 0x1f8aa
0x0000000000173656 : call 0x1f8aa
0x00000000000346c0 : call 0x1f8ae
0x00000000000ccfe1 : call 0x1f8ae
0x00000000000e097b : call 0x1f8b0
0x00000000000e190b : call 0x1f8b0
0x0000000000124924 : call 0x1f8b0
0x0000000000077b53 : call 0x1f8b1
0x00000000000f11ac : call 0x2025f
0x00000000000f3fdd : call 0x2027b
0x000000000004d5bc : call 0x2104d5be
0x000000000004dbeb : call 0x2104dbed
0x000000000004dc99 : call 0x2104dc9b
0x000000000004e0e1 : call 0x2104e0e3
0x000000000004e0f0 : call 0x2104e0f2
0x000000000004f9b4 : call 0x2104f9b6
0x000000000004fb2c : call 0x2104fb2e
0x00000000001acdd8 : call 0x221ac1b9
0x00000000001adc18 : call 0x221ad0b3
0x00000000001af9a8 : call 0x221aeece
0x00000000001b0ae8 : call 0x221b005f
0x00000000000947b4 : call 0x247dd30d
0x00000000001b2c18 : call 0x271b2242
0x00000000001b2ac8 : call 0x271b23e8
0x00000000001b2af8 : call 0x271b2418
0x00000000001b2b28 : call 0x271b2448
0x00000000001b2b58 : call 0x271b2478
0x00000000001b2b88 : call 0x271b24a8
0x00000000001b2bb8 : call 0x271b24d8
0x00000000001a8248 : call 0x281a7296
0x00000000001ab208 : call 0x281aa439
0x0000000000021958 : call 0x2dc42
0x0000000000021977 : call 0x2dc42
0x00000000000b194a : call 0x2dc42
0x00000000001419e2 : call 0x2dc42
0x0000000000044a31 : call 0x2dc48
0x00000000000b3402 : call 0x2dc48
0x00000000001123cb : call 0x2e622
0x00000000000ed472 : call 0x39762
0x000000000005fabe : call 0x3bd42
0x000000000003dfe6 : call 0x3c0a6
0x00000000000dbd64 : call 0x42d046ad
0x00000000000dbedc : call 0x42d04825
0x00000000000dbdb4 : call 0x43d046fd
0x00000000000dbf2c : call 0x43d04875
0x00000000000b05c3 : call 0x4ccd9ada
0x00000000000b2d8b : call 0x4ccdc1a2
0x00000000000b5a6b : call 0x4ccdef82
0x0000000000076a44 : call 0x4d177
0x0000000000116891 : call 0x4d177
0x000000000015aeea : call 0x4f94bee8
0x000000000015aee9 : call 0x4f94bee9
0x000000000015d9ba : call 0x4f94e9b8
0x000000000015d9b9 : call 0x4f94e9b9
0x00000000001604da : call 0x4f9514d8
0x00000000001604d9 : call 0x4f9514d9
0x00000000000e45d9 : call 0x66d0cee9
0x00000000000e4b37 : call 0x66d0d447
0x00000000000e4c99 : call 0x66d0d5a9
0x000000000019678a : call 0x71e497
0x0000000000065d5f : call 0x71fd2
0x00000000000cd98d : call 0x750cda96
0x000000000004b517 : call 0x777f2
0x000000000005f111 : call 0x7b3a2
0x0000000000080fe1 : call 0x7d282
0x0000000000081043 : call 0x7d282
0x0000000000081062 : call 0x7d282
0x0000000000081aae : call 0x7d289
0x0000000000085893 : call 0x81b82
0x0000000000085963 : call 0x81b82
0x00000000000869a4 : call 0x82bd2
0x00000000000bda2d : call 0x89d12
0x000000000004f2b0 : call 0x8b5a2
0x000000000009f483 : call 0x8b722
0x00000000000bf4ad : call 0x8b722
0x00000000000cf50e : call 0x8b722
0x00000000000e5010 : call 0x8f244
0x00000000000230b3 : call 0x8f3b2
0x00000000000ba29b : call 0x8f3b6
0x00000000000de4a4 : call 0x94476
0x00000000000202f6 : call 0xaaa66
0x00000000000203fa : call 0xaab86
0x00000000000bd136 : call 0xbdfa8
0x0000000000100eee : call 0xcd1f2
0x00000000000f642e : call 0xcd247
0x00000000000f645b : call 0xcd267
0x00000000000f4037 : call 0xf0332
0x00000000001079ed : call 0xf1079f6
0x0000000000107a0d : call 0xf107a16
0x00000000001000a3 : call 0xf17e131
0x0000000000100c3a : call 0xf17ecc8
0x000000000011e4c9 : call 0xf78e6
0x00000000000bbf92 : call 0xfcdf7b9
0x0000000000100dba : call 0xfcfd2
0x000000000003508d : call 0xffffffff816a131d
0x000000000011eba9 : call 0xffffffff835aebb4
0x00000000001230e7 : call 0xffffffff895bf377
0x00000000000bbac9 : call 0xffffffff89cde3f0
0x00000000000bbc3a : call 0xffffffff89cde561
0x00000000000bbe33 : call 0xffffffff89cde75a
0x00000000001835a3 : call 0xffffffffaedad419
0x00000000000bb46a : call 0xffffffffc234fcb2
0x0000000000051feb : call 0xffffffffc23e67f5
0x000000000008231b : call 0xffffffffc2416b2c
0x000000000012e9a5 : call 0xffffffffc287aa33
0x0000000000047641 : call 0xffffffffc28db769
0x0000000000082c38 : call 0xffffffffc2917451
0x00000000000ce0bc : call 0xffffffffc295e0c7
0x00000000000f0d4b : call 0xffffffffc2985555
0x000000000010f6af : call 0xffffffffc29a42b9
0x000000000012368e : call 0xffffffffc29b3d0a
0x0000000000130244 : call 0xffffffffc29c4a55
0x00000000000d64ad : call 0xffffffffc2e1741c
0x00000000000a6644 : call 0xffffffffc30a6654
0x00000000000aa836 : call 0xffffffffc30f358c
0x00000000000aa84f : call 0xffffffffc30f35a5
0x00000000000470a0 : call 0xffffffffc33db8aa
0x000000000010e560 : call 0xffffffffc34a2d6a
0x000000000010e7fc : call 0xffffffffc34a3006
0x00000000000ad15c : call 0xffffffffc36712c2
0x0000000000110178 : call 0xffffffffc39a4d82
0x000000000016b9b5 : call 0xffffffffc39cc8ce
0x000000000016ca35 : call 0xffffffffc39cd94e
0x00000000000372fd : call 0xffffffffc3b2824e
0x000000000008f967 : call 0xffffffffc3d982b8
0x0000000000089a77 : call 0xffffffffc40123c8
0x000000000008b277 : call 0xffffffffc4013bc8
0x00000000000b30ec : call 0xffffffffc74478f9
0x00000000001b6658 : call 0xffffffffd21b5d8f
0x00000000000c732d : call 0xffffffffde967337
0x0000000000034f57 : call 0xffffffffe28511e7
0x000000000005cba9 : call 0xfffffffffa0e517b
0x000000000011feb4 : call 0xffffffffff122944
0x000000000010e791 : call 0xffffffffff962f9e
0x0000000000136d0e : call qword ptr [r10]
0x0000000000136e06 : call qword ptr [r10]
0x0000000000136efd : call qword ptr [r10]
0x0000000000136ffd : call qword ptr [r10]
0x0000000000137158 : call qword ptr [r10]
0x0000000000137298 : call qword ptr [r10]
0x000000000013743e : call qword ptr [r10]
0x0000000000137532 : call qword ptr [r10]
0x000000000007d8af : call qword ptr [r15]
0x000000000007d8c7 : call qword ptr [r15]
0x000000000007d8db : call qword ptr [r15]
0x00000000000ceac7 : call qword ptr [r15]
0x0000000000194f53 : call qword ptr [rax + 0x10fffb74]
0x0000000000194f5b : call qword ptr [rax + 0x10fffb77]
0x0000000000194f63 : call qword ptr [rax + 0x10fffb7a]
0x0000000000194f6b : call qword ptr [rax + 0x10fffb7d]
0x0000000000194f73 : call qword ptr [rax + 0x10fffb80]
0x0000000000194f7b : call qword ptr [rax + 0x10fffb83]
0x0000000000194f83 : call qword ptr [rax + 0x10fffb86]
0x0000000000195c13 : call qword ptr [rax + 0x10fffc35]
0x0000000000195bd7 : call qword ptr [rax + 0x10fffc36]
0x0000000000195c1b : call qword ptr [rax + 0x10fffc38]
0x0000000000195bdf : call qword ptr [rax + 0x10fffc39]
0x0000000000195c23 : call qword ptr [rax + 0x10fffc3b]
0x0000000000195be7 : call qword ptr [rax + 0x10fffc3c]
0x0000000000195c2b : call qword ptr [rax + 0x10fffc3e]
0x0000000000195bef : call qword ptr [rax + 0x10fffc3f]
0x0000000000195c33 : call qword ptr [rax + 0x10fffc41]
0x0000000000195bf7 : call qword ptr [rax + 0x10fffc42]
0x0000000000195c3b : call qword ptr [rax + 0x10fffc44]
0x0000000000195bff : call qword ptr [rax + 0x10fffc45]
0x0000000000195c43 : call qword ptr [rax + 0x10fffc47]
0x0000000000195c07 : call qword ptr [rax + 0x10fffc48]
0x0000000000195b7b : call qword ptr [rax + 0x10fffc53]
0x0000000000195b73 : call qword ptr [rax + 0x10fffc54]
0x0000000000195b6b : call qword ptr [rax + 0x10fffc55]
0x0000000000195b63 : call qword ptr [rax + 0x10fffc56]
0x0000000000195b5b : call qword ptr [rax + 0x10fffc57]
0x0000000000195b93 : call qword ptr [rax + 0x10fffc58]
0x0000000000196553 : call qword ptr [rax + 0x10fffca4]
0x00000000001953eb : call qword ptr [rax + 0x20fffc0d]
0x0000000000195967 : call qword ptr [rax + 0x20fffc5f]
0x0000000000195c7b : call qword ptr [rax + 0x20fffc83]
0x0000000000195e53 : call qword ptr [rax + 0x20fffc87]
0x0000000000196173 : call qword ptr [rax + 0x20fffcaa]
0x00000000001950b7 : call qword ptr [rax + 0x20fffda6]
0x0000000000073ed7 : call qword ptr [rax + 0x80]
0x00000000001984db : call qword ptr [rax + rbx + 1]
0x0000000000195733 : call qword ptr [rax - 0x1f0003e4]
0x00000000001956df : call qword ptr [rax - 0x1f0003eb]
0x0000000000195567 : call qword ptr [rax - 0x1f000410]
0x0000000000195513 : call qword ptr [rax - 0x1f000417]
0x0000000000195387 : call qword ptr [rax - 0x1f00042e]
0x000000000019539b : call qword ptr [rax - 0x1f00043c]
0x0000000000194f43 : call qword ptr [rax - 0x1f000493]
0x00000000000348fc : call qword ptr [rax - 0x3d]
0x0000000000034c9a : call qword ptr [rax - 0x3d]
0x0000000000187fa7 : call qword ptr [rax - 0x3f000e02]
0x00000000001953e7 : call qword ptr [rax - 0x6f0003f5]
0x000000000007f72e : call qword ptr [rax - 0x72b71077]
0x00000000001880a3 : call qword ptr [rax]
0x000000000000305f : call qword ptr [rax]
0x000000000004b9a8 : call qword ptr [rax]
0x000000000004ba25 : call qword ptr [rax]
0x000000000004bb50 : call qword ptr [rax]
0x000000000004be45 : call qword ptr [rax]
0x000000000004c136 : call qword ptr [rax]
0x000000000004dc60 : call qword ptr [rax]
0x000000000004dce9 : call qword ptr [rax]
0x000000000004de89 : call qword ptr [rax]
0x000000000004e93a : call qword ptr [rax]
0x000000000004f26e : call qword ptr [rax]
0x0000000000056f7a : call qword ptr [rax]
0x000000000005702e : call qword ptr [rax]
0x00000000000570ff : call qword ptr [rax]
0x000000000005719f : call qword ptr [rax]
0x0000000000057224 : call qword ptr [rax]
0x0000000000057792 : call qword ptr [rax]
0x0000000000058163 : call qword ptr [rax]
0x00000000000586a6 : call qword ptr [rax]
0x00000000000587e5 : call qword ptr [rax]
0x000000000005a2b5 : call qword ptr [rax]
0x000000000005a384 : call qword ptr [rax]
0x000000000005a5e4 : call qword ptr [rax]
0x000000000005aaaf : call qword ptr [rax]
0x000000000005adb7 : call qword ptr [rax]
0x000000000005c6bf : call qword ptr [rax]
0x000000000005cbaf : call qword ptr [rax]
0x000000000005d7b5 : call qword ptr [rax]
0x000000000005d873 : call qword ptr [rax]
0x0000000000060f69 : call qword ptr [rax]
0x0000000000061027 : call qword ptr [rax]
0x000000000006104c : call qword ptr [rax]
0x0000000000064058 : call qword ptr [rax]
0x0000000000064585 : call qword ptr [rax]
0x0000000000064d3f : call qword ptr [rax]
0x0000000000065129 : call qword ptr [rax]
0x0000000000066b8e : call qword ptr [rax]
0x000000000006903e : call qword ptr [rax]
0x000000000006a052 : call qword ptr [rax]
0x000000000006d08e : call qword ptr [rax]
0x000000000007f736 : call qword ptr [rax]
0x0000000000080ff0 : call qword ptr [rax]
0x000000000008105a : call qword ptr [rax]
0x00000000000810cf : call qword ptr [rax]
0x0000000000081633 : call qword ptr [rax]
0x0000000000081869 : call qword ptr [rax]
0x0000000000081957 : call qword ptr [rax]
0x0000000000081a8d : call qword ptr [rax]
0x0000000000081a98 : call qword ptr [rax]
0x0000000000081ab7 : call qword ptr [rax]
0x0000000000082f4b : call qword ptr [rax]
0x0000000000084abe : call qword ptr [rax]
0x0000000000085e5a : call qword ptr [rax]
0x000000000008664a : call qword ptr [rax]
0x00000000000cec99 : call qword ptr [rax]
0x00000000000e1bec : call qword ptr [rax]
0x00000000000e82eb : call qword ptr [rax]
0x00000000000eab4b : call qword ptr [rax]
0x0000000000106222 : call qword ptr [rax]
0x0000000000122363 : call qword ptr [rax]
0x000000000012c4ae : call qword ptr [rax]
0x000000000012c800 : call qword ptr [rax]
0x000000000012c9da : call qword ptr [rax]
0x000000000012cacc : call qword ptr [rax]
0x000000000012cb88 : call qword ptr [rax]
0x000000000012cf6f : call qword ptr [rax]
0x000000000012e6a9 : call qword ptr [rax]
0x000000000012e719 : call qword ptr [rax]
0x000000000012e77a : call qword ptr [rax]
0x000000000013738a : call qword ptr [rax]
0x0000000000137e67 : call qword ptr [rax]
0x00000000001380a6 : call qword ptr [rax]
0x00000000001389e2 : call qword ptr [rax]
0x000000000013a9c9 : call qword ptr [rax]
0x000000000013aa39 : call qword ptr [rax]
0x000000000013aae9 : call qword ptr [rax]
0x000000000013ab97 : call qword ptr [rax]
0x000000000013abb4 : call qword ptr [rax]
0x000000000013ac57 : call qword ptr [rax]
0x000000000013ac74 : call qword ptr [rax]
0x000000000013ad17 : call qword ptr [rax]
0x000000000013ad34 : call qword ptr [rax]
0x000000000013add7 : call qword ptr [rax]
0x000000000013adf4 : call qword ptr [rax]
0x000000000013ae49 : call qword ptr [rax]
0x000000000013aeb9 : call qword ptr [rax]
0x000000000013af69 : call qword ptr [rax]
0x000000000013afe9 : call qword ptr [rax]
0x000000000013b029 : call qword ptr [rax]
0x000000000013b099 : call qword ptr [rax]
0x000000000013b241 : call qword ptr [rax]
0x000000000013b381 : call qword ptr [rax]
0x000000000013b4b6 : call qword ptr [rax]
0x000000000013b5f1 : call qword ptr [rax]
0x000000000013b735 : call qword ptr [rax]
0x0000000000140917 : call qword ptr [rax]
0x0000000000140f2a : call qword ptr [rax]
0x00000000001436a8 : call qword ptr [rax]
0x0000000000186363 : call qword ptr [rax]
0x0000000000187df3 : call qword ptr [rax]
0x0000000000187e1b : call qword ptr [rax]
0x0000000000187ecf : call qword ptr [rax]
0x0000000000187f9b : call qword ptr [rax]
0x0000000000187fdf : call qword ptr [rax]
0x0000000000188037 : call qword ptr [rax]
0x0000000000188057 : call qword ptr [rax]
0x00000000001880a3 : call qword ptr [rax]
0x00000000001882cf : call qword ptr [rax]
0x0000000000188b2b : call qword ptr [rax]
0x0000000000188b2a : call qword ptr [rax]
0x000000000018910b : call qword ptr [rax]
0x00000000001891b7 : call qword ptr [rax]
0x0000000000189367 : call qword ptr [rax]
0x0000000000189aff : call qword ptr [rax]
0x000000000018b0a3 : call qword ptr [rax]
0x000000000018c177 : call qword ptr [rax]
0x0000000000194e37 : call qword ptr [rax]
0x0000000000194e77 : call qword ptr [rax]
0x0000000000194e93 : call qword ptr [rax]
0x0000000000194eb3 : call qword ptr [rax]
0x0000000000194ed3 : call qword ptr [rax]
0x0000000000194f23 : call qword ptr [rax]
0x0000000000194f4f : call qword ptr [rax]
0x0000000000194f57 : call qword ptr [rax]
0x0000000000194f5f : call qword ptr [rax]
0x0000000000194f67 : call qword ptr [rax]
0x0000000000194f6f : call qword ptr [rax]
0x0000000000194f77 : call qword ptr [rax]
0x0000000000194f7f : call qword ptr [rax]
0x0000000000194f77 : call qword ptr [rax]
0x0000000000194f87 : call qword ptr [rax]
0x0000000000194fcb : call qword ptr [rax]
0x00000000001951ef : call qword ptr [rax]
0x000000000019522f : call qword ptr [rax]
0x0000000000195283 : call qword ptr [rax]
0x0000000000195287 : call qword ptr [rax]
0x000000000019528b : call qword ptr [rax]
0x00000000001952b7 : call qword ptr [rax]
0x000000000019531f : call qword ptr [rax]
0x0000000000195367 : call qword ptr [rax]
0x00000000001953bb : call qword ptr [rax]
0x000000000019545f : call qword ptr [rax]
0x0000000000195533 : call qword ptr [rax]
0x0000000000195587 : call qword ptr [rax]
0x00000000001955cf : call qword ptr [rax]
0x000000000019563b : call qword ptr [rax]
0x0000000000195653 : call qword ptr [rax]
0x000000000019566f : call qword ptr [rax]
0x00000000001956b7 : call qword ptr [rax]
0x00000000001956ff : call qword ptr [rax]
0x0000000000195713 : call qword ptr [rax]
0x000000000019576f : call qword ptr [rax]
0x0000000000195987 : call qword ptr [rax]
0x0000000000195b5f : call qword ptr [rax]
0x0000000000195b67 : call qword ptr [rax]
0x0000000000195b6f : call qword ptr [rax]
0x0000000000195b77 : call qword ptr [rax]
0x0000000000195b7f : call qword ptr [rax]
0x0000000000195b97 : call qword ptr [rax]
0x0000000000195bd3 : call qword ptr [rax]
0x0000000000195bdb : call qword ptr [rax]
0x0000000000195be3 : call qword ptr [rax]
0x0000000000195beb : call qword ptr [rax]
0x0000000000195bf3 : call qword ptr [rax]
0x0000000000195bfb : call qword ptr [rax]
0x0000000000195c03 : call qword ptr [rax]
0x0000000000195c0b : call qword ptr [rax]
0x0000000000195c17 : call qword ptr [rax]
0x0000000000195c1f : call qword ptr [rax]
0x0000000000195c17 : call qword ptr [rax]
0x0000000000195c27 : call qword ptr [rax]
0x0000000000195c2f : call qword ptr [rax]
0x0000000000195c37 : call qword ptr [rax]
0x0000000000195c3f : call qword ptr [rax]
0x0000000000195c47 : call qword ptr [rax]
0x0000000000195c5b : call qword ptr [rax]
0x0000000000195e73 : call qword ptr [rax]
0x0000000000195e8f : call qword ptr [rax]
0x0000000000196153 : call qword ptr [rax]
0x000000000019636b : call qword ptr [rax]
0x0000000000196557 : call qword ptr [rax]
0x000000000019bc6b : call qword ptr [rax]
0x000000000019c33b : call qword ptr [rax]
0x000000000019d023 : call qword ptr [rax]
0x000000000019d7fb : call qword ptr [rax]
0x000000000019dfcb : call qword ptr [rax]
0x000000000019f22b : call qword ptr [rax]
0x000000000019f25b : call qword ptr [rax]
0x000000000019f3a3 : call qword ptr [rax]
0x000000000019f3d3 : call qword ptr [rax]
0x000000000019f403 : call qword ptr [rax]
0x00000000001a163b : call qword ptr [rax]
0x00000000001a3dfb : call qword ptr [rax]
0x00000000001a6403 : call qword ptr [rax]
0x00000000001a688b : call qword ptr [rax]
0x00000000001a6afb : call qword ptr [rax]
0x00000000001a6b2b : call qword ptr [rax]
0x00000000001a6b5b : call qword ptr [rax]
0x00000000001a6bbb : call qword ptr [rax]
0x00000000001a6beb : call qword ptr [rax]
0x00000000001a6c1b : call qword ptr [rax]
0x00000000001a6e2b : call qword ptr [rax]
0x00000000001a778b : call qword ptr [rax]
0x00000000001a7b7b : call qword ptr [rax]
0x00000000001a7bab : call qword ptr [rax]
0x00000000001a8623 : call qword ptr [rax]
0x00000000001a8653 : call qword ptr [rax]
0x00000000001a8683 : call qword ptr [rax]
0x00000000001a86b3 : call qword ptr [rax]
0x00000000001a86e3 : call qword ptr [rax]
0x00000000001a8c7b : call qword ptr [rax]
0x00000000001a8c93 : call qword ptr [rax]
0x00000000001a9acb : call qword ptr [rax]
0x00000000001a9ae3 : call qword ptr [rax]
0x00000000001ab35b : call qword ptr [rax]
0x00000000001ad7f3 : call qword ptr [rax]
0x00000000001ad813 : call qword ptr [rax]
0x00000000001ad833 : call qword ptr [rax]
0x00000000001ad853 : call qword ptr [rax]
0x00000000001b083b : call qword ptr [rax]
0x00000000001b3513 : call qword ptr [rax]
0x00000000001b3653 : call qword ptr [rax]
0x00000000001b366b : call qword ptr [rax]
0x00000000001b36d3 : call qword ptr [rax]
0x00000000001b370b : call qword ptr [rax]
0x00000000001b3bdb : call qword ptr [rax]
0x00000000001b3bf3 : call qword ptr [rax]
0x00000000001b3c0b : call qword ptr [rax]
0x00000000001b3efb : call qword ptr [rax]
0x00000000001b510b : call qword ptr [rax]
0x00000000001bb8f3 : call qword ptr [rax]
0x00000000001bbf7b : call qword ptr [rax]
0x00000000001952b7 : call qword ptr [rax]
0x000000000019566f : call qword ptr [rax]
0x000000000017437e : call qword ptr [rbx]
0x0000000000175140 : call qword ptr [rbx]
0x000000000000358e : call qword ptr [rbx]
0x0000000000037396 : call qword ptr [rbx]
0x000000000012e350 : call qword ptr [rbx]
0x00000000001657fd : call qword ptr [rbx]
0x0000000000169b2d : call qword ptr [rbx]
0x000000000017437e : call qword ptr [rbx]
0x0000000000175140 : call qword ptr [rbx]
0x00000000001892df : call qword ptr [rbx]
0x0000000000189de7 : call qword ptr [rbx]
0x0000000000189ecf : call qword ptr [rbx]
0x000000000019d433 : call qword ptr [rbx]
0x000000000019d463 : call qword ptr [rbx]
0x000000000019d47b : call qword ptr [rbx]
0x000000000019d493 : call qword ptr [rbx]
0x000000000019d4ab : call qword ptr [rbx]
0x000000000019d4db : call qword ptr [rbx]
0x000000000019d4f3 : call qword ptr [rbx]
0x000000000019d50b : call qword ptr [rbx]
0x000000000019f7db : call qword ptr [rbx]
0x00000000001aa03b : call qword ptr [rbx]
0x00000000001aa053 : call qword ptr [rbx]
0x00000000001acd2b : call qword ptr [rbx]
0x00000000001acd2a : call qword ptr [rbx]
0x00000000001ae813 : call qword ptr [rbx]
0x00000000001aea7b : call qword ptr [rbx]
0x00000000001b3683 : call qword ptr [rbx]
0x00000000001b4f23 : call qword ptr [rbx]
0x00000000001b640b : call qword ptr [rbx]
0x00000000001b784b : call qword ptr [rbx]
0x00000000001b9013 : call qword ptr [rbx]
0x00000000001b98db : call qword ptr [rbx]
0x00000000001bb593 : call qword ptr [rbx]
0x0000000000195003 : call qword ptr [rcx + 0x31fffda8]
0x00000000000515ce : call qword ptr [rcx]
0x0000000000061b40 : call qword ptr [rcx]
0x0000000000101a42 : call qword ptr [rcx]
0x0000000000101ab9 : call qword ptr [rcx]
0x0000000000101e6b : call qword ptr [rcx]
0x0000000000122cea : call qword ptr [rcx]
0x0000000000181de7 : call qword ptr [rcx]
0x00000000001890c7 : call qword ptr [rcx]
0x00000000001890c6 : call qword ptr [rcx]
0x0000000000189a53 : call qword ptr [rcx]
0x000000000019bd03 : call qword ptr [rcx]
0x000000000019cfcb : call qword ptr [rcx]
0x000000000019d56b : call qword ptr [rcx]
0x000000000019d583 : call qword ptr [rcx]
0x000000000019d59b : call qword ptr [rcx]
0x000000000019df73 : call qword ptr [rcx]
0x000000000019ecd3 : call qword ptr [rcx]
0x000000000019ed6b : call qword ptr [rcx]
0x000000000019ed83 : call qword ptr [rcx]
0x00000000001a06c3 : call qword ptr [rcx]
0x00000000001a461b : call qword ptr [rcx]
0x00000000001a6a6b : call qword ptr [rcx]
0x00000000001a940b : call qword ptr [rcx]
0x00000000001ad9c3 : call qword ptr [rcx]
0x00000000001b077b : call qword ptr [rcx]
0x00000000001b40a3 : call qword ptr [rcx]
0x00000000001b60a3 : call qword ptr [rcx]
0x00000000001bc373 : call qword ptr [rcx]
0x0000000000196aab : call qword ptr [rdi + rbp*2 + 0x7fa40000]
0x000000000019ade3 : call qword ptr [rdi + rbx + 2]
0x000000000007d8b0 : call qword ptr [rdi]
0x000000000007d8c8 : call qword ptr [rdi]
0x000000000007d8dc : call qword ptr [rdi]
0x00000000000ceac8 : call qword ptr [rdi]
0x000000000018689b : call qword ptr [rdi]
0x00000000001882cb : call qword ptr [rdi]
0x0000000000189ddb : call qword ptr [rdi]
0x000000000019d16b : call qword ptr [rdi]
0x000000000019da3b : call qword ptr [rdi]
0x00000000001a7953 : call qword ptr [rdi]
0x00000000001a7d73 : call qword ptr [rdi]
0x00000000001acecb : call qword ptr [rdi]
0x00000000001aceca : call qword ptr [rdi]
0x00000000001af51b : call qword ptr [rdi]
0x00000000001b3eb3 : call qword ptr [rdi]
0x00000000001b5883 : call qword ptr [rdi]
0x00000000001b7ba3 : call qword ptr [rdi]
0x00000000001bbf4b : call qword ptr [rdi]
0x00000000001bc123 : call qword ptr [rdi]
0x0000000000195f3b : call qword ptr [rdx + 0x12fffc79]
0x0000000000195f33 : call qword ptr [rdx + 0x12fffc7a]
0x0000000000195f2b : call qword ptr [rdx + 0x12fffc7b]
0x0000000000195f23 : call qword ptr [rdx + 0x12fffc7c]
0x0000000000195f1b : call qword ptr [rdx + 0x12fffc7d]
0x0000000000195a4b : call qword ptr [rdx + 0x22fffc51]
0x000000000019583b : call qword ptr [rdx + 0x22fffc5d]
0x0000000000195d27 : call qword ptr [rdx + 0x22fffc85]
0x000000000019621f : call qword ptr [rdx + 0x22fffcac]
0x00000000001888c3 : call qword ptr [rdx - 0x1b000c89]
0x00000000001888c2 : call qword ptr [rdx - 0x1b000c89]
0x0000000000194fb3 : call qword ptr [rdx]
0x0000000000194fb3 : call qword ptr [rdx]
0x0000000000089224 : call qword ptr [rdx]
0x00000000000892dc : call qword ptr [rdx]
0x0000000000089593 : call qword ptr [rdx]
0x0000000000108a67 : call qword ptr [rdx]
0x0000000000136d0f : call qword ptr [rdx]
0x0000000000136e07 : call qword ptr [rdx]
0x0000000000136efe : call qword ptr [rdx]
0x0000000000136ffe : call qword ptr [rdx]
0x0000000000137159 : call qword ptr [rdx]
0x0000000000137299 : call qword ptr [rdx]
0x000000000013743f : call qword ptr [rdx]
0x0000000000137533 : call qword ptr [rdx]
0x00000000001886c7 : call qword ptr [rdx]
0x00000000001886c6 : call qword ptr [rdx]
0x0000000000188747 : call qword ptr [rdx]
0x0000000000188746 : call qword ptr [rdx]
0x000000000018875f : call qword ptr [rdx]
0x000000000018875e : call qword ptr [rdx]
0x00000000001890df : call qword ptr [rdx]
0x00000000001890de : call qword ptr [rdx]
0x0000000000194fb3 : call qword ptr [rdx]
0x000000000019581b : call qword ptr [rdx]
0x0000000000195d47 : call qword ptr [rdx]
0x0000000000195f1f : call qword ptr [rdx]
0x0000000000195f27 : call qword ptr [rdx]
0x0000000000195f2f : call qword ptr [rdx]
0x0000000000195f37 : call qword ptr [rdx]
0x0000000000195f3f : call qword ptr [rdx]
0x000000000019623f : call qword ptr [rdx]
0x0000000000196447 : call qword ptr [rdx]
0x000000000019644f : call qword ptr [rdx]
0x000000000019cc83 : call qword ptr [rdx]
0x000000000019d41b : call qword ptr [rdx]
0x000000000019d44b : call qword ptr [rdx]
0x000000000019d4c3 : call qword ptr [rdx]
0x000000000019d98b : call qword ptr [rdx]
0x000000000019de43 : call qword ptr [rdx]
0x000000000019de5b : call qword ptr [rdx]
0x000000000019ecbb : call qword ptr [rdx]
0x000000000019ed9b : call qword ptr [rdx]
0x000000000019f243 : call qword ptr [rdx]
0x000000000019f273 : call qword ptr [rdx]
0x000000000019f3bb : call qword ptr [rdx]
0x000000000019f3eb : call qword ptr [rdx]
0x000000000019f41b : call qword ptr [rdx]
0x00000000001a4c7b : call qword ptr [rdx]
0x00000000001a4cb3 : call qword ptr [rdx]
0x00000000001a5eb3 : call qword ptr [rdx]
0x00000000001a6483 : call qword ptr [rdx]
0x00000000001a83a3 : call qword ptr [rdx]
0x00000000001a863b : call qword ptr [rdx]
0x00000000001a866b : call qword ptr [rdx]
0x00000000001a869b : call qword ptr [rdx]
0x00000000001a86cb : call qword ptr [rdx]
0x00000000001a86fb : call qword ptr [rdx]
0x00000000001a9a4b : call qword ptr [rdx]
0x00000000001aac73 : call qword ptr [rdx]
0x00000000001acf1b : call qword ptr [rdx]
0x00000000001acf1a : call qword ptr [rdx]
0x00000000001af86b : call qword ptr [rdx]
0x00000000001b0333 : call qword ptr [rdx]
0x00000000001b407b : call qword ptr [rdx]
0x00000000001b889b : call qword ptr [rdx]
0x00000000001b9d3b : call qword ptr [rdx]
0x00000000001b9fd3 : call qword ptr [rdx]
0x00000000001ba1ab : call qword ptr [rdx]
0x00000000001bae73 : call qword ptr [rdx]
0x0000000000034df4 : call qword ptr [rip - 0x3dabf100]
0x0000000000195797 : call qword ptr [rsi + 0x26fffc61]
0x0000000000195cc3 : call qword ptr [rsi + 0x26fffc82]
0x00000000001961bb : call qword ptr [rsi + 0x26fffca9]
0x00000000000093a8 : call qword ptr [rsi]
0x0000000000092c32 : call qword ptr [rsi]
0x0000000000122d6d : call qword ptr [rsi]
0x0000000000183f46 : call qword ptr [rsi]
0x0000000000186b47 : call qword ptr [rsi]
0x0000000000186b57 : call qword ptr [rsi]
0x0000000000186b5b : call qword ptr [rsi]
0x0000000000186b5f : call qword ptr [rsi]
0x0000000000186bc7 : call qword ptr [rsi]
0x0000000000186bd7 : call qword ptr [rsi]
0x0000000000186bdb : call qword ptr [rsi]
0x0000000000186bdf : call qword ptr [rsi]
0x0000000000195047 : call qword ptr [rsi]
0x00000000001957b7 : call qword ptr [rsi]
0x0000000000195ca3 : call qword ptr [rsi]
0x000000000019619b : call qword ptr [rsi]
0x000000000019bc23 : call qword ptr [rsi]
0x000000000019d38b : call qword ptr [rsi]
0x000000000019d82b : call qword ptr [rsi]
0x000000000019f13b : call qword ptr [rsi]
0x000000000019f183 : call qword ptr [rsi]
0x00000000001a2493 : call qword ptr [rsi]
0x00000000001a45ab : call qword ptr [rsi]
0x00000000001a4c03 : call qword ptr [rsi]
0x00000000001a5323 : call qword ptr [rsi]
0x00000000001a58c3 : call qword ptr [rsi]
0x00000000001a6983 : call qword ptr [rsi]
0x00000000001a8373 : call qword ptr [rsi]
0x00000000001a91fb : call qword ptr [rsi]
0x00000000001abdc3 : call qword ptr [rsi]
0x00000000001ac6cb : call qword ptr [rsi]
0x00000000001ac6ca : call qword ptr [rsi]
0x00000000001acd6b : call qword ptr [rsi]
0x00000000001acd6a : call qword ptr [rsi]
0x00000000001ad7ab : call qword ptr [rsi]
0x00000000001aebf3 : call qword ptr [rsi]
0x00000000001b0d5b : call qword ptr [rsi]
0x00000000001b80cb : call qword ptr [rsi]
0x0000000000024075 : call r12
0x0000000000024809 : call r12
0x0000000000024a45 : call r12
0x0000000000029c49 : call r12
0x00000000000acb08 : call r12
0x00000000000bbdb4 : call r12
0x00000000000bc20f : call r12
0x00000000000bc26e : call r12
0x00000000000cf30b : call r12
0x000000000011ff60 : call r12
0x000000000012a2b2 : call r12
0x000000000012a322 : call r12
0x000000000012a516 : call r12
0x000000000013c0bd : call r12
0x0000000000172b72 : call r12
0x0000000000021be2 : call r14
0x0000000000025594 : call r14
0x00000000000282b3 : call r14
0x0000000000028abe : call r14
0x000000000002918b : call r14
0x0000000000038f70 : call r14
0x00000000000391ae : call r14
0x000000000003922f : call r14
0x000000000003926a : call r14
0x00000000000bb023 : call r14
0x00000000000c8fb4 : call r14
0x000000000012c02f : call r14
0x000000000013a790 : call r14
0x000000000013a870 : call r14
0x0000000000023e55 : call r15
0x0000000000023ef8 : call r15
0x0000000000025354 : call r15
0x0000000000025b5c : call r15
0x0000000000029a75 : call r15
0x000000000003730c : call r15
0x0000000000037322 : call r15
0x0000000000037349 : call r15
0x0000000000037364 : call r15
0x00000000000378b9 : call r15
0x0000000000037d6e : call r15
0x0000000000038386 : call r15
0x000000000012a617 : call r15
0x000000000006cb4b : call r8
0x000000000013b493 : call r8
0x000000000011495f : call r9
0x000000000002082e : call rax
0x0000000000020852 : call rax
0x00000000000208f6 : call rax
0x0000000000020b4d : call rax
0x00000000000222c4 : call rax
0x0000000000022732 : call rax
0x00000000000229c2 : call rax
0x000000000002436e : call rax
0x0000000000024d09 : call rax
0x0000000000025117 : call rax
0x0000000000025f38 : call rax
0x0000000000026cb1 : call rax
0x0000000000027c05 : call rax
0x000000000002ae19 : call rax
0x000000000002ae5e : call rax
0x000000000002b027 : call rax
0x000000000002b13b : call rax
0x000000000002b303 : call rax
0x000000000002b423 : call rax
0x000000000002b456 : call rax
0x000000000002b47b : call rax
0x000000000002c37d : call rax
0x000000000002d183 : call rax
0x000000000002d1f8 : call rax
0x000000000002d58c : call rax
0x000000000002d7a3 : call rax
0x000000000002d7d0 : call rax
0x000000000002d87b : call rax
0x000000000002d89b : call rax
0x000000000002dc00 : call rax
0x000000000002e2a3 : call rax
0x000000000002e37b : call rax
0x000000000002e4f7 : call rax
0x000000000002e5db : call rax
0x000000000002f2eb : call rax
0x000000000002f30e : call rax
0x000000000002f606 : call rax
0x000000000002f6db : call rax
0x000000000002f985 : call rax
0x000000000002fb8f : call rax
0x00000000000300e7 : call rax
0x0000000000030112 : call rax
0x0000000000030134 : call rax
0x000000000003015d : call rax
0x00000000000301bb : call rax
0x00000000000301e6 : call rax
0x000000000003027c : call rax
0x00000000000302a7 : call rax
0x0000000000030483 : call rax
0x00000000000304ae : call rax
0x00000000000305be : call rax
0x00000000000305fc : call rax
0x000000000003071b : call rax
0x0000000000030743 : call rax
0x00000000000308ce : call rax
0x00000000000308ed : call rax
0x00000000000326a4 : call rax
0x0000000000032703 : call rax
0x0000000000038fef : call rax
0x000000000003a016 : call rax
0x000000000003a5fd : call rax
0x00000000000450e5 : call rax
0x000000000004510b : call rax
0x000000000004776f : call rax
0x00000000000477b2 : call rax
0x00000000000477de : call rax
0x000000000004b390 : call rax
0x000000000004d39f : call rax
0x000000000004d3d5 : call rax
0x0000000000050029 : call rax
0x0000000000050051 : call rax
0x0000000000052258 : call rax
0x00000000000564b4 : call rax
0x0000000000058b6b : call rax
0x0000000000058bac : call rax
0x000000000005b7dd : call rax
0x000000000005b809 : call rax
0x000000000005be5f : call rax
0x000000000005be87 : call rax
0x0000000000063b3a : call rax
0x0000000000063b6d : call rax
0x000000000006c438 : call rax
0x000000000006cb4c : call rax
0x000000000006dddc : call rax
0x000000000006de2e : call rax
0x000000000006f1f9 : call rax
0x000000000006f220 : call rax
0x000000000006f519 : call rax
0x000000000006f551 : call rax
0x0000000000074017 : call rax
0x0000000000078779 : call rax
0x000000000007ac40 : call rax
0x000000000007ac89 : call rax
0x000000000007aeb0 : call rax
0x000000000007af19 : call rax
0x000000000007be2b : call rax
0x000000000007bf10 : call rax
0x000000000007c24d : call rax
0x000000000007c300 : call rax
0x000000000007c71a : call rax
0x000000000007c750 : call rax
0x000000000007d903 : call rax
0x000000000007e076 : call rax
0x00000000000819af : call rax
0x00000000000845e5 : call rax
0x00000000000845e4 : call rax
0x00000000000848ed : call rax
0x0000000000084fb8 : call rax
0x000000000008556d : call rax
0x0000000000085c83 : call rax
0x00000000000879d7 : call rax
0x0000000000087bf8 : call rax
0x0000000000087e68 : call rax
0x000000000008810b : call rax
0x000000000008893f : call rax
0x0000000000088b7c : call rax
0x0000000000088d06 : call rax
0x0000000000088e5e : call rax
0x000000000008d80a : call rax
0x000000000008d9d1 : call rax
0x000000000008da2a : call rax
0x000000000008da5a : call rax
0x00000000000ba073 : call rax
0x00000000000ba0a1 : call rax
0x00000000000c7597 : call rax
0x00000000000c7683 : call rax
0x00000000000c7ac8 : call rax
0x00000000000c7afb : call rax
0x00000000000c7c5b : call rax
0x00000000000c7c8b : call rax
0x00000000000c7e35 : call rax
0x00000000000c7e66 : call rax
0x00000000000c8b12 : call rax
0x00000000000c9126 : call rax
0x00000000000c92b8 : call rax
0x00000000000c96a4 : call rax
0x00000000000cc3a3 : call rax
0x00000000000cc585 : call rax
0x00000000000cc671 : call rax
0x00000000000cd311 : call rax
0x00000000000cd381 : call rax
0x00000000000cd5df : call rax
0x00000000000cd65f : call rax
0x00000000000d936d : call rax
0x00000000000ef5e2 : call rax
0x00000000000f317d : call rax
0x00000000000f364f : call rax
0x00000000000f6ad9 : call rax
0x00000000000fd1f8 : call rax
0x00000000000fd268 : call rax
0x00000000000fd2f3 : call rax
0x00000000000fd3a3 : call rax
0x00000000000fe4d2 : call rax
0x0000000000102839 : call rax
0x0000000000102e38 : call rax
0x00000000001031df : call rax
0x00000000001035e8 : call rax
0x0000000000105424 : call rax
0x0000000000105482 : call rax
0x00000000001054ae : call rax
0x000000000010559b : call rax
0x000000000010561e : call rax
0x000000000010564e : call rax
0x000000000010741b : call rax
0x000000000010ede5 : call rax
0x000000000010eee9 : call rax
0x000000000011151d : call rax
0x000000000011332a : call rax
0x0000000000113ea9 : call rax
0x000000000011422c : call rax
0x000000000011431a : call rax
0x0000000000114380 : call rax
0x0000000000114405 : call rax
0x0000000000114534 : call rax
0x0000000000114709 : call rax
0x0000000000114846 : call rax
0x0000000000114ec9 : call rax
0x0000000000115874 : call rax
0x0000000000115b4d : call rax
0x0000000000115ba2 : call rax
0x000000000011cef7 : call rax
0x000000000011d207 : call rax
0x000000000011faac : call rax
0x000000000011fda4 : call rax
0x000000000011feb8 : call rax
0x0000000000120717 : call rax
0x000000000012909b : call rax
0x000000000012a1b3 : call rax
0x000000000012b888 : call rax
0x000000000012b973 : call rax
0x000000000012b9b2 : call rax
0x000000000012c229 : call rax
0x000000000012d2ba : call rax
0x000000000012d53d : call rax
0x000000000012f40d : call rax
0x000000000012f51b : call rax
0x000000000013229b : call rax
0x0000000000132c4f : call rax
0x0000000000132e31 : call rax
0x000000000013410a : call rax
0x00000000001341d4 : call rax
0x00000000001342fd : call rax
0x000000000013451d : call rax
0x0000000000135015 : call rax
0x00000000001356c0 : call rax
0x0000000000135a35 : call rax
0x0000000000137bf4 : call rax
0x000000000013829a : call rax
0x0000000000138fb1 : call rax
0x00000000001396ca : call rax
0x000000000013b494 : call rax
0x00000000001430e2 : call rax
0x0000000000143ae7 : call rax
0x000000000014450e : call rax
0x0000000000173f80 : call rax
0x0000000000175867 : call rax
0x000000000018263b : call rax
0x0000000000187bb3 : call rax
0x0000000000187bfb : call rax
0x0000000000187e03 : call rax
0x0000000000187e4b : call rax
0x0000000000187ebf : call rax
0x000000000018804f : call rax
0x000000000018806f : call rax
0x0000000000188093 : call rax
0x000000000018830f : call rax
0x0000000000188e74 : call rax
0x00000000001899c3 : call rax
0x0000000000189a47 : call rax
0x000000000018c197 : call rax
0x000000000018c1a3 : call rax
0x0000000000194483 : call rax
0x0000000000194487 : call rax
0x0000000000194483 : call rax
0x000000000019448b : call rax
0x0000000000194487 : call rax
0x0000000000194483 : call rax
0x0000000000194e13 : call rax
0x0000000000194e27 : call rax
0x0000000000194e87 : call rax
0x0000000000194eab : call rax
0x0000000000194f13 : call rax
0x0000000000195233 : call rax
0x000000000019526f : call rax
0x00000000001952bf : call rax
0x00000000001952d7 : call rax
0x000000000019533b : call rax
0x0000000000195357 : call rax
0x00000000001953ab : call rax
0x00000000001953d7 : call rax
0x00000000001954ff : call rax
0x0000000000195523 : call rax
0x0000000000195577 : call rax
0x00000000001955b7 : call rax
0x00000000001955d3 : call rax
0x000000000019565b : call rax
0x0000000000195673 : call rax
0x000000000019568f : call rax
0x00000000001956ef : call rax
0x0000000000195743 : call rax
0x000000000019575f : call rax
0x0000000000195977 : call rax
0x0000000000195c8b : call rax
0x0000000000195e63 : call rax
0x0000000000195e93 : call rax
0x000000000019609f : call rax
0x00000000001960a7 : call rax
0x00000000001960af : call rax
0x00000000001960b7 : call rax
0x00000000001960bf : call rax
0x0000000000196183 : call rax
0x000000000019635b : call rax
0x00000000001963c3 : call rax
0x00000000001965c7 : call rax
0x000000000019f433 : call rax
0x000000000019f59b : call rax
0x00000000001a7593 : call rax
0x00000000001ae14b : call rax
0x00000000001b9a53 : call rax
0x000000000002da78 : call rbx
0x000000000002185d : call rbx
0x00000000000218e9 : call rbx
0x00000000000248bd : call rbx
0x000000000002686c : call rbx
0x000000000002686b : call rbx
0x000000000002804c : call rbx
0x0000000000028f1c : call rbx
0x000000000002da78 : call rbx
0x0000000000074feb : call rbx
0x00000000000750c7 : call rbx
0x00000000000751aa : call rbx
0x0000000000075299 : call rbx
0x00000000000acbb6 : call rbx
0x00000000000acce1 : call rbx
0x00000000000ad07d : call rbx
0x00000000000ad126 : call rbx
0x00000000000ad298 : call rbx
0x00000000000ad3b7 : call rbx
0x00000000000ad561 : call rbx
0x00000000000ad66f : call rbx
0x00000000000ad822 : call rbx
0x00000000000ad91f : call rbx
0x00000000000ba56a : call rbx
0x00000000000ba6f7 : call rbx
0x00000000000ebc56 : call rbx
0x00000000000ec32d : call rbx
0x00000000000ec430 : call rbx
0x00000000000ece5c : call rbx
0x0000000000102909 : call rbx
0x0000000000102908 : call rbx
0x000000000010294a : call rbx
0x0000000000102982 : call rbx
0x000000000010298f : call rbx
0x000000000010298e : call rbx
0x000000000010299d : call rbx
0x00000000001029eb : call rbx
0x0000000000102a23 : call rbx
0x0000000000102a30 : call rbx
0x0000000000102a2f : call rbx
0x0000000000102a71 : call rbx
0x0000000000102aa9 : call rbx
0x0000000000102ab6 : call rbx
0x0000000000102ab5 : call rbx
0x0000000000102ac4 : call rbx
0x0000000000102ad2 : call rbx
0x0000000000102b2e : call rbx
0x0000000000102b66 : call rbx
0x0000000000102b73 : call rbx
0x0000000000102b72 : call rbx
0x0000000000102bb4 : call rbx
0x0000000000102bec : call rbx
0x0000000000102bf9 : call rbx
0x0000000000102bf8 : call rbx
0x0000000000102c07 : call rbx
0x0000000000102c55 : call rbx
0x0000000000102c8d : call rbx
0x0000000000102c9a : call rbx
0x0000000000102c99 : call rbx
0x0000000000102cdf : call rbx
0x0000000000102d4a : call rbx
0x0000000000102d5c : call rbx
0x0000000000102d69 : call rbx
0x0000000000102d68 : call rbx
0x0000000000102d77 : call rbx
0x0000000000102d85 : call rbx
0x0000000000102d93 : call rbx
0x000000000010360d : call rbx
0x0000000000103632 : call rbx
0x0000000000103656 : call rbx
0x0000000000103676 : call rbx
0x000000000010369b : call rbx
0x00000000001036c0 : call rbx
0x00000000001036cf : call rbx
0x00000000001036ef : call rbx
0x0000000000103714 : call rbx
0x0000000000103739 : call rbx
0x0000000000103748 : call rbx
0x0000000000103757 : call rbx
0x000000000010377b : call rbx
0x000000000010379b : call rbx
0x00000000001037c0 : call rbx
0x00000000001037e5 : call rbx
0x00000000001037f4 : call rbx
0x0000000000103814 : call rbx
0x0000000000103839 : call rbx
0x000000000010385e : call rbx
0x000000000010386d : call rbx
0x000000000010387c : call rbx
0x000000000010388b : call rbx
0x00000000001038b0 : call rbx
0x00000000001038d4 : call rbx
0x00000000001038f4 : call rbx
0x0000000000103919 : call rbx
0x000000000010393e : call rbx
0x000000000010394d : call rbx
0x000000000010396d : call rbx
0x0000000000103992 : call rbx
0x00000000001039b7 : call rbx
0x00000000001039c6 : call rbx
0x00000000001039d5 : call rbx
0x00000000001039f9 : call rbx
0x0000000000103a19 : call rbx
0x0000000000103a3e : call rbx
0x0000000000103a63 : call rbx
0x0000000000103a72 : call rbx
0x0000000000103a92 : call rbx
0x0000000000103ab7 : call rbx
0x0000000000103adc : call rbx
0x0000000000103aeb : call rbx
0x0000000000103afa : call rbx
0x0000000000103b09 : call rbx
0x0000000000103b15 : call rbx
0x0000000000103b3a : call rbx
0x0000000000103b5f : call rbx
0x0000000000103b83 : call rbx
0x0000000000103ba3 : call rbx
0x0000000000103bc8 : call rbx
0x0000000000103bed : call rbx
0x0000000000103bfc : call rbx
0x0000000000103c1c : call rbx
0x0000000000103c41 : call rbx
0x0000000000103c66 : call rbx
0x0000000000103c75 : call rbx
0x0000000000103c84 : call rbx
0x0000000000103ca8 : call rbx
0x0000000000103cc8 : call rbx
0x0000000000103ced : call rbx
0x0000000000103d12 : call rbx
0x0000000000103d21 : call rbx
0x0000000000103d41 : call rbx
0x0000000000103d66 : call rbx
0x0000000000103d8b : call rbx
0x0000000000103d9a : call rbx
0x0000000000103da9 : call rbx
0x0000000000103db8 : call rbx
0x0000000000103ddd : call rbx
0x0000000000103e01 : call rbx
0x0000000000103e21 : call rbx
0x0000000000103e46 : call rbx
0x0000000000103e6b : call rbx
0x0000000000103e7a : call rbx
0x0000000000103e9a : call rbx
0x0000000000103ebf : call rbx
0x0000000000103ee4 : call rbx
0x0000000000103ef3 : call rbx
0x0000000000103f02 : call rbx
0x0000000000103f26 : call rbx
0x0000000000103f46 : call rbx
0x0000000000103f6b : call rbx
0x0000000000103f90 : call rbx
0x0000000000103f9f : call rbx
0x0000000000103fbf : call rbx
0x0000000000103fe4 : call rbx
0x0000000000104009 : call rbx
0x0000000000104018 : call rbx
0x0000000000104027 : call rbx
0x0000000000104036 : call rbx
0x0000000000104084 : call rbx
0x00000000001040a4 : call rbx
0x00000000001040db : call rbx
0x00000000001040fb : call rbx
0x000000000010411b : call rbx
0x000000000010413b : call rbx
0x000000000010415b : call rbx
0x000000000010417b : call rbx
0x000000000010419b : call rbx
0x00000000001041bb : call rbx
0x00000000001041db : call rbx
0x00000000001041fb : call rbx
0x000000000010421b : call rbx
0x000000000010423b : call rbx
0x000000000010425b : call rbx
0x000000000010427b : call rbx
0x000000000010429b : call rbx
0x00000000001042bb : call rbx
0x00000000001042db : call rbx
0x00000000001042fb : call rbx
0x000000000010431b : call rbx
0x000000000010433b : call rbx
0x000000000010435b : call rbx
0x000000000010437b : call rbx
0x000000000010439b : call rbx
0x00000000001043bb : call rbx
0x00000000001043db : call rbx
0x00000000001043fb : call rbx
0x000000000010441b : call rbx
0x000000000010443b : call rbx
0x00000000001044bc : call rbx
0x00000000001044f4 : call rbx
0x0000000000104501 : call rbx
0x0000000000104500 : call rbx
0x0000000000104542 : call rbx
0x000000000010457a : call rbx
0x0000000000104587 : call rbx
0x0000000000104586 : call rbx
0x0000000000104595 : call rbx
0x00000000001045e4 : call rbx
0x000000000010461c : call rbx
0x0000000000104629 : call rbx
0x0000000000104628 : call rbx
0x000000000010466a : call rbx
0x00000000001046a2 : call rbx
0x00000000001046af : call rbx
0x00000000001046ae : call rbx
0x00000000001046bd : call rbx
0x00000000001046cb : call rbx
0x0000000000104727 : call rbx
0x000000000010475f : call rbx
0x000000000010476c : call rbx
0x000000000010476b : call rbx
0x00000000001047ad : call rbx
0x00000000001047e5 : call rbx
0x00000000001047f2 : call rbx
0x00000000001047f1 : call rbx
0x0000000000104800 : call rbx
0x000000000010484f : call rbx
0x0000000000104887 : call rbx
0x0000000000104894 : call rbx
0x0000000000104893 : call rbx
0x00000000001048d5 : call rbx
0x00000000001048f3 : call rbx
0x00000000001048f2 : call rbx
0x0000000000104901 : call rbx
0x000000000010490f : call rbx
0x000000000010491d : call rbx
0x000000000012aa23 : call rbx
0x0000000000172bdd : call rbx
0x0000000000181e4f : call rbx
0x0000000000186127 : call rbx
0x00000000001861a7 : call rbx
0x00000000001862a7 : call rbx
0x0000000000186327 : call rbx
0x00000000001863a7 : call rbx
0x00000000001b5cd3 : call rbx
0x000000000002b398 : call rcx
0x000000000003296a : call rcx
0x00000000000877ac : call rcx
0x00000000000891bc : call rcx
0x0000000000089271 : call rcx
0x0000000000089270 : call rcx
0x000000000008926f : call rcx
0x00000000000e5014 : call rcx
0x0000000000113dd6 : call rcx
0x0000000000114960 : call rcx
0x000000000012d521 : call rcx
0x000000000012d62f : call rcx
0x0000000000132591 : call rcx
0x0000000000132789 : call rcx
0x0000000000135260 : call rcx
0x0000000000135429 : call rcx
0x0000000000135bc1 : call rcx
0x000000000013b4dd : call rcx
0x000000000013bf93 : call rcx
0x00000000001439f0 : call rcx
0x0000000000194fd7 : call rcx
0x0000000000194fdb : call rcx
0x0000000000194fd7 : call rcx
0x0000000000194fdf : call rcx
0x0000000000194fdb : call rcx
0x0000000000194fd7 : call rcx
0x0000000000194fe7 : call rcx
0x0000000000194fdf : call rcx
0x0000000000194fef : call rcx
0x000000000019500b : call rcx
0x00000000001a0b1b : call rcx
0x00000000001abfdb : call rcx
0x00000000001b5aeb : call rcx
0x00000000001b5fdb : call rcx
0x00000000001b665b : call rcx
0x00000000001b741b : call rcx
0x00000000001bc06b : call rcx
0x00000000001bc1bb : call rcx
0x0000000000023e56 : call rdi
0x0000000000023ef9 : call rdi
0x0000000000025355 : call rdi
0x0000000000025b5d : call rdi
0x0000000000029a76 : call rdi
0x000000000003730d : call rdi
0x0000000000037323 : call rdi
0x000000000003734a : call rdi
0x0000000000037365 : call rdi
0x00000000000378ba : call rdi
0x0000000000037d6f : call rdi
0x0000000000038387 : call rdi
0x0000000000081a6c : call rdi
0x0000000000089031 : call rdi
0x000000000012a618 : call rdi
0x0000000000180260 : call rdi
0x0000000000181e5b : call rdi
0x0000000000181e5f : call rdi
0x0000000000181e5b : call rdi
0x000000000018830b : call rdi
0x00000000001891a3 : call rdi
0x00000000001892c7 : call rdi
0x000000000018976f : call rdi
0x00000000001a07f3 : call rdi
0x00000000001aa233 : call rdi
0x00000000001aa7bb : call rdi
0x00000000001ab7e3 : call rdi
0x00000000001b19e3 : call rdi
0x00000000001b1e5b : call rdi
0x0000000000039fce : call rdx
0x0000000000039ff6 : call rdx
0x000000000003a368 : call rdx
0x000000000003a426 : call rdx
0x00000000000c995d : call rdx
0x00000000000cc4f4 : call rdx
0x000000000012de47 : call rdx
0x0000000000135d0d : call rdx
0x000000000013a983 : call rdx
0x000000000013c2f2 : call rdx
0x0000000000173e68 : call rdx
0x000000000018a003 : call rdx
0x000000000019584b : call rdx
0x0000000000195a13 : call rdx
0x0000000000195d37 : call rdx
0x000000000019622f : call rdx
0x000000000019fa23 : call rdx
0x00000000001a0a63 : call rdx
0x00000000001a2c93 : call rdx
0x00000000001a80d3 : call rdx
0x00000000001b8b23 : call rdx
0x0000000000021be3 : call rsi
0x0000000000025595 : call rsi
0x00000000000282b4 : call rsi
0x0000000000028abf : call rsi
0x000000000002918c : call rsi
0x0000000000038f71 : call rsi
0x00000000000391af : call rsi
0x0000000000039230 : call rsi
0x000000000003926b : call rsi
0x00000000000bb024 : call rsi
0x00000000000c8fb5 : call rsi
0x000000000012c030 : call rsi
0x000000000013a791 : call rsi
0x000000000013a871 : call rsi
0x0000000000184132 : call rsi
0x000000000018906f : call rsi
0x000000000018906e : call rsi
0x0000000000189ebb : call rsi
0x0000000000189f33 : call rsi
0x0000000000189fe3 : call rsi
0x00000000001957a7 : call rsi
0x0000000000195c93 : call rsi
0x00000000001961cb : call rsi
0x00000000001a28bb : call rsi
0x00000000001a5663 : call rsi
0x00000000001aa58b : call rsi
0x00000000001aa9e3 : call rsi
0x00000000001af453 : call rsi
0x00000000001b1b13 : call rsi
0x00000000001b1fa3 : call rsi
0x00000000001b547b : call rsi
0x00000000001b64ab : call rsi
0x0000000000024076 : call rsp
0x000000000002480a : call rsp
0x0000000000024a46 : call rsp
0x0000000000029c4a : call rsp
0x00000000000acb09 : call rsp
0x00000000000bbdb5 : call rsp
0x00000000000bc210 : call rsp
0x00000000000bc26f : call rsp
0x00000000000cf30c : call rsp
0x000000000011ff61 : call rsp
0x000000000012a2b3 : call rsp
0x000000000012a323 : call rsp
0x000000000012a517 : call rsp
0x000000000013c0be : call rsp
0x0000000000172b73 : call rsp
0x000000000017f410 : call rsp
0x0000000000186893 : call rsp
0x00000000001868bb : call rsp
0x00000000001868d3 : call rsp
0x0000000000188a6b : call rsp
0x0000000000188a6a : call rsp
0x0000000000188aa7 : call rsp
0x0000000000188aa6 : call rsp
0x0000000000188aeb : call rsp
0x0000000000188aea : call rsp
0x0000000000188cc3 : call rsp
0x0000000000188cc2 : call rsp
0x0000000000188cdb : call rsp
0x0000000000188cda : call rsp
0x0000000000189203 : call rsp
0x00000000001895a7 : call rsp
0x0000000000189c13 : call rsp
0x0000000000189c2f : call rsp
0x00000000001958d3 : call rsp
0x0000000000195dff : call rsp
0x0000000000196007 : call rsp
0x000000000019600f : call rsp
0x00000000001962f7 : call rsp
0x000000000019668b : call rsp
0x0000000000196793 : call rsp
0x0000000000196853 : call rsp
0x00000000001969d3 : call rsp
0x0000000000196b9b : call rsp
0x0000000000196beb : call rsp
0x0000000000196c3b : call rsp
0x0000000000196d4b : call rsp
0x0000000000197043 : call rsp
0x00000000001971b3 : call rsp
0x00000000001972fb : call rsp
0x000000000019766b : call rsp
0x000000000019772b : call rsp
0x00000000001977b3 : call rsp
0x00000000001977d3 : call rsp
0x00000000001978fb : call rsp
0x0000000000197973 : call rsp
0x0000000000197a13 : call rsp
0x0000000000197ccb : call rsp
0x0000000000197d23 : call rsp
0x0000000000197dab : call rsp
0x0000000000197dfb : call rsp
0x0000000000197eb3 : call rsp
0x0000000000198053 : call rsp
0x000000000019821b : call rsp
0x00000000001982cb : call rsp
0x00000000001984e3 : call rsp
0x0000000000198553 : call rsp
0x0000000000198783 : call rsp
0x00000000001987e3 : call rsp
0x0000000000198c1b : call rsp
0x0000000000198c1a : call rsp
0x0000000000198cc3 : call rsp
0x0000000000198cc2 : call rsp
0x0000000000198d8b : call rsp
0x0000000000198dc3 : call rsp
0x0000000000198edb : call rsp
0x00000000001991c3 : call rsp
0x0000000000199293 : call rsp
0x000000000019930b : call rsp
0x0000000000199393 : call rsp
0x000000000019941b : call rsp
0x000000000019948b : call rsp
0x0000000000199933 : call rsp
0x00000000001999b3 : call rsp
0x0000000000199b4b : call rsp
0x0000000000199c4b : call rsp
0x0000000000199f33 : call rsp
0x0000000000199fa3 : call rsp
0x000000000019a213 : call rsp
0x000000000019a3f3 : call rsp
0x000000000019a463 : call rsp
0x000000000019a6b3 : call rsp
0x000000000019a8d3 : call rsp
0x000000000019a90b : call rsp
0x000000000019aa23 : call rsp
0x000000000019ab13 : call rsp
0x000000000019aba3 : call rsp
0x000000000019acd3 : call rsp
0x000000000019aceb : call rsp
0x000000000019addb : call rsp
0x000000000019adeb : call rsp
0x000000000019ae6b : call rsp
0x000000000019aeab : call rsp
0x000000000019afe3 : call rsp
0x000000000019b0fb : call rsp
0x000000000019b2e3 : call rsp
0x000000000019b403 : call rsp
0x000000000019b443 : call rsp
0x000000000019b45b : call rsp
0x000000000019b4ab : call rsp
0x000000000019b533 : call rsp
0x000000000019b753 : call rsp
0x000000000019b7db : call rsp
0x000000000019b89b : call rsp
0x000000000019b8cb : call rsp
0x000000000019b9ab : call rsp
0x000000000019bab3 : call rsp
0x00000000001a0153 : call rsp
0x00000000001a1683 : call rsp
0x00000000001a7c83 : call rsp
0x000000000012fae9 : cdq ; add byte ptr [rip - 0x76b40000], al ; ret
0x000000000002c534 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000001b5475 : cdq ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x000000000001f92b : cdq ; cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000134d83 : cdq ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000013366f : cdq ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffee
0x0000000000188ea8 : cdq ; fcompi st(3) ; jmp rcx
0x0000000000188ec0 : cdq ; fcompi st(3) ; jmp rcx
0x00000000001ade31 : cdq ; hlt ; jmp qword ptr [rcx]
0x000000000003a6a4 : cdq ; idiv rsi ; ret
0x000000000003a6b4 : cdq ; idiv rsi ; ret
0x00000000001852e0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000b33f3 : cdq ; or eax, 0x3d8d4800 ; ret
0x00000000000711f3 : cdq ; or eax, 0xc2890000 ; jmp 0x7118f
0x00000000000fc1ee : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000012415d : cdqe ; shr rax, 4 ; ret
0x0000000000061d01 : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000000821f3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000fdb18 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000517ba : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000002b0ad : clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x000000000005715d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000ac9c8 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000aca4c : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000aca6c : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000070cae : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000959e3 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad93 : clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000001bb33d : clc ; add dword ptr [rax], eax ; jo 0x1bb2dd ; sti ; jmp qword ptr [rdx]
0x0000000000099aa6 : clc ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x0000000000033390 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000c23b0 : clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000aa8c4 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x0000000000123025 : clc ; add eax, 0x10 ; ret
0x00000000000c2769 : clc ; add eax, 0x2907fec1 ; ret 0x8944
0x000000000004d6cf : clc ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000012dda1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000009f216 : clc ; add rax, r8 ; ret
0x000000000009f259 : clc ; add rax, r8 ; ret
0x000000000008e8f8 : clc ; add rax, rcx ; ret
0x00000000000965af : clc ; add rax, rcx ; ret
0x00000000000aaec5 : clc ; add rax, rcx ; ret
0x0000000000116472 : clc ; add rsp, 8 ; ret
0x0000000000116578 : clc ; add rsp, 8 ; ret
0x0000000000117b02 : clc ; add rsp, 8 ; ret
0x0000000000117bba : clc ; add rsp, 8 ; ret
0x000000000002df21 : clc ; and eax, 0x7f ; ret
0x00000000001193b7 : clc ; and eax, 0xffffff ; ret
0x00000000001ab148 : clc ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b2a08 : clc ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000119391 : clc ; bswap eax ; ret
0x0000000000119401 : clc ; bswap eax ; ret
0x000000000011940f : clc ; bswap eax ; ret
0x0000000000119423 : clc ; bswap eax ; ret
0x00000000001bb8f2 : clc ; call qword ptr [rax]
0x00000000001bbf7a : clc ; call qword ptr [rax]
0x00000000001bb592 : clc ; call qword ptr [rbx]
0x00000000001bb591 : clc ; call qword ptr [rbx]
0x00000000001bc372 : clc ; call qword ptr [rcx]
0x00000000001bbf4a : clc ; call qword ptr [rdi]
0x00000000001bc122 : clc ; call qword ptr [rdi]
0x00000000001bae72 : clc ; call qword ptr [rdx]
0x00000000001bc06a : clc ; call rcx
0x000000000019a3f2 : clc ; call rsp
0x000000000019a462 : clc ; call rsp
0x000000000019a6b2 : clc ; call rsp
0x000000000019a8d2 : clc ; call rsp
0x000000000019a90a : clc ; call rsp
0x0000000000123001 : clc ; cmc ; je 0x122ffd ; pop rbx ; ret
0x0000000000003af6 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016fa09 : clc ; cmp rcx, rax ; jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016fa08 : clc ; cmp rcx, rax ; jne 0x16fa3c ; xor eax, eax ; ret
0x0000000000170849 : clc ; cmp rcx, rax ; jne 0x17087b ; xor eax, eax ; ret
0x0000000000170848 : clc ; cmp rcx, rax ; jne 0x17087c ; xor eax, eax ; ret
0x000000000003a6a2 : clc ; cqo ; idiv rsi ; ret
0x000000000003a6b2 : clc ; cqo ; idiv rsi ; ret
0x00000000000878d0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000078b0c : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000795bc : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000fe5f3 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002db97 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004b791 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004c8b1 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004cfcc : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007d35f : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007d47b : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000095a60 : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f8470 : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001402a9 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000144145 : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001400b2 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000096e85 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000fef6f : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x0000000000105dd5 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000004d6d4 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000059473 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed90 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000004ede3 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000138409 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x0000000000075f7d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000076e6d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000019a6aa : clc ; inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x00000000000ffd99 : clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000002b76b : clc ; inc dword ptr [rcx - 0x77] ; ret
0x000000000019a4da : clc ; inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x0000000000026cfe : clc ; jg 0x26c8d ; ret 0x5c77
0x000000000019e598 : clc ; jl 0x19e587 ; jmp rsp
0x00000000001bab22 : clc ; jmp qword ptr [rbx]
0x00000000001baeba : clc ; jmp qword ptr [rcx]
0x00000000001bb92a : clc ; jmp qword ptr [rcx]
0x000000000019a45a : clc ; jmp qword ptr [rsp + rdx*8 + 1]
0x00000000000c00b5 : clc ; jmp rax
0x000000000004b608 : clc ; jmp rax
0x00000000000c00b5 : clc ; jmp rax
0x00000000000d3fe7 : clc ; jmp rax
0x00000000000dfd79 : clc ; jmp rax
0x00000000000e0090 : clc ; jmp rax
0x000000000019a382 : clc ; jmp rsp
0x000000000019a4aa : clc ; jmp rsp
0x000000000019a4e2 : clc ; jmp rsp
0x000000000019a5ea : clc ; jmp rsp
0x000000000019a5e9 : clc ; jmp rsp
0x000000000019a5e8 : clc ; jmp rsp
0x000000000019a68a : clc ; jmp rsp
0x000000000019a689 : clc ; jmp rsp
0x000000000017282a : clc ; jne 0x172937 ; ret
0x0000000000172829 : clc ; jne 0x172938 ; ret
0x00000000000945a7 : clc ; jne 0x94481 ; ret
0x00000000000945e3 : clc ; jne 0x94481 ; ret
0x00000000000947cd : clc ; jne 0x94481 ; ret
0x00000000000948cc : clc ; jne 0x94481 ; ret
0x00000000001153e4 : clc ; leave ; ret
0x000000000011553c : clc ; leave ; ret
0x00000000001860f8 : clc ; loope 0x1860fd ; jmp qword ptr [rdi]
0x0000000000186178 : clc ; loope 0x18617d ; jmp qword ptr [rdi]
0x00000000001861f8 : clc ; loope 0x1861fd ; jmp qword ptr [rdi]
0x0000000000186278 : clc ; loope 0x18627d ; jmp qword ptr [rdi]
0x00000000001862f8 : clc ; loope 0x1862fd ; jmp qword ptr [rdi]
0x0000000000186378 : clc ; loope 0x18637d ; jmp qword ptr [rdi]
0x00000000001b64a8 : clc ; loope 0x1b64a9 ; call rsi
0x000000000019ecb8 : clc ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000000ff2c8 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009ea18 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000183f42 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000183f41 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000152a07 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553d7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157da7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153377 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d47 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158717 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ac77 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d747 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000160267 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000153577 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f47 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158917 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015abe7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d6b7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001601d7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000153777 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156147 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b17 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ab57 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d627 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000160147 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152a23 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553f3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157dc3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015af03 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015d9d3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001604f3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009fb8c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000009fb8b : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a02df : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a02de : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a0a2c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a0a2b : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000004a1d2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000001a9a48 : clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x000000000002121c : clc ; neg eax ; ret
0x000000000008b3c7 : clc ; or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x000000000008b371 : clc ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00000000001a6388 : clc ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0a28 : clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000009f516 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009735b : clc ; pop rbx ; ret
0x000000000007469a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000014299f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000c89ad : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00000000000484c5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bfd0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000115b71 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x0000000000072cbb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000072cff : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000007bf78 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000007b595 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000019a682 : clc ; push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x0000000000002bd1 : clc ; ret
0x0000000000002bd5 : clc ; ret
0x0000000000002be5 : clc ; ret
0x0000000000002bed : clc ; ret
0x0000000000002bf5 : clc ; ret
0x0000000000002bfd : clc ; ret
0x0000000000002c05 : clc ; ret
0x0000000000002c09 : clc ; ret
0x0000000000002c11 : clc ; ret
0x0000000000002d19 : clc ; ret
0x0000000000002d25 : clc ; ret
0x000000000002122f : clc ; ret
0x00000000000489bc : clc ; ret
0x00000000000489bb : clc ; ret
0x000000000004a1d8 : clc ; ret
0x000000000004a60f : clc ; ret
0x0000000000070159 : clc ; ret
0x00000000000710d4 : clc ; ret
0x000000000007cb42 : clc ; ret
0x0000000000089a7a : clc ; ret
0x000000000008b27a : clc ; ret
0x000000000008b8ba : clc ; ret
0x000000000008ba7f : clc ; ret
0x000000000008bad6 : clc ; ret
0x000000000008d45c : clc ; ret
0x000000000008d6e0 : clc ; ret
0x000000000008eb35 : clc ; ret
0x000000000008eb6a : clc ; ret
0x000000000008f321 : clc ; ret
0x000000000008f42d : clc ; ret
0x000000000008f4db : clc ; ret
0x000000000008f517 : clc ; ret
0x000000000008f701 : clc ; ret
0x000000000008f800 : clc ; ret
0x00000000000963d2 : clc ; ret
0x0000000000096725 : clc ; ret
0x000000000009e8ea : clc ; ret
0x000000000009e904 : clc ; ret
0x000000000009e919 : clc ; ret
0x000000000009e92a : clc ; ret
0x000000000009e93d : clc ; ret
0x000000000009e94d : clc ; ret
0x000000000009e960 : clc ; ret
0x000000000009e97e : clc ; ret
0x000000000009e9a8 : clc ; ret
0x000000000009e9b8 : clc ; ret
0x000000000009e9c5 : clc ; ret
0x000000000009e9d5 : clc ; ret
0x000000000009e9e9 : clc ; ret
0x000000000009e9f4 : clc ; ret
0x000000000009ea08 : clc ; ret
0x000000000009ea45 : clc ; ret
0x000000000009ec72 : clc ; ret
0x000000000009ecd2 : clc ; ret
0x000000000009f02b : clc ; ret
0x000000000009f0d5 : clc ; ret
0x000000000009f11e : clc ; ret
0x000000000009f1b3 : clc ; ret
0x000000000009f860 : clc ; ret
0x000000000009fb93 : clc ; ret
0x000000000009fb92 : clc ; ret
0x000000000009ffeb : clc ; ret
0x00000000000a02e6 : clc ; ret
0x00000000000a02e5 : clc ; ret
0x00000000000a073e : clc ; ret
0x00000000000a0a33 : clc ; ret
0x00000000000a0a32 : clc ; ret
0x00000000000a0e8b : clc ; ret
0x00000000000a2a1c : clc ; ret
0x00000000000a2a73 : clc ; ret
0x00000000000a2a8b : clc ; ret
0x00000000000a2a9d : clc ; ret
0x00000000000a2ab3 : clc ; ret
0x00000000000a2acb : clc ; ret
0x00000000000a2ae1 : clc ; ret
0x00000000000a2b03 : clc ; ret
0x00000000000a2b21 : clc ; ret
0x00000000000a2b3f : clc ; ret
0x00000000000a2b65 : clc ; ret
0x00000000000a2b87 : clc ; ret
0x00000000000a2ba5 : clc ; ret
0x00000000000a2bc5 : clc ; ret
0x00000000000a2be9 : clc ; ret
0x00000000000a2c09 : clc ; ret
0x00000000000a2c29 : clc ; ret
0x00000000000a2c49 : clc ; ret
0x00000000000a53ec : clc ; ret
0x00000000000a5443 : clc ; ret
0x00000000000a545b : clc ; ret
0x00000000000a546d : clc ; ret
0x00000000000a5483 : clc ; ret
0x00000000000a549b : clc ; ret
0x00000000000a54b1 : clc ; ret
0x00000000000a54d3 : clc ; ret
0x00000000000a54f1 : clc ; ret
0x00000000000a550f : clc ; ret
0x00000000000a5535 : clc ; ret
0x00000000000a5557 : clc ; ret
0x00000000000a5575 : clc ; ret
0x00000000000a5595 : clc ; ret
0x00000000000a55b9 : clc ; ret
0x00000000000a55d9 : clc ; ret
0x00000000000a55f9 : clc ; ret
0x00000000000a5619 : clc ; ret
0x00000000000a56d6 : clc ; ret
0x00000000000a5779 : clc ; ret
0x00000000000a57f5 : clc ; ret
0x00000000000a585f : clc ; ret
0x00000000000a5872 : clc ; ret
0x00000000000a5911 : clc ; ret
0x00000000000a59c4 : clc ; ret
0x00000000000a6fd2 : clc ; ret
0x00000000000a8142 : clc ; ret
0x00000000000a87e2 : clc ; ret
0x00000000000aa219 : clc ; ret
0x00000000000aa5ec : clc ; ret
0x00000000000aa5eb : clc ; ret
0x00000000000aaf91 : clc ; ret
0x00000000000ac5b3 : clc ; ret
0x00000000000ac5b2 : clc ; ret
0x00000000000ac73c : clc ; ret
0x00000000000ac832 : clc ; ret
0x00000000000acc1f : clc ; ret
0x00000000000f7a7c : clc ; ret
0x00000000000fd30f : clc ; ret
0x00000000000fd3bf : clc ; ret
0x0000000000107557 : clc ; ret
0x000000000010756e : clc ; ret
0x0000000000107599 : clc ; ret
0x000000000010adb1 : clc ; ret
0x000000000010b611 : clc ; ret
0x0000000000110c09 : clc ; ret
0x00000000001179c2 : clc ; ret
0x000000000014a788 : clc ; ret
0x000000000014db44 : clc ; ret
0x000000000014e034 : clc ; ret
0x000000000014e3d4 : clc ; ret
0x00000000001528bb : clc ; ret
0x00000000001528ba : clc ; ret
0x00000000001528f9 : clc ; ret
0x0000000000152931 : clc ; ret
0x0000000000152930 : clc ; ret
0x000000000015296f : clc ; ret
0x00000000001529a7 : clc ; ret
0x00000000001529cf : clc ; ret
0x00000000001529f7 : clc ; ret
0x0000000000152a0f : clc ; ret
0x0000000000152a27 : clc ; ret
0x00000000001531e3 : clc ; ret
0x000000000015322b : clc ; ret
0x0000000000153269 : clc ; ret
0x00000000001532a5 : clc ; ret
0x00000000001532df : clc ; ret
0x0000000000153317 : clc ; ret
0x000000000015333f : clc ; ret
0x0000000000153367 : clc ; ret
0x000000000015337f : clc ; ret
0x00000000001533e3 : clc ; ret
0x000000000015342b : clc ; ret
0x0000000000153469 : clc ; ret
0x00000000001534a1 : clc ; ret
0x00000000001534df : clc ; ret
0x0000000000153517 : clc ; ret
0x000000000015353f : clc ; ret
0x0000000000153567 : clc ; ret
0x000000000015357f : clc ; ret
0x00000000001535e3 : clc ; ret
0x000000000015362b : clc ; ret
0x0000000000153669 : clc ; ret
0x00000000001536a1 : clc ; ret
0x00000000001536df : clc ; ret
0x0000000000153717 : clc ; ret
0x000000000015373f : clc ; ret
0x0000000000153767 : clc ; ret
0x000000000015377f : clc ; ret
0x000000000015528b : clc ; ret
0x000000000015528a : clc ; ret
0x00000000001552c9 : clc ; ret
0x0000000000155301 : clc ; ret
0x0000000000155300 : clc ; ret
0x000000000015533f : clc ; ret
0x0000000000155377 : clc ; ret
0x000000000015539f : clc ; ret
0x00000000001553c7 : clc ; ret
0x00000000001553df : clc ; ret
0x00000000001553f7 : clc ; ret
0x0000000000155bb3 : clc ; ret
0x0000000000155bfb : clc ; ret
0x0000000000155c39 : clc ; ret
0x0000000000155c75 : clc ; ret
0x0000000000155caf : clc ; ret
0x0000000000155ce7 : clc ; ret
0x0000000000155d0f : clc ; ret
0x0000000000155d37 : clc ; ret
0x0000000000155d4f : clc ; ret
0x0000000000155db3 : clc ; ret
0x0000000000155dfb : clc ; ret
0x0000000000155e39 : clc ; ret
0x0000000000155e71 : clc ; ret
0x0000000000155eaf : clc ; ret
0x0000000000155ee7 : clc ; ret
0x0000000000155f0f : clc ; ret
0x0000000000155f37 : clc ; ret
0x0000000000155f4f : clc ; ret
0x0000000000155fb3 : clc ; ret
0x0000000000155ffb : clc ; ret
0x0000000000156039 : clc ; ret
0x0000000000156071 : clc ; ret
0x00000000001560af : clc ; ret
0x00000000001560e7 : clc ; ret
0x000000000015610f : clc ; ret
0x0000000000156137 : clc ; ret
0x000000000015614f : clc ; ret
0x0000000000157c5b : clc ; ret
0x0000000000157c5a : clc ; ret
0x0000000000157c99 : clc ; ret
0x0000000000157cd1 : clc ; ret
0x0000000000157cd0 : clc ; ret
0x0000000000157d0f : clc ; ret
0x0000000000157d47 : clc ; ret
0x0000000000157d6f : clc ; ret
0x0000000000157d97 : clc ; ret
0x0000000000157daf : clc ; ret
0x0000000000157dc7 : clc ; ret
0x0000000000158583 : clc ; ret
0x00000000001585cb : clc ; ret
0x0000000000158609 : clc ; ret
0x0000000000158645 : clc ; ret
0x000000000015867f : clc ; ret
0x00000000001586b7 : clc ; ret
0x00000000001586df : clc ; ret
0x0000000000158707 : clc ; ret
0x000000000015871f : clc ; ret
0x0000000000158783 : clc ; ret
0x00000000001587cb : clc ; ret
0x0000000000158809 : clc ; ret
0x0000000000158841 : clc ; ret
0x000000000015887f : clc ; ret
0x00000000001588b7 : clc ; ret
0x00000000001588df : clc ; ret
0x0000000000158907 : clc ; ret
0x000000000015891f : clc ; ret
0x0000000000158983 : clc ; ret
0x00000000001589cb : clc ; ret
0x0000000000158a09 : clc ; ret
0x0000000000158a41 : clc ; ret
0x0000000000158a7f : clc ; ret
0x0000000000158ab7 : clc ; ret
0x0000000000158adf : clc ; ret
0x0000000000158b07 : clc ; ret
0x0000000000158b1f : clc ; ret
0x000000000015ab5f : clc ; ret
0x000000000015ab5e : clc ; ret
0x000000000015abef : clc ; ret
0x000000000015abee : clc ; ret
0x000000000015ac7f : clc ; ret
0x000000000015ac7e : clc ; ret
0x000000000015af07 : clc ; ret
0x000000000015d62f : clc ; ret
0x000000000015d62e : clc ; ret
0x000000000015d6bf : clc ; ret
0x000000000015d6be : clc ; ret
0x000000000015d74f : clc ; ret
0x000000000015d74e : clc ; ret
0x000000000015d9d7 : clc ; ret
0x000000000016014f : clc ; ret
0x000000000016014e : clc ; ret
0x00000000001601df : clc ; ret
0x00000000001601de : clc ; ret
0x000000000016026f : clc ; ret
0x000000000016026e : clc ; ret
0x00000000001604f7 : clc ; ret
0x0000000000166c58 : clc ; ret
0x0000000000166cb0 : clc ; ret
0x0000000000166cc6 : clc ; ret
0x0000000000166cd8 : clc ; ret
0x0000000000166cee : clc ; ret
0x0000000000166cf6 : clc ; ret
0x0000000000166d0c : clc ; ret
0x0000000000166d1e : clc ; ret
0x0000000000166d2c : clc ; ret
0x0000000000166d3e : clc ; ret
0x0000000000166d4e : clc ; ret
0x0000000000166d5e : clc ; ret
0x0000000000166d6e : clc ; ret
0x0000000000166d80 : clc ; ret
0x0000000000166da0 : clc ; ret
0x0000000000166dc0 : clc ; ret
0x0000000000168f48 : clc ; ret
0x0000000000168fe3 : clc ; ret
0x000000000016e3b6 : clc ; ret
0x000000000016e3d5 : clc ; ret
0x000000000016e3e6 : clc ; ret
0x000000000016e3f8 : clc ; ret
0x000000000016e40e : clc ; ret
0x000000000016e420 : clc ; ret
0x0000000000172a5d : clc ; ret
0x0000000000172a5c : clc ; ret
0x00000000001b90c8 : clc ; ret
0x0000000000194332 : clc ; ret 0x6e1f
0x0000000000194331 : clc ; ret 0x6e1f
0x00000000001946ba : clc ; ret 0x6e1f
0x00000000001946b9 : clc ; ret 0x6e1f
0x00000000000230b4 : clc ; ret 6
0x00000000001193a1 : clc ; ror ax, 8 ; ret
0x00000000000038ec : clc ; salc ; jb 0x3970 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003a633 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000011909b : clc ; sar rax, 6 ; ret
0x00000000000d4f61 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000048a2a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048a29 : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000119437 : clc ; shr eax, 0x18 ; ret
0x0000000000195581 : clc ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x00000000001ab288 : clc ; sub esi, edx ; jmp rcx
0x000000000014a64c : clc ; sub rax, r8 ; ret
0x000000000014a8a1 : clc ; sub rax, rdx ; ret
0x000000000002b392 : clc ; test rcx, rcx ; je 0x2b3a0 ; call rcx
0x00000000001a7b78 : clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001adae8 : clc ; xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001ace34 : cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], cl ; jmp qword ptr [rcx]
0x0000000000034ab5 : cld ; adc eax, 0x540f6600 ; ret 0xf66
0x000000000019804d : cld ; add byte ptr [rax], al ; add al, 0x32 ; out dx, eax ; call rsp
0x00000000001a11ac : cld ; add byte ptr [rax], al ; add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000000cda22 : cld ; add byte ptr [rax], al ; ret
0x00000000000aac1f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac3f : cld ; add eax, dword ptr [rax] ; ret
0x00000000001b0934 : cld ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0834 : cld ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b0634 : cld ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000195c12 : cld ; call qword ptr [rax + 0x10fffc35]
0x0000000000195bd6 : cld ; call qword ptr [rax + 0x10fffc36]
0x0000000000195c1a : cld ; call qword ptr [rax + 0x10fffc38]
0x0000000000195bde : cld ; call qword ptr [rax + 0x10fffc39]
0x0000000000195c22 : cld ; call qword ptr [rax + 0x10fffc3b]
0x0000000000195be6 : cld ; call qword ptr [rax + 0x10fffc3c]
0x0000000000195c2a : cld ; call qword ptr [rax + 0x10fffc3e]
0x0000000000195bee : cld ; call qword ptr [rax + 0x10fffc3f]
0x0000000000195bed : cld ; call qword ptr [rax + 0x10fffc3f]
0x0000000000195c32 : cld ; call qword ptr [rax + 0x10fffc41]
0x0000000000195c31 : cld ; call qword ptr [rax + 0x10fffc41]
0x0000000000195bf6 : cld ; call qword ptr [rax + 0x10fffc42]
0x0000000000195bf5 : cld ; call qword ptr [rax + 0x10fffc42]
0x0000000000195c3a : cld ; call qword ptr [rax + 0x10fffc44]
0x0000000000195c39 : cld ; call qword ptr [rax + 0x10fffc44]
0x0000000000195bfe : cld ; call qword ptr [rax + 0x10fffc45]
0x0000000000195bfd : cld ; call qword ptr [rax + 0x10fffc45]
0x0000000000195c42 : cld ; call qword ptr [rax + 0x10fffc47]
0x0000000000195c41 : cld ; call qword ptr [rax + 0x10fffc47]
0x0000000000195c06 : cld ; call qword ptr [rax + 0x10fffc48]
0x0000000000195c05 : cld ; call qword ptr [rax + 0x10fffc48]
0x0000000000195b7a : cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b72 : cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000195b6a : cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195b62 : cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000195b5a : cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195b92 : cld ; call qword ptr [rax + 0x10fffc58]
0x0000000000196552 : cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001953ea : cld ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195966 : cld ; call qword ptr [rax + 0x20fffc5f]
0x0000000000195c7a : cld ; call qword ptr [rax + 0x20fffc83]
0x0000000000195e52 : cld ; call qword ptr [rax + 0x20fffc87]
0x0000000000196172 : cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195732 : cld ; call qword ptr [rax - 0x1f0003e4]
0x00000000001956de : cld ; call qword ptr [rax - 0x1f0003eb]
0x00000000001953e6 : cld ; call qword ptr [rax - 0x6f0003f5]
0x000000000019545e : cld ; call qword ptr [rax]
0x00000000001955ce : cld ; call qword ptr [rax]
0x000000000019563a : cld ; call qword ptr [rax]
0x0000000000195652 : cld ; call qword ptr [rax]
0x000000000019566e : cld ; call qword ptr [rax]
0x00000000001956b6 : cld ; call qword ptr [rax]
0x00000000001956fe : cld ; call qword ptr [rax]
0x0000000000195712 : cld ; call qword ptr [rax]
0x000000000019576e : cld ; call qword ptr [rax]
0x0000000000195986 : cld ; call qword ptr [rax]
0x0000000000195b5e : cld ; call qword ptr [rax]
0x0000000000195b66 : cld ; call qword ptr [rax]
0x0000000000195b6e : cld ; call qword ptr [rax]
0x0000000000195b76 : cld ; call qword ptr [rax]
0x0000000000195b7e : cld ; call qword ptr [rax]
0x0000000000195b96 : cld ; call qword ptr [rax]
0x0000000000195bd2 : cld ; call qword ptr [rax]
0x0000000000195bda : cld ; call qword ptr [rax]
0x0000000000195bd9 : cld ; call qword ptr [rax]
0x0000000000195be2 : cld ; call qword ptr [rax]
0x0000000000195bea : cld ; call qword ptr [rax]
0x0000000000195bf2 : cld ; call qword ptr [rax]
0x0000000000195bfa : cld ; call qword ptr [rax]
0x0000000000195bf9 : cld ; call qword ptr [rax]
0x0000000000195c02 : cld ; call qword ptr [rax]
0x0000000000195c01 : cld ; call qword ptr [rax]
0x0000000000195c0a : cld ; call qword ptr [rax]
0x0000000000195c09 : cld ; call qword ptr [rax]
0x0000000000195c16 : cld ; call qword ptr [rax]
0x0000000000195c1e : cld ; call qword ptr [rax]
0x0000000000195c16 : cld ; call qword ptr [rax]
0x0000000000195c26 : cld ; call qword ptr [rax]
0x0000000000195c2e : cld ; call qword ptr [rax]
0x0000000000195c2d : cld ; call qword ptr [rax]
0x0000000000195c36 : cld ; call qword ptr [rax]
0x0000000000195c35 : cld ; call qword ptr [rax]
0x0000000000195c3e : cld ; call qword ptr [rax]
0x0000000000195c3d : cld ; call qword ptr [rax]
0x0000000000195c46 : cld ; call qword ptr [rax]
0x0000000000195c45 : cld ; call qword ptr [rax]
0x0000000000195c5a : cld ; call qword ptr [rax]
0x0000000000195e72 : cld ; call qword ptr [rax]
0x0000000000195e8e : cld ; call qword ptr [rax]
0x0000000000196152 : cld ; call qword ptr [rax]
0x000000000019636a : cld ; call qword ptr [rax]
0x0000000000196556 : cld ; call qword ptr [rax]
0x00000000001a778a : cld ; call qword ptr [rax]
0x000000000019566e : cld ; call qword ptr [rax]
0x0000000000195f3a : cld ; call qword ptr [rdx + 0x12fffc79]
0x0000000000195f32 : cld ; call qword ptr [rdx + 0x12fffc7a]
0x0000000000195f2a : cld ; call qword ptr [rdx + 0x12fffc7b]
0x0000000000195f22 : cld ; call qword ptr [rdx + 0x12fffc7c]
0x0000000000195f1a : cld ; call qword ptr [rdx + 0x12fffc7d]
0x0000000000195a4a : cld ; call qword ptr [rdx + 0x22fffc51]
0x000000000019583a : cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195d26 : cld ; call qword ptr [rdx + 0x22fffc85]
0x000000000019621e : cld ; call qword ptr [rdx + 0x22fffcac]
0x000000000019581a : cld ; call qword ptr [rdx]
0x0000000000195d46 : cld ; call qword ptr [rdx]
0x0000000000195f1e : cld ; call qword ptr [rdx]
0x0000000000195f26 : cld ; call qword ptr [rdx]
0x0000000000195f2e : cld ; call qword ptr [rdx]
0x0000000000195f36 : cld ; call qword ptr [rdx]
0x0000000000195f3e : cld ; call qword ptr [rdx]
0x000000000019623e : cld ; call qword ptr [rdx]
0x0000000000196446 : cld ; call qword ptr [rdx]
0x000000000019644e : cld ; call qword ptr [rdx]
0x00000000001a5eb2 : cld ; call qword ptr [rdx]
0x0000000000195796 : cld ; call qword ptr [rsi + 0x26fffc61]
0x0000000000195cc2 : cld ; call qword ptr [rsi + 0x26fffc82]
0x00000000001961ba : cld ; call qword ptr [rsi + 0x26fffca9]
0x00000000001957b6 : cld ; call qword ptr [rsi]
0x0000000000195ca2 : cld ; call qword ptr [rsi]
0x000000000019619a : cld ; call qword ptr [rsi]
0x00000000001953d6 : cld ; call rax
0x00000000001954fe : cld ; call rax
0x00000000001955b6 : cld ; call rax
0x00000000001955d2 : cld ; call rax
0x000000000019565a : cld ; call rax
0x0000000000195672 : cld ; call rax
0x000000000019568e : cld ; call rax
0x00000000001956ee : cld ; call rax
0x0000000000195742 : cld ; call rax
0x000000000019575e : cld ; call rax
0x0000000000195976 : cld ; call rax
0x0000000000195c8a : cld ; call rax
0x0000000000195e62 : cld ; call rax
0x0000000000195e92 : cld ; call rax
0x000000000019609e : cld ; call rax
0x00000000001960a6 : cld ; call rax
0x00000000001960ae : cld ; call rax
0x00000000001960b6 : cld ; call rax
0x00000000001960be : cld ; call rax
0x0000000000196182 : cld ; call rax
0x000000000019635a : cld ; call rax
0x00000000001963c2 : cld ; call rax
0x00000000001965c6 : cld ; call rax
0x000000000019584a : cld ; call rdx
0x0000000000195a12 : cld ; call rdx
0x0000000000195d36 : cld ; call rdx
0x000000000019622e : cld ; call rdx
0x00000000001957a6 : cld ; call rsi
0x0000000000195c92 : cld ; call rsi
0x00000000001961ca : cld ; call rsi
0x00000000001958d2 : cld ; call rsp
0x0000000000195dfe : cld ; call rsp
0x0000000000196006 : cld ; call rsp
0x000000000019600e : cld ; call rsp
0x00000000001962f6 : cld ; call rsp
0x000000000005c467 : cld ; cmove rsi, r9 ; jmp 0x5c436
0x0000000000172922 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x172938 ; xor eax, eax ; ret
0x0000000000172921 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x172939 ; xor eax, eax ; ret
0x00000000001400ae : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000e32e9 : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000e384f : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000e3ecc : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x000000000019620a : cld ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x0000000000035057 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000001aa034 : cld ; in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001955ca : cld ; inc dword ptr [rax + 0x10fffc35] ; sub ah, bh ; call rax
0x00000000001956da : cld ; inc dword ptr [rax + 0x14] ; cld ; call qword ptr [rax - 0x1f0003eb]
0x000000000019572e : cld ; inc dword ptr [rax + 0x1b] ; cld ; call qword ptr [rax - 0x1f0003e4]
0x00000000001956b2 : cld ; inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00000000001956b1 : cld ; inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x000000000019561a : cld ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000195686 : cld ; inc dword ptr [rax + 0x32] ; cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019568a : cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019546e : cld ; inc dword ptr [rax + 0x40fffbff] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000195972 : cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019575a : cld ; inc dword ptr [rax + 0x61] ; cld ; call rax
0x000000000019570e : cld ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019543e : cld ; inc dword ptr [rax + 7] ; cld ; jmp qword ptr [rax]
0x000000000019573e : cld ; inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x00000000001956ea : cld ; inc dword ptr [rax - 0x2f0003e7] ; sbb bh, ah ; jmp qword ptr [rax]
0x0000000000196356 : cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000019617e : cld ; inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000195e5e : cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195c86 : cld ; inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195666 : cld ; inc dword ptr [rax - 0x7f0003ce] ; xor al, 0xfc ; call qword ptr [rax]
0x000000000019548e : cld ; inc dword ptr [rax - 1] ; sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x00000000001954f6 : cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x000000000019570a : cld ; inc dword ptr [rax] ; and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019657e : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195bbe : cld ; inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019616e : cld ; inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195592 : cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195c76 : cld ; inc dword ptr [rax] ; test ah, bh ; call qword ptr [rax + 0x20fffc83]
0x0000000000195dfa : cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x00000000000aacd7 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aabfe : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000e3fb9 : cld ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x0000000000122b09 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000019600a : cld ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x0000000000195846 : cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001962f2 : cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x000000000019622a : cld ; inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x0000000000195d32 : cld ; inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x000000000019621a : cld ; inc dword ptr [rdx] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx + 0x22fffcac]
0x0000000000195836 : cld ; inc dword ptr [rdx] ; pop rsi ; cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195d22 : cld ; inc dword ptr [rdx] ; xchg ah, bh ; call qword ptr [rdx + 0x22fffc85]
0x00000000001957a2 : cld ; inc dword ptr [rsi + 0x60] ; cld ; call rsi
0x00000000001961c6 : cld ; inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x00000000001961b6 : cld ; inc dword ptr [rsi] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi + 0x26fffca9]
0x00000000001960ce : cld ; inc eax ; pop rcx ; cld ; jmp rax
0x0000000000196376 : cld ; inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x0000000000187f79 : cld ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000187f71 : cld ; int1 ; inc eax ; cld ; int1 ; jmp rax
0x0000000000187f75 : cld ; int1 ; jmp rax
0x0000000000195f10 : cld ; jbe 0x195f16 ; jmp qword ptr [rdx + 0x22fffc7e]
0x00000000000cf50b : cld ; je 0xcf528 ; call 0x8b725
0x0000000000195b52 : cld ; jmp qword ptr [rax + 0x20fffc58]
0x00000000001953ee : cld ; jmp qword ptr [rax]
0x0000000000195442 : cld ; jmp qword ptr [rax]
0x0000000000195446 : cld ; jmp qword ptr [rax]
0x000000000019544a : cld ; jmp qword ptr [rax]
0x0000000000195476 : cld ; jmp qword ptr [rax]
0x00000000001954de : cld ; jmp qword ptr [rax]
0x000000000019561e : cld ; jmp qword ptr [rax]
0x00000000001956f2 : cld ; jmp qword ptr [rax]
0x0000000000195746 : cld ; jmp qword ptr [rax]
0x0000000000195752 : cld ; jmp qword ptr [rax]
0x000000000019596a : cld ; jmp qword ptr [rax]
0x0000000000195b56 : cld ; jmp qword ptr [rax]
0x0000000000195c7e : cld ; jmp qword ptr [rax]
0x0000000000195e4e : cld ; jmp qword ptr [rax]
0x0000000000195e56 : cld ; jmp qword ptr [rax]
0x0000000000195ec6 : cld ; jmp qword ptr [rax]
0x00000000001960ca : cld ; jmp qword ptr [rax]
0x000000000019610e : cld ; jmp qword ptr [rax]
0x0000000000196176 : cld ; jmp qword ptr [rax]
0x00000000001a922a : cld ; jmp qword ptr [rbx]
0x0000000000196442 : cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000195f12 : cld ; jmp qword ptr [rdx + 0x22fffc7e]
0x000000000019583e : cld ; jmp qword ptr [rdx]
0x0000000000195a46 : cld ; jmp qword ptr [rdx]
0x0000000000195a4e : cld ; jmp qword ptr [rdx]
0x0000000000195d2a : cld ; jmp qword ptr [rdx]
0x0000000000195f16 : cld ; jmp qword ptr [rdx]
0x0000000000196222 : cld ; jmp qword ptr [rdx]
0x000000000019579a : cld ; jmp qword ptr [rsi]
0x0000000000195cc6 : cld ; jmp qword ptr [rsi]
0x00000000001961be : cld ; jmp qword ptr [rsi]
0x00000000001963ce : cld ; jmp qword ptr [rsi]
0x00000000001b2d8a : cld ; jmp qword ptr [rsi]
0x00000000001953f2 : cld ; jmp rax
0x000000000019542e : cld ; jmp rax
0x000000000019547e : cld ; jmp rax
0x0000000000195496 : cld ; jmp rax
0x00000000001954fa : cld ; jmp rax
0x0000000000195596 : cld ; jmp rax
0x00000000001956be : cld ; jmp rax
0x00000000001956e2 : cld ; jmp rax
0x0000000000195736 : cld ; jmp rax
0x0000000000195782 : cld ; jmp rax
0x000000000019595a : cld ; jmp rax
0x00000000001959c2 : cld ; jmp rax
0x0000000000195bc6 : cld ; jmp rax
0x0000000000195c6e : cld ; jmp rax
0x0000000000195e86 : cld ; jmp rax
0x000000000019605e : cld ; jmp rax
0x0000000000196066 : cld ; jmp rax
0x000000000019606e : cld ; jmp rax
0x0000000000196076 : cld ; jmp rax
0x000000000019607e : cld ; jmp rax
0x0000000000196096 : cld ; jmp rax
0x00000000001960d2 : cld ; jmp rax
0x00000000001960da : cld ; jmp rax
0x00000000001960e2 : cld ; jmp rax
0x00000000001960ea : cld ; jmp rax
0x00000000001960e2 : cld ; jmp rax
0x00000000001960f2 : cld ; jmp rax
0x00000000001960f1 : cld ; jmp rax
0x00000000001960fa : cld ; jmp rax
0x0000000000196102 : cld ; jmp rax
0x000000000019610a : cld ; jmp rax
0x0000000000196116 : cld ; jmp rax
0x000000000019611e : cld ; jmp rax
0x0000000000196126 : cld ; jmp rax
0x000000000019612e : cld ; jmp rax
0x000000000019612d : cld ; jmp rax
0x0000000000196126 : cld ; jmp rax
0x0000000000196136 : cld ; jmp rax
0x0000000000196135 : cld ; jmp rax
0x000000000019613e : cld ; jmp rax
0x0000000000196146 : cld ; jmp rax
0x0000000000196166 : cld ; jmp rax
0x000000000019637e : cld ; jmp rax
0x000000000019639a : cld ; jmp rax
0x00000000001963a2 : cld ; jmp rax
0x000000000019639a : cld ; jmp rax
0x00000000001963aa : cld ; jmp rax
0x00000000001963a2 : cld ; jmp rax
0x00000000001963b2 : cld ; jmp rax
0x00000000001963aa : cld ; jmp rax
0x00000000001963ba : cld ; jmp rax
0x00000000001963b2 : cld ; jmp rax
0x0000000000196586 : cld ; jmp rax
0x000000000019658e : cld ; jmp rax
0x000000000019582e : cld ; jmp rdx
0x0000000000195d1a : cld ; jmp rdx
0x0000000000196212 : cld ; jmp rdx
0x00000000001957ca : cld ; jmp rsi
0x0000000000195cb6 : cld ; jmp rsi
0x00000000001961ae : cld ; jmp rsi
0x00000000001958f6 : cld ; jmp rsp
0x0000000000195de2 : cld ; jmp rsp
0x00000000001962da : cld ; jmp rsp
0x0000000000170656 : cld ; jne 0x17088f ; xor eax, eax ; ret
0x00000000001706d1 : cld ; jne 0x17088f ; xor eax, eax ; ret
0x00000000001707e2 : cld ; jne 0x17088f ; xor eax, eax ; ret
0x0000000000172925 : cld ; jne 0x172935 ; xor eax, eax ; ret
0x0000000000172924 : cld ; jne 0x172936 ; xor eax, eax ; ret
0x0000000000172845 : cld ; jne 0x172937 ; ret
0x0000000000172844 : cld ; jne 0x172938 ; ret
0x0000000000195a0a : cld ; lcall ptr [rcx + rdx*2 + 0x512cfffc] ; cld ; call rdx
0x0000000000195a0e : cld ; ljmp ptr [rcx + rdx*2] ; cld ; call rdx
0x00000000001046a8 : cld ; mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000153192 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b62 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158532 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015b102 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015dbd2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001606f2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153395 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153394 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155d65 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155d64 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158735 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158734 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b085 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b084 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015db55 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015db54 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160675 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160674 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153595 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153594 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155f65 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155f64 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158935 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158934 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b005 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b004 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015dad5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015dad4 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001605f5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001605f4 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153795 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153794 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000156165 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000156164 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158b35 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158b34 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015af85 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015af84 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015da55 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015da54 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160575 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160574 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009fb9e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000009fb9d : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a02f1 : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a02f0 : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a0a3e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a0a3d : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000005f80b : cld ; mov ebx, 2 ; jmp 0x5baf8
0x000000000014db58 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e048 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e3e8 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000152dc6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155796 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158166 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae06 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ae05 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d8d6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d8d5 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001603f6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001603f5 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fa6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155976 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158346 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad86 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ad85 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d856 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d855 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160376 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160375 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153186 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b56 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158526 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad06 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ad05 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d7d6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d7d5 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001602f6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001602f5 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152be6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001555b6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f86 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae86 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ae85 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d956 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d955 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160476 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160475 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e901 : cld ; mov rax, rdi ; ret
0x000000000009e900 : cld ; mov rax, rdi ; ret
0x000000000009e94a : cld ; mov rax, rdi ; ret
0x000000000009e949 : cld ; mov rax, rdi ; ret
0x000000000004a18c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000b9fa8 : cld ; pop rax ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000ac9ea : cld ; pop rbx ; ret
0x00000000000ac9e9 : cld ; pop rbx ; ret
0x000000000019596e : cld ; push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x0000000000195e5a : cld ; push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x0000000000196352 : cld ; push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000195bc2 : cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x00000000001959be : cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000196396 : cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000196582 : cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195e8a : cld ; push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x00000000001954da : cld ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x00000000001955ae : cld ; push qword ptr [rax] ; sub ah, bh ; push rax ; sub esp, edi ; call rax
0x0000000000195636 : cld ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x0000000000195df6 : cld ; push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000195842 : cld ; push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x0000000000195d2e : cld ; push qword ptr [rdx + 0x42fffc84] ; test ah, bh ; call rdx
0x0000000000196226 : cld ; push qword ptr [rdx + 0x42fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rdx
0x00000000001962ee : cld ; push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x000000000019620e : cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x000000000019643e : cld ; push qword ptr [rdx] ; lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x00000000001961c2 : cld ; push qword ptr [rsi + 0x46fffca8] ; test al, 0xfc ; call rsi
0x00000000001b0c34 : cld ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0c37 ; jmp qword ptr [rcx]
0x00000000001953d2 : cld ; push rax ; add esp, edi ; call rax
0x0000000000196392 : cld ; push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000195b8e : cld ; push rax ; push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x00000000001959ba : cld ; push rax ; push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000195656 : cld ; push rax ; sub bh, ah ; call rax
0x00000000001956ba : cld ; push rax ; sub edi, esp ; jmp rax
0x00000000001955b2 : cld ; push rax ; sub esp, edi ; call rax
0x0000000000195bce : cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x0000000000196236 : cld ; push rdx ; test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x000000000004a192 : cld ; ret
0x000000000008f318 : cld ; ret
0x000000000009fba4 : cld ; ret
0x000000000009fba3 : cld ; ret
0x00000000000a02f7 : cld ; ret
0x00000000000a02f6 : cld ; ret
0x00000000000a0a44 : cld ; ret
0x00000000000a0a43 : cld ; ret
0x00000000000aa5fb : cld ; ret
0x00000000000aa5fa : cld ; ret
0x00000000000ac5c3 : cld ; ret
0x00000000000ac5c2 : cld ; ret
0x000000000014db60 : cld ; ret
0x000000000014e050 : cld ; ret
0x000000000014e3f0 : cld ; ret
0x0000000000152a71 : cld ; ret
0x0000000000152ab9 : cld ; ret
0x0000000000152af7 : cld ; ret
0x0000000000152b2f : cld ; ret
0x0000000000152bd5 : cld ; ret
0x0000000000152bed : cld ; ret
0x0000000000152c41 : cld ; ret
0x0000000000152c91 : cld ; ret
0x0000000000152cd7 : cld ; ret
0x0000000000152d0f : cld ; ret
0x0000000000152d4d : cld ; ret
0x0000000000152d75 : cld ; ret
0x0000000000152d9d : cld ; ret
0x0000000000152db5 : cld ; ret
0x0000000000152dcd : cld ; ret
0x0000000000152e21 : cld ; ret
0x0000000000152e71 : cld ; ret
0x0000000000152eb7 : cld ; ret
0x0000000000152eef : cld ; ret
0x0000000000152f2d : cld ; ret
0x0000000000152f55 : cld ; ret
0x0000000000152f7d : cld ; ret
0x0000000000152f95 : cld ; ret
0x0000000000152fad : cld ; ret
0x0000000000153011 : cld ; ret
0x0000000000153059 : cld ; ret
0x0000000000153097 : cld ; ret
0x00000000001530cf : cld ; ret
0x000000000015310d : cld ; ret
0x0000000000153135 : cld ; ret
0x000000000015315d : cld ; ret
0x0000000000153175 : cld ; ret
0x000000000015318d : cld ; ret
0x0000000000153195 : cld ; ret
0x000000000015339b : cld ; ret
0x000000000015339a : cld ; ret
0x000000000015359b : cld ; ret
0x000000000015359a : cld ; ret
0x000000000015379b : cld ; ret
0x000000000015379a : cld ; ret
0x0000000000155441 : cld ; ret
0x0000000000155489 : cld ; ret
0x00000000001554c7 : cld ; ret
0x00000000001554ff : cld ; ret
0x00000000001555a5 : cld ; ret
0x00000000001555bd : cld ; ret
0x0000000000155611 : cld ; ret
0x0000000000155661 : cld ; ret
0x00000000001556a7 : cld ; ret
0x00000000001556df : cld ; ret
0x000000000015571d : cld ; ret
0x0000000000155745 : cld ; ret
0x000000000015576d : cld ; ret
0x0000000000155785 : cld ; ret
0x000000000015579d : cld ; ret
0x00000000001557f1 : cld ; ret
0x0000000000155841 : cld ; ret
0x0000000000155887 : cld ; ret
0x00000000001558bf : cld ; ret
0x00000000001558fd : cld ; ret
0x0000000000155925 : cld ; ret
0x000000000015594d : cld ; ret
0x0000000000155965 : cld ; ret
0x000000000015597d : cld ; ret
0x00000000001559e1 : cld ; ret
0x0000000000155a29 : cld ; ret
0x0000000000155a67 : cld ; ret
0x0000000000155a9f : cld ; ret
0x0000000000155add : cld ; ret
0x0000000000155b05 : cld ; ret
0x0000000000155b2d : cld ; ret
0x0000000000155b45 : cld ; ret
0x0000000000155b5d : cld ; ret
0x0000000000155b65 : cld ; ret
0x0000000000155d6b : cld ; ret
0x0000000000155d6a : cld ; ret
0x0000000000155f6b : cld ; ret
0x0000000000155f6a : cld ; ret
0x000000000015616b : cld ; ret
0x000000000015616a : cld ; ret
0x0000000000157e11 : cld ; ret
0x0000000000157e59 : cld ; ret
0x0000000000157e97 : cld ; ret
0x0000000000157ecf : cld ; ret
0x0000000000157f75 : cld ; ret
0x0000000000157f8d : cld ; ret
0x0000000000157fe1 : cld ; ret
0x0000000000158031 : cld ; ret
0x0000000000158077 : cld ; ret
0x00000000001580af : cld ; ret
0x00000000001580ed : cld ; ret
0x0000000000158115 : cld ; ret
0x000000000015813d : cld ; ret
0x0000000000158155 : cld ; ret
0x000000000015816d : cld ; ret
0x00000000001581c1 : cld ; ret
0x0000000000158211 : cld ; ret
0x0000000000158257 : cld ; ret
0x000000000015828f : cld ; ret
0x00000000001582cd : cld ; ret
0x00000000001582f5 : cld ; ret
0x000000000015831d : cld ; ret
0x0000000000158335 : cld ; ret
0x000000000015834d : cld ; ret
0x00000000001583b1 : cld ; ret
0x00000000001583f9 : cld ; ret
0x0000000000158437 : cld ; ret
0x000000000015846f : cld ; ret
0x00000000001584ad : cld ; ret
0x00000000001584d5 : cld ; ret
0x00000000001584fd : cld ; ret
0x0000000000158515 : cld ; ret
0x000000000015852d : cld ; ret
0x0000000000158535 : cld ; ret
0x000000000015873b : cld ; ret
0x000000000015873a : cld ; ret
0x000000000015893b : cld ; ret
0x000000000015893a : cld ; ret
0x0000000000158b3b : cld ; ret
0x0000000000158b3a : cld ; ret
0x000000000015ad0d : cld ; ret
0x000000000015ad0c : cld ; ret
0x000000000015ad8d : cld ; ret
0x000000000015ad8c : cld ; ret
0x000000000015ae0d : cld ; ret
0x000000000015ae0c : cld ; ret
0x000000000015ae8d : cld ; ret
0x000000000015ae8c : cld ; ret
0x000000000015af8b : cld ; ret
0x000000000015af8a : cld ; ret
0x000000000015b00b : cld ; ret
0x000000000015b00a : cld ; ret
0x000000000015b08b : cld ; ret
0x000000000015b08a : cld ; ret
0x000000000015b105 : cld ; ret
0x000000000015d7dd : cld ; ret
0x000000000015d7dc : cld ; ret
0x000000000015d85d : cld ; ret
0x000000000015d85c : cld ; ret
0x000000000015d8dd : cld ; ret
0x000000000015d8dc : cld ; ret
0x000000000015d95d : cld ; ret
0x000000000015d95c : cld ; ret
0x000000000015da5b : cld ; ret
0x000000000015da5a : cld ; ret
0x000000000015dadb : cld ; ret
0x000000000015dada : cld ; ret
0x000000000015db5b : cld ; ret
0x000000000015db5a : cld ; ret
0x000000000015dbd5 : cld ; ret
0x00000000001602fd : cld ; ret
0x00000000001602fc : cld ; ret
0x000000000016037d : cld ; ret
0x000000000016037c : cld ; ret
0x00000000001603fd : cld ; ret
0x00000000001603fc : cld ; ret
0x000000000016047d : cld ; ret
0x000000000016047c : cld ; ret
0x000000000016057b : cld ; ret
0x000000000016057a : cld ; ret
0x00000000001605fb : cld ; ret
0x00000000001605fa : cld ; ret
0x000000000016067b : cld ; ret
0x000000000016067a : cld ; ret
0x00000000001606f5 : cld ; ret
0x0000000000172a6d : cld ; ret
0x0000000000172a6c : cld ; ret
0x0000000000182a62 : cld ; ret
0x000000000019a164 : cld ; ret
0x00000000001833f6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000bb24e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xbb251 ; ret
0x00000000000d5195 : cld ; xor eax, eax ; mov rdx, r8 ; jmp 0xd51bc
0x0000000000086359 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000003ad3d : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000bc5ed : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc63f : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc56e : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000086536 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000cd1f9 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000000bd40b : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000bd6bf : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000100376 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000001008fe : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000100f16 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000c391a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c963 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003fc45 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000042b45 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000003fc6e : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000042b6b : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000aee29 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000b1753 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000b3f09 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000c3ac2 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000c57e2 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000c706c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000074078 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000012471e : cli ; add cl, byte ptr [rbp + 0xf] ; ret
0x00000000000aa962 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000026485 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000001bb58d : cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000000aa60b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000172a81 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000009fbbc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a030f : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0a5c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000c28a9 : cli ; add eax, 0x2941c229 ; ret 0x6b45
0x00000000000bbaba : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000bbc26 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000bbe24 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003791 : cli ; add ebx, ebp ; in al, 0xee ; jne 0x3779 ; ret 0x975
0x00000000000ff320 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000ff9c1 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000018b0a2 : cli ; call qword ptr [rax]
0x000000000018c176 : cli ; call qword ptr [rax]
0x00000000001a6b2a : cli ; call qword ptr [rax]
0x00000000001a6b29 : cli ; call qword ptr [rax]
0x00000000001a6bba : cli ; call qword ptr [rax]
0x00000000001a6bea : cli ; call qword ptr [rax]
0x00000000001a7d72 : cli ; call qword ptr [rdi]
0x000000000008810a : cli ; call rax
0x000000000018c196 : cli ; call rax
0x000000000018c1a2 : cli ; call rax
0x00000000000e5013 : cli ; call rcx
0x000000000019afe2 : cli ; call rsp
0x000000000019b0fa : cli ; call rsp
0x000000000019b2e2 : cli ; call rsp
0x000000000019b402 : cli ; call rsp
0x000000000019b442 : cli ; call rsp
0x000000000019b45a : cli ; call rsp
0x000000000019b459 : cli ; call rsp
0x000000000019b4aa : cli ; call rsp
0x000000000019b532 : cli ; call rsp
0x000000000019b752 : cli ; call rsp
0x000000000019b7da : cli ; call rsp
0x00000000000f65b5 : cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000104acc : cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000104b6b : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003aa01 : cli ; dec dword ptr [rax + 0xf] ; ret
0x000000000019b1fa : cli ; dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x000000000019b452 : cli ; dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x00000000000e3e6c : cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000019b152 : cli ; dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000019b34a : cli ; dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b6da : cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b6b4 ; cli ; jmp rsp
0x000000000019b19a : cli ; inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x000000000018c192 : cli ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x000000000018c19e : cli ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x000000000019afda : cli ; inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x000000000018b096 : cli ; inc eax ; sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x000000000014db1b : cli ; jg 0x14db2e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e00b : cli ; jg 0x14e01e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e3ab : cli ; jg 0x14e3be ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000172a41 : cli ; jg 0x172a53 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009fb77 : cli ; jg 0x9fb8a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a02ca : cli ; jg 0xa02dd ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a0a17 : cli ; jg 0xa0a2a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000aa5d6 : cli ; jg 0xaa5e8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000019f9f2 : cli ; jmp qword ptr [rcx]
0x000000000019f9f1 : cli ; jmp qword ptr [rcx]
0x000000000019b65a : cli ; jmp qword ptr [rdi + rdx*2 - 0x3cebfffe]
0x00000000001a7d5a : cli ; jmp qword ptr [rdi]
0x000000000018b09e : cli ; jmp rax
0x000000000018c146 : cli ; jmp rax
0x000000000018c16e : cli ; jmp rax
0x000000000018c16e : cli ; jmp rax
0x000000000019b07a : cli ; jmp rsp
0x000000000019b15a : cli ; jmp rsp
0x000000000019b1a2 : cli ; jmp rsp
0x000000000019b1a1 : cli ; jmp rsp
0x000000000019b202 : cli ; jmp rsp
0x000000000019b201 : cli ; jmp rsp
0x000000000019b312 : cli ; jmp rsp
0x000000000019b352 : cli ; jmp rsp
0x000000000019b642 : cli ; jmp rsp
0x000000000019b662 : cli ; jmp rsp
0x000000000019b6e2 : cli ; jmp rsp
0x000000000019b79a : cli ; jmp rsp
0x000000000019b2da : cli ; lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x000000000019b63a : cli ; lcall ptr [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x000000000018c19a : cli ; ljmp ptr [rax + 0x40fffa89] ; mov bh, dl ; call rax
0x000000000019b30a : cli ; ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x000000000019b4a2 : cli ; ljmp ptr [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b4ae ; call rsp
0x0000000000153598 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155f68 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158938 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b008 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015dad8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001605f8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013c532 : cli ; mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000009e8e7 : cli ; mov rax, rdi ; ret
0x000000000009e8e6 : cli ; mov rax, rdi ; ret
0x0000000000063b65 : cli ; mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000011cef0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000011d200 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008ece8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000145f56 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bb2c6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000003d322 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d342 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d362 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d382 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d3a2 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d3c2 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d3e2 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d402 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d422 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d442 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d462 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d47e : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d49a : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d4b6 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004061a : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004063a : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004065a : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004067a : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004069a : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000406ba : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000406da : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000406fa : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004071a : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004073a : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004075a : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040776 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040792 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000407ae : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000434f1 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043511 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043531 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043551 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043571 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043591 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000435b1 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000435d1 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000435f1 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043611 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043631 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004364d : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043669 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043685 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000001982c9 : cli ; out dx, eax ; call rsp
0x0000000000185861 : cli ; push 0x6e ; ja 0x1857ee ; ret 0x48f
0x000000000019b072 : cli ; push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000195b50 : cli ; push rax ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x000000000018b09a : cli ; push rax ; sub dl, bh ; jmp rax
0x000000000002cb2f : cli ; ret
0x000000000002cb2e : cli ; ret
0x00000000000bc58c : cli ; ret 0x10
0x0000000000184305 : cli ; ret 0xac65
0x00000000000e35aa : cli ; ret 0xfff3
0x00000000000d4f5e : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000114aab : cli ; setae al ; ret
0x000000000008b7f9 : cli ; test rdx, rdx ; je 0x8b819 ; bsf rax, rdx ; ret
0x000000000008b9c8 : cli ; test rdx, rdx ; je 0x8b9f9 ; bsf rax, rdx ; ret
0x000000000008b9d9 : cli ; test rdx, rdx ; je 0x8b9f9 ; bsf rax, rdx ; ret
0x0000000000182f4a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000c18fe : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001bc486 : cmc ; add al, byte ptr [rax] ; ret
0x00000000001bc4b6 : cmc ; add al, byte ptr [rax] ; ret
0x00000000001bc4a6 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x000000000014a4c8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001ab085 : cmc ; add byte ptr [rax], al ; cwde ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001ab084 : cmc ; add byte ptr [rax], al ; cwde ; and esi, edx ; jmp qword ptr [rcx]
0x00000000000abc97 : cmc ; add byte ptr [rax], al ; ret
0x000000000019a905 : cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x00000000001bb0a5 : cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x000000000017514a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001335b5 : cmc ; call 0x1f8a3
0x0000000000173655 : cmc ; call 0x1f8ab
0x0000000000189afe : cmc ; call qword ptr [rax]
0x00000000001b083a : cmc ; call qword ptr [rax]
0x0000000000189de6 : cmc ; call qword ptr [rbx]
0x0000000000189ece : cmc ; call qword ptr [rbx]
0x0000000000189ecd : cmc ; call qword ptr [rbx]
0x0000000000189ecc : cmc ; call qword ptr [rbx]
0x0000000000189a52 : cmc ; call qword ptr [rcx]
0x00000000001b077a : cmc ; call qword ptr [rcx]
0x0000000000189dda : cmc ; call qword ptr [rdi]
0x0000000000189dd9 : cmc ; call qword ptr [rdi]
0x00000000001af51a : cmc ; call qword ptr [rdi]
0x00000000001af86a : cmc ; call qword ptr [rdx]
0x00000000001b0332 : cmc ; call qword ptr [rdx]
0x00000000001b0d5a : cmc ; call qword ptr [rsi]
0x00000000001899c2 : cmc ; call rax
0x0000000000189a46 : cmc ; call rax
0x00000000001b19e2 : cmc ; call rdi
0x00000000001b1e5a : cmc ; call rdi
0x000000000018a002 : cmc ; call rdx
0x0000000000189eba : cmc ; call rsi
0x0000000000189f32 : cmc ; call rsi
0x0000000000189fe2 : cmc ; call rsi
0x00000000001b1b12 : cmc ; call rsi
0x00000000001b1fa2 : cmc ; call rsi
0x0000000000189c12 : cmc ; call rsp
0x0000000000189c2e : cmc ; call rsp
0x0000000000189c2d : cmc ; call rsp
0x0000000000198eda : cmc ; call rsp
0x00000000000f4291 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f4290 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c95b1 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000012e652 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000189afa : cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x0000000000189af6 : cmc ; dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x0000000000189c26 : cmc ; dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x0000000000198f2a : cmc ; dec dword ptr [rsp + 0x20e40001] ; cmc ; jmp rsp
0x0000000000198fd2 : cmc ; dec esp ; add dword ptr [eax], eax ; cmc ; jmp rsp
0x00000000001a2491 : cmc ; in al, dx ; call qword ptr [rsi]
0x0000000000198f82 : cmc ; inc esp ; add word ptr [rax], ax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x0000000000123002 : cmc ; je 0x122ffc ; pop rbx ; ret
0x0000000000189fda : cmc ; jmp qword ptr [rax - 0x3f000a7f]
0x0000000000189ff2 : cmc ; jmp qword ptr [rbx]
0x00000000001afd1a : cmc ; jmp qword ptr [rbx]
0x00000000001b0fea : cmc ; jmp qword ptr [rbx]
0x0000000000189fea : cmc ; jmp qword ptr [rcx]
0x00000000001af91a : cmc ; jmp qword ptr [rcx]
0x00000000001af932 : cmc ; jmp qword ptr [rcx]
0x00000000001af962 : cmc ; jmp qword ptr [rcx]
0x00000000001af97a : cmc ; jmp qword ptr [rcx]
0x00000000001af9aa : cmc ; jmp qword ptr [rcx]
0x00000000001af9c2 : cmc ; jmp qword ptr [rcx]
0x00000000001af9da : cmc ; jmp qword ptr [rcx]
0x00000000001af9f2 : cmc ; jmp qword ptr [rcx]
0x00000000001b0562 : cmc ; jmp qword ptr [rcx]
0x00000000001b057a : cmc ; jmp qword ptr [rcx]
0x00000000001b05c2 : cmc ; jmp qword ptr [rcx]
0x00000000001b05f2 : cmc ; jmp qword ptr [rcx]
0x00000000001b060a : cmc ; jmp qword ptr [rcx]
0x00000000001b063a : cmc ; jmp qword ptr [rcx]
0x00000000001b06ea : cmc ; jmp qword ptr [rcx]
0x00000000001b0702 : cmc ; jmp qword ptr [rcx]
0x00000000001b0792 : cmc ; jmp qword ptr [rcx]
0x00000000001b07c2 : cmc ; jmp qword ptr [rcx]
0x00000000001b07da : cmc ; jmp qword ptr [rcx]
0x00000000001b07f2 : cmc ; jmp qword ptr [rcx]
0x00000000001b080a : cmc ; jmp qword ptr [rcx]
0x00000000001b093a : cmc ; jmp qword ptr [rcx]
0x00000000001b0952 : cmc ; jmp qword ptr [rcx]
0x00000000001b096a : cmc ; jmp qword ptr [rcx]
0x00000000001b09b2 : cmc ; jmp qword ptr [rcx]
0x00000000001b09ca : cmc ; jmp qword ptr [rcx]
0x00000000001b09e2 : cmc ; jmp qword ptr [rcx]
0x00000000001b09fa : cmc ; jmp qword ptr [rcx]
0x00000000001b0a12 : cmc ; jmp qword ptr [rcx]
0x00000000001b0a2a : cmc ; jmp qword ptr [rcx]
0x00000000001b0a42 : cmc ; jmp qword ptr [rcx]
0x00000000001b0a5a : cmc ; jmp qword ptr [rcx]
0x00000000001b0aa2 : cmc ; jmp qword ptr [rcx]
0x00000000001b0ad2 : cmc ; jmp qword ptr [rcx]
0x00000000001b0aea : cmc ; jmp qword ptr [rcx]
0x00000000001b0b02 : cmc ; jmp qword ptr [rcx]
0x00000000001b0b1a : cmc ; jmp qword ptr [rcx]
0x00000000001b0b32 : cmc ; jmp qword ptr [rcx]
0x00000000001b0b7a : cmc ; jmp qword ptr [rcx]
0x00000000001b0b92 : cmc ; jmp qword ptr [rcx]
0x00000000001b0c0a : cmc ; jmp qword ptr [rcx]
0x00000000001b0c3a : cmc ; jmp qword ptr [rcx]
0x00000000001b0c52 : cmc ; jmp qword ptr [rcx]
0x00000000001b0c82 : cmc ; jmp qword ptr [rcx]
0x00000000001b0cb2 : cmc ; jmp qword ptr [rcx]
0x00000000001b0cca : cmc ; jmp qword ptr [rcx]
0x00000000001b0d12 : cmc ; jmp qword ptr [rcx]
0x00000000001b0d8a : cmc ; jmp qword ptr [rcx]
0x00000000001b0dba : cmc ; jmp qword ptr [rcx]
0x00000000001b0dd2 : cmc ; jmp qword ptr [rcx]
0x00000000001b0e02 : cmc ; jmp qword ptr [rcx]
0x00000000001b0f22 : cmc ; jmp qword ptr [rcx]
0x00000000001b0f3a : cmc ; jmp qword ptr [rcx]
0x00000000001b1152 : cmc ; jmp qword ptr [rcx]
0x00000000001b116a : cmc ; jmp qword ptr [rcx]
0x00000000001b1182 : cmc ; jmp qword ptr [rcx]
0x00000000001b119a : cmc ; jmp qword ptr [rcx]
0x00000000001b11e2 : cmc ; jmp qword ptr [rcx]
0x00000000001b11fa : cmc ; jmp qword ptr [rcx]
0x00000000001b1212 : cmc ; jmp qword ptr [rcx]
0x00000000001b122a : cmc ; jmp qword ptr [rcx]
0x00000000001b131a : cmc ; jmp qword ptr [rcx]
0x00000000001afa52 : cmc ; jmp qword ptr [rdx]
0x00000000001899ce : cmc ; jmp rax
0x00000000001b010a : cmc ; jmp rax
0x00000000001b0109 : cmc ; jmp rax
0x00000000001b0108 : cmc ; jmp rax
0x00000000001b13b2 : cmc ; jmp rax
0x00000000001b144a : cmc ; jmp rax
0x00000000001b1362 : cmc ; jmp rdi
0x0000000000198f32 : cmc ; jmp rsp
0x0000000000198f8a : cmc ; jmp rsp
0x0000000000198f89 : cmc ; jmp rsp
0x0000000000198fda : cmc ; jmp rsp
0x0000000000198fd9 : cmc ; jmp rsp
0x0000000000198fd8 : cmc ; jmp rsp
0x000000000019900a : cmc ; jmp rsp
0x0000000000199009 : cmc ; jmp rsp
0x0000000000101ff6 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001899ba : cmc ; lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x00000000001899c6 : cmc ; lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x0000000000189a3e : cmc ; lcall ptr [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x0000000000199002 : cmc ; ljmp ptr [rax + rbp*2 + 0x44740001] ; cmc ; jmp rsp
0x0000000000185c89 : cmc ; mov ch, 0xab ; ret
0x000000000015ad8a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d85a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016037a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152e1e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e1d : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e6e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e6d : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eb4 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eb3 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eec : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eeb : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f2a : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f29 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f52 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f51 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f7a : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f79 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f92 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f91 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152faa : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152fa9 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001557ee : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001557ed : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015583e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015583d : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155884 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155883 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558bc : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558bb : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558fa : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558f9 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155922 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155921 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015594a : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155949 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155962 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155961 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015597a : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155979 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001581be : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001581bd : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015820e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015820d : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158254 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158253 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015828c : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015828b : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582ca : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582c9 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582f2 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582f1 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015831a : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158319 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158332 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158331 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015834a : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158349 : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000171e33 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171e32 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000006e291 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000182b37 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000007818d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198ed2 : cmc ; push qword ptr [rcx + 0x14740001] ; cmc ; call rsp
0x0000000000189eca : cmc ; push rbx ; cmc ; call qword ptr [rbx]
0x0000000000189c2a : cmc ; push rsp ; cmc ; call rsp
0x0000000000189c29 : cmc ; push rsp ; cmc ; call rsp
0x0000000000195579 : cmc ; sti ; jmp qword ptr [rax]
0x0000000000171e37 : cmc ; sub eax, edx ; ret
0x00000000001852c5 : cmc ; xlatb ; ret 0x4e27
0x00000000000ea9e1 : cmova eax, edx ; ret
0x00000000000fb88b : cmova eax, edx ; ret
0x00000000000bc6c1 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000007d0b9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008b457 : cmovae eax, ecx ; ret
0x000000000004a5c1 : cmovae eax, edi ; ret
0x0000000000108abc : cmovae eax, esi ; ret
0x00000000000038a7 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007d0b8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004a5c0 : cmovae rax, rdi ; ret
0x0000000000108abb : cmovae rax, rsi ; ret
0x000000000003ac7f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000006b2e4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000f693b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000097969 : cmove eax, ebx ; pop rbx ; ret
0x00000000000fdc9a : cmove eax, ebx ; pop rbx ; ret
0x0000000000074f51 : cmove eax, ecx ; ret
0x00000000000ac825 : cmove eax, ecx ; ret
0x0000000000110b5e : cmove eax, ecx ; ret
0x0000000000110bd7 : cmove eax, ecx ; ret
0x000000000013c30a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008f828 : cmove eax, edx ; add eax, 1 ; ret
0x000000000008f83a : cmove eax, edx ; add eax, 1 ; ret
0x00000000000bc402 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000bc4e2 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000f7720 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000878d3 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000002d90b : cmove eax, edx ; ret
0x000000000008d7b8 : cmove eax, edx ; ret
0x000000000008e64d : cmove eax, edx ; ret
0x000000000008f19d : cmove eax, edx ; ret
0x00000000000b64ef : cmove eax, edx ; ret
0x00000000000cbf7f : cmove eax, edx ; ret
0x00000000000f6a6d : cmove eax, edx ; ret
0x00000000000f7678 : cmove eax, edx ; ret
0x0000000000105fd1 : cmove eax, edx ; ret
0x00000000001162f2 : cmove eax, edx ; ret
0x00000000001238b1 : cmove eax, edx ; ret
0x00000000001238cf : cmove eax, edx ; ret
0x000000000012390c : cmove eax, edx ; ret
0x000000000008d7b8 : cmove eax, edx ; ret
0x000000000008e64d : cmove eax, edx ; ret
0x000000000008f19d : cmove eax, edx ; ret
0x00000000000b64ef : cmove eax, edx ; ret
0x00000000000cbf7f : cmove eax, edx ; ret
0x00000000000f6a6d : cmove eax, edx ; ret
0x00000000000f7678 : cmove eax, edx ; ret
0x0000000000105fd1 : cmove eax, edx ; ret
0x00000000001162f2 : cmove eax, edx ; ret
0x00000000001238b1 : cmove eax, edx ; ret
0x00000000001238cf : cmove eax, edx ; ret
0x000000000012390c : cmove eax, edx ; ret
0x00000000000d6c41 : cmove eax, esi ; ret
0x000000000009e9b1 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x00000000000ba298 : cmove esi, ecx ; call 0x8f3b9
0x000000000005c469 : cmove esi, ecx ; jmp 0x5c434
0x0000000000074f50 : cmove r8, rcx ; ret
0x0000000000074f4f : cmove r8, rcx ; ret
0x00000000000f693a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000097968 : cmove rax, rbx ; pop rbx ; ret
0x00000000000fdc99 : cmove rax, rbx ; pop rbx ; ret
0x00000000000ac824 : cmove rax, rcx ; ret
0x000000000013c309 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008f839 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000bc401 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000bc4e1 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000878d2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002d90a : cmove rax, rdx ; ret
0x000000000008d7b7 : cmove rax, rdx ; ret
0x000000000008e64c : cmove rax, rdx ; ret
0x000000000008f19c : cmove rax, rdx ; ret
0x00000000000cbf7e : cmove rax, rdx ; ret
0x00000000000f6a6c : cmove rax, rdx ; ret
0x00000000001162f1 : cmove rax, rdx ; ret
0x000000000008d7b7 : cmove rax, rdx ; ret
0x000000000008e64c : cmove rax, rdx ; ret
0x000000000008f19c : cmove rax, rdx ; ret
0x00000000000cbf7e : cmove rax, rdx ; ret
0x00000000000f6a6c : cmove rax, rdx ; ret
0x00000000001162f1 : cmove rax, rdx ; ret
0x000000000005c468 : cmove rsi, r9 ; jmp 0x5c435
0x0000000000071bfb : cmovg eax, ecx ; test rdx, rdx ; jne 0x71bf9 ; ret
0x000000000007af3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7af39 ; ret
0x00000000000cae04 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000079943 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003aa04 : cmovne eax, ebx ; pop rbx ; ret
0x0000000000110c01 : cmovne eax, ecx ; ret
0x000000000009748b : cmovne eax, edi ; ret
0x00000000001193d5 : cmovne eax, edi ; ret
0x0000000000119456 : cmovne eax, edi ; ret
0x0000000000140856 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000142f14 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000089b03 : cmovne eax, edx ; ret
0x0000000000089c21 : cmovne eax, edx ; ret
0x00000000000cd9b0 : cmovne eax, edx ; ret
0x00000000000cdae0 : cmovne eax, edx ; ret
0x000000000011580b : cmovne eax, edx ; ret
0x00000000000cd9b0 : cmovne eax, edx ; ret
0x00000000000cdae0 : cmovne eax, edx ; ret
0x0000000000110b94 : cmovne eax, esi ; ret
0x0000000000100db7 : cmovne ebx, eax ; call 0xfcfd5
0x000000000003aa03 : cmovne rax, rbx ; pop rbx ; ret
0x000000000009748a : cmovne rax, rdi ; ret
0x0000000000140855 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000142f13 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000089b02 : cmovne rax, rdx ; ret
0x0000000000089c20 : cmovne rax, rdx ; ret
0x00000000000cd9af : cmovne rax, rdx ; ret
0x00000000000cdadf : cmovne rax, rdx ; ret
0x00000000000cd9af : cmovne rax, rdx ; ret
0x00000000000cdadf : cmovne rax, rdx ; ret
0x0000000000100db6 : cmovne rbx, rax ; call 0xfcfd6
0x000000000010ed12 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000010ed11 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000128a50 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x000000000004ed5b : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x000000000004ee85 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000059434 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret 0x8b48
0x000000000009e923 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000003a6f6 : cmovs eax, edx ; pop rbx ; ret
0x000000000003a7c3 : cmovs eax, edx ; pop rbx ; ret
0x000000000003a6f6 : cmovs eax, edx ; pop rbx ; ret
0x000000000003a7c3 : cmovs eax, edx ; pop rbx ; ret
0x0000000000023b8c : cmovs eax, edx ; ret
0x0000000000023b8c : cmovs eax, edx ; ret
0x000000000009b084 : cmovs ebp, dword ptr [rcx] ; ret
0x00000000000800df : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000012fa48 : cmovs ecx, dword ptr [rcx] ; ret 0x8948
0x0000000000099bf3 : cmovs edi, dword ptr [rcx] ; fmul dword ptr [rax + 0xf] ; ret
0x00000000000aac56 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x000000000005c466 : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c437
0x0000000000195bdd : cmp ah, bh ; call qword ptr [rax + 0x10fffc39]
0x0000000000195c1d : cmp ah, bh ; call qword ptr [rax]
0x000000000014a7c3 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a8e3 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a638 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014a69f : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000019d474 : cmp al, 0x19 ; add byte ptr [rax], al ; pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x0000000000102d91 : cmp al, 0x24 ; call rbx
0x00000000001046c9 : cmp al, 0x24 ; call rbx
0x000000000010490d : cmp al, 0x24 ; call rbx
0x000000000014351c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x130] ; jmp rax
0x000000000014354d : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x130] ; jmp rax
0x00000000001752d2 : cmp al, 0x25 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000129095 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000012a1ad : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001aea74 : cmp al, 0x2f ; add dword ptr [rax], eax ; js 0x1aea60 ; hlt ; call qword ptr [rbx]
0x0000000000038fed : cmp al, 0x33 ; call rax
0x0000000000097355 : cmp al, 0x3d ; jne 0x9738f ; mov rax, rdi ; pop rbx ; ret
0x00000000000d170c : cmp al, 0x3f ; jne 0xd16d1 ; mov eax, 1 ; ret
0x00000000000d1724 : cmp al, 0x3f ; jne 0xd16ee ; mov eax, 1 ; ret
0x0000000000183f40 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001b0774 : cmp al, 0x4c ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0b74 : cmp al, 0x50 ; add dword ptr [rax], eax ; js 0x1b0bf1 ; cmc ; jmp qword ptr [rcx]
0x000000000019684c : cmp al, 0x62 ; add byte ptr [rax], al ; push rsp ; and ecx, ebp ; call rsp
0x00000000001b2c74 : cmp al, 0x71 ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x000000000008bb10 : cmp al, 0x71 ; add dword ptr [rax], eax ; ret
0x00000000001b5474 : cmp al, 0x99 ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a6674 : cmp al, 0xab ; add byte ptr [rax], al ; js 0x1a66f1 ; out dx, al ; jmp qword ptr [rdx]
0x00000000000f3520 : cmp al, 0xb3 ; stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000e1a7a : cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000001a7b74 : cmp al, 0xc0 ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000019a124 : cmp al, 0xc3 ; add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000019bb59 : cmp al, 0xe8 ; jmp rax
0x00000000001a3729 : cmp al, 0xed ; jmp qword ptr [rdi]
0x0000000000099b70 : cmp al, 0xf ; mov dh, 0x45 ; ret 0x8349
0x00000000001a8039 : cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00000000001a8038 : cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00000000001b3511 : cmp al, 0xf6 ; call qword ptr [rax]
0x00000000001b3510 : cmp al, 0xf6 ; call qword ptr [rax]
0x000000000019804c : cmp al, 0xfc ; add byte ptr [rax], al ; add al, 0x32 ; out dx, eax ; call rsp
0x0000000000195be9 : cmp al, 0xfc ; call qword ptr [rax]
0x00000000000ae376 : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000170633 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001bbf74 : cmp al, 4 ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000000a68f0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000a8100 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000713fb : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x0000000000005ea8 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001f92c : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000203de : cmp al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021a45 : cmp al, byte ptr [rax] ; ret
0x0000000000021a55 : cmp al, byte ptr [rax] ; ret
0x00000000000de32c : cmp al, byte ptr [rbx - 0x7cb7fe3d] ; ret 0x4104
0x0000000000198a1d : cmp al, byte ptr [rcx] ; add byte ptr [rsp], al ; jmp rsp
0x00000000000f0ca9 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x000000000008103f : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; call 0x7d286
0x00000000001722f6 : cmp al, byte ptr [rsi - 1] ; jne 0x17231c ; xor eax, eax ; ret
0x0000000000033504 : cmp al, ch ; xchg eax, esi ; ret
0x000000000008eb26 : cmp al, dh ; ret
0x0000000000096716 : cmp al, dh ; ret
0x000000000008eb25 : cmp al, r14b ; ret
0x0000000000096715 : cmp al, r14b ; ret
0x0000000000195470 : cmp bh, 0xfb ; inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x0000000000034f16 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x0000000000195c21 : cmp bh, ah ; call qword ptr [rax + 0x10fffc3b]
0x0000000000110b5a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000194ed1 : cmp bh, bl ; call qword ptr [rax]
0x0000000000110b92 : cmp bh, cl ; cmovne eax, esi ; ret
0x00000000001aec08 : cmp bl, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000112b98 : cmp bl, ch ; ret
0x0000000000062808 : cmp bl, ch ; ret 0x8148
0x000000000005fb89 : cmp bl, ch ; ret 0x858b
0x0000000000094cd3 : cmp bl, dh ; ret
0x00000000000abc46 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000073d1b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000e7bb9 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f779 : cmp byte ptr [r8], r9b ; je 0x10f7a3 ; mov rdx, r8 ; jmp 0x10f793
0x000000000004b82a : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000004bfb3 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000004c7d5 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000057346 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000006f737 : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000f27ae : cmp byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000008f75f : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000008f75f : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000009482f : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000009482f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000024ffa : cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000001358d6 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008eb67 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000bbe77 : cmp byte ptr [rax + 1], cl ; ret 0x6348
0x0000000000101f38 : cmp byte ptr [rax + rax], ch ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da297 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000025f32 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000d9931 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000d9930 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000335d7 : cmp byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x0000000000102d44 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000e971b : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000111eb0 : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000013c538 : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000073d1c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000011243f : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000001124f6 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000f4216 : cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000f0820 : cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012c220 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001342f4 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000134514 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012de3e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000134101 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x000000000005e8b6 : cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000007aee0 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000ff202 : cmp byte ptr [rax - 1], bh ; ret
0x000000000016cc08 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cc70 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016ce75 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016ce98 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cebe : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cee6 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cf0c : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cf3e : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cf6c : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cf9e : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cfce : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016cffe : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d02e : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d060 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d090 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d0c0 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d39a : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016d445 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008eb56 : cmp byte ptr [rax], ah ; ret
0x0000000000096746 : cmp byte ptr [rax], ah ; ret
0x000000000009f0f6 : cmp byte ptr [rax], ah ; ret
0x0000000000141d44 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb58
0x00000000000df11a : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000003b0e5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007b563 : cmp byte ptr [rax], al ; je 0x7b574 ; ret
0x0000000000045af7 : cmp byte ptr [rax], al ; mov byte ptr [rax + rdx], 0 ; ret
0x00000000000368bf : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000036874 : cmp byte ptr [rax], al ; ret
0x0000000000036884 : cmp byte ptr [rax], al ; ret
0x00000000000368b0 : cmp byte ptr [rax], al ; ret
0x000000000010f46f : cmp byte ptr [rax], bh ; je 0x10f49e ; mov rdx, rax ; jmp 0x10f48b
0x0000000000138ec9 : cmp byte ptr [rax], bl ; je 0x138ed4 ; ret
0x0000000000195590 : cmp byte ptr [rax], ch ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x000000000010f77a : cmp byte ptr [rax], cl ; je 0x10f7a2 ; mov rdx, r8 ; jmp 0x10f792
0x00000000000e7bba : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089b00 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000089c1e : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000009f106 : cmp byte ptr [rax], dh ; ret
0x000000000010f46e : cmp byte ptr [rax], dil ; je 0x10f49f ; mov rdx, rax ; jmp 0x10f48c
0x000000000008eb46 : cmp byte ptr [rax], dl ; ret
0x0000000000096736 : cmp byte ptr [rax], dl ; ret
0x000000000009f0e6 : cmp byte ptr [rax], dl ; ret
0x000000000009f266 : cmp byte ptr [rax], dl ; ret
0x000000000008eb45 : cmp byte ptr [rax], r10b ; ret
0x0000000000096735 : cmp byte ptr [rax], r10b ; ret
0x000000000009f0e5 : cmp byte ptr [rax], r10b ; ret
0x000000000009f265 : cmp byte ptr [rax], r10b ; ret
0x000000000008eb55 : cmp byte ptr [rax], r12b ; ret
0x0000000000096745 : cmp byte ptr [rax], r12b ; ret
0x000000000009f0f5 : cmp byte ptr [rax], r12b ; ret
0x000000000009f105 : cmp byte ptr [rax], r14b ; ret
0x0000000000089aff : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000089c1d : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000abc4a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000abc49 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000010f470 : cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10f48a
0x0000000000186bd4 : cmp byte ptr [rbp - 0x13], bl ; call qword ptr [rsi]
0x000000000014368a : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x0000000000105fce : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000105fcd : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000105fce : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000105fcd : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000000d8908 : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000002cb29 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000ce09a : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ce0aa : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001370da : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000013721a : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001ab5e4 : cmp byte ptr [rbx - 0x5ff1aef9], al ; adc al, byte ptr [rbx] ; ret 0xa02
0x00000000001b3bd8 : cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b11f8 : cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000000abc47 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000072ad7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000000be449 : cmp byte ptr [rcx + 1], cl ; ret
0x00000000000d7ca5 : cmp byte ptr [rcx + 8], 2 ; jne 0xd7c87 ; jmp 0xd7c77
0x00000000000fdd56 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000000eb92c : cmp byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000040195 : cmp byte ptr [rcx - 0x77], al ; ret 0x8d48
0x0000000000043092 : cmp byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00000000001b0c08 : cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001af3bd : cmp byte ptr [rcx], al ; add al, ah ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001af3a5 : cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x000000000016cc09 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016cc71 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016ce76 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016ce99 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016cebf : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016cee7 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016cf0d : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016cf3f : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016cf6d : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016cf9f : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016cfcf : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016cfff : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016d02f : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016d061 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016d091 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016d0c1 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016d39b : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016d446 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000a7d04 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002054 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000003a6c8 : cmp byte ptr [rdi], 0 ; jne 0x3a6d6 ; pop rbx ; ret
0x00000000001b3650 : cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001735ed : cmp byte ptr [rdi], ch ; jne 0x1735e1 ; mov rdi, r14 ; call 0x1f8b1
0x0000000000099557 : cmp byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0x8349
0x000000000007b528 : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000dc5c8 : cmp byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000016eedd : cmp byte ptr [rdi], dl ; ret
0x000000000017050d : cmp byte ptr [rdi], dl ; ret
0x000000000016f9f0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000170830 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f9d9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000170819 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f9c2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000170802 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016e47e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e4c3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e4d8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e4ed : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e502 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e51d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e532 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e592 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5a7 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5bc : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5d1 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5e6 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5fb : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e610 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e625 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e656 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e66b : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6a9 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6be : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6d3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6e8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6fd : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e712 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e727 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e73c : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e757 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e772 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e78d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7a8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7c3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7de : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e7f9 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e814 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e852 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e867 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e9cb : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e9e0 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e9f5 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ea0a : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ea25 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ea3a : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ea9b : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eab0 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eac5 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eada : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eaef : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eb04 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eb19 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eb2e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eb5f : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eb74 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebc1 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebd6 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebeb : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec00 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec15 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec2a : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec3f : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec54 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec6f : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec8a : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eca5 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecc0 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecdb : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecf6 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed11 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed2c : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed6a : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed7f : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eeca : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f052 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f06d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f088 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f122 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f13d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f158 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f222 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f23d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f258 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f322 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f33d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f358 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f373 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3a2 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3bd : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3d8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3f3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f422 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f43d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f458 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f473 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4a2 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4bd : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4d8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4f3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f522 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f53d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f558 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f573 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5a2 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5bd : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5d8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5f3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f632 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f64d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f668 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f683 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f6c2 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f6dd : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f6f8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f713 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f752 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f76d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f788 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f7a3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f7e2 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f7fd : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f818 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f833 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f882 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f89d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f8b8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f8d3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f922 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f93d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f958 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f973 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016faae : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016faf3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb08 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb1d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb32 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb4d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb62 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbc2 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbd7 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbec : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc01 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc16 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc2b : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc40 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc55 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc86 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc9b : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fcd9 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fcee : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd03 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd18 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd2d : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd42 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd57 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd6c : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd87 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fda2 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdbd : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdd8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdf3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe0e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe29 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe44 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe82 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe97 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fffb : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170010 : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170025 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017003a : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170055 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017006a : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001700cb : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001700e0 : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001700f5 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017010a : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017011f : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170134 : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170149 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017015e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017018f : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001701a4 : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001701f1 : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170206 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017021b : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170230 : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170245 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017025a : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017026f : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170284 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017029f : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702ba : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702d5 : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702f0 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017030b : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170326 : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170341 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017035c : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017039a : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001703af : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001704fa : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170672 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017068d : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706a8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706c3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706f2 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017070d : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170728 : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170743 : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170772 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017078d : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001707a8 : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001707c3 : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019b19d : cmp byte ptr [rdx], al ; add ah, ah ; cli ; jmp rsp
0x00000000001a6448 : cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x000000000014a6a2 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a7c6 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a8e6 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000102b6c : cmp ch, cl ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000e0ff0 : cmp cl, 0x11 ; je 0xe1032 ; mov rdx, rax ; jmp 0xe0f96
0x00000000000bbc38 : cmp cl, al ; call 0xffffffff89cde563
0x0000000000080bfe : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000dabaf : cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000133c97 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000133eb8 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000704b0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000006d3b1 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xa7c
0x000000000010de52 : cmp cl, byte ptr [rdi] ; ret 0xc084
0x000000000012ac03 : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000004727c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000002db92 : cmp cl, byte ptr [rip - 0x77cb800] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d72fe : cmp cl, byte ptr [rsi] ; je 0xd729b ; pop rbx ; ret
0x000000000003ca26 : cmp cl, ch ; ret
0x00000000000e03e7 : cmp cl, ch ; ret
0x000000000010f1c2 : cmp cl, ch ; ret
0x00000000000dfee8 : cmp cl, ch ; ret 0xfffe
0x000000000013365b : cmp dh, al ; add eax, 0x358d4800 ; ret
0x0000000000110bd3 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000003a6c5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000a1295 : cmp dh, dh ; ret 0x7501
0x00000000000a2eb5 : cmp dh, dh ; ret 0x7501
0x0000000000110bff : cmp dh, dl ; cmovne eax, ecx ; ret
0x0000000000110b59 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000110b91 : cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000077898 : cmp dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x0000000000172a80 : cmp dl, 1 ; jb 0x172a8e ; mov byte ptr [rdi], cl ; ret
0x000000000009fbbb : cmp dl, 1 ; jb 0x9fbcd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a030e : cmp dl, 1 ; jb 0xa0320 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0a5b : cmp dl, 1 ; jb 0xa0a6d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000aa60a : cmp dl, 1 ; jb 0xaa618 ; mov byte ptr [rdi], cl ; ret
0x000000000008b412 : cmp dl, 3 ; je 0x8b43f ; movsx eax, dl ; ret
0x000000000008b412 : cmp dl, 3 ; je 0x8b440 ; movsx eax, dl ; ret
0x000000000008b411 : cmp dl, 3 ; je 0x8b440 ; movsx eax, dl ; ret
0x000000000008b411 : cmp dl, 3 ; je 0x8b441 ; movsx eax, dl ; ret
0x0000000000188e40 : cmp dl, bl ; jmp rcx
0x0000000000002b86 : cmp dl, byte ptr [rdi] ; ret
0x0000000000072aa8 : cmp dword ptr [rax + 0x30], 0 ; je 0x72ab6 ; ret
0x000000000009d0a3 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000138ec8 : cmp dword ptr [rax], 0x18 ; je 0x138ed5 ; ret
0x000000000002cae6 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x398faf], dl ; ret
0x000000000002d9d0 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x000000000002e199 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000029c95 : cmp dword ptr [rax], eax ; ret
0x000000000002caec : cmp dword ptr [rax], eax ; ret
0x0000000000035304 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35317 ; ret
0x0000000000035303 : cmp dword ptr [rax], r8d ; test eax, eax ; jne 0x35318 ; ret
0x000000000008921b : cmp dword ptr [rbp - 0x76b7ffcd], ebp ; and al, 8 ; call qword ptr [rdx]
0x00000000000d5b92 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd5b29
0x0000000000134f8c : cmp dword ptr [rbx - 0x76b7fffb], esp ; ret 0xff31
0x000000000015a8c8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000015d398 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000015fe8c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000009541e : cmp dword ptr [rcx + 0x39], ecx ; ret
0x00000000000381ec : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000038b9d : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x00000000001af44d : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001af515 : cmp dword ptr [rcx], eax ; add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001989f5 : cmp dword ptr [rcx], eax ; add byte ptr [rdx - 0xd], dl ; jmp rsp
0x000000000012839d : cmp dword ptr [rdi + 0x10], 2 ; je 0x1283ae ; ret
0x00000000000773e4 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b561 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7b576 ; ret
0x00000000000bb220 : cmp dword ptr [rdi + 8], edx ; jne 0xbb203 ; ret
0x0000000000114a48 : cmp dword ptr [rdi], 0 ; je 0x114a5e ; ret
0x0000000000115b5f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000088f21 : cmp dword ptr [rip + 0x33d940], 0 ; je 0x88f39 ; ret
0x00000000000e0d0b : cmp dword ptr [rip + 0x66000002], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00000000001337c0 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x1337d8 ; xor eax, eax ; ret
0x00000000001024ed : cmp dword ptr [rsi], 0 ; je 0x1024fe ; pop rbx ; ret
0x0000000000003836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000f7673 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000000f7673 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x0000000000138ec7 : cmp dword ptr fs:[rax], 0x18 ; je 0x138ed6 ; ret
0x000000000002d9cf : cmp dword ptr fs:[rax], eax ; mov qword ptr [rax], rdx ; ret
0x00000000000fba5d : cmp eax, -0x5f ; je 0xfba80 ; neg eax ; pop rbx ; ret
0x0000000000123000 : cmp eax, -0xb ; je 0x122ffe ; pop rbx ; ret
0x000000000014299e : cmp eax, -1 ; je 0x1429b9 ; add rsp, 8 ; ret
0x0000000000072cba : cmp eax, -1 ; je 0x72ccb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072cfe : cmp eax, -1 ; je 0x72d0f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007b594 : cmp eax, -1 ; je 0x7b5a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bf77 : cmp eax, -1 ; je 0x7bf88 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000115b70 : cmp eax, -1 ; jne 0x115b6f ; xor eax, eax ; leave ; ret
0x00000000000484c4 : cmp eax, -1 ; jne 0x484b9 ; mov rax, rdx ; ret
0x0000000000074699 : cmp eax, -1 ; jne 0x746a6 ; pop rbx ; ret
0x000000000007bfcf : cmp eax, -1 ; jne 0x7bfc0 ; pop rbx ; ret
0x0000000000003ba7 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000004b512 : cmp eax, 0x1451e9 ; call 0x777f7
0x00000000001af865 : cmp eax, 0x1c380001 ; cmc ; call qword ptr [rdx]
0x00000000001af915 : cmp eax, 0x1e280001 ; cmc ; jmp qword ptr [rcx]
0x00000000001af92d : cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x0000000000120712 : cmp eax, 0x2a7fe5 ; call rax
0x000000000011feb3 : cmp eax, 0x2a87e8 ; call rax
0x00000000001014ab : cmp eax, 0x2c2d60 ; ret
0x0000000000198a6d : cmp eax, 0x32640001 ; jmp rsp
0x000000000008167c : cmp eax, 0x394d0034 ; ret 0x8948
0x0000000000195c29 : cmp eax, 0x3e90fffc ; cld ; call qword ptr [rax]
0x00000000000e0d0c : cmp eax, 0x66000002 ; movq mm0, mm2 ; jmp 0xe0cfa
0x00000000000cdb9b : cmp eax, 0x7275 ; jne 0xcdb84 ; xor eax, eax ; ret
0x000000000005946e : cmp eax, 0x83480005 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000075bdf : cmp eax, 0x89000056 ; ret 0x98eb
0x0000000000097356 : cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x0000000000133b12 : cmp eax, 0x894cf631 ; out 0xe8, eax ; ret
0x00000000000c89ba : cmp eax, 0x89e18948 ; ret 0xf631
0x00000000000c00ae : cmp eax, 0xc85a1 ; add rax, rdi ; jmp rax
0x00000000000b64ea : cmp eax, 0xff ; cmove eax, edx ; ret
0x00000000000b64ea : cmp eax, 0xff ; cmove eax, edx ; ret
0x00000000001056bf : cmp eax, 0xfffff000 ; ja 0x1056d8 ; ret
0x000000000010737f : cmp eax, 0xfffff000 ; ja 0x107398 ; ret
0x00000000001075c1 : cmp eax, 0xfffff000 ; ja 0x1075d7 ; ret
0x0000000000107673 : cmp eax, 0xfffff000 ; ja 0x107688 ; ret
0x00000000001076ad : cmp eax, 0xfffff000 ; ja 0x1076c8 ; ret
0x000000000010825e : cmp eax, 0xfffff000 ; ja 0x108277 ; ret
0x00000000001083de : cmp eax, 0xfffff000 ; ja 0x1083f7 ; ret
0x0000000000108878 : cmp eax, 0xfffff000 ; ja 0x108887 ; ret
0x000000000010891a : cmp eax, 0xfffff000 ; ja 0x10892f ; ret
0x00000000001089ca : cmp eax, 0xfffff000 ; ja 0x1089df ; ret
0x000000000011582b : cmp eax, 0xfffff000 ; ja 0x115840 ; ret
0x00000000001158d8 : cmp eax, 0xfffff000 ; ja 0x115902 ; ret
0x000000000011759d : cmp eax, 0xfffff000 ; ja 0x1175b8 ; ret
0x000000000011764d : cmp eax, 0xfffff000 ; ja 0x117668 ; ret
0x0000000000035429 : cmp eax, 0xfffff000 ; ja 0x35458 ; ret
0x0000000000035731 : cmp eax, 0xfffff000 ; ja 0x35748 ; ret
0x000000000003579d : cmp eax, 0xfffff000 ; ja 0x357b8 ; ret
0x00000000000357e7 : cmp eax, 0xfffff000 ; ja 0x357f7 ; ret
0x00000000000bc438 : cmp eax, 0xfffff000 ; ja 0xbc450 ; ret
0x00000000000c83d8 : cmp eax, 0xfffff000 ; ja 0xc83f0 ; pop rbx ; ret
0x00000000000c9652 : cmp eax, 0xfffff000 ; ja 0xc9667 ; ret
0x00000000000cbfe1 : cmp eax, 0xfffff000 ; ja 0xcbff7 ; ret
0x00000000000cc07b : cmp eax, 0xfffff000 ; ja 0xcc08f ; ret
0x00000000000cc16c : cmp eax, 0xfffff000 ; ja 0xcc17f ; ret
0x00000000000cd2c4 : cmp eax, 0xfffff000 ; ja 0xcd2d7 ; ret
0x00000000000cd334 : cmp eax, 0xfffff000 ; ja 0xcd347 ; ret
0x00000000000cd588 : cmp eax, 0xfffff000 ; ja 0xcd597 ; ret
0x00000000000cd608 : cmp eax, 0xfffff000 ; ja 0xcd617 ; ret
0x00000000000f6be6 : cmp eax, 0xfffff000 ; ja 0xf6bf8 ; ret
0x00000000000f6c35 : cmp eax, 0xfffff000 ; ja 0xf6c48 ; ret
0x00000000000f6c86 : cmp eax, 0xfffff000 ; ja 0xf6c98 ; ret
0x00000000000f6cde : cmp eax, 0xfffff000 ; ja 0xf6cf8 ; ret
0x00000000000f6d42 : cmp eax, 0xfffff000 ; ja 0xf6d58 ; ret
0x00000000000f6d9b : cmp eax, 0xfffff000 ; ja 0xf6db0 ; ret
0x00000000000f6f7a : cmp eax, 0xfffff000 ; ja 0xf6f90 ; ret
0x00000000000f7644 : cmp eax, 0xfffff000 ; ja 0xf7688 ; ret
0x00000000000fbad3 : cmp eax, 0xfffff000 ; ja 0xfbae8 ; ret
0x00000000000fbb27 : cmp eax, 0xfffff000 ; ja 0xfbb38 ; ret
0x00000000000fc27b : cmp eax, 0xfffff000 ; ja 0xfc28f ; ret
0x00000000000fc79f : cmp eax, 0xfffff000 ; ja 0xfc7b7 ; ret
0x00000000000fd04b : cmp eax, 0xfffff000 ; ja 0xfd05f ; ret
0x00000000000fd0fb : cmp eax, 0xfffff000 ; ja 0xfd10f ; ret
0x00000000000fd1a6 : cmp eax, 0xfffff000 ; ja 0xfd1b7 ; ret
0x00000000000fd216 : cmp eax, 0xfffff000 ; ja 0xfd227 ; ret
0x00000000000fd297 : cmp eax, 0xfffff000 ; ja 0xfd2a7 ; ret
0x00000000000fd347 : cmp eax, 0xfffff000 ; ja 0xfd357 ; ret
0x00000000000fd897 : cmp eax, 0xfffff000 ; ja 0xfd8a8 ; ret
0x00000000000fefb8 : cmp eax, 0xfffff000 ; ja 0xfefd0 ; ret
0x00000000000ff04c : cmp eax, 0xfffff000 ; ja 0xff060 ; ret
0x00000000000ff0ec : cmp eax, 0xfffff000 ; ja 0xff100 ; ret
0x00000000000ff140 : cmp eax, 0xfffff000 ; ja 0xff158 ; ret
0x00000000001014da : cmp eax, 0xfffff001 ; jae 0x1014e9 ; ret
0x0000000000101748 : cmp eax, 0xfffff001 ; jae 0x101757 ; ret
0x0000000000101778 : cmp eax, 0xfffff001 ; jae 0x101787 ; ret
0x00000000001017b1 : cmp eax, 0xfffff001 ; jae 0x1017f0 ; ret
0x00000000001017e1 : cmp eax, 0xfffff001 ; jae 0x1017f0 ; ret
0x0000000000101808 : cmp eax, 0xfffff001 ; jae 0x101817 ; ret
0x0000000000101838 : cmp eax, 0xfffff001 ; jae 0x101847 ; ret
0x000000000010186b : cmp eax, 0xfffff001 ; jae 0x10187a ; ret
0x0000000000101898 : cmp eax, 0xfffff001 ; jae 0x1018a7 ; ret
0x00000000001018c8 : cmp eax, 0xfffff001 ; jae 0x1018d7 ; ret
0x00000000001018f8 : cmp eax, 0xfffff001 ; jae 0x101907 ; ret
0x0000000000101928 : cmp eax, 0xfffff001 ; jae 0x101937 ; ret
0x0000000000105feb : cmp eax, 0xfffff001 ; jae 0x105ffa ; ret
0x0000000000106018 : cmp eax, 0xfffff001 ; jae 0x106027 ; ret
0x0000000000106048 : cmp eax, 0xfffff001 ; jae 0x106057 ; ret
0x000000000010607b : cmp eax, 0xfffff001 ; jae 0x10608a ; ret
0x00000000001060ab : cmp eax, 0xfffff001 ; jae 0x1060ba ; ret
0x00000000001060d8 : cmp eax, 0xfffff001 ; jae 0x1060e7 ; ret
0x000000000010610b : cmp eax, 0xfffff001 ; jae 0x10611a ; ret
0x0000000000106138 : cmp eax, 0xfffff001 ; jae 0x106147 ; ret
0x0000000000106168 : cmp eax, 0xfffff001 ; jae 0x106177 ; ret
0x000000000010619b : cmp eax, 0xfffff001 ; jae 0x1061aa ; ret
0x00000000001061c8 : cmp eax, 0xfffff001 ; jae 0x1061d7 ; ret
0x00000000001061fb : cmp eax, 0xfffff001 ; jae 0x10620a ; ret
0x00000000001072e8 : cmp eax, 0xfffff001 ; jae 0x1072f7 ; ret
0x0000000000107318 : cmp eax, 0xfffff001 ; jae 0x107327 ; ret
0x0000000000107448 : cmp eax, 0xfffff001 ; jae 0x107457 ; ret
0x0000000000107488 : cmp eax, 0xfffff001 ; jae 0x107497 ; ret
0x00000000001074b8 : cmp eax, 0xfffff001 ; jae 0x1074c7 ; ret
0x00000000001074e8 : cmp eax, 0xfffff001 ; jae 0x1074f7 ; ret
0x0000000000107518 : cmp eax, 0xfffff001 ; jae 0x107527 ; ret
0x000000000010773b : cmp eax, 0xfffff001 ; jae 0x10774a ; ret
0x0000000000107768 : cmp eax, 0xfffff001 ; jae 0x107777 ; ret
0x0000000000107798 : cmp eax, 0xfffff001 ; jae 0x1077a7 ; ret
0x00000000001077c8 : cmp eax, 0xfffff001 ; jae 0x1077d7 ; ret
0x000000000010780b : cmp eax, 0xfffff001 ; jae 0x10781a ; ret
0x0000000000107838 : cmp eax, 0xfffff001 ; jae 0x107847 ; ret
0x0000000000107868 : cmp eax, 0xfffff001 ; jae 0x107877 ; ret
0x0000000000107898 : cmp eax, 0xfffff001 ; jae 0x1078a7 ; ret
0x00000000001078c8 : cmp eax, 0xfffff001 ; jae 0x1078d7 ; ret
0x00000000001078f8 : cmp eax, 0xfffff001 ; jae 0x107907 ; ret
0x0000000000107928 : cmp eax, 0xfffff001 ; jae 0x107937 ; ret
0x0000000000107958 : cmp eax, 0xfffff001 ; jae 0x107967 ; ret
0x0000000000107988 : cmp eax, 0xfffff001 ; jae 0x107997 ; ret
0x00000000001079bb : cmp eax, 0xfffff001 ; jae 0x1079ca ; ret
0x00000000001079f4 : cmp eax, 0xfffff001 ; jae 0x107a36 ; ret
0x0000000000107a27 : cmp eax, 0xfffff001 ; jae 0x107a36 ; ret
0x0000000000107a48 : cmp eax, 0xfffff001 ; jae 0x107a57 ; ret
0x0000000000107a7b : cmp eax, 0xfffff001 ; jae 0x107a8a ; ret
0x0000000000107aa8 : cmp eax, 0xfffff001 ; jae 0x107ab7 ; ret
0x0000000000107ad8 : cmp eax, 0xfffff001 ; jae 0x107ae7 ; ret
0x0000000000107b08 : cmp eax, 0xfffff001 ; jae 0x107b17 ; ret
0x0000000000107b38 : cmp eax, 0xfffff001 ; jae 0x107b47 ; ret
0x0000000000107b68 : cmp eax, 0xfffff001 ; jae 0x107b77 ; ret
0x0000000000107b9b : cmp eax, 0xfffff001 ; jae 0x107baa ; ret
0x0000000000107bcb : cmp eax, 0xfffff001 ; jae 0x107bda ; ret
0x0000000000107bf8 : cmp eax, 0xfffff001 ; jae 0x107c07 ; ret
0x0000000000107c28 : cmp eax, 0xfffff001 ; jae 0x107c37 ; ret
0x0000000000107c5b : cmp eax, 0xfffff001 ; jae 0x107c6a ; ret
0x0000000000107c8b : cmp eax, 0xfffff001 ; jae 0x107c9a ; ret
0x0000000000107cbb : cmp eax, 0xfffff001 ; jae 0x107cca ; ret
0x0000000000107cf4 : cmp eax, 0xfffff001 ; jae 0x107d36 ; ret
0x0000000000107d27 : cmp eax, 0xfffff001 ; jae 0x107d36 ; ret
0x0000000000107d48 : cmp eax, 0xfffff001 ; jae 0x107d57 ; ret
0x0000000000107d84 : cmp eax, 0xfffff001 ; jae 0x107dc6 ; ret
0x0000000000107db7 : cmp eax, 0xfffff001 ; jae 0x107dc6 ; ret
0x0000000000107dd8 : cmp eax, 0xfffff001 ; jae 0x107de7 ; ret
0x0000000000107e08 : cmp eax, 0xfffff001 ; jae 0x107e17 ; ret
0x0000000000107e44 : cmp eax, 0xfffff001 ; jae 0x107e86 ; ret
0x0000000000107e77 : cmp eax, 0xfffff001 ; jae 0x107e86 ; ret
0x0000000000107e98 : cmp eax, 0xfffff001 ; jae 0x107ea7 ; ret
0x0000000000107ecb : cmp eax, 0xfffff001 ; jae 0x107eda ; ret
0x0000000000107ef8 : cmp eax, 0xfffff001 ; jae 0x107f07 ; ret
0x0000000000107f28 : cmp eax, 0xfffff001 ; jae 0x107f37 ; ret
0x0000000000107f5b : cmp eax, 0xfffff001 ; jae 0x107f6a ; ret
0x0000000000107f91 : cmp eax, 0xfffff001 ; jae 0x107fd0 ; ret
0x0000000000107fc1 : cmp eax, 0xfffff001 ; jae 0x107fd0 ; ret
0x0000000000107fe8 : cmp eax, 0xfffff001 ; jae 0x107ff7 ; ret
0x000000000010801b : cmp eax, 0xfffff001 ; jae 0x10802a ; ret
0x000000000010804b : cmp eax, 0xfffff001 ; jae 0x10805a ; ret
0x00000000001080a1 : cmp eax, 0xfffff001 ; jae 0x1080e0 ; ret
0x00000000001080d1 : cmp eax, 0xfffff001 ; jae 0x1080e0 ; ret
0x00000000001080f8 : cmp eax, 0xfffff001 ; jae 0x108107 ; ret
0x0000000000108131 : cmp eax, 0xfffff001 ; jae 0x108170 ; ret
0x0000000000108161 : cmp eax, 0xfffff001 ; jae 0x108170 ; ret
0x0000000000108188 : cmp eax, 0xfffff001 ; jae 0x108197 ; ret
0x00000000001081b8 : cmp eax, 0xfffff001 ; jae 0x1081c7 ; ret
0x00000000001081eb : cmp eax, 0xfffff001 ; jae 0x1081fa ; ret
0x0000000000108218 : cmp eax, 0xfffff001 ; jae 0x108227 ; ret
0x0000000000108314 : cmp eax, 0xfffff001 ; jae 0x108356 ; ret
0x0000000000108347 : cmp eax, 0xfffff001 ; jae 0x108356 ; ret
0x0000000000108371 : cmp eax, 0xfffff001 ; jae 0x1083b0 ; ret
0x00000000001083a1 : cmp eax, 0xfffff001 ; jae 0x1083b0 ; ret
0x0000000000108491 : cmp eax, 0xfffff001 ; jae 0x1084d0 ; ret
0x00000000001084c1 : cmp eax, 0xfffff001 ; jae 0x1084d0 ; ret
0x00000000001084f4 : cmp eax, 0xfffff001 ; jae 0x108536 ; ret
0x0000000000108527 : cmp eax, 0xfffff001 ; jae 0x108536 ; ret
0x000000000010854b : cmp eax, 0xfffff001 ; jae 0x10855a ; ret
0x0000000000108578 : cmp eax, 0xfffff001 ; jae 0x108587 ; ret
0x00000000001085a8 : cmp eax, 0xfffff001 ; jae 0x1085b7 ; ret
0x00000000001085db : cmp eax, 0xfffff001 ; jae 0x1085ea ; ret
0x0000000000108b34 : cmp eax, 0xfffff001 ; jae 0x108b76 ; ret
0x0000000000108b67 : cmp eax, 0xfffff001 ; jae 0x108b76 ; ret
0x0000000000108b94 : cmp eax, 0xfffff001 ; jae 0x108bd6 ; ret
0x0000000000108bc7 : cmp eax, 0xfffff001 ; jae 0x108bd6 ; ret
0x0000000000108be8 : cmp eax, 0xfffff001 ; jae 0x108bf7 ; ret
0x0000000000108c18 : cmp eax, 0xfffff001 ; jae 0x108c27 ; ret
0x0000000000108c48 : cmp eax, 0xfffff001 ; jae 0x108c57 ; ret
0x0000000000108c78 : cmp eax, 0xfffff001 ; jae 0x108c87 ; ret
0x0000000000108cab : cmp eax, 0xfffff001 ; jae 0x108cba ; ret
0x0000000000108cdb : cmp eax, 0xfffff001 ; jae 0x108cea ; ret
0x0000000000108d08 : cmp eax, 0xfffff001 ; jae 0x108d17 ; ret
0x0000000000108d38 : cmp eax, 0xfffff001 ; jae 0x108d47 ; ret
0x0000000000108d68 : cmp eax, 0xfffff001 ; jae 0x108d77 ; ret
0x0000000000108d98 : cmp eax, 0xfffff001 ; jae 0x108da7 ; ret
0x000000000014069b : cmp eax, 0xfffff001 ; jae 0x1406aa ; ret
0x00000000001406eb : cmp eax, 0xfffff001 ; jae 0x1406fa ; ret
0x0000000000035768 : cmp eax, 0xfffff001 ; jae 0x35777 ; ret
0x0000000000035e28 : cmp eax, 0xfffff001 ; jae 0x35e37 ; ret
0x0000000000047b22 : cmp eax, 0xfffff001 ; jae 0x47b35 ; xor eax, eax ; ret
0x000000000006b368 : cmp eax, 0xfffff001 ; jae 0x6b377 ; ret
0x000000000006b39b : cmp eax, 0xfffff001 ; jae 0x6b3aa ; ret
0x00000000000bc518 : cmp eax, 0xfffff001 ; jae 0xbc527 ; ret
0x00000000000bf608 : cmp eax, 0xfffff001 ; jae 0xbf617 ; ret
0x00000000000bf638 : cmp eax, 0xfffff001 ; jae 0xbf647 ; ret
0x00000000000cbf38 : cmp eax, 0xfffff001 ; jae 0xcbf47 ; ret
0x00000000000cc12b : cmp eax, 0xfffff001 ; jae 0xcc13a ; ret
0x00000000000cc208 : cmp eax, 0xfffff001 ; jae 0xcc217 ; ret
0x00000000000cc291 : cmp eax, 0xfffff001 ; jae 0xcc2d0 ; ret
0x00000000000cc2c1 : cmp eax, 0xfffff001 ; jae 0xcc2d0 ; ret
0x00000000000cc2f1 : cmp eax, 0xfffff001 ; jae 0xcc330 ; ret
0x00000000000cc321 : cmp eax, 0xfffff001 ; jae 0xcc330 ; ret
0x00000000000cc6f2 : cmp eax, 0xfffff001 ; jae 0xcc701 ; ret
0x00000000000cc778 : cmp eax, 0xfffff001 ; jae 0xcc787 ; ret
0x00000000000cd288 : cmp eax, 0xfffff001 ; jae 0xcd297 ; ret
0x00000000000cd428 : cmp eax, 0xfffff001 ; jae 0xcd437 ; ret
0x00000000000cd458 : cmp eax, 0xfffff001 ; jae 0xcd467 ; ret
0x00000000000cd4b8 : cmp eax, 0xfffff001 ; jae 0xcd4c7 ; ret
0x00000000000cd4e8 : cmp eax, 0xfffff001 ; jae 0xcd4f7 ; ret
0x00000000000cd518 : cmp eax, 0xfffff001 ; jae 0xcd527 ; ret
0x00000000000cd548 : cmp eax, 0xfffff001 ; jae 0xcd557 ; ret
0x00000000000ea768 : cmp eax, 0xfffff001 ; jae 0xea777 ; ret
0x00000000000ea798 : cmp eax, 0xfffff001 ; jae 0xea7a7 ; ret
0x00000000000ea7c8 : cmp eax, 0xfffff001 ; jae 0xea7d7 ; ret
0x00000000000ea7f8 : cmp eax, 0xfffff001 ; jae 0xea807 ; ret
0x00000000000ea828 : cmp eax, 0xfffff001 ; jae 0xea837 ; ret
0x00000000000ea858 : cmp eax, 0xfffff001 ; jae 0xea867 ; ret
0x00000000000ea888 : cmp eax, 0xfffff001 ; jae 0xea897 ; ret
0x00000000000ea8b8 : cmp eax, 0xfffff001 ; jae 0xea8c7 ; ret
0x00000000000f5a74 : cmp eax, 0xfffff001 ; jae 0xf5ab6 ; ret
0x00000000000f5aa7 : cmp eax, 0xfffff001 ; jae 0xf5ab6 ; ret
0x00000000000f5ad4 : cmp eax, 0xfffff001 ; jae 0xf5b16 ; ret
0x00000000000f5b07 : cmp eax, 0xfffff001 ; jae 0xf5b16 ; ret
0x00000000000f6b48 : cmp eax, 0xfffff001 ; jae 0xf6b57 ; ret
0x00000000000f6de8 : cmp eax, 0xfffff001 ; jae 0xf6df7 ; ret
0x00000000000f6e18 : cmp eax, 0xfffff001 ; jae 0xf6e27 ; ret
0x00000000000f6ee8 : cmp eax, 0xfffff001 ; jae 0xf6ef7 ; ret
0x00000000000f6f18 : cmp eax, 0xfffff001 ; jae 0xf6f27 ; ret
0x00000000000f6fd8 : cmp eax, 0xfffff001 ; jae 0xf6fe7 ; ret
0x00000000000f7008 : cmp eax, 0xfffff001 ; jae 0xf7017 ; ret
0x00000000000f7041 : cmp eax, 0xfffff001 ; jae 0xf7080 ; ret
0x00000000000f7071 : cmp eax, 0xfffff001 ; jae 0xf7080 ; ret
0x00000000000f7261 : cmp eax, 0xfffff001 ; jae 0xf72a0 ; ret
0x00000000000f7291 : cmp eax, 0xfffff001 ; jae 0xf72a0 ; ret
0x00000000000f72c1 : cmp eax, 0xfffff001 ; jae 0xf7300 ; ret
0x00000000000f72f1 : cmp eax, 0xfffff001 ; jae 0xf7300 ; ret
0x00000000000f7318 : cmp eax, 0xfffff001 ; jae 0xf7327 ; ret
0x00000000000f77a8 : cmp eax, 0xfffff001 ; jae 0xf77b7 ; ret
0x00000000000f78f1 : cmp eax, 0xfffff001 ; jae 0xf7930 ; ret
0x00000000000f7921 : cmp eax, 0xfffff001 ; jae 0xf7930 ; ret
0x00000000000f7948 : cmp eax, 0xfffff001 ; jae 0xf7957 ; ret
0x00000000000f7978 : cmp eax, 0xfffff001 ; jae 0xf7987 ; ret
0x00000000000f79a8 : cmp eax, 0xfffff001 ; jae 0xf79b7 ; ret
0x00000000000f79d8 : cmp eax, 0xfffff001 ; jae 0xf79e7 ; ret
0x00000000000f7a08 : cmp eax, 0xfffff001 ; jae 0xf7a17 ; ret
0x00000000000f7a41 : cmp eax, 0xfffff001 ; jae 0xf7a80 ; ret
0x00000000000f7a71 : cmp eax, 0xfffff001 ; jae 0xf7a80 ; ret
0x00000000000f7a98 : cmp eax, 0xfffff001 ; jae 0xf7aa7 ; ret
0x00000000000f7ac8 : cmp eax, 0xfffff001 ; jae 0xf7ad7 ; ret
0x00000000000f8308 : cmp eax, 0xfffff001 ; jae 0xf8317 ; ret
0x00000000000f8338 : cmp eax, 0xfffff001 ; jae 0xf8347 ; ret
0x00000000000f8368 : cmp eax, 0xfffff001 ; jae 0xf8377 ; ret
0x00000000000f839b : cmp eax, 0xfffff001 ; jae 0xf83aa ; ret
0x00000000000f8978 : cmp eax, 0xfffff001 ; jae 0xf8987 ; ret
0x00000000000f89ab : cmp eax, 0xfffff001 ; jae 0xf89ba ; ret
0x00000000000f89d8 : cmp eax, 0xfffff001 ; jae 0xf89e7 ; ret
0x00000000000f8a08 : cmp eax, 0xfffff001 ; jae 0xf8a17 ; ret
0x00000000000f8a38 : cmp eax, 0xfffff001 ; jae 0xf8a47 ; ret
0x00000000000f8a6b : cmp eax, 0xfffff001 ; jae 0xf8a7a ; ret
0x00000000000f8a98 : cmp eax, 0xfffff001 ; jae 0xf8aa7 ; ret
0x00000000000f8ac8 : cmp eax, 0xfffff001 ; jae 0xf8ad7 ; ret
0x00000000000f8af8 : cmp eax, 0xfffff001 ; jae 0xf8b07 ; ret
0x00000000000fb731 : cmp eax, 0xfffff001 ; jae 0xfb770 ; ret
0x00000000000fb761 : cmp eax, 0xfffff001 ; jae 0xfb770 ; ret
0x00000000000fba9b : cmp eax, 0xfffff001 ; jae 0xfbaaa ; ret
0x00000000000fc214 : cmp eax, 0xfffff001 ; jae 0xfc256 ; ret
0x00000000000fc247 : cmp eax, 0xfffff001 ; jae 0xfc256 ; ret
0x00000000000fc968 : cmp eax, 0xfffff001 ; jae 0xfc977 ; ret
0x00000000000fc998 : cmp eax, 0xfffff001 ; jae 0xfc9a7 ; ret
0x00000000000fc9c8 : cmp eax, 0xfffff001 ; jae 0xfc9d7 ; ret
0x00000000000fcd68 : cmp eax, 0xfffff001 ; jae 0xfcd77 ; ret
0x00000000000fcf48 : cmp eax, 0xfffff001 ; jae 0xfcf57 ; ret
0x00000000000fcf81 : cmp eax, 0xfffff001 ; jae 0xfcfc0 ; ret
0x00000000000fcfb1 : cmp eax, 0xfffff001 ; jae 0xfcfc0 ; ret
0x00000000000fcfe1 : cmp eax, 0xfffff001 ; jae 0xfd020 ; ret
0x00000000000fd011 : cmp eax, 0xfffff001 ; jae 0xfd020 ; ret
0x00000000000fd4d8 : cmp eax, 0xfffff001 ; jae 0xfd4e7 ; ret
0x00000000000fd578 : cmp eax, 0xfffff001 ; jae 0xfd587 ; ret
0x00000000000fd5b4 : cmp eax, 0xfffff001 ; jae 0xfd5f6 ; ret
0x00000000000fd5e7 : cmp eax, 0xfffff001 ; jae 0xfd5f6 ; ret
0x00000000000fd708 : cmp eax, 0xfffff001 ; jae 0xfd717 ; ret
0x00000000000fd738 : cmp eax, 0xfffff001 ; jae 0xfd747 ; ret
0x00000000000fd771 : cmp eax, 0xfffff001 ; jae 0xfd7b0 ; ret
0x00000000000fd7a1 : cmp eax, 0xfffff001 ; jae 0xfd7b0 ; ret
0x00000000000fd7c8 : cmp eax, 0xfffff001 ; jae 0xfd7d7 ; ret
0x00000000000fd801 : cmp eax, 0xfffff001 ; jae 0xfd840 ; ret
0x00000000000fd831 : cmp eax, 0xfffff001 ; jae 0xfd840 ; ret
0x00000000000fd858 : cmp eax, 0xfffff001 ; jae 0xfd867 ; ret
0x00000000000fdbc8 : cmp eax, 0xfffff001 ; jae 0xfdbd7 ; ret
0x00000000000fdbf8 : cmp eax, 0xfffff001 ; jae 0xfdc07 ; ret
0x00000000000fdc28 : cmp eax, 0xfffff001 ; jae 0xfdc37 ; ret
0x00000000000ff178 : cmp eax, 0xfffff001 ; jae 0xff187 ; ret
0x00000000000ff1a8 : cmp eax, 0xfffff001 ; jae 0xff1b7 ; ret
0x0000000000115b48 : cmp eax, 0xfffffe93 ; call rax
0x00000000000aad2f : cmp eax, 2 ; je 0xaad47 ; xor eax, eax ; ret
0x000000000013aa91 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x000000000013bb39 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x000000000013bb79 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000daf5e : cmp eax, 3 ; je 0xdaf78 ; xor eax, eax ; pop rbx ; ret
0x000000000011515a : cmp eax, 4 ; je 0x115165 ; ret
0x000000000019f6fd : cmp eax, dword ptr [rax] ; add al, ah ; sub dl, ch ; jmp rax
0x0000000000079615 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79628 ; movzx eax, byte ptr [rax] ; ret
0x000000000019b1fd : cmp eax, dword ptr [rdx] ; add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x00000000001bd204 : cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x0000000000103b31 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00000000000abb6e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xabc69 ; ret
0x00000000000abb83 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xabc69 ; ret
0x00000000000abb98 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xabc69 ; ret
0x00000000000abbb3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xabc69 ; ret
0x00000000000abbce : cmp eax, dword ptr [rsi + 0x20] ; jne 0xabc69 ; ret
0x00000000000abbe3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xabc65 ; ret
0x00000000000abbf8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xabc65 ; ret
0x00000000000abc03 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabc65 ; ret
0x00000000000abc1e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xabc65 ; ret
0x00000000000abc33 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xabc65 ; ret
0x00000000000abc48 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xabc65 ; ret
0x00000000000abc53 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabc65 ; ret
0x00000000000abb53 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xabc69 ; ret
0x00000000000abb23 : cmp eax, dword ptr [rsi + 4] ; jne 0xabc69 ; ret
0x00000000000abb38 : cmp eax, dword ptr [rsi + 8] ; jne 0xabc69 ; ret
0x00000000001727fa : cmp eax, dword ptr [rsi - 0x10] ; jne 0x172939 ; ret
0x0000000000172813 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x172939 ; ret
0x0000000000172923 : cmp eax, dword ptr [rsi - 4] ; jne 0x172937 ; xor eax, eax ; ret
0x0000000000172843 : cmp eax, dword ptr [rsi - 4] ; jne 0x172939 ; ret
0x0000000000172828 : cmp eax, dword ptr [rsi - 8] ; jne 0x172939 ; ret
0x00000000000abb0d : cmp eax, dword ptr [rsi] ; jne 0xabc68 ; ret
0x0000000000100db4 : cmp eax, ecx ; cmovne rbx, rax ; call 0xfcfd8
0x000000000007cc49 : cmp eax, ecx ; jae 0x7cc77 ; movzx eax, byte ptr [rax] ; ret
0x000000000009ec2d : cmp eax, ecx ; je 0x9ec15 ; ret
0x0000000000003af7 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000172313 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001149cb : cmp eax, edx ; jb 0x1149c6 ; xor eax, eax ; ret
0x00000000001382e1 : cmp eax, edx ; je 0x1382f8 ; add rsp, 8 ; ret
0x00000000001235ba : cmp eax, edx ; jne 0x123599 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000048085 : cmp eax, edx ; jne 0x4807e ; xor eax, eax ; ret
0x000000000008873d : cmp eax, edx ; jne 0x886f7 ; xor eax, eax ; pop rbx ; ret
0x000000000007b2d1 : cmp eax, esi ; jae 0x7b289 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000010e9c9 : cmp eax, esi ; jb 0x10e9e1 ; mov eax, 1 ; ret
0x00000000000d7678 : cmp eax, esi ; jge 0xd7655 ; mov edx, eax ; jmp 0xd765e
0x00000000001972a9 : cmp ebp, ebx ; jmp rsp
0x00000000001972a8 : cmp ebp, ebx ; jmp rsp
0x0000000000101ff5 : cmp ebp, esi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000c038f : cmp ebx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001150f6 : cmp ebx, 0xa ; je 0x115101 ; ret
0x000000000007eed5 : cmp ebx, eax ; je 0x7eee6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017437a : cmp ebx, ebp ; jae 0x17438d ; call qword ptr [rbx]
0x000000000017437a : cmp ebx, ebp ; jae 0x174391 ; call qword ptr [rbx]
0x00000000001743a9 : cmp ebx, ebp ; jb 0x1743a3 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000048b7c : cmp ecx, -1 ; jne 0x48b79 ; mov rax, rdx ; ret
0x00000000000f0e65 : cmp ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000012c4a5 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000f4189 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x0000000000024ca1 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000af423 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b1d53 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b452e : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000dcda2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000dd5fd : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000dd6b2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000017439e : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000bc6c0 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000009dab7 : cmp ecx, dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x000000000009bb73 : cmp ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x000000000009d5d7 : cmp ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x0000000000074f4e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000001fb03 : cmp ecx, eax ; je 0x1faa8 ; jmp 0x1fad1
0x000000000016fa0b : cmp ecx, eax ; jne 0x16fa39 ; xor eax, eax ; ret
0x000000000017084b : cmp ecx, eax ; jne 0x170879 ; xor eax, eax ; ret
0x000000000017087f : cmp ecx, eax ; jne 0x17088c ; xor eax, eax ; ret
0x000000000013bec3 : cmp ecx, edx ; jae 0x13bed6 ; xor eax, eax ; ret
0x000000000013bf03 : cmp ecx, edx ; jae 0x13bf16 ; xor eax, eax ; ret
0x000000000009ebd8 : cmp ecx, edx ; je 0x9ebd9 ; cmp ecx, esi ; je 0x9ebd9 ; ret
0x000000000009ebdc : cmp ecx, esi ; je 0x9ebd5 ; ret
0x00000000000acc19 : cmp edi, 0x7f ; ja 0xacc2f ; mov eax, edi ; ret
0x0000000000095cf7 : cmp edi, 0xd ; je 0x95d11 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000001745b8 : cmp edi, 1 ; ja 0x1745c5 ; ret
0x000000000010a6dd : cmp edi, 9 ; setbe al ; ret
0x000000000010b02d : cmp edi, 9 ; setbe al ; ret
0x000000000004a49a : cmp edi, eax ; jbe 0x4a498 ; nop ; pop rbx ; ret
0x00000000000504b5 : cmp edi, ecx ; ja 0x504a0 ; mov eax, r8d ; ret
0x000000000019aa41 : cmp edi, ecx ; jmp rsp
0x00000000000fce31 : cmp edi, edx ; ja 0xfce65 ; ret
0x00000000000f6a40 : cmp edi, esi ; ja 0xf6a35 ; ret
0x000000000004a5bb : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000195be5 : cmp edi, esp ; call qword ptr [rax + 0x10fffc3c]
0x0000000000195c25 : cmp edi, esp ; call qword ptr [rax]
0x000000000003aa00 : cmp edx, -1 ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000cd1f8 : cmp edx, 0 ; mov eax, edx ; jle 0xcd210 ; ret
0x00000000001193cf : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x0000000000119450 : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000b957d : cmp edx, 0x8944ffff ; ret 0x894d
0x00000000000d16d6 : cmp edx, 1 ; sete al ; ret
0x000000000002da7b : cmp edx, dword ptr [rdi + 4] ; jb 0x2da8e ; ret
0x00000000001153a2 : cmp edx, eax ; jne 0x115385 ; ret
0x0000000000083f8a : cmp edx, eax ; jne 0x83f55 ; ret
0x00000000000ac167 : cmp edx, eax ; jne 0xac157 ; xor eax, eax ; ret
0x00000000001234d6 : cmp edx, eax ; sbb eax, eax ; ret
0x0000000000196ea1 : cmp edx, ebp ; jmp rsp
0x000000000013bdaf : cmp edx, ecx ; je 0x13bdc5 ; ret
0x000000000008f2e8 : cmp edx, ecx ; jne 0x8f2d5 ; ret
0x00000000000cda97 : cmp edx, ecx ; jne 0xcdac4 ; ret
0x0000000000114aaa : cmp edx, edi ; setae al ; ret
0x0000000000123ec6 : cmp edx, esi ; jb 0x123ebd ; mov eax, 0xffffffff ; ret
0x000000000009ebb8 : cmp edx, esi ; je 0x9ebb5 ; ret
0x00000000000adac6 : cmp edx, esi ; je 0xadad7 ; test edx, edx ; jne 0xadac9 ; ret
0x0000000000073059 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000007cc89 : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000000774f8 : cmp esi, 2 ; je 0x77510 ; mov dword ptr [rdi], edx ; ret
0x000000000002a695 : cmp esi, 3 ; je 0x2a6a6 ; pop rbx ; ret
0x0000000000174869 : cmp esi, dword ptr [rax + 0x1f0fffea] ; add bl, dh ; ret
0x00000000000ac821 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000012e7ea : cmp esi, dword ptr [rdx + 0x28] ; ja 0x12e7e1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001852c4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000072d5a : cmp esi, ecx ; jb 0x72d57 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000014a958 : cmp esi, ecx ; jle 0x14a89d ; ret
0x000000000007c00a : cmp esi, ecx ; jne 0x7c007 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000123f3e : cmp esi, edx ; ja 0x123f2d ; mov eax, 0xffffffff ; ret
0x000000000004821d : cmp esi, edx ; jne 0x48216 ; xor eax, eax ; ret
0x0000000000195e8d : cmp esp, 0xfc7710ff ; call rax
0x0000000000195c8d : cmp esp, 0xfc8166ff ; call rsi
0x0000000000195e89 : cmp esp, 0xfc8170ff ; call qword ptr [rax]
0x0000000000195e49 : cmp esp, 0xfc817aff ; jmp qword ptr [rax]
0x0000000000195e51 : cmp esp, 0xfc8790ff ; jmp qword ptr [rax]
0x00000000000796a1 : cmp esp, dword ptr [rax + 0xf480034] ; ret 0x8948
0x00000000001745b4 : cmp esp, dword ptr [rip - 0x7cb800] ; add dword ptr [rdi + 3], esi ; ret
0x00000000001745a5 : cmp esp, dword ptr [rip] ; add bl, dh ; ret
0x0000000000195be1 : cmp esp, edi ; call qword ptr [rax]
0x00000000000f6a0c : cmp esp, esi ; ja 0xf69a8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072aa7 : cmp qword ptr [rax + 0x30], 0 ; je 0x72ab7 ; ret
0x00000000000773e3 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b560 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7b577 ; ret
0x0000000000114a47 : cmp qword ptr [rdi], 0 ; je 0x114a5f ; ret
0x00000000001024ec : cmp qword ptr [rsi], 0 ; je 0x1024ff ; pop rbx ; ret
0x0000000000094cd2 : cmp r11b, r14b ; ret
0x00000000001150f5 : cmp r11d, 0xa ; je 0x115102 ; ret
0x00000000000f6a0b : cmp r12, rsi ; ja 0xf69a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c465 : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x5c438
0x000000000009ec2c : cmp r8d, ecx ; je 0x9ec16 ; ret
0x00000000000d7677 : cmp r8d, esi ; jge 0xd7656 ; mov edx, eax ; jmp 0xd765f
0x000000000001fb02 : cmp r9, rax ; je 0x1faa9 ; jmp 0x1fad2
0x00000000000e0fef : cmp r9b, 0x11 ; je 0xe1033 ; mov rdx, rax ; jmp 0xe0f97
0x000000000010f1c1 : cmp r9b, r13b ; ret
0x00000000001056be : cmp rax, -0x1000 ; ja 0x1056d9 ; ret
0x000000000010737e : cmp rax, -0x1000 ; ja 0x107399 ; ret
0x00000000001075c0 : cmp rax, -0x1000 ; ja 0x1075d8 ; ret
0x0000000000107672 : cmp rax, -0x1000 ; ja 0x107689 ; ret
0x00000000001076ac : cmp rax, -0x1000 ; ja 0x1076c9 ; ret
0x000000000010825d : cmp rax, -0x1000 ; ja 0x108278 ; ret
0x00000000001083dd : cmp rax, -0x1000 ; ja 0x1083f8 ; ret
0x0000000000108877 : cmp rax, -0x1000 ; ja 0x108888 ; ret
0x0000000000108919 : cmp rax, -0x1000 ; ja 0x108930 ; ret
0x00000000001089c9 : cmp rax, -0x1000 ; ja 0x1089e0 ; ret
0x000000000011582a : cmp rax, -0x1000 ; ja 0x115841 ; ret
0x00000000001158d7 : cmp rax, -0x1000 ; ja 0x115903 ; ret
0x000000000011759c : cmp rax, -0x1000 ; ja 0x1175b9 ; ret
0x000000000011764c : cmp rax, -0x1000 ; ja 0x117669 ; ret
0x0000000000035428 : cmp rax, -0x1000 ; ja 0x35459 ; ret
0x0000000000035730 : cmp rax, -0x1000 ; ja 0x35749 ; ret
0x000000000003579c : cmp rax, -0x1000 ; ja 0x357b9 ; ret
0x00000000000357e6 : cmp rax, -0x1000 ; ja 0x357f8 ; ret
0x00000000000bc437 : cmp rax, -0x1000 ; ja 0xbc451 ; ret
0x00000000000c83d7 : cmp rax, -0x1000 ; ja 0xc83f1 ; pop rbx ; ret
0x00000000000c9651 : cmp rax, -0x1000 ; ja 0xc9668 ; ret
0x00000000000cbfe0 : cmp rax, -0x1000 ; ja 0xcbff8 ; ret
0x00000000000cc07a : cmp rax, -0x1000 ; ja 0xcc090 ; ret
0x00000000000cc16b : cmp rax, -0x1000 ; ja 0xcc180 ; ret
0x00000000000cd2c3 : cmp rax, -0x1000 ; ja 0xcd2d8 ; ret
0x00000000000cd333 : cmp rax, -0x1000 ; ja 0xcd348 ; ret
0x00000000000cd587 : cmp rax, -0x1000 ; ja 0xcd598 ; ret
0x00000000000cd607 : cmp rax, -0x1000 ; ja 0xcd618 ; ret
0x00000000000f6be5 : cmp rax, -0x1000 ; ja 0xf6bf9 ; ret
0x00000000000f6c34 : cmp rax, -0x1000 ; ja 0xf6c49 ; ret
0x00000000000f6c85 : cmp rax, -0x1000 ; ja 0xf6c99 ; ret
0x00000000000f6cdd : cmp rax, -0x1000 ; ja 0xf6cf9 ; ret
0x00000000000f6d41 : cmp rax, -0x1000 ; ja 0xf6d59 ; ret
0x00000000000f6d9a : cmp rax, -0x1000 ; ja 0xf6db1 ; ret
0x00000000000f6f79 : cmp rax, -0x1000 ; ja 0xf6f91 ; ret
0x00000000000f7643 : cmp rax, -0x1000 ; ja 0xf7689 ; ret
0x00000000000fbad2 : cmp rax, -0x1000 ; ja 0xfbae9 ; ret
0x00000000000fbb26 : cmp rax, -0x1000 ; ja 0xfbb39 ; ret
0x00000000000fc27a : cmp rax, -0x1000 ; ja 0xfc290 ; ret
0x00000000000fc79e : cmp rax, -0x1000 ; ja 0xfc7b8 ; ret
0x00000000000fd04a : cmp rax, -0x1000 ; ja 0xfd060 ; ret
0x00000000000fd0fa : cmp rax, -0x1000 ; ja 0xfd110 ; ret
0x00000000000fd1a5 : cmp rax, -0x1000 ; ja 0xfd1b8 ; ret
0x00000000000fd215 : cmp rax, -0x1000 ; ja 0xfd228 ; ret
0x00000000000fd296 : cmp rax, -0x1000 ; ja 0xfd2a8 ; ret
0x00000000000fd346 : cmp rax, -0x1000 ; ja 0xfd358 ; ret
0x00000000000fd896 : cmp rax, -0x1000 ; ja 0xfd8a9 ; ret
0x00000000000fefb7 : cmp rax, -0x1000 ; ja 0xfefd1 ; ret
0x00000000000ff04b : cmp rax, -0x1000 ; ja 0xff061 ; ret
0x00000000000ff0eb : cmp rax, -0x1000 ; ja 0xff101 ; ret
0x00000000000ff13f : cmp rax, -0x1000 ; ja 0xff159 ; ret
0x00000000001014d9 : cmp rax, -0xfff ; jae 0x1014ea ; ret
0x0000000000101747 : cmp rax, -0xfff ; jae 0x101758 ; ret
0x0000000000101777 : cmp rax, -0xfff ; jae 0x101788 ; ret
0x00000000001017b0 : cmp rax, -0xfff ; jae 0x1017f1 ; ret
0x00000000001017e0 : cmp rax, -0xfff ; jae 0x1017f1 ; ret
0x0000000000101807 : cmp rax, -0xfff ; jae 0x101818 ; ret
0x0000000000101837 : cmp rax, -0xfff ; jae 0x101848 ; ret
0x000000000010186a : cmp rax, -0xfff ; jae 0x10187b ; ret
0x0000000000101897 : cmp rax, -0xfff ; jae 0x1018a8 ; ret
0x00000000001018c7 : cmp rax, -0xfff ; jae 0x1018d8 ; ret
0x00000000001018f7 : cmp rax, -0xfff ; jae 0x101908 ; ret
0x0000000000101927 : cmp rax, -0xfff ; jae 0x101938 ; ret
0x0000000000105fea : cmp rax, -0xfff ; jae 0x105ffb ; ret
0x0000000000106017 : cmp rax, -0xfff ; jae 0x106028 ; ret
0x0000000000106047 : cmp rax, -0xfff ; jae 0x106058 ; ret
0x000000000010607a : cmp rax, -0xfff ; jae 0x10608b ; ret
0x00000000001060aa : cmp rax, -0xfff ; jae 0x1060bb ; ret
0x00000000001060d7 : cmp rax, -0xfff ; jae 0x1060e8 ; ret
0x000000000010610a : cmp rax, -0xfff ; jae 0x10611b ; ret
0x0000000000106137 : cmp rax, -0xfff ; jae 0x106148 ; ret
0x0000000000106167 : cmp rax, -0xfff ; jae 0x106178 ; ret
0x000000000010619a : cmp rax, -0xfff ; jae 0x1061ab ; ret
0x00000000001061c7 : cmp rax, -0xfff ; jae 0x1061d8 ; ret
0x00000000001061fa : cmp rax, -0xfff ; jae 0x10620b ; ret
0x00000000001072e7 : cmp rax, -0xfff ; jae 0x1072f8 ; ret
0x0000000000107317 : cmp rax, -0xfff ; jae 0x107328 ; ret
0x0000000000107447 : cmp rax, -0xfff ; jae 0x107458 ; ret
0x0000000000107487 : cmp rax, -0xfff ; jae 0x107498 ; ret
0x00000000001074b7 : cmp rax, -0xfff ; jae 0x1074c8 ; ret
0x00000000001074e7 : cmp rax, -0xfff ; jae 0x1074f8 ; ret
0x0000000000107517 : cmp rax, -0xfff ; jae 0x107528 ; ret
0x000000000010773a : cmp rax, -0xfff ; jae 0x10774b ; ret
0x0000000000107767 : cmp rax, -0xfff ; jae 0x107778 ; ret
0x0000000000107797 : cmp rax, -0xfff ; jae 0x1077a8 ; ret
0x00000000001077c7 : cmp rax, -0xfff ; jae 0x1077d8 ; ret
0x000000000010780a : cmp rax, -0xfff ; jae 0x10781b ; ret
0x0000000000107837 : cmp rax, -0xfff ; jae 0x107848 ; ret
0x0000000000107867 : cmp rax, -0xfff ; jae 0x107878 ; ret
0x0000000000107897 : cmp rax, -0xfff ; jae 0x1078a8 ; ret
0x00000000001078c7 : cmp rax, -0xfff ; jae 0x1078d8 ; ret
0x00000000001078f7 : cmp rax, -0xfff ; jae 0x107908 ; ret
0x0000000000107927 : cmp rax, -0xfff ; jae 0x107938 ; ret
0x0000000000107957 : cmp rax, -0xfff ; jae 0x107968 ; ret
0x0000000000107987 : cmp rax, -0xfff ; jae 0x107998 ; ret
0x00000000001079ba : cmp rax, -0xfff ; jae 0x1079cb ; ret
0x00000000001079f3 : cmp rax, -0xfff ; jae 0x107a37 ; ret
0x0000000000107a26 : cmp rax, -0xfff ; jae 0x107a37 ; ret
0x0000000000107a47 : cmp rax, -0xfff ; jae 0x107a58 ; ret
0x0000000000107a7a : cmp rax, -0xfff ; jae 0x107a8b ; ret
0x0000000000107aa7 : cmp rax, -0xfff ; jae 0x107ab8 ; ret
0x0000000000107ad7 : cmp rax, -0xfff ; jae 0x107ae8 ; ret
0x0000000000107b07 : cmp rax, -0xfff ; jae 0x107b18 ; ret
0x0000000000107b37 : cmp rax, -0xfff ; jae 0x107b48 ; ret
0x0000000000107b67 : cmp rax, -0xfff ; jae 0x107b78 ; ret
0x0000000000107b9a : cmp rax, -0xfff ; jae 0x107bab ; ret
0x0000000000107bca : cmp rax, -0xfff ; jae 0x107bdb ; ret
0x0000000000107bf7 : cmp rax, -0xfff ; jae 0x107c08 ; ret
0x0000000000107c27 : cmp rax, -0xfff ; jae 0x107c38 ; ret
0x0000000000107c5a : cmp rax, -0xfff ; jae 0x107c6b ; ret
0x0000000000107c8a : cmp rax, -0xfff ; jae 0x107c9b ; ret
0x0000000000107cba : cmp rax, -0xfff ; jae 0x107ccb ; ret
0x0000000000107cf3 : cmp rax, -0xfff ; jae 0x107d37 ; ret
0x0000000000107d26 : cmp rax, -0xfff ; jae 0x107d37 ; ret
0x0000000000107d47 : cmp rax, -0xfff ; jae 0x107d58 ; ret
0x0000000000107d83 : cmp rax, -0xfff ; jae 0x107dc7 ; ret
0x0000000000107db6 : cmp rax, -0xfff ; jae 0x107dc7 ; ret
0x0000000000107dd7 : cmp rax, -0xfff ; jae 0x107de8 ; ret
0x0000000000107e07 : cmp rax, -0xfff ; jae 0x107e18 ; ret
0x0000000000107e43 : cmp rax, -0xfff ; jae 0x107e87 ; ret
0x0000000000107e76 : cmp rax, -0xfff ; jae 0x107e87 ; ret
0x0000000000107e97 : cmp rax, -0xfff ; jae 0x107ea8 ; ret
0x0000000000107eca : cmp rax, -0xfff ; jae 0x107edb ; ret
0x0000000000107ef7 : cmp rax, -0xfff ; jae 0x107f08 ; ret
0x0000000000107f27 : cmp rax, -0xfff ; jae 0x107f38 ; ret
0x0000000000107f5a : cmp rax, -0xfff ; jae 0x107f6b ; ret
0x0000000000107f90 : cmp rax, -0xfff ; jae 0x107fd1 ; ret
0x0000000000107fc0 : cmp rax, -0xfff ; jae 0x107fd1 ; ret
0x0000000000107fe7 : cmp rax, -0xfff ; jae 0x107ff8 ; ret
0x000000000010801a : cmp rax, -0xfff ; jae 0x10802b ; ret
0x000000000010804a : cmp rax, -0xfff ; jae 0x10805b ; ret
0x00000000001080a0 : cmp rax, -0xfff ; jae 0x1080e1 ; ret
0x00000000001080d0 : cmp rax, -0xfff ; jae 0x1080e1 ; ret
0x00000000001080f7 : cmp rax, -0xfff ; jae 0x108108 ; ret
0x0000000000108130 : cmp rax, -0xfff ; jae 0x108171 ; ret
0x0000000000108160 : cmp rax, -0xfff ; jae 0x108171 ; ret
0x0000000000108187 : cmp rax, -0xfff ; jae 0x108198 ; ret
0x00000000001081b7 : cmp rax, -0xfff ; jae 0x1081c8 ; ret
0x00000000001081ea : cmp rax, -0xfff ; jae 0x1081fb ; ret
0x0000000000108217 : cmp rax, -0xfff ; jae 0x108228 ; ret
0x0000000000108313 : cmp rax, -0xfff ; jae 0x108357 ; ret
0x0000000000108346 : cmp rax, -0xfff ; jae 0x108357 ; ret
0x0000000000108370 : cmp rax, -0xfff ; jae 0x1083b1 ; ret
0x00000000001083a0 : cmp rax, -0xfff ; jae 0x1083b1 ; ret
0x0000000000108490 : cmp rax, -0xfff ; jae 0x1084d1 ; ret
0x00000000001084c0 : cmp rax, -0xfff ; jae 0x1084d1 ; ret
0x00000000001084f3 : cmp rax, -0xfff ; jae 0x108537 ; ret
0x0000000000108526 : cmp rax, -0xfff ; jae 0x108537 ; ret
0x000000000010854a : cmp rax, -0xfff ; jae 0x10855b ; ret
0x0000000000108577 : cmp rax, -0xfff ; jae 0x108588 ; ret
0x00000000001085a7 : cmp rax, -0xfff ; jae 0x1085b8 ; ret
0x00000000001085da : cmp rax, -0xfff ; jae 0x1085eb ; ret
0x0000000000108b33 : cmp rax, -0xfff ; jae 0x108b77 ; ret
0x0000000000108b66 : cmp rax, -0xfff ; jae 0x108b77 ; ret
0x0000000000108b93 : cmp rax, -0xfff ; jae 0x108bd7 ; ret
0x0000000000108bc6 : cmp rax, -0xfff ; jae 0x108bd7 ; ret
0x0000000000108be7 : cmp rax, -0xfff ; jae 0x108bf8 ; ret
0x0000000000108c17 : cmp rax, -0xfff ; jae 0x108c28 ; ret
0x0000000000108c47 : cmp rax, -0xfff ; jae 0x108c58 ; ret
0x0000000000108c77 : cmp rax, -0xfff ; jae 0x108c88 ; ret
0x0000000000108caa : cmp rax, -0xfff ; jae 0x108cbb ; ret
0x0000000000108cda : cmp rax, -0xfff ; jae 0x108ceb ; ret
0x0000000000108d07 : cmp rax, -0xfff ; jae 0x108d18 ; ret
0x0000000000108d37 : cmp rax, -0xfff ; jae 0x108d48 ; ret
0x0000000000108d67 : cmp rax, -0xfff ; jae 0x108d78 ; ret
0x0000000000108d97 : cmp rax, -0xfff ; jae 0x108da8 ; ret
0x000000000014069a : cmp rax, -0xfff ; jae 0x1406ab ; ret
0x00000000001406ea : cmp rax, -0xfff ; jae 0x1406fb ; ret
0x0000000000035767 : cmp rax, -0xfff ; jae 0x35778 ; ret
0x0000000000035e27 : cmp rax, -0xfff ; jae 0x35e38 ; ret
0x000000000006b367 : cmp rax, -0xfff ; jae 0x6b378 ; ret
0x000000000006b39a : cmp rax, -0xfff ; jae 0x6b3ab ; ret
0x00000000000bc517 : cmp rax, -0xfff ; jae 0xbc528 ; ret
0x00000000000bf607 : cmp rax, -0xfff ; jae 0xbf618 ; ret
0x00000000000bf637 : cmp rax, -0xfff ; jae 0xbf648 ; ret
0x00000000000cbf37 : cmp rax, -0xfff ; jae 0xcbf48 ; ret
0x00000000000cc12a : cmp rax, -0xfff ; jae 0xcc13b ; ret
0x00000000000cc207 : cmp rax, -0xfff ; jae 0xcc218 ; ret
0x00000000000cc290 : cmp rax, -0xfff ; jae 0xcc2d1 ; ret
0x00000000000cc2c0 : cmp rax, -0xfff ; jae 0xcc2d1 ; ret
0x00000000000cc2f0 : cmp rax, -0xfff ; jae 0xcc331 ; ret
0x00000000000cc320 : cmp rax, -0xfff ; jae 0xcc331 ; ret
0x00000000000cc777 : cmp rax, -0xfff ; jae 0xcc788 ; ret
0x00000000000cd287 : cmp rax, -0xfff ; jae 0xcd298 ; ret
0x00000000000cd427 : cmp rax, -0xfff ; jae 0xcd438 ; ret
0x00000000000cd457 : cmp rax, -0xfff ; jae 0xcd468 ; ret
0x00000000000cd4b7 : cmp rax, -0xfff ; jae 0xcd4c8 ; ret
0x00000000000cd4e7 : cmp rax, -0xfff ; jae 0xcd4f8 ; ret
0x00000000000cd517 : cmp rax, -0xfff ; jae 0xcd528 ; ret
0x00000000000cd547 : cmp rax, -0xfff ; jae 0xcd558 ; ret
0x00000000000ea767 : cmp rax, -0xfff ; jae 0xea778 ; ret
0x00000000000ea797 : cmp rax, -0xfff ; jae 0xea7a8 ; ret
0x00000000000ea7c7 : cmp rax, -0xfff ; jae 0xea7d8 ; ret
0x00000000000ea7f7 : cmp rax, -0xfff ; jae 0xea808 ; ret
0x00000000000ea827 : cmp rax, -0xfff ; jae 0xea838 ; ret
0x00000000000ea857 : cmp rax, -0xfff ; jae 0xea868 ; ret
0x00000000000ea887 : cmp rax, -0xfff ; jae 0xea898 ; ret
0x00000000000ea8b7 : cmp rax, -0xfff ; jae 0xea8c8 ; ret
0x00000000000f5a73 : cmp rax, -0xfff ; jae 0xf5ab7 ; ret
0x00000000000f5aa6 : cmp rax, -0xfff ; jae 0xf5ab7 ; ret
0x00000000000f5ad3 : cmp rax, -0xfff ; jae 0xf5b17 ; ret
0x00000000000f5b06 : cmp rax, -0xfff ; jae 0xf5b17 ; ret
0x00000000000f6b47 : cmp rax, -0xfff ; jae 0xf6b58 ; ret
0x00000000000f6de7 : cmp rax, -0xfff ; jae 0xf6df8 ; ret
0x00000000000f6e17 : cmp rax, -0xfff ; jae 0xf6e28 ; ret
0x00000000000f6ee7 : cmp rax, -0xfff ; jae 0xf6ef8 ; ret
0x00000000000f6f17 : cmp rax, -0xfff ; jae 0xf6f28 ; ret
0x00000000000f6fd7 : cmp rax, -0xfff ; jae 0xf6fe8 ; ret
0x00000000000f7007 : cmp rax, -0xfff ; jae 0xf7018 ; ret
0x00000000000f7040 : cmp rax, -0xfff ; jae 0xf7081 ; ret
0x00000000000f7070 : cmp rax, -0xfff ; jae 0xf7081 ; ret
0x00000000000f7260 : cmp rax, -0xfff ; jae 0xf72a1 ; ret
0x00000000000f7290 : cmp rax, -0xfff ; jae 0xf72a1 ; ret
0x00000000000f72c0 : cmp rax, -0xfff ; jae 0xf7301 ; ret
0x00000000000f72f0 : cmp rax, -0xfff ; jae 0xf7301 ; ret
0x00000000000f7317 : cmp rax, -0xfff ; jae 0xf7328 ; ret
0x00000000000f77a7 : cmp rax, -0xfff ; jae 0xf77b8 ; ret
0x00000000000f78f0 : cmp rax, -0xfff ; jae 0xf7931 ; ret
0x00000000000f7920 : cmp rax, -0xfff ; jae 0xf7931 ; ret
0x00000000000f7947 : cmp rax, -0xfff ; jae 0xf7958 ; ret
0x00000000000f7977 : cmp rax, -0xfff ; jae 0xf7988 ; ret
0x00000000000f79a7 : cmp rax, -0xfff ; jae 0xf79b8 ; ret
0x00000000000f79d7 : cmp rax, -0xfff ; jae 0xf79e8 ; ret
0x00000000000f7a07 : cmp rax, -0xfff ; jae 0xf7a18 ; ret
0x00000000000f7a40 : cmp rax, -0xfff ; jae 0xf7a81 ; ret
0x00000000000f7a70 : cmp rax, -0xfff ; jae 0xf7a81 ; ret
0x00000000000f7a97 : cmp rax, -0xfff ; jae 0xf7aa8 ; ret
0x00000000000f7ac7 : cmp rax, -0xfff ; jae 0xf7ad8 ; ret
0x00000000000f8307 : cmp rax, -0xfff ; jae 0xf8318 ; ret
0x00000000000f8337 : cmp rax, -0xfff ; jae 0xf8348 ; ret
0x00000000000f8367 : cmp rax, -0xfff ; jae 0xf8378 ; ret
0x00000000000f839a : cmp rax, -0xfff ; jae 0xf83ab ; ret
0x00000000000f8977 : cmp rax, -0xfff ; jae 0xf8988 ; ret
0x00000000000f89aa : cmp rax, -0xfff ; jae 0xf89bb ; ret
0x00000000000f89d7 : cmp rax, -0xfff ; jae 0xf89e8 ; ret
0x00000000000f8a07 : cmp rax, -0xfff ; jae 0xf8a18 ; ret
0x00000000000f8a37 : cmp rax, -0xfff ; jae 0xf8a48 ; ret
0x00000000000f8a6a : cmp rax, -0xfff ; jae 0xf8a7b ; ret
0x00000000000f8a97 : cmp rax, -0xfff ; jae 0xf8aa8 ; ret
0x00000000000f8ac7 : cmp rax, -0xfff ; jae 0xf8ad8 ; ret
0x00000000000f8af7 : cmp rax, -0xfff ; jae 0xf8b08 ; ret
0x00000000000fb730 : cmp rax, -0xfff ; jae 0xfb771 ; ret
0x00000000000fb760 : cmp rax, -0xfff ; jae 0xfb771 ; ret
0x00000000000fba9a : cmp rax, -0xfff ; jae 0xfbaab ; ret
0x00000000000fc213 : cmp rax, -0xfff ; jae 0xfc257 ; ret
0x00000000000fc246 : cmp rax, -0xfff ; jae 0xfc257 ; ret
0x00000000000fc967 : cmp rax, -0xfff ; jae 0xfc978 ; ret
0x00000000000fc997 : cmp rax, -0xfff ; jae 0xfc9a8 ; ret
0x00000000000fc9c7 : cmp rax, -0xfff ; jae 0xfc9d8 ; ret
0x00000000000fcd67 : cmp rax, -0xfff ; jae 0xfcd78 ; ret
0x00000000000fcf47 : cmp rax, -0xfff ; jae 0xfcf58 ; ret
0x00000000000fcf80 : cmp rax, -0xfff ; jae 0xfcfc1 ; ret
0x00000000000fcfb0 : cmp rax, -0xfff ; jae 0xfcfc1 ; ret
0x00000000000fcfe0 : cmp rax, -0xfff ; jae 0xfd021 ; ret
0x00000000000fd010 : cmp rax, -0xfff ; jae 0xfd021 ; ret
0x00000000000fd4d7 : cmp rax, -0xfff ; jae 0xfd4e8 ; ret
0x00000000000fd577 : cmp rax, -0xfff ; jae 0xfd588 ; ret
0x00000000000fd5b3 : cmp rax, -0xfff ; jae 0xfd5f7 ; ret
0x00000000000fd5e6 : cmp rax, -0xfff ; jae 0xfd5f7 ; ret
0x00000000000fd707 : cmp rax, -0xfff ; jae 0xfd718 ; ret
0x00000000000fd737 : cmp rax, -0xfff ; jae 0xfd748 ; ret
0x00000000000fd770 : cmp rax, -0xfff ; jae 0xfd7b1 ; ret
0x00000000000fd7a0 : cmp rax, -0xfff ; jae 0xfd7b1 ; ret
0x00000000000fd7c7 : cmp rax, -0xfff ; jae 0xfd7d8 ; ret
0x00000000000fd800 : cmp rax, -0xfff ; jae 0xfd841 ; ret
0x00000000000fd830 : cmp rax, -0xfff ; jae 0xfd841 ; ret
0x00000000000fd857 : cmp rax, -0xfff ; jae 0xfd868 ; ret
0x00000000000fdbc7 : cmp rax, -0xfff ; jae 0xfdbd8 ; ret
0x00000000000fdbf7 : cmp rax, -0xfff ; jae 0xfdc08 ; ret
0x00000000000fdc27 : cmp rax, -0xfff ; jae 0xfdc38 ; ret
0x00000000000ff177 : cmp rax, -0xfff ; jae 0xff188 ; ret
0x00000000000ff1a7 : cmp rax, -0xfff ; jae 0xff1b8 ; ret
0x0000000000079614 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79629 ; movzx eax, byte ptr [rax] ; ret
0x0000000000100db3 : cmp rax, rcx ; cmovne rbx, rax ; call 0xfcfd9
0x000000000007cc48 : cmp rax, rcx ; jae 0x7cc78 ; movzx eax, byte ptr [rax] ; ret
0x00000000001149ca : cmp rax, rdx ; jb 0x1149c7 ; xor eax, eax ; ret
0x00000000001149c9 : cmp rax, rdx ; jb 0x1149c8 ; xor eax, eax ; ret
0x00000000001382e0 : cmp rax, rdx ; je 0x1382f9 ; add rsp, 8 ; ret
0x0000000000048084 : cmp rax, rdx ; jne 0x4807f ; xor eax, eax ; ret
0x000000000008873c : cmp rax, rdx ; jne 0x886f8 ; xor eax, eax ; pop rbx ; ret
0x000000000007b2d0 : cmp rax, rsi ; jae 0x7b28a ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007eed4 : cmp rbx, rax ; je 0x7eee7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174379 : cmp rbx, rbp ; jae 0x17438e ; call qword ptr [rbx]
0x0000000000174379 : cmp rbx, rbp ; jae 0x174392 ; call qword ptr [rbx]
0x00000000001743a8 : cmp rbx, rbp ; jb 0x1743a4 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000074f4d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000074f4c : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000016fa0a : cmp rcx, rax ; jne 0x16fa3a ; xor eax, eax ; ret
0x000000000017084a : cmp rcx, rax ; jne 0x17087a ; xor eax, eax ; ret
0x00000000001745b7 : cmp rdi, 1 ; ja 0x1745c6 ; ret
0x000000000004a499 : cmp rdi, r8 ; jbe 0x4a499 ; nop ; pop rbx ; ret
0x00000000000fce30 : cmp rdi, rdx ; ja 0xfce66 ; ret
0x00000000000f6a3f : cmp rdi, rsi ; ja 0xf6a36 ; ret
0x0000000000083f89 : cmp rdx, r8 ; jne 0x83f56 ; ret
0x00000000001153a1 : cmp rdx, rax ; jne 0x115386 ; ret
0x00000000000ac166 : cmp rdx, rax ; jne 0xac158 ; xor eax, eax ; ret
0x00000000001234d5 : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000013bdae : cmp rdx, rcx ; je 0x13bdc6 ; ret
0x000000000008f2e7 : cmp rdx, rcx ; jne 0x8f2d6 ; ret
0x000000000008f2e6 : cmp rdx, rcx ; jne 0x8f2d7 ; ret
0x00000000000cda96 : cmp rdx, rcx ; jne 0xcdac5 ; ret
0x0000000000114aa9 : cmp rdx, rdi ; setae al ; ret
0x0000000000072d59 : cmp rsi, rcx ; jb 0x72d58 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c009 : cmp rsi, rcx ; jne 0x7c008 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000004821c : cmp rsi, rdx ; jne 0x48217 ; xor eax, eax ; ret
0x0000000000110bd2 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000110bfe : cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014c4c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c7c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d6c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a622d : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x0000000000082bd6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000008e3f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000199c45 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x000000000014d3c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000016f489 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000000310d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000002b766 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0x2b772 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000147af6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d0c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cdc7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e34fe : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000001950b5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x00000000001950b9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000194ff5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x00000000000a32d0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000188cc1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call rsp
0x0000000000188cd9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call rsp
0x0000000000196151 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000196211 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rdx
0x000000000019620d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x00000000001b1b11 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001ae1b1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1e1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a11b1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000001986a1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00000000000038f2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000001950c1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000019503d : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rsi
0x0000000000195041 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x00000000000038f1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000038f0 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000174359 : cmpxchg dword ptr [rip + 0x252518], edx ; je 0x17436c ; ret
0x000000000003a6a3 : cqo ; idiv rsi ; ret
0x000000000003a6b3 : cqo ; idiv rsi ; ret
0x00000000000b33f2 : cqo ; or eax, 0x3d8d4800 ; ret
0x0000000000029c43 : cwde ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x00000000000f4cdc : cwde ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000bea23 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001355ef : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000029a6e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000036953 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000003696a : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036ab5 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036aca : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007950f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000796cb : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000079789 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c8085 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c81f2 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c89cc : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000fccf2 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b5775 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000d537f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000db0da : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000852eb : cwde ; add rax, rdx ; jmp rax
0x00000000000ce04e : cwde ; add rax, rdx ; jmp rax
0x00000000001ab088 : cwde ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b29a8 : cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5fd8 : cwde ; int1 ; sti ; call rcx
0x00000000001b0c38 : cwde ; jno 0x1b0c33 ; jmp qword ptr [rcx]
0x00000000001b5478 : cwde ; mov ah, 0xf6 ; call rsi
0x0000000000187cd4 : cwde ; mov ebp, 0xbfd8fffd ; std ; lcall ptr [rax] ; ret 0xfffd
0x00000000000fc1ef : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000019d598 : cwde ; or ebp, ecx ; call qword ptr [rcx]
0x000000000012b094 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134d84 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134dc3 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00000000001b09c8 : cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000003afd : cwde ; ret
0x0000000000112044 : cwde ; ret
0x0000000000113356 : cwde ; ret
0x00000000001b0096 : cwde ; ret
0x000000000003998c : cwde ; ret 0x38
0x000000000009f484 : cwde ; ret 0xfffe
0x0000000000071384 : cwde ; sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71326
0x000000000012415e : cwde ; shr rax, 4 ; ret
0x00000000001bafa9 : cwde ; sti ; jmp qword ptr [rdx]
0x00000000000ea694 : cwde ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00000000001ac6c8 : cwde ; xchg ebx, esi ; call qword ptr [rsi]
0x00000000001ad7a8 : cwde ; xchg esp, esi ; call qword ptr [rsi]
0x00000000000a4819 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000001685e9 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x000000000016c979 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000a2801 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000166a31 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000016ad61 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000081bd6 : dec byte ptr [r8 - 0x75] ; ret
0x00000000000a481a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000001685ea : dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000016c97a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a2802 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000166a32 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000016ad62 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000049ab6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x00000000000886e5 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x0000000000081c54 : dec byte ptr [rax - 0x73] ; ret
0x000000000008230b : dec byte ptr [rax - 0x73] ; ret
0x0000000000081bd7 : dec byte ptr [rax - 0x75] ; ret
0x0000000000087a37 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000059058 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x00000000000ff945 : dec byte ptr [rax - 0x77] ; fucompi st(0) ; ret 0xf788
0x000000000008b6e9 : dec byte ptr [rax - 0x77] ; ret
0x000000000003e054 : dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000412e4 : dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000d4827 : dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00000000000391aa : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000003922b : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000039266 : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000005e793 : dec dword ptr [r8 + 0x39] ; ret
0x00000000000813fc : dec dword ptr [r8 - 0x7b] ; ret 0x840f
0x000000000009e977 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x0000000000074039 : dec dword ptr [rax + 0x29] ; ret
0x0000000000074e70 : dec dword ptr [rax + 0x29] ; ret
0x00000000000a499a : dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000016876a : dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000016cafa : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a2942 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000166b72 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000016aea2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000003e1ab : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000041424 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000442bd : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000048821 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000057b2e : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000b0818 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000b3060 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000b5ce5 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000d523c : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000007f47d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000000cfde9 : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000000469c5 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x0000000000083ccd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000005e794 : dec dword ptr [rax + 0x39] ; ret
0x000000000007eb10 : dec dword ptr [rax + 0x39] ; ret
0x000000000007fc52 : dec dword ptr [rax + 0x39] ; ret
0x000000000009f53d : dec dword ptr [rax + 0x39] ; ret
0x00000000000bea6f : dec dword ptr [rax + 0x39] ; ret
0x00000000000e5ea0 : dec dword ptr [rax + 0x39] ; ret
0x00000000000f65b6 : dec dword ptr [rax + 0x39] ; ret
0x00000000000f90bd : dec dword ptr [rax + 0x39] ; ret
0x00000000000fa884 : dec dword ptr [rax + 0x39] ; ret
0x0000000000104acd : dec dword ptr [rax + 0x39] ; ret
0x0000000000104b6c : dec dword ptr [rax + 0x39] ; ret
0x000000000010ebf9 : dec dword ptr [rax + 0x39] ; ret
0x00000000001142cd : dec dword ptr [rax + 0x39] ; ret
0x000000000012142c : dec dword ptr [rax + 0x39] ; ret
0x0000000000128676 : dec dword ptr [rax + 0x39] ; ret
0x0000000000128692 : dec dword ptr [rax + 0x39] ; ret
0x00000000001286ae : dec dword ptr [rax + 0x39] ; ret
0x00000000001286c6 : dec dword ptr [rax + 0x39] ; ret
0x000000000013d90e : dec dword ptr [rax + 0x39] ; ret
0x00000000000e5ea0 : dec dword ptr [rax + 0x39] ; ret
0x000000000005c58f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000005c610 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000640bd : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000006585c : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000061b8f : dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000063d29 : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000c613f : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c62a0 : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c6464 : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c6873 : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000005c337 : dec dword ptr [rax + 0x63] ; ret
0x000000000005d66f : dec dword ptr [rax + 0x63] ; ret
0x00000000000edcd9 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000006c70b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006c70a : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006c897 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce8f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x000000000006cfde : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x000000000008d6d9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000128be4 : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x0000000000128daa : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x000000000008f834 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003aa02 : dec dword ptr [rax + 0xf] ; ret
0x00000000000f6a6b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000000878d1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000878d1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000051d76 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000078b0d : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000795bd : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000010a132 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000010a132 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000142b96 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002d909 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000005ebf5 : dec dword ptr [rax + 1] ; ret
0x000000000007409c : dec dword ptr [rax + 1] ; ret
0x00000000000dd083 : dec dword ptr [rax + 1] ; ret
0x000000000010fbf0 : dec dword ptr [rax + 1] ; ret
0x00000000000360c3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000004b686 : dec dword ptr [rax - 0x39] ; ret
0x0000000000056a66 : dec dword ptr [rax - 0x39] ; ret
0x000000000009614f : dec dword ptr [rax - 0x39] ; ret
0x000000000013e934 : dec dword ptr [rax - 0x39] ; ret
0x00000000000ce0fc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f6432 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f645f : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000011a3d6 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000011a796 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000c023c : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000000fc1ed : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000fe5f4 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000ac9e6 : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x0000000000111ead : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000013c535 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000010f1be : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x0000000000102acd : dec dword ptr [rax - 0x75] ; jge 0x102ad7 ; call rbx
0x0000000000102d80 : dec dword ptr [rax - 0x75] ; jge 0x102d8a ; call rbx
0x0000000000104918 : dec dword ptr [rax - 0x75] ; jge 0x104922 ; call rbx
0x00000000000f360c : dec dword ptr [rax - 0x75] ; jl 0xf363d ; and al, ch ; xchg eax, ecx ; ret 0xfff2
0x00000000000ebc4e : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff78 ; call rbx
0x0000000000048da7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x0000000000081eef : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x00000000000e243d : dec dword ptr [rax - 0x75] ; push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x000000000007a8a1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x00000000000b2d88 : dec dword ptr [rax - 0x77] ; call 0x4ccdc1a5
0x000000000008f4d8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000008f514 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000008f6fe : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000008f7fd : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000fceca : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013bf8c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000013a869 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000b7fb3 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000133569 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x0000000000057fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x0000000000033edd : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfeb9
0x0000000000020fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffe8
0x0000000000133671 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffee
0x0000000000133670 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffee
0x0000000000172b6a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000133679 : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x1f8ae
0x00000000001341d0 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x000000000002233e : dec dword ptr [rax - 0x77] ; ret
0x0000000000029ce2 : dec dword ptr [rax - 0x77] ; ret
0x000000000002db98 : dec dword ptr [rax - 0x77] ; ret
0x0000000000030376 : dec dword ptr [rax - 0x77] ; ret
0x000000000003995a : dec dword ptr [rax - 0x77] ; ret
0x0000000000045b62 : dec dword ptr [rax - 0x77] ; ret
0x0000000000045bd9 : dec dword ptr [rax - 0x77] ; ret
0x000000000004b792 : dec dword ptr [rax - 0x77] ; ret
0x000000000004bef1 : dec dword ptr [rax - 0x77] ; ret
0x000000000004c8b2 : dec dword ptr [rax - 0x77] ; ret
0x000000000004cfcd : dec dword ptr [rax - 0x77] ; ret
0x000000000005cc14 : dec dword ptr [rax - 0x77] ; ret
0x000000000005cdca : dec dword ptr [rax - 0x77] ; ret
0x000000000005f4bb : dec dword ptr [rax - 0x77] ; ret
0x000000000005f536 : dec dword ptr [rax - 0x77] ; ret
0x00000000000609e0 : dec dword ptr [rax - 0x77] ; ret
0x00000000000609e0 : dec dword ptr [rax - 0x77] ; ret
0x00000000000613a9 : dec dword ptr [rax - 0x77] ; ret
0x00000000000652f8 : dec dword ptr [rax - 0x77] ; ret
0x0000000000078e90 : dec dword ptr [rax - 0x77] ; ret
0x000000000007d360 : dec dword ptr [rax - 0x77] ; ret
0x000000000007d47c : dec dword ptr [rax - 0x77] ; ret
0x0000000000086b73 : dec dword ptr [rax - 0x77] ; ret
0x0000000000088377 : dec dword ptr [rax - 0x77] ; ret
0x0000000000095a61 : dec dword ptr [rax - 0x77] ; ret
0x00000000000989c2 : dec dword ptr [rax - 0x77] ; ret
0x00000000000c7ff8 : dec dword ptr [rax - 0x77] ; ret
0x00000000000c8165 : dec dword ptr [rax - 0x77] ; ret
0x00000000000cdec1 : dec dword ptr [rax - 0x77] ; ret
0x00000000000cec90 : dec dword ptr [rax - 0x77] ; ret
0x00000000000cedc5 : dec dword ptr [rax - 0x77] ; ret
0x00000000000d1850 : dec dword ptr [rax - 0x77] ; ret
0x00000000000e300a : dec dword ptr [rax - 0x77] ; ret
0x00000000000e5bbf : dec dword ptr [rax - 0x77] ; ret
0x00000000000f4292 : dec dword ptr [rax - 0x77] ; ret
0x00000000000f7f6c : dec dword ptr [rax - 0x77] ; ret
0x00000000000f7f6b : dec dword ptr [rax - 0x77] ; ret
0x00000000000f8471 : dec dword ptr [rax - 0x77] ; ret
0x00000000000f9035 : dec dword ptr [rax - 0x77] ; ret
0x00000000000ff4bf : dec dword ptr [rax - 0x77] ; ret
0x00000000000ff61d : dec dword ptr [rax - 0x77] ; ret
0x00000000000ffce5 : dec dword ptr [rax - 0x77] ; ret
0x000000000010ebe1 : dec dword ptr [rax - 0x77] ; ret
0x00000000001123da : dec dword ptr [rax - 0x77] ; ret
0x000000000011257f : dec dword ptr [rax - 0x77] ; ret
0x00000000001128f3 : dec dword ptr [rax - 0x77] ; ret
0x000000000012b097 : dec dword ptr [rax - 0x77] ; ret
0x0000000000133e2f : dec dword ptr [rax - 0x77] ; ret
0x0000000000138f05 : dec dword ptr [rax - 0x77] ; ret
0x000000000013a7e3 : dec dword ptr [rax - 0x77] ; ret
0x00000000001402aa : dec dword ptr [rax - 0x77] ; ret
0x0000000000140b38 : dec dword ptr [rax - 0x77] ; ret
0x00000000001413b7 : dec dword ptr [rax - 0x77] ; ret
0x0000000000144146 : dec dword ptr [rax - 0x77] ; ret
0x00000000000fcd23 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00000000000fce1e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000ea961 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00000000000f3523 : dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000005ebeb : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000005f94a : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000005f9da : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000076f93 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x00000000000e40f1 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000005ed1a : dec dword ptr [rax - 0x77] ; ret 0x38e9
0x00000000000e0a7e : dec dword ptr [rax - 0x77] ; ret 0x448b
0x0000000000036b2b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x00000000000369d1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x0000000000069a42 : dec dword ptr [rax - 0x77] ; ret 0x65e8
0x00000000000ce18c : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x000000000002facb : dec dword ptr [rax - 0x77] ; ret 0x6fe9
0x000000000011da7a : dec dword ptr [rax - 0x77] ; ret 0x8348
0x00000000001400b3 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000002f33f : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000084281 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000084c64 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000085991 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000086004 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000867f4 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000086ae4 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000355b3 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000003692c : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000036a8e : dec dword ptr [rax - 0x77] ; ret 0x870f
0x00000000000fd911 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000057af2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000057af2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000c95b2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000ffa74 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000012e653 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000130e38 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000096e86 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004d915 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000005d6ac : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000112414 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000134d86 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000d0238 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x000000000006af20 : dec dword ptr [rax - 0x77] ; ret 0x9ce9
0x0000000000142e9f : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000593ab : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000c9a4c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x00000000000cb0ac : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000010b84c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000010b9f0 : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000010d1fc : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000011bfbc : dec dword ptr [rax - 0x77] ; ret 0xbb
0x0000000000120c1c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x00000000001319bc : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000005dffc : dec dword ptr [rax - 0x77] ; ret 0xbbe9
0x0000000000134dc5 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000095755 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000bfc3b : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000dd040 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000008783e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000009d24c : dec dword ptr [rax - 0x77] ; ret 0xc76
0x000000000002fb34 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x000000000002100a : dec dword ptr [rax - 0x77] ; ret 0xf8e9
0x00000000001013ae : dec dword ptr [rax - 0x77] ; ret 0xff31
0x000000000012e83a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000021002 : dec dword ptr [rax - 0x77] ; ret 0xffe9
0x00000000000813fd : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00000000000bc3fd : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000bc4dd : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000115adf : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000115c1b : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000c634d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f4b64 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000e0b25 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x8445
0x000000000010fbd0 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000896c0 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x000000000012b03f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000fef70 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000006dcdc : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f617 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x0000000000105dd6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x0000000000108ddf : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000108dde : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000000959e0 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000001402a6 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001400af : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000312f1 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000033394 : dec dword ptr [rax - 0x7d] ; ret
0x000000000005f681 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000060aec : dec dword ptr [rax - 0x7d] ; ret
0x00000000000adfd8 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000ae3e7 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000c0130 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000c0392 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000c0adf : dec dword ptr [rax - 0x7d] ; ret
0x00000000000c0f03 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000c0fe8 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000c1cf1 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000c2552 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000ca7bb : dec dword ptr [rax - 0x7d] ; ret
0x00000000000d043c : dec dword ptr [rax - 0x7d] ; ret
0x00000000000d0458 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000d0b3d : dec dword ptr [rax - 0x7d] ; ret
0x00000000000d0c8b : dec dword ptr [rax - 0x7d] ; ret
0x00000000000d180a : dec dword ptr [rax - 0x7d] ; ret
0x00000000000d190b : dec dword ptr [rax - 0x7d] ; ret
0x000000000010c908 : dec dword ptr [rax - 0x7d] ; ret
0x000000000010c938 : dec dword ptr [rax - 0x7d] ; ret
0x000000000010e03b : dec dword ptr [rax - 0x7d] ; ret
0x000000000010fe97 : dec dword ptr [rax - 0x7d] ; ret
0x00000000001131c1 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000120f73 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000121694 : dec dword ptr [rax - 0x7d] ; ret
0x0000000000126959 : dec dword ptr [rax - 0x7d] ; ret
0x00000000001274aa : dec dword ptr [rax - 0x7d] ; ret
0x0000000000141818 : dec dword ptr [rax - 0x7d] ; ret
0x000000000007f42f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000083c7d : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000025c5b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000292aa : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000009e779 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000b8d23 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d93f1 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000004f7b5 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000000d6555 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000bf356 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000060ce7 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000060da0 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000069131 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000691ea : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000d02f1 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000076a48 : dec dword ptr [rax - 0x7f] ; ret
0x0000000000116895 : dec dword ptr [rax - 0x7f] ; ret
0x0000000000116894 : dec dword ptr [rax - 0x7f] ; ret
0x000000000015a8cc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000015d39c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000015fe90 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000189afb : dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x0000000000189af7 : dec dword ptr [rbp + 6] ; cmc ; dec dword ptr [rbp + 6] ; cmc ; call qword ptr [rax]
0x00000000000f8f23 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000001380a0 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x0000000000102f8e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000d46e0 : dec dword ptr [rbp - 0x77] ; ret 0x3145
0x00000000000ee3ce : dec dword ptr [rbp - 0x77] ; ret 0x8948
0x00000000000989bf : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000133e2c : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000013d6f9 : dec dword ptr [rbx + 0x148885d] ; ret 0x8948
0x00000000000f5bd2 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dea6f : dec dword ptr [rbx + 0x438d047d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001437cd : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000000d5818 : dec dword ptr [rbx + rcx*4 + 0x55] ; test al, 0x89 ; ret
0x000000000019b1fb : dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x00000000000db8b9 : dec dword ptr [rbx - 0x7ac7dbbc] ; ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00000000000adfc5 : dec dword ptr [rbx - 0x7cb7fbad] ; ret
0x00000000000ae3d4 : dec dword ptr [rbx - 0x7cb7fbad] ; ret
0x000000000004dc0e : dec dword ptr [rcx + 0x29] ; ret
0x00000000000d3119 : dec dword ptr [rcx + 0x29] ; ret 0x14eb
0x000000000004d7dc : dec dword ptr [rcx + 0x39] ; ret
0x000000000005959e : dec dword ptr [rcx + 0x39] ; ret
0x00000000000596f9 : dec dword ptr [rcx + 0x39] ; ret
0x000000000005a7b7 : dec dword ptr [rcx + 0x39] ; ret
0x000000000004df52 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000004e518 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000004ebb5 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000010ce9b : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x000000000006d362 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000002ebb6 : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000000711ef : dec dword ptr [rcx + 0xd99e8d6] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71193
0x00000000000533f9 : dec dword ptr [rcx + 0xf50244c] ; ret 0x4c8b
0x000000000019b453 : dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x000000000008162d : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x00000000000e35b6 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x1f8ae
0x00000000000e35b5 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x1f8af
0x000000000004b389 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x000000000013c0b6 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x00000000000f365c : dec dword ptr [rcx + rcx*4 - 1] ; call 0x1f8ae
0x000000000005f10d : dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a6
0x000000000005a6d5 : dec dword ptr [rcx - 0x3f] ; sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x0000000000188b27 : dec dword ptr [rcx - 0x56] ; call qword ptr [rax]
0x0000000000188b26 : dec dword ptr [rcx - 0x56] ; call qword ptr [rax]
0x0000000000188ae7 : dec dword ptr [rcx - 0x56] ; call rsp
0x0000000000188ae6 : dec dword ptr [rcx - 0x56] ; call rsp
0x000000000005c60a : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000f9603 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x0000000000102905 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010298b : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102a2c : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102ab2 : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102b6f : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102bf5 : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102c96 : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d65 : dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001044fd : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104583 : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104625 : dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001046ab : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104768 : dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001047ee : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104890 : dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001048ef : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d8e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001046c6 : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000010490a : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102998 : dec dword ptr [rcx - 0x75] ; jge 0x1029a2 ; call rbx
0x0000000000102abf : dec dword ptr [rcx - 0x75] ; jge 0x102ac9 ; call rbx
0x0000000000102c02 : dec dword ptr [rcx - 0x75] ; jge 0x102c0c ; call rbx
0x0000000000102d72 : dec dword ptr [rcx - 0x75] ; jge 0x102d7c ; call rbx
0x0000000000104590 : dec dword ptr [rcx - 0x75] ; jge 0x10459a ; call rbx
0x00000000001046b8 : dec dword ptr [rcx - 0x75] ; jge 0x1046c2 ; call rbx
0x00000000001047fb : dec dword ptr [rcx - 0x75] ; jge 0x104805 ; call rbx
0x00000000001048fc : dec dword ptr [rcx - 0x75] ; jge 0x104906 ; call rbx
0x00000000000e35a4 : dec dword ptr [rcx - 0x75] ; jge 0xe35d0 ; call 0x1f8af
0x00000000000e35a3 : dec dword ptr [rcx - 0x75] ; jge 0xe35d1 ; call 0x1f8b0
0x00000000000e35ad : dec dword ptr [rcx - 0x75] ; jge 0xe35e1 ; call 0x1f8af
0x00000000000e35ac : dec dword ptr [rcx - 0x75] ; jge 0xe35e2 ; call 0x1f8b0
0x00000000000f3cb5 : dec dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f573 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000eef8c : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000142d74 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000009e978 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x00000000000488c5 : dec dword ptr [rcx - 0x77] ; ret
0x000000000004d6d5 : dec dword ptr [rcx - 0x77] ; ret
0x000000000004f2c3 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000059474 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000095544 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000e5a61 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000e3e6d : dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000002bc47 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000000de2ef : dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000004ea8e : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000004ed91 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000004ede4 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000022f80 : dec dword ptr [rcx - 0x77] ; ret 0x9e9
0x00000000000662ef : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000662d8 : dec dword ptr [rcx - 0x7d] ; ret 0x4504
0x00000000000d8888 : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x00000000001892db : dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x000000000004504c : dec dword ptr [rcx] ; ret
0x000000000011229b : dec dword ptr [rcx] ; ret
0x0000000000112301 : dec dword ptr [rcx] ; ret
0x000000000010a6de : dec dword ptr [rcx] ; setbe al ; ret
0x000000000010b02e : dec dword ptr [rcx] ; setbe al ; ret
0x0000000000186d9b : dec dword ptr [rdi - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000182633 : dec dword ptr [rdi - 0x510013aa] ; push rsi ; in al, dx ; call rax
0x0000000000107552 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x000000000011d7ad : dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x000000000010af2d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10aebe ; loopne 0x10af3e ; ret
0x000000000002df46 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2ded7 ; loopne 0x2df57 ; ret
0x0000000000046271 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009e505 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x000000000009e4f2 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x0000000000023b8b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000115975 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000b58ea : dec dword ptr [rdi] ; ret 0xd0f7
0x0000000000121325 : dec dword ptr [rdi] ; ret 0xfe9
0x0000000000074151 : dec dword ptr [rdi] ; test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000068467 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000013e009 : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d9b90 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x0000000000122e3e : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000013840a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009d9d8 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009d4eb : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x000000000009d4f7 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x000000000012252c : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00000000001721a0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d7781 : dec dword ptr [rdi] ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00000000000ea9da : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000007305b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000007cc8b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000000e2af3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8949
0x00000000000e32ea : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000e3850 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000bbf60 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd021
0x00000000000e0bb0 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd609
0x0000000000075f7e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000076e6e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000e3ecd : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000523bd : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x0000000000105ecf : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000cdfed : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000005c147 : dec dword ptr [rdx + 0x63] ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x0000000000188aa3 : dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000188aa2 : dec dword ptr [rdx - 0x45] ; call rsp
0x000000000018a857 : dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x000000000019500f : dec dword ptr [rsi - 0x56] ; std ; jmp rsi
0x0000000000189c27 : dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x0000000000198f2b : dec dword ptr [rsp + 0x20e40001] ; cmc ; jmp rsp
0x0000000000198dbb : dec dword ptr [rsp + rdx*2 + 0x20a40001] ; hlt ; call rsp
0x000000000018919f : dec ebp ; push rax ; hlt ; call rdi
0x00000000001892c3 : dec ebp ; push rbx ; hlt ; call rdi
0x0000000000049e3d : dec ecx ; ret
0x0000000000049e44 : dec ecx ; ret
0x0000000000049e5d : dec ecx ; ret
0x0000000000049e7b : dec ecx ; ret
0x0000000000188a9f : dec edi ; lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000188a9e : dec edi ; lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000188c83 : dec edi ; test eax, 0xbbfdfff3 ; jmp rax
0x0000000000188c82 : dec edi ; test eax, 0xbbfdfff3 ; jmp rax
0x00000000001891ff : dec edx ; push rcx ; hlt ; call rsp
0x000000000018879b : dec esi ; xchg ebx, esi ; lcall ptr [rsi + rdi*2 - 0xd] ; jmp rdi
0x000000000018879a : dec esi ; xchg ebx, esi ; lcall ptr [rsi + rdi*2 - 0xd] ; jmp rdi
0x000000000019b9a3 : dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x000000000019b153 : dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x0000000000198fd3 : dec esp ; add dword ptr [eax], eax ; cmc ; jmp rsp
0x000000000019b34b : dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019869b : dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi], al ; int1 ; jmp rsp
0x00000000001989f3 : dec esp ; cmp dword ptr [rcx], eax ; add byte ptr [rdx - 0xd], dl ; jmp rsp
0x00000000001989f2 : dec esp ; cmp dword ptr [rcx], eax ; add byte ptr [rdx - 0xd], dl ; jmp rsp
0x000000000019620b : dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x000000000019697b : dec esp ; imul eax, dword ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x196974 ; jmp rsp
0x0000000000196913 : dec esp ; imul eax, dword ptr [rax], 0xe9650400 ; jmp rsp
0x0000000000199653 : dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x000000000019b6db : dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b6b3 ; cli ; jmp rsp
0x000000000019a153 : dec esp ; ret
0x000000000019780b : dec esp ; rol dword ptr [rax], 0 ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x000000000019731b : dec esp ; sahf ; add byte ptr [rax], al ; add al, 0x9a ; jmp 0x19732b
0x00000000001974b3 : dec esp ; test eax, 0x4d440000 ; in eax, dx ; jmp rsp
0x00000000001972a3 : dec esp ; wait ; add byte ptr [rax], al ; cmp ebp, ebx ; jmp rsp
0x00000000000a4999 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x0000000000168769 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x000000000016caf9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000a2941 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000166b71 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000016aea1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000006c896 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000025c5a : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000292a9 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d8887 : dec qword ptr [rcx - 0x7d] ; ret 0x4c20
0x00000000001b9fd1 : div bh ; call qword ptr [rdx]
0x00000000000dc5dd : div byte ptr [rax - 0xa] ; ret
0x0000000000096aef : div byte ptr [rbp + 0xa] ; jmp 0x96aba
0x000000000008b8c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000009ed21 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000facc7 : div byte ptr [rcx] ; shr al, 0x61 ; ret
0x0000000000064124 : div dh ; ret
0x00000000000649a5 : div dh ; ret
0x0000000000053999 : div dh ; ret 0x4050
0x0000000000112703 : div dword ptr [rcx] ; shr al, 0x65 ; ret
0x00000000000f6a41 : div dword ptr [rdi - 0x14] ; ret
0x000000000006e290 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007818c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011781f : div ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781cf : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011791c : div ebx ; pop rbx ; pop rbp ; ret
0x00000000000504c5 : div ecx ; add eax, r8d ; ret
0x00000000000aacda : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aacf3 : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000001999b1 : div esi ; call rsp
0x00000000001999b0 : div esi ; call rsp
0x000000000006e796 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e28f : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007818b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011781e : div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781ce : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011791b : div rbx ; pop rbx ; pop rbp ; ret
0x00000000001a3628 : enter -0x12c9, -1 ; and eax, 0x4000001 ; ret 0x18f
0x000000000001f977 : enter -0x1401, -0x3b ; ret
0x00000000000d1681 : enter -0x14fe, -0x75 ; nop dword ptr [rax] ; ret
0x0000000000104ac8 : enter -0x1d18, -0x7a ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000eeb40 : enter -0x1d2d, -0x7b ; ret 0x850f
0x0000000000045a23 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x000000000009ec2e : enter -0x208c, -0xd ; ret
0x00000000000a1291 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000a2eb1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000e7e24 : enter -0x2e89, 0x39 ; ret
0x000000000001f967 : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000012f951 : enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00000000000c71f6 : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000172314 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000018c5ec : enter -0x4ff, -1 ; fadd dword ptr [rcx] ; sti ; jmp rax
0x00000000000a4816 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000001685e6 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000016c976 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a27fe : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000166a2e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000016ad5e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000a4996 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000168766 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000016caf6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a293e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000166b6e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000016ae9e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000034b68 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000048dab : enter -0x74b8, 0x14 ; ret
0x00000000001029e4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001953a9 : enter -5, -0x30 ; leave ; sti ; jmp qword ptr [rax]
0x0000000000132297 : enter 0, 0 ; call rax
0x0000000000132259 : enter 0, 0 ; jmp rcx
0x000000000012cf66 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000007cc4a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000034cbc : enter 0x280f, -0x3f ; ret
0x0000000000034ce1 : enter 0x280f, -0x3f ; ret
0x0000000000034d0e : enter 0x280f, -0x3f ; ret
0x000000000004a13e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013599e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008b12d : enter 0x31c3, -0x40 ; ret
0x000000000008d3a2 : enter 0x31c3, -0x40 ; ret
0x0000000000091c7a : enter 0x31c3, -0x40 ; ret
0x000000000009436f : enter 0x31c3, -0x40 ; ret
0x0000000000145a6d : enter 0x31c3, -0x40 ; ret
0x0000000000146a52 : enter 0x31c3, -0x40 ; ret
0x00000000001485fa : enter 0x31c3, -0x40 ; ret
0x000000000014a5bf : enter 0x31c3, -0x40 ; ret
0x000000000014bfca : enter 0x31c3, -0x40 ; ret
0x000000000014d96f : enter 0x31c3, -0x40 ; ret
0x000000000014f80d : enter 0x31c3, -0x40 ; ret
0x0000000000150f72 : enter 0x31c3, -0x40 ; ret
0x000000000016309a : enter 0x31c3, -0x40 ; ret
0x00000000001655ef : enter 0x31c3, -0x40 ; ret
0x0000000000087a5e : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000135107 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000135064 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000135134 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000019c90e : enter 0x4201, 0xe ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000001359db : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x00000000001358bb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000007eac8 : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000001b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000087acb : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005b775 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000185a7c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000003a68d : enter 0x948, -0x30 ; ret
0x00000000000e91b9 : enter 0xf41, -0x62 ; ret 0x844
0x000000000016f536 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170706 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089b51 : enter 0xf66, -0x15 ; ret
0x00000000000967f9 : enter 0xf66, -0x15 ; ret
0x000000000014a69c : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000034cb8 : enter 0xf66, 0x6e ; enter 0x280f, -0x3f ; ret
0x00000000000a8074 : enter 5, 0 ; ret
0x0000000000116be6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116c32 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001180e6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000118132 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007b237 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007b703 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000104f70 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000104fbe : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000045cf6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000046eb0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000557fa : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000005589c : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000055935 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000559ca : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000055a5a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000055aea : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000006a7da : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000006a87e : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000006a91a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000006bb5a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000714aa : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000071535 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000715fc : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000716ae : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000007174a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000719aa : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000076dda : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bae5a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000100be5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001166b0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001167fb : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000117ceb : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001188f5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000118af5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000115b65 : fadd dword ptr [rax] ; leave ; ret
0x0000000000082f0f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000013d46d : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x0000000000070980 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000078260 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001b93bd : fadd dword ptr [rcx] ; add al, dl ; fdiv st(7) ; jmp rdi
0x00000000001bc483 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000018c5f0 : fadd dword ptr [rcx] ; sti ; jmp rax
0x0000000000074d17 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x00000000000c612e : fadd qword ptr [r9] ; ret
0x00000000000c628f : fadd qword ptr [r9] ; ret
0x00000000000c6453 : fadd qword ptr [r9] ; ret
0x00000000000c6862 : fadd qword ptr [r9] ; ret
0x00000000001afd14 : fadd qword ptr [rcx + 1] ; add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000000c612f : fadd qword ptr [rcx] ; ret
0x00000000000c6290 : fadd qword ptr [rcx] ; ret
0x00000000000c6454 : fadd qword ptr [rcx] ; ret
0x00000000000c6863 : fadd qword ptr [rcx] ; ret
0x00000000000bbac7 : fadd st(1) ; call 0xffffffff89cde3f2
0x00000000000bbe31 : fadd st(1) ; call 0xffffffff89cde75c
0x000000000019a104 : fadd st(2), st(0) ; add dword ptr [rax], eax ; in al, 0xf7 ; push rsp ; ret 1
0x0000000000172938 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000017088e : fadd st(3) ; ret
0x0000000000105e30 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000016f081 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001740ec : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2767 : fcmovb st(0), st(1) ; clc ; add eax, 0x2907fec1 ; ret 0x8944
0x00000000000bd6bd : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000001850b8 : fcmovb st(0), st(3) ; ret
0x000000000018909c : fcmovbe st(0), st(4) ; jmp rdi
0x0000000000102aca : fcmove st(0), st(5) ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102ada ; call rbx
0x000000000002c4ae : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000001acf14 : fcom qword ptr [rbx] ; add dword ptr [rax], eax ; fcomp st(2) ; call qword ptr [rdx]
0x00000000001890c5 : fcomi st(3) ; call qword ptr [rcx]
0x00000000001890c1 : fcomi st(3) ; jmp qword ptr [rbx]
0x00000000001ae811 : fcomi st(4) ; call qword ptr [rbx]
0x00000000001b59a9 : fcomi st(6) ; jmp rsi
0x0000000000033c3a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b9f53 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bddef : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7a35 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7acc : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7b0c : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e3c8 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012de4e : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133634 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001395f4 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a086 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a0c4 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a837 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000002a85d : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000002a8df : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000757dd : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000076419 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000009f3cb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000b9ef1 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000c7c2e : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000c7c63 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000c7c9a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000e834c : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000e8371 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000f74a0 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000010ce82 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000010ce9d : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000001163f8 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000006dfeb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006f77b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006f7db : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000077c8c : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007a364 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007d39b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000094f8b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000abce3 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ac677 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000b9e1f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000fcecd : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000fceff : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001015e3 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010315a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010ec04 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000011d3ee : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000127ab5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000127af5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000326ac : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000035972 : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000006abd1 : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000006abe3 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000070441 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000077d3d : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000094e99 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000096c11 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000096c28 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000ff6e2 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000844e4 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000185e39 : fcomp dword ptr [rdx + 0x21] ; ret
0x0000000000101ffb : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000001194aa : fcomp dword ptr [rdx + 0x5b] ; ret
0x000000000011d173 : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000001840a0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001a7788 : fcomp st(1) ; cld ; call qword ptr [rax]
0x00000000001acf18 : fcomp st(2) ; call qword ptr [rdx]
0x0000000000188ea9 : fcompi st(3) ; jmp rcx
0x0000000000188ec1 : fcompi st(3) ; jmp rcx
0x000000000009ec30 : fcompi st(3) ; ret
0x00000000000d1601 : fcompi st(3) ; ret
0x00000000001aea79 : fcompi st(4) ; call qword ptr [rbx]
0x00000000001aea31 : fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001aea49 : fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001aea48 : fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001aea61 : fcompi st(4) ; jmp qword ptr [rcx]
0x000000000006ac45 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001b2c14 : fdiv qword ptr [rax + 1] ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6c14 : fdiv qword ptr [rax - 0x4ec80000] ; out dx, al ; call qword ptr [rax]
0x0000000000188f11 : fdiv st(3) ; jmp qword ptr [rdx]
0x00000000000bb224 : fdiv st(3) ; ret
0x00000000000ea9c4 : fdiv st(3) ; ret
0x0000000000109a0c : fdiv st(3) ; ret
0x000000000019531d : fdiv st(3), st(0) ; call qword ptr [rax]
0x00000000001952bd : fdiv st(3), st(0) ; call rax
0x000000000011010f : fdiv st(6) ; ret 0xf02
0x000000000011010e : fdiv st(6) ; ret 0xf02
0x00000000001b93c1 : fdiv st(7) ; jmp rdi
0x0000000000195301 : fdivp st(3) ; jmp qword ptr [rax]
0x0000000000195321 : fdivp st(3) ; jmp rax
0x0000000000195321 : fdivp st(3) ; jmp rax
0x00000000001b1198 : fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001af514 : fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001af914 : fdivr qword ptr [rip + 0x1e280001] ; cmc ; jmp qword ptr [rcx]
0x000000000019b799 : fdivr st(2) ; jmp rsp
0x0000000000195231 : fdivr st(3) ; call rax
0x00000000001952d5 : fdivr st(3) ; call rax
0x00000000000cdebf : fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000195315 : fdivr st(3) ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000195211 : fdivr st(3) ; jmp rax
0x0000000000195335 : fdivr st(3) ; push rax ; fsincos ; call rax
0x0000000000188f0d : fdivr st(3), st(0) ; jmp qword ptr [rcx]
0x0000000000189069 : fdivr st(3), st(0) ; jmp rcx
0x0000000000189068 : fdivr st(3), st(0) ; jmp rcx
0x0000000000189021 : fdivr st(3), st(0) ; push rsp ; ret
0x00000000001833f5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000008427f : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000016cc0d : fdivr st(7) ; ret
0x000000000016cc75 : fdivr st(7) ; ret
0x000000000016ce7a : fdivr st(7) ; ret
0x000000000016ce9d : fdivr st(7) ; ret
0x000000000016cec3 : fdivr st(7) ; ret
0x000000000016ceeb : fdivr st(7) ; ret
0x000000000016cf11 : fdivr st(7) ; ret
0x000000000016cf43 : fdivr st(7) ; ret
0x000000000016cf71 : fdivr st(7) ; ret
0x000000000016cfa3 : fdivr st(7) ; ret
0x000000000016cfd3 : fdivr st(7) ; ret
0x000000000016d003 : fdivr st(7) ; ret
0x000000000016d033 : fdivr st(7) ; ret
0x000000000016d065 : fdivr st(7) ; ret
0x000000000016d095 : fdivr st(7) ; ret
0x000000000016d0c5 : fdivr st(7) ; ret
0x000000000016d39f : fdivr st(7) ; ret
0x000000000016d44a : fdivr st(7) ; ret
0x0000000000172318 : fdivr st(7) ; ret
0x00000000000a56ce : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a5909 : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a59bc : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001b9599 : fdivrp st(7) ; jmp rdi
0x00000000001b95d9 : fdivrp st(7) ; jmp rdi
0x00000000000f7672 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000000f7672 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000000724b4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000000b78a2 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x000000000009c98c : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000011596f : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x000000000012ed79 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000001b95d5 : fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001b9595 : fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000000c343e : fiadd word ptr [r9] ; ret
0x00000000000c4856 : fiadd word ptr [r9] ; ret
0x00000000000c4995 : fiadd word ptr [r9] ; ret
0x00000000001a9965 : fiadd word ptr [rax] ; add al, cl ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x000000000012cb80 : fiadd word ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000019a5e5 : fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000000c343f : fiadd word ptr [rcx] ; ret
0x00000000000c4857 : fiadd word ptr [rcx] ; ret
0x00000000000c4996 : fiadd word ptr [rcx] ; ret
0x000000000001f92a : ficomp dword ptr [rcx + 0x5b58003a] ; pop rbp ; ret
0x0000000000103149 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000185c86 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000174578 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000001434f5 : fidivr dword ptr [rax + 1] ; ret
0x00000000000e7e7f : fidivr dword ptr [rcx] ; ret 0x3673
0x00000000001003de : fidivr word ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000047278 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x0000000000110ea4 : fild dword ptr [rax - 0x6af0d207] ; ret
0x00000000001a964d : fild dword ptr [rax] ; add byte ptr [rax + 0x35], al ; int1 ; jmp rdi
0x00000000000ec6d5 : fild dword ptr [rbx + 0xf4104f8] ; xchg eax, esp ; ret
0x00000000000ec8fb : fild dword ptr [rbx + 0xf4104f8] ; xchg eax, esp ; ret
0x00000000000bd3ed : fild dword ptr [rcx + 1] ; ret
0x00000000001a9a45 : fild word ptr [rax] ; add al, bh ; movsxd rsi, ecx ; call qword ptr [rdx]
0x00000000001a9add : fild word ptr [rax] ; add byte ptr [rax - 0x6b], ah ; int1 ; call qword ptr [rax]
0x00000000001a9ac5 : fild word ptr [rax] ; add byte ptr [rax - 0x6b], ch ; int1 ; call qword ptr [rax]
0x00000000000d2af7 : fild word ptr [rbx - 0x6bf0bf08] ; ret 0xf983
0x00000000000fc3c6 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000000504b8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000d34ae : fimul dword ptr [rax + 0x29] ; ret 0x8948
0x000000000003d935 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000040c2d : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000043af1 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000af03b : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000af9fa : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000b18bd : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000b2322 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000b4134 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000b4b0d : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000145d76 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000074140 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000000320c0 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000097b72 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000097e22 : fimul dword ptr [rax - 0x7d] ; ret
0x00000000000be752 : fimul dword ptr [rax - 0x7d] ; ret
0x00000000000c1911 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000137972 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000011e18b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000af9f7 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000b231f : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000b4b0a : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008f502 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x00000000000945d2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000012f406 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x000000000016b9b2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cc8d1
0x000000000016ca32 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cd951
0x00000000000e90b3 : fimul dword ptr [rdi] ; popfq ; ret
0x00000000000869a0 : fimul word ptr [rax - 0x77] ; out dx, eax ; call 0x82bd6
0x000000000013bf8f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000775ee : fimul word ptr [rax - 0x77] ; ret
0x00000000000afd64 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000b269b : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000b4ea6 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000843a1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x000000000004838e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x483e8
0x0000000000049f6e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x49fc8
0x000000000011f81e : fimul word ptr [rbp - 0x7cb7ffd6] ; ret 0xe801
0x000000000003e057 : fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000412e7 : fimul word ptr [rcx + 0x19] ; ret 0xed85
0x0000000000037360 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x00000000001389de : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000013a86c : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x000000000003e051 : fimul word ptr [rcx - 0x77] ; dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000412e1 : fimul word ptr [rcx - 0x77] ; dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000b9191 : fimul word ptr [rdi] ; xchg eax, ebx ; ret
0x000000000007221f : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007b2a1 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072067 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000007b3f1 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000013a911 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000013b176 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000010fbcd : fistp word ptr [rsi - 0x7ab70009] ; ror byte ptr [rdi], 0x95 ; ret
0x000000000007d882 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000c59d8 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c5a77 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c6142 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c62a3 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c6467 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c6876 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000f7f76 : fisttp dword ptr [rax + 0xf] ; ret
0x0000000000174575 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000049011 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000010955e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2bacda ; pop rbx ; ret
0x00000000000deaba : fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x000000000004902b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000061f70 : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x00000000000f3fd6 : fisttp dword ptr [rdi] ; test byte ptr [rbx + 1], dh ; add byte ptr [rax], al ; call 0x20282
0x00000000000f0f04 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000047654 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000003693f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x00000000000369e0 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000036aa1 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000036b3a : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x000000000009ce24 : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000103629 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000003e147 : fisttp qword ptr [rax + 0x29] ; ret
0x00000000000413c6 : fisttp qword ptr [rax + 0x29] ; ret
0x000000000008491e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000085cae : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x000000000014a782 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000024ff5 : fisttp qword ptr [rax - 0x77] ; je 0x25027 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000af764 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000afa0c : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b4870 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b4b1f : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b7e25 : fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000008e71a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000008e819 : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000010e632 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x000000000010e635 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x0000000000033c4a : fisttp word ptr [rax - 0x39] ; ret
0x00000000000c8b0c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000001430dc : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000012a511 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x000000000010e6c8 : fisttp word ptr [rax - 0x77] ; ret
0x000000000005905b : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000009f4a1 : fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000174279 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000005e690 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000000490af : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000138c92 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000138e8a : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000088107 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x000000000012a613 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x000000000014b18d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000ea998 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x00000000000fcd48 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x000000000016f451 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000011568e : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00000000000e515c : fisub dword ptr [rsi - 0x7f] ; loop 0xe5167 ; add esi, esi ; ret
0x000000000016f151 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000116892 : fisubr dword ptr [rax - 0xd] ; dec dword ptr [rax - 0x7f] ; ret
0x000000000014dbec : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000014e0cd : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000014e46d : fisubr word ptr [rcx] ; ret 0xfec5
0x00000000001a94fd : fld dword ptr [rax] ; add byte ptr [rax], dl ; xor cl, dh ; jmp qword ptr [rcx]
0x00000000001a946d : fld dword ptr [rax] ; add cl, dl ; int1 ; jmp qword ptr [rax]
0x00000000000991c7 : fld dword ptr [rbp - 0x77] ; ret 0x1374
0x00000000001840e1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000034f9e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034fd8 : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000001748c9 : fld xword ptr [rdi + 0x1f0fffea] ; add bl, dh ; ret
0x0000000000035058 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034f39 : fld xword ptr [rsp + 8] ; ret
0x0000000000035029 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035007 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000350cb : fld xword ptr [rsp - 0x18] ; ret
0x000000000004a21a : fld xword ptr [rsp - 0x18] ; ret
0x000000000019cc81 : fld1 ; call qword ptr [rdx]
0x00000000000c924b : fldcw word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000351a9 : fldcw word ptr [rsp - 2] ; ret
0x000000000014a7c0 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a8e0 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000008ea59 : fldenv dword ptr [rsi + 0xf] ; je 0x8eab6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000966e7 : fldenv dword ptr [rsi + 0xf] ; je 0x96744 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000016f4d1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e951 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000008e9bb : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000008e9d0 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000008eab7 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000096601 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000096661 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000096676 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000009ef0c : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000009ef6d : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000009ef81 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000009f06c : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000197eb1 : fldz ; call rsp
0x0000000000048434 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000004a014 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000087bbe : fmul dword ptr [rax + 0x21] ; ret
0x000000000007f0bf : fmul dword ptr [rax + 0x39] ; ret
0x00000000000c344c : fmul dword ptr [rax + 0x39] ; ret
0x00000000000c3a16 : fmul dword ptr [rax + 0x39] ; ret
0x00000000000c4864 : fmul dword ptr [rax + 0x39] ; ret
0x00000000000c49a3 : fmul dword ptr [rax + 0x39] ; ret
0x00000000000fcf0d : fmul dword ptr [rax + 0x39] ; ret
0x00000000000886db : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x0000000000099bf6 : fmul dword ptr [rax + 0xf] ; ret
0x00000000000cf482 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000424d7 : fmul dword ptr [rax - 0x39] ; ret
0x00000000000b11f7 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000130241 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc29c4a58
0x00000000000f4392 : fmul dword ptr [rax - 0x75] ; jl 0xf43c3 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000074e11 : fmul dword ptr [rax - 0x77] ; ret
0x000000000010f711 : fmul dword ptr [rax - 0x77] ; ret
0x00000000000bea29 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000dc9ff : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000de793 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000b7fb6 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007775e : fmul dword ptr [rcx + 0x21] ; ret
0x0000000000053620 : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000095785 : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000056341 : fmul dword ptr [rdi] ; ret
0x0000000000109d15 : fmul dword ptr [rdi] ; ret
0x00000000000b965c : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x00000000000b9a86 : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000047d63 : fmul dword ptr [rdi] ; xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000eb4d0 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000c8a5b : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000138c96 : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000138c95 : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000138e8e : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000138e8d : fmul qword ptr [rax - 0x7d] ; ret
0x000000000010e6c5 : fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x000000000003d6dc : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000000409dc : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x000000000004384c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000089ee9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a029 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a169 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a2a9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a3e9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a529 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a669 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a7a9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a8e9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008aa29 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ab69 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008aca9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ade9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008af29 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008b069 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008bdc3 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008bf43 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c0c3 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c243 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c3c3 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c543 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c6c3 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c843 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c9c3 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008cb43 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ccc3 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ce43 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008cfc3 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d143 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d2c3 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014e79d : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014e8bd : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014e9dd : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014eafd : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ec1d : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ed3d : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ee5d : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ef7d : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f09d : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f1bd : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f2dd : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f3fd : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f51d : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f63d : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f75d : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fa7b : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fbeb : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fd5b : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fecb : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000015003b : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000001501ab : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000015031b : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000015048b : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000001505fb : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000015076b : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000001508db : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150a4b : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150bbb : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150d2b : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150e9b : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fe2f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009003f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009024f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009045f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009066f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009087f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000090a8f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000090c9f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000090eaf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000910bf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000912cf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000914df : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000916ef : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000918ff : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000091b0f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092189 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000923d9 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092629 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092879 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092ac9 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092d19 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092f69 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000931b9 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093409 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093659 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000938a9 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093af9 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093d49 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093f99 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000941e9 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161337 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161537 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161737 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161937 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161b37 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161d37 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161f37 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162137 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162337 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162537 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162737 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162937 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162b37 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162d37 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162f37 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001634f1 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163731 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163971 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163bb1 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163df1 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164031 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164271 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001644b1 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001646f1 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164931 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164b71 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164db1 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164ff1 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000165231 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000165471 : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001b0b14 : fmul qword ptr [rdi + 1] ; add byte ptr [rax], bl ; jo 0x1b0b17 ; jmp qword ptr [rcx]
0x00000000001a0b14 : fmul qword ptr [rdi] ; add byte ptr [rax + 0x53], cl ; jmp 0x1a0b22
0x00000000001a4614 : fmul qword ptr [rdx + 0x73e80000] ; in eax, dx ; call qword ptr [rcx]
0x00000000000423d2 : fmul st(0) ; ret
0x000000000004246a : fmul st(0) ; ret
0x00000000000b10f2 : fmul st(0) ; ret
0x00000000000b118a : fmul st(0) ; ret
0x0000000000042350 : fmulp st(1) ; ret
0x00000000000b1070 : fmulp st(1) ; ret
0x00000000000d16d3 : fnsave dword ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x0000000000088f24 : fnstenv dword ptr [rbx] ; add byte ptr [rax], al ; je 0x88f36 ; ret
0x0000000000088f23 : fnstenv dword ptr [rbx] ; add byte ptr [rax], al ; je 0x88f37 ; ret
0x0000000000002532 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000035186 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000048062 : fnstsw dword ptr [rax + 1] ; ret
0x00000000000481fa : fnstsw dword ptr [rax + 1] ; ret
0x00000000001acd29 : fpatan ; call qword ptr [rbx]
0x00000000001acd69 : fpatan ; call qword ptr [rsi]
0x00000000001acda9 : fpatan ; jmp qword ptr [rcx]
0x00000000001acdc1 : fpatan ; jmp qword ptr [rcx]
0x00000000001acdd9 : fpatan ; jmp qword ptr [rcx]
0x0000000000033bd5 : fpatan ; ret
0x00000000000350d9 : fpatan ; ret
0x00000000000aadc6 : fpatan ; ret
0x000000000019a8d1 : fprem ; call rsp
0x00000000001a7789 : frndint ; call qword ptr [rax]
0x000000000016f251 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003505c : fscale ; fstp st(1) ; ret
0x00000000001952b5 : fsincos ; call qword ptr [rax]
0x0000000000195339 : fsincos ; call rax
0x0000000000195295 : fsincos ; inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x0000000000189264 : fst dword ptr [rdx - 0xc] ; jmp rbx
0x0000000000183dc7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000096e3e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000035188 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000184140 : fstp st(0) ; ret 0xde5d
0x0000000000035130 : fstp st(1) ; add rsp, 8 ; ret
0x000000000003505e : fstp st(1) ; ret
0x00000000000350d8 : fstp st(1) ; ret
0x0000000000034fa0 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034fda : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502d : fstp xword ptr [rdi] ; ret
0x0000000000035778 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000035e38 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000047b34 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000047bc8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000047f58 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000006b378 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000006b3ab : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000bc528 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000bf618 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000bf648 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cbf48 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc13b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc218 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc2d1 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc331 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc702 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc788 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd298 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd438 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd468 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd4c8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd4f8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd528 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd558 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea778 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea7a8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea7d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea808 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea838 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea868 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea898 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea8c8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f5ab7 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f5b17 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6b58 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6df8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6e28 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6ef8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6f28 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6fe8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7018 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7081 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f72a1 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7301 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7328 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f77b8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7931 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7958 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7988 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f79b8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f79e8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7a18 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7a81 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7aa8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7ad8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8318 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8348 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8378 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f83ab : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8988 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f89bb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f89e8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a18 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a48 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a7b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8aa8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8ad8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8b08 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fb771 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fbaab : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc257 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc978 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc9a8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc9d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcd78 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcf58 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcfc1 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd021 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd4e8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd588 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd5f7 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd718 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd748 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd7b1 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd7d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd841 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd868 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdbd8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdc08 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdc38 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff188 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1b8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001014ea : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000101758 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000101788 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001017f1 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000101818 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000101848 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010187b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001018a8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001018d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000101908 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000101938 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000105ffb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000106028 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000106058 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010608b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001060bb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001060e8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010611b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000106148 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000106178 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001061ab : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001061d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010620b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001072f8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107328 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010742d : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107458 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107498 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001074c8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001074f8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107528 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010774b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107778 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001077a8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001077d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010781b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107848 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107878 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001078a8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001078d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107908 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107938 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107968 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107998 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001079cb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a37 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a58 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a8b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ab8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ae8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b18 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b48 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b78 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107bab : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107bdb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c08 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c38 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c6b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c9b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ccb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107d37 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107d58 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107dc7 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107de8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107e18 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107e87 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ea8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107edb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f08 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f38 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f6b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107fd1 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ff8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010802b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010805b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001080e1 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108108 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108171 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108198 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001081c8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001081fb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108228 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108357 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001083b1 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001084d1 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108537 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010855b : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108588 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001085b8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001085eb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108b77 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108bd7 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108bf8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c28 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c58 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c88 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108cbb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108ceb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d18 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d48 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d78 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000108da8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001406ab : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001406fb : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000035458 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000035748 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000357b8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000357f8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000bc450 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000c9668 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000cbff8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000cc090 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000cc180 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000cd2d8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000cd348 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000cd598 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000cd618 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000f6bf8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000f6c48 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000f6c98 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000f6cf8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000f6d58 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000f6db0 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000f6f90 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000f7688 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fbae8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fbb38 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fc290 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fc7b8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fd1b8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fd228 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fd2a8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fd358 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fd8a8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000fefd0 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000ff060 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000ff100 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000ff158 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000001056d8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000107398 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000001075d8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000107688 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000001076c8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000108888 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000108930 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000001089e0 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000115840 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000115902 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000140c72 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000035189 : fsub dword ptr [rip + 0x200] ; ret
0x000000000016f551 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170721 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d64a9 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e17420
0x00000000000a1674 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000a3324 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001658a4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001670f4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000169bd4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000016b484 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000016df44 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001adc14 : fsub qword ptr [rax] ; add dword ptr [rax], eax ; call 0x221ad0b7
0x00000000000cd222 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00000000000aa46b : fsub qword ptr [rsi + 0xf] ; jmp 0xaa437
0x000000000016f351 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706a1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089c6c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000009690c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001747eb : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001029e2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001044eb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000001048ea : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000100ce8 : fsubp st(0) ; ret 0xf775
0x0000000000103f58 : fsubp st(0) ; ret 0xffe8
0x0000000000103e58 : fsubp st(0) ; ret 0xffe9
0x0000000000034fa2 : fsubp st(1) ; ret
0x0000000000034fdc : fsubp st(1) ; ret
0x00000000000c7331 : fsubp st(1) ; ret 0xffec
0x00000000001afd18 : fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000001a4448 : fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x00000000001a7d58 : fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001096db : fsubr qword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000b9e1b : fsubr qword ptr [rcx] ; ret
0x0000000000186ce4 : fsubr st(2), st(0) ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001a5321 : fsubr st(5) ; call qword ptr [rsi]
0x00000000001aa2f8 : fsubr st(6) ; int1 ; jmp rcx
0x0000000000185e18 : fucom st(5) ; loop 0x185e71 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000007b5df : fucomp st(0) ; ret
0x00000000001a6d09 : fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001a7c69 : fucomp st(7) ; jmp qword ptr [rbx]
0x000000000006e50e : fucompi st(0) ; adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000075bdd : fucompi st(0) ; cmp eax, 0x89000056 ; ret 0x98eb
0x000000000007652d : fucompi st(0) ; in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d6
0x0000000000088372 : fucompi st(0) ; js 0x883f2 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c911d : fucompi st(0) ; or eax, 0x480007a4 ; mov eax, ebx ; call rax
0x00000000000bf4ac : fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xfffc
0x000000000010c057 : fucompi st(0) ; ret
0x000000000013356c : fucompi st(0) ; ret
0x0000000000137d57 : fucompi st(0) ; ret
0x00000000000aeef8 : fucompi st(0) ; ret 0x5c4
0x0000000000100aa8 : fucompi st(0) ; ret 0xf4c6
0x00000000000ff948 : fucompi st(0) ; ret 0xf788
0x0000000000057fd8 : fucompi st(0) ; ret 0xfc78
0x0000000000033ee0 : fucompi st(0) ; ret 0xfeb9
0x0000000000020fd8 : fucompi st(0) ; ret 0xffe8
0x0000000000133674 : fucompi st(0) ; ret 0xffee
0x0000000000119d58 : fucompi st(0) ; ret 6
0x00000000001acc2c : hlt ; adc byte ptr [rcx], al ; add al, ah ; ret
0x000000000013f008 : hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cdff0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b032c : hlt ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001bafa5 : hlt ; add dword ptr [rax], eax ; js 0x1baf48 ; sti ; jmp qword ptr [rdx]
0x000000000019a8cd : hlt ; add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x00000000001aea2c : hlt ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af22c : hlt ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0b2c : hlt ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000105d3b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105dab : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001ade2c : hlt ; and al, byte ptr [rcx] ; add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x000000000018910a : hlt ; call qword ptr [rax]
0x0000000000189109 : hlt ; call qword ptr [rax]
0x00000000001891b6 : hlt ; call qword ptr [rax]
0x00000000001891b5 : hlt ; call qword ptr [rax]
0x00000000001891b4 : hlt ; call qword ptr [rax]
0x0000000000189366 : hlt ; call qword ptr [rax]
0x00000000001ad7f2 : hlt ; call qword ptr [rax]
0x00000000001ad832 : hlt ; call qword ptr [rax]
0x00000000001892de : hlt ; call qword ptr [rbx]
0x00000000001ae812 : hlt ; call qword ptr [rbx]
0x00000000001aea7a : hlt ; call qword ptr [rbx]
0x00000000001ad9c2 : hlt ; call qword ptr [rcx]
0x00000000001ad7aa : hlt ; call qword ptr [rsi]
0x00000000001aebf2 : hlt ; call qword ptr [rsi]
0x00000000001ae14a : hlt ; call rax
0x00000000001891a2 : hlt ; call rdi
0x00000000001892c6 : hlt ; call rdi
0x000000000018976e : hlt ; call rdi
0x00000000001af452 : hlt ; call rsi
0x0000000000189202 : hlt ; call rsp
0x00000000001895a6 : hlt ; call rsp
0x0000000000198d8a : hlt ; call rsp
0x0000000000198dc2 : hlt ; call rsp
0x0000000000189c2c : hlt ; cmc ; call rsp
0x00000000001af92c : hlt ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x000000000009ebdb : hlt ; cmp ecx, esi ; je 0x9ebd6 ; ret
0x00000000001a622c : hlt ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x00000000000de2ee : hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00000000001892da : hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x00000000001892d9 : hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x00000000001892d8 : hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x0000000000198dba : hlt ; dec dword ptr [rsp + rdx*2 + 0x20a40001] ; hlt ; call rsp
0x000000000018919e : hlt ; dec ebp ; push rax ; hlt ; call rdi
0x00000000001892c2 : hlt ; dec ebp ; push rbx ; hlt ; call rdi
0x00000000001891fe : hlt ; dec edx ; push rcx ; hlt ; call rsp
0x00000000001af231 : hlt ; hlt ; jmp qword ptr [rsi]
0x00000000001895aa : hlt ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x0000000000198d82 : hlt ; inc dword ptr [rdx + rdx*2 + 0x7e40001] ; hlt ; call rsp
0x0000000000189362 : hlt ; inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x00000000001891fa : hlt ; inc eax ; push rcx ; hlt ; dec edx ; push rcx ; hlt ; call rsp
0x000000000018935e : hlt ; inc ebp ; push rdx ; hlt ; inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x000000000018919a : hlt ; inc ebx ; push rax ; hlt ; dec ebp ; push rax ; hlt ; call rdi
0x00000000001892be : hlt ; inc ebx ; push rbx ; hlt ; dec ebp ; push rbx ; hlt ; call rdi
0x00000000000f6a0d : hlt ; ja 0xf69a7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001841c8 : hlt ; jmp 0x18419d
0x00000000001aed4a : hlt ; jmp qword ptr [rbx]
0x00000000001ad9aa : hlt ; jmp qword ptr [rcx]
0x00000000001ada12 : hlt ; jmp qword ptr [rcx]
0x00000000001adaea : hlt ; jmp qword ptr [rcx]
0x00000000001adb02 : hlt ; jmp qword ptr [rcx]
0x00000000001adba2 : hlt ; jmp qword ptr [rcx]
0x00000000001adbba : hlt ; jmp qword ptr [rcx]
0x00000000001adc02 : hlt ; jmp qword ptr [rcx]
0x00000000001adc1a : hlt ; jmp qword ptr [rcx]
0x00000000001add42 : hlt ; jmp qword ptr [rcx]
0x00000000001ade32 : hlt ; jmp qword ptr [rcx]
0x00000000001ade9a : hlt ; jmp qword ptr [rcx]
0x00000000001adeb2 : hlt ; jmp qword ptr [rcx]
0x00000000001adeca : hlt ; jmp qword ptr [rcx]
0x00000000001adee2 : hlt ; jmp qword ptr [rcx]
0x00000000001adefa : hlt ; jmp qword ptr [rcx]
0x00000000001adf2a : hlt ; jmp qword ptr [rcx]
0x00000000001adf42 : hlt ; jmp qword ptr [rcx]
0x00000000001ae00a : hlt ; jmp qword ptr [rcx]
0x00000000001ae022 : hlt ; jmp qword ptr [rcx]
0x00000000001ae03a : hlt ; jmp qword ptr [rcx]
0x00000000001ae1b2 : hlt ; jmp qword ptr [rcx]
0x00000000001ae1e2 : hlt ; jmp qword ptr [rcx]
0x00000000001ae1fa : hlt ; jmp qword ptr [rcx]
0x00000000001ae212 : hlt ; jmp qword ptr [rcx]
0x00000000001ae242 : hlt ; jmp qword ptr [rcx]
0x00000000001ae25a : hlt ; jmp qword ptr [rcx]
0x00000000001ae272 : hlt ; jmp qword ptr [rcx]
0x00000000001aea32 : hlt ; jmp qword ptr [rcx]
0x00000000001aea4a : hlt ; jmp qword ptr [rcx]
0x00000000001aea62 : hlt ; jmp qword ptr [rcx]
0x00000000001aeb3a : hlt ; jmp qword ptr [rcx]
0x00000000001aec0a : hlt ; jmp qword ptr [rcx]
0x00000000001aedaa : hlt ; jmp qword ptr [rcx]
0x00000000001aedfa : hlt ; jmp qword ptr [rcx]
0x00000000001aee8a : hlt ; jmp qword ptr [rcx]
0x00000000001aeea2 : hlt ; jmp qword ptr [rcx]
0x00000000001aeed2 : hlt ; jmp qword ptr [rcx]
0x00000000001aef02 : hlt ; jmp qword ptr [rcx]
0x00000000001aef9a : hlt ; jmp qword ptr [rcx]
0x00000000001aefb2 : hlt ; jmp qword ptr [rcx]
0x00000000001aefca : hlt ; jmp qword ptr [rcx]
0x00000000001af3aa : hlt ; jmp qword ptr [rcx]
0x00000000001af3c2 : hlt ; jmp qword ptr [rcx]
0x00000000001892e6 : hlt ; jmp qword ptr [rdi]
0x0000000000189582 : hlt ; jmp qword ptr [rsi]
0x00000000001ada2a : hlt ; jmp qword ptr [rsi]
0x00000000001af1a2 : hlt ; jmp qword ptr [rsi]
0x00000000001af1a1 : hlt ; jmp qword ptr [rsi]
0x00000000001af232 : hlt ; jmp qword ptr [rsi]
0x0000000000189266 : hlt ; jmp rbx
0x000000000018932e : hlt ; jmp rbx
0x00000000001891a6 : hlt ; jmp rcx
0x00000000001892ca : hlt ; jmp rcx
0x00000000001ad052 : hlt ; jmp rcx
0x00000000001ae612 : hlt ; jmp rcx
0x00000000001af43a : hlt ; jmp rdi
0x0000000000189586 : hlt ; jmp rdx
0x000000000018958a : hlt ; jmp rdx
0x000000000018958e : hlt ; jmp rdx
0x0000000000189592 : hlt ; jmp rdx
0x0000000000189596 : hlt ; jmp rdx
0x000000000018959a : hlt ; jmp rdx
0x000000000018959e : hlt ; jmp rdx
0x00000000001895a2 : hlt ; jmp rdx
0x00000000001895ae : hlt ; jmp rdx
0x00000000001895b2 : hlt ; jmp rdx
0x00000000001895b6 : hlt ; jmp rdx
0x00000000001895ba : hlt ; jmp rdx
0x00000000001895be : hlt ; jmp rdx
0x00000000001895c2 : hlt ; jmp rdx
0x00000000001895c6 : hlt ; jmp rdx
0x00000000001895ca : hlt ; jmp rdx
0x00000000001895ce : hlt ; jmp rdx
0x00000000001895d2 : hlt ; jmp rdx
0x00000000001895d6 : hlt ; jmp rdx
0x00000000001895da : hlt ; jmp rdx
0x00000000001895de : hlt ; jmp rdx
0x00000000001895e2 : hlt ; jmp rdx
0x00000000001895e6 : hlt ; jmp rdx
0x00000000001895ea : hlt ; jmp rdx
0x00000000001895ee : hlt ; jmp rdx
0x00000000001895f2 : hlt ; jmp rdx
0x00000000001895f6 : hlt ; jmp rdx
0x00000000001aef6a : hlt ; jmp rdx
0x0000000000198e82 : hlt ; jmp rsp
0x0000000000172815 : hlt ; jne 0x172937 ; ret
0x0000000000172814 : hlt ; jne 0x172938 ; ret
0x00000000001b2c2c : hlt ; jo 0x1b2c37 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a0f8 : hlt ; jrcxz 0x19a0f7 ; inc esp ; ret 1
0x00000000001a682c : hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x000000000015ad0a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d7da : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001602fa : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015300e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015300d : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153056 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153055 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153094 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153093 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001530cc : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001530cb : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015310a : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153109 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153132 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153131 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015315a : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153159 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153172 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153171 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015318a : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153189 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001559de : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001559dd : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a26 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a25 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a64 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a63 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a9c : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a9b : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155ada : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155ad9 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b02 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b01 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b2a : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b29 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b42 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b41 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b5a : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b59 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583ae : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583ad : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583f6 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583f5 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158434 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158433 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015846c : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015846b : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584aa : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584a9 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584d2 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584d1 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584fa : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584f9 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158512 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158511 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015852a : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158529 : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001886c4 : hlt ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188744 : hlt ; mov esi, ebx ; call qword ptr [rdx]
0x00000000000e1c96 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x0000000000171e23 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171e22 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001aa22c : hlt ; out 0, al ; add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x000000000018957e : hlt ; push qword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rsi]
0x000000000018957a : hlt ; push qword ptr [rax + 0x70fff452] ; push rdx ; hlt ; jmp qword ptr [rsi]
0x00000000001891b2 : hlt ; push rdx ; hlt ; call qword ptr [rax]
0x00000000001891b1 : hlt ; push rdx ; hlt ; call qword ptr [rax]
0x00000000001891b0 : hlt ; push rdx ; hlt ; call qword ptr [rax]
0x00000000001892d6 : hlt ; push rdx ; hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x00000000001891ae : hlt ; push rdx ; hlt ; push rdx ; hlt ; call qword ptr [rax]
0x000000000009ebbb : hlt ; ret
0x00000000000ac5a3 : hlt ; ret
0x00000000000ac5a2 : hlt ; ret
0x0000000000189018 : hlt ; ret
0x000000000018901c : hlt ; ret
0x0000000000189024 : hlt ; ret
0x000000000018902c : hlt ; ret
0x0000000000189098 : hlt ; ret
0x00000000001a4051 : hlt ; ret
0x0000000000189098 : hlt ; ret
0x000000000019b9e0 : hlt ; ret 0xfffd
0x00000000000f4038 : hlt ; ret 0xffff
0x000000000019a10c : hlt ; ret 1
0x000000000019aea8 : hlt ; sar cl, 1 ; call rsp
0x00000000001ad82c : hlt ; sbb al, 1 ; add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x0000000000199c48 : hlt ; sbb edi, esi ; call rsp
0x0000000000195575 : hlt ; sti ; call rax
0x0000000000184303 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000171e27 : hlt ; sub eax, edx ; ret
0x000000000009f47e : hlt ; sub rsp, 8 ; call 0x8b727
0x0000000000003cd9 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d72fb : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd729e ; pop rbx ; ret
0x000000000018874c : hlt ; xor ebx, 0xffffffff ; out 0x88, al ; jmp rsi
0x000000000007d8a9 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000b9fee : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000105165 : idiv bh ; add rsp, 0x408 ; ret
0x000000000018a912 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; jns 0x18a91a ; jmp qword ptr [rdx]
0x000000000018a90a : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000018a8aa : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x18a8b2 ; jmp qword ptr [rdx]
0x000000000018a946 : idiv bh ; and bh, byte ptr [rsi + rsi*8 - 1] ; scasb al, byte ptr [rdi] ; jns 0x18a94e ; jmp qword ptr [rdx]
0x000000000018a8a2 : idiv bh ; imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x18a8aa ; jmp qword ptr [rdx]
0x000000000018a856 : idiv bh ; jle 0x18a856 ; jmp rdx
0x000000000018a916 : idiv bh ; jns 0x18a916 ; jmp qword ptr [rdx]
0x000000000018a84a : idiv bh ; loop 0x18a8d3 ; idiv bh ; pop rsp ; jle 0x18a852 ; jmp rdx
0x000000000018a852 : idiv bh ; loop 0x18a8db ; idiv bh ; jle 0x18a85a ; jmp rdx
0x000000000018a90e : idiv bh ; mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000019938a : idiv bh ; mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x0000000000199302 : idiv bh ; mov esp, 0x74000178 ; adc al, 0xf6 ; call rsp
0x000000000019928a : idiv bh ; mov esp, 0xc4000176 ; or al, 0xf6 ; call rsp
0x00000000001999aa : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x00000000000b9faa : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000018a84e : idiv bh ; pop rsp ; jle 0x18a84e ; jmp rdx
0x000000000018a986 : idiv bh ; ret 0xf678
0x000000000018a8a6 : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x18a8a6 ; jmp qword ptr [rdx]
0x000000000018a8ae : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x18a8ae ; jmp qword ptr [rdx]
0x000000000018a94a : idiv bh ; scasb al, byte ptr [rdi] ; jns 0x18a94a ; jmp qword ptr [rdx]
0x000000000018a4f4 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000128a8e : idiv bh ; xor eax, eax ; ret
0x0000000000023b86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000023b86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000019a162 : idiv edi ; cld ; ret
0x00000000001274a8 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000019a10a : idiv edi ; hlt ; ret 1
0x000000000019a132 : idiv edi ; insb byte ptr [rdi], dx ; ret
0x0000000000199f62 : idiv edi ; lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000019a0f2 : idiv edi ; lodsb al, byte ptr [rsi] ; ret 1
0x0000000000199b42 : idiv edi ; mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000199c42 : idiv edi ; mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x0000000000199f2a : idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x000000000019a12a : idiv edi ; push rsp ; ret
0x000000000019a142 : idiv edi ; pushfq ; ret
0x000000000019a0da : idiv edi ; ret 1
0x000000000019a0ea : idiv edi ; xchg eax, esp ; ret 1
0x000000000003a6a6 : idiv esi ; ret
0x000000000003a6b6 : idiv esi ; ret
0x000000000003a6a5 : idiv rsi ; ret
0x000000000003a6b5 : idiv rsi ; ret
0x0000000000196194 : imul byte ptr [rbp - 0x52790004] ; cld ; call qword ptr [rsi]
0x00000000000668fc : imul cl ; ret
0x00000000000a4ec8 : imul cl ; ret 8
0x0000000000188b18 : imul dword ptr [rsi - 0x50e2000d] ; jmp rcx
0x00000000000e34fc : imul eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000001735f3 : imul eax ; scasd eax, dword ptr [rdi] ; ret 0xffea
0x000000000019697d : imul eax, dword ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x196972 ; jmp rsp
0x00000000000eaf37 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xa6e9
0x0000000000196915 : imul eax, dword ptr [rax], 0xe9650400 ; jmp rsp
0x00000000001a248d : imul eax, dword ptr [rax], 0xecf52000 ; call qword ptr [rsi]
0x0000000000170981 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000055f36 : imul eax, dword ptr [rcx], 0x7e8b4d00 ; and byte ptr [rax + 1], cl ; ret
0x0000000000080510 : imul eax, dword ptr [rcx], 0xf6410000 ; ret 0xf02
0x00000000000bd336 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000000bd5ef : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000010ece5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000779c4 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084c61 : imul ebx, edi, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000013a51d : imul ecx, dword ptr [rax - 0x75], 5 ; ret
0x000000000010ec85 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000896fa : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b3eac : imul ecx, dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000010ebbf : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000189f2c : imul edi, dword ptr [rbx - 0xb], -1 ; jnp 0x189f2f ; call rsi
0x00000000000aeef3 : imul edi, dword ptr [rcx + rsi], 0xe8df8900 ; ret 0x5c4
0x000000000018a8a4 : imul edi, dword ptr [rdx - 0xa], -1 ; scasb al, byte ptr [rdi] ; jns 0x18a8a8 ; jmp qword ptr [rdx]
0x0000000000046ef1 : imul edi, eax, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x0000000000076770 : imul edi, ebp, 0x89c085ff ; ret
0x00000000000ca683 : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000121691 : imul edi, esi, 0x8348ffff ; ret
0x00000000001960fd : imul edi, esp, 0xfc6b60ff ; jmp rax
0x000000000010ecb5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000186c78 : imul edx, edx, -0x13 ; jmp qword ptr [rax]
0x0000000000186c74 : imul edx, edx, -0x13 ; ljmp ptr [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000002b84 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003aa0 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000174839 : imul esi, dword ptr [rax + 0x1f0fffea], 0 ; ret
0x000000000004d3d2 : imul esi, dword ptr [rdi], 0 ; call rax
0x00000000000bc6c4 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x00000000000bc6c3 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x00000000000bc6c2 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000013de91 : imul esp, dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003a733 : imul esp, dword ptr [rdx + 0x38], 0x58d4800 ; ret 0x387a
0x00000000000ba333 : imul esp, dword ptr [rsi + 0x30], 0x58d4800 ; ret 0x307e
0x00000000000a5c0c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000000a720c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000000a8cec : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000001aa035 : in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; call qword ptr [rbx]
0x00000000001aa005 : in al, 0 ; add byte ptr [rax - 0x18], bl ; int1 ; jmp qword ptr [rdi]
0x0000000000172848 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000001077f1 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x0000000000197da5 : in al, 0 ; add byte ptr [rsi], al ; out dx, al ; call rsp
0x00000000001ace1c : in al, 0x12 ; add dword ptr [rax], eax ; xor dl, bl ; jmp qword ptr [rcx]
0x0000000000198f30 : in al, 0x20 ; cmc ; jmp rsp
0x000000000019e21c : in al, 0x26 ; add byte ptr [rax], al ; jne 0x19e213 ; jmp qword ptr [rcx]
0x000000000019b1a0 : in al, 0x2e ; cli ; jmp rsp
0x000000000019aa40 : in al, 0x3b ; stc ; jmp rsp
0x000000000009ec2b : in al, 0x41 ; cmp eax, ecx ; je 0x9ec17 ; ret
0x00000000001b0f1c : in al, 0x53 ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0f1f ; jmp qword ptr [rcx]
0x000000000019b664 : in al, 0x57 ; add al, byte ptr [rax] ; ret
0x000000000019b350 : in al, 0x57 ; cli ; jmp rsp
0x0000000000089a6c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000008b26c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000008f95c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000aa95e : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000198160 : in al, 0x80 ; out dx, eax ; jmp rsp
0x000000000009a91d : in al, 0x83 ; ret 0x480f
0x00000000001888c8 : in al, 0x92 ; jmp rsp
0x0000000000198218 : in al, 0x93 ; out dx, eax ; call rsp
0x00000000001a531c : in al, 0x97 ; add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x000000000019b9d8 : in al, 0xc2 ; std ; inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x000000000019a15c : in al, 0xc3 ; add dword ptr [rax], eax ; je 0x19a151 ; idiv edi ; cld ; ret
0x00000000001a931c : in al, 0xd7 ; add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x0000000000186d55 : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186d54 : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186d5d : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186d6d : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186d6c : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186d9d : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186d9c : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186db1 : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186db0 : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186dbd : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186dd5 : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186dd4 : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186ded : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000186dec : in al, 0xed ; jmp qword ptr [rcx]
0x0000000000003794 : in al, 0xee ; jne 0x3776 ; ret 0x975
0x00000000001bab1c : in al, 0xef ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x000000000004c5b4 : in al, 0xf ; lahf ; ret
0x00000000001256ca : in al, 0xf ; test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000050300 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000015acea : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ace9 : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d7ba : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d7b9 : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001602da : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001602d9 : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000008f2eb : in al, 0xf3 ; ret
0x000000000019a119 : in al, 0xf7 ; jmp qword ptr [rbx + rax*8]
0x000000000019a109 : in al, 0xf7 ; push rsp ; ret 1
0x000000000019a108 : in al, 0xf7 ; push rsp ; ret 1
0x00000000001982c8 : in al, 0xfa ; out dx, eax ; call rsp
0x00000000001a5eb1 : in al, 0xfc ; call qword ptr [rdx]
0x00000000000f365a : in al, 0xff ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x1f8b0
0x000000000019a685 : in al, 1 ; add byte ptr [rbp - 8], dl ; jmp rsp
0x000000000004ed8b : in al, 5 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000a6748 : in al, 6 ; add byte ptr [rax], al ; ret
0x0000000000198d88 : in al, 7 ; hlt ; call rsp
0x00000000000f12f1 : in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000088e19 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; pop rbp ; ret 8
0x00000000000704b3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000007aee3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000802b3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000088d61 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000136eb3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000136fb3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000006d3b4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xa7c
0x00000000001242e4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x0000000000064329 : in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000bd9f0 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000084ab8 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000004c5b0 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000145440 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001b0a24 : in al, dx ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adf24 : in al, dx ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a163a : in al, dx ; call qword ptr [rax]
0x00000000001a2492 : in al, dx ; call qword ptr [rsi]
0x000000000018263a : in al, dx ; call rax
0x00000000001a1682 : in al, dx ; call rsp
0x0000000000182632 : in al, dx ; dec dword ptr [rdi - 0x510013aa] ; push rsi ; in al, dx ; call rax
0x000000000004a219 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001aef99 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aefb1 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aefb0 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aefc9 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000187e19 : in al, dx ; int1 ; call qword ptr [rax]
0x0000000000187e49 : in al, dx ; int1 ; call rax
0x0000000000187e55 : in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e45 : in al, dx ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e1d : in al, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e0d : in al, dx ; int1 ; jmp rax
0x0000000000187e4d : in al, dx ; int1 ; jmp rax
0x0000000000187e09 : in al, dx ; int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x00000000001a103a : in al, dx ; jmp qword ptr [rcx]
0x00000000001a11b2 : in al, dx ; jmp qword ptr [rcx]
0x00000000001a136a : in al, dx ; jmp rax
0x00000000001a148a : in al, dx ; jmp rbx
0x00000000000ff323 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001a6e24 : in al, dx ; mov dl, 0 ; add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x000000000015300a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153052 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153090 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001530c8 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153106 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015312e : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153156 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015316e : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001559da : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a22 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a60 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a98 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155ad6 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155afe : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b26 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b3e : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583aa : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583f2 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158430 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158468 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584a6 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584ce : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584f6 : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015850e : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009ed23 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000013aaa4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000015b0ea : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b0e9 : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dbba : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dbb9 : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001606da : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001606d9 : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000012b091 : in al, dx ; or al, ch ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000009f481 : in al, dx ; or al, ch ; cwde ; ret 0xfffe
0x0000000000045b5c : in al, dx ; or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012bf3a : in al, dx ; or al, ch ; out dx, eax ; ret 0
0x000000000006dcd6 : in al, dx ; or al, ch ; ret
0x000000000006ddd3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000082f47 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000146164 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013dcdd : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000013dcdd : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000f71f2 : in al, dx ; or dh, dh ; ret 0x7540
0x00000000000f7222 : in al, dx ; or dh, dh ; ret 0x7540
0x00000000001b2b24 : in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b244c
0x000000000009eb2b : in al, dx ; ret
0x00000000000f6a43 : in al, dx ; ret
0x00000000001178c2 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3b21c
0x00000000000f6e71 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f6ebc : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000128a53 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001a6b24 : in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000000025ab : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001a6724 : in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jae 0x1a6720 ; jmp qword ptr [rdx]
0x0000000000188308 : in al, dx ; sub dl, dh ; call rdi
0x000000000018585e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1857f1 ; ret 0x48f
0x000000000018585d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1857f2 ; ret 0x48f
0x000000000013cd10 : in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012f803 : in al, dx ; xor dh, dh ; ret 0xc707
0x00000000001aa04d : in eax, 0 ; add byte ptr [rax - 0x18], ah ; int1 ; call qword ptr [rbx]
0x0000000000183f63 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000012a616 : in eax, 0x41 ; call rdi
0x000000000008f42a : in eax, 0x48 ; mov eax, edi ; ret
0x000000000004a6f2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000001159d5 : in eax, 0x5d ; ret
0x00000000001831f9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000001336e2 : in eax, 0x74 ; sub eax, 0x8948f631 ; out 0x89, eax ; ret
0x0000000000003aa2 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000120713 : in eax, 0x7f ; sub al, byte ptr [rax] ; call rax
0x00000000000d91d3 : in eax, 0x89 ; ret
0x0000000000052fc3 : in eax, 0xdf ; loopne 0x52f54 ; ret 0xe680
0x0000000000054f3c : in eax, 0xdf ; loopne 0x54ecd ; ret 0xe680
0x0000000000185e19 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000196be9 : in eax, 0xe9 ; call rsp
0x0000000000196be8 : in eax, 0xe9 ; call rsp
0x0000000000197101 : in eax, 0xea ; jmp rsp
0x00000000000abf33 : in eax, 0xf ; je 0xabf58 ; add rax, 2 ; ret
0x00000000001abdc1 : in eax, 0xf2 ; call qword ptr [rsi]
0x000000000015ad6a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ad69 : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d83a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d839 : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016035a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160359 : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000944ea : in eax, 0xf3 ; ret
0x0000000000195511 : in eax, 0xfb ; call qword ptr [rax - 0x1f000417]
0x000000000019522d : in eax, 0xfb ; call qword ptr [rax]
0x000000000019526d : in eax, 0xfb ; call rax
0x000000000019526c : in eax, 0xfb ; call rax
0x00000000001852e1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000019a6ad : in eax, 1 ; add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x000000000012fd0e : in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x000000000007652f : in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d4
0x00000000000af760 : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b486c : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b1e70 : in eax, dx ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x00000000001a3dfa : in eax, dx ; call qword ptr [rax]
0x00000000001a3df9 : in eax, dx ; call qword ptr [rax]
0x00000000001a461a : in eax, dx ; call qword ptr [rcx]
0x000000000018689a : in eax, dx ; call qword ptr [rdi]
0x00000000001a4c7a : in eax, dx ; call qword ptr [rdx]
0x00000000001a4cb2 : in eax, dx ; call qword ptr [rdx]
0x0000000000186b46 : in eax, dx ; call qword ptr [rsi]
0x0000000000186b56 : in eax, dx ; call qword ptr [rsi]
0x0000000000186b5a : in eax, dx ; call qword ptr [rsi]
0x0000000000186b5e : in eax, dx ; call qword ptr [rsi]
0x0000000000186bc6 : in eax, dx ; call qword ptr [rsi]
0x0000000000186bd6 : in eax, dx ; call qword ptr [rsi]
0x0000000000186bda : in eax, dx ; call qword ptr [rsi]
0x0000000000186bde : in eax, dx ; call qword ptr [rsi]
0x00000000001a45aa : in eax, dx ; call qword ptr [rsi]
0x00000000001a4c02 : in eax, dx ; call qword ptr [rsi]
0x00000000001a5322 : in eax, dx ; call qword ptr [rsi]
0x00000000001a2c92 : in eax, dx ; call rdx
0x00000000001a28ba : in eax, dx ; call rsi
0x00000000001a5662 : in eax, dx ; call rsi
0x0000000000186892 : in eax, dx ; call rsp
0x00000000001868ba : in eax, dx ; call rsp
0x00000000001868d2 : in eax, dx ; call rsp
0x000000000019766a : in eax, dx ; call rsp
0x000000000019772a : in eax, dx ; call rsp
0x00000000001977b2 : in eax, dx ; call rsp
0x00000000001977d2 : in eax, dx ; call rsp
0x00000000001978fa : in eax, dx ; call rsp
0x0000000000197972 : in eax, dx ; call rsp
0x0000000000186d9a : in eax, dx ; dec dword ptr [rdi - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000019780a : in eax, dx ; dec esp ; rol dword ptr [rax], 0 ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001974b2 : in eax, dx ; dec esp ; test eax, 0x4d440000 ; in eax, dx ; jmp rsp
0x0000000000186dae : in eax, dx ; inc dword ptr [rax - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000019762a : in eax, dx ; inc dword ptr [rbp + rsi*4 - 0x6b4c0000] ; in eax, dx ; jmp rsp
0x0000000000186df2 : in eax, dx ; inc dword ptr [rbp - 0x1d] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000019783a : in eax, dx ; inc esp ; ret 0
0x0000000000187e79 : in eax, dx ; int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e71 : in eax, dx ; int1 ; inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187e59 : in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e75 : in eax, dx ; int1 ; jmp rax
0x0000000000186c7a : in eax, dx ; jmp qword ptr [rax]
0x00000000001a2aca : in eax, dx ; jmp qword ptr [rax]
0x00000000001a3862 : in eax, dx ; jmp qword ptr [rax]
0x00000000001a4b2a : in eax, dx ; jmp qword ptr [rax]
0x00000000001a49b2 : in eax, dx ; jmp qword ptr [rbx]
0x0000000000186ce6 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cea : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cee : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cf2 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cf6 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cfa : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186cfe : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d02 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d06 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d0a : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d0e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d12 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d16 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d1a : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d1e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d22 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d26 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d2a : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d2e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d32 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d36 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d3a : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d3e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d42 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d46 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d4a : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d4e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d56 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d5e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d6e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d72 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d76 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d7a : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d7e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d82 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d86 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d8a : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d8e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d92 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d96 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d9e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186da2 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186da6 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186daa : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186db2 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186db6 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dbe : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dc2 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dc6 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dca : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dce : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dd6 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dee : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186df6 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dfa : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dfe : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e02 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e12 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e16 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e1e : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e26 : in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e2a : in eax, dx ; jmp qword ptr [rcx]
0x00000000001a444a : in eax, dx ; jmp qword ptr [rcx]
0x00000000001a372a : in eax, dx ; jmp qword ptr [rdi]
0x0000000000186e22 : in eax, dx ; jmp qword ptr [rdx]
0x00000000001a3c9a : in eax, dx ; jmp qword ptr [rsi]
0x00000000001a3c99 : in eax, dx ; jmp qword ptr [rsi]
0x00000000001a5262 : in eax, dx ; jmp qword ptr [rsi]
0x0000000000186a2e : in eax, dx ; jmp rdi
0x0000000000186a32 : in eax, dx ; jmp rdi
0x0000000000186a31 : in eax, dx ; jmp rdi
0x0000000000186a36 : in eax, dx ; jmp rdi
0x0000000000186a35 : in eax, dx ; jmp rdi
0x0000000000186a9e : in eax, dx ; jmp rdi
0x0000000000186aae : in eax, dx ; jmp rdi
0x0000000000186ab2 : in eax, dx ; jmp rdi
0x0000000000186ab1 : in eax, dx ; jmp rdi
0x0000000000186ab6 : in eax, dx ; jmp rdi
0x0000000000186ab5 : in eax, dx ; jmp rdi
0x00000000001a38b2 : in eax, dx ; jmp rsi
0x00000000001974ba : in eax, dx ; jmp rsp
0x00000000001974b9 : in eax, dx ; jmp rsp
0x00000000001974b8 : in eax, dx ; jmp rsp
0x00000000001974e2 : in eax, dx ; jmp rsp
0x0000000000197522 : in eax, dx ; jmp rsp
0x00000000001975ca : in eax, dx ; jmp rsp
0x0000000000197632 : in eax, dx ; jmp rsp
0x0000000000197812 : in eax, dx ; jmp rsp
0x0000000000197842 : in eax, dx ; jmp rsp
0x00000000001178e9 : in eax, dx ; jne 0x117901 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000017413f : in eax, dx ; jne 0x174121 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000186dba : in eax, dx ; lcall ptr [rbx - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186b52 : in eax, dx ; lcall ptr [rcx + rdi*4 + 0x6e16ffed] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186b3e : in eax, dx ; lcall ptr [rcx + rdi*4 - 0x46630013] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186bbe : in eax, dx ; lcall ptr [rcx + rdi*4 - 0x46630013] ; in eax, dx ; call qword ptr [rsi]
0x00000000001977aa : in eax, dx ; lcall ptr [rdi + rdi*4 - 0x44bc0000] ; in eax, dx ; call rsp
0x00000000001974da : in eax, dx ; lcall ptr [rdx + rbp*4 + 0x51740000] ; in eax, dx ; jmp rsp
0x00000000000aa382 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000186c76 : in eax, dx ; ljmp ptr [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000186c72 : in eax, dx ; ljmp ptr [rbx - 0x2e] ; in eax, dx ; ljmp ptr [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000186a26 : in eax, dx ; ljmp ptr [rdx] ; movsxd rbp, ebp ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x00000000000a9d49 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a9d5f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d81 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9d9f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9dbf : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9de5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9e01 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9e21 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e41 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9e67 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e89 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ea7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9ec7 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ee3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9f03 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9f23 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f43 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9f69 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9fb9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9c8f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cad : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9ccd : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9cef : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9d0f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9d2f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9bc5 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9bd7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9bed : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c05 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9c1b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a9c4b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9c57 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a9c6d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9bb1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000152e1a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e6a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eb0 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152ee8 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f26 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f4e : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f76 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f8e : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001557ea : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015583a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155880 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558b8 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558f6 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015591e : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155946 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015595e : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001581ba : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015820a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158250 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158288 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582c6 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582ee : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158316 : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015832e : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000aebd6 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xaebee
0x00000000000b14f7 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb150e
0x00000000000b3cae : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb3cce
0x000000000015b16a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b169 : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dc3a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dc39 : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016075a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160759 : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d9b44 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000149cd0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004876b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000017457a : in eax, dx ; pop rbx ; ret
0x00000000001978f2 : in eax, dx ; push qword ptr [rcx + rcx*8 - 0xfec0000] ; in eax, dx ; call rsp
0x00000000001975c2 : in eax, dx ; push qword ptr [rcx + rsi*4 - 0x7f9c0000] ; in eax, dx ; jmp rsp
0x0000000000186e1a : in eax, dx ; push qword ptr [rdx - 0x20] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186a2a : in eax, dx ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000186a9a : in eax, dx ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000186a96 : in eax, dx ; push qword ptr [rsi + rbp*2 - 0x13] ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x000000000019751a : in eax, dx ; push qword ptr [rsp + rbp*4 + 0x6b040000] ; in eax, dx ; jmp rsp
0x0000000000197722 : in eax, dx ; push qword ptr [rsp + rdi*4 - 0x506c0000] ; in eax, dx ; call rsp
0x0000000000186d5a : in eax, dx ; push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000071c02 : in eax, dx ; ret
0x000000000007af42 : in eax, dx ; ret
0x00000000000895d2 : in eax, dx ; ret
0x00000000000aa162 : in eax, dx ; ret
0x00000000000aa212 : in eax, dx ; ret
0x0000000000195521 : in eax, dx ; sti ; call rax
0x00000000000aa4d2 : in eax, dx ; sub rax, 1 ; ret
0x000000000009ec6a : in eax, dx ; xor eax, eax ; ret
0x00000000000aa608 : inc bl ; cmp dl, 1 ; jb 0xaa61a ; mov byte ptr [rdi], cl ; ret
0x000000000014db76 : inc bl ; jb 0x14db86 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e066 : inc bl ; jb 0x14e076 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e406 : inc bl ; jb 0x14e416 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008f311 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000046da3 : inc byte ptr [r11 - 0x6bf00220] ; ret 0x8341
0x000000000007b522 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x0000000000046da4 : inc byte ptr [rbx - 0x6bf00220] ; ret 0x8341
0x000000000002a696 : inc byte ptr [rbx] ; je 0x2a6a5 ; pop rbx ; ret
0x00000000000774f9 : inc byte ptr [rdx] ; je 0x7750f ; mov dword ptr [rdi], edx ; ret
0x000000000019522b : inc dword ptr [rax + 0x10fffbe5] ; fdivr st(3) ; call rax
0x00000000001955cb : inc dword ptr [rax + 0x10fffc35] ; sub ah, bh ; call rax
0x00000000001956db : inc dword ptr [rax + 0x14] ; cld ; call qword ptr [rax - 0x1f0003eb]
0x000000000019572f : inc dword ptr [rax + 0x1b] ; cld ; call qword ptr [rax - 0x1f0003e4]
0x00000000001956b3 : inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x000000000019561b : inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000195687 : inc dword ptr [rax + 0x32] ; cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019568b : inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019546f : inc dword ptr [rax + 0x40fffbff] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000194eeb : inc dword ptr [rax + 0x47] ; sti ; jmp qword ptr [rax]
0x0000000000195973 : inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019575b : inc dword ptr [rax + 0x61] ; cld ; call rax
0x0000000000194f3f : inc dword ptr [rax + 0x6c] ; sti ; call qword ptr [rax - 0x1f000493]
0x0000000000187baf : inc dword ptr [rax + 0x6d] ; int1 ; call rax
0x000000000019570f : inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x0000000000195473 : inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x000000000019543f : inc dword ptr [rax + 7] ; cld ; jmp qword ptr [rax]
0x0000000000194e33 : inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x00000000001982c3 : inc dword ptr [rax + rcx - 0x51bffff] ; out dx, eax ; call rsp
0x000000000019b19b : inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x0000000000195563 : inc dword ptr [rax - 0x11] ; sti ; call qword ptr [rax - 0x1f000410]
0x000000000019526b : inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000186daf : inc dword ptr [rax - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000195267 : inc dword ptr [rax - 0x1d] ; sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195297 : inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x0000000000195317 : inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x000000000019573f : inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x00000000001956eb : inc dword ptr [rax - 0x2f0003e7] ; sbb bh, ah ; jmp qword ptr [rax]
0x0000000000195573 : inc dword ptr [rax - 0x2f00040c] ; cmc ; sti ; jmp qword ptr [rax]
0x000000000019551f : inc dword ptr [rax - 0x2f000413] ; out dx, al ; sti ; jmp qword ptr [rax]
0x00000000001953a7 : inc dword ptr [rax - 0x2f000438] ; leave ; sti ; jmp qword ptr [rax]
0x0000000000195353 : inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000195353 : inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000194f0f : inc dword ptr [rax - 0x2f0004a4] ; pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000195383 : inc dword ptr [rax - 0x2f] ; sti ; call qword ptr [rax - 0x1f00042e]
0x0000000000195397 : inc dword ptr [rax - 0x3d] ; sti ; call qword ptr [rax - 0x1f00043c]
0x000000000004b9d5 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x0000000000187fd3 : inc dword ptr [rax - 0x4f000e00] ; add dl, dh ; jmp rax
0x0000000000187fd2 : inc dword ptr [rax - 0x4f000e00] ; add dl, dh ; jmp rax
0x000000000004dc96 : inc dword ptr [rax - 0x51743] ; jmp qword ptr [rax]
0x0000000000196357 : inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000019617f : inc dword ptr [rax - 0x57] ; cld ; call rax
0x00000000001950c3 : inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000018c193 : inc dword ptr [rax - 0x76] ; cli ; call rax
0x000000000018c19f : inc dword ptr [rax - 0x76] ; cli ; call rax
0x00000000000d1958 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000195e5f : inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195c87 : inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195667 : inc dword ptr [rax - 0x7f0003ce] ; xor al, 0xfc ; call qword ptr [rax]
0x0000000000195227 : inc dword ptr [rax - 0x7f00041d] ; in eax, 0xfb ; call qword ptr [rax]
0x000000000019548f : inc dword ptr [rax - 1] ; sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x0000000000194e23 : inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000001abb0d : inc dword ptr [rax] ; add al, ah ; ret
0x00000000001954f7 : inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000f9678 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000004c985 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005aef2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000061a3b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000006084d : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00000000000b64eb : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000b64eb : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000017282d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000016fa67 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000034efc : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000188013 : inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000188012 : inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000195493 : inc dword ptr [rax] ; add esp, edi ; jmp rax
0x000000000019570b : inc dword ptr [rax] ; and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x00000000001950b3 : inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x0000000000187e17 : inc dword ptr [rax] ; in al, dx ; int1 ; call qword ptr [rax]
0x0000000000187e07 : inc dword ptr [rax] ; in al, dx ; int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x0000000000187e57 : inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x000000000019657f : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00000000001895ab : inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x0000000000194e8b : inc dword ptr [rax] ; or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x0000000000119420 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000187e7b : inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187ecb : inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000195bbf : inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x00000000000ff2cc : inc dword ptr [rax] ; ret
0x00000000000ff2cb : inc dword ptr [rax] ; ret
0x00000000000ff327 : inc dword ptr [rax] ; ret
0x00000000000ff326 : inc dword ptr [rax] ; ret
0x00000000000ff33c : inc dword ptr [rax] ; ret
0x00000000000ff33b : inc dword ptr [rax] ; ret
0x00000000001193bb : inc dword ptr [rax] ; ret
0x0000000000194e7b : inc dword ptr [rax] ; sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000194ecb : inc dword ptr [rax] ; sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x0000000000187f7b : inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000194ef3 : inc dword ptr [rax] ; sti ; jmp rax
0x000000000019616f : inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195593 : inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195c77 : inc dword ptr [rax] ; test ah, bh ; call qword ptr [rax + 0x20fffc83]
0x000000000011d754 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011d93a : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x000000000019a6ab : inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x000000000019762b : inc dword ptr [rbp + rsi*4 - 0x6b4c0000] ; in eax, dx ; jmp rsp
0x0000000000186df3 : inc dword ptr [rbp - 0x1d] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000003a6f3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x000000000003a7c0 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x000000000003a6f3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x000000000003a7c0 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x0000000000063df9 : inc dword ptr [rbp - 0x76808b40] ; ret
0x00000000000684e8 : inc dword ptr [rbp - 0x76818b40] ; ret
0x00000000001219ff : inc dword ptr [rbp - 0x769b8740] ; ret
0x0000000000121dd1 : inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000063ad1 : inc dword ptr [rbp - 0x76cd8b40] ; ret
0x0000000000068ac4 : inc dword ptr [rbp - 0x76e38b40] ; ret
0x000000000011d7aa : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x00000000000600b8 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000ffd4f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000ffd9a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000050eb6 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x50f3b ; ret 0x8945
0x0000000000053b28 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x53bad ; ret
0x00000000000c59d2 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000c5a71 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000195dfb : inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x00000000000d7ac5 : inc dword ptr [rbx + rcx*4 + 0x73] ; sub al, 0x83 ; ret 0x4801
0x000000000005a2eb : inc dword ptr [rbx - 0x10b743] ; jmp qword ptr [rax]
0x000000000003338e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000122fff : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000003afba : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000d7ca3 : inc dword ptr [rbx] ; cmp byte ptr [rcx + 8], 2 ; jne 0xd7c89 ; jmp 0xd7c79
0x00000000000aacd8 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aabff : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000006588f : inc dword ptr [rcx + 0x80e2] ; add dh, dh ; ret
0x00000000000576c9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000124d84 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x0000000000067491 : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63705
0x00000000000edcd5 : inc dword ptr [rcx - 0x73] ; push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000b7e22 : inc dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000002b76c : inc dword ptr [rcx - 0x77] ; ret
0x00000000000d2268 : inc dword ptr [rcx - 0x77] ; ret
0x00000000000dbc3d : inc dword ptr [rcx - 0x77] ; ret 0x8b49
0x00000000000e3fba : inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x0000000000122b0a : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001745b9 : inc dword ptr [rcx] ; ja 0x1745c4 ; ret
0x00000000001bc5e6 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001bc480 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000000df074 : inc dword ptr [rcx] ; ret
0x00000000000d6f28 : inc dword ptr [rcx] ; ret 0x5589
0x00000000000dec7a : inc dword ptr [rcx] ; ret 0x8b49
0x00000000000c6580 : inc dword ptr [rdi + rcx + 0x49] ; ret
0x0000000000098f93 : inc dword ptr [rdi + rcx - 0x4a] ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000e0fa7 : inc dword ptr [rdi + rcx - 0x4a] ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000019b9db : inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x000000000019600b : inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x00000000000dc0e6 : inc dword ptr [rdi] ; jbe 0xdc0f9 ; mov eax, 0xc ; ret
0x0000000000195847 : inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001962f3 : inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000198d83 : inc dword ptr [rdx + rdx*2 + 0x7e40001] ; hlt ; call rsp
0x0000000000189067 : inc dword ptr [rdx - 0x24] ; jmp rcx
0x0000000000189066 : inc dword ptr [rdx - 0x24] ; jmp rcx
0x000000000019ae63 : inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x000000000019622b : inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x0000000000195d33 : inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x000000000019621b : inc dword ptr [rdx] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx + 0x22fffcac]
0x0000000000195837 : inc dword ptr [rdx] ; pop rsi ; cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195d23 : inc dword ptr [rdx] ; xchg ah, bh ; call qword ptr [rdx + 0x22fffc85]
0x000000000014b96d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000188f0b : inc dword ptr [rsi + 0x21fff3dc] ; fdiv st(3) ; jmp qword ptr [rdx]
0x0000000000188f0a : inc dword ptr [rsi + 0x21fff3dc] ; fdiv st(3) ; jmp qword ptr [rdx]
0x00000000001957a3 : inc dword ptr [rsi + 0x60] ; cld ; call rsi
0x0000000000187bcf : inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x000000000019accb : inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x00000000001961c7 : inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000189363 : inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x00000000001961b7 : inc dword ptr [rsi] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi + 0x26fffca9]
0x000000000018a807 : inc dword ptr [rsi] ; xor esi, 0xf67ce2ff ; jmp rax
0x000000000019afdb : inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x000000000018808f : inc eax ; add al, 0xf2 ; call rax
0x000000000018808e : inc eax ; add al, 0xf2 ; call rax
0x000000000018802b : inc eax ; add dh, dl ; jmp rax
0x000000000018802a : inc eax ; add dh, dl ; jmp rax
0x0000000000188007 : inc eax ; add edx, esi ; jmp rax
0x0000000000188006 : inc eax ; add edx, esi ; jmp rax
0x0000000000187f73 : inc eax ; cld ; int1 ; jmp rax
0x0000000000187e47 : inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e73 : inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187ebb : inc eax ; out dx, al ; int1 ; call rax
0x0000000000187bf7 : inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00000000001960cf : inc eax ; pop rcx ; cld ; jmp rax
0x00000000001891fb : inc eax ; push rcx ; hlt ; dec edx ; push rcx ; hlt ; call rsp
0x0000000000187fc3 : inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000034f19 : inc eax ; shr eax, 0x1f ; ret
0x0000000000195583 : inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000187f93 : inc eax ; std ; int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x000000000019552f : inc eax ; sti ; call qword ptr [rax]
0x000000000018b097 : inc eax ; sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x0000000000196377 : inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x000000000018935f : inc ebp ; push rdx ; hlt ; inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x000000000018a4f9 : inc ebx ; add dh, bh ; jmp rdi
0x0000000000140c7a : inc ebx ; mov eax, 0xffffffff ; ret
0x00000000000368cc : inc ebx ; nop ; mov eax, edx ; ret
0x0000000000074f5c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000172319 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000791c8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x000000000018919b : inc ebx ; push rax ; hlt ; dec ebp ; push rax ; hlt ; call rdi
0x00000000001892bf : inc ebx ; push rbx ; hlt ; dec ebp ; push rbx ; hlt ; call rdi
0x00000000001951eb : inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951e7 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951c7 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x0000000000195117 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x0000000000195137 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x00000000001951cb : inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019511b : inc ecx ; mov bh, 0xfd ; jmp rcx
0x000000000019513b : inc ecx ; mov bh, 0xfd ; jmp rcx
0x000000000019520b : inc ecx ; mov bh, 0xfd ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x000000000005cb56 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000fe5b9 : inc esi ; jmp qword ptr [r8]
0x0000000000198f83 : inc esp ; add word ptr [rax], ax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x0000000000196d9b : inc esp ; jle 0x196da7 ; add byte ptr [rbx + rdi*8 - 0x17], al ; jmp rsp
0x0000000000199253 : inc esp ; jne 0x199260 ; add byte ptr [rdx + rcx - 0xa], al ; jmp rsp
0x000000000019783b : inc esp ; ret 0
0x000000000019a0fb : inc esp ; ret 1
0x000000000019a4db : inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000000d6f27 : inc qword ptr [rcx] ; ret 0x5589
0x00000000001468e4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012de70 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001bb866 : insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001af9a4 : insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; call 0x221aeed2
0x0000000000034f9b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034fd5 : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000035008 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000350cc : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000004a21b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000351aa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000000f35c0 : insb byte ptr [rdi], dx ; and al, 8 ; call 0x1f8ad
0x0000000000035059 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000034f3a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001bb0a4 : insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001b0779 : insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0701 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0791 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b07c1 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b07d9 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b07f1 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001af3a4 : insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001745a4 : insb byte ptr [rdi], dx ; cmp esp, dword ptr [rip] ; add bl, dh ; ret
0x00000000001bafa4 : insb byte ptr [rdi], dx ; hlt ; add dword ptr [rax], eax ; js 0x1baf49 ; sti ; jmp qword ptr [rdx]
0x0000000000185e1e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000001a45a4 : insb byte ptr [rdi], dx ; mov al, byte ptr [rax] ; add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000001323b2 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00000000001323b1 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003670 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001ba1a4 : insb byte ptr [rdi], dx ; out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x0000000000197df9 : insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x00000000001b29a4 : insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a134 : insb byte ptr [rdi], dx ; ret
0x0000000000065d60 : insb byte ptr [rdi], dx ; ret 0
0x00000000000caaa8 : insb byte ptr [rdi], dx ; ret 0x2f
0x00000000001b59a4 : insb byte ptr [rdi], dx ; sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000000e3561 : insb byte ptr [rdi], dx ; shl rsi, 2 ; call 0x1f7f7
0x0000000000194f41 : insb byte ptr [rdi], dx ; sti ; call qword ptr [rax - 0x1f000493]
0x0000000000194f40 : insb byte ptr [rdi], dx ; sti ; call qword ptr [rax - 0x1f000493]
0x00000000001b64a4 : insb byte ptr [rdi], dx ; test eax, 0xe1f80001 ; sti ; call rsi
0x00000000001aeda4 : insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x0000000000149550 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009791f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000014a450 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006ce31 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000198c19 : insd dword ptr [rdi], dx ; call rsp
0x0000000000196145 : insd dword ptr [rdi], dx ; cld ; jmp rax
0x00000000001b0839 : insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001b0809 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x0000000000104ac7 : insd dword ptr [rdi], dx ; enter -0x1d18, -0x7a ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a4449 : insd dword ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000187bb1 : insd dword ptr [rdi], dx ; int1 ; call rax
0x0000000000187bb0 : insd dword ptr [rdi], dx ; int1 ; call rax
0x0000000000187bad : insd dword ptr [rdi], dx ; int1 ; inc dword ptr [rax + 0x6d] ; int1 ; call rax
0x00000000001a6661 : insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x0000000000185e1f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x00000000001841cd : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000194f45 : insd dword ptr [rdi], dx ; sti ; jmp rax
0x00000000001850df : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000fe102 : int 0x31
0x0000000000048613 : int 0x48
0x0000000000002c33 : int 0x80
0x00000000000d722b : int 0x80
0x00000000001852a7 : int 0x80
0x0000000000081aaf : int 0xb7
0x000000000013302f : int 0xc2
0x000000000010650f : int 0xc3
0x00000000000843cf : int 0xf
0x0000000000106e43 : int 0xf4
0x00000000000038ab : int 3
0x00000000000038ab : int 3
0x00000000001aac6d : int1 ; add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000000504c6 : int1 ; add eax, r8d ; ret
0x00000000000ba29a : int1 ; call 0x8f3b7
0x00000000000ba299 : int1 ; call 0x8f3b8
0x00000000001984da : int1 ; call qword ptr [rax + rbx + 1]
0x0000000000187fa6 : int1 ; call qword ptr [rax - 0x3f000e02]
0x0000000000187df2 : int1 ; call qword ptr [rax]
0x0000000000187e1a : int1 ; call qword ptr [rax]
0x0000000000187ece : int1 ; call qword ptr [rax]
0x0000000000187f9a : int1 ; call qword ptr [rax]
0x00000000001a9aca : int1 ; call qword ptr [rax]
0x00000000001a9ae2 : int1 ; call qword ptr [rax]
0x00000000001aa03a : int1 ; call qword ptr [rbx]
0x00000000001aa052 : int1 ; call qword ptr [rbx]
0x00000000001a940a : int1 ; call qword ptr [rcx]
0x00000000001a9a4a : int1 ; call qword ptr [rdx]
0x00000000001a91fa : int1 ; call qword ptr [rsi]
0x0000000000187bb2 : int1 ; call rax
0x0000000000187bfa : int1 ; call rax
0x0000000000187e02 : int1 ; call rax
0x0000000000187e4a : int1 ; call rax
0x0000000000187ebe : int1 ; call rax
0x000000000002185c : int1 ; call rbx
0x00000000001aa232 : int1 ; call rdi
0x00000000001aa58a : int1 ; call rsi
0x00000000001984e2 : int1 ; call rsp
0x00000000001984e1 : int1 ; call rsp
0x0000000000198552 : int1 ; call rsp
0x0000000000110b58 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000102acc : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102ad8 ; call rbx
0x0000000000102d7f : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102d8b ; call rbx
0x0000000000104917 : int1 ; dec dword ptr [rax - 0x75] ; jge 0x104923 ; call rbx
0x000000000010298a : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102a2b : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102ab1 : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102b6e : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102bf4 : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102c95 : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d64 : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001044fc : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104582 : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104624 : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001046aa : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104767 : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001047ed : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010488f : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d8d : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001046c5 : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000104909 : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102997 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1029a3 ; call rbx
0x0000000000102abe : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102aca ; call rbx
0x0000000000102c01 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102c0d ; call rbx
0x0000000000102d71 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102d7d ; call rbx
0x000000000010458f : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10459b ; call rbx
0x00000000001046b7 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1046c3 ; call rbx
0x00000000001047fa : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104806 ; call rbx
0x00000000001048fb : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104907 ; call rbx
0x000000000019869a : int1 ; dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi], al ; int1 ; jmp rsp
0x0000000000003a9f : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000187bae : int1 ; inc dword ptr [rax + 0x6d] ; int1 ; call rax
0x0000000000187e16 : int1 ; inc dword ptr [rax] ; in al, dx ; int1 ; call qword ptr [rax]
0x0000000000187e06 : int1 ; inc dword ptr [rax] ; in al, dx ; int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x0000000000187e56 : int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e7a : int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187eca : int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187f7a : int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000187bce : int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000187f72 : int1 ; inc eax ; cld ; int1 ; jmp rax
0x0000000000187e46 : int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e72 : int1 ; inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187eba : int1 ; inc eax ; out dx, al ; int1 ; call rax
0x0000000000187bf6 : int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187fc2 : int1 ; inc eax ; push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000187f92 : int1 ; inc eax ; std ; int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x000000000009ebdd : int1 ; je 0x9ebd4 ; ret
0x00000000000aa58b : int1 ; jl 0xaa5dc ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5ac : int1 ; jl 0xaa5fd ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5bf : int1 ; jl 0xaa610 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa694 : int1 ; jl 0xaa6e5 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa6ec : int1 ; jl 0xaa73d ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000aa789 : int1 ; jl 0xaa7da ; adc dword ptr [rsi + 7], edx ; ret
0x000000000005c46b : int1 ; jmp 0x5c432
0x000000000005c46a : int1 ; jmp 0x5c433
0x0000000000187dfe : int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000187de6 : int1 ; jmp qword ptr [rax - 0x3f000e16]
0x0000000000187dc6 : int1 ; jmp qword ptr [rax - 0x3f000e17]
0x0000000000187da6 : int1 ; jmp qword ptr [rax - 0x3f000e18]
0x0000000000187d96 : int1 ; jmp qword ptr [rax]
0x0000000000187db6 : int1 ; jmp qword ptr [rax]
0x0000000000187dd6 : int1 ; jmp qword ptr [rax]
0x0000000000187e1e : int1 ; jmp qword ptr [rax]
0x0000000000187e5a : int1 ; jmp qword ptr [rax]
0x0000000000187e7e : int1 ; jmp qword ptr [rax]
0x0000000000187ed2 : int1 ; jmp qword ptr [rax]
0x0000000000187f7e : int1 ; jmp qword ptr [rax]
0x0000000000187fca : int1 ; jmp qword ptr [rax]
0x00000000001a9472 : int1 ; jmp qword ptr [rax]
0x00000000001a9471 : int1 ; jmp qword ptr [rax]
0x00000000001a90ea : int1 ; jmp qword ptr [rcx]
0x00000000001a938a : int1 ; jmp qword ptr [rcx]
0x00000000001a9502 : int1 ; jmp qword ptr [rcx]
0x00000000001a9952 : int1 ; jmp qword ptr [rcx]
0x00000000001a996a : int1 ; jmp qword ptr [rcx]
0x00000000001aa00a : int1 ; jmp qword ptr [rdi]
0x00000000001aa10a : int1 ; jmp qword ptr [rdi]
0x0000000000187dae : int1 ; jmp rax
0x0000000000187dce : int1 ; jmp rax
0x0000000000187dee : int1 ; jmp rax
0x0000000000187e0e : int1 ; jmp rax
0x0000000000187e4e : int1 ; jmp rax
0x0000000000187e76 : int1 ; jmp rax
0x0000000000187ec2 : int1 ; jmp rax
0x0000000000187f76 : int1 ; jmp rax
0x0000000000187fae : int1 ; jmp rax
0x0000000000187dee : int1 ; jmp rax
0x00000000000aac95 : int1 ; jmp rcx
0x00000000001a9322 : int1 ; jmp rcx
0x00000000001aa2fa : int1 ; jmp rcx
0x00000000001a9652 : int1 ; jmp rdi
0x0000000000187bd2 : int1 ; jmp rsp
0x000000000019862a : int1 ; jmp rsp
0x00000000001986a2 : int1 ; jmp rsp
0x000000000015ab5b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d62b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016014b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001535df : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001535de : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153627 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153626 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153665 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153664 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015369d : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015369c : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001536db : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001536da : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153713 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153712 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015373b : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015373a : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153763 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153762 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015377b : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015377a : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155faf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155fae : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ff7 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ff6 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156035 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156034 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015606d : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015606c : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560ab : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560aa : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560e3 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560e2 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015610b : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015610a : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156133 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156132 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015614b : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015614a : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015897f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015897e : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001589c7 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001589c6 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a05 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a04 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a3d : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a3c : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a7b : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a7a : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158ab3 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158ab2 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158adb : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158ada : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b03 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b02 : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b1b : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b1a : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012e7ca : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012a2ae : int1 ; mov rdi, r13 ; call r12
0x000000000012a31e : int1 ; mov rdi, r13 ; call r12
0x0000000000171df3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000171df2 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001bc580 : int1 ; or byte ptr [rbx], al ; ret
0x00000000000aacdb : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000aacf4 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000009751e : int1 ; pop rbx ; pop rbp ; ret
0x0000000000187dfa : int1 ; push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000187eb6 : int1 ; push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187e42 : int1 ; push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000187bf2 : int1 ; push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187e0a : int1 ; push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x0000000000187bca : int1 ; push qword ptr [rsi + rbp*2] ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000187e52 : int1 ; push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187ec6 : int1 ; push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187fc6 : int1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000187f96 : int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x000000000000260b : int1 ; ret
0x000000000004d34a : int1 ; ret
0x00000000000ac60e : int1 ; ret
0x00000000001857f6 : int1 ; ret 0x5803
0x00000000000e35b3 : int1 ; ret 0xfff3
0x00000000000b194b : int1 ; ret 0xfff7
0x00000000001b5fd9 : int1 ; sti ; call rcx
0x000000000019552d : int1 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000171df7 : int1 ; sub eax, edx ; ret
0x00000000000481cd : int1 ; xor eax, eax ; pop rbx ; ret
0x0000000000097386 : int1 ; xor eax, eax ; pop rbx ; ret
0x000000000009742e : int1 ; xor eax, eax ; ret
0x00000000001149ce : int1 ; xor eax, eax ; ret
0x00000000001979e5 : iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x0000000000102989 : iretd ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102996 : iretd ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1029a4 ; call rbx
0x0000000000188aa0 : iretd ; lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000089269 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000188c84 : iretd ; test eax, 0xbbfdfff3 ; jmp rax
0x00000000001056c4 : ja 0x1056d3 ; ret
0x0000000000107384 : ja 0x107393 ; ret
0x00000000001075c6 : ja 0x1075d2 ; ret
0x0000000000107678 : ja 0x107683 ; ret
0x00000000001076b2 : ja 0x1076c3 ; ret
0x0000000000108263 : ja 0x108272 ; ret
0x00000000001083e3 : ja 0x1083f2 ; ret
0x000000000010887d : ja 0x108882 ; ret
0x000000000010891f : ja 0x10892a ; ret
0x00000000001089cf : ja 0x1089da ; ret
0x0000000000115830 : ja 0x11583b ; ret
0x00000000001158b5 : ja 0x11588c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001158dd : ja 0x1158fd ; ret
0x00000000001175a2 : ja 0x1175b3 ; ret
0x0000000000117652 : ja 0x117663 ; ret
0x0000000000119097 : ja 0x1190aa ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000123c13 : ja 0x123c18 ; ret
0x0000000000123f40 : ja 0x123f2b ; mov eax, 0xffffffff ; ret
0x0000000000123fe9 : ja 0x124000 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012b791 : ja 0x12b7e4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012e7ed : ja 0x12e7de ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013bde7 : ja 0x13be03 ; ret
0x000000000013bf5f : ja 0x13bf82 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013c1e0 : ja 0x13c210 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001745bb : ja 0x1745c2 ; ret
0x0000000000185864 : ja 0x1857eb ; ret 0x48f
0x00000000001888c1 : ja 0x1888bc ; call qword ptr [rdx - 0x1b000c89]
0x00000000001888c5 : ja 0x1888bc ; jmp rsp
0x0000000000194f5d : ja 0x194f5c ; call qword ptr [rax]
0x0000000000195e91 : ja 0x195e91 ; call rax
0x000000000019600d : ja 0x19600d ; call rsp
0x0000000000196009 : ja 0x19600d ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x000000000019600c : ja 0x19600e ; call rsp
0x00000000001960c9 : ja 0x1960c9 ; jmp qword ptr [rax]
0x00000000001960cd : ja 0x1960d1 ; inc eax ; pop rcx ; cld ; jmp rax
0x00000000001969d1 : ja 0x1969be ; call rsp
0x0000000000196be5 : ja 0x196bed ; add byte ptr [rbp - 0x17], al ; call rsp
0x000000000019b9a9 : ja 0x19b9aa ; call rsp
0x000000000002daad : ja 0x2dac8 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000003542e : ja 0x35453 ; ret
0x0000000000035736 : ja 0x35743 ; ret
0x00000000000357a2 : ja 0x357b3 ; ret
0x00000000000357ec : ja 0x357f2 ; ret
0x00000000000038ea : ja 0x394c ; clc ; salc ; jb 0x3972 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000048a8e : ja 0x48ae0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000504b7 : ja 0x5049e ; mov eax, r8d ; ret
0x000000000006182c : ja 0x617b9 ; ret 0x348
0x0000000000062b53 : ja 0x62ae0 ; ret 0x348
0x0000000000069c78 : ja 0x69c05 ; ret 0x348
0x0000000000073026 : ja 0x73033 ; ret
0x0000000000077c88 : ja 0x77ca1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f272 : ja 0x8f283 ; ret
0x0000000000094478 : ja 0x94472 ; ret 0x7401
0x0000000000096e3d : ja 0x96e1f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f85c : ja 0x9f875 ; mov rax, rdi ; ret
0x000000000009ffe3 : ja 0x9ffe7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0736 : ja 0xa073a ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0e83 : ja 0xa0e87 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a5d57 : ja 0xa5d5d ; ret
0x00000000000a5d73 : ja 0xa5d7d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5db4 : ja 0xa5dc3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e39 : ja 0xa5e4d ; ret
0x00000000000a5e8f : ja 0xa5ea7 ; ret
0x00000000000a5f11 : ja 0xa5f2d ; ret
0x00000000000a7357 : ja 0xa7361 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a7373 : ja 0xa7381 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73c4 : ja 0xa73d7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a74a9 : ja 0xa74c1 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a751f : ja 0xa753b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a75a1 : ja 0xa75c1 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a8e37 : ja 0xa8e3d ; ret
0x00000000000a8e53 : ja 0xa8e5d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8e94 : ja 0xa8ea3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8f19 : ja 0xa8f2d ; ret
0x00000000000a8f6f : ja 0xa8f87 ; ret
0x00000000000a8ff1 : ja 0xa900d ; ret
0x00000000000a9907 : ja 0xa990d ; ret
0x00000000000a9923 : ja 0xa992d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a9964 : ja 0xa9973 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a99e9 : ja 0xa99fd ; ret
0x00000000000a9a3f : ja 0xa9a57 ; ret
0x00000000000a9ac1 : ja 0xa9add ; ret
0x00000000000aaf89 : ja 0xaafa9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000ac822 : ja 0xac832 ; cmove rax, rcx ; ret
0x00000000000acc1c : ja 0xacc2c ; mov eax, edi ; ret
0x00000000000bc43d : ja 0xbc44b ; ret
0x00000000000c83dd : ja 0xc83eb ; pop rbx ; ret
0x00000000000c9657 : ja 0xc9662 ; ret
0x00000000000cbfe6 : ja 0xcbff2 ; ret
0x00000000000cc080 : ja 0xcc08a ; ret
0x00000000000cc171 : ja 0xcc17a ; ret
0x00000000000cd2c9 : ja 0xcd2d2 ; ret
0x00000000000cd339 : ja 0xcd342 ; ret
0x00000000000cd58d : ja 0xcd592 ; ret
0x00000000000cd60d : ja 0xcd612 ; ret
0x00000000000d8e3e : ja 0xd8e57 ; mov eax, 2 ; ret
0x00000000000f5f71 : ja 0xf5f7b ; xor eax, eax ; ret
0x00000000000f6a0e : ja 0xf69a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6a42 : ja 0xf6a33 ; ret
0x00000000000f6beb : ja 0xf6bf3 ; ret
0x00000000000f6c3a : ja 0xf6c43 ; ret
0x00000000000f6c8b : ja 0xf6c93 ; ret
0x00000000000f6ce3 : ja 0xf6cf3 ; ret
0x00000000000f6d47 : ja 0xf6d53 ; ret
0x00000000000f6da0 : ja 0xf6dab ; ret
0x00000000000f6f7f : ja 0xf6f8b ; ret
0x00000000000f7649 : ja 0xf7683 ; ret
0x00000000000f76ed : ja 0xf7737 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fb5a3 : ja 0xfb5b8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000fbad8 : ja 0xfbae3 ; ret
0x00000000000fbb2c : ja 0xfbb33 ; ret
0x00000000000fc280 : ja 0xfc28a ; ret
0x00000000000fc363 : ja 0xfc36f ; ret
0x00000000000fc3b9 : ja 0xfc3c5 ; ret
0x00000000000fc7a4 : ja 0xfc7b2 ; ret
0x00000000000fce33 : ja 0xfce63 ; ret
0x00000000000fd050 : ja 0xfd05a ; ret
0x00000000000fd100 : ja 0xfd10a ; ret
0x00000000000fd1ab : ja 0xfd1b2 ; ret
0x00000000000fd21b : ja 0xfd222 ; ret
0x00000000000fd29c : ja 0xfd2a2 ; ret
0x00000000000fd34c : ja 0xfd352 ; ret
0x00000000000fd89c : ja 0xfd8a3 ; ret
0x00000000000fefbd : ja 0xfefcb ; ret
0x00000000000ff051 : ja 0xff05b ; ret
0x00000000000ff0f1 : ja 0xff0fb ; ret
0x00000000000ff145 : ja 0xff153 ; ret
0x00000000000ff229 : ja 0xff235 ; ret
0x00000000000022df : ja 0xffffffffd6104b6b ; ret
0x00000000001014df : jae 0x1014e4 ; ret
0x000000000010174d : jae 0x101752 ; ret
0x000000000010177d : jae 0x101782 ; ret
0x00000000001017b6 : jae 0x1017eb ; ret
0x00000000001017e6 : jae 0x1017eb ; ret
0x000000000010180d : jae 0x101812 ; ret
0x000000000010183d : jae 0x101842 ; ret
0x0000000000101870 : jae 0x101875 ; ret
0x000000000010189d : jae 0x1018a2 ; ret
0x00000000001018cd : jae 0x1018d2 ; ret
0x00000000001018fd : jae 0x101902 ; ret
0x000000000010192d : jae 0x101932 ; ret
0x0000000000105ff0 : jae 0x105ff5 ; ret
0x000000000010601d : jae 0x106022 ; ret
0x000000000010604d : jae 0x106052 ; ret
0x0000000000106080 : jae 0x106085 ; ret
0x00000000001060b0 : jae 0x1060b5 ; ret
0x00000000001060dd : jae 0x1060e2 ; ret
0x0000000000106110 : jae 0x106115 ; ret
0x000000000010613d : jae 0x106142 ; ret
0x000000000010616d : jae 0x106172 ; ret
0x00000000001061a0 : jae 0x1061a5 ; ret
0x00000000001061cd : jae 0x1061d2 ; ret
0x0000000000106200 : jae 0x106205 ; ret
0x00000000001072ed : jae 0x1072f2 ; ret
0x000000000010731d : jae 0x107322 ; ret
0x000000000010744d : jae 0x107452 ; ret
0x000000000010748d : jae 0x107492 ; ret
0x00000000001074bd : jae 0x1074c2 ; ret
0x00000000001074ed : jae 0x1074f2 ; ret
0x000000000010751d : jae 0x107522 ; ret
0x0000000000107740 : jae 0x107745 ; ret
0x000000000010776d : jae 0x107772 ; ret
0x000000000010779d : jae 0x1077a2 ; ret
0x00000000001077cd : jae 0x1077d2 ; ret
0x0000000000107810 : jae 0x107815 ; ret
0x000000000010783d : jae 0x107842 ; ret
0x000000000010786d : jae 0x107872 ; ret
0x000000000010789d : jae 0x1078a2 ; ret
0x00000000001078cd : jae 0x1078d2 ; ret
0x00000000001078fd : jae 0x107902 ; ret
0x000000000010792d : jae 0x107932 ; ret
0x000000000010795d : jae 0x107962 ; ret
0x000000000010798d : jae 0x107992 ; ret
0x00000000001079c0 : jae 0x1079c5 ; ret
0x00000000001079f9 : jae 0x107a31 ; ret
0x0000000000107a2c : jae 0x107a31 ; ret
0x0000000000107a4d : jae 0x107a52 ; ret
0x0000000000107a80 : jae 0x107a85 ; ret
0x0000000000107a80 : jae 0x107a8a ; ret
0x0000000000107aad : jae 0x107ab2 ; ret
0x0000000000107aad : jae 0x107ab7 ; ret
0x0000000000107add : jae 0x107ae2 ; ret
0x0000000000107add : jae 0x107ae7 ; ret
0x0000000000107b0d : jae 0x107b12 ; ret
0x0000000000107b0d : jae 0x107b17 ; ret
0x0000000000107b3d : jae 0x107b42 ; ret
0x0000000000107b3d : jae 0x107b47 ; ret
0x0000000000107b6d : jae 0x107b72 ; ret
0x0000000000107b6d : jae 0x107b77 ; ret
0x0000000000107ba0 : jae 0x107ba5 ; ret
0x0000000000107bd0 : jae 0x107bd5 ; ret
0x0000000000107bfd : jae 0x107c02 ; ret
0x0000000000107c2d : jae 0x107c32 ; ret
0x0000000000107c60 : jae 0x107c65 ; ret
0x0000000000107c90 : jae 0x107c95 ; ret
0x0000000000107cc0 : jae 0x107cc5 ; ret
0x0000000000107cf9 : jae 0x107d31 ; ret
0x0000000000107d2c : jae 0x107d31 ; ret
0x0000000000107d4d : jae 0x107d52 ; ret
0x0000000000107d89 : jae 0x107dc1 ; ret
0x0000000000107dbc : jae 0x107dc1 ; ret
0x0000000000107ddd : jae 0x107de2 ; ret
0x0000000000107e0d : jae 0x107e12 ; ret
0x0000000000107e49 : jae 0x107e81 ; ret
0x0000000000107e7c : jae 0x107e81 ; ret
0x0000000000107e9d : jae 0x107ea2 ; ret
0x0000000000107ed0 : jae 0x107ed5 ; ret
0x0000000000107efd : jae 0x107f02 ; ret
0x0000000000107f2d : jae 0x107f32 ; ret
0x0000000000107f60 : jae 0x107f65 ; ret
0x0000000000107f96 : jae 0x107fcb ; ret
0x0000000000107fc6 : jae 0x107fcb ; ret
0x0000000000107fed : jae 0x107ff2 ; ret
0x0000000000108020 : jae 0x108025 ; ret
0x0000000000108050 : jae 0x108055 ; ret
0x00000000001080a6 : jae 0x1080db ; ret
0x00000000001080d6 : jae 0x1080db ; ret
0x00000000001080fd : jae 0x108102 ; ret
0x0000000000108136 : jae 0x10816b ; ret
0x0000000000108166 : jae 0x10816b ; ret
0x000000000010818d : jae 0x108192 ; ret
0x00000000001081bd : jae 0x1081c2 ; ret
0x00000000001081f0 : jae 0x1081f5 ; ret
0x000000000010821d : jae 0x108222 ; ret
0x0000000000108319 : jae 0x108351 ; ret
0x000000000010834c : jae 0x108351 ; ret
0x0000000000108376 : jae 0x1083ab ; ret
0x00000000001083a6 : jae 0x1083ab ; ret
0x0000000000108496 : jae 0x1084cb ; ret
0x00000000001084c6 : jae 0x1084cb ; ret
0x00000000001084f9 : jae 0x108531 ; ret
0x000000000010852c : jae 0x108531 ; ret
0x0000000000108550 : jae 0x108555 ; ret
0x000000000010857d : jae 0x108582 ; ret
0x00000000001085ad : jae 0x1085b2 ; ret
0x00000000001085e0 : jae 0x1085e5 ; ret
0x0000000000108b39 : jae 0x108b71 ; ret
0x0000000000108b6c : jae 0x108b71 ; ret
0x0000000000108b99 : jae 0x108bd1 ; ret
0x0000000000108bcc : jae 0x108bd1 ; ret
0x0000000000108bed : jae 0x108bf2 ; ret
0x0000000000108c1d : jae 0x108c22 ; ret
0x0000000000108c4d : jae 0x108c52 ; ret
0x0000000000108c7d : jae 0x108c82 ; ret
0x0000000000108cb0 : jae 0x108cb5 ; ret
0x0000000000108ce0 : jae 0x108ce5 ; ret
0x0000000000108d0d : jae 0x108d12 ; ret
0x0000000000108d3d : jae 0x108d42 ; ret
0x0000000000108d6d : jae 0x108d72 ; ret
0x0000000000108d9d : jae 0x108da2 ; ret
0x000000000010f46c : jae 0x10f497 ; cmp byte ptr [rax], dil ; je 0x10f4a1 ; mov rdx, rax ; jmp 0x10f48e
0x000000000010f777 : jae 0x10f79e ; cmp byte ptr [r8], r9b ; je 0x10f7a5 ; mov rdx, r8 ; jmp 0x10f795
0x000000000013bec5 : jae 0x13bed4 ; xor eax, eax ; ret
0x000000000013bf05 : jae 0x13bf14 ; xor eax, eax ; ret
0x00000000001406a0 : jae 0x1406a5 ; ret
0x00000000001406f0 : jae 0x1406f5 ; ret
0x00000000001434f4 : jae 0x1434d7 ; mov eax, 1 ; ret
0x000000000017437c : jae 0x17438b ; call qword ptr [rbx]
0x000000000017437c : jae 0x17438f ; call qword ptr [rbx]
0x0000000000175137 : jae 0x175154 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000183e22 : jae 0x183e04 ; jo 0x183ea0 ; mov ebp, 0xfb67d10d ; ret
0x0000000000184cbe : jae 0x184c99 ; push rsi ; pop rdx ; je 0x184c8e ; ret 0xacfc
0x0000000000194f51 : jae 0x194f54 ; call qword ptr [rax + 0x10fffb74]
0x0000000000196941 : jae 0x19692e ; jmp rsp
0x00000000001991bd : jae 0x1991c6 ; add byte ptr [rbp + rax - 0xa], dl ; call rsp
0x000000000019b8c9 : jae 0x19b8c8 ; call rsp
0x00000000001a1469 : jae 0x1a1481 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1db5 : jae 0x1a1dcd ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a2677 : jae 0x1a2685 ; ret
0x00000000001a4619 : jae 0x1a460a ; call qword ptr [rcx]
0x00000000001a6729 : jae 0x1a671b ; jmp qword ptr [rdx]
0x00000000001a7591 : jae 0x1a7584 ; call rax
0x00000000001b0d59 : jae 0x1b0d52 ; call qword ptr [rsi]
0x00000000001b0d89 : jae 0x1b0d82 ; jmp qword ptr [rcx]
0x00000000001b0db9 : jae 0x1b0db2 ; jmp qword ptr [rcx]
0x00000000001b0dd1 : jae 0x1b0dca ; jmp qword ptr [rcx]
0x00000000001bc121 : jae 0x1bc11d ; call qword ptr [rdi]
0x000000000002cb2a : jae 0x2cb46 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000003576d : jae 0x35772 ; ret
0x0000000000035e2d : jae 0x35e32 ; ret
0x0000000000047b27 : jae 0x47b30 ; xor eax, eax ; ret
0x0000000000047b27 : jae 0x47b35 ; xor eax, eax ; ret
0x000000000006984c : jae 0x697d9 ; ret 0x348
0x000000000006b36d : jae 0x6b372 ; ret
0x000000000006b3a0 : jae 0x6b3a5 ; ret
0x0000000000079618 : jae 0x79625 ; movzx eax, byte ptr [rax] ; ret
0x000000000007b2d3 : jae 0x7b287 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007cc4b : jae 0x7cc75 ; movzx eax, byte ptr [rax] ; ret
0x000000000008964e : jae 0x8965e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc51d : jae 0xbc522 ; ret
0x00000000000bf60d : jae 0xbf612 ; ret
0x00000000000bf63d : jae 0xbf642 ; ret
0x00000000000cbf3d : jae 0xcbf42 ; ret
0x00000000000cc130 : jae 0xcc135 ; ret
0x00000000000cc20d : jae 0xcc212 ; ret
0x00000000000cc296 : jae 0xcc2cb ; ret
0x00000000000cc2c6 : jae 0xcc2cb ; ret
0x00000000000cc2f6 : jae 0xcc32b ; ret
0x00000000000cc326 : jae 0xcc32b ; ret
0x00000000000cc6f7 : jae 0xcc6fc ; ret
0x00000000000cc77d : jae 0xcc782 ; ret
0x00000000000cd28d : jae 0xcd292 ; ret
0x00000000000cd42d : jae 0xcd432 ; ret
0x00000000000cd45d : jae 0xcd462 ; ret
0x00000000000cd4bd : jae 0xcd4c2 ; ret
0x00000000000cd4ed : jae 0xcd4f2 ; ret
0x00000000000cd51d : jae 0xcd522 ; ret
0x00000000000cd54d : jae 0xcd552 ; ret
0x00000000000e0d0a : jae 0xe0f56 ; movdqa xmm0, xmm2 ; jmp 0xe0cfc
0x00000000000ea76d : jae 0xea772 ; ret
0x00000000000ea79d : jae 0xea7a2 ; ret
0x00000000000ea7cd : jae 0xea7d2 ; ret
0x00000000000ea7fd : jae 0xea802 ; ret
0x00000000000ea82d : jae 0xea832 ; ret
0x00000000000ea85d : jae 0xea862 ; ret
0x00000000000ea88d : jae 0xea892 ; ret
0x00000000000ea8bd : jae 0xea8c2 ; ret
0x00000000000f3fd9 : jae 0xf3fe2 ; add byte ptr [rax], al ; call 0x2027f
0x00000000000f5a79 : jae 0xf5ab1 ; ret
0x00000000000f5aac : jae 0xf5ab1 ; ret
0x00000000000f5aac : jae 0xf5ab5 ; ret
0x00000000000f5ad9 : jae 0xf5b11 ; ret
0x00000000000f5b0c : jae 0xf5b11 ; ret
0x00000000000f6b4d : jae 0xf6b52 ; ret
0x00000000000f6ded : jae 0xf6df2 ; ret
0x00000000000f6e1d : jae 0xf6e22 ; ret
0x00000000000f6eed : jae 0xf6ef2 ; ret
0x00000000000f6f1d : jae 0xf6f22 ; ret
0x00000000000f6fdd : jae 0xf6fe2 ; ret
0x00000000000f700d : jae 0xf7012 ; ret
0x00000000000f7046 : jae 0xf707b ; ret
0x00000000000f7076 : jae 0xf707b ; ret
0x00000000000f7266 : jae 0xf729b ; ret
0x00000000000f7296 : jae 0xf729b ; ret
0x00000000000f72c6 : jae 0xf72fb ; ret
0x00000000000f72f6 : jae 0xf72fb ; ret
0x00000000000f731d : jae 0xf7322 ; ret
0x00000000000f77ad : jae 0xf77b2 ; ret
0x00000000000f78f6 : jae 0xf792b ; ret
0x00000000000f7926 : jae 0xf792b ; ret
0x00000000000f794d : jae 0xf7952 ; ret
0x00000000000f797d : jae 0xf7982 ; ret
0x00000000000f79ad : jae 0xf79b2 ; ret
0x00000000000f79dd : jae 0xf79e2 ; ret
0x00000000000f7a0d : jae 0xf7a12 ; ret
0x00000000000f7a46 : jae 0xf7a7b ; ret
0x00000000000f7a76 : jae 0xf7a7b ; ret
0x00000000000f7a76 : jae 0xf7a80 ; ret
0x00000000000f7a9d : jae 0xf7aa2 ; ret
0x00000000000f7a9d : jae 0xf7aa7 ; ret
0x00000000000f7acd : jae 0xf7ad2 ; ret
0x00000000000f7acd : jae 0xf7ad7 ; ret
0x00000000000f830d : jae 0xf8312 ; ret
0x00000000000f833d : jae 0xf8342 ; ret
0x00000000000f836d : jae 0xf8372 ; ret
0x00000000000f83a0 : jae 0xf83a5 ; ret
0x00000000000f897d : jae 0xf8982 ; ret
0x00000000000f89b0 : jae 0xf89b5 ; ret
0x00000000000f89dd : jae 0xf89e2 ; ret
0x00000000000f8a0d : jae 0xf8a12 ; ret
0x00000000000f8a3d : jae 0xf8a42 ; ret
0x00000000000f8a70 : jae 0xf8a75 ; ret
0x00000000000f8a9d : jae 0xf8aa2 ; ret
0x00000000000f8acd : jae 0xf8ad2 ; ret
0x00000000000f8afd : jae 0xf8b02 ; ret
0x00000000000fb736 : jae 0xfb76b ; ret
0x00000000000fb766 : jae 0xfb76b ; ret
0x00000000000fb7c4 : jae 0xfb817 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fbaa0 : jae 0xfbaa5 ; ret
0x00000000000fc219 : jae 0xfc251 ; ret
0x00000000000fc24c : jae 0xfc251 ; ret
0x00000000000fc96d : jae 0xfc972 ; ret
0x00000000000fc99d : jae 0xfc9a2 ; ret
0x00000000000fc9cd : jae 0xfc9d2 ; ret
0x00000000000fcd6d : jae 0xfcd72 ; ret
0x00000000000fcf4d : jae 0xfcf52 ; ret
0x00000000000fcf86 : jae 0xfcfbb ; ret
0x00000000000fcfb6 : jae 0xfcfbb ; ret
0x00000000000fcfe6 : jae 0xfd01b ; ret
0x00000000000fd016 : jae 0xfd01b ; ret
0x00000000000fd4dd : jae 0xfd4e2 ; ret
0x00000000000fd57d : jae 0xfd582 ; ret
0x00000000000fd5b9 : jae 0xfd5f1 ; ret
0x00000000000fd5ec : jae 0xfd5f1 ; ret
0x00000000000fd70d : jae 0xfd712 ; ret
0x00000000000fd73d : jae 0xfd742 ; ret
0x00000000000fd776 : jae 0xfd7ab ; ret
0x00000000000fd7a6 : jae 0xfd7ab ; ret
0x00000000000fd7cd : jae 0xfd7d2 ; ret
0x00000000000fd806 : jae 0xfd83b ; ret
0x00000000000fd836 : jae 0xfd83b ; ret
0x00000000000fd85d : jae 0xfd862 ; ret
0x00000000000fdbcd : jae 0xfdbd2 ; ret
0x00000000000fdbfd : jae 0xfdc02 ; ret
0x00000000000fdc2d : jae 0xfdc32 ; ret
0x00000000000ff17d : jae 0xff182 ; ret
0x00000000000ff1ad : jae 0xff1b2 ; ret
0x00000000000ffe1b : jae 0xffe4f ; add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000122645 : jae 0xffffffff835a2812 ; ret 0x3904
0x000000000010e9cb : jb 0x10e9df ; mov eax, 1 ; ret
0x00000000001149cd : jb 0x1149c4 ; xor eax, eax ; ret
0x0000000000123ec8 : jb 0x123ebb ; mov eax, 0xffffffff ; ret
0x000000000012e7f1 : jb 0x12e815 ; ret
0x000000000012e7eb : jb 0x12e81d ; ja 0x12e7e0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014da71 : jb 0x14da5a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014dad4 : jb 0x14dabd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014db78 : jb 0x14db84 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014df61 : jb 0x14df4a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014dfc4 : jb 0x14dfad ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014e068 : jb 0x14e074 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e304 : jb 0x14e2ed ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014e364 : jb 0x14e34d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014e408 : jb 0x14e414 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001515ea : jb 0x1515fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015173a : jb 0x15174a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015188a : jb 0x15189a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519da : jb 0x1519ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b2a : jb 0x151b3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c7a : jb 0x151c8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dca : jb 0x151dda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f1a : jb 0x151f2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015206a : jb 0x15207a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001521ba : jb 0x1521ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015230a : jb 0x15231a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015245a : jb 0x15246a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001525aa : jb 0x1525ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001526fa : jb 0x15270a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015284a : jb 0x15285a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fba : jb 0x153fca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015410a : jb 0x15411a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015425a : jb 0x15426a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543aa : jb 0x1543ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544fa : jb 0x15450a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015464a : jb 0x15465a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015479a : jb 0x1547aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548ea : jb 0x1548fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a3a : jb 0x154a4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b8a : jb 0x154b9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cda : jb 0x154cea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e2a : jb 0x154e3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f7a : jb 0x154f8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001550ca : jb 0x1550da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015521a : jb 0x15522a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015698a : jb 0x15699a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ada : jb 0x156aea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c2a : jb 0x156c3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d7a : jb 0x156d8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156eca : jb 0x156eda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015701a : jb 0x15702a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015716a : jb 0x15717a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572ba : jb 0x1572ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015740a : jb 0x15741a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015755a : jb 0x15756a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001576aa : jb 0x1576ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577fa : jb 0x15780a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015794a : jb 0x15795a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157a9a : jb 0x157aaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157bea : jb 0x157bfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000172a67 : jb 0x172a77 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000172a73 : jb 0x172a89 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000172a83 : jb 0x172a8b ; mov byte ptr [rdi], cl ; ret
0x00000000001743ab : jb 0x1743a1 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000175149 : jb 0x175148 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000186e1c : jb 0x186e01 ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000196210 : jb 0x1961bc ; cld ; jmp rdx
0x000000000019e011 : jb 0x19dffe ; jmp qword ptr [rsi]
0x00000000001b0c81 : jb 0x1b0c7a ; jmp qword ptr [rcx]
0x00000000001b0cb1 : jb 0x1b0caa ; jmp qword ptr [rcx]
0x00000000001b0cb0 : jb 0x1b0cab ; jmp qword ptr [rcx]
0x00000000001b0cc9 : jb 0x1b0cc2 ; jmp qword ptr [rcx]
0x00000000001b0d11 : jb 0x1b0d0a ; jmp qword ptr [rcx]
0x00000000001b69c6 : jb 0x1b69d4 ; ret
0x00000000001b69c6 : jb 0x1b69da ; ret
0x0000000000002b80 : jb 0x2b20 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002da7e : jb 0x2da8b ; ret
0x00000000000038ee : jb 0x396e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000071275 : jb 0x7129b ; mov dword ptr [rcx], eax ; ret
0x0000000000072d5c : jb 0x72d55 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000886a2 : jb 0x8868d ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000009fbbe : jb 0x9fbca ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0311 : jb 0xa031d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0a5e : jb 0xa0a6a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a7cca : jb 0xa7cd9 ; add byte ptr [rax], al ; ret
0x00000000000aa5f5 : jb 0xaa604 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000aa600 : jb 0xaa613 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000aa60d : jb 0xaa615 ; mov byte ptr [rdi], cl ; ret
0x00000000000cdb9d : jb 0xcdba6 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000d731d : jb 0xd729d ; pop rbx ; ret
0x00000000000fe4f8 : jb 0xfe52b ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x000000000012dda3 : jbe 0x12ddb7 ; mov eax, 2 ; ret
0x000000000013c1dd : jbe 0x13c1f9 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000194f59 : jbe 0x194f5c ; call qword ptr [rax + 0x10fffb77]
0x0000000000195044 : jbe 0x194ff1 ; std ; call qword ptr [rsi]
0x0000000000195f11 : jbe 0x195f15 ; jmp qword ptr [rdx + 0x22fffc7e]
0x0000000000196981 : jbe 0x19696e ; jmp rsp
0x0000000000196b95 : jbe 0x196b9d ; add byte ptr [rcx - 0x17], dl ; call rsp
0x000000000019928d : jbe 0x199296 ; add ah, al ; or al, 0xf6 ; call rsp
0x0000000000199659 : jbe 0x199653 ; jmp rsp
0x0000000000199658 : jbe 0x199654 ; jmp rsp
0x00000000001b0f21 : jbe 0x1b0f1a ; jmp qword ptr [rcx]
0x00000000001b0f39 : jbe 0x1b0f32 ; jmp qword ptr [rcx]
0x000000000002b767 : jbe 0x2b771 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000002c0f : jbe 0x2be3 ; clc ; ret
0x000000000002cdd2 : jbe 0x2cddf ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000047f4b : jbe 0x47fc1 ; xor eax, eax ; ret
0x000000000004a49c : jbe 0x4a496 ; nop ; pop rbx ; ret
0x00000000000533bf : jbe 0x5334c ; ret 0x8166
0x000000000007228a : jbe 0x72200 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000008eb66 : jbe 0x8eba5 ; add rax, rdi ; ret
0x000000000008eb76 : jbe 0x8eba7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb86 : jbe 0x8eba7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008eb96 : jbe 0x8eba7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000944e3 : jbe 0x944fe ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x944d9 ; ret
0x00000000000a12a9 : jbe 0xa12a3 ; ret 0xf10
0x00000000000a2ec9 : jbe 0xa2ec3 ; ret 0xf10
0x00000000000dc0e8 : jbe 0xdc0f7 ; mov eax, 0xc ; ret
0x00000000000f68d8 : jbe 0xf68e3 ; ret
0x00000000001014a8 : je 0x1014b9 ; mov dword ptr [rip + 0x2c2d60], edi ; ret
0x00000000001024f0 : je 0x1024fb ; pop rbx ; ret
0x00000000001039f0 : je 0x103a02 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010541e : je 0x1054be ; call rax
0x0000000000105595 : je 0x105696 ; call rax
0x00000000001073e6 : je 0x1073eb ; ret
0x00000000001095b4 : je 0x1095bb ; pop rbp ; ret
0x00000000001099ba : je 0x1099ca ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000109c09 : je 0x109c17 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000010c99b : je 0x10c9b0 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010f471 : je 0x10f49c ; mov rdx, rax ; jmp 0x10f489
0x000000000010f77c : je 0x10f7a0 ; mov rdx, r8 ; jmp 0x10f790
0x0000000000112b92 : je 0x112b72 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b66
0x0000000000113303 : je 0x113317 ; mov eax, 7 ; ret
0x0000000000113321 : je 0x113349 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000113330 : je 0x113394 ; xor eax, eax ; pop rbx ; ret
0x0000000000114a4b : je 0x114a5b ; ret
0x00000000001150f9 : je 0x1150fe ; ret
0x000000000011515d : je 0x115162 ; ret
0x000000000011557a : je 0x115582 ; ret
0x0000000000115872 : je 0x1158a2 ; call rax
0x0000000000115cf2 : je 0x115d0f ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011622d : je 0x116240 ; lea rax, qword ptr [rip - 0x767f6] ; ret
0x000000000011626e : je 0x116280 ; lea rax, qword ptr [rip + 0x37c19] ; ret
0x000000000011631d : je 0x116330 ; lea rax, qword ptr [rip - 0x76196] ; ret
0x000000000011635e : je 0x116370 ; lea rax, qword ptr [rip + 0x37ec9] ; ret
0x00000000001163a7 : je 0x1163b9 ; lea rax, qword ptr [rip - 0x6bea0] ; ret
0x0000000000116d4c : je 0x116d60 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011769c : je 0x1176ae ; add rsp, 8 ; ret
0x000000000011824c : je 0x118260 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011faa7 : je 0x11fab3 ; mov rdi, rbx ; call rax
0x000000000011fd9f : je 0x11fdab ; mov rdi, rbx ; call rax
0x000000000011feaf : je 0x11fec3 ; lea rdi, qword ptr [rip + 0x2a87e8] ; call rax
0x000000000011ff5a : je 0x11ff87 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000123003 : je 0x122ffb ; pop rbx ; ret
0x0000000000128342 : je 0x12834a ; ret
0x00000000001283a1 : je 0x1283aa ; ret
0x000000000012839b : je 0x1283ab ; cmp dword ptr [rdi + 0x10], 2 ; je 0x1283b0 ; ret
0x000000000012b043 : je 0x12b02d ; xor eax, eax ; pop rbx ; ret
0x000000000012b883 : je 0x12b88f ; mov rdi, rsp ; call rax
0x000000000012b96e : je 0x12b97a ; mov rdi, rsp ; call rax
0x000000000012c029 : je 0x12c056 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000012c224 : je 0x12c230 ; mov rdi, rbp ; call rax
0x000000000012c5a8 : je 0x12c5b2 ; ret
0x000000000012d2b5 : je 0x12d2c1 ; mov rdi, r14 ; call rax
0x000000000012d833 : je 0x12d844 ; xor eax, eax ; ret
0x000000000012de42 : je 0x12de4e ; mov rdi, rbp ; call rdx
0x000000000012e347 : je 0x12e444 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000132292 : je 0x1322a6 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x0000000000132c4a : je 0x132c56 ; mov rdi, r12 ; call rax
0x0000000000132e2b : je 0x132e39 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001337c4 : je 0x1337d4 ; xor eax, eax ; ret
0x00000000001341cb : je 0x1340ef ; mov rdi, rbp ; call rax
0x0000000000134105 : je 0x134111 ; mov rdi, r13 ; call rax
0x0000000000134213 : je 0x134227 ; mov eax, 1 ; ret
0x00000000001342f8 : je 0x134304 ; mov rdi, rbp ; call rax
0x0000000000134518 : je 0x134524 ; mov rdi, rbp ; call rax
0x000000000013500f : je 0x13501d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001356bb : je 0x1356c7 ; mov rdi, r12 ; call rax
0x0000000000135a2f : je 0x135a3d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001382ba : je 0x138248 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000013823f : je 0x13824b ; pop rbx ; ret
0x00000000001382e3 : je 0x1382f6 ; add rsp, 8 ; ret
0x00000000001386f1 : je 0x138706 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000138ecb : je 0x138ed2 ; ret
0x0000000000138fab : je 0x138fb9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001396c4 : je 0x1396d2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013ab3d : je 0x13ab98 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abfd : je 0x13ac58 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013acbd : je 0x13ad18 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad7d : je 0x13add8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b5eb : je 0x13b617 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b72f : je 0x13b75b ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b87d : je 0x13b8a8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b93d : je 0x13b968 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b9fd : je 0x13ba28 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013babd : je 0x13bae8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013bdb1 : je 0x13bdc3 ; ret
0x000000000013dd78 : je 0x13dd84 ; xor eax, eax ; ret
0x00000000001429a1 : je 0x1429b6 ; add rsp, 8 ; ret
0x0000000000144d73 : je 0x144d3d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000145a45 : je 0x145a4d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000145b43 : je 0x145b0d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000146a2a : je 0x146a32 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146b83 : je 0x146b4d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000148753 : je 0x14871d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014a781 : je 0x14a768 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014aa73 : je 0x14aa3d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014c103 : je 0x14c0cd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016f7c7 : je 0x16f7d1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000173e66 : je 0x173e6c ; call rdx
0x0000000000173f7e : je 0x173f89 ; call rax
0x0000000000174360 : je 0x174365 ; ret
0x0000000000183f88 : je 0x183f53 ; xor al, 0xd8 ; ret
0x00000000001841c7 : je 0x1841c4 ; jmp 0x18419e
0x0000000000184cc2 : je 0x184c8a ; ret 0xacfc
0x0000000000186a2c : je 0x186a9f ; in eax, dx ; jmp rdi
0x0000000000186a9c : je 0x186b0f ; in eax, dx ; jmp rdi
0x0000000000186a98 : je 0x186b0f ; in eax, dx ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000194f55 : je 0x194f54 ; call qword ptr [rax]
0x00000000001974e0 : je 0x197536 ; in eax, dx ; jmp rsp
0x0000000000198629 : je 0x19861e ; jmp rsp
0x0000000000198ed8 : je 0x198ef1 ; cmc ; call rsp
0x0000000000199008 : je 0x199051 ; cmc ; jmp rsp
0x0000000000199609 : je 0x199603 ; jmp rsp
0x000000000019a160 : je 0x19a14d ; idiv edi ; cld ; ret
0x000000000019b074 : je 0x19b0ae ; add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019b200 : je 0x19b243 ; cli ; jmp rsp
0x000000000019b658 : je 0x19b625 ; cli ; jmp qword ptr [rdi + rdx*2 - 0x3cebfffe]
0x000000000019b6e0 : je 0x19b6ae ; cli ; jmp rsp
0x00000000001a1462 : je 0x1a1470 ; ret
0x00000000001a49ac : je 0x1a4943 ; add byte ptr [rax], al ; sar byte ptr [rdi - 0x13], 1 ; jmp qword ptr [rbx]
0x00000000001a5eac : je 0x1a5e58 ; add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x00000000001a69ac : je 0x1a6963 ; add byte ptr [rax], al ; nop ; mov dh, ch ; jmp rbx
0x00000000001a7de0 : je 0x1a7de7 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001aefac : je 0x1aefe9 ; add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0cac : je 0x1b0d06 ; add dword ptr [rax], eax ; jb 0x1b0caf ; jmp qword ptr [rcx]
0x00000000001b0e01 : je 0x1b0dfa ; jmp qword ptr [rcx]
0x0000000000001cba : je 0x1ce6 ; ret
0x000000000001fb05 : je 0x1faa6 ; jmp 0x1facf
0x0000000000021857 : je 0x21883 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000024ff8 : je 0x25024 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000025b54 : je 0x25b83 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026864 : je 0x26892 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000028044 : je 0x28072 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000282ab : je 0x282da ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028f14 : je 0x28f42 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000029183 : je 0x291b2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002a698 : je 0x2a6a3 ; pop rbx ; ret
0x000000000002a693 : je 0x2a6a8 ; cmp esi, 3 ; je 0x2a6a8 ; pop rbx ; ret
0x000000000002b025 : je 0x2b02b ; call rax
0x000000000002b396 : je 0x2b39c ; call rcx
0x000000000002c37b : je 0x2c381 ; call rax
0x00000000000331ae : je 0x331d9 ; adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000334fe : je 0x3352d ; sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x0000000000034c5d : je 0x34c4c ; ret
0x0000000000034f55 : je 0x34f7f ; call 0xffffffffe28511e9
0x0000000000035046 : je 0x34fef ; ret
0x0000000000038380 : je 0x383ad ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000062913 : je 0x628a0 ; ret 0x348
0x000000000006ac46 : je 0x6ac68 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006b45a : je 0x6b463 ; ret
0x000000000006d82e : je 0x6d83d ; mov eax, edx ; pop rbx ; ret
0x000000000006db93 : je 0x6dbd1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dd97 : je 0x6ddb1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006de67 : je 0x6de81 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e0d8 : je 0x6e102 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006ee75 : je 0x6ee91 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f778 : je 0x6f7a3 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fdc3 : je 0x6fdd6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070107 : je 0x70115 ; mov eax, edx ; pop rbx ; ret
0x00000000000704f7 : je 0x70505 ; mov eax, esi ; pop rbx ; ret
0x0000000000070679 : je 0x70685 ; mov eax, esi ; pop rbx ; ret
0x0000000000070833 : je 0x70874 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070a76 : je 0x70a88 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070fed : je 0x70ffe ; mov eax, r8d ; pop rbx ; ret
0x0000000000071190 : je 0x711a5 ; mov eax, edx ; pop rbx ; ret
0x0000000000071327 : je 0x71335 ; mov eax, edx ; pop rbx ; ret
0x0000000000071cc6 : je 0x71d16 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000071cc5 : je 0x71d17 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000072aac : je 0x72ab2 ; ret
0x0000000000072ada : je 0x72b3c ; pop rbp ; pop r12 ; ret
0x0000000000072b7f : je 0x72be1 ; pop rbp ; pop r12 ; ret
0x0000000000072cbd : je 0x72cc8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072d01 : je 0x72d0c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000073238 : je 0x73247 ; mov eax, 0xffffffff ; ret
0x0000000000075b85 : je 0x75b95 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f8a : je 0x75f95 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ae : je 0x760bd ; mov eax, esi ; pop rbx ; ret
0x00000000000761f0 : je 0x76205 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d5 : je 0x764e5 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e7a : je 0x76e85 ; mov eax, edx ; pop rbx ; ret
0x00000000000774fb : je 0x7750d ; mov dword ptr [rdi], edx ; ret
0x000000000007781c : je 0x7782f ; mov eax, 0xffffffff ; ret
0x0000000000077b9c : je 0x77baf ; mov eax, 0xffffffff ; ret
0x0000000000078086 : je 0x78095 ; mov eax, edx ; pop rbx ; ret
0x000000000007841b : je 0x783c1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007848f : je 0x7849b ; pop rbx ; ret
0x000000000007b2b3 : je 0x7b26d ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b403 : je 0x7b3bd ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b565 : je 0x7b572 ; ret
0x000000000007b597 : je 0x7b5a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bf7a : je 0x7bf85 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007d9bd : je 0x7dbdf ; mov rdx, rax ; jmp 0x7d9e8
0x000000000007df86 : je 0x7df97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e074 : je 0x7e07a ; call rax
0x000000000007eed7 : je 0x7eee4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000845e2 : je 0x8460b ; call rax
0x0000000000084fb2 : je 0x84fde ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000008556b : je 0x85571 ; call rax
0x0000000000087609 : je 0x87612 ; ret
0x00000000000878a2 : je 0x878b7 ; mov eax, 0x16 ; ret
0x00000000000879ce : je 0x87b59 ; mov rsi, r14 ; call rax
0x0000000000088375 : je 0x88375 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000088f28 : je 0x88f32 ; ret
0x00000000000898ab : je 0x898bd ; lea rax, qword ptr [rip + 0x1777c] ; ret
0x0000000000089a98 : je 0x89aaa ; lea rax, qword ptr [rip + 0xe6dff] ; ret
0x000000000008b18b : je 0x8b19d ; lea rax, qword ptr [rip + 0xda48c] ; ret
0x000000000008b298 : je 0x8b2aa ; lea rax, qword ptr [rip + 0xbf34f] ; ret
0x000000000008b415 : je 0x8b43c ; movsx eax, dl ; ret
0x000000000008b415 : je 0x8b43d ; movsx eax, dl ; ret
0x000000000008b410 : je 0x8b469 ; cmp dl, 3 ; je 0x8b441 ; movsx eax, dl ; ret
0x000000000008b522 : je 0x8b536 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b754 : je 0x8b75e ; bsf eax, edx ; ret
0x000000000008b754 : je 0x8b75f ; bsf eax, edx ; ret
0x000000000008b7fd : je 0x8b815 ; bsf rax, rdx ; ret
0x000000000008b7fd : je 0x8b816 ; bsf rax, rdx ; ret
0x000000000008b79c : je 0x8b829 ; bsf rax, rdx ; ret
0x000000000008b9cc : je 0x8b9f5 ; bsf rax, rdx ; ret
0x000000000008b9dd : je 0x8b9f5 ; bsf rax, rdx ; ret
0x000000000008b9cc : je 0x8b9f6 ; bsf rax, rdx ; ret
0x000000000008b9dd : je 0x8b9f6 ; bsf rax, rdx ; ret
0x000000000008b95c : je 0x8ba09 ; bsf rax, rdx ; ret
0x000000000008bb0b : je 0x8bb1d ; lea rax, qword ptr [rip + 0x1713c] ; ret
0x000000000008d3eb : je 0x8d3fd ; lea rax, qword ptr [rip + 0xd99dc] ; ret
0x000000000008d708 : je 0x8d71a ; lea rax, qword ptr [rip + 0xbd01f] ; ret
0x000000000008da98 : je 0x8daaa ; lea rax, qword ptr [rip + 0xbcdbf] ; ret
0x000000000008ea5c : je 0x8eab3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008ebd5 : je 0x8ebe8 ; lea rax, qword ptr [rip + 0xdf852] ; ret
0x000000000008f1e7 : je 0x8f1f9 ; lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008f34d : je 0x8f360 ; lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000008f38e : je 0x8f3a0 ; lea rax, qword ptr [rip + 0xbeea9] ; ret
0x000000000008f87b : je 0x8f88d ; lea rax, qword ptr [rip + 0xda0cc] ; ret
0x000000000008f99b : je 0x8f9ad ; lea rax, qword ptr [rip + 0xdb7bc] ; ret
0x000000000009440d : je 0x94420 ; lea rax, qword ptr [rip + 0xb63a] ; ret
0x0000000000094428 : je 0x9442d ; ret
0x0000000000094450 : je 0x94462 ; lea rax, qword ptr [rip + 0xbcb47] ; ret
0x0000000000095cfa : je 0x95d0e ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000966ea : je 0x96741 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000967a1 : je 0x967b9 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000096c74 : je 0x96c87 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ebba : je 0x9ebb3 ; ret
0x000000000009ebde : je 0x9ebd3 ; ret
0x000000000009ebda : je 0x9ebd7 ; cmp ecx, esi ; je 0x9ebd7 ; ret
0x000000000009ec2f : je 0x9ec13 ; ret
0x000000000009f1ac : je 0x9f188 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a6059 : je 0xa60aa ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a76e6 : je 0xa7737 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a93fa : je 0xa944b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000aac0d : je 0xaabd6 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aabe5 : je 0xaabd8 ; movzx eax, cl ; pop rbx ; ret
0x00000000000aac0d : je 0xaabd8 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aad32 : je 0xaad44 ; xor eax, eax ; ret
0x00000000000aad2d : je 0xaad51 ; cmp eax, 2 ; je 0xaad49 ; xor eax, eax ; ret
0x00000000000aad7d : je 0xaad63 ; ret
0x00000000000aadc5 : je 0xaada3 ; ret
0x00000000000abcdf : je 0xabcd1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abf19 : je 0xabf39 ; mov cl, dl ; and cl, 0xf ; je 0xabf49 ; ret
0x00000000000abf20 : je 0xabf42 ; ret
0x00000000000abf35 : je 0xabf56 ; add rax, 2 ; ret
0x00000000000ac566 : je 0xac5d6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac81f : je 0xac83c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000ac875 : je 0xac888 ; lea rax, qword ptr [rip + 0xc31f2] ; ret
0x00000000000aca38 : je 0xac9ed ; mov rax, rbx ; pop rbx ; ret
0x00000000000ad3ae : je 0xad3dd ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad666 : je 0xad695 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000ad916 : je 0xad945 ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000adac8 : je 0xadad5 ; test edx, edx ; jne 0xadac7 ; ret
0x00000000000bbcf7 : je 0xbbd24 ; sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00000000000bbdac : je 0xbbddb ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bbe75 : je 0xbbea0 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000bc266 : je 0xbc295 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000be447 : je 0xbe472 ; cmp byte ptr [rcx + 1], cl ; ret
0x00000000000c3193 : je 0xc31ea ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000c7590 : je 0xc75ae ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cc3a1 : je 0xcc3a7 ; call rax
0x00000000000cc4f2 : je 0xcc4fb ; call rdx
0x00000000000cc583 : je 0xcc58c ; call rax
0x00000000000cdabd : je 0xcdb0c ; mov eax, 0x20 ; ret
0x00000000000cdb79 : je 0xcdba9 ; mov eax, 1 ; ret
0x00000000000cdbce : je 0xcdba9 ; mov eax, 1 ; ret
0x00000000000cdbe4 : je 0xcdba9 ; mov eax, 1 ; ret
0x00000000000cf50c : je 0xcf527 ; call 0x8b724
0x00000000000d6eef : je 0xd6f19 ; or byte ptr [rcx], ch ; ret
0x00000000000d7300 : je 0xd7299 ; pop rbx ; ret
0x00000000000d7332 : je 0xd72cd ; pop rbx ; ret
0x00000000000d732d : je 0xd72f3 ; and ebx, 8 ; je 0xd72d2 ; pop rbx ; ret
0x00000000000d9272 : je 0xd9281 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000daf61 : je 0xdaf75 ; xor eax, eax ; pop rbx ; ret
0x00000000000dc5d9 : je 0xdc607 ; or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00000000000e0ff3 : je 0xe102f ; mov rdx, rax ; jmp 0xe0f93
0x00000000000e8498 : je 0xe84d4 ; xor eax, eax ; ret
0x00000000000e84f7 : je 0xe8507 ; mov eax, 2 ; ret
0x00000000000e91b7 : je 0xe91e3 ; enter 0xf41, -0x62 ; ret 0x844
0x00000000000efce5 : je 0xefcc3 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f081e : je 0xf0849 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000f3fd7 : je 0xf4158 ; call 0x20281
0x00000000000f4214 : je 0xf423f ; cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000f5f4a : je 0xf5f53 ; ret
0x00000000000fba60 : je 0xfba7d ; neg eax ; pop rbx ; ret
0x00000000000fcbcf : je 0xfcbf9 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fcc88 : je 0xfccb2 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fd3de : je 0xfd3e5 ; ret
0x00000000000ff253 : je 0xff25e ; mov qword ptr [rax], rdx ; ret
0x00000000000ff322 : je 0xff317 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001003df : jg 0x1003e9 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000133042 : jg 0x13308c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133058 ; ret
0x00000000001391a2 : jg 0x1391ec ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1391b8 ; ret
0x000000000014da70 : jg 0x14daec ; loopne 0x14da41 ; jp 0x14dafd ; jp 0x14da70 ; ret
0x000000000014db1c : jg 0x14db2d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014df60 : jg 0x14dfdc ; loopne 0x14df31 ; jp 0x14dfed ; jp 0x14df60 ; ret
0x000000000014e00c : jg 0x14e01d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e303 : jg 0x14e37f ; loopne 0x14e2d4 ; jp 0x14e390 ; jp 0x14e303 ; ret
0x000000000014e3ac : jg 0x14e3bd ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000001531c9 : jg 0x15321c ; ret
0x000000000015324f : jg 0x15329a ; ret
0x00000000001533c9 : jg 0x15341c ; ret 0x894c
0x000000000015344f : jg 0x15349a ; ret 0x894c
0x0000000000155b99 : jg 0x155bec ; ret
0x0000000000155c1f : jg 0x155c6a ; ret
0x0000000000155d99 : jg 0x155dec ; ret 0x894c
0x0000000000155e1f : jg 0x155e6a ; ret 0x894c
0x0000000000158569 : jg 0x1585bc ; ret
0x00000000001585ef : jg 0x15863a ; ret
0x0000000000158769 : jg 0x1587bc ; ret 0x894c
0x00000000001587ef : jg 0x15883a ; ret 0x894c
0x000000000015ab38 : jg 0x15ab89 ; loope 0x15ab37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015abaf : jg 0x15abfa ; ret 0xff2
0x000000000015abc8 : jg 0x15ac19 ; loop 0x15abc7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ac3f : jg 0x15ac8a ; ret
0x000000000015ac58 : jg 0x15aca9 ; jrcxz 0x15ac57 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ace8 : jg 0x15ad39 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ad68 : jg 0x15adb9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ade8 : jg 0x15ae39 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ae68 : jg 0x15aeb9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015aee8 : jg 0x15af39 ; call 0x4f94beea
0x000000000015af68 : jg 0x15afb9 ; jmp 0x4f94bf6a
0x000000000015b0e8 : jg 0x15b139 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b168 : jg 0x15b1b9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b1f8 : jg 0x15b249 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b278 : jg 0x15b2c9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b2ec : jg 0x15b2f7 ; ret
0x000000000015b346 : jg 0x15b359 ; ret
0x000000000015b341 : jg 0x15b391 ; psllq mm1, qword ptr [rdi] ; jg 0x15b35e ; ret
0x000000000015b3b6 : jg 0x15b3c9 ; ret
0x000000000015b426 : jg 0x15b439 ; ret
0x000000000015b421 : jg 0x15b471 ; or eax, 0xf7f0ff3 ; ret
0x000000000015b496 : jg 0x15b4a9 ; ret
0x000000000015b491 : jg 0x15b4e1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b506 : jg 0x15b519 ; ret
0x000000000015b501 : jg 0x15b551 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b576 : jg 0x15b589 ; ret
0x000000000015b571 : jg 0x15b5c1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b5e6 : jg 0x15b5f9 ; ret
0x000000000015b5e1 : jg 0x15b631 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b656 : jg 0x15b669 ; ret
0x000000000015b651 : jg 0x15b6a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b6c6 : jg 0x15b6d9 ; ret
0x000000000015b736 : jg 0x15b749 ; ret
0x000000000015b7a6 : jg 0x15b7b9 ; ret
0x000000000015b7a1 : jg 0x15b7f1 ; add eax, 0xf7f0ff3 ; ret
0x000000000015b816 : jg 0x15b829 ; ret
0x000000000015b811 : jg 0x15b861 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b886 : jg 0x15b899 ; ret
0x000000000015b881 : jg 0x15b8d1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b8f6 : jg 0x15b909 ; ret
0x000000000015b8f1 : jg 0x15b941 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b966 : jg 0x15b979 ; ret
0x000000000015b961 : jg 0x15b9b1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d608 : jg 0x15d659 ; loope 0x15d607 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d67f : jg 0x15d6ca ; ret 0xff2
0x000000000015d698 : jg 0x15d6e9 ; loop 0x15d697 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d70f : jg 0x15d75a ; ret
0x000000000015d728 : jg 0x15d779 ; jrcxz 0x15d727 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d7b8 : jg 0x15d809 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d838 : jg 0x15d889 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d8b8 : jg 0x15d909 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d938 : jg 0x15d989 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d9b8 : jg 0x15da09 ; call 0x4f94e9ba
0x000000000015da38 : jg 0x15da89 ; jmp 0x4f94ea3a
0x000000000015dbb8 : jg 0x15dc09 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dc38 : jg 0x15dc89 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dcc8 : jg 0x15dd19 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dd48 : jg 0x15dd99 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ddbc : jg 0x15ddc7 ; ret
0x000000000015de16 : jg 0x15de29 ; ret
0x000000000015de11 : jg 0x15de61 ; psllq mm1, qword ptr [rdi] ; jg 0x15de2e ; ret
0x000000000015de86 : jg 0x15de99 ; ret
0x000000000015def6 : jg 0x15df09 ; ret
0x000000000015def1 : jg 0x15df41 ; or eax, 0xf7f0ff3 ; ret
0x000000000015df66 : jg 0x15df79 ; ret
0x000000000015df61 : jg 0x15dfb1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dfd6 : jg 0x15dfe9 ; ret
0x000000000015dfd1 : jg 0x15e021 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e046 : jg 0x15e059 ; ret
0x000000000015e041 : jg 0x15e091 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e0b6 : jg 0x15e0c9 ; ret
0x000000000015e0b1 : jg 0x15e101 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e126 : jg 0x15e139 ; ret
0x000000000015e121 : jg 0x15e171 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e196 : jg 0x15e1a9 ; ret
0x000000000015e206 : jg 0x15e219 ; ret
0x000000000015e276 : jg 0x15e289 ; ret
0x000000000015e271 : jg 0x15e2c1 ; add eax, 0xf7f0ff3 ; ret
0x000000000015e2e6 : jg 0x15e2f9 ; ret
0x000000000015e2e1 : jg 0x15e331 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e356 : jg 0x15e369 ; ret
0x000000000015e351 : jg 0x15e3a1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e3c6 : jg 0x15e3d9 ; ret
0x000000000015e3c1 : jg 0x15e411 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e436 : jg 0x15e449 ; ret
0x000000000015e431 : jg 0x15e481 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160128 : jg 0x160179 ; loope 0x160127 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016019f : jg 0x1601ea ; ret 0xff2
0x00000000001601b8 : jg 0x160209 ; loop 0x1601b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016022f : jg 0x16027a ; ret
0x0000000000160248 : jg 0x160299 ; jrcxz 0x160247 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001602d8 : jg 0x160329 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160358 : jg 0x1603a9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001603d8 : jg 0x160429 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160458 : jg 0x1604a9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001604d8 : jg 0x160529 ; call 0x4f9514da
0x0000000000160558 : jg 0x1605a9 ; jmp 0x4f95155a
0x00000000001606d8 : jg 0x160729 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160758 : jg 0x1607a9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001607e8 : jg 0x160839 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160868 : jg 0x1608b9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001608dc : jg 0x1608e7 ; ret
0x0000000000160936 : jg 0x160949 ; ret
0x0000000000160931 : jg 0x160981 ; psllq mm1, qword ptr [rdi] ; jg 0x16094e ; ret
0x00000000001609a6 : jg 0x1609b9 ; ret
0x0000000000160a16 : jg 0x160a29 ; ret
0x0000000000160a11 : jg 0x160a61 ; or eax, 0xf7f0ff3 ; ret
0x0000000000160a86 : jg 0x160a99 ; ret
0x0000000000160a81 : jg 0x160ad1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160af6 : jg 0x160b09 ; ret
0x0000000000160af1 : jg 0x160b41 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160b66 : jg 0x160b79 ; ret
0x0000000000160b61 : jg 0x160bb1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160bd6 : jg 0x160be9 ; ret
0x0000000000160bd1 : jg 0x160c21 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160c46 : jg 0x160c59 ; ret
0x0000000000160c41 : jg 0x160c91 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160cb6 : jg 0x160cc9 ; ret
0x0000000000160d26 : jg 0x160d39 ; ret
0x0000000000160d96 : jg 0x160da9 ; ret
0x0000000000160d91 : jg 0x160de1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000160e06 : jg 0x160e19 ; ret
0x0000000000160e01 : jg 0x160e51 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160e76 : jg 0x160e89 ; ret
0x0000000000160e71 : jg 0x160ec1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160ee6 : jg 0x160ef9 ; ret
0x0000000000160ee1 : jg 0x160f31 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160f56 : jg 0x160f69 ; ret
0x0000000000160f51 : jg 0x160fa1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000172935 : jg 0x172944 ; neg eax ; ret
0x0000000000172a42 : jg 0x172a52 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000172ae3 : jg 0x172b34 ; loopne 0x172b38 ; sub eax, edx ; vzeroupper ; ret
0x0000000000194f71 : jg 0x194f74 ; call qword ptr [rax + 0x10fffb80]
0x0000000000196ab1 : jg 0x196a9e ; jmp rsp
0x0000000000196ddd : jg 0x196de5 ; add ah, al ; add ebp, edx ; jmp rsp
0x000000000019b4a9 : jg 0x19b4a7 ; call rsp
0x000000000019e5c1 : jg 0x19e5ae ; jmp rsp
0x00000000001a49b1 : jg 0x1a49a2 ; jmp qword ptr [rbx]
0x00000000001a6889 : jg 0x1a687b ; call qword ptr [rax]
0x0000000000026cff : jg 0x26c8c ; ret 0x5c77
0x00000000000347bb : jg 0x3480d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000034c5b : jg 0x34c62 ; je 0x34c4e ; ret
0x0000000000035042 : jg 0x3508c ; or eax, esi ; je 0x34ff3 ; ret
0x000000000003acb2 : jg 0x3acfb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000047bbb : jg 0x47c29 ; xor eax, eax ; ret
0x0000000000047d7e : jg 0x47c8f ; pop rbx ; ret
0x000000000004a1f4 : jg 0x4a201 ; ret 0x5488
0x0000000000058395 : jg 0x583ae ; test byte ptr [rbx - 0x7c00001b], bh ; ret
0x0000000000063dfd : jg 0x63d8a ; ret
0x00000000000774f7 : jg 0x77485 ; inc byte ptr [rdx] ; je 0x77511 ; mov dword ptr [rdi], edx ; ret
0x000000000008f282 : jg 0x8f2d4 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000008f427 : jg 0x8f440 ; jne 0x8f417 ; mov rax, rdi ; ret
0x00000000000944e7 : jg 0x944fe ; jne 0x944d5 ; ret
0x00000000000959b8 : jg 0x959a3 ; ret
0x000000000009fb64 : jg 0x9fb75 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009fb78 : jg 0x9fb89 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009ffea : jg 0x9ffe6 ; ret
0x00000000000a02b7 : jg 0xa02c8 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000000a02cb : jg 0xa02dc ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a073d : jg 0xa0739 ; ret
0x00000000000a0a04 : jg 0xa0a15 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000000a0a18 : jg 0xa0a29 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a0e8a : jg 0xa0e86 ; ret
0x00000000000a5e26 : jg 0xa5e31 ; ret
0x00000000000a5e36 : jg 0xa5e44 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5e4a : jg 0xa5e59 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5e69 : jg 0xa5e77 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5e79 : jg 0xa5e87 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e89 : jg 0xa5e9a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a5eaa : jg 0xa5eb9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5eca : jg 0xa5ed9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5eea : jg 0xa5ef9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5f0a : jg 0xa5f1c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a5f4d : jg 0xa5f5f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5f6d : jg 0xa5f7f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f8b : jg 0xa5f9b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5fab : jg 0xa5fbb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5fcb : jg 0xa5fdb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5feb : jg 0xa5ffb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6578 : jg 0xa6583 ; jne 0xa6e38 ; ret
0x00000000000a659c : jg 0xa65a8 ; jne 0xa6e38 ; ret
0x00000000000a65bf : jg 0xa65cc ; jne 0xa6e38 ; ret
0x00000000000a65da : jg 0xa65e8 ; jne 0xa6e38 ; ret
0x00000000000a65fd : jg 0xa660c ; jne 0xa6e38 ; ret
0x00000000000a6622 : jg 0xa6632 ; jne 0xa6e38 ; ret
0x00000000000a6640 : jg 0xa6651 ; jne 0xa6e38 ; ret
0x00000000000a665c : jg 0xa666e ; jne 0xa6e38 ; ret
0x00000000000a667f : jg 0xa6692 ; jne 0xa6e38 ; ret
0x00000000000a66a4 : jg 0xa66b8 ; jne 0xa6e38 ; ret
0x00000000000a66c2 : jg 0xa66d7 ; jne 0xa6e38 ; ret
0x00000000000a66e2 : jg 0xa66f8 ; jne 0xa6e38 ; ret
0x00000000000a6704 : jg 0xa671b ; jne 0xa6e38 ; ret
0x00000000000a6724 : jg 0xa673c ; jne 0xa6e38 ; ret
0x00000000000a6744 : jg 0xa675d ; jne 0xa6e38 ; ret
0x00000000000a675e : jg 0xa6778 ; jne 0xa6e38 ; ret
0x00000000000a6781 : jg 0xa679c ; jne 0xa6e38 ; ret
0x00000000000a67a6 : jg 0xa67c2 ; jne 0xa6e38 ; ret
0x00000000000a67c4 : jg 0xa67e1 ; jne 0xa6e38 ; ret
0x00000000000a67e4 : jg 0xa6802 ; jne 0xa6e38 ; ret
0x00000000000a6807 : jg 0xa6826 ; jne 0xa6e38 ; ret
0x00000000000a6826 : jg 0xa6846 ; jne 0xa6e38 ; ret
0x00000000000a6846 : jg 0xa6867 ; jne 0xa6e38 ; ret
0x00000000000a6866 : jg 0xa6888 ; jne 0xa6e38 ; ret
0x00000000000a6889 : jg 0xa68ac ; jne 0xa6e38 ; ret
0x00000000000a68be : jg 0xa68e2 ; jne 0xa6e38 ; ret
0x00000000000a68ec : jg 0xa6911 ; jne 0xa6e38 ; ret
0x00000000000a691c : jg 0xa6942 ; jne 0xa6e38 ; ret
0x00000000000a6948 : jg 0xa696f ; jne 0xa6e38 ; ret
0x00000000000a6978 : jg 0xa69a0 ; jne 0xa6e38 ; ret
0x00000000000a69a8 : jg 0xa69d1 ; jne 0xa6e38 ; ret
0x00000000000a69d8 : jg 0xa6a02 ; jne 0xa6e38 ; ret
0x00000000000a6af6 : jg 0xa6b01 ; ret
0x00000000000a6b09 : jg 0xa6b17 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a6b1a : jg 0xa6b29 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a6b39 : jg 0xa6b47 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b49 : jg 0xa6b57 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6b5c : jg 0xa6b6d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a6b7a : jg 0xa6b89 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a6b9a : jg 0xa6ba9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6bba : jg 0xa6bc9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a6bdd : jg 0xa6bef ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a6c1d : jg 0xa6c2f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6c3d : jg 0xa6c4f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6c5b : jg 0xa6c6b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a6c7b : jg 0xa6c8b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a6c9b : jg 0xa6cab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6cbb : jg 0xa6ccb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6df2 : jg 0xa6dfd ; ret
0x00000000000a6f26 : jg 0xa6f5a ; ret
0x00000000000a7496 : jg 0xa74a5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a74a6 : jg 0xa74b8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a74d9 : jg 0xa74eb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a74f9 : jg 0xa750b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a761f : jg 0xa767f ; or eax, 0x1c478d48 ; ret
0x00000000000a7c1b : jg 0xa7c26 ; jne 0xa8648 ; ret
0x00000000000a7c40 : jg 0xa7c4c ; jne 0xa8648 ; ret
0x00000000000a7c63 : jg 0xa7c70 ; jne 0xa8648 ; ret
0x00000000000a7c7e : jg 0xa7c8c ; jne 0xa8648 ; ret
0x00000000000a7ca1 : jg 0xa7cb0 ; jne 0xa8648 ; ret
0x00000000000a7cc6 : jg 0xa7cd6 ; jne 0xa8648 ; ret
0x00000000000a7ce4 : jg 0xa7cf5 ; jne 0xa8648 ; ret
0x00000000000a7d00 : jg 0xa7d12 ; jne 0xa8648 ; ret
0x00000000000a7d23 : jg 0xa7d36 ; jne 0xa8648 ; ret
0x00000000000a7d48 : jg 0xa7d5c ; jne 0xa8648 ; ret
0x00000000000a7d76 : jg 0xa7d8b ; jne 0xa8648 ; ret
0x00000000000a7d96 : jg 0xa7dac ; jne 0xa8648 ; ret
0x00000000000a7db8 : jg 0xa7dcf ; jne 0xa8648 ; ret
0x00000000000a7de8 : jg 0xa7e00 ; jne 0xa8648 ; ret
0x00000000000a7e18 : jg 0xa7e31 ; jne 0xa8648 ; ret
0x00000000000a7e42 : jg 0xa7e5c ; jne 0xa8648 ; ret
0x00000000000a7e65 : jg 0xa7e80 ; jne 0xa8648 ; ret
0x00000000000a7e8a : jg 0xa7ea6 ; jne 0xa8648 ; ret
0x00000000000a7eb8 : jg 0xa7ed5 ; jne 0xa8648 ; ret
0x00000000000a7ee8 : jg 0xa7f06 ; jne 0xa8648 ; ret
0x00000000000a7f1b : jg 0xa7f3a ; jne 0xa8648 ; ret
0x00000000000a7f4a : jg 0xa7f6a ; jne 0xa8648 ; ret
0x00000000000a7f7a : jg 0xa7f9b ; jne 0xa8648 ; ret
0x00000000000a7faa : jg 0xa7fcc ; jne 0xa8648 ; ret
0x00000000000a7fdd : jg 0xa8000 ; jne 0xa8648 ; ret
0x00000000000a8012 : jg 0xa8036 ; jne 0xa8648 ; ret
0x00000000000a8040 : jg 0xa8065 ; jne 0xa8648 ; ret
0x00000000000a8070 : jg 0xa8096 ; jne 0xa8648 ; ret
0x00000000000a809c : jg 0xa80c3 ; jne 0xa8648 ; ret
0x00000000000a80cc : jg 0xa80f4 ; jne 0xa8648 ; ret
0x00000000000a80fc : jg 0xa8125 ; jne 0xa8648 ; ret
0x00000000000a812c : jg 0xa8156 ; jne 0xa8648 ; ret
0x00000000000a82d6 : jg 0xa82e5 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a82e9 : jg 0xa82fb ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8329 : jg 0xa833b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8349 : jg 0xa835b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a846f : jg 0xa84cf ; or eax, 0x1d478d48 ; ret
0x00000000000a8602 : jg 0xa860d ; ret
0x00000000000a8736 : jg 0xa876e ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a8735 : jg 0xa87bd ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000a8f06 : jg 0xa8f11 ; ret
0x00000000000a8f16 : jg 0xa8f24 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8f2a : jg 0xa8f39 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8f49 : jg 0xa8f57 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8f59 : jg 0xa8f67 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8f69 : jg 0xa8f7a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8f8a : jg 0xa8f99 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a8faa : jg 0xa8fb9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8fca : jg 0xa8fd9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8fea : jg 0xa8ffc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a902d : jg 0xa903f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a904d : jg 0xa905f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a906b : jg 0xa907b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a908b : jg 0xa909b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a90ab : jg 0xa90bb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a90cb : jg 0xa90db ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a99d6 : jg 0xa99e1 ; ret
0x00000000000a99e6 : jg 0xa99f4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a99fa : jg 0xa9a09 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a9a19 : jg 0xa9a27 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a29 : jg 0xa9a37 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9a39 : jg 0xa9a4a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a9a5a : jg 0xa9a69 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9a7a : jg 0xa9a89 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9a9a : jg 0xa9aa9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9aba : jg 0xa9acc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9afd : jg 0xa9b0f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9b1d : jg 0xa9b2f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9b3b : jg 0xa9b4b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a9b5b : jg 0xa9b6b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a9b7b : jg 0xa9b8b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9b9b : jg 0xa9bab ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a9d46 : jg 0xa9d56 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a9f1f : jg 0xa9f80 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f3f : jg 0xa9fa0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9fb6 : jg 0xa9fef ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9fb5 : jg 0xaa03e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000aa5d7 : jg 0xaa5e7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000000aa5cd : jg 0xaa5ed ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aaba0 : jg 0xaabdd ; ret 0x2b77
0x00000000000abc65 : jg 0xabc6d ; neg eax ; ret
0x00000000000beb60 : jg 0xbeb9b ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbeb79
0x00000000000c7887 : jg 0xc785a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cd95c : jg 0xcd962 ; add byte ptr [rax], al ; ret
0x00000000000cd9ab : jg 0xcd9b4 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000cd9ab : jg 0xcd9b5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e1ff7 : jg 0xe200c ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000010299b : jge 0x10299f ; call rbx
0x0000000000102ac2 : jge 0x102ac6 ; call rbx
0x0000000000102ad0 : jge 0x102ad4 ; call rbx
0x0000000000102c05 : jge 0x102c09 ; call rbx
0x0000000000102d75 : jge 0x102d79 ; call rbx
0x0000000000102d83 : jge 0x102d87 ; call rbx
0x00000000001031d6 : jge 0x1031a1 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000104593 : jge 0x104597 ; call rbx
0x00000000001046bb : jge 0x1046bf ; call rbx
0x00000000001047fe : jge 0x104802 ; call rbx
0x00000000001048ff : jge 0x104903 ; call rbx
0x000000000010491b : jge 0x10491f ; call rbx
0x0000000000132e2f : jge 0x132e43 ; call rax
0x0000000000138faf : jge 0x138fc3 ; call rax
0x00000000001396c8 : jge 0x1396dc ; call rax
0x0000000000172b70 : jge 0x172b85 ; call r12
0x0000000000189ff0 : jge 0x189f8b ; cmc ; jmp qword ptr [rbx]
0x0000000000194f6d : jge 0x194f6c ; call qword ptr [rax]
0x0000000000195f1d : jge 0x195f1d ; call qword ptr [rdx]
0x0000000000195f21 : jge 0x195f25 ; call qword ptr [rdx + 0x12fffc7c]
0x000000000019605d : jge 0x19605d ; jmp rax
0x000000000019609d : jge 0x19609d ; call rax
0x0000000000038f6e : jge 0x38f73 ; call r14
0x000000000004727a : jge 0x47281 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000009f08f : jge 0x9f097 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000acb06 : jge 0xacb0b ; call r12
0x00000000000ccfdf : jge 0xccf91 ; call 0x1f8b0
0x00000000000d767a : jge 0xd7653 ; mov edx, eax ; jmp 0xd765c
0x00000000000e35a7 : jge 0xe35cd ; call 0x1f8ac
0x00000000000e35b0 : jge 0xe35de ; call 0x1f8ac
0x00000000000f7842 : jge 0xf7894 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000ff336 : jge 0xff36c ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000102e30 : jl 0x102e5e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000001073e4 : jl 0x107429 ; je 0x1073ed ; ret
0x000000000011938b : jl 0x1193ba ; or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x0000000000128669 : jl 0x128694 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000001336f7 : jl 0x133722 ; or byte ptr [rax + 0x63], cl ; ret
0x000000000017088b : jl 0x170894 ; neg eax ; ret
0x000000000018a7f5 : jl 0x18a7ef ; jmp rdx
0x000000000018a7f9 : jl 0x18a7f3 ; jmp rdx
0x000000000018a7fd : jl 0x18a7f7 ; jmp rdx
0x000000000018a801 : jl 0x18a7fb ; jmp rdx
0x000000000018a80d : jl 0x18a807 ; jmp rax
0x000000000018a815 : jl 0x18a80f ; jmp rdx
0x000000000018a819 : jl 0x18a813 ; jmp rdx
0x000000000018a81d : jl 0x18a817 ; jmp rdx
0x000000000018a821 : jl 0x18a81b ; jmp rdx
0x000000000018a825 : jl 0x18a81f ; jmp rdx
0x000000000018a829 : jl 0x18a823 ; jmp rdx
0x000000000018a82d : jl 0x18a827 ; jmp rdx
0x000000000018a831 : jl 0x18a82b ; jmp rdx
0x000000000018a835 : jl 0x18a82f ; jmp rdx
0x000000000018a839 : jl 0x18a833 ; jmp rdx
0x000000000018a83d : jl 0x18a837 ; jmp rdx
0x000000000018a841 : jl 0x18a83b ; jmp rdx
0x000000000018a845 : jl 0x18a83f ; jmp rdx
0x000000000018a849 : jl 0x18a843 ; jmp rdx
0x000000000018a84d : jl 0x18a84b ; lcall ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x000000000018a855 : jl 0x18a853 ; dec dword ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x000000000018a85d : jl 0x18a857 ; jmp rdx
0x000000000018a861 : jl 0x18a85b ; jmp rdx
0x000000000018a865 : jl 0x18a85f ; jmp rdx
0x000000000018a869 : jl 0x18a863 ; jmp rdx
0x000000000018a86d : jl 0x18a867 ; jmp rdx
0x000000000018a871 : jl 0x18a86b ; jmp rdx
0x000000000018a875 : jl 0x18a86f ; jmp rdx
0x000000000018a879 : jl 0x18a873 ; jmp rdx
0x000000000018a87d : jl 0x18a877 ; jmp rdx
0x000000000018a881 : jl 0x18a87b ; jmp rdx
0x000000000018a885 : jl 0x18a87f ; jmp rdx
0x000000000018a891 : jl 0x18a88b ; jmp rdx
0x000000000018a895 : jl 0x18a88f ; jmp rdx
0x000000000018a899 : jl 0x18a893 ; jmp rdx
0x000000000018a89d : jl 0x18a897 ; jmp rdx
0x000000000018a8b5 : jl 0x18a8af ; jmp qword ptr [rdx]
0x000000000018a8b9 : jl 0x18a8b3 ; jmp qword ptr [rdx]
0x000000000018a8bd : jl 0x18a8b7 ; jmp qword ptr [rdx]
0x000000000018a8c1 : jl 0x18a8bb ; jmp qword ptr [rdx]
0x000000000018a8d5 : jl 0x18a8cf ; jmp qword ptr [rdx]
0x000000000018a8d9 : jl 0x18a8d3 ; jmp qword ptr [rdx]
0x000000000018a8dd : jl 0x18a8d7 ; jmp qword ptr [rdx]
0x000000000018a8e1 : jl 0x18a8db ; jmp qword ptr [rdx]
0x000000000018a8e5 : jl 0x18a8df ; jmp qword ptr [rdx]
0x000000000018a8e9 : jl 0x18a8e3 ; jmp qword ptr [rdx]
0x000000000018a8ed : jl 0x18a8e7 ; jmp qword ptr [rdx]
0x000000000018a8f1 : jl 0x18a8eb ; jmp qword ptr [rdx]
0x000000000018a8f5 : jl 0x18a8ef ; jmp qword ptr [rdx]
0x000000000018a8f9 : jl 0x18a8f3 ; jmp qword ptr [rdx]
0x000000000018a8fd : jl 0x18a8f7 ; jmp qword ptr [rdx]
0x000000000018a901 : jl 0x18a8fb ; jmp qword ptr [rdx]
0x000000000018a905 : jl 0x18a8ff ; jmp qword ptr [rdx]
0x000000000018a909 : jl 0x18a903 ; jmp qword ptr [rdx]
0x000000000018a91d : jl 0x18a917 ; jmp qword ptr [rdx]
0x000000000018a921 : jl 0x18a91b ; jmp qword ptr [rdx]
0x000000000018a925 : jl 0x18a91f ; jmp qword ptr [rdx]
0x000000000018a929 : jl 0x18a923 ; jmp qword ptr [rdx]
0x000000000018a92d : jl 0x18a927 ; jmp qword ptr [rdx]
0x000000000018a931 : jl 0x18a92b ; jmp qword ptr [rdx]
0x000000000018a935 : jl 0x18a92f ; jmp qword ptr [rdx]
0x000000000018a939 : jl 0x18a933 ; jmp qword ptr [rdx]
0x000000000018a93d : jl 0x18a937 ; jmp qword ptr [rdx]
0x000000000018a941 : jl 0x18a93b ; jmp qword ptr [rdx]
0x000000000018a945 : jl 0x18a93f ; jmp qword ptr [rdx]
0x000000000018a951 : jl 0x18a94b ; jmp qword ptr [rdx]
0x000000000018a955 : jl 0x18a94f ; jmp qword ptr [rdx]
0x000000000018a959 : jl 0x18a953 ; jmp qword ptr [rdx]
0x000000000018a95d : jl 0x18a957 ; jmp qword ptr [rdx]
0x0000000000194f69 : jl 0x194f6c ; call qword ptr [rax + 0x10fffb7d]
0x0000000000195f25 : jl 0x195f25 ; call qword ptr [rdx]
0x0000000000195f29 : jl 0x195f2d ; call qword ptr [rdx + 0x12fffc7b]
0x0000000000196065 : jl 0x196065 ; jmp rax
0x00000000001960a5 : jl 0x1960a5 ; call rax
0x0000000000198e7c : jl 0x198ee2 ; add dword ptr [rax], eax ; adc al, 0x91 ; hlt ; jmp rsp
0x000000000019a0e4 : jl 0x19a0b1 ; add dword ptr [rax], eax ; test bl, ah ; idiv edi ; xchg eax, esp ; ret 1
0x000000000019ab9c : jl 0x19abb3 ; add al, byte ptr [rax] ; stc ; call rsp
0x000000000019b8c4 : jl 0x19b8d2 ; add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019baac : jl 0x19ba7e ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x000000000019dbb4 : jl 0x19dbdd ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0x17], dl ; jmp rdx
0x000000000019e569 : jl 0x19e556 ; jmp qword ptr [rsi]
0x000000000019e599 : jl 0x19e586 ; jmp rsp
0x000000000019ecb4 : jl 0x19ecee ; add byte ptr [rax], al ; clc ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000001a7ed0 : jl 0x1a7ed7 ; add byte ptr [rax], al ; pushfq ; ret
0x00000000001adbb4 : jl 0x1adbdd ; add dword ptr [rax], eax ; pop rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001b2bb4 : jl 0x1b2c2d ; add dword ptr [rax], eax ; call 0x271b24dc
0x00000000001bc1b4 : jl 0x1bc1c3 ; add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x0000000000024366 : jl 0x24394 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d01 : jl 0x24d2f ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002510f : jl 0x2513d ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000025e3 : jl 0x2576 ; loop 0x25c1 ; ret 0x23cb
0x0000000000025f30 : jl 0x25f5e ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000026869 : jl 0x26892 ; call rbx
0x0000000000026ca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfd : jl 0x27c2b ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002a278 : jl 0x2a2a3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x00000000000517b8 : jl 0x51782 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000072a25 : jl 0x729c1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007a78b : jl 0x7a7d6 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000879d0 : jl 0x879da ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00000000000898b0 : jl 0x8992d ; add dword ptr [rax], eax ; ret
0x0000000000095125 : jl 0x95150 ; adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x000000000009f11a : jl 0x9f185 ; add rax, rdi ; ret
0x000000000009f12a : jl 0x9f187 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009f14a : jl 0x9f187 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009f16a : jl 0x9f187 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009fae4 : jl 0x9fb33 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fb20 : jl 0x9fb6f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000009fd1e : jl 0x9fd6d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fe85 : jl 0x9fed4 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009ffe7 : jl 0xa0036 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000a0237 : jl 0xa0286 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0273 : jl 0xa02c2 ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a0471 : jl 0xa04c0 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a05d8 : jl 0xa0627 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a073a : jl 0xa0789 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000a0984 : jl 0xa09d3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a09c0 : jl 0xa0a0f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a0bbe : jl 0xa0c0d ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0d25 : jl 0xa0d74 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0e87 : jl 0xa0ed6 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000aa58c : jl 0xaa5db ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5ad : jl 0xaa5fc ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5c0 : jl 0xaa60f ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa695 : jl 0xaa6e4 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa6ed : jl 0xaa73c ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000aa78a : jl 0xaa7d9 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000c0200 : jl 0xc0257 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c45e9 : jl 0xc4614 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000c92b0 : jl 0xc92de ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000e1c99 : jl 0xe1cc5 ; add rax, rdx ; jmp rax
0x00000000000e31b0 : jl 0xe31db ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000e3ec7 : jl 0xe3ef6 ; sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000f360f : jl 0xf363a ; and al, ch ; xchg eax, ecx ; ret 0xfff2
0x00000000000f4395 : jl 0xf43c0 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f7674 : jl 0xf76a0 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000f7674 : jl 0xf76a1 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000fb16f : jl 0xfb177 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x0000000000137cc8 : jle 0x137ce0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014a716 : jle 0x14a631 ; movsxd rax, ecx ; ret
0x000000000014a95a : jle 0x14a89b ; ret
0x00000000001887a1 : jle 0x188798 ; jmp rdi
0x000000000018a851 : jle 0x18a84b ; jmp rdx
0x000000000018a859 : jle 0x18a853 ; jmp rdx
0x000000000018a858 : jle 0x18a854 ; jmp rdx
0x0000000000195f15 : jle 0x195f15 ; jmp qword ptr [rdx]
0x0000000000195f19 : jle 0x195f1d ; call qword ptr [rdx + 0x12fffc7d]
0x0000000000196095 : jle 0x196095 ; jmp rax
0x0000000000196d9d : jle 0x196da5 ; add byte ptr [rbx + rdi*8 - 0x17], al ; jmp rsp
0x00000000001a6831 : jle 0x1a6823 ; jmp qword ptr [rcx]
0x00000000001a7951 : jle 0x1a7944 ; call qword ptr [rdi]
0x00000000001aca01 : jle 0x1aca0f ; ret
0x000000000002a6e2 : jle 0x2a6f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000003180 : jle 0x317e ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000005c4f6 : jle 0x5c577 ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000000684ec : jle 0x68479 ; ret
0x000000000008b79e : jle 0x8b7a7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008b79e : jle 0x8b7a8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b9f3e : jle 0xb9f5d ; add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000cd1fd : jle 0xcd20b ; ret
0x00000000000cda09 : jle 0xcda0f ; add byte ptr [rax], al ; ret
0x0000000000101e62 : jmp 0x101e28
0x0000000000106e42 : jmp 0x10631c
0x00000000001087aa : jmp 0x1087db
0x000000000010c904 : jmp 0x10c651
0x000000000010c934 : jmp 0x10c86c
0x000000000010e037 : jmp 0x10df5e
0x000000000010e750 : jmp 0x10e716
0x0000000000112853 : jmp 0x11264f
0x0000000000112b99 : jmp 0x112b5f
0x00000000001186a1 : jmp 0x118666
0x000000000011a3d2 : jmp 0x11a199
0x000000000011a792 : jmp 0x11a569
0x0000000000126a7c : jmp 0x126a41
0x00000000001322bf : jmp 0x132285
0x0000000000136a21 : jmp 0x1369f1
0x000000000013856e : jmp 0x138578
0x0000000000142590 : jmp 0x14227c
0x0000000000175862 : jmp 0x175864
0x0000000000175861 : jmp 0x175865
0x0000000000175866 : jmp 0x175868
0x0000000000175865 : jmp 0x175869
0x0000000000181e46 : jmp 0x181e48
0x0000000000181e4e : jmp 0x181e50
0x0000000000181e4a : jmp 0x181e50
0x0000000000181e46 : jmp 0x181e50
0x0000000000181e52 : jmp 0x181e5c
0x000000000018348a : jmp 0x1834c9
0x00000000001841c9 : jmp 0x18419c
0x00000000001851c0 : jmp 0x185154
0x00000000001851bf : jmp 0x185155
0x00000000001971b2 : jmp 0x1971b4
0x00000000001972aa : jmp 0x1972ac
0x00000000001972fa : jmp 0x1972fc
0x00000000001972f9 : jmp 0x1972fd
0x0000000000197322 : jmp 0x197324
0x00000000001a06c2 : jmp 0x1a06c4
0x00000000001a06c1 : jmp 0x1a06c5
0x00000000001a06c0 : jmp 0x1a06c6
0x00000000001a0712 : jmp 0x1a0714
0x00000000001a0a62 : jmp 0x1a0a64
0x00000000001a0b1a : jmp 0x1a0b1c
0x00000000001a0b9a : jmp 0x1a0b9c
0x000000000019d9da : jmp 0x1b9ce0
0x000000000019d9d9 : jmp 0x1b9ce1
0x000000000001fb07 : jmp 0x1facd
0x0000000000020496 : jmp 0x2045b
0x0000000000026a1b : jmp 0x2682e
0x000000000002a8f1 : jmp 0x2a85f
0x0000000000037b81 : jmp 0x37b8b
0x00000000000038b3 : jmp 0x3879
0x000000000003af85 : jmp 0x39c63093
0x000000000009a60f : jmp 0x440b6899
0x0000000000048392 : jmp 0x483e4
0x00000000000e8270 : jmp 0x48d10bc0
0x0000000000133bd2 : jmp 0x48d2fe62
0x00000000000701a2 : jmp 0x48f58af5
0x0000000000049f72 : jmp 0x49fc4
0x000000000004f267 : jmp 0x4f243
0x000000000015af6a : jmp 0x4f94bf68
0x000000000015af69 : jmp 0x4f94bf69
0x000000000015da3a : jmp 0x4f94ea38
0x000000000015da39 : jmp 0x4f94ea39
0x000000000016055a : jmp 0x4f951558
0x0000000000160559 : jmp 0x4f951559
0x000000000005f811 : jmp 0x5baf2
0x000000000005c46c : jmp 0x5c431
0x0000000000060852 : jmp 0x5ca99
0x000000000005fb8a : jmp 0x5fb4f
0x000000000006045e : jmp 0x60423
0x0000000000062809 : jmp 0x627ce
0x0000000000067498 : jmp 0x636fe
0x0000000000065b8b : jmp 0x63702
0x00000000000668b1 : jmp 0x63702
0x0000000000068daa : jmp 0x64b91
0x0000000000065aca : jmp 0x64bf7
0x0000000000065ac9 : jmp 0x64bf8
0x000000000006597b : jmp 0x653d3
0x0000000000069613 : jmp 0x6585f
0x0000000000069f5b : jmp 0x661e6
0x0000000000072feb : jmp 0x72fb1
0x0000000000072fea : jmp 0x72fb2
0x0000000000117714 : jmp 0x76d3b064
0x00000000001178c7 : jmp 0x76d3b217
0x000000000007b5de : jmp 0x7b5c0
0x000000000007ef54 : jmp 0x7ef7e
0x0000000000081b09 : jmp 0x81461
0x0000000000081a8f : jmp 0x8196c
0x0000000000196912 : jmp 0x83361f
0x0000000000083b65 : jmp 0x83b8e
0x00000000000842aa : jmp 0x841f7
0x000000000019693a : jmp 0x843647
0x000000000019697a : jmp 0x853687
0x0000000000086ae1 : jmp 0x86aa9
0x00000000000886e2 : jmp 0x886a8
0x000000000008885a : jmp 0x8881f
0x0000000000196aaa : jmp 0x88ffb7
0x0000000000089b54 : jmp 0x89b1a
0x0000000000089ca8 : jmp 0x89c6d
0x000000000009614b : jmp 0x95fa1
0x00000000000967fc : jmp 0x967c2
0x0000000000096948 : jmp 0x9690d
0x0000000000096af2 : jmp 0x96ab7
0x0000000000196d42 : jmp 0x970a4f
0x000000000009a944 : jmp 0x9a94e
0x000000000009ae20 : jmp 0x9ae2a
0x000000000009d9c2 : jmp 0x9d36a
0x000000000009e3fc : jmp 0x9d3f2
0x000000000009d4e1 : jmp 0x9d40f
0x000000000009e3fd : jmp 0x9e3f3
0x00000000000aa32e : jmp 0xaa2f4
0x00000000000aa3ff : jmp 0xaa3c5
0x00000000000aa46e : jmp 0xaa434
0x00000000000adfd4 : jmp 0xaddb7
0x00000000000ae3e3 : jmp 0xae217
0x00000000000b7814 : jmp 0xb7861
0x00000000000bf715 : jmp 0xbb943
0x00000000000bf1eb : jmp 0xbf1b0
0x00000000000c012c : jmp 0xbff1d
0x00000000000c038e : jmp 0xbff1d
0x00000000000c1ced : jmp 0xbff1d
0x00000000000c254e : jmp 0xc23a0
0x00000000000c84c0 : jmp 0xc8486
0x00000000000ca7b7 : jmp 0xca686
0x00000000000cd215 : jmp 0xcf9db
0x00000000000d51d1 : jmp 0xd51cb
0x00000000000d7cab : jmp 0xd7c71
0x00000000001079b4 : jmp 0xf1079bd
0x00000000000467dd : jmp 0xfc6fef4
0x00000000000ff661 : jmp 0xff668
0x000000000013777a : jmp 0xffffffff80d66e92
0x0000000000137a01 : jmp 0xffffffff80d67119
0x0000000000003186 : jmp 0xffffffff88c2d331
0x00000000000be4d8 : jmp 0xffffffffbece6e28
0x000000000012aa22 : jmp 0xffffffffc0987e2d
0x00000000000da622 : jmp 0xffffffffc296e733
0x0000000000139966 : jmp 0xffffffffc29d996b
0x00000000000abb73 : jmp 0xffffffffc30abb7c
0x0000000000048a91 : jmp 0xffffffffc31413e6
0x0000000000099d43 : jmp 0xffffffffc332e64d
0x000000000004b513 : jmp 0xffffffffe804c96f
0x00000000000ad66b : jmp 0xfffffffffffa5fbc
0x00000000000fe5bb : jmp qword ptr [r8]
0x0000000000195b53 : jmp qword ptr [rax + 0x20fffc58]
0x00000000001968e3 : jmp qword ptr [rax + rbp*2 + 0x5cf40000]
0x0000000000188cd3 : jmp qword ptr [rax + rbp*4 - 0xd]
0x0000000000188cd2 : jmp qword ptr [rax + rbp*4 - 0xd]
0x0000000000187dff : jmp qword ptr [rax - 0x2f000e15]
0x0000000000189fdb : jmp qword ptr [rax - 0x3f000a7f]
0x0000000000187de7 : jmp qword ptr [rax - 0x3f000e16]
0x0000000000187dc7 : jmp qword ptr [rax - 0x3f000e17]
0x0000000000187da7 : jmp qword ptr [rax - 0x3f000e18]
0x000000000004606e : jmp qword ptr [rax]
0x000000000004606d : jmp qword ptr [rax]
0x00000000000469a8 : jmp qword ptr [rax]
0x000000000004b966 : jmp qword ptr [rax]
0x000000000004b9db : jmp qword ptr [rax]
0x000000000004c299 : jmp qword ptr [rax]
0x000000000004c53a : jmp qword ptr [rax]
0x000000000004d5bf : jmp qword ptr [rax]
0x000000000004dbee : jmp qword ptr [rax]
0x000000000004dc9c : jmp qword ptr [rax]
0x000000000004e0e4 : jmp qword ptr [rax]
0x000000000004e0f3 : jmp qword ptr [rax]
0x000000000004f9b7 : jmp qword ptr [rax]
0x000000000004fb2f : jmp qword ptr [rax]
0x0000000000058d96 : jmp qword ptr [rax]
0x00000000000599cb : jmp qword ptr [rax]
0x000000000005a066 : jmp qword ptr [rax]
0x000000000005a1ef : jmp qword ptr [rax]
0x000000000005a2f1 : jmp qword ptr [rax]
0x000000000005a8c9 : jmp qword ptr [rax]
0x000000000005afc2 : jmp qword ptr [rax]
0x00000000000830c9 : jmp qword ptr [rax]
0x0000000000083ac8 : jmp qword ptr [rax]
0x0000000000083b2c : jmp qword ptr [rax]
0x0000000000084be5 : jmp qword ptr [rax]
0x0000000000085f85 : jmp qword ptr [rax]
0x0000000000086775 : jmp qword ptr [rax]
0x00000000000e1b29 : jmp qword ptr [rax]
0x00000000000f607b : jmp qword ptr [rax]
0x00000000000fe5bc : jmp qword ptr [rax]
0x000000000010e65e : jmp qword ptr [rax]
0x000000000010e65d : jmp qword ptr [rax]
0x00000000001244e6 : jmp qword ptr [rax]
0x0000000000175313 : jmp qword ptr [rax]
0x0000000000186c7b : jmp qword ptr [rax]
0x000000000018704b : jmp qword ptr [rax]
0x00000000001879d7 : jmp qword ptr [rax]
0x0000000000187b57 : jmp qword ptr [rax]
0x0000000000187d97 : jmp qword ptr [rax]
0x0000000000187db7 : jmp qword ptr [rax]
0x0000000000187dd7 : jmp qword ptr [rax]
0x0000000000187e1f : jmp qword ptr [rax]
0x0000000000187e5b : jmp qword ptr [rax]
0x0000000000187e7f : jmp qword ptr [rax]
0x0000000000187ed3 : jmp qword ptr [rax]
0x0000000000187f7f : jmp qword ptr [rax]
0x0000000000187fcb : jmp qword ptr [rax]
0x0000000000188017 : jmp qword ptr [rax]
0x00000000001880a7 : jmp qword ptr [rax]
0x0000000000194e73 : jmp qword ptr [rax]
0x0000000000194eef : jmp qword ptr [rax]
0x0000000000194f17 : jmp qword ptr [rax]
0x0000000000194fc7 : jmp qword ptr [rax]
0x000000000019508f : jmp qword ptr [rax]
0x00000000001950bb : jmp qword ptr [rax]
0x00000000001951cf : jmp qword ptr [rax]
0x000000000019529b : jmp qword ptr [rax]
0x0000000000195303 : jmp qword ptr [rax]
0x0000000000195307 : jmp qword ptr [rax]
0x000000000019530b : jmp qword ptr [rax]
0x000000000019531b : jmp qword ptr [rax]
0x0000000000195333 : jmp qword ptr [rax]
0x000000000019535b : jmp qword ptr [rax]
0x000000000019538f : jmp qword ptr [rax]
0x00000000001953af : jmp qword ptr [rax]
0x00000000001953ef : jmp qword ptr [rax]
0x0000000000195443 : jmp qword ptr [rax]
0x0000000000195447 : jmp qword ptr [rax]
0x000000000019544b : jmp qword ptr [rax]
0x0000000000195477 : jmp qword ptr [rax]
0x00000000001954df : jmp qword ptr [rax]
0x0000000000195527 : jmp qword ptr [rax]
0x000000000019557b : jmp qword ptr [rax]
0x000000000019561f : jmp qword ptr [rax]
0x00000000001956f3 : jmp qword ptr [rax]
0x0000000000195747 : jmp qword ptr [rax]
0x0000000000195753 : jmp qword ptr [rax]
0x000000000019596b : jmp qword ptr [rax]
0x0000000000195b57 : jmp qword ptr [rax]
0x0000000000195c7f : jmp qword ptr [rax]
0x0000000000195e4f : jmp qword ptr [rax]
0x0000000000195e57 : jmp qword ptr [rax]
0x0000000000195ec7 : jmp qword ptr [rax]
0x00000000001960cb : jmp qword ptr [rax]
0x000000000019610f : jmp qword ptr [rax]
0x0000000000196177 : jmp qword ptr [rax]
0x000000000019d553 : jmp qword ptr [rax]
0x000000000019f033 : jmp qword ptr [rax]
0x00000000001a0b9b : jmp qword ptr [rax]
0x00000000001a2acb : jmp qword ptr [rax]
0x00000000001a3863 : jmp qword ptr [rax]
0x00000000001a4b2b : jmp qword ptr [rax]
0x00000000001a4e1b : jmp qword ptr [rax]
0x00000000001a7623 : jmp qword ptr [rax]
0x00000000001a860b : jmp qword ptr [rax]
0x00000000001a9473 : jmp qword ptr [rax]
0x00000000001ad133 : jmp qword ptr [rax]
0x00000000001ad14b : jmp qword ptr [rax]
0x00000000001ad163 : jmp qword ptr [rax]
0x00000000001b8a83 : jmp qword ptr [rax]
0x00000000001b8ef3 : jmp qword ptr [rax]
0x00000000001b8f83 : jmp qword ptr [rax]
0x000000000019529b : jmp qword ptr [rax]
0x0000000000194e73 : jmp qword ptr [rax]
0x0000000000194fc7 : jmp qword ptr [rax]
0x000000000019a11b : jmp qword ptr [rbx + rax*8]
0x000000000005ec58 : jmp qword ptr [rbx + rcx*4 + 1]
0x0000000000002563 : jmp qword ptr [rbx]
0x0000000000188cc7 : jmp qword ptr [rbx]
0x0000000000188cc6 : jmp qword ptr [rbx]
0x00000000001890c3 : jmp qword ptr [rbx]
0x00000000001890c2 : jmp qword ptr [rbx]
0x0000000000189ff3 : jmp qword ptr [rbx]
0x000000000018a9cf : jmp qword ptr [rbx]
0x000000000019f01b : jmp qword ptr [rbx]
0x00000000001a49b3 : jmp qword ptr [rbx]
0x00000000001a7c6b : jmp qword ptr [rbx]
0x00000000001a803b : jmp qword ptr [rbx]
0x00000000001a922b : jmp qword ptr [rbx]
0x00000000001aed4b : jmp qword ptr [rbx]
0x00000000001afd1b : jmp qword ptr [rbx]
0x00000000001b0feb : jmp qword ptr [rbx]
0x00000000001b70db : jmp qword ptr [rbx]
0x00000000001bab23 : jmp qword ptr [rbx]
0x0000000000181dcb : jmp qword ptr [rcx]
0x0000000000186ce7 : jmp qword ptr [rcx]
0x0000000000186ceb : jmp qword ptr [rcx]
0x0000000000186cef : jmp qword ptr [rcx]
0x0000000000186cf3 : jmp qword ptr [rcx]
0x0000000000186cf7 : jmp qword ptr [rcx]
0x0000000000186cfb : jmp qword ptr [rcx]
0x0000000000186cff : jmp qword ptr [rcx]
0x0000000000186d03 : jmp qword ptr [rcx]
0x0000000000186d07 : jmp qword ptr [rcx]
0x0000000000186d0b : jmp qword ptr [rcx]
0x0000000000186d0f : jmp qword ptr [rcx]
0x0000000000186d13 : jmp qword ptr [rcx]
0x0000000000186d17 : jmp qword ptr [rcx]
0x0000000000186d1b : jmp qword ptr [rcx]
0x0000000000186d1f : jmp qword ptr [rcx]
0x0000000000186d23 : jmp qword ptr [rcx]
0x0000000000186d27 : jmp qword ptr [rcx]
0x0000000000186d2b : jmp qword ptr [rcx]
0x0000000000186d2f : jmp qword ptr [rcx]
0x0000000000186d33 : jmp qword ptr [rcx]
0x0000000000186d37 : jmp qword ptr [rcx]
0x0000000000186d3b : jmp qword ptr [rcx]
0x0000000000186d3f : jmp qword ptr [rcx]
0x0000000000186d43 : jmp qword ptr [rcx]
0x0000000000186d47 : jmp qword ptr [rcx]
0x0000000000186d4b : jmp qword ptr [rcx]
0x0000000000186d4f : jmp qword ptr [rcx]
0x0000000000186d57 : jmp qword ptr [rcx]
0x0000000000186d5f : jmp qword ptr [rcx]
0x0000000000186d6f : jmp qword ptr [rcx]
0x0000000000186d73 : jmp qword ptr [rcx]
0x0000000000186d77 : jmp qword ptr [rcx]
0x0000000000186d7b : jmp qword ptr [rcx]
0x0000000000186d7f : jmp qword ptr [rcx]
0x0000000000186d83 : jmp qword ptr [rcx]
0x0000000000186d87 : jmp qword ptr [rcx]
0x0000000000186d8b : jmp qword ptr [rcx]
0x0000000000186d8f : jmp qword ptr [rcx]
0x0000000000186d93 : jmp qword ptr [rcx]
0x0000000000186d97 : jmp qword ptr [rcx]
0x0000000000186d9f : jmp qword ptr [rcx]
0x0000000000186da3 : jmp qword ptr [rcx]
0x0000000000186da7 : jmp qword ptr [rcx]
0x0000000000186dab : jmp qword ptr [rcx]
0x0000000000186db3 : jmp qword ptr [rcx]
0x0000000000186db7 : jmp qword ptr [rcx]
0x0000000000186dbf : jmp qword ptr [rcx]
0x0000000000186dc3 : jmp qword ptr [rcx]
0x0000000000186dc7 : jmp qword ptr [rcx]
0x0000000000186dcb : jmp qword ptr [rcx]
0x0000000000186dcf : jmp qword ptr [rcx]
0x0000000000186dd7 : jmp qword ptr [rcx]
0x0000000000186def : jmp qword ptr [rcx]
0x0000000000186df7 : jmp qword ptr [rcx]
0x0000000000186dfb : jmp qword ptr [rcx]
0x0000000000186dff : jmp qword ptr [rcx]
0x0000000000186e03 : jmp qword ptr [rcx]
0x0000000000186e13 : jmp qword ptr [rcx]
0x0000000000186e17 : jmp qword ptr [rcx]
0x0000000000186e1f : jmp qword ptr [rcx]
0x0000000000186e27 : jmp qword ptr [rcx]
0x0000000000186e2b : jmp qword ptr [rcx]
0x0000000000188f0f : jmp qword ptr [rcx]
0x0000000000188f0e : jmp qword ptr [rcx]
0x0000000000189feb : jmp qword ptr [rcx]
0x000000000019c353 : jmp qword ptr [rcx]
0x000000000019de13 : jmp qword ptr [rcx]
0x000000000019e223 : jmp qword ptr [rcx]
0x000000000019e40b : jmp qword ptr [rcx]
0x000000000019f9f3 : jmp qword ptr [rcx]
0x00000000001a103b : jmp qword ptr [rcx]
0x00000000001a11b3 : jmp qword ptr [rcx]
0x00000000001a444b : jmp qword ptr [rcx]
0x00000000001a6233 : jmp qword ptr [rcx]
0x00000000001a6833 : jmp qword ptr [rcx]
0x00000000001a90eb : jmp qword ptr [rcx]
0x00000000001a938b : jmp qword ptr [rcx]
0x00000000001a9503 : jmp qword ptr [rcx]
0x00000000001a9953 : jmp qword ptr [rcx]
0x00000000001a996b : jmp qword ptr [rcx]
0x00000000001aabe3 : jmp qword ptr [rcx]
0x00000000001aace3 : jmp qword ptr [rcx]
0x00000000001aadcb : jmp qword ptr [rcx]
0x00000000001ab013 : jmp qword ptr [rcx]
0x00000000001ab08b : jmp qword ptr [rcx]
0x00000000001ab0a3 : jmp qword ptr [rcx]
0x00000000001ab103 : jmp qword ptr [rcx]
0x00000000001ab11b : jmp qword ptr [rcx]
0x00000000001ab133 : jmp qword ptr [rcx]
0x00000000001ab14b : jmp qword ptr [rcx]
0x00000000001acdab : jmp qword ptr [rcx]
0x00000000001acdaa : jmp qword ptr [rcx]
0x00000000001acdc3 : jmp qword ptr [rcx]
0x00000000001acdc2 : jmp qword ptr [rcx]
0x00000000001acddb : jmp qword ptr [rcx]
0x00000000001acdda : jmp qword ptr [rcx]
0x00000000001acdf3 : jmp qword ptr [rcx]
0x00000000001acdf2 : jmp qword ptr [rcx]
0x00000000001ace0b : jmp qword ptr [rcx]
0x00000000001ace0a : jmp qword ptr [rcx]
0x00000000001ace23 : jmp qword ptr [rcx]
0x00000000001ace22 : jmp qword ptr [rcx]
0x00000000001ace3b : jmp qword ptr [rcx]
0x00000000001ace3a : jmp qword ptr [rcx]
0x00000000001ace53 : jmp qword ptr [rcx]
0x00000000001ace52 : jmp qword ptr [rcx]
0x00000000001ad9ab : jmp qword ptr [rcx]
0x00000000001ada13 : jmp qword ptr [rcx]
0x00000000001adaeb : jmp qword ptr [rcx]
0x00000000001adb03 : jmp qword ptr [rcx]
0x00000000001adba3 : jmp qword ptr [rcx]
0x00000000001adbbb : jmp qword ptr [rcx]
0x00000000001adc03 : jmp qword ptr [rcx]
0x00000000001adc1b : jmp qword ptr [rcx]
0x00000000001add43 : jmp qword ptr [rcx]
0x00000000001ade33 : jmp qword ptr [rcx]
0x00000000001ade9b : jmp qword ptr [rcx]
0x00000000001adeb3 : jmp qword ptr [rcx]
0x00000000001adecb : jmp qword ptr [rcx]
0x00000000001adee3 : jmp qword ptr [rcx]
0x00000000001adefb : jmp qword ptr [rcx]
0x00000000001adf2b : jmp qword ptr [rcx]
0x00000000001adf43 : jmp qword ptr [rcx]
0x00000000001ae00b : jmp qword ptr [rcx]
0x00000000001ae023 : jmp qword ptr [rcx]
0x00000000001ae03b : jmp qword ptr [rcx]
0x00000000001ae1b3 : jmp qword ptr [rcx]
0x00000000001ae1e3 : jmp qword ptr [rcx]
0x00000000001ae1fb : jmp qword ptr [rcx]
0x00000000001ae213 : jmp qword ptr [rcx]
0x00000000001ae243 : jmp qword ptr [rcx]
0x00000000001ae25b : jmp qword ptr [rcx]
0x00000000001ae273 : jmp qword ptr [rcx]
0x00000000001aea33 : jmp qword ptr [rcx]
0x00000000001aea4b : jmp qword ptr [rcx]
0x00000000001aea63 : jmp qword ptr [rcx]
0x00000000001aeb3b : jmp qword ptr [rcx]
0x00000000001aec0b : jmp qword ptr [rcx]
0x00000000001aedab : jmp qword ptr [rcx]
0x00000000001aedfb : jmp qword ptr [rcx]
0x00000000001aee8b : jmp qword ptr [rcx]
0x00000000001aeea3 : jmp qword ptr [rcx]
0x00000000001aeed3 : jmp qword ptr [rcx]
0x00000000001aef03 : jmp qword ptr [rcx]
0x00000000001aef9b : jmp qword ptr [rcx]
0x00000000001aefb3 : jmp qword ptr [rcx]
0x00000000001aefcb : jmp qword ptr [rcx]
0x00000000001af3ab : jmp qword ptr [rcx]
0x00000000001af3c3 : jmp qword ptr [rcx]
0x00000000001af91b : jmp qword ptr [rcx]
0x00000000001af933 : jmp qword ptr [rcx]
0x00000000001af963 : jmp qword ptr [rcx]
0x00000000001af97b : jmp qword ptr [rcx]
0x00000000001af9ab : jmp qword ptr [rcx]
0x00000000001af9c3 : jmp qword ptr [rcx]
0x00000000001af9db : jmp qword ptr [rcx]
0x00000000001af9f3 : jmp qword ptr [rcx]
0x00000000001b0563 : jmp qword ptr [rcx]
0x00000000001b057b : jmp qword ptr [rcx]
0x00000000001b05c3 : jmp qword ptr [rcx]
0x00000000001b05f3 : jmp qword ptr [rcx]
0x00000000001b060b : jmp qword ptr [rcx]
0x00000000001b063b : jmp qword ptr [rcx]
0x00000000001b06eb : jmp qword ptr [rcx]
0x00000000001b0703 : jmp qword ptr [rcx]
0x00000000001b0793 : jmp qword ptr [rcx]
0x00000000001b07c3 : jmp qword ptr [rcx]
0x00000000001b07db : jmp qword ptr [rcx]
0x00000000001b07f3 : jmp qword ptr [rcx]
0x00000000001b080b : jmp qword ptr [rcx]
0x00000000001b093b : jmp qword ptr [rcx]
0x00000000001b0953 : jmp qword ptr [rcx]
0x00000000001b096b : jmp qword ptr [rcx]
0x00000000001b09b3 : jmp qword ptr [rcx]
0x00000000001b09cb : jmp qword ptr [rcx]
0x00000000001b09e3 : jmp qword ptr [rcx]
0x00000000001b09fb : jmp qword ptr [rcx]
0x00000000001b0a13 : jmp qword ptr [rcx]
0x00000000001b0a2b : jmp qword ptr [rcx]
0x00000000001b0a43 : jmp qword ptr [rcx]
0x00000000001b0a5b : jmp qword ptr [rcx]
0x00000000001b0aa3 : jmp qword ptr [rcx]
0x00000000001b0ad3 : jmp qword ptr [rcx]
0x00000000001b0aeb : jmp qword ptr [rcx]
0x00000000001b0b03 : jmp qword ptr [rcx]
0x00000000001b0b1b : jmp qword ptr [rcx]
0x00000000001b0b33 : jmp qword ptr [rcx]
0x00000000001b0b7b : jmp qword ptr [rcx]
0x00000000001b0b93 : jmp qword ptr [rcx]
0x00000000001b0c0b : jmp qword ptr [rcx]
0x00000000001b0c3b : jmp qword ptr [rcx]
0x00000000001b0c53 : jmp qword ptr [rcx]
0x00000000001b0c83 : jmp qword ptr [rcx]
0x00000000001b0cb3 : jmp qword ptr [rcx]
0x00000000001b0ccb : jmp qword ptr [rcx]
0x00000000001b0d13 : jmp qword ptr [rcx]
0x00000000001b0d8b : jmp qword ptr [rcx]
0x00000000001b0dbb : jmp qword ptr [rcx]
0x00000000001b0dd3 : jmp qword ptr [rcx]
0x00000000001b0e03 : jmp qword ptr [rcx]
0x00000000001b0f23 : jmp qword ptr [rcx]
0x00000000001b0f3b : jmp qword ptr [rcx]
0x00000000001b1153 : jmp qword ptr [rcx]
0x00000000001b116b : jmp qword ptr [rcx]
0x00000000001b1183 : jmp qword ptr [rcx]
0x00000000001b119b : jmp qword ptr [rcx]
0x00000000001b11e3 : jmp qword ptr [rcx]
0x00000000001b11fb : jmp qword ptr [rcx]
0x00000000001b1213 : jmp qword ptr [rcx]
0x00000000001b122b : jmp qword ptr [rcx]
0x00000000001b131b : jmp qword ptr [rcx]
0x00000000001b5e73 : jmp qword ptr [rcx]
0x00000000001b7173 : jmp qword ptr [rcx]
0x00000000001baebb : jmp qword ptr [rcx]
0x00000000001bb92b : jmp qword ptr [rcx]
0x000000000019b65b : jmp qword ptr [rdi + rdx*2 - 0x3cebfffe]
0x00000000000f4893 : jmp qword ptr [rdi]
0x0000000000143eb4 : jmp qword ptr [rdi]
0x0000000000181e47 : jmp qword ptr [rdi]
0x0000000000185a84 : jmp qword ptr [rdi]
0x00000000001860fb : jmp qword ptr [rdi]
0x000000000018617b : jmp qword ptr [rdi]
0x00000000001861fb : jmp qword ptr [rdi]
0x000000000018627b : jmp qword ptr [rdi]
0x00000000001862fb : jmp qword ptr [rdi]
0x000000000018637b : jmp qword ptr [rdi]
0x00000000001892e7 : jmp qword ptr [rdi]
0x000000000019ccd3 : jmp qword ptr [rdi]
0x00000000001a372b : jmp qword ptr [rdi]
0x00000000001a5f13 : jmp qword ptr [rdi]
0x00000000001a7d5b : jmp qword ptr [rdi]
0x00000000001a824b : jmp qword ptr [rdi]
0x00000000001aa00b : jmp qword ptr [rdi]
0x00000000001aa10b : jmp qword ptr [rdi]
0x00000000001ab20b : jmp qword ptr [rdi]
0x00000000001abb13 : jmp qword ptr [rdi]
0x00000000001acbdb : jmp qword ptr [rdi]
0x00000000001acbda : jmp qword ptr [rdi]
0x00000000001b58d3 : jmp qword ptr [rdi]
0x00000000001b5b03 : jmp qword ptr [rdi]
0x0000000000181e47 : jmp qword ptr [rdi]
0x0000000000196443 : jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000195f13 : jmp qword ptr [rdx + 0x22fffc7e]
0x000000000019581f : jmp qword ptr [rdx + 0x32fffc60]
0x000000000019a0db : jmp qword ptr [rdx + rax*8 + 1]
0x000000000006ab58 : jmp qword ptr [rdx]
0x00000000000f4812 : jmp qword ptr [rdx]
0x0000000000186e23 : jmp qword ptr [rdx]
0x0000000000188f13 : jmp qword ptr [rdx]
0x0000000000188f12 : jmp qword ptr [rdx]
0x000000000018a8ab : jmp qword ptr [rdx]
0x000000000018a8b3 : jmp qword ptr [rdx]
0x000000000018a8b7 : jmp qword ptr [rdx]
0x000000000018a8bb : jmp qword ptr [rdx]
0x000000000018a8bf : jmp qword ptr [rdx]
0x000000000018a8c3 : jmp qword ptr [rdx]
0x000000000018a8cb : jmp qword ptr [rdx]
0x000000000018a8d3 : jmp qword ptr [rdx]
0x000000000018a8d7 : jmp qword ptr [rdx]
0x000000000018a8db : jmp qword ptr [rdx]
0x000000000018a8df : jmp qword ptr [rdx]
0x000000000018a8e3 : jmp qword ptr [rdx]
0x000000000018a8e7 : jmp qword ptr [rdx]
0x000000000018a8eb : jmp qword ptr [rdx]
0x000000000018a8ef : jmp qword ptr [rdx]
0x000000000018a8f3 : jmp qword ptr [rdx]
0x000000000018a8f7 : jmp qword ptr [rdx]
0x000000000018a8fb : jmp qword ptr [rdx]
0x000000000018a8ff : jmp qword ptr [rdx]
0x000000000018a903 : jmp qword ptr [rdx]
0x000000000018a907 : jmp qword ptr [rdx]
0x000000000018a90b : jmp qword ptr [rdx]
0x000000000018a913 : jmp qword ptr [rdx]
0x000000000018a91b : jmp qword ptr [rdx]
0x000000000018a91f : jmp qword ptr [rdx]
0x000000000018a923 : jmp qword ptr [rdx]
0x000000000018a927 : jmp qword ptr [rdx]
0x000000000018a92b : jmp qword ptr [rdx]
0x000000000018a92f : jmp qword ptr [rdx]
0x000000000018a933 : jmp qword ptr [rdx]
0x000000000018a937 : jmp qword ptr [rdx]
0x000000000018a93b : jmp qword ptr [rdx]
0x000000000018a93f : jmp qword ptr [rdx]
0x000000000018a943 : jmp qword ptr [rdx]
0x000000000018a947 : jmp qword ptr [rdx]
0x000000000018a94f : jmp qword ptr [rdx]
0x000000000018a953 : jmp qword ptr [rdx]
0x000000000018a957 : jmp qword ptr [rdx]
0x000000000018a95b : jmp qword ptr [rdx]
0x000000000018a95f : jmp qword ptr [rdx]
0x000000000019583f : jmp qword ptr [rdx]
0x0000000000195a47 : jmp qword ptr [rdx]
0x0000000000195a4f : jmp qword ptr [rdx]
0x0000000000195d2b : jmp qword ptr [rdx]
0x0000000000195f17 : jmp qword ptr [rdx]
0x0000000000196223 : jmp qword ptr [rdx]
0x000000000019c203 : jmp qword ptr [rdx]
0x000000000019f04b : jmp qword ptr [rdx]
0x000000000019f07b : jmp qword ptr [rdx]
0x00000000001a0333 : jmp qword ptr [rdx]
0x00000000001a638b : jmp qword ptr [rdx]
0x00000000001a644b : jmp qword ptr [rdx]
0x00000000001a667b : jmp qword ptr [rdx]
0x00000000001a672b : jmp qword ptr [rdx]
0x00000000001afa53 : jmp qword ptr [rdx]
0x00000000001bafab : jmp qword ptr [rdx]
0x00000000001bb0ab : jmp qword ptr [rdx]
0x00000000001bb183 : jmp qword ptr [rdx]
0x00000000001bb343 : jmp qword ptr [rdx]
0x00000000001bb42b : jmp qword ptr [rdx]
0x0000000000039f01 : jmp qword ptr [rsi + 0xf]
0x000000000003c451 : jmp qword ptr [rsi + 0xf]
0x000000000003f721 : jmp qword ptr [rsi + 0xf]
0x00000000000aea31 : jmp qword ptr [rsi + 0xf]
0x00000000000b3b11 : jmp qword ptr [rsi + 0xf]
0x00000000000cea29 : jmp qword ptr [rsi + 0xf]
0x000000000012c589 : jmp qword ptr [rsi + 0xf]
0x00000000000242b1 : jmp qword ptr [rsi + 0xf]
0x0000000000026d59 : jmp qword ptr [rsi + 0xf]
0x00000000000613b1 : jmp qword ptr [rsi + 0xf]
0x0000000000067689 : jmp qword ptr [rsi + 0xf]
0x0000000000069c99 : jmp qword ptr [rsi + 0xf]
0x0000000000069d99 : jmp qword ptr [rsi + 0xf]
0x00000000000f8d11 : jmp qword ptr [rsi + 0xf]
0x000000000010c509 : jmp qword ptr [rsi + 0xf]
0x000000000010dc89 : jmp qword ptr [rsi + 0xf]
0x0000000000114651 : jmp qword ptr [rsi + 0xf]
0x00000000001175c9 : jmp qword ptr [rsi + 0xf]
0x000000000011bab9 : jmp qword ptr [rsi + 0xf]
0x000000000011c199 : jmp qword ptr [rsi + 0xf]
0x0000000000120df9 : jmp qword ptr [rsi + 0xf]
0x0000000000131f79 : jmp qword ptr [rsi + 0xf]
0x00000000001321a9 : jmp qword ptr [rsi + 0xf]
0x000000000019a063 : jmp qword ptr [rsi + rdi*4 + 1]
0x00000000000dc6ad : jmp qword ptr [rsi - 0x70]
0x0000000000189583 : jmp qword ptr [rsi]
0x000000000019579b : jmp qword ptr [rsi]
0x0000000000195cc7 : jmp qword ptr [rsi]
0x00000000001961bf : jmp qword ptr [rsi]
0x00000000001963cf : jmp qword ptr [rsi]
0x000000000019e013 : jmp qword ptr [rsi]
0x000000000019e56b : jmp qword ptr [rsi]
0x000000000019ee0b : jmp qword ptr [rsi]
0x000000000019ee53 : jmp qword ptr [rsi]
0x00000000001a0713 : jmp qword ptr [rsi]
0x00000000001a3c9b : jmp qword ptr [rsi]
0x00000000001a5263 : jmp qword ptr [rsi]
0x00000000001a6b73 : jmp qword ptr [rsi]
0x00000000001a6d0b : jmp qword ptr [rsi]
0x00000000001aca3b : jmp qword ptr [rsi]
0x00000000001aca3a : jmp qword ptr [rsi]
0x00000000001ada2b : jmp qword ptr [rsi]
0x00000000001af1a3 : jmp qword ptr [rsi]
0x00000000001af233 : jmp qword ptr [rsi]
0x00000000001b27ab : jmp qword ptr [rsi]
0x00000000001b2963 : jmp qword ptr [rsi]
0x00000000001b297b : jmp qword ptr [rsi]
0x00000000001b2993 : jmp qword ptr [rsi]
0x00000000001b29ab : jmp qword ptr [rsi]
0x00000000001b29c3 : jmp qword ptr [rsi]
0x00000000001b29db : jmp qword ptr [rsi]
0x00000000001b29f3 : jmp qword ptr [rsi]
0x00000000001b2a0b : jmp qword ptr [rsi]
0x00000000001b2a23 : jmp qword ptr [rsi]
0x00000000001b2a3b : jmp qword ptr [rsi]
0x00000000001b2a53 : jmp qword ptr [rsi]
0x00000000001b2a6b : jmp qword ptr [rsi]
0x00000000001b2a83 : jmp qword ptr [rsi]
0x00000000001b2a9b : jmp qword ptr [rsi]
0x00000000001b2ab3 : jmp qword ptr [rsi]
0x00000000001b2acb : jmp qword ptr [rsi]
0x00000000001b2ae3 : jmp qword ptr [rsi]
0x00000000001b2afb : jmp qword ptr [rsi]
0x00000000001b2b13 : jmp qword ptr [rsi]
0x00000000001b2b2b : jmp qword ptr [rsi]
0x00000000001b2b43 : jmp qword ptr [rsi]
0x00000000001b2b5b : jmp qword ptr [rsi]
0x00000000001b2b73 : jmp qword ptr [rsi]
0x00000000001b2b8b : jmp qword ptr [rsi]
0x00000000001b2ba3 : jmp qword ptr [rsi]
0x00000000001b2bbb : jmp qword ptr [rsi]
0x00000000001b2bd3 : jmp qword ptr [rsi]
0x00000000001b2c03 : jmp qword ptr [rsi]
0x00000000001b2c1b : jmp qword ptr [rsi]
0x00000000001b2c33 : jmp qword ptr [rsi]
0x00000000001b2c4b : jmp qword ptr [rsi]
0x00000000001b2c63 : jmp qword ptr [rsi]
0x00000000001b2c7b : jmp qword ptr [rsi]
0x00000000001b2c93 : jmp qword ptr [rsi]
0x00000000001b2cab : jmp qword ptr [rsi]
0x00000000001b2cc3 : jmp qword ptr [rsi]
0x00000000001b2d8b : jmp qword ptr [rsi]
0x00000000001b69a3 : jmp qword ptr [rsi]
0x000000000019a45b : jmp qword ptr [rsp + rdx*8 + 1]
0x0000000000001b62 : jmp r10
0x0000000000001b62 : jmp r10
0x0000000000089d99 : jmp r10
0x000000000008bc19 : jmp r10
0x000000000008fb79 : jmp r10
0x0000000000091e89 : jmp r10
0x000000000009e8ce : jmp r10
0x000000000009e997 : jmp r10
0x0000000000144d79 : jmp r10
0x0000000000145b49 : jmp r10
0x0000000000146b89 : jmp r10
0x0000000000148759 : jmp r10
0x000000000014aa79 : jmp r10
0x000000000014c109 : jmp r10
0x000000000014e659 : jmp r10
0x000000000014f8d9 : jmp r10
0x0000000000161089 : jmp r10
0x00000000001631f9 : jmp r10
0x0000000000150fbd : jmp r9
0x0000000000151023 : jmp r9
0x0000000000151084 : jmp r9
0x00000000001514eb : jmp r9
0x0000000000151546 : jmp r9
0x000000000015159b : jmp r9
0x00000000001515ef : jmp r9
0x000000000015163b : jmp r9
0x0000000000151696 : jmp r9
0x00000000001516eb : jmp r9
0x000000000015173f : jmp r9
0x000000000015178b : jmp r9
0x00000000001517e6 : jmp r9
0x000000000015183b : jmp r9
0x000000000015188f : jmp r9
0x00000000001518db : jmp r9
0x0000000000151936 : jmp r9
0x000000000015198b : jmp r9
0x00000000001519df : jmp r9
0x0000000000151a2b : jmp r9
0x0000000000151a86 : jmp r9
0x0000000000151adb : jmp r9
0x0000000000151b2f : jmp r9
0x0000000000151b7b : jmp r9
0x0000000000151bd6 : jmp r9
0x0000000000151c2b : jmp r9
0x0000000000151c7f : jmp r9
0x0000000000151ccb : jmp r9
0x0000000000151d26 : jmp r9
0x0000000000151d7b : jmp r9
0x0000000000151dcf : jmp r9
0x0000000000151e1b : jmp r9
0x0000000000151e74 : jmp r9
0x0000000000151ecb : jmp r9
0x0000000000151f1f : jmp r9
0x0000000000151f6b : jmp r9
0x0000000000151fc6 : jmp r9
0x000000000015201b : jmp r9
0x000000000015206f : jmp r9
0x00000000001520bb : jmp r9
0x0000000000152116 : jmp r9
0x000000000015216b : jmp r9
0x00000000001521bf : jmp r9
0x000000000015220b : jmp r9
0x0000000000152266 : jmp r9
0x00000000001522bb : jmp r9
0x000000000015230f : jmp r9
0x000000000015235b : jmp r9
0x00000000001523b6 : jmp r9
0x000000000015240b : jmp r9
0x000000000015245f : jmp r9
0x00000000001524ab : jmp r9
0x0000000000152506 : jmp r9
0x000000000015255b : jmp r9
0x00000000001525af : jmp r9
0x00000000001525fb : jmp r9
0x0000000000152656 : jmp r9
0x00000000001526ab : jmp r9
0x00000000001526ff : jmp r9
0x000000000015274b : jmp r9
0x00000000001527a6 : jmp r9
0x00000000001527fb : jmp r9
0x000000000015284f : jmp r9
0x0000000000153990 : jmp r9
0x00000000001539f3 : jmp r9
0x0000000000153a54 : jmp r9
0x0000000000153ebb : jmp r9
0x0000000000153f16 : jmp r9
0x0000000000153f6b : jmp r9
0x0000000000153fbf : jmp r9
0x000000000015400b : jmp r9
0x0000000000154066 : jmp r9
0x00000000001540bb : jmp r9
0x000000000015410f : jmp r9
0x000000000015415b : jmp r9
0x00000000001541b6 : jmp r9
0x000000000015420b : jmp r9
0x000000000015425f : jmp r9
0x00000000001542ab : jmp r9
0x0000000000154306 : jmp r9
0x000000000015435b : jmp r9
0x00000000001543af : jmp r9
0x00000000001543fb : jmp r9
0x0000000000154456 : jmp r9
0x00000000001544ab : jmp r9
0x00000000001544ff : jmp r9
0x000000000015454b : jmp r9
0x00000000001545a6 : jmp r9
0x00000000001545fb : jmp r9
0x000000000015464f : jmp r9
0x000000000015469b : jmp r9
0x00000000001546f6 : jmp r9
0x000000000015474b : jmp r9
0x000000000015479f : jmp r9
0x00000000001547eb : jmp r9
0x0000000000154844 : jmp r9
0x000000000015489b : jmp r9
0x00000000001548ef : jmp r9
0x000000000015493b : jmp r9
0x0000000000154996 : jmp r9
0x00000000001549eb : jmp r9
0x0000000000154a3f : jmp r9
0x0000000000154a8b : jmp r9
0x0000000000154ae6 : jmp r9
0x0000000000154b3b : jmp r9
0x0000000000154b8f : jmp r9
0x0000000000154bdb : jmp r9
0x0000000000154c36 : jmp r9
0x0000000000154c8b : jmp r9
0x0000000000154cdf : jmp r9
0x0000000000154d2b : jmp r9
0x0000000000154d86 : jmp r9
0x0000000000154ddb : jmp r9
0x0000000000154e2f : jmp r9
0x0000000000154e7b : jmp r9
0x0000000000154ed6 : jmp r9
0x0000000000154f2b : jmp r9
0x0000000000154f7f : jmp r9
0x0000000000154fcb : jmp r9
0x0000000000155026 : jmp r9
0x000000000015507b : jmp r9
0x00000000001550cf : jmp r9
0x000000000015511b : jmp r9
0x0000000000155176 : jmp r9
0x00000000001551cb : jmp r9
0x000000000015521f : jmp r9
0x0000000000156370 : jmp r9
0x00000000001563ca : jmp r9
0x0000000000156424 : jmp r9
0x000000000015688b : jmp r9
0x00000000001568e6 : jmp r9
0x000000000015693b : jmp r9
0x000000000015698f : jmp r9
0x00000000001569db : jmp r9
0x0000000000156a36 : jmp r9
0x0000000000156a8b : jmp r9
0x0000000000156adf : jmp r9
0x0000000000156b2b : jmp r9
0x0000000000156b86 : jmp r9
0x0000000000156bdb : jmp r9
0x0000000000156c2f : jmp r9
0x0000000000156c7b : jmp r9
0x0000000000156cd6 : jmp r9
0x0000000000156d2b : jmp r9
0x0000000000156d7f : jmp r9
0x0000000000156dcb : jmp r9
0x0000000000156e26 : jmp r9
0x0000000000156e7b : jmp r9
0x0000000000156ecf : jmp r9
0x0000000000156f1b : jmp r9
0x0000000000156f76 : jmp r9
0x0000000000156fcb : jmp r9
0x000000000015701f : jmp r9
0x000000000015706b : jmp r9
0x00000000001570c6 : jmp r9
0x000000000015711b : jmp r9
0x000000000015716f : jmp r9
0x00000000001571bb : jmp r9
0x0000000000157214 : jmp r9
0x000000000015726b : jmp r9
0x00000000001572bf : jmp r9
0x000000000015730b : jmp r9
0x0000000000157366 : jmp r9
0x00000000001573bb : jmp r9
0x000000000015740f : jmp r9
0x000000000015745b : jmp r9
0x00000000001574b6 : jmp r9
0x000000000015750b : jmp r9
0x000000000015755f : jmp r9
0x00000000001575ab : jmp r9
0x0000000000157606 : jmp r9
0x000000000015765b : jmp r9
0x00000000001576af : jmp r9
0x00000000001576fb : jmp r9
0x0000000000157756 : jmp r9
0x00000000001577ab : jmp r9
0x00000000001577ff : jmp r9
0x000000000015784b : jmp r9
0x00000000001578a6 : jmp r9
0x00000000001578fb : jmp r9
0x000000000015794f : jmp r9
0x000000000015799b : jmp r9
0x00000000001579f6 : jmp r9
0x0000000000157a4b : jmp r9
0x0000000000157a9f : jmp r9
0x0000000000157aeb : jmp r9
0x0000000000157b46 : jmp r9
0x0000000000157b9b : jmp r9
0x0000000000157bef : jmp r9
0x0000000000158f52 : jmp r9
0x0000000000158fb4 : jmp r9
0x000000000015ba22 : jmp r9
0x000000000015ba84 : jmp r9
0x000000000015e4fd : jmp r9
0x000000000015e564 : jmp r9
0x00000000000c00b6 : jmp rax
0x0000000000020b91 : jmp rax
0x000000000002ebbe : jmp rax
0x000000000002ec9c : jmp rax
0x000000000002ed8c : jmp rax
0x0000000000035327 : jmp rax
0x000000000004b609 : jmp rax
0x000000000004d654 : jmp rax
0x000000000004da53 : jmp rax
0x000000000004dab4 : jmp rax
0x000000000004db15 : jmp rax
0x000000000004e620 : jmp rax
0x000000000004e701 : jmp rax
0x000000000004e758 : jmp rax
0x000000000004f9c6 : jmp rax
0x000000000004fa1d : jmp rax
0x000000000004fad4 : jmp rax
0x000000000004fc7e : jmp rax
0x000000000004fcdf : jmp rax
0x000000000004fd73 : jmp rax
0x00000000000569ff : jmp rax
0x0000000000058e1d : jmp rax
0x0000000000059825 : jmp rax
0x0000000000059881 : jmp rax
0x00000000000598d8 : jmp rax
0x0000000000059971 : jmp rax
0x0000000000059cac : jmp rax
0x0000000000059d03 : jmp rax
0x0000000000059fbc : jmp rax
0x000000000005a009 : jmp rax
0x000000000005a078 : jmp rax
0x000000000005a0c5 : jmp rax
0x000000000005b169 : jmp rax
0x000000000005b2e0 : jmp rax
0x000000000005bf59 : jmp rax
0x000000000005c14f : jmp rax
0x000000000005c1f4 : jmp rax
0x000000000005c421 : jmp rax
0x0000000000063d31 : jmp rax
0x0000000000063e68 : jmp rax
0x000000000006c1d9 : jmp rax
0x000000000006c953 : jmp rax
0x000000000006dda0 : jmp rax
0x000000000006de70 : jmp rax
0x000000000006f8cb : jmp rax
0x000000000006fb74 : jmp rax
0x000000000006fb73 : jmp rax
0x000000000006fb72 : jmp rax
0x0000000000071fc5 : jmp rax
0x000000000007206d : jmp rax
0x0000000000072225 : jmp rax
0x00000000000746b6 : jmp rax
0x000000000007b23f : jmp rax
0x000000000007b2a7 : jmp rax
0x000000000007b3f7 : jmp rax
0x000000000007b70b : jmp rax
0x000000000007b70a : jmp rax
0x000000000007b709 : jmp rax
0x000000000007ba0f : jmp rax
0x000000000007ba0e : jmp rax
0x000000000007ba0d : jmp rax
0x00000000000842a3 : jmp rax
0x0000000000084cac : jmp rax
0x00000000000852ef : jmp rax
0x000000000008554c : jmp rax
0x00000000000859c7 : jmp rax
0x0000000000086063 : jmp rax
0x000000000008683f : jmp rax
0x000000000008d860 : jmp rax
0x00000000000948f4 : jmp rax
0x0000000000094b64 : jmp rax
0x000000000009ea37 : jmp rax
0x00000000000aac5e : jmp rax
0x00000000000c00b6 : jmp rax
0x00000000000c31e4 : jmp rax
0x00000000000c52d9 : jmp rax
0x00000000000c7663 : jmp rax
0x00000000000cdce2 : jmp rax
0x00000000000ce052 : jmp rax
0x00000000000ce751 : jmp rax
0x00000000000d1be5 : jmp rax
0x00000000000d2222 : jmp rax
0x00000000000d39b5 : jmp rax
0x00000000000d3fe8 : jmp rax
0x00000000000d9b4c : jmp rax
0x00000000000dfd7a : jmp rax
0x00000000000e0091 : jmp rax
0x00000000000e1c9f : jmp rax
0x00000000000e6287 : jmp rax
0x00000000000f2630 : jmp rax
0x00000000000f3805 : jmp rax
0x0000000000102886 : jmp rax
0x00000000001028a0 : jmp rax
0x0000000000104053 : jmp rax
0x0000000000114ad4 : jmp rax
0x0000000000114b04 : jmp rax
0x0000000000114b34 : jmp rax
0x0000000000114b64 : jmp rax
0x0000000000114b94 : jmp rax
0x0000000000114bc4 : jmp rax
0x0000000000114bf4 : jmp rax
0x0000000000114c24 : jmp rax
0x0000000000114c54 : jmp rax
0x0000000000114c84 : jmp rax
0x0000000000114cb4 : jmp rax
0x0000000000114ce4 : jmp rax
0x0000000000114d14 : jmp rax
0x0000000000114d44 : jmp rax
0x0000000000114d74 : jmp rax
0x0000000000114da4 : jmp rax
0x0000000000114dd4 : jmp rax
0x0000000000114e04 : jmp rax
0x0000000000114e34 : jmp rax
0x0000000000114e64 : jmp rax
0x0000000000114e94 : jmp rax
0x0000000000114ef4 : jmp rax
0x0000000000114f24 : jmp rax
0x0000000000114f54 : jmp rax
0x0000000000114f84 : jmp rax
0x0000000000114fb4 : jmp rax
0x0000000000114fe4 : jmp rax
0x0000000000115014 : jmp rax
0x0000000000115044 : jmp rax
0x0000000000115074 : jmp rax
0x00000000001151aa : jmp rax
0x000000000012726d : jmp rax
0x0000000000128382 : jmp rax
0x000000000012ddbb : jmp rax
0x00000000001322ed : jmp rax
0x0000000000134a4b : jmp rax
0x000000000013505d : jmp rax
0x00000000001358ad : jmp rax
0x000000000013a914 : jmp rax
0x000000000013aaac : jmp rax
0x000000000013aab8 : jmp rax
0x000000000013b179 : jmp rax
0x000000000013bb50 : jmp rax
0x000000000013bb4f : jmp rax
0x000000000013bb4e : jmp rax
0x000000000013bb60 : jmp rax
0x000000000013bb5f : jmp rax
0x000000000013bb5e : jmp rax
0x000000000013bb90 : jmp rax
0x000000000013bb8f : jmp rax
0x000000000013bb8e : jmp rax
0x000000000013bba0 : jmp rax
0x000000000013bb9f : jmp rax
0x000000000013bb9e : jmp rax
0x000000000013c700 : jmp rax
0x0000000000143525 : jmp rax
0x0000000000143556 : jmp rax
0x00000000001443d4 : jmp rax
0x0000000000144404 : jmp rax
0x0000000000144434 : jmp rax
0x0000000000144464 : jmp rax
0x0000000000144494 : jmp rax
0x00000000001444c4 : jmp rax
0x00000000001744b4 : jmp rax
0x000000000017531f : jmp rax
0x0000000000175863 : jmp rax
0x0000000000175fcf : jmp rax
0x0000000000175fd3 : jmp rax
0x0000000000175fcf : jmp rax
0x0000000000175fd7 : jmp rax
0x0000000000175fd3 : jmp rax
0x0000000000175fcf : jmp rax
0x0000000000175fdb : jmp rax
0x0000000000175fd7 : jmp rax
0x0000000000175fd3 : jmp rax
0x0000000000175fdf : jmp rax
0x0000000000175fdb : jmp rax
0x0000000000175fd7 : jmp rax
0x0000000000175fe3 : jmp rax
0x0000000000175fdf : jmp rax
0x0000000000175fdb : jmp rax
0x0000000000175fe7 : jmp rax
0x0000000000175fe3 : jmp rax
0x0000000000175fdf : jmp rax
0x0000000000175feb : jmp rax
0x0000000000175fe7 : jmp rax
0x0000000000175fe3 : jmp rax
0x0000000000175fef : jmp rax
0x0000000000175feb : jmp rax
0x0000000000175fe7 : jmp rax
0x0000000000175ff3 : jmp rax
0x0000000000175fef : jmp rax
0x0000000000175feb : jmp rax
0x0000000000175ff7 : jmp rax
0x0000000000175ff3 : jmp rax
0x0000000000175fef : jmp rax
0x0000000000175ffb : jmp rax
0x0000000000175ff7 : jmp rax
0x0000000000175ff3 : jmp rax
0x0000000000175fff : jmp rax
0x0000000000175ffb : jmp rax
0x0000000000175ff7 : jmp rax
0x0000000000176003 : jmp rax
0x0000000000175fff : jmp rax
0x0000000000175ffb : jmp rax
0x0000000000176007 : jmp rax
0x0000000000176003 : jmp rax
0x0000000000175fff : jmp rax
0x000000000017600b : jmp rax
0x0000000000176007 : jmp rax
0x0000000000176003 : jmp rax
0x000000000017600f : jmp rax
0x000000000017600b : jmp rax
0x0000000000176007 : jmp rax
0x0000000000176013 : jmp rax
0x000000000017600f : jmp rax
0x000000000017600b : jmp rax
0x0000000000176017 : jmp rax
0x0000000000176013 : jmp rax
0x000000000017600f : jmp rax
0x000000000017601b : jmp rax
0x0000000000176017 : jmp rax
0x0000000000176013 : jmp rax
0x000000000017601f : jmp rax
0x000000000017601b : jmp rax
0x0000000000176017 : jmp rax
0x0000000000176023 : jmp rax
0x000000000017601f : jmp rax
0x000000000017601b : jmp rax
0x0000000000176027 : jmp rax
0x0000000000176023 : jmp rax
0x000000000017601f : jmp rax
0x000000000017602b : jmp rax
0x0000000000176027 : jmp rax
0x0000000000176023 : jmp rax
0x000000000017602f : jmp rax
0x000000000017602b : jmp rax
0x0000000000176027 : jmp rax
0x000000000018769f : jmp rax
0x000000000018781f : jmp rax
0x0000000000187daf : jmp rax
0x0000000000187dcf : jmp rax
0x0000000000187def : jmp rax
0x0000000000187e0f : jmp rax
0x0000000000187e4f : jmp rax
0x0000000000187e77 : jmp rax
0x0000000000187ec3 : jmp rax
0x0000000000187f77 : jmp rax
0x0000000000187faf : jmp rax
0x0000000000187fdb : jmp rax
0x000000000018800b : jmp rax
0x000000000018802f : jmp rax
0x0000000000188097 : jmp rax
0x0000000000188297 : jmp rax
0x000000000018871f : jmp rax
0x000000000018871e : jmp rax
0x0000000000188c8b : jmp rax
0x0000000000188c8a : jmp rax
0x00000000001899cf : jmp rax
0x000000000018a80f : jmp rax
0x000000000018b09f : jmp rax
0x000000000018c147 : jmp rax
0x000000000018c16f : jmp rax
0x000000000018c5f3 : jmp rax
0x0000000000194e3b : jmp rax
0x0000000000194e83 : jmp rax
0x0000000000194ef7 : jmp rax
0x0000000000194f47 : jmp rax
0x00000000001950c7 : jmp rax
0x0000000000195213 : jmp rax
0x00000000001952a3 : jmp rax
0x00000000001952a7 : jmp rax
0x00000000001952ab : jmp rax
0x0000000000195323 : jmp rax
0x0000000000195327 : jmp rax
0x0000000000195323 : jmp rax
0x000000000019532b : jmp rax
0x0000000000195323 : jmp rax
0x000000000019538b : jmp rax
0x000000000019539f : jmp rax
0x00000000001953f3 : jmp rax
0x000000000019542f : jmp rax
0x000000000019547f : jmp rax
0x0000000000195497 : jmp rax
0x00000000001954fb : jmp rax
0x0000000000195517 : jmp rax
0x000000000019556b : jmp rax
0x0000000000195597 : jmp rax
0x00000000001956bf : jmp rax
0x00000000001956e3 : jmp rax
0x0000000000195737 : jmp rax
0x0000000000195783 : jmp rax
0x000000000019595b : jmp rax
0x00000000001959c3 : jmp rax
0x0000000000195bc7 : jmp rax
0x0000000000195c6f : jmp rax
0x0000000000195e87 : jmp rax
0x000000000019605f : jmp rax
0x0000000000196067 : jmp rax
0x000000000019606f : jmp rax
0x0000000000196077 : jmp rax
0x000000000019607f : jmp rax
0x0000000000196097 : jmp rax
0x00000000001960d3 : jmp rax
0x00000000001960db : jmp rax
0x00000000001960e3 : jmp rax
0x00000000001960eb : jmp rax
0x00000000001960e3 : jmp rax
0x00000000001960f3 : jmp rax
0x00000000001960fb : jmp rax
0x0000000000196103 : jmp rax
0x000000000019610b : jmp rax
0x0000000000196117 : jmp rax
0x000000000019611f : jmp rax
0x0000000000196127 : jmp rax
0x000000000019612f : jmp rax
0x0000000000196127 : jmp rax
0x0000000000196137 : jmp rax
0x000000000019613f : jmp rax
0x0000000000196147 : jmp rax
0x0000000000196167 : jmp rax
0x000000000019637f : jmp rax
0x000000000019639b : jmp rax
0x00000000001963a3 : jmp rax
0x000000000019639b : jmp rax
0x00000000001963ab : jmp rax
0x00000000001963a3 : jmp rax
0x00000000001963b3 : jmp rax
0x00000000001963ab : jmp rax
0x00000000001963bb : jmp rax
0x00000000001963b3 : jmp rax
0x0000000000196587 : jmp rax
0x000000000019658f : jmp rax
0x000000000019bb5b : jmp rax
0x000000000019dc0b : jmp rax
0x000000000019f703 : jmp rax
0x00000000001a136b : jmp rax
0x00000000001b010b : jmp rax
0x00000000001b13b3 : jmp rax
0x00000000001b144b : jmp rax
0x0000000000187def : jmp rax
0x000000000018c16f : jmp rax
0x0000000000189267 : jmp rbx
0x000000000018932f : jmp rbx
0x00000000001a148b : jmp rbx
0x00000000001a69b3 : jmp rbx
0x00000000001a7ccb : jmp rbx
0x00000000001b333b : jmp rbx
0x00000000001b397b : jmp rbx
0x000000000002be4a : jmp rcx
0x000000000003329e : jmp rcx
0x0000000000047c98 : jmp rcx
0x000000000006388b : jmp rcx
0x0000000000063e4c : jmp rcx
0x000000000006cbc2 : jmp rcx
0x0000000000086b3e : jmp rcx
0x00000000000a5bf1 : jmp rcx
0x00000000000a5c49 : jmp rcx
0x00000000000a5c66 : jmp rcx
0x00000000000a5c8b : jmp rcx
0x00000000000a5cad : jmp rcx
0x00000000000a5cc3 : jmp rcx
0x00000000000a5cef : jmp rcx
0x00000000000a5d24 : jmp rcx
0x00000000000a6306 : jmp rcx
0x00000000000a632f : jmp rcx
0x00000000000a635d : jmp rcx
0x00000000000a642f : jmp rcx
0x00000000000a6462 : jmp rcx
0x00000000000a6492 : jmp rcx
0x00000000000a64af : jmp rcx
0x00000000000a64cd : jmp rcx
0x00000000000a64f2 : jmp rcx
0x00000000000a651b : jmp rcx
0x00000000000a653b : jmp rcx
0x00000000000a6564 : jmp rcx
0x00000000000a6ea9 : jmp rcx
0x00000000000a6ec8 : jmp rcx
0x00000000000a6edd : jmp rcx
0x00000000000a6fc8 : jmp rcx
0x00000000000a71f1 : jmp rcx
0x00000000000a7249 : jmp rcx
0x00000000000a7266 : jmp rcx
0x00000000000a728b : jmp rcx
0x00000000000a72ad : jmp rcx
0x00000000000a72c3 : jmp rcx
0x00000000000a72ef : jmp rcx
0x00000000000a7324 : jmp rcx
0x00000000000a7996 : jmp rcx
0x00000000000a79bf : jmp rcx
0x00000000000a79ed : jmp rcx
0x00000000000a7acf : jmp rcx
0x00000000000a7b02 : jmp rcx
0x00000000000a7b32 : jmp rcx
0x00000000000a7b4f : jmp rcx
0x00000000000a7b6d : jmp rcx
0x00000000000a7b92 : jmp rcx
0x00000000000a7bbb : jmp rcx
0x00000000000a7bdb : jmp rcx
0x00000000000a7c04 : jmp rcx
0x00000000000a86b9 : jmp rcx
0x00000000000a86d8 : jmp rcx
0x00000000000a86ed : jmp rcx
0x00000000000a87d8 : jmp rcx
0x00000000000a8cd1 : jmp rcx
0x00000000000a8d29 : jmp rcx
0x00000000000a8d46 : jmp rcx
0x00000000000a8d6b : jmp rcx
0x00000000000a8d8d : jmp rcx
0x00000000000a8da3 : jmp rcx
0x00000000000a8dcf : jmp rcx
0x00000000000a8e04 : jmp rcx
0x00000000000a963c : jmp rcx
0x00000000000a96a9 : jmp rcx
0x00000000000a96c6 : jmp rcx
0x00000000000a96eb : jmp rcx
0x00000000000a970d : jmp rcx
0x00000000000a9723 : jmp rcx
0x00000000000a974f : jmp rcx
0x00000000000a9784 : jmp rcx
0x00000000000a979f : jmp rcx
0x00000000000a97d2 : jmp rcx
0x00000000000a9802 : jmp rcx
0x00000000000a981f : jmp rcx
0x00000000000a983d : jmp rcx
0x00000000000a9862 : jmp rcx
0x00000000000a988b : jmp rcx
0x00000000000a98ab : jmp rcx
0x00000000000a98d4 : jmp rcx
0x00000000000aa058 : jmp rcx
0x00000000000aac96 : jmp rcx
0x000000000012b79a : jmp rcx
0x000000000012bf66 : jmp rcx
0x000000000012e0fc : jmp rcx
0x000000000012e142 : jmp rcx
0x000000000013225d : jmp rcx
0x0000000000132dd0 : jmp rcx
0x0000000000132df7 : jmp rcx
0x000000000013402c : jmp rcx
0x0000000000134fd7 : jmp rcx
0x0000000000135877 : jmp rcx
0x0000000000138f50 : jmp rcx
0x0000000000138f77 : jmp rcx
0x0000000000139670 : jmp rcx
0x0000000000139697 : jmp rcx
0x0000000000150fbe : jmp rcx
0x0000000000151024 : jmp rcx
0x0000000000151085 : jmp rcx
0x00000000001514ec : jmp rcx
0x0000000000151547 : jmp rcx
0x000000000015159c : jmp rcx
0x00000000001515f0 : jmp rcx
0x000000000015163c : jmp rcx
0x0000000000151697 : jmp rcx
0x00000000001516ec : jmp rcx
0x0000000000151740 : jmp rcx
0x000000000015178c : jmp rcx
0x00000000001517e7 : jmp rcx
0x000000000015183c : jmp rcx
0x0000000000151890 : jmp rcx
0x00000000001518dc : jmp rcx
0x0000000000151937 : jmp rcx
0x000000000015198c : jmp rcx
0x00000000001519e0 : jmp rcx
0x0000000000151a2c : jmp rcx
0x0000000000151a87 : jmp rcx
0x0000000000151adc : jmp rcx
0x0000000000151b30 : jmp rcx
0x0000000000151b7c : jmp rcx
0x0000000000151bd7 : jmp rcx
0x0000000000151c2c : jmp rcx
0x0000000000151c80 : jmp rcx
0x0000000000151ccc : jmp rcx
0x0000000000151d27 : jmp rcx
0x0000000000151d7c : jmp rcx
0x0000000000151dd0 : jmp rcx
0x0000000000151e1c : jmp rcx
0x0000000000151e75 : jmp rcx
0x0000000000151ecc : jmp rcx
0x0000000000151f20 : jmp rcx
0x0000000000151f6c : jmp rcx
0x0000000000151fc7 : jmp rcx
0x000000000015201c : jmp rcx
0x0000000000152070 : jmp rcx
0x00000000001520bc : jmp rcx
0x0000000000152117 : jmp rcx
0x000000000015216c : jmp rcx
0x00000000001521c0 : jmp rcx
0x000000000015220c : jmp rcx
0x0000000000152267 : jmp rcx
0x00000000001522bc : jmp rcx
0x0000000000152310 : jmp rcx
0x000000000015235c : jmp rcx
0x00000000001523b7 : jmp rcx
0x000000000015240c : jmp rcx
0x0000000000152460 : jmp rcx
0x00000000001524ac : jmp rcx
0x0000000000152507 : jmp rcx
0x000000000015255c : jmp rcx
0x00000000001525b0 : jmp rcx
0x00000000001525fc : jmp rcx
0x0000000000152657 : jmp rcx
0x00000000001526ac : jmp rcx
0x0000000000152700 : jmp rcx
0x000000000015274c : jmp rcx
0x00000000001527a7 : jmp rcx
0x00000000001527fc : jmp rcx
0x0000000000152850 : jmp rcx
0x0000000000153991 : jmp rcx
0x00000000001539f4 : jmp rcx
0x0000000000153a55 : jmp rcx
0x0000000000153ebc : jmp rcx
0x0000000000153f17 : jmp rcx
0x0000000000153f6c : jmp rcx
0x0000000000153fc0 : jmp rcx
0x000000000015400c : jmp rcx
0x0000000000154067 : jmp rcx
0x00000000001540bc : jmp rcx
0x0000000000154110 : jmp rcx
0x000000000015415c : jmp rcx
0x00000000001541b7 : jmp rcx
0x000000000015420c : jmp rcx
0x0000000000154260 : jmp rcx
0x00000000001542ac : jmp rcx
0x0000000000154307 : jmp rcx
0x000000000015435c : jmp rcx
0x00000000001543b0 : jmp rcx
0x00000000001543fc : jmp rcx
0x0000000000154457 : jmp rcx
0x00000000001544ac : jmp rcx
0x0000000000154500 : jmp rcx
0x000000000015454c : jmp rcx
0x00000000001545a7 : jmp rcx
0x00000000001545fc : jmp rcx
0x0000000000154650 : jmp rcx
0x000000000015469c : jmp rcx
0x00000000001546f7 : jmp rcx
0x000000000015474c : jmp rcx
0x00000000001547a0 : jmp rcx
0x00000000001547ec : jmp rcx
0x0000000000154845 : jmp rcx
0x000000000015489c : jmp rcx
0x00000000001548f0 : jmp rcx
0x000000000015493c : jmp rcx
0x0000000000154997 : jmp rcx
0x00000000001549ec : jmp rcx
0x0000000000154a40 : jmp rcx
0x0000000000154a8c : jmp rcx
0x0000000000154ae7 : jmp rcx
0x0000000000154b3c : jmp rcx
0x0000000000154b90 : jmp rcx
0x0000000000154bdc : jmp rcx
0x0000000000154c37 : jmp rcx
0x0000000000154c8c : jmp rcx
0x0000000000154ce0 : jmp rcx
0x0000000000154d2c : jmp rcx
0x0000000000154d87 : jmp rcx
0x0000000000154ddc : jmp rcx
0x0000000000154e30 : jmp rcx
0x0000000000154e7c : jmp rcx
0x0000000000154ed7 : jmp rcx
0x0000000000154f2c : jmp rcx
0x0000000000154f80 : jmp rcx
0x0000000000154fcc : jmp rcx
0x0000000000155027 : jmp rcx
0x000000000015507c : jmp rcx
0x00000000001550d0 : jmp rcx
0x000000000015511c : jmp rcx
0x0000000000155177 : jmp rcx
0x00000000001551cc : jmp rcx
0x0000000000155220 : jmp rcx
0x0000000000156371 : jmp rcx
0x00000000001563cb : jmp rcx
0x0000000000156425 : jmp rcx
0x000000000015688c : jmp rcx
0x00000000001568e7 : jmp rcx
0x000000000015693c : jmp rcx
0x0000000000156990 : jmp rcx
0x00000000001569dc : jmp rcx
0x0000000000156a37 : jmp rcx
0x0000000000156a8c : jmp rcx
0x0000000000156ae0 : jmp rcx
0x0000000000156b2c : jmp rcx
0x0000000000156b87 : jmp rcx
0x0000000000156bdc : jmp rcx
0x0000000000156c30 : jmp rcx
0x0000000000156c7c : jmp rcx
0x0000000000156cd7 : jmp rcx
0x0000000000156d2c : jmp rcx
0x0000000000156d80 : jmp rcx
0x0000000000156dcc : jmp rcx
0x0000000000156e27 : jmp rcx
0x0000000000156e7c : jmp rcx
0x0000000000156ed0 : jmp rcx
0x0000000000156f1c : jmp rcx
0x0000000000156f77 : jmp rcx
0x0000000000156fcc : jmp rcx
0x0000000000157020 : jmp rcx
0x000000000015706c : jmp rcx
0x00000000001570c7 : jmp rcx
0x000000000015711c : jmp rcx
0x0000000000157170 : jmp rcx
0x00000000001571bc : jmp rcx
0x0000000000157215 : jmp rcx
0x000000000015726c : jmp rcx
0x00000000001572c0 : jmp rcx
0x000000000015730c : jmp rcx
0x0000000000157367 : jmp rcx
0x00000000001573bc : jmp rcx
0x0000000000157410 : jmp rcx
0x000000000015745c : jmp rcx
0x00000000001574b7 : jmp rcx
0x000000000015750c : jmp rcx
0x0000000000157560 : jmp rcx
0x00000000001575ac : jmp rcx
0x0000000000157607 : jmp rcx
0x000000000015765c : jmp rcx
0x00000000001576b0 : jmp rcx
0x00000000001576fc : jmp rcx
0x0000000000157757 : jmp rcx
0x00000000001577ac : jmp rcx
0x0000000000157800 : jmp rcx
0x000000000015784c : jmp rcx
0x00000000001578a7 : jmp rcx
0x00000000001578fc : jmp rcx
0x0000000000157950 : jmp rcx
0x000000000015799c : jmp rcx
0x00000000001579f7 : jmp rcx
0x0000000000157a4c : jmp rcx
0x0000000000157aa0 : jmp rcx
0x0000000000157aec : jmp rcx
0x0000000000157b47 : jmp rcx
0x0000000000157b9c : jmp rcx
0x0000000000157bf0 : jmp rcx
0x0000000000158f53 : jmp rcx
0x0000000000158fb5 : jmp rcx
0x000000000015ba23 : jmp rcx
0x000000000015ba85 : jmp rcx
0x000000000015e4fe : jmp rcx
0x000000000015e565 : jmp rcx
0x000000000016e454 : jmp rcx
0x000000000016e563 : jmp rcx
0x000000000016e694 : jmp rcx
0x000000000016e890 : jmp rcx
0x000000000016e927 : jmp rcx
0x000000000016e9a5 : jmp rcx
0x000000000016ea6b : jmp rcx
0x000000000016eb9d : jmp rcx
0x000000000016eda8 : jmp rcx
0x000000000016ee37 : jmp rcx
0x000000000016eeb1 : jmp rcx
0x000000000016fa92 : jmp rcx
0x000000000016fb93 : jmp rcx
0x000000000016fcc4 : jmp rcx
0x000000000016fec0 : jmp rcx
0x000000000016ff57 : jmp rcx
0x000000000016ffd5 : jmp rcx
0x000000000017009b : jmp rcx
0x00000000001701cd : jmp rcx
0x00000000001703d8 : jmp rcx
0x0000000000170467 : jmp rcx
0x00000000001704e1 : jmp rcx
0x0000000000188b1f : jmp rcx
0x0000000000188b1e : jmp rcx
0x0000000000188e43 : jmp rcx
0x0000000000188e42 : jmp rcx
0x0000000000188e7f : jmp rcx
0x0000000000188e7e : jmp rcx
0x0000000000188eab : jmp rcx
0x0000000000188eaa : jmp rcx
0x0000000000188ec3 : jmp rcx
0x0000000000188ec2 : jmp rcx
0x000000000018902f : jmp rcx
0x000000000018902e : jmp rcx
0x000000000018906b : jmp rcx
0x000000000018906a : jmp rcx
0x00000000001890af : jmp rcx
0x00000000001890ae : jmp rcx
0x00000000001891a7 : jmp rcx
0x00000000001892cb : jmp rcx
0x0000000000194ff7 : jmp rcx
0x000000000019511f : jmp rcx
0x000000000019513f : jmp rcx
0x00000000001a9323 : jmp rcx
0x00000000001aa2fb : jmp rcx
0x00000000001ab28b : jmp rcx
0x00000000001ad053 : jmp rcx
0x00000000001ae613 : jmp rcx
0x000000000006caa4 : jmp rdi
0x00000000000c6b05 : jmp rdi
0x00000000000e1a7f : jmp rdi
0x0000000000186a2f : jmp rdi
0x0000000000186a33 : jmp rdi
0x0000000000186a37 : jmp rdi
0x0000000000186a9f : jmp rdi
0x0000000000186aaf : jmp rdi
0x0000000000186ab3 : jmp rdi
0x0000000000186ab7 : jmp rdi
0x00000000001887a3 : jmp rdi
0x00000000001887a2 : jmp rdi
0x000000000018909f : jmp rdi
0x000000000018909e : jmp rdi
0x000000000018a4fd : jmp rdi
0x00000000001a9653 : jmp rdi
0x00000000001af43b : jmp rdi
0x00000000001b1363 : jmp rdi
0x00000000001b392b : jmp rdi
0x00000000001b93c3 : jmp rdi
0x00000000001b959b : jmp rdi
0x00000000001b95db : jmp rdi
0x0000000000001b63 : jmp rdx
0x0000000000001b63 : jmp rdx
0x00000000000210ba : jmp rdx
0x00000000000352f0 : jmp rdx
0x000000000006bc8b : jmp rdx
0x000000000006c401 : jmp rdx
0x0000000000089d9a : jmp rdx
0x000000000008bc1a : jmp rdx
0x000000000008fb7a : jmp rdx
0x0000000000091e8a : jmp rdx
0x000000000009e8cf : jmp rdx
0x000000000009e998 : jmp rdx
0x00000000000c0ef4 : jmp rdx
0x00000000000c1064 : jmp rdx
0x00000000000c325f : jmp rdx
0x00000000000c5267 : jmp rdx
0x00000000000d9c1e : jmp rdx
0x00000000000e1299 : jmp rdx
0x00000000000e2001 : jmp rdx
0x00000000000f213c : jmp rdx
0x00000000000f2e63 : jmp rdx
0x00000000000f3781 : jmp rdx
0x000000000010f93d : jmp rdx
0x0000000000119080 : jmp rdx
0x000000000012d753 : jmp rdx
0x000000000012d945 : jmp rdx
0x0000000000144d7a : jmp rdx
0x0000000000145b4a : jmp rdx
0x0000000000146b8a : jmp rdx
0x000000000014875a : jmp rdx
0x000000000014aa7a : jmp rdx
0x000000000014c10a : jmp rdx
0x000000000014e65a : jmp rdx
0x000000000014f8da : jmp rdx
0x00000000001510f7 : jmp rdx
0x00000000001511bc : jmp rdx
0x00000000001512ab : jmp rdx
0x0000000000151315 : jmp rdx
0x00000000001513d4 : jmp rdx
0x00000000001514c5 : jmp rdx
0x0000000000151571 : jmp rdx
0x000000000015160f : jmp rdx
0x00000000001516c1 : jmp rdx
0x000000000015175f : jmp rdx
0x0000000000151811 : jmp rdx
0x00000000001518af : jmp rdx
0x0000000000151961 : jmp rdx
0x00000000001519ff : jmp rdx
0x0000000000151ab1 : jmp rdx
0x0000000000151b4f : jmp rdx
0x0000000000151c01 : jmp rdx
0x0000000000151c9f : jmp rdx
0x0000000000151d51 : jmp rdx
0x0000000000151def : jmp rdx
0x0000000000151ea6 : jmp rdx
0x0000000000151f3f : jmp rdx
0x0000000000151ff1 : jmp rdx
0x000000000015208f : jmp rdx
0x0000000000152141 : jmp rdx
0x00000000001521df : jmp rdx
0x0000000000152291 : jmp rdx
0x000000000015232f : jmp rdx
0x00000000001523e1 : jmp rdx
0x000000000015247f : jmp rdx
0x0000000000152531 : jmp rdx
0x00000000001525cf : jmp rdx
0x0000000000152681 : jmp rdx
0x000000000015271f : jmp rdx
0x00000000001527d1 : jmp rdx
0x000000000015286f : jmp rdx
0x0000000000153878 : jmp rdx
0x0000000000153952 : jmp rdx
0x0000000000153ac7 : jmp rdx
0x0000000000153b8c : jmp rdx
0x0000000000153c7b : jmp rdx
0x0000000000153ce5 : jmp rdx
0x0000000000153da4 : jmp rdx
0x0000000000153e95 : jmp rdx
0x0000000000153f41 : jmp rdx
0x0000000000153fdf : jmp rdx
0x0000000000154091 : jmp rdx
0x000000000015412f : jmp rdx
0x00000000001541e1 : jmp rdx
0x000000000015427f : jmp rdx
0x0000000000154331 : jmp rdx
0x00000000001543cf : jmp rdx
0x0000000000154481 : jmp rdx
0x000000000015451f : jmp rdx
0x00000000001545d1 : jmp rdx
0x000000000015466f : jmp rdx
0x0000000000154721 : jmp rdx
0x00000000001547bf : jmp rdx
0x0000000000154876 : jmp rdx
0x000000000015490f : jmp rdx
0x00000000001549c1 : jmp rdx
0x0000000000154a5f : jmp rdx
0x0000000000154b11 : jmp rdx
0x0000000000154baf : jmp rdx
0x0000000000154c61 : jmp rdx
0x0000000000154cff : jmp rdx
0x0000000000154db1 : jmp rdx
0x0000000000154e4f : jmp rdx
0x0000000000154f01 : jmp rdx
0x0000000000154f9f : jmp rdx
0x0000000000155051 : jmp rdx
0x00000000001550ef : jmp rdx
0x00000000001551a1 : jmp rdx
0x000000000015523f : jmp rdx
0x0000000000156248 : jmp rdx
0x0000000000156322 : jmp rdx
0x0000000000156497 : jmp rdx
0x000000000015655c : jmp rdx
0x000000000015664b : jmp rdx
0x00000000001566b5 : jmp rdx
0x0000000000156774 : jmp rdx
0x0000000000156865 : jmp rdx
0x0000000000156911 : jmp rdx
0x00000000001569af : jmp rdx
0x0000000000156a61 : jmp rdx
0x0000000000156aff : jmp rdx
0x0000000000156bb1 : jmp rdx
0x0000000000156c4f : jmp rdx
0x0000000000156d01 : jmp rdx
0x0000000000156d9f : jmp rdx
0x0000000000156e51 : jmp rdx
0x0000000000156eef : jmp rdx
0x0000000000156fa1 : jmp rdx
0x000000000015703f : jmp rdx
0x00000000001570f1 : jmp rdx
0x000000000015718f : jmp rdx
0x0000000000157246 : jmp rdx
0x00000000001572df : jmp rdx
0x0000000000157391 : jmp rdx
0x000000000015742f : jmp rdx
0x00000000001574e1 : jmp rdx
0x000000000015757f : jmp rdx
0x0000000000157631 : jmp rdx
0x00000000001576cf : jmp rdx
0x0000000000157781 : jmp rdx
0x000000000015781f : jmp rdx
0x00000000001578d1 : jmp rdx
0x000000000015796f : jmp rdx
0x0000000000157a21 : jmp rdx
0x0000000000157abf : jmp rdx
0x0000000000157b71 : jmp rdx
0x0000000000157c0f : jmp rdx
0x0000000000158c30 : jmp rdx
0x0000000000158cfb : jmp rdx
0x0000000000158de6 : jmp rdx
0x0000000000158ea3 : jmp rdx
0x0000000000158ee6 : jmp rdx
0x0000000000158ef9 : jmp rdx
0x0000000000159058 : jmp rdx
0x00000000001590d9 : jmp rdx
0x0000000000159195 : jmp rdx
0x0000000000159252 : jmp rdx
0x0000000000159315 : jmp rdx
0x00000000001593d2 : jmp rdx
0x0000000000159495 : jmp rdx
0x0000000000159552 : jmp rdx
0x0000000000159615 : jmp rdx
0x00000000001596d2 : jmp rdx
0x0000000000159795 : jmp rdx
0x0000000000159852 : jmp rdx
0x0000000000159915 : jmp rdx
0x00000000001599d2 : jmp rdx
0x0000000000159a95 : jmp rdx
0x0000000000159b52 : jmp rdx
0x0000000000159c15 : jmp rdx
0x0000000000159cd2 : jmp rdx
0x0000000000159d95 : jmp rdx
0x0000000000159e52 : jmp rdx
0x0000000000159f15 : jmp rdx
0x0000000000159fd2 : jmp rdx
0x000000000015a095 : jmp rdx
0x000000000015a152 : jmp rdx
0x000000000015a216 : jmp rdx
0x000000000015a2d2 : jmp rdx
0x000000000015a395 : jmp rdx
0x000000000015a452 : jmp rdx
0x000000000015a515 : jmp rdx
0x000000000015a5d2 : jmp rdx
0x000000000015a695 : jmp rdx
0x000000000015a752 : jmp rdx
0x000000000015a8e9 : jmp rdx
0x000000000015aa7c : jmp rdx
0x000000000015b9b9 : jmp rdx
0x000000000015b9cc : jmp rdx
0x000000000015bb28 : jmp rdx
0x000000000015bba9 : jmp rdx
0x000000000015bc65 : jmp rdx
0x000000000015bd22 : jmp rdx
0x000000000015bde5 : jmp rdx
0x000000000015bea2 : jmp rdx
0x000000000015bf65 : jmp rdx
0x000000000015c022 : jmp rdx
0x000000000015c0e5 : jmp rdx
0x000000000015c1a2 : jmp rdx
0x000000000015c265 : jmp rdx
0x000000000015c322 : jmp rdx
0x000000000015c3e5 : jmp rdx
0x000000000015c4a2 : jmp rdx
0x000000000015c565 : jmp rdx
0x000000000015c622 : jmp rdx
0x000000000015c6e5 : jmp rdx
0x000000000015c7a2 : jmp rdx
0x000000000015c865 : jmp rdx
0x000000000015c922 : jmp rdx
0x000000000015c9e5 : jmp rdx
0x000000000015caa2 : jmp rdx
0x000000000015cb65 : jmp rdx
0x000000000015cc22 : jmp rdx
0x000000000015cce6 : jmp rdx
0x000000000015cda2 : jmp rdx
0x000000000015ce65 : jmp rdx
0x000000000015cf22 : jmp rdx
0x000000000015cfe5 : jmp rdx
0x000000000015d0a2 : jmp rdx
0x000000000015d165 : jmp rdx
0x000000000015d222 : jmp rdx
0x000000000015d3b9 : jmp rdx
0x000000000015d54c : jmp rdx
0x000000000015e48a : jmp rdx
0x000000000015e4ac : jmp rdx
0x000000000015e608 : jmp rdx
0x000000000015e689 : jmp rdx
0x000000000015e745 : jmp rdx
0x000000000015e802 : jmp rdx
0x000000000015e8c5 : jmp rdx
0x000000000015e982 : jmp rdx
0x000000000015ea45 : jmp rdx
0x000000000015eb02 : jmp rdx
0x000000000015ebc5 : jmp rdx
0x000000000015ec82 : jmp rdx
0x000000000015ed45 : jmp rdx
0x000000000015ee02 : jmp rdx
0x000000000015eec5 : jmp rdx
0x000000000015ef82 : jmp rdx
0x000000000015f045 : jmp rdx
0x000000000015f102 : jmp rdx
0x000000000015f1c5 : jmp rdx
0x000000000015f282 : jmp rdx
0x000000000015f345 : jmp rdx
0x000000000015f402 : jmp rdx
0x000000000015f4c5 : jmp rdx
0x000000000015f582 : jmp rdx
0x000000000015f645 : jmp rdx
0x000000000015f702 : jmp rdx
0x000000000015f7c6 : jmp rdx
0x000000000015f882 : jmp rdx
0x000000000015f945 : jmp rdx
0x000000000015fa02 : jmp rdx
0x000000000015fac5 : jmp rdx
0x000000000015fb82 : jmp rdx
0x000000000015fc45 : jmp rdx
0x000000000015fd02 : jmp rdx
0x000000000015fead : jmp rdx
0x0000000000160060 : jmp rdx
0x000000000016108a : jmp rdx
0x00000000001631fa : jmp rdx
0x0000000000186113 : jmp rdx
0x0000000000186193 : jmp rdx
0x0000000000186293 : jmp rdx
0x0000000000186313 : jmp rdx
0x0000000000186347 : jmp rdx
0x0000000000186393 : jmp rdx
0x0000000000188ab7 : jmp rdx
0x0000000000188ab6 : jmp rdx
0x0000000000189587 : jmp rdx
0x000000000018958b : jmp rdx
0x000000000018958f : jmp rdx
0x0000000000189593 : jmp rdx
0x0000000000189597 : jmp rdx
0x000000000018959b : jmp rdx
0x000000000018959f : jmp rdx
0x00000000001895a3 : jmp rdx
0x00000000001895af : jmp rdx
0x00000000001895b3 : jmp rdx
0x00000000001895b7 : jmp rdx
0x00000000001895bb : jmp rdx
0x00000000001895bf : jmp rdx
0x00000000001895c3 : jmp rdx
0x00000000001895c7 : jmp rdx
0x00000000001895cb : jmp rdx
0x00000000001895cf : jmp rdx
0x00000000001895d3 : jmp rdx
0x00000000001895d7 : jmp rdx
0x00000000001895db : jmp rdx
0x00000000001895df : jmp rdx
0x00000000001895e3 : jmp rdx
0x00000000001895e7 : jmp rdx
0x00000000001895eb : jmp rdx
0x00000000001895ef : jmp rdx
0x00000000001895f3 : jmp rdx
0x00000000001895f7 : jmp rdx
0x000000000018a7eb : jmp rdx
0x000000000018a7f3 : jmp rdx
0x000000000018a7f7 : jmp rdx
0x000000000018a7fb : jmp rdx
0x000000000018a7ff : jmp rdx
0x000000000018a803 : jmp rdx
0x000000000018a80b : jmp rdx
0x000000000018a813 : jmp rdx
0x000000000018a817 : jmp rdx
0x000000000018a81b : jmp rdx
0x000000000018a81f : jmp rdx
0x000000000018a823 : jmp rdx
0x000000000018a827 : jmp rdx
0x000000000018a82b : jmp rdx
0x000000000018a82f : jmp rdx
0x000000000018a833 : jmp rdx
0x000000000018a837 : jmp rdx
0x000000000018a83b : jmp rdx
0x000000000018a83f : jmp rdx
0x000000000018a843 : jmp rdx
0x000000000018a847 : jmp rdx
0x000000000018a84b : jmp rdx
0x000000000018a853 : jmp rdx
0x000000000018a85b : jmp rdx
0x000000000018a85f : jmp rdx
0x000000000018a863 : jmp rdx
0x000000000018a867 : jmp rdx
0x000000000018a86b : jmp rdx
0x000000000018a86f : jmp rdx
0x000000000018a873 : jmp rdx
0x000000000018a877 : jmp rdx
0x000000000018a87b : jmp rdx
0x000000000018a87f : jmp rdx
0x000000000018a883 : jmp rdx
0x000000000018a887 : jmp rdx
0x000000000018a88f : jmp rdx
0x000000000018a893 : jmp rdx
0x000000000018a897 : jmp rdx
0x000000000018a89b : jmp rdx
0x000000000018a89f : jmp rdx
0x0000000000194fb7 : jmp rdx
0x0000000000194fbb : jmp rdx
0x0000000000194fb7 : jmp rdx
0x000000000019582f : jmp rdx
0x0000000000195d1b : jmp rdx
0x0000000000196213 : jmp rdx
0x000000000019dbbb : jmp rdx
0x00000000001a6663 : jmp rdx
0x00000000001a8423 : jmp rdx
0x00000000001aef6b : jmp rdx
0x00000000001b760b : jmp rdx
0x000000000002e8f4 : jmp rsi
0x0000000000033415 : jmp rsi
0x000000000003dfec : jmp rsi
0x000000000006c308 : jmp rsi
0x00000000000aabce : jmp rsi
0x000000000018874f : jmp rsi
0x000000000018874e : jmp rsi
0x0000000000188753 : jmp rsi
0x0000000000188752 : jmp rsi
0x00000000001887a7 : jmp rsi
0x00000000001887a6 : jmp rsi
0x0000000000195013 : jmp rsi
0x000000000019503f : jmp rsi
0x00000000001957cb : jmp rsi
0x0000000000195cb7 : jmp rsi
0x00000000001961af : jmp rsi
0x00000000001a38b3 : jmp rsi
0x00000000001a73d3 : jmp rsi
0x00000000001b59ab : jmp rsi
0x00000000001b7593 : jmp rsi
0x00000000001b7a9b : jmp rsi
0x0000000000002a71 : jmp rsp
0x0000000000065a5c : jmp rsp
0x0000000000181df3 : jmp rsp
0x0000000000187bd3 : jmp rsp
0x00000000001888c7 : jmp rsp
0x00000000001888c6 : jmp rsp
0x00000000001888cb : jmp rsp
0x00000000001888ca : jmp rsp
0x00000000001958f7 : jmp rsp
0x0000000000195de3 : jmp rsp
0x00000000001962db : jmp rsp
0x0000000000196733 : jmp rsp
0x00000000001968eb : jmp rsp
0x000000000019691b : jmp rsp
0x0000000000196943 : jmp rsp
0x0000000000196983 : jmp rsp
0x0000000000196a83 : jmp rsp
0x0000000000196ab3 : jmp rsp
0x0000000000196b33 : jmp rsp
0x0000000000196da3 : jmp rsp
0x0000000000196de3 : jmp rsp
0x0000000000196e0b : jmp rsp
0x0000000000196ea3 : jmp rsp
0x0000000000196efb : jmp rsp
0x0000000000196f43 : jmp rsp
0x0000000000197103 : jmp rsp
0x0000000000197123 : jmp rsp
0x00000000001972ab : jmp rsp
0x0000000000197323 : jmp rsp
0x00000000001974bb : jmp rsp
0x00000000001974e3 : jmp rsp
0x0000000000197523 : jmp rsp
0x00000000001975cb : jmp rsp
0x0000000000197633 : jmp rsp
0x0000000000197813 : jmp rsp
0x0000000000197843 : jmp rsp
0x00000000001979eb : jmp rsp
0x0000000000197cf3 : jmp rsp
0x0000000000197e1b : jmp rsp
0x0000000000197fb3 : jmp rsp
0x0000000000198163 : jmp rsp
0x00000000001981a3 : jmp rsp
0x00000000001981eb : jmp rsp
0x00000000001983d3 : jmp rsp
0x0000000000198443 : jmp rsp
0x0000000000198483 : jmp rsp
0x000000000019862b : jmp rsp
0x00000000001986a3 : jmp rsp
0x00000000001988cb : jmp rsp
0x00000000001989fb : jmp rsp
0x00000000001989fa : jmp rsp
0x0000000000198a23 : jmp rsp
0x0000000000198a22 : jmp rsp
0x0000000000198a73 : jmp rsp
0x0000000000198a72 : jmp rsp
0x0000000000198acb : jmp rsp
0x0000000000198aca : jmp rsp
0x0000000000198ac9 : jmp rsp
0x0000000000198e83 : jmp rsp
0x0000000000198f33 : jmp rsp
0x0000000000198f8b : jmp rsp
0x0000000000198fdb : jmp rsp
0x000000000019900b : jmp rsp
0x000000000019925b : jmp rsp
0x000000000019960b : jmp rsp
0x000000000019965b : jmp rsp
0x000000000019977b : jmp rsp
0x00000000001997e3 : jmp rsp
0x0000000000199863 : jmp rsp
0x0000000000199903 : jmp rsp
0x0000000000199a2b : jmp rsp
0x0000000000199abb : jmp rsp
0x0000000000199afb : jmp rsp
0x0000000000199bfb : jmp rsp
0x0000000000199cdb : jmp rsp
0x0000000000199d3b : jmp rsp
0x0000000000199e6b : jmp rsp
0x0000000000199f6b : jmp rsp
0x000000000019a06b : jmp rsp
0x000000000019a0cb : jmp rsp
0x000000000019a15b : jmp rsp
0x000000000019a2d3 : jmp rsp
0x000000000019a383 : jmp rsp
0x000000000019a4ab : jmp rsp
0x000000000019a4e3 : jmp rsp
0x000000000019a5eb : jmp rsp
0x000000000019a68b : jmp rsp
0x000000000019aa43 : jmp rsp
0x000000000019ab3b : jmp rsp
0x000000000019afcb : jmp rsp
0x000000000019b07b : jmp rsp
0x000000000019b15b : jmp rsp
0x000000000019b1a3 : jmp rsp
0x000000000019b203 : jmp rsp
0x000000000019b313 : jmp rsp
0x000000000019b353 : jmp rsp
0x000000000019b643 : jmp rsp
0x000000000019b663 : jmp rsp
0x000000000019b6e3 : jmp rsp
0x000000000019b79b : jmp rsp
0x000000000019e59b : jmp rsp
0x000000000019e5c3 : jmp rsp
0x00000000001a4d83 : jmp rsp
0x0000000000101f37 : jne 0x101f7a ; sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103148 : jne 0x103130 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000105d3a : jne 0x105d38 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105daa : jne 0x105da8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000112d2e : jne 0x112d67 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114a45 : jne 0x114a59 ; cmp qword ptr [rdi], 0 ; je 0x114a61 ; ret
0x0000000000114ab8 : jne 0x114ac7 ; mov eax, 1 ; ret
0x0000000000114ae8 : jne 0x114af4 ; xor eax, eax ; ret
0x0000000000114b18 : jne 0x114b24 ; xor eax, eax ; ret
0x0000000000114b48 : jne 0x114b54 ; xor eax, eax ; ret
0x0000000000114b78 : jne 0x114b84 ; xor eax, eax ; ret
0x0000000000114ba8 : jne 0x114bb4 ; xor eax, eax ; ret
0x0000000000114bd8 : jne 0x114be4 ; xor eax, eax ; ret
0x0000000000114c08 : jne 0x114c14 ; xor eax, eax ; ret
0x0000000000114c38 : jne 0x114c44 ; xor eax, eax ; ret
0x0000000000114c68 : jne 0x114c74 ; xor eax, eax ; ret
0x0000000000114c98 : jne 0x114ca4 ; xor eax, eax ; ret
0x0000000000114cc8 : jne 0x114cd4 ; xor eax, eax ; ret
0x0000000000114cf8 : jne 0x114d04 ; xor eax, eax ; ret
0x0000000000114d28 : jne 0x114d34 ; xor eax, eax ; ret
0x0000000000114d58 : jne 0x114d64 ; xor eax, eax ; ret
0x0000000000114d88 : jne 0x114d94 ; xor eax, eax ; ret
0x0000000000114db8 : jne 0x114dc4 ; xor eax, eax ; ret
0x0000000000114de8 : jne 0x114df4 ; xor eax, eax ; ret
0x0000000000114e18 : jne 0x114e24 ; xor eax, eax ; ret
0x0000000000114e48 : jne 0x114e54 ; xor eax, eax ; ret
0x0000000000114e78 : jne 0x114e84 ; xor eax, eax ; ret
0x0000000000114ed8 : jne 0x114ee4 ; xor eax, eax ; ret
0x0000000000114f08 : jne 0x114f14 ; xor eax, eax ; ret
0x0000000000114f38 : jne 0x114f44 ; xor eax, eax ; ret
0x0000000000114f68 : jne 0x114f74 ; xor eax, eax ; ret
0x0000000000114f98 : jne 0x114fa4 ; xor eax, eax ; ret
0x0000000000114fc8 : jne 0x114fd4 ; xor eax, eax ; ret
0x0000000000114ff8 : jne 0x115004 ; xor eax, eax ; ret
0x0000000000115028 : jne 0x115034 ; xor eax, eax ; ret
0x0000000000115058 : jne 0x115064 ; xor eax, eax ; ret
0x00000000001150a2 : jne 0x115099 ; pop rdx ; pop r10 ; ret
0x0000000000115195 : jne 0x1151a3 ; ret
0x00000000001153a4 : jne 0x115383 ; ret
0x00000000001153df : jne 0x1153d7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000115537 : jne 0x1154d7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000115b44 : jne 0x115b2f ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000115b73 : jne 0x115b6c ; xor eax, eax ; leave ; ret
0x0000000000116574 : jne 0x11651e ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001178ea : jne 0x117900 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000117bb6 : jne 0x117b6a ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000011fd83 : jne 0x11fd73 ; pop rbx ; ret
0x00000000001235bc : jne 0x123597 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000123de4 : jne 0x123e34 ; mov eax, r8d ; ret
0x000000000012668d : jne 0x1265da ; ret
0x000000000012877c : jne 0x128782 ; ret
0x00000000001287bc : jne 0x1287b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d8ed : jne 0x12d938 ; mov dword ptr [rsi], 0 ; ret
0x000000000012e1a5 : jne 0x12e1b8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000012e2ad : jne 0x12e247 ; xor eax, eax ; pop rbx ; ret
0x0000000000133048 : jne 0x133052 ; ret
0x0000000000138f27 : jne 0x138f13 ; pop rbx ; ret
0x00000000001391a8 : jne 0x1391b2 ; ret
0x000000000013aaa3 : jne 0x13aa9a ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013c482 : jne 0x13c497 ; mov eax, 1 ; ret
0x000000000013c4c2 : jne 0x13c4d7 ; mov eax, 1 ; ret
0x0000000000140eac : jne 0x140ebd ; xor eax, eax ; pop rbx ; ret
0x000000000014368b : jne 0x14366e ; add rsp, 0x48 ; ret
0x000000000014366d : jne 0x1436a0 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000143735 : jne 0x143748 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001437a8 : jne 0x1437c6 ; add rsp, 0x38 ; ret
0x00000000001443b8 : jne 0x1443c4 ; xor eax, eax ; ret
0x00000000001443e8 : jne 0x1443f4 ; xor eax, eax ; ret
0x0000000000144418 : jne 0x144424 ; xor eax, eax ; ret
0x0000000000144448 : jne 0x144454 ; xor eax, eax ; ret
0x0000000000144478 : jne 0x144484 ; xor eax, eax ; ret
0x00000000001444a8 : jne 0x1444b4 ; xor eax, eax ; ret
0x0000000000168871 : jne 0x168e26 ; ret
0x00000000001688d9 : jne 0x168e26 ; ret
0x0000000000168acf : jne 0x168e26 ; ret
0x0000000000168af1 : jne 0x168e26 ; ret
0x0000000000168b17 : jne 0x168e26 ; ret
0x0000000000168b2f : jne 0x168e26 ; ret
0x0000000000168b55 : jne 0x168e26 ; ret
0x0000000000168b77 : jne 0x168e26 ; ret
0x0000000000168b95 : jne 0x168e26 ; ret
0x0000000000168bb7 : jne 0x168e26 ; ret
0x0000000000168bd7 : jne 0x168e26 ; ret
0x0000000000168bf7 : jne 0x168e26 ; ret
0x0000000000168c17 : jne 0x168e26 ; ret
0x0000000000168c39 : jne 0x168e26 ; ret
0x0000000000168c59 : jne 0x168e26 ; ret
0x0000000000168c79 : jne 0x168e26 ; ret
0x000000000016fa0d : jne 0x16fa37 ; xor eax, eax ; ret
0x000000000016f001 : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f0dc : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f1cc : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f2bc : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f407 : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f487 : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f507 : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f587 : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f858 : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f8f8 : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f998 : jne 0x16fa3b ; xor eax, eax ; ret
0x000000000016f029 : jne 0x16fa47 ; xor eax, eax ; ret
0x000000000016f28b : jne 0x16fa47 ; xor eax, eax ; ret
0x000000000016f2e6 : jne 0x16fa47 ; xor eax, eax ; ret
0x000000000016f384 : jne 0x16fa47 ; xor eax, eax ; ret
0x000000000016f735 : jne 0x16fa47 ; xor eax, eax ; ret
0x000000000016f7c5 : jne 0x16fa47 ; xor eax, eax ; ret
0x000000000017084d : jne 0x170877 ; xor eax, eax ; ret
0x0000000000170631 : jne 0x17087b ; xor eax, eax ; ret
0x0000000000170757 : jne 0x17087b ; xor eax, eax ; ret
0x0000000000170881 : jne 0x17088a ; xor eax, eax ; ret
0x0000000000170657 : jne 0x17088e ; xor eax, eax ; ret
0x00000000001706d2 : jne 0x17088e ; xor eax, eax ; ret
0x00000000001707e3 : jne 0x17088e ; xor eax, eax ; ret
0x0000000000170995 : jne 0x170926 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170967 : jne 0x170926 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170966 : jne 0x170927 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001720f4 : jne 0x172308 ; xor eax, eax ; ret
0x00000000001722f9 : jne 0x172319 ; xor eax, eax ; ret
0x00000000001721a1 : jne 0x17231d ; xor eax, eax ; ret
0x000000000017225c : jne 0x17231d ; xor eax, eax ; ret
0x0000000000172311 : jne 0x17231e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000172926 : jne 0x172934 ; xor eax, eax ; ret
0x00000000001727fd : jne 0x172936 ; ret
0x0000000000172816 : jne 0x172936 ; ret
0x000000000017282b : jne 0x172936 ; ret
0x0000000000172846 : jne 0x172936 ; ret
0x00000000001735ef : jne 0x1735df ; mov rdi, r14 ; call 0x1f8af
0x00000000001740ed : jne 0x1740de ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174140 : jne 0x174120 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017427d : jne 0x17426d ; pop rbx ; ret
0x0000000000174325 : jne 0x17430b ; pop rbx ; ret
0x0000000000174498 : jne 0x1744a3 ; ret
0x0000000000174579 : jne 0x17456c ; pop rbx ; ret
0x0000000000199255 : jne 0x19925e ; add byte ptr [rdx + rcx - 0xa], al ; jmp rsp
0x000000000019e221 : jne 0x19e20e ; jmp qword ptr [rcx]
0x000000000019e220 : jne 0x19e20f ; jmp qword ptr [rcx]
0x00000000001a7621 : jne 0x1a7614 ; jmp qword ptr [rax]
0x0000000000033bd4 : jne 0x33bb2 ; ret
0x0000000000034ad0 : jne 0x34ae6 ; add rsp, 0x28 ; ret
0x0000000000034e0b : jne 0x34e1e ; add rsp, 0x28 ; ret
0x0000000000035308 : jne 0x35313 ; ret
0x0000000000003796 : jne 0x3774 ; ret 0x975
0x000000000003a61c : jne 0x3a5e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a6cb : jne 0x3a6d3 ; pop rbx ; ret
0x0000000000047058 : jne 0x47056 ; mov rax, rbx ; pop rbx ; ret
0x0000000000048061 : jne 0x48047 ; mov eax, 1 ; ret
0x0000000000048087 : jne 0x4807c ; xor eax, eax ; ret
0x00000000000481f9 : jne 0x481df ; mov eax, 1 ; ret
0x000000000004821f : jne 0x48214 ; xor eax, eax ; ret
0x00000000000484c7 : jne 0x484b6 ; mov rax, rdx ; ret
0x0000000000048b7f : jne 0x48b76 ; mov rax, rdx ; ret
0x000000000004a6f1 : jne 0x4a6dd ; mov rax, rsi ; ret
0x000000000004a775 : jne 0x4a755 ; mov rax, rsi ; ret
0x000000000006acc1 : jne 0x6acd6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000071c01 : jne 0x71bf3 ; ret
0x000000000007469c : jne 0x746a3 ; pop rbx ; ret
0x0000000000078160 : jne 0x78176 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a395 : jne 0x7a3a2 ; ret
0x000000000007af41 : jne 0x7af33 ; ret
0x000000000007bc61 : jne 0x7bc78 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007bfd2 : jne 0x7bfbd ; pop rbx ; ret
0x000000000007c00c : jne 0x7c005 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c846 : jne 0x7c83b ; ret
0x000000000007d8bf : jne 0x7d891 ; mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x000000000007d8d7 : jne 0x7d908 ; xor edi, edi ; call qword ptr [r15]
0x000000000007ef52 : jne 0x7ef66 ; jmp 0x7ef80
0x0000000000083b63 : jne 0x83b76 ; jmp 0x83b90
0x0000000000083f8c : jne 0x83f53 ; ret
0x000000000008873f : jne 0x886f5 ; xor eax, eax ; pop rbx ; ret
0x00000000000895d1 : jne 0x895c3 ; ret
0x000000000008967b : jne 0x89673 ; ret
0x0000000000089cfb : jne 0x89d0d ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008b8c3 : jne 0x8b8ce ; xor rax, rax ; ret
0x000000000008bb57 : jne 0x8bb69 ; lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008d80e : jne 0x8d7d4 ; add rsp, 8 ; ret
0x000000000008d831 : jne 0x8d846 ; add rsp, 8 ; ret
0x000000000008eb19 : jne 0x8eb75 ; xor rax, rax ; ret
0x000000000008ead9 : jne 0x8eb99 ; xor rax, rax ; ret
0x000000000008ebc1 : jne 0x8ebd4 ; lea rax, qword ptr [rip + 0x26] ; ret
0x000000000008f2ea : jne 0x8f2d3 ; ret
0x000000000008f4d3 : jne 0x8f3bf ; mov rax, rdi ; ret
0x000000000008f50f : jne 0x8f3bf ; mov rax, rdi ; ret
0x000000000008f6f9 : jne 0x8f3bf ; mov rax, rdi ; ret
0x000000000008f7f8 : jne 0x8f3bf ; mov rax, rdi ; ret
0x000000000008f429 : jne 0x8f415 ; mov rax, rdi ; ret
0x000000000008f9e7 : jne 0x8f9f9 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008fa4a : jne 0x8fa5c ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000091cd7 : jne 0x91ce9 ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000091d3a : jne 0x91d4c ; lea rax, qword ptr [rip + 0xd] ; ret
0x000000000009443c : jne 0x9444f ; lea rax, qword ptr [rip + 0xb3db] ; ret
0x00000000000945a8 : jne 0x94480 ; ret
0x00000000000945e4 : jne 0x94480 ; ret
0x00000000000947ce : jne 0x94480 ; ret
0x00000000000948cd : jne 0x94480 ; ret
0x00000000000944e9 : jne 0x944d3 ; ret
0x0000000000096a46 : jne 0x96a31 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096af0 : jne 0x96aff ; jmp 0x96ab9
0x0000000000097385 : jne 0x9737d ; xor eax, eax ; pop rbx ; ret
0x0000000000097357 : jne 0x9738d ; mov rax, rdi ; pop rbx ; ret
0x000000000009742d : jne 0x97424 ; xor eax, eax ; ret
0x000000000009751d : jne 0x97514 ; pop rbx ; pop rbp ; ret
0x000000000009d9c0 : jne 0x9d9b9 ; jmp 0x9d36c
0x000000000009e3fa : jne 0x9e3f3 ; jmp 0x9d3f4
0x000000000009eae6 : jne 0x9eadb ; ret
0x000000000009eb2a : jne 0x9eb1b ; ret
0x000000000009eb84 : jne 0x9eb63 ; ret
0x000000000009ec2a : jne 0x9ec18 ; cmp r8d, ecx ; je 0x9ec18 ; ret
0x000000000009ec69 : jne 0x9ec5c ; xor eax, eax ; ret
0x000000000009ecc2 : jne 0x9eca4 ; xor eax, eax ; ret
0x000000000009ed22 : jne 0x9ed15 ; mov qword ptr [rdx], rcx ; ret
0x000000000009eddb : jne 0x9edd0 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee59 : jne 0x9ee41 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009f08d : jne 0x9f118 ; xor eax, eax ; ret
0x000000000009f0ca : jne 0x9f144 ; xor eax, eax ; ret
0x000000000009f80c : jne 0x9f7f6 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000a657a : jne 0xa6e36 ; ret
0x00000000000a659e : jne 0xa6e36 ; ret
0x00000000000a65c1 : jne 0xa6e36 ; ret
0x00000000000a65dc : jne 0xa6e36 ; ret
0x00000000000a65ff : jne 0xa6e36 ; ret
0x00000000000a6624 : jne 0xa6e36 ; ret
0x00000000000a6642 : jne 0xa6e36 ; ret
0x00000000000a665e : jne 0xa6e36 ; ret
0x00000000000a6681 : jne 0xa6e36 ; ret
0x00000000000a66a6 : jne 0xa6e36 ; ret
0x00000000000a66c4 : jne 0xa6e36 ; ret
0x00000000000a66e4 : jne 0xa6e36 ; ret
0x00000000000a6706 : jne 0xa6e36 ; ret
0x00000000000a6726 : jne 0xa6e36 ; ret
0x00000000000a6746 : jne 0xa6e36 ; ret
0x00000000000a6760 : jne 0xa6e36 ; ret
0x00000000000a6783 : jne 0xa6e36 ; ret
0x00000000000a67a8 : jne 0xa6e36 ; ret
0x00000000000a67c6 : jne 0xa6e36 ; ret
0x00000000000a67e6 : jne 0xa6e36 ; ret
0x00000000000a6809 : jne 0xa6e36 ; ret
0x00000000000a6828 : jne 0xa6e36 ; ret
0x00000000000a6848 : jne 0xa6e36 ; ret
0x00000000000a6868 : jne 0xa6e36 ; ret
0x00000000000a688b : jne 0xa6e36 ; ret
0x00000000000a68c0 : jne 0xa6e36 ; ret
0x00000000000a68ee : jne 0xa6e36 ; ret
0x00000000000a691e : jne 0xa6e36 ; ret
0x00000000000a694a : jne 0xa6e36 ; ret
0x00000000000a697a : jne 0xa6e36 ; ret
0x00000000000a69aa : jne 0xa6e36 ; ret
0x00000000000a69da : jne 0xa6e36 ; ret
0x00000000000a7c1d : jne 0xa8646 ; ret
0x00000000000a7c42 : jne 0xa8646 ; ret
0x00000000000a7c65 : jne 0xa8646 ; ret
0x00000000000a7c80 : jne 0xa8646 ; ret
0x00000000000a7ca3 : jne 0xa8646 ; ret
0x00000000000a7cc8 : jne 0xa8646 ; ret
0x00000000000a7ce6 : jne 0xa8646 ; ret
0x00000000000a7d02 : jne 0xa8646 ; ret
0x00000000000a7d25 : jne 0xa8646 ; ret
0x00000000000a7d4a : jne 0xa8646 ; ret
0x00000000000a7d78 : jne 0xa8646 ; ret
0x00000000000a7d98 : jne 0xa8646 ; ret
0x00000000000a7dba : jne 0xa8646 ; ret
0x00000000000a7dea : jne 0xa8646 ; ret
0x00000000000a7e1a : jne 0xa8646 ; ret
0x00000000000a7e44 : jne 0xa8646 ; ret
0x00000000000a7e67 : jne 0xa8646 ; ret
0x00000000000a7e8c : jne 0xa8646 ; ret
0x00000000000a7eba : jne 0xa8646 ; ret
0x00000000000a7eea : jne 0xa8646 ; ret
0x00000000000a7f1d : jne 0xa8646 ; ret
0x00000000000a7f4c : jne 0xa8646 ; ret
0x00000000000a7f7c : jne 0xa8646 ; ret
0x00000000000a7fac : jne 0xa8646 ; ret
0x00000000000a7fdf : jne 0xa8646 ; ret
0x00000000000a8014 : jne 0xa8646 ; ret
0x00000000000a8042 : jne 0xa8646 ; ret
0x00000000000a8072 : jne 0xa8646 ; ret
0x00000000000a809e : jne 0xa8646 ; ret
0x00000000000a80ce : jne 0xa8646 ; ret
0x00000000000a80fe : jne 0xa8646 ; ret
0x00000000000a812e : jne 0xa8646 ; ret
0x00000000000aa161 : jne 0xaa152 ; ret
0x00000000000aa211 : jne 0xaa202 ; ret
0x00000000000aa381 : jne 0xaa376 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000aa4d1 : jne 0xaa4c6 ; sub rax, 1 ; ret
0x00000000000aae17 : jne 0xaae0b ; ret
0x00000000000abbe6 : jne 0xabc62 ; ret
0x00000000000abbfb : jne 0xabc62 ; ret
0x00000000000abc06 : jne 0xabc62 ; ret
0x00000000000abc21 : jne 0xabc62 ; ret
0x00000000000abc36 : jne 0xabc62 ; ret
0x00000000000abc4b : jne 0xabc62 ; ret
0x00000000000abc56 : jne 0xabc62 ; ret
0x00000000000abb0f : jne 0xabc66 ; ret
0x00000000000abb26 : jne 0xabc66 ; ret
0x00000000000abb3b : jne 0xabc66 ; ret
0x00000000000abb56 : jne 0xabc66 ; ret
0x00000000000abb71 : jne 0xabc66 ; ret
0x00000000000abb86 : jne 0xabc66 ; ret
0x00000000000abb9b : jne 0xabc66 ; ret
0x00000000000abbb6 : jne 0xabc66 ; ret
0x00000000000abbd1 : jne 0xabc66 ; ret
0x00000000000abaee : jne 0xabc68 ; xor eax, eax ; ret
0x00000000000abc91 : jne 0xabca4 ; lea rax, qword ptr [rip + 0xf596] ; ret
0x00000000000ac053 : jne 0xac01b ; ret
0x00000000000ac096 : jne 0xac089 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000ac169 : jne 0xac155 ; xor eax, eax ; ret
0x00000000000ac54b : jne 0xac5a6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac578 : jne 0xac5a6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac58e : jne 0xac5a6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac623 : jne 0xac5f3 ; ret
0x00000000000ac60d : jne 0xac603 ; ret
0x00000000000ac6dc : jne 0xac6d4 ; xor eax, eax ; ret
0x00000000000ac738 : jne 0xac716 ; mov rax, rdi ; ret
0x00000000000ac861 : jne 0xac874 ; lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000ac915 : jne 0xac922 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000ac953 : jne 0xac94b ; ret
0x00000000000ada8b : jne 0xada46 ; mov rax, rdx ; ret
0x00000000000adacc : jne 0xadac3 ; ret
0x00000000000bb223 : jne 0xbb200 ; ret
0x00000000000bb254 : jne 0xbb24b ; ret
0x00000000000bfe19 : jne 0xbfe31 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000cd991 : jne 0xcd95e ; ret
0x00000000000cd9d7 : jne 0xcd962 ; mov eax, 0x7d00 ; ret
0x00000000000cda99 : jne 0xcdac2 ; ret
0x00000000000cdb03 : jne 0xcdac6 ; mov eax, 0x40 ; ret
0x00000000000cdba0 : jne 0xcdb7f ; xor eax, eax ; ret
0x00000000000cdb9c : jne 0xcdc18 ; add byte ptr [rax], al ; jne 0xcdb83 ; xor eax, eax ; ret
0x00000000000d1600 : jne 0xd15e4 ; ret
0x00000000000d1638 : jne 0xd15fd ; mov eax, 1 ; ret
0x00000000000d1648 : jne 0xd1613 ; mov eax, 1 ; ret
0x00000000000d170e : jne 0xd16cf ; mov eax, 1 ; ret
0x00000000000d1726 : jne 0xd16ec ; mov eax, 1 ; ret
0x00000000000d189e : jne 0xd1890 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d734d : jne 0xd729d ; pop rbx ; ret
0x00000000000d734c : jne 0xd729e ; pop rbx ; ret
0x00000000000d72fa : jne 0xd72f9 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd729f ; pop rbx ; ret
0x00000000000d7ca9 : jne 0xd7c83 ; jmp 0xd7c73
0x00000000000ef91b : jne 0xef909 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7841 : jne 0xf78c9 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe101 : jne 0xfe0d5 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe2c2 : jne 0xfe295 ; xor eax, eax ; pop rbx ; ret
0x00000000000ffd97 : jne 0xffd41 ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000016f2be : jno 0x16f2cd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019ccd1 : jno 0x19ccd2 ; jmp qword ptr [rdi]
0x000000000019dfc9 : jno 0x19dfb6 ; call qword ptr [rax]
0x00000000001a0ee6 : jno 0x1a0ef4 ; ret
0x00000000001a0ee6 : jno 0x1a0efa ; ret
0x00000000001a2c8d : jno 0x1a2c95 ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x00000000001a45a9 : jno 0x1a459a ; call qword ptr [rsi]
0x00000000001b0c09 : jno 0x1b0c02 ; jmp qword ptr [rcx]
0x00000000001b0c39 : jno 0x1b0c32 ; jmp qword ptr [rcx]
0x00000000001b0c51 : jno 0x1b0c4a ; jmp qword ptr [rcx]
0x00000000001b2c45 : jno 0x1b2c4e ; add byte ptr [rax], bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2c5d : jno 0x1b2c66 ; add byte ptr [rax], dh ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000021d7 : jno 0x2224 ; ret 0x1dd4
0x0000000000003957 : jno 0x39a1 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000048984 : jno 0x489d6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000071271 : jno 0x7127f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000008f199 : jno 0x8f1ad ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f199 : jno 0x8f1af ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000009fae0 : jno 0x9fae9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009fd1a : jno 0x9fd23 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009fe81 : jno 0x9fe92 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009ffe6 : jno 0xa006a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a0233 : jno 0xa023c ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a046d : jno 0xa0476 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a05d4 : jno 0xa05e5 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a0739 : jno 0xa07bd ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a0980 : jno 0xa0989 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a0bba : jno 0xa0bc3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a0d21 : jno 0xa0d32 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a0e86 : jno 0xa0f0a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000ac913 : jno 0xac922 ; jne 0xac924 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000ac919 : jno 0xac926 ; ret
0x00000000000c1585 : jno 0xc1512 ; ret 0xe283
0x00000000000c1612 : jno 0xc159f ; ret 0xe283
0x00000000000c16da : jno 0xc1667 ; ret 0xe283
0x00000000000c174a : jno 0xc16d7 ; ret 0xe283
0x00000000000c1a83 : jno 0xc1a10 ; ret 0xe283
0x00000000000c1afa : jno 0xc1a87 ; ret 0xe283
0x00000000000c1d4a : jno 0xc1cd7 ; ret 0xe283
0x00000000000c1dda : jno 0xc1d67 ; ret 0xe283
0x00000000000c2655 : jno 0xc264f ; ret
0x00000000000c2bc9 : jno 0xc2bc3 ; ret
0x00000000000c2c18 : jno 0xc2c12 ; ret
0x00000000000c2d03 : jno 0xc2c90 ; ret 0xe283
0x00000000000c2e9b : jno 0xc2e28 ; ret 0xe283
0x00000000000c2f2e : jno 0xc2ebb ; ret 0xe283
0x00000000000e3008 : jno 0xe300e ; dec dword ptr [rax - 0x77] ; ret
0x0000000000102a29 : jnp 0x102a00 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000011fd7e : jnp 0x11fdd0 ; test rdi, rdi ; jne 0x11fd78 ; pop rbx ; ret
0x0000000000135013 : jnp 0x13507f ; call rax
0x0000000000135a33 : jnp 0x135a8f ; call rax
0x0000000000183ca5 : jnp 0x183c62 ; ret
0x0000000000189f31 : jnp 0x189f2a ; call rsi
0x0000000000189f30 : jnp 0x189f2b ; call rsi
0x000000000018a9cd : jnp 0x18a9c7 ; jmp qword ptr [rbx]
0x0000000000195f2d : jnp 0x195f2d ; call qword ptr [rdx]
0x0000000000195f31 : jnp 0x195f35 ; call qword ptr [rdx + 0x12fffc7a]
0x000000000019606d : jnp 0x19606d ; jmp rax
0x00000000001960ad : jnp 0x1960ad ; call rax
0x000000000019938d : jnp 0x199396 ; add byte ptr [rsp - 0xa], al ; call rsp
0x000000000019c201 : jnp 0x19c202 ; jmp qword ptr [rdx]
0x000000000019c200 : jnp 0x19c203 ; jmp qword ptr [rdx]
0x00000000001b11e1 : jnp 0x1b11da ; jmp qword ptr [rcx]
0x00000000001b11f9 : jnp 0x1b11f2 ; jmp qword ptr [rcx]
0x00000000001b1211 : jnp 0x1b120a ; jmp qword ptr [rcx]
0x00000000001b1229 : jnp 0x1b1222 ; jmp qword ptr [rcx]
0x0000000000047055 : jnp 0x47061 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000fc748 : jnp 0x481beb9b ; add esp, 0x18 ; ret
0x00000000000ff452 : jnp 0xff488 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000012804d : jns 0x12805a ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000182dae : jns 0x182d44 ; ret 0xf869
0x0000000000182dad : jns 0x182d45 ; ret 0xf869
0x00000000001851be : jns 0x185215 ; jmp 0x185156
0x00000000001886c1 : jns 0x1886bc ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188741 : jns 0x18873c ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188759 : jns 0x188754 ; ljmp ptr [rdx - 0x7d] ; call qword ptr [rdx]
0x000000000018a8a9 : jns 0x18a8a3 ; jmp qword ptr [rdx]
0x000000000018a8b1 : jns 0x18a8ab ; jmp qword ptr [rdx]
0x000000000018a919 : jns 0x18a913 ; jmp qword ptr [rdx]
0x000000000018a918 : jns 0x18a914 ; jmp qword ptr [rdx]
0x000000000018a94d : jns 0x18a947 ; jmp qword ptr [rdx]
0x0000000000194f61 : jns 0x194f64 ; call qword ptr [rax + 0x10fffb7a]
0x0000000000195f3d : jns 0x195f3d ; call qword ptr [rdx]
0x000000000019607d : jns 0x19607d ; jmp rax
0x00000000001960bd : jns 0x1960bd ; call rax
0x0000000000001b2d : jns 0x1b38 ; ret
0x00000000001bc371 : jns 0x1bc36d ; call qword ptr [rcx]
0x0000000000020490 : jns 0x20380 ; jmp 0x20461
0x0000000000029ae4 : jns 0x29d4cceb ; ret
0x0000000000002be3 : jns 0x2bb1 ; clc ; ret
0x0000000000003267 : jns 0x3242 ; ret 0x5a51
0x00000000000038ef : jns 0x3942 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000005c4f7 : jns 0x5c534 ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000009fae7 : jns 0x9faea ; ret
0x000000000009fd21 : jns 0x9fd24 ; ret
0x000000000009fe88 : jns 0x9fe93 ; ret
0x00000000000a023a : jns 0xa023d ; ret
0x00000000000a0474 : jns 0xa0477 ; ret
0x00000000000a05db : jns 0xa05e6 ; ret
0x00000000000a0987 : jns 0xa098a ; ret
0x00000000000a0bc1 : jns 0xa0bc4 ; ret
0x00000000000a0d28 : jns 0xa0d33 ; ret
0x00000000000d7ca6 : jns 0xd7cb6 ; add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7c76
0x00000000000fdc64 : jns 0xfdc72 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000137d60 : jns 0xffffffffc496c647 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a9c46 : jns 0xffffffffed3a9fac ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9ca8 : jns 0xffffffffed3aa40e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9cc8 : jns 0xffffffffed3aa52e ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000133353 : jo 0x1333b9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136e62 : jo 0x136ec1 ; ret
0x0000000000140ecc : jo 0x140eed ; sub byte ptr [rax], al ; ret
0x0000000000183e24 : jo 0x183e9e ; mov ebp, 0xfb67d10d ; ret
0x0000000000187dfc : jo 0x187df0 ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000189580 : jo 0x1895d7 ; hlt ; jmp qword ptr [rsi]
0x0000000000194e30 : jo 0x194e3f ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000194e90 : jo 0x194eb3 ; sti ; call qword ptr [rax]
0x0000000000194eb0 : jo 0x194ee0 ; sti ; call qword ptr [rax]
0x0000000000194f4c : jo 0x194fac ; sti ; call qword ptr [rax]
0x00000000001952b0 : jo 0x195290 ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000195314 : jo 0x1952f5 ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000195330 : jo 0x19530b ; sti ; jmp qword ptr [rax]
0x000000000019552c : jo 0x195526 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000195580 : jo 0x195581 ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x00000000001959c0 : jo 0x195a18 ; cld ; jmp rax
0x0000000000195bc4 : jo 0x195c1b ; cld ; jmp rax
0x0000000000195e8c : jo 0x195e12 ; cld ; call qword ptr [rax]
0x0000000000196398 : jo 0x196341 ; cld ; jmp rax
0x0000000000196584 : jo 0x196527 ; cld ; jmp rax
0x0000000000197e19 : jo 0x197e0b ; jmp rsp
0x000000000019df71 : jo 0x19df5e ; call qword ptr [rcx]
0x00000000001a2b0b : jo 0x1a2b16 ; mov ebp, 0x41380e0a ; ret
0x00000000001a5f10 : jo 0x1a5f3e ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a6679 : jo 0x1a666b ; jmp qword ptr [rdx]
0x00000000001ac0f8 : jo 0x1ac106 ; ret
0x00000000001ade30 : jo 0x1addce ; hlt ; jmp qword ptr [rcx]
0x00000000001ae610 : jo 0x1ae5e6 ; hlt ; jmp rcx
0x00000000001b0b01 : jo 0x1b0afa ; jmp qword ptr [rcx]
0x00000000001b0b19 : jo 0x1b0b12 ; jmp qword ptr [rcx]
0x00000000001b0b31 : jo 0x1b0b2a ; jmp qword ptr [rcx]
0x00000000001b0b79 : jo 0x1b0b72 ; jmp qword ptr [rcx]
0x00000000001b0b91 : jo 0x1b0b8a ; jmp qword ptr [rcx]
0x00000000001b2b55 : jo 0x1b2b5e ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b85 : jo 0x1b2b8e ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b84 : jo 0x1b2b8f ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2bb5 : jo 0x1b2bbe ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2bfd : jo 0x1b2c06 ; add al, dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2c15 : jo 0x1b2c1e ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2c2d : jo 0x1b2c36 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001bb340 : jo 0x1bb2da ; sti ; jmp qword ptr [rdx]
0x00000000000292a6 : jo 0x292be ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002e0b3 : jo 0x2e104 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0b2 : jo 0x2e105 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000041923 : jo 0x418b7 ; sar dword ptr [rdx + 1], -0x77 ; ret
0x0000000000045096 : jo 0x450a1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000060dbc : jo 0x60d49 ; ret
0x0000000000071c7a : jo 0x71c92 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075ada : jo 0x75a67 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000075ad9 : jo 0x75a68 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000079834 : jo 0x79885 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ad294 : jo 0xad2e2 ; mov edi, ebp ; call rbx
0x00000000000ad81e : jo 0xad870 ; mov edi, esp ; call rbx
0x00000000000ba57c : jo 0xba590 ; xchg eax, ebp ; ret 0x8b4c
0x00000000000c012a : jo 0xc0133 ; jmp 0xbff1f
0x00000000000e3005 : jo 0xe2ff7 ; push rbp ; jno 0xe3011 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e3e68 : jo 0xe3e5a ; mov dl, 0x78 ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x0000000000113325 : jp 0x11337c ; mov rsi, rdx ; call rax
0x000000000012e7cd : jp 0x12e82d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000132332 : jp 0x13233e ; ret
0x00000000001350a2 : jp 0x1350ae ; ret
0x00000000001350ba : jp 0x1350c6 ; ret
0x00000000001358f2 : jp 0x1358fe ; ret
0x000000000013590a : jp 0x135916 ; ret
0x000000000013593a : jp 0x135946 ; ret
0x000000000014da76 : jp 0x14da6a ; ret
0x000000000014dad9 : jp 0x14dacd ; ret
0x000000000014da6f : jp 0x14daf9 ; jb 0x14da5c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014da74 : jp 0x14daf9 ; jp 0x14da6c ; ret
0x000000000014df66 : jp 0x14df5a ; ret
0x000000000014dfc9 : jp 0x14dfbd ; ret
0x000000000014df5f : jp 0x14dfe9 ; jb 0x14df4c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014df64 : jp 0x14dfe9 ; jp 0x14df5c ; ret
0x000000000014e309 : jp 0x14e2fd ; ret
0x000000000014e369 : jp 0x14e35d ; ret
0x000000000014e302 : jp 0x14e38c ; jb 0x14e2ef ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014e307 : jp 0x14e38c ; jp 0x14e2ff ; ret
0x000000000018a7e9 : jp 0x18a7e3 ; jmp rdx
0x000000000018a7f1 : jp 0x18a7eb ; jmp rdx
0x000000000018a88d : jp 0x18a887 ; jmp rdx
0x000000000018a8d1 : jp 0x18a8cb ; jmp qword ptr [rdx]
0x000000000018a911 : jp 0x18a90b ; jmp qword ptr [rdx]
0x0000000000194f65 : jp 0x194f64 ; call qword ptr [rax]
0x0000000000195e4c : jp 0x195dd2 ; cld ; jmp qword ptr [rax]
0x0000000000195f35 : jp 0x195f35 ; call qword ptr [rdx]
0x0000000000195f39 : jp 0x195f3d ; call qword ptr [rdx + 0x12fffc79]
0x0000000000196075 : jp 0x196075 ; jmp rax
0x00000000001960b5 : jp 0x1960b5 ; call rax
0x0000000000196a81 : jp 0x196a6e ; jmp rsp
0x000000000019e409 : jp 0x19e3f6 ; jmp qword ptr [rcx]
0x00000000001b1151 : jp 0x1b114a ; jmp qword ptr [rcx]
0x00000000001b1169 : jp 0x1b1162 ; jmp qword ptr [rcx]
0x00000000001b1181 : jp 0x1b117a ; jmp qword ptr [rcx]
0x00000000001b1199 : jp 0x1b1192 ; jmp qword ptr [rcx]
0x0000000000023653 : jp 0x2366d ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a8
0x0000000000002561 : jp 0x2545 ; jmp qword ptr [rbx]
0x0000000000002560 : jp 0x2546 ; jmp qword ptr [rbx]
0x000000000002cb28 : jp 0x2cb6b ; jae 0x2cb48 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000003956 : jp 0x39d0 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000072fe9 : jp 0x7302e ; jmp 0x72fb3
0x000000000007f42d : jp 0x7f42f ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x000000000008f3b5 : jp 0x8f3af ; ret 0x7401
0x00000000000bb641 : jp 0xbb656 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bf0b2 : jp 0xbf0e9 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff5bb : jp 0xff5f0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ff5ef : jp 0xff625 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ff5ee : jp 0xff626 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000001150f3 : jrcxz 0x1150b8 ; cmp r11d, 0xa ; je 0x115104 ; ret
0x000000000013a78f : jrcxz 0x13a7d4 ; call rsi
0x000000000015ac5a : jrcxz 0x15ac55 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ac59 : jrcxz 0x15ac56 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d72a : jrcxz 0x15d725 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d729 : jrcxz 0x15d726 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016024a : jrcxz 0x160245 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160249 : jrcxz 0x160246 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000182c05 : jrcxz 0x182c5f ; ret
0x0000000000186ce9 : jrcxz 0x186cda ; jmp qword ptr [rcx]
0x0000000000186ced : jrcxz 0x186cde ; jmp qword ptr [rcx]
0x0000000000186cf1 : jrcxz 0x186ce2 ; jmp qword ptr [rcx]
0x0000000000186cf5 : jrcxz 0x186ce6 ; jmp qword ptr [rcx]
0x0000000000186cf9 : jrcxz 0x186cea ; jmp qword ptr [rcx]
0x0000000000186cfd : jrcxz 0x186cee ; jmp qword ptr [rcx]
0x0000000000186d01 : jrcxz 0x186cf2 ; jmp qword ptr [rcx]
0x0000000000186d05 : jrcxz 0x186cf6 ; jmp qword ptr [rcx]
0x0000000000186d09 : jrcxz 0x186cfa ; jmp qword ptr [rcx]
0x0000000000186d0d : jrcxz 0x186cfe ; jmp qword ptr [rcx]
0x0000000000186d11 : jrcxz 0x186d02 ; jmp qword ptr [rcx]
0x0000000000186d15 : jrcxz 0x186d06 ; jmp qword ptr [rcx]
0x0000000000186d19 : jrcxz 0x186d0a ; jmp qword ptr [rcx]
0x0000000000186d1d : jrcxz 0x186d0e ; jmp qword ptr [rcx]
0x0000000000186d21 : jrcxz 0x186d12 ; jmp qword ptr [rcx]
0x0000000000186d25 : jrcxz 0x186d16 ; jmp qword ptr [rcx]
0x0000000000186d29 : jrcxz 0x186d1a ; jmp qword ptr [rcx]
0x0000000000186d2d : jrcxz 0x186d1e ; jmp qword ptr [rcx]
0x0000000000186d31 : jrcxz 0x186d22 ; jmp qword ptr [rcx]
0x0000000000186d35 : jrcxz 0x186d26 ; jmp qword ptr [rcx]
0x0000000000186d39 : jrcxz 0x186d2a ; jmp qword ptr [rcx]
0x0000000000186d3d : jrcxz 0x186d2e ; jmp qword ptr [rcx]
0x0000000000186d41 : jrcxz 0x186d32 ; jmp qword ptr [rcx]
0x0000000000186d45 : jrcxz 0x186d36 ; jmp qword ptr [rcx]
0x0000000000186d49 : jrcxz 0x186d3a ; jmp qword ptr [rcx]
0x0000000000186d4d : jrcxz 0x186d3e ; jmp qword ptr [rcx]
0x0000000000186d59 : jrcxz 0x186d4e ; push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186d71 : jrcxz 0x186d62 ; jmp qword ptr [rcx]
0x0000000000186d75 : jrcxz 0x186d66 ; jmp qword ptr [rcx]
0x0000000000186d79 : jrcxz 0x186d6a ; jmp qword ptr [rcx]
0x0000000000186d7d : jrcxz 0x186d6e ; jmp qword ptr [rcx]
0x0000000000186d81 : jrcxz 0x186d72 ; jmp qword ptr [rcx]
0x0000000000186d85 : jrcxz 0x186d76 ; jmp qword ptr [rcx]
0x0000000000186d89 : jrcxz 0x186d7a ; jmp qword ptr [rcx]
0x0000000000186d8d : jrcxz 0x186d7e ; jmp qword ptr [rcx]
0x0000000000186d91 : jrcxz 0x186d82 ; jmp qword ptr [rcx]
0x0000000000186d95 : jrcxz 0x186d86 ; jmp qword ptr [rcx]
0x0000000000186d99 : jrcxz 0x186d8e ; dec dword ptr [rdi - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186da1 : jrcxz 0x186d92 ; jmp qword ptr [rcx]
0x0000000000186da5 : jrcxz 0x186d96 ; jmp qword ptr [rcx]
0x0000000000186da9 : jrcxz 0x186d9a ; jmp qword ptr [rcx]
0x0000000000186dad : jrcxz 0x186da2 ; inc dword ptr [rax - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186db5 : jrcxz 0x186da6 ; jmp qword ptr [rcx]
0x0000000000186db9 : jrcxz 0x186dae ; lcall ptr [rbx - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186dc1 : jrcxz 0x186db2 ; jmp qword ptr [rcx]
0x0000000000186dc5 : jrcxz 0x186db6 ; jmp qword ptr [rcx]
0x0000000000186dc9 : jrcxz 0x186dba ; jmp qword ptr [rcx]
0x0000000000186dcd : jrcxz 0x186dbe ; jmp qword ptr [rcx]
0x0000000000186df1 : jrcxz 0x186de6 ; inc dword ptr [rbp - 0x1d] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186df5 : jrcxz 0x186de6 ; jmp qword ptr [rcx]
0x0000000000186df4 : jrcxz 0x186de7 ; jmp qword ptr [rcx]
0x0000000000186df9 : jrcxz 0x186dea ; jmp qword ptr [rcx]
0x0000000000186dfd : jrcxz 0x186dee ; jmp qword ptr [rcx]
0x0000000000186e01 : jrcxz 0x186df2 ; jmp qword ptr [rcx]
0x0000000000186e15 : jrcxz 0x186e06 ; jmp qword ptr [rcx]
0x0000000000186e19 : jrcxz 0x186e0e ; push qword ptr [rdx - 0x20] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000186e21 : jrcxz 0x186e12 ; jmp qword ptr [rdx]
0x0000000000186e29 : jrcxz 0x186e1a ; jmp qword ptr [rcx]
0x0000000000195269 : jrcxz 0x19526c ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195268 : jrcxz 0x19526d ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195289 : jrcxz 0x195288 ; call qword ptr [rax]
0x000000000019532d : jrcxz 0x195330 ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019a0d9 : jrcxz 0x19a0d6 ; jmp qword ptr [rdx + rax*8 + 1]
0x000000000019a0f9 : jrcxz 0x19a0f6 ; inc esp ; ret 1
0x00000000001a7c81 : jrcxz 0x1a7c74 ; call rsp
0x00000000001aebf1 : jrcxz 0x1aebe9 ; call qword ptr [rsi]
0x00000000001aec09 : jrcxz 0x1aec01 ; jmp qword ptr [rcx]
0x00000000001b5b01 : jrcxz 0x1b5afb ; jmp qword ptr [rdi]
0x000000000004edde : jrcxz 0x4edee ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000050ebc : jrcxz 0x50f35 ; ret 0x8945
0x0000000000053b2e : jrcxz 0x53ba7 ; ret
0x00000000000567c8 : jrcxz 0x567c2 ; ret 0xf40
0x00000000000c47cf : jrcxz 0xc47e8 ; test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00000000000d7330 : jrcxz 0xd733f ; je 0xd72cf ; pop rbx ; ret
0x00000000000ef91c : jrcxz 0xef96e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000105d3f : js 0x105d9f ; pop rbp ; ret
0x0000000000105daf : js 0x105e0f ; pop rbp ; ret
0x000000000010a498 : js 0x10a424 ; loopne 0x10a4ab ; movzx eax, ax ; ret
0x000000000010a5c8 : js 0x10a551 ; loopne 0x10a5d1 ; ret
0x000000000010a658 : js 0x10a5e4 ; loopne 0x10a665 ; movzx eax, ax ; ret
0x000000000010a958 : js 0x10a8e4 ; loopne 0x10a967 ; movzx eax, ax ; ret
0x000000000010ae31 : js 0x10adbd ; loopne 0x10ae44 ; movzx eax, ax ; ret
0x000000000010af31 : js 0x10aeba ; loopne 0x10af3a ; ret
0x000000000010afb1 : js 0x10af3d ; loopne 0x10afbe ; movzx eax, ax ; ret
0x000000000010b231 : js 0x10b1bd ; loopne 0x10b240 ; movzx eax, ax ; ret
0x00000000001123c4 : js 0x1123ff ; mov edx, 5 ; call 0x2e629
0x00000000001193b4 : js 0x1193c9 ; mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000119434 : js 0x119447 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000012b8c4 : js 0x12b89f ; sub dword ptr [rax], eax ; pop rbx ; ret
0x0000000000140ca3 : js 0x140cb8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000195ec5 : js 0x195ec5 ; jmp qword ptr [rax]
0x0000000000196005 : js 0x196005 ; call rsp
0x0000000000196004 : js 0x196006 ; call rsp
0x0000000000199305 : js 0x19930e ; add byte ptr [rsp + rdx - 0xa], dh ; call rsp
0x000000000019c339 : js 0x19c325 ; call qword ptr [rax]
0x000000000019c338 : js 0x19c326 ; call qword ptr [rax]
0x000000000019c351 : js 0x19c33d ; jmp qword ptr [rcx]
0x000000000019c350 : js 0x19c33e ; jmp qword ptr [rcx]
0x000000000019d9d8 : js 0x19da28 ; jmp 0x1b9ce2
0x00000000001a6678 : js 0x1a66ed ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6af8 : js 0x1a6afc ; stc ; call qword ptr [rax]
0x00000000001aea78 : js 0x1aea5c ; hlt ; call qword ptr [rbx]
0x00000000001aedf8 : js 0x1aede4 ; hlt ; jmp qword ptr [rcx]
0x00000000001aee88 : js 0x1aee75 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0b78 : js 0x1b0bed ; cmc ; jmp qword ptr [rcx]
0x00000000001b0fe9 : js 0x1b0fe2 ; jmp qword ptr [rbx]
0x00000000001b0fe8 : js 0x1b0fe3 ; jmp qword ptr [rbx]
0x00000000001bafa8 : js 0x1baf45 ; sti ; jmp qword ptr [rdx]
0x0000000000025b94 : js 0x25b9e ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000002dd11 : js 0x2dc9d ; loopne 0x2dd24 ; movzx eax, ax ; ret
0x000000000002dd51 : js 0x2dcdd ; loopne 0x2dd5e ; movzx eax, ax ; ret
0x000000000002ddf1 : js 0x2dd7d ; loopne 0x2de00 ; movzx eax, ax ; ret
0x000000000002ded1 : js 0x2de5a ; loopne 0x2deda ; ret
0x000000000002df4a : js 0x2ded3 ; loopne 0x2df53 ; ret
0x000000000002df5a : js 0x2dee6 ; loopne 0x2df6d ; movzx eax, ax ; ret
0x000000000002df9a : js 0x2df26 ; loopne 0x2dfa7 ; movzx eax, ax ; ret
0x000000000002e03a : js 0x2dfc6 ; loopne 0x2e049 ; movzx eax, ax ; ret
0x000000000002e0c3 : js 0x2e114 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c2 : js 0x2e115 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000346be : js 0x346f0 ; call 0x1f8b0
0x0000000000075add : js 0x75aeb ; ret
0x0000000000085818 : js 0x85823 ; ret
0x0000000000088374 : js 0x883f0 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cdbf7 : js 0xcdc03 ; ret
0x00000000000e1a76 : js 0xe1a89 ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00000000000e3e6b : js 0xe3e6c ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000e5138 : js 0xe514b ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000f5f1c : js 0xf5f6e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f68b9 : js 0xf690b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f7f6a : js 0xf7f63 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fcefb : js 0xfcecd ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff222 : js 0xff235 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000ff8d5 : js 0xff90c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a9be8 : js 0xffffffffed3a9e4e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c16 : js 0xffffffffed3aa07c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c68 : js 0xffffffffed3aa4ce ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000024c23 : lahf ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000000ffd98 : lahf ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000001963c1 : lahf ; cld ; call rax
0x0000000000196441 : lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000196581 : lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00000000001852e3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000116575 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000014b6cd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004c5b6 : lahf ; ret
0x00000000000bd13d : lahf ; ret
0x0000000000102ea8 : lahf ; ret
0x0000000000102f95 : lahf ; ret
0x000000000007371e : lahf ; ret 0x3841
0x0000000000102eae : lahf ; ret 0x3845
0x00000000000d5b9a : lahf ; ret 0x82eb
0x0000000000182b3d : lahf ; ret 0x871e
0x000000000011d7af : lahf ; ret 0xc2e9
0x000000000005fc5c : lahf ; ret 0xd129
0x0000000000062ef6 : lahf ; ret 0xd129
0x0000000000062fe4 : lahf ; ret 0xd129
0x0000000000061f72 : lahf ; ret 0xd329
0x000000000005febc : lahf ; ret 0xd629
0x0000000000062f6d : lahf ; ret 0xd629
0x0000000000101b73 : lahf ; ret 0xe883
0x00000000001020f3 : lahf ; ret 0xe883
0x00000000000aab99 : lahf ; ret 0xea81
0x000000000014bd5d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000101ff7 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001194a6 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001194a5 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000011d16f : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000011d16e : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001899bb : lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; call rax
0x00000000001899c7 : lcall ptr [rax] ; add eax, 0x518fff5 ; cmc ; jmp rax
0x0000000000189a3f : lcall ptr [rax] ; add eax, 0x580fff5 ; cmc ; call rax
0x000000000019520f : lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000187cdb : lcall ptr [rax] ; ret 0xfffd
0x0000000000123205 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011d125 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000070b85 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000074b53 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000007830a : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000000fcdec : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144849 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000001448ae : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000014491e : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000014498e : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000001449fe : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144a69 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144ad3 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144b39 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144b99 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144c03 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144c6e : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144cd9 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000001972f3 : lcall ptr [rbp + rbx*4 + 0x44240000] ; jmp 0x197303
0x000000000001fb73 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000d6f8c : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000d6fcf : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000fc453 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000fc473 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000073651 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d1d9 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acd18 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acefa : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8cfa : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f94 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029e13 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000029e9a : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000036c17 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000039e36 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000010c0c6 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000010eb57 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b16c : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b1ec : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b271 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b2f1 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b371 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b3f1 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b46c : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b4f6 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b56c : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b5ec : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b676 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b6f1 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000012b76c : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000001307db : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000139281 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000b65d1 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x0000000000039cf2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006f1a9 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ad0e9 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000cc836 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000fc436 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000fc945 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000fce09 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000012696f : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000128a74 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000140e02 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000140e62 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000070450 : lcall ptr [rbx + 0x5d] ; ret
0x000000000007499d : lcall ptr [rbx + 0x5d] ; ret
0x000000000007a674 : lcall ptr [rbx + 0x5d] ; ret
0x00000000000cae6e : lcall ptr [rbx + 0x5d] ; ret
0x0000000000119590 : lcall ptr [rbx + 0x5d] ; ret
0x0000000000120776 : lcall ptr [rbx + 0x5d] ; ret
0x0000000000137d7f : lcall ptr [rbx + 0x5d] ; ret
0x0000000000140db5 : lcall ptr [rbx + 0x5d] ; ret
0x00000000001428cf : lcall ptr [rbx + 0x5d] ; ret
0x0000000000199f2b : lcall ptr [rbx + rsi*4 + 1] ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000186dbb : lcall ptr [rbx - 0x1c] ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000865df : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000188e3b : lcall ptr [rcx + 0x3afff3df] ; sal ebx, cl ; jmp rcx
0x0000000000188e3a : lcall ptr [rcx + 0x3afff3df] ; sal ebx, cl ; jmp rcx
0x0000000000197ceb : lcall ptr [rcx + 0x5e440000] ; out dx, al ; jmp rsp
0x0000000000186b53 : lcall ptr [rcx + rdi*4 + 0x6e16ffed] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186b3f : lcall ptr [rcx + rdi*4 - 0x46630013] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186bbf : lcall ptr [rcx + rdi*4 - 0x46630013] ; in eax, dx ; call qword ptr [rsi]
0x0000000000195a0b : lcall ptr [rcx + rdx*2 + 0x512cfffc] ; cld ; call rdx
0x0000000000188e7b : lcall ptr [rcx - 0x30] ; jmp rcx
0x0000000000188e7a : lcall ptr [rcx - 0x30] ; jmp rcx
0x0000000000188ea3 : lcall ptr [rcx - 0x66000c21] ; fcompi st(3) ; jmp rcx
0x0000000000188ea2 : lcall ptr [rcx - 0x66000c21] ; fcompi st(3) ; jmp rcx
0x000000000011184a : lcall ptr [rdi + 0xf] ; xchg eax, esp ; ret 0x840
0x00000000001977ab : lcall ptr [rdi + rdi*4 - 0x44bc0000] ; in eax, dx ; call rsp
0x000000000019b2db : lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x00000000001974db : lcall ptr [rdx + rbp*4 + 0x51740000] ; in eax, dx ; jmp rsp
0x000000000018a84f : lcall ptr [rsi + rdi*2 - 0xa] ; jmp rdx
0x000000000018879f : lcall ptr [rsi + rdi*2 - 0xd] ; jmp rdi
0x000000000018879e : lcall ptr [rsi + rdi*2 - 0xd] ; jmp rdi
0x000000000019b63b : lcall ptr [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x0000000000198213 : lcall ptr [rsp + rax + 1] ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x000000000019aea3 : lcall ptr [rsp - 0x2f0bfffe] ; stc ; call rsp
0x000000000015b2e6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000015ddb6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001608d6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000072d6f : lea eax, dword ptr [r8 - 1] ; ret
0x000000000007c01b : lea eax, dword ptr [r8 - 1] ; ret
0x0000000000123d0c : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000bb1e8 : lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000bb203 : lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cdbba : lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cdc12 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000008eb44 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000096734 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000009f0e4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000009f264 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb54 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000096744 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000009f0f4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000009f104 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008eb24 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000096714 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000c7982 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000072d70 : lea eax, dword ptr [rax - 1] ; ret
0x000000000007c01c : lea eax, dword ptr [rax - 1] ; ret
0x0000000000123e90 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x0000000000123fd3 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000012e28b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000ac9e8 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00000000001b265c : lea eax, dword ptr [rbx] ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x0000000000123d0d : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x000000000008d5ed : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000aa384 : lea eax, dword ptr [rcx - 1] ; ret
0x00000000000a74ac : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000a82d9 : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000a74c1 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000000a82ef : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000000a74df : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000000a8311 : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000000a74ff : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000000a832f : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000000a7522 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a834f : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a7541 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a8375 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a7561 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00000000000a8391 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00000000000a7581 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000000a83b1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000000a75a4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000000a83d1 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000000a75c9 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000000a83f7 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000000a75e7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00000000000a8419 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00000000000a7607 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00000000000a8437 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00000000000a7623 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000a8457 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000a7643 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000000a8473 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000000a7663 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00000000000a8493 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00000000000a7683 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a84b3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a84d3 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a8739 : lea eax, dword ptr [rdi + 0x40] ; ret
0x00000000000a73fd : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000000a821f : lea eax, dword ptr [rdi + 0xa] ; ret
0x0000000000170b71 : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000000a741d : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000000a823d : lea eax, dword ptr [rdi + 0xb] ; ret
0x0000000000170a37 : lea eax, dword ptr [rdi + 0xb] ; ret
0x0000000000170b81 : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000000a743f : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000000a825d : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000000ac849 : lea eax, dword ptr [rdi + 0xc] ; ret
0x0000000000170b91 : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000000a745f : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000000a827f : lea eax, dword ptr [rdi + 0xd] ; ret
0x0000000000170ba1 : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000000a747f : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000000a829f : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000170bb1 : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000000a7499 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00000000000a82bf : lea eax, dword ptr [rdi + 0xf] ; ret
0x00000000001709f1 : lea eax, dword ptr [rdi + 0xf] ; ret
0x0000000000170ad0 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000009ea64 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000000a7347 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000000a8155 : lea eax, dword ptr [rdi + 1] ; ret
0x0000000000170af1 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000009ea78 : lea eax, dword ptr [rdi + 2] ; ret
0x00000000000a735a : lea eax, dword ptr [rdi + 2] ; ret
0x00000000000a8167 : lea eax, dword ptr [rdi + 2] ; ret
0x0000000000170b01 : lea eax, dword ptr [rdi + 2] ; ret
0x000000000009ea83 : lea eax, dword ptr [rdi + 3] ; ret
0x00000000000a7365 : lea eax, dword ptr [rdi + 3] ; ret
0x00000000000a817d : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000170998 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000170b11 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000009ea97 : lea eax, dword ptr [rdi + 4] ; ret
0x00000000000a7378 : lea eax, dword ptr [rdi + 4] ; ret
0x00000000000a8195 : lea eax, dword ptr [rdi + 4] ; ret
0x00000000000ac839 : lea eax, dword ptr [rdi + 4] ; ret
0x0000000000170b21 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000009eaa7 : lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a738d : lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a81ab : lea eax, dword ptr [rdi + 5] ; ret
0x0000000000170b31 : lea eax, dword ptr [rdi + 5] ; ret
0x000000000009eab7 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a73ab : lea eax, dword ptr [rdi + 6] ; ret
0x00000000000a81bd : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000170b41 : lea eax, dword ptr [rdi + 6] ; ret
0x000000000009ea57 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a73b7 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a81db : lea eax, dword ptr [rdi + 7] ; ret
0x000000000017096a : lea eax, dword ptr [rdi + 7] ; ret
0x0000000000170a7d : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a73ca : lea eax, dword ptr [rdi + 8] ; ret
0x00000000000a81e7 : lea eax, dword ptr [rdi + 8] ; ret
0x00000000000ac841 : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000170b51 : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000123020 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000a73df : lea eax, dword ptr [rdi + 9] ; ret
0x00000000000a81fd : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000170b61 : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008eb79 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000009f12d : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb89 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000009f14d : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008ea73 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000008eb99 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00000000000966fd : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000009f16d : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00000000000967a7 : lea eax, dword ptr [rdi + rax] ; ret
0x00000000000968c5 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000014a66a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000124190 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000002da65 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002dab0 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008d4e9 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000ac43e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac4a0 : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac4bd : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac4e3 : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac50d : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac54e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac569 : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac57b : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac591 : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac5a1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000ac5c1 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000ac5b1 : lea eax, dword ptr [rdi - 8] ; ret
0x00000000000a7333 : lea eax, dword ptr [rdi] ; ret
0x0000000000170ae1 : lea eax, dword ptr [rdi] ; ret
0x00000000001bc716 : lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x000000000016b0cd : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000016b0ed : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000016b10f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000016b12f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000016b14f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000016afdf : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000016b007 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000016b01d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000016b035 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000016b04b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000016b05d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000016b07b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000016af87 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000016b08d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000016b0ad : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000072d5e : lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000072d5d : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c00e : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c00d : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000aac6c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000016aff5 : lea eax, dword ptr [rdx] ; ret
0x000000000008bb5a : lea eax, dword ptr [rip + 0x10] ; ret
0x000000000008f350 : lea eax, dword ptr [rip + 0x10e4a] ; ret
0x000000000002cb39 : lea eax, dword ptr [rip + 0x15ffe6] ; ret
0x0000000000020931 : lea eax, dword ptr [rip + 0x16bd34] ; ret
0x0000000000020941 : lea eax, dword ptr [rip + 0x16dc63] ; ret
0x000000000008bb0e : lea eax, dword ptr [rip + 0x1713c] ; ret
0x00000000000898ae : lea eax, dword ptr [rip + 0x1777c] ; ret
0x000000000008f1ea : lea eax, dword ptr [rip + 0x1b330] ; ret
0x000000000008e646 : lea eax, dword ptr [rip + 0x1ba24] ; cmove rax, rdx ; ret
0x000000000008ebc4 : lea eax, dword ptr [rip + 0x26] ; ret
0x000000000012b9b9 : lea eax, dword ptr [rip + 0x29d381] ; pop rbx ; ret
0x000000000012b981 : lea eax, dword ptr [rip + 0x29d3b9] ; pop rbx ; ret
0x000000000012b8c2 : lea eax, dword ptr [rip + 0x29d478] ; pop rbx ; ret
0x0000000000101f6b : lea eax, dword ptr [rip + 0x2c52ef] ; pop rbp ; pop r12 ; ret
0x00000000000fe32e : lea eax, dword ptr [rip + 0x2c8c64] ; ret
0x00000000000fe16e : lea eax, dword ptr [rip + 0x2c8e24] ; ret
0x000000000006ac84 : lea eax, dword ptr [rip + 0x35ba76] ; pop rbx ; pop rbp ; ret
0x0000000000116271 : lea eax, dword ptr [rip + 0x37c19] ; ret
0x0000000000116361 : lea eax, dword ptr [rip + 0x37ec9] ; ret
0x000000000012b0f1 : lea eax, dword ptr [rip + 0x61a2e] ; ret
0x000000000008f9ea : lea eax, dword ptr [rip + 0x80] ; ret
0x0000000000091cda : lea eax, dword ptr [rip + 0x80] ; ret
0x000000000009443f : lea eax, dword ptr [rip + 0xb3db] ; ret
0x0000000000094410 : lea eax, dword ptr [rip + 0xb63a] ; ret
0x0000000000094453 : lea eax, dword ptr [rip + 0xbcb47] ; ret
0x000000000008da9b : lea eax, dword ptr [rip + 0xbcdbf] ; ret
0x000000000008d70b : lea eax, dword ptr [rip + 0xbd01f] ; ret
0x000000000008f391 : lea eax, dword ptr [rip + 0xbeea9] ; ret
0x000000000008b29b : lea eax, dword ptr [rip + 0xbf34f] ; ret
0x00000000000abc9c : lea eax, dword ptr [rip + 0xc210e] ; ret
0x00000000000ac878 : lea eax, dword ptr [rip + 0xc31f2] ; ret
0x00000000000ac880 : lea eax, dword ptr [rip + 0xc5aaa] ; ret
0x0000000000089cfe : lea eax, dword ptr [rip + 0xc] ; ret
0x000000000008d3ee : lea eax, dword ptr [rip + 0xd99dc] ; ret
0x000000000008fa4d : lea eax, dword ptr [rip + 0xd] ; ret
0x0000000000091d3d : lea eax, dword ptr [rip + 0xd] ; ret
0x000000000008f87e : lea eax, dword ptr [rip + 0xda0cc] ; ret
0x000000000008b18e : lea eax, dword ptr [rip + 0xda48c] ; ret
0x000000000008f99e : lea eax, dword ptr [rip + 0xdb7bc] ; ret
0x000000000008ebd8 : lea eax, dword ptr [rip + 0xdf852] ; ret
0x000000000008ebe0 : lea eax, dword ptr [rip + 0xe1fda] ; ret
0x0000000000089a9b : lea eax, dword ptr [rip + 0xe6dff] ; ret
0x00000000000ac864 : lea eax, dword ptr [rip + 0xe916] ; ret
0x00000000000abc94 : lea eax, dword ptr [rip + 0xf596] ; ret
0x00000000000569f6 : lea eax, dword ptr [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00000000000f6a66 : lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x00000000001163aa : lea eax, dword ptr [rip - 0x6bea0] ; ret
0x0000000000116320 : lea eax, dword ptr [rip - 0x76196] ; ret
0x0000000000116230 : lea eax, dword ptr [rip - 0x767f6] ; ret
0x0000000000123fee : lea eax, dword ptr [rsi + 8] ; ret
0x00000000001a6fb5 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb61a : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000007b5d8 : lea ebp, dword ptr [rdi + 0x83] ; jmp 0x7b5c6
0x0000000000045b5f : lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000011f81f : lea ebp, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000ed46c : lea ebp, dword ptr [rip + 0x9cdee] ; call 0x39768
0x0000000000047071 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000598fb : lea ebx, dword ptr [rax - 0x7b000011] ; ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000001833f1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000acbb3 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000accde : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000000ad11e : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000beb64 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0xbeb75
0x00000000001bc6be : lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x0000000000151020 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x0000000000151081 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x00000000001539f0 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x0000000000153a51 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x00000000001563c7 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x0000000000156421 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x00000000000a5bee : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a5c46 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a5c63 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a5c88 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a5caa : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a5cc0 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a5cec : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a5d21 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a6303 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a632c : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a635a : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a642c : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a645f : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a648f : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a64ac : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a64ca : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a64ef : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a6518 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a6538 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a6561 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a6ea6 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a6ec5 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a6eda : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a6fc5 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a71ee : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7246 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7263 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7288 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a72aa : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a72c0 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a72ec : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7321 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7993 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a79bc : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a79ea : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7acc : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7aff : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7b2f : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7b4c : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7b6a : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7b8f : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7bb8 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7bd8 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7c01 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a86b6 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a86d5 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a86ea : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a87d5 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a8cce : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a8d26 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a8d43 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a8d68 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a8d8a : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a8da0 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a8dcc : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a8e01 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a9639 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a96a6 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a96c3 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a96e8 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a970a : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a9720 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a974c : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a9781 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a979c : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a97cf : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a97ff : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a981c : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a983a : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a985f : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a9888 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a98a8 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a98d1 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000aa055 : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000001688d6 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x168e29 ; ret
0x0000000000168bd4 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x168e29 ; ret
0x0000000000168bf4 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x168e29 ; ret
0x0000000000168c14 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x168e29 ; ret
0x0000000000168c36 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x168e29 ; ret
0x0000000000168c56 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x168e29 ; ret
0x0000000000168c76 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x168e29 ; ret
0x0000000000168acc : lea ecx, dword ptr [rdx + 1] ; jne 0x168e29 ; ret
0x0000000000168aee : lea ecx, dword ptr [rdx + 2] ; jne 0x168e29 ; ret
0x0000000000168b14 : lea ecx, dword ptr [rdx + 3] ; jne 0x168e29 ; ret
0x0000000000168b2c : lea ecx, dword ptr [rdx + 4] ; jne 0x168e29 ; ret
0x0000000000072161 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000007074d : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000168b52 : lea ecx, dword ptr [rdx + 5] ; jne 0x168e29 ; ret
0x0000000000168b74 : lea ecx, dword ptr [rdx + 6] ; jne 0x168e29 ; ret
0x0000000000168b92 : lea ecx, dword ptr [rdx + 7] ; jne 0x168e29 ; ret
0x000000000016886e : lea ecx, dword ptr [rdx + 8] ; jne 0x168e29 ; ret
0x0000000000168bb4 : lea ecx, dword ptr [rdx + 9] ; jne 0x168e29 ; ret
0x0000000000048390 : lea ecx, dword ptr [rdx] ; jmp 0x483e6
0x0000000000049f70 : lea ecx, dword ptr [rdx] ; jmp 0x49fc6
0x0000000000059878 : lea ecx, dword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x000000000010ada7 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010b607 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000136ef9 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136ff9 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137154 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137294 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000013752e : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe4 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000751a3 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012cac8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cb84 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750c0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136d0a : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000013743a : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c9d6 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad079 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000ad122 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000accd9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbae : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001380a2 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7fc : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf6b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad55a : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e63 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81b : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad291 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000132e2e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x0000000000138fae : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00000000001396c7 : lea edi, dword ptr [rbp + 0x10] ; call rax
0x0000000000135a32 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000135012 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000132295 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x0000000000038fec : lea edi, dword ptr [rbx + rsi] ; call rax
0x000000000008f426 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8f418 ; mov rax, rdi ; ret
0x00000000000944e6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x944d6 ; ret
0x00000000000a675d : lea edi, dword ptr [rdi + 0x10] ; jne 0xa6e39 ; ret
0x00000000000a7e41 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa8649 ; ret
0x00000000000a6780 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa6e39 ; ret
0x00000000000a7e64 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa8649 ; ret
0x00000000000a67a5 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa6e39 ; ret
0x00000000000a7e89 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa8649 ; ret
0x00000000000a67c3 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa6e39 ; ret
0x00000000000a7eb7 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa8649 ; ret
0x00000000000a67e3 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa6e39 ; ret
0x00000000000a7ee7 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa8649 ; ret
0x00000000000a6806 : lea edi, dword ptr [rdi + 0x15] ; jne 0xa6e39 ; ret
0x00000000000a7f1a : lea edi, dword ptr [rdi + 0x15] ; jne 0xa8649 ; ret
0x00000000000a6825 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa6e39 ; ret
0x00000000000a7f49 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa8649 ; ret
0x00000000000a6845 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa6e39 ; ret
0x00000000000a7f79 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa8649 ; ret
0x00000000000a6865 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa6e39 ; ret
0x00000000000a7fa9 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa8649 ; ret
0x00000000000a6888 : lea edi, dword ptr [rdi + 0x19] ; jne 0xa6e39 ; ret
0x00000000000a7fdc : lea edi, dword ptr [rdi + 0x19] ; jne 0xa8649 ; ret
0x00000000000a68bd : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa6e39 ; ret
0x00000000000a8011 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa8649 ; ret
0x00000000000a68eb : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa6e39 ; ret
0x00000000000a803f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa8649 ; ret
0x00000000000a691b : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa6e39 ; ret
0x00000000000a806f : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa8649 ; ret
0x00000000000a6947 : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa6e39 ; ret
0x00000000000a809b : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa8649 ; ret
0x00000000000a6977 : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa6e39 ; ret
0x00000000000a80cb : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa8649 ; ret
0x00000000000a69a7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa6e39 ; ret
0x00000000000a80fb : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa8649 ; ret
0x00000000000a69d7 : lea edi, dword ptr [rdi + 0x20] ; jne 0xa6e39 ; ret
0x00000000000a812b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa8649 ; ret
0x00000000000a66a3 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa6e39 ; ret
0x00000000000a7d47 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa8649 ; ret
0x00000000000a66c1 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa6e39 ; ret
0x00000000000a7d75 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa8649 ; ret
0x00000000000a66e1 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa6e39 ; ret
0x00000000000a7d95 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa8649 ; ret
0x00000000000a6703 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa6e39 ; ret
0x00000000000a7db7 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa8649 ; ret
0x00000000000a6723 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa6e39 ; ret
0x00000000000a7de7 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa8649 ; ret
0x00000000000a6743 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa6e39 ; ret
0x00000000000a7e17 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa8649 ; ret
0x00000000000a6577 : lea edi, dword ptr [rdi + 1] ; jne 0xa6e39 ; ret
0x00000000000a7c1a : lea edi, dword ptr [rdi + 1] ; jne 0xa8649 ; ret
0x00000000000a659b : lea edi, dword ptr [rdi + 2] ; jne 0xa6e39 ; ret
0x00000000000a7c3f : lea edi, dword ptr [rdi + 2] ; jne 0xa8649 ; ret
0x00000000000a65be : lea edi, dword ptr [rdi + 3] ; jne 0xa6e39 ; ret
0x00000000000a7c62 : lea edi, dword ptr [rdi + 3] ; jne 0xa8649 ; ret
0x00000000000a65d9 : lea edi, dword ptr [rdi + 4] ; jne 0xa6e39 ; ret
0x00000000000a7c7d : lea edi, dword ptr [rdi + 4] ; jne 0xa8649 ; ret
0x00000000000a65fc : lea edi, dword ptr [rdi + 5] ; jne 0xa6e39 ; ret
0x00000000000a7ca0 : lea edi, dword ptr [rdi + 5] ; jne 0xa8649 ; ret
0x00000000000a6621 : lea edi, dword ptr [rdi + 6] ; jne 0xa6e39 ; ret
0x00000000000a7cc5 : lea edi, dword ptr [rdi + 6] ; jne 0xa8649 ; ret
0x00000000000a663f : lea edi, dword ptr [rdi + 7] ; jne 0xa6e39 ; ret
0x00000000000a7ce3 : lea edi, dword ptr [rdi + 7] ; jne 0xa8649 ; ret
0x00000000000a665b : lea edi, dword ptr [rdi + 8] ; jne 0xa6e39 ; ret
0x00000000000a7cff : lea edi, dword ptr [rdi + 8] ; jne 0xa8649 ; ret
0x00000000000a667e : lea edi, dword ptr [rdi + 9] ; jne 0xa6e39 ; ret
0x00000000000a7d22 : lea edi, dword ptr [rdi + 9] ; jne 0xa8649 ; ret
0x0000000000023652 : lea edi, dword ptr [rdx + 0x10] ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a9
0x000000000004b511 : lea edi, dword ptr [rip + 0x1451e9] ; call 0x777f8
0x0000000000120711 : lea edi, dword ptr [rip + 0x2a7fe5] ; call rax
0x000000000011feb2 : lea edi, dword ptr [rip + 0x2a87e8] ; call rax
0x00000000000c00ad : lea edi, dword ptr [rip + 0xc85a1] ; add rax, rdi ; jmp rax
0x0000000000115b47 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x00000000000f6ad5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x000000000007c84b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000368a9 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38d7d6], edx ; ret
0x00000000001510f4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001511b9 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001512a8 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151312 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001513d1 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001514c2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015156e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015160c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001516be : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015175c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015180e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001518ac : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015195e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001519fc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151aae : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151b4c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151bfe : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151c9c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151d4e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151dec : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151ea3 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151f3c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000151fee : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015208c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015213e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001521dc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015228e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015232c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001523de : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015247c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015252e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001525cc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015267e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015271c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001527ce : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015286c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000153875 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015394f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000153ac4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000153b89 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000153c78 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000153ce2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000153da1 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000153e92 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000153f3e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000153fdc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015408e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015412c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001541de : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015427c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015432e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001543cc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015447e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015451c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001545ce : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015466c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015471e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001547bc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154873 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015490c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001549be : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154a5c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154b0e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154bac : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154c5e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154cfc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154dae : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154e4c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154efe : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000154f9c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015504e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001550ec : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015519e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015523c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156245 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015631f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156494 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156559 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156648 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001566b2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156771 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156862 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015690e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001569ac : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156a5e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156afc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156bae : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156c4c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156cfe : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156d9c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156e4e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156eec : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000156f9e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015703c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001570ee : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015718c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000157243 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001572dc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015738e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015742c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001574de : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015757c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015762e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001576cc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015777e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015781c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001578ce : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015796c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000157a1e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000157abc : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000157b6e : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000157c0c : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000158c2d : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000158cf8 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000158de3 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000158ea0 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000158ee3 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000158ef6 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159055 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001590d6 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159192 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015924f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159312 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001593cf : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159492 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015954f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159612 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001596cf : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159792 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015984f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159912 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x00000000001599cf : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159a92 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159b4f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159c12 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159ccf : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159d92 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159e4f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159f12 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000159fcf : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a092 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a14f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a213 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a2cf : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a392 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a44f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a512 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a5cf : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a692 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a74f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015a8e6 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015aa79 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015b9b6 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015b9c9 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015bb25 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015bba6 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015bc62 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015bd1f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015bde2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015be9f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015bf62 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c01f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c0e2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c19f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c262 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c31f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c3e2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c49f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c562 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c61f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c6e2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c79f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c862 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c91f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015c9e2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015ca9f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015cb62 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015cc1f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015cce3 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015cd9f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015ce62 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015cf1f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015cfe2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015d09f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015d162 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015d21f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015d3b6 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015d549 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015e487 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015e4a9 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015e605 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015e686 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015e742 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015e7ff : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015e8c2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015e97f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015ea42 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015eaff : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015ebc2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015ec7f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015ed42 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015edff : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015eec2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015ef7f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f042 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f0ff : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f1c2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f27f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f342 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f3ff : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f4c2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f57f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f642 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f6ff : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f7c3 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f87f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f942 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015f9ff : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015fac2 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015fb7f : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015fc42 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015fcff : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000015feaa : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000016005d : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000053f68 : lea edx, dword ptr [rbx] ; add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000009ede8 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000072eed : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000089d96 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000008bc16 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000008fb76 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000091e86 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000144d76 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000145b46 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000146b86 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000148756 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000014aa76 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000014c106 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000014e656 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000014f8d6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000161086 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00000000001631f6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000010ab83 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010abde : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b405 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b452 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001514e8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151598 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151638 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001516e8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151788 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151838 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001518d8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151988 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151a28 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151ad8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151b78 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151c28 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151cc8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151d78 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151e18 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151ec8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000151f68 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000152018 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001520b8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000152168 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000152208 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001522b8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000152358 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000152408 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001524a8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000152558 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001525f8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001526a8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000152748 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001527f8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000153eb8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000153f68 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154008 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001540b8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154158 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154208 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001542a8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154358 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001543f8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001544a8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154548 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001545f8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154698 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154748 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001547e8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154898 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154938 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001549e8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154a88 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154b38 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154bd8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154c88 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154d28 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154dd8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154e78 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154f28 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000154fc8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000155078 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000155118 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001551c8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156888 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156938 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001569d8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156a88 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156b28 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156bd8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156c78 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156d28 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156dc8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156e78 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156f18 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000156fc8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157068 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157118 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001571b8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157268 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157308 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001573b8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157458 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157508 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001575a8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157658 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001576f8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001577a8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157848 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001578f8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157998 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157a48 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157ae8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000157b98 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000012ddb1 : lea edx, dword ptr [rip + 0x295dc9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000137381 : lea edx, dword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001162eb : lea edx, dword ptr [rip + 0x4003f] ; cmove rax, rdx ; ret
0x000000000008f196 : lea edx, dword ptr [rip + 0xc71a4] ; cmove rax, rdx ; ret
0x00000000000720a1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000062053 : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000006241a : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000de4a1 : lea esi, dword ptr [rbx + rbp] ; call 0x94479
0x0000000000071270 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eea : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000004e617 : lea esi, dword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00000000000450df : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x000000000006f21a : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007bf0a : lea esi, dword ptr [rip - 0x15e0] ; call rax
0x000000000007c2fa : lea esi, dword ptr [rip - 0x19d0] ; call rax
0x000000000007c74a : lea esi, dword ptr [rip - 0x1e20] ; call rax
0x000000000006f513 : lea esi, dword ptr [rip - 0x2c9] ; call rax
0x000000000007ac3a : lea esi, dword ptr [rip - 0x310] ; call rax
0x000000000007aeaa : lea esi, dword ptr [rip - 0x580] ; call rax
0x000000000013b23d : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b37d : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b4b2 : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e715 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9c5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aa35 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aae5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae45 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aeb5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af65 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013afe5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b025 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b095 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5ea : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013b72e : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013abad : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ac6d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ad2d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013aded : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398c2 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000cacdd : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000fe631 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006d121 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000006d143 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000ffd64 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000089d95 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008bc15 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008fb75 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000091e85 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000144d75 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000145b45 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000146b85 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000148755 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014aa75 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014c105 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014e655 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014f8d5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000161085 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001631f5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000ed46b : lea r13, qword ptr [rip + 0x9cdee] ; call 0x39769
0x0000000000038feb : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000015101f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000151080 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001539ef : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000153a50 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001563c6 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000156420 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000004838f : lea r9, qword ptr [rdx] ; jmp 0x483e7
0x0000000000049f6f : lea r9, qword ptr [rdx] ; jmp 0x49fc7
0x0000000000136ef8 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136ff8 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137153 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137293 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000013752d : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe3 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000751a2 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012cac7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cb83 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750bf : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136d09 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x0000000000137439 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c9d5 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad078 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000ad121 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000accd8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbad : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001380a1 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7fb : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf6a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad559 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e62 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81a : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad290 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000cdbb9 : lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000cdc11 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008eb43 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000096733 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000009f0e3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000009f263 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb53 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000096743 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009f0f3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009f103 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008eb23 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000096713 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000c7981 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012e28a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000ac9e7 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x000000000008d5ec : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000aa383 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a74ab : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a82d8 : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a74c0 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a82ee : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a74de : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8310 : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a74fe : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a832e : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7521 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a834e : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7540 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a8374 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a7560 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a8390 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7580 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a83b0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a75a3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a83d0 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a75c8 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a83f6 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a75e6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a8418 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7606 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8436 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a7622 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a8456 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a7642 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a8472 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a7662 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a8492 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a7682 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84b2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84d2 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8738 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a73fc : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a821e : lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000170b70 : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a741c : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a823c : lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000170a36 : lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000170b80 : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a743e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a825c : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000ac848 : lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000170b90 : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a745e : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a827e : lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000170ba0 : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a747e : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a829e : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000170bb0 : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a7498 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a82be : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001709f0 : lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000170acf : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009ea63 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a7346 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8154 : lea rax, qword ptr [rdi + 1] ; ret
0x0000000000170af0 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000009ea77 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a7359 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a8166 : lea rax, qword ptr [rdi + 2] ; ret
0x0000000000170b00 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000009ea82 : lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a7364 : lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a817c : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170997 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170b10 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000009ea96 : lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a7377 : lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a8194 : lea rax, qword ptr [rdi + 4] ; ret
0x00000000000ac838 : lea rax, qword ptr [rdi + 4] ; ret
0x0000000000170b20 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000009eaa6 : lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a738c : lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a81aa : lea rax, qword ptr [rdi + 5] ; ret
0x0000000000170b30 : lea rax, qword ptr [rdi + 5] ; ret
0x000000000009eab6 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a73aa : lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a81bc : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000170b40 : lea rax, qword ptr [rdi + 6] ; ret
0x000000000009ea56 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a73b6 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81da : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170969 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170a7c : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a73c9 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a81e6 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000ac840 : lea rax, qword ptr [rdi + 8] ; ret
0x0000000000170b50 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a73de : lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a81fc : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000170b60 : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008eb78 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009f12c : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb88 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009f14c : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008ea72 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008eb98 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000966fc : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009f16c : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000967a6 : lea rax, qword ptr [rdi + rax] ; ret
0x00000000000968c4 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000014a669 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000012418f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000002da64 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002daaf : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008d4e8 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000ac43d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac49f : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac4bc : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac4e2 : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac50c : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac54d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac568 : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac57a : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac590 : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac5a0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac5c0 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac5b0 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a7332 : lea rax, qword ptr [rdi] ; ret
0x0000000000170ae0 : lea rax, qword ptr [rdi] ; ret
0x000000000016b0cc : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016b0ec : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016b10e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016b12e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016b14e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000016afde : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000016b006 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000016b01c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000016b034 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000016b04a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000016b05c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000016b07a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000016af86 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000016b08c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000016b0ac : lea rax, qword ptr [rdx + 9] ; ret
0x000000000016aff4 : lea rax, qword ptr [rdx] ; ret
0x000000000008bb59 : lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008f34f : lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000002cb38 : lea rax, qword ptr [rip + 0x15ffe6] ; ret
0x0000000000020930 : lea rax, qword ptr [rip + 0x16bd34] ; ret
0x0000000000020940 : lea rax, qword ptr [rip + 0x16dc63] ; ret
0x000000000008bb0d : lea rax, qword ptr [rip + 0x1713c] ; ret
0x00000000000898ad : lea rax, qword ptr [rip + 0x1777c] ; ret
0x000000000008f1e9 : lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008ebc3 : lea rax, qword ptr [rip + 0x26] ; ret
0x000000000012b9b8 : lea rax, qword ptr [rip + 0x29d381] ; pop rbx ; ret
0x000000000012b980 : lea rax, qword ptr [rip + 0x29d3b9] ; pop rbx ; ret
0x000000000012b8c1 : lea rax, qword ptr [rip + 0x29d478] ; pop rbx ; ret
0x00000000000fe32d : lea rax, qword ptr [rip + 0x2c8c64] ; ret
0x00000000000fe16d : lea rax, qword ptr [rip + 0x2c8e24] ; ret
0x000000000006ac83 : lea rax, qword ptr [rip + 0x35ba76] ; pop rbx ; pop rbp ; ret
0x0000000000116270 : lea rax, qword ptr [rip + 0x37c19] ; ret
0x0000000000116360 : lea rax, qword ptr [rip + 0x37ec9] ; ret
0x000000000012b0f0 : lea rax, qword ptr [rip + 0x61a2e] ; ret
0x000000000008f9e9 : lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000091cd9 : lea rax, qword ptr [rip + 0x80] ; ret
0x000000000009443e : lea rax, qword ptr [rip + 0xb3db] ; ret
0x000000000009440f : lea rax, qword ptr [rip + 0xb63a] ; ret
0x0000000000094452 : lea rax, qword ptr [rip + 0xbcb47] ; ret
0x000000000008da9a : lea rax, qword ptr [rip + 0xbcdbf] ; ret
0x000000000008d70a : lea rax, qword ptr [rip + 0xbd01f] ; ret
0x000000000008f390 : lea rax, qword ptr [rip + 0xbeea9] ; ret
0x000000000008b29a : lea rax, qword ptr [rip + 0xbf34f] ; ret
0x00000000000abc9b : lea rax, qword ptr [rip + 0xc210e] ; ret
0x00000000000ac877 : lea rax, qword ptr [rip + 0xc31f2] ; ret
0x00000000000ac87f : lea rax, qword ptr [rip + 0xc5aaa] ; ret
0x0000000000089cfd : lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008d3ed : lea rax, qword ptr [rip + 0xd99dc] ; ret
0x000000000008fa4c : lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000091d3c : lea rax, qword ptr [rip + 0xd] ; ret
0x000000000008f87d : lea rax, qword ptr [rip + 0xda0cc] ; ret
0x000000000008b18d : lea rax, qword ptr [rip + 0xda48c] ; ret
0x000000000008f99d : lea rax, qword ptr [rip + 0xdb7bc] ; ret
0x000000000008ebd7 : lea rax, qword ptr [rip + 0xdf852] ; ret
0x000000000008ebdf : lea rax, qword ptr [rip + 0xe1fda] ; ret
0x0000000000089a9a : lea rax, qword ptr [rip + 0xe6dff] ; ret
0x00000000000ac863 : lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000abc93 : lea rax, qword ptr [rip + 0xf596] ; ret
0x00000000001163a9 : lea rax, qword ptr [rip - 0x6bea0] ; ret
0x000000000011631f : lea rax, qword ptr [rip - 0x76196] ; ret
0x000000000011622f : lea rax, qword ptr [rip - 0x767f6] ; ret
0x00000000000ac579 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x0000000000047070 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a5bed : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c45 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c62 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c87 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5ca9 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5cbf : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5ceb : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5d20 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6302 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a632b : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6359 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a642b : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a645e : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a648e : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64ab : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64c9 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64ee : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6517 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6537 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6560 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ea5 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ec4 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ed9 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6fc4 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a71ed : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7245 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7262 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7287 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72a9 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72bf : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72eb : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7320 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7992 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79bb : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79e9 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7acb : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7afe : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b2e : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b4b : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b69 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b8e : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bb7 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bd7 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7c00 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86b5 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86d4 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86e9 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a87d4 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8ccd : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d25 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d42 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d67 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d89 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d9f : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8dcb : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8e00 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9638 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96a5 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96c2 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96e7 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9709 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a971f : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a974b : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9780 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a979b : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a97ce : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a97fe : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a981b : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9839 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a985e : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9887 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a98a7 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a98d0 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000aa054 : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000acbb2 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000accdd : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000ad11d : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000beb63 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbeb76
0x00000000000705c5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000007074c : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000010ada6 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010b606 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000132e2d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138fad : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001396c6 : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000135a31 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000135011 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000132294 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008f425 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8f419 ; mov rax, rdi ; ret
0x00000000000944e5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x944d7 ; ret
0x000000000004b510 : lea rdi, qword ptr [rip + 0x1451e9] ; call 0x777f9
0x0000000000120710 : lea rdi, qword ptr [rip + 0x2a7fe5] ; call rax
0x000000000011feb1 : lea rdi, qword ptr [rip + 0x2a87e8] ; call rax
0x0000000000115b46 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000f6ad4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000001510f3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001511b8 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001512a7 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151311 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001513d0 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001514c1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015156d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015160b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001516bd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015175b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015180d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001518ab : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015195d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001519fb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151aad : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151b4b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151bfd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151c9b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151d4d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151deb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151ea2 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151f3b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151fed : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015208b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015213d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001521db : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015228d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015232b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001523dd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015247b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015252d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001525cb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015267d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015271b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001527cd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015286b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153874 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015394e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153ac3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153b88 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153c77 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153ce1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153da0 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153e91 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153f3d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153fdb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015408d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015412b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001541dd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015427b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015432d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001543cb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015447d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015451b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001545cd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015466b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015471d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001547bb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154872 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015490b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001549bd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154a5b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154b0d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154bab : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154c5d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154cfb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154dad : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154e4b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154efd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154f9b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015504d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001550eb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015519d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015523b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156244 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015631e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156493 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156558 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156647 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001566b1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156770 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156861 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015690d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001569ab : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156a5d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156afb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156bad : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156c4b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156cfd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156d9b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156e4d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156eeb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156f9d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015703b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001570ed : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015718b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157242 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001572db : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015738d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015742b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001574dd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015757b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015762d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001576cb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015777d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015781b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001578cd : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015796b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157a1d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157abb : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157b6d : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157c0b : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158c2c : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158cf7 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158de2 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158e9f : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ee2 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ef5 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159054 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001590d5 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159191 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015924e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159311 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001593ce : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159491 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015954e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159611 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001596ce : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159791 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015984e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159911 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001599ce : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159a91 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159b4e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159c11 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159cce : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159d91 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159e4e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159f11 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159fce : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a091 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a14e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a212 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a2ce : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a391 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a44e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a511 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a5ce : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a691 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a74e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a8e5 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015aa78 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9b5 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9c8 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bb24 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bba5 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bc61 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bd1e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bde1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015be9e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bf61 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c01e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c0e1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c19e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c261 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c31e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c3e1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c49e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c561 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c61e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c6e1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c79e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c861 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c91e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c9e1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ca9e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cb61 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cc1e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cce2 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cd9e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ce61 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cf1e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cfe1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d09e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d161 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d21e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d3b5 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d548 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e486 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e4a8 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e604 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e685 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e741 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e7fe : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e8c1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e97e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ea41 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eafe : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ebc1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ec7e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ed41 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015edfe : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eec1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ef7e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f041 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f0fe : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f1c1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f27e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f341 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f3fe : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f4c1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f57e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f641 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f6fe : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f7c2 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f87e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f941 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f9fe : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fac1 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fb7e : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fc41 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fcfe : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fea9 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000016005c : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000010ab82 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010abdd : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b404 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010b451 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001514e7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151597 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151637 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001516e7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151787 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151837 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001518d7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151987 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151a27 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151ad7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151b77 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151c27 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151cc7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151d77 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151e17 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151ec7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000151f67 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000152017 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001520b7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000152167 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000152207 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001522b7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000152357 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000152407 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001524a7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000152557 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001525f7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001526a7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000152747 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001527f7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000153eb7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000153f67 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154007 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001540b7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154157 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154207 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001542a7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154357 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001543f7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001544a7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154547 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001545f7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154697 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154747 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001547e7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154897 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154937 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001549e7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154a87 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154b37 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154bd7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154c87 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154d27 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154dd7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154e77 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154f27 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000154fc7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000155077 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000155117 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001551c7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156887 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156937 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001569d7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156a87 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156b27 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156bd7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156c77 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156d27 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156dc7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156e77 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156f17 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000156fc7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157067 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157117 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001571b7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157267 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157307 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001573b7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157457 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157507 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001575a7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157657 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001576f7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001577a7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157847 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000001578f7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157997 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157a47 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157ae7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000157b97 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000000450de : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f219 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007bf09 : lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c2f9 : lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c749 : lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f512 : lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ac39 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007aea9 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000013b23c : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b37c : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b4b1 : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e714 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9c4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aa34 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aae4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae44 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aeb4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af64 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013afe4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b024 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b094 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5e9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013b72d : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013abac : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ac6c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ad2c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013adec : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398c1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000cacdc : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000fe630 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001978f5 : leave ; add byte ptr [rax], al ; adc al, 0xf0 ; in eax, dx ; call rsp
0x00000000000dc5cb : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000019baad : leave ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x0000000000029a74 : leave ; call r15
0x0000000000002bec : leave ; clc ; ret
0x000000000019b6e1 : leave ; cli ; jmp rsp
0x000000000008d7b6 : leave ; cmove rax, rdx ; ret
0x000000000008d7b6 : leave ; cmove rax, rdx ; ret
0x000000000014a6a1 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000002b395 : leave ; je 0x2b39d ; call rcx
0x000000000006b459 : leave ; je 0x6b464 ; ret
0x000000000012668c : leave ; jne 0x1265db ; ret
0x000000000009eb29 : leave ; jne 0x9eb1c ; ret
0x000000000009ec68 : leave ; jne 0x9ec5d ; xor eax, eax ; ret
0x00000000000aa160 : leave ; jne 0xaa153 ; ret
0x00000000000aa210 : leave ; jne 0xaa203 ; ret
0x00000000000aa4d0 : leave ; jne 0xaa4c7 ; sub rax, 1 ; ret
0x00000000000ac60c : leave ; jne 0xac604 ; ret
0x00000000000ada8a : leave ; jne 0xada47 ; mov rax, rdx ; ret
0x000000000014a668 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000a56d1 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a590c : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a59bf : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000034a71 : leave ; mov dword ptr [rdi], ecx ; ret
0x00000000000aae14 : leave ; mov dword ptr [rdx], ecx ; jne 0xaae0e ; ret
0x0000000000126a76 : leave ; mov eax, 0x200000 ; jmp 0x126a47
0x000000000009ea2f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009e98f : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00000000000218e0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000012ddb3 : leave ; pop rbp ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000012ddb3 : leave ; pop rbp ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000042351 : leave ; ret
0x0000000000049e3e : leave ; ret
0x0000000000049e45 : leave ; ret
0x0000000000049e5e : leave ; ret
0x0000000000049e7c : leave ; ret
0x00000000000b1071 : leave ; ret
0x00000000000fb513 : leave ; ret
0x00000000001153e5 : leave ; ret
0x000000000011553d : leave ; ret
0x0000000000115b67 : leave ; ret
0x0000000000115b77 : leave ; ret
0x0000000000127a73 : leave ; ret
0x000000000019ae69 : leave ; stc ; call rsp
0x00000000001953ad : leave ; sti ; jmp qword ptr [rax]
0x000000000008958b : leave ; test eax, 0x89480033 ; add al, 0x24 ; call qword ptr [rdx]
0x00000000000ad075 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000018a8cf : ljmp ptr [rax + 0x22fff67a] ; jl 0x18a8d5 ; jmp qword ptr [rdx]
0x000000000018c19b : ljmp ptr [rax + 0x40fffa89] ; mov bh, dl ; call rax
0x0000000000189063 : ljmp ptr [rax + 0x42fff3cb] ; fdivr st(3), st(0) ; jmp rcx
0x0000000000189062 : ljmp ptr [rax + 0x42fff3cb] ; fdivr st(3), st(0) ; jmp rcx
0x000000000018781b : ljmp ptr [rax + 0x53] ; out dx, al ; jmp rax
0x0000000000199003 : ljmp ptr [rax + rbp*2 + 0x44740001] ; cmc ; jmp rsp
0x00000000001953cf : ljmp ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x0000000000187817 : ljmp ptr [rax] ; push rsp ; out dx, al ; ljmp ptr [rax + 0x53] ; out dx, al ; jmp rax
0x0000000000187b4b : ljmp ptr [rax] ; ret
0x000000000019847b : ljmp ptr [rbp + rdx + 1] ; add byte ptr [rbx + rsi*8 - 0x10], dl ; jmp rsp
0x000000000018a8a3 : ljmp ptr [rbx + 0x7a] ; idiv bh ; scasb al, byte ptr [rdi] ; jns 0x18a8a9 ; jmp qword ptr [rdx]
0x000000000019b30b : ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x0000000000186c77 : ljmp ptr [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000186c73 : ljmp ptr [rbx - 0x2e] ; in eax, dx ; ljmp ptr [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000198ac3 : ljmp ptr [rcx + rax*2 + 0x46940001] ; jmp rsp
0x0000000000198ac2 : ljmp ptr [rcx + rax*2 + 0x46940001] ; jmp rsp
0x00000000001882c7 : ljmp ptr [rcx + rbp] ; bnd call qword ptr [rdi] ; sub dh, dl ; call qword ptr [rax]
0x00000000001882c6 : ljmp ptr [rcx + rbp] ; bnd call qword ptr [rdi] ; sub dh, dl ; call qword ptr [rax]
0x0000000000195a0f : ljmp ptr [rcx + rdx*2] ; cld ; call rdx
0x000000000018a4f5 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000188ae3 : ljmp ptr [rcx] ; mov ebx, 0xaa49fff3 ; call rsp
0x0000000000188ae2 : ljmp ptr [rcx] ; mov ebx, 0xaa49fff3 ; call rsp
0x0000000000181e43 : ljmp ptr [rcx] ; sbb ebx, ebp ; jmp qword ptr [rdi]
0x0000000000197e13 : ljmp ptr [rdi + 0x70d40000] ; out dx, al ; jmp rsp
0x000000000019ace3 : ljmp ptr [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x000000000018875b : ljmp ptr [rdx - 0x7d] ; call qword ptr [rdx]
0x000000000018875a : ljmp ptr [rdx - 0x7d] ; call qword ptr [rdx]
0x0000000000186a27 : ljmp ptr [rdx] ; movsxd rbp, ebp ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x000000000018a8af : ljmp ptr [rsi + 0x22fff679] ; jl 0x18a8b5 ; jmp qword ptr [rdx]
0x000000000018a94b : ljmp ptr [rsi + 0x22fff679] ; jl 0x18a951 ; jmp qword ptr [rdx]
0x000000000019b4a3 : ljmp ptr [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b4ad ; call rsp
0x000000000006d713 : lock add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x000000000016e80e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed26 : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe3e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170356 : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001aabdd : lock add byte ptr [rax], al ; push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x000000000010de4e : lock add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x0000000000086644 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000fc1d4 : lock and byte ptr [rax - 0x77], cl ; ret
0x000000000012252f : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000019b30c : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x0000000000145780 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000019751d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, 0x6b ; in eax, dx ; jmp rsp
0x00000000001a682d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi - 0x12], bh ; jmp qword ptr [rcx]
0x0000000000171da0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000198ac4 : lodsb al, byte ptr [rsi] ; add dword ptr [r8], eax ; xchg eax, esp ; jmp rsp
0x00000000001b0ae4 : lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; call 0x221b0063
0x0000000000143a2c : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003ea8b : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5c11 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000b67c2 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e072a : lodsb al, byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000013c84a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002b0ac : lodsb al, byte ptr [rsi] ; clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000196221 : lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rdx]
0x0000000000196165 : lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x0000000000188aa1 : lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000196ddc : lodsb al, byte ptr [rsi] ; jg 0x196de6 ; add ah, al ; add ebp, edx ; jmp rsp
0x00000000001a6be4 : lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001047f8 : lodsb al, byte ptr [rsi] ; mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x104808 ; call rbx
0x0000000000199f64 : lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000007b2d4 : lodsb al, byte ptr [rsi] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008d7d8 : lodsb al, byte ptr [rsi] ; nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000145da4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185a7d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000197e14 : lodsb al, byte ptr [rsi] ; out 0, eax ; add ah, dl ; jo 0x197e10 ; jmp rsp
0x0000000000199004 : lodsb al, byte ptr [rsi] ; push 0x44740001 ; cmc ; jmp rsp
0x00000000001b0fe4 : lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fe7 ; jmp qword ptr [rbx]
0x0000000000197834 : lodsb al, byte ptr [rsi] ; ret 0
0x0000000000197834 : lodsb al, byte ptr [rsi] ; ret 0
0x00000000001a7de4 : lodsb al, byte ptr [rsi] ; ret 0
0x0000000000039978 : lodsb al, byte ptr [rsi] ; ret 0x38
0x000000000019a0f4 : lodsb al, byte ptr [rsi] ; ret 1
0x0000000000109632 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000109625 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001095b1 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; je 0x1095be ; pop rbp ; ret
0x0000000000109563 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000892d4 : lodsb al, byte ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000004617c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000004617b : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae466 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b0dc6 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b3556 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007d777 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000019621d : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx + 0x22fffcac]
0x0000000000196199 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rsi]
0x0000000000196359 : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000196358 : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000196355 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00000000001962d9 : lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x00000000001b0778 : lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000000aca39 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x0000000000149910 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000048af2 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000048b2e : lodsd eax, dword ptr [rsi] ; ret
0x00000000000e961f : lodsd eax, dword ptr [rsi] ; ret
0x000000000008921c : lodsd eax, dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000ae465 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b0dc5 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b3555 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000104aca : loop 0x104a58 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000013033c : loop 0x1303c6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000137626 : loop 0x1375b8 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001377b9 : loop 0x13774b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000015abca : loop 0x15abc5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015abc9 : loop 0x15abc6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d69a : loop 0x15d695 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d699 : loop 0x15d696 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001601ba : loop 0x1601b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001601b9 : loop 0x1601b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000185e1a : loop 0x185e6f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000186ce5 : loop 0x186cd6 ; jmp qword ptr [rcx]
0x0000000000189588 : loop 0x189516 ; hlt ; jmp rdx
0x000000000018958c : loop 0x18951a ; hlt ; jmp rdx
0x0000000000189590 : loop 0x18951e ; hlt ; jmp rdx
0x0000000000189594 : loop 0x189522 ; hlt ; jmp rdx
0x0000000000189598 : loop 0x189526 ; hlt ; jmp rdx
0x000000000018959c : loop 0x18952a ; hlt ; jmp rdx
0x00000000001895a0 : loop 0x18952e ; hlt ; jmp rdx
0x00000000001895a4 : loop 0x189532 ; hlt ; call rsp
0x00000000001895b0 : loop 0x18953e ; hlt ; jmp rdx
0x00000000001895b4 : loop 0x189542 ; hlt ; jmp rdx
0x00000000001895b8 : loop 0x189546 ; hlt ; jmp rdx
0x00000000001895bc : loop 0x18954a ; hlt ; jmp rdx
0x00000000001895c0 : loop 0x18954e ; hlt ; jmp rdx
0x00000000001895c4 : loop 0x189552 ; hlt ; jmp rdx
0x00000000001895c8 : loop 0x189556 ; hlt ; jmp rdx
0x00000000001895cc : loop 0x18955a ; hlt ; jmp rdx
0x00000000001895d0 : loop 0x18955e ; hlt ; jmp rdx
0x00000000001895d4 : loop 0x189562 ; hlt ; jmp rdx
0x00000000001895d8 : loop 0x189566 ; hlt ; jmp rdx
0x00000000001895dc : loop 0x18956a ; hlt ; jmp rdx
0x00000000001895e0 : loop 0x18956e ; hlt ; jmp rdx
0x00000000001895e4 : loop 0x189572 ; hlt ; jmp rdx
0x00000000001895e8 : loop 0x189576 ; hlt ; jmp rdx
0x00000000001895ec : loop 0x18957a ; hlt ; jmp rdx
0x00000000001895f0 : loop 0x18957e ; hlt ; jmp rdx
0x00000000001895f4 : loop 0x189582 ; hlt ; jmp rdx
0x000000000018a84c : loop 0x18a8d1 ; idiv bh ; pop rsp ; jle 0x18a850 ; jmp rdx
0x000000000018a854 : loop 0x18a8d9 ; idiv bh ; jle 0x18a858 ; jmp rdx
0x0000000000194fb8 : loop 0x194f5e ; std ; jmp rdx
0x00000000001952a9 : loop 0x1952a8 ; jmp rax
0x0000000000195309 : loop 0x195308 ; jmp qword ptr [rax]
0x0000000000197d1d : loop 0x197d25 ; add byte ptr [rdx], ah ; out dx, al ; call rsp
0x00000000001aeb39 : loop 0x1aeb31 ; jmp qword ptr [rcx]
0x00000000001b5ae9 : loop 0x1b5ae3 ; call rcx
0x00000000000025e5 : loop 0x25bf ; ret 0x23cb
0x000000000003a689 : loop 0x3a6b3 ; mov rax, rcx ; or rax, rdx ; ret
0x0000000000055d0d : loop 0x55c9a ; ret
0x000000000005f10b : loop 0x5f114 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a8
0x0000000000065891 : loop 0x65819 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000006bcc2 : loop 0x6bc54 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000759b4 : loop 0x759bb ; mov eax, edx ; ret
0x0000000000075aa4 : loop 0x75aab ; mov eax, edx ; ret
0x000000000008699d : loop 0x869f0 ; mov esi, ebx ; mov rdi, rbp ; call 0x82bd9
0x0000000000087bf4 : loop 0x87c46 ; mov edi, edi ; call rax
0x000000000009f80d : loop 0x9f845 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000a684a : loop 0xa6855 ; add byte ptr [rax], al ; ret
0x00000000000aac55 : loop 0xaac6f ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ad28f : loop 0xad2e6 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ad558 : loop 0xad5af ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000c1cef : loop 0xc1cf5 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000e500c : loop 0xe5018 ; xor esi, esi ; call 0x8f248
0x00000000000e515f : loop 0xe5164 ; add esi, esi ; ret
0x00000000000eeb42 : loop 0xeeacb ; ret 0x850f
0x00000000001046c3 : loope 0x10467e ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000111116 : loope 0x111124 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000013225e : loope 0x1321f3 ; ret
0x000000000015ab3a : loope 0x15ab35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ab39 : loope 0x15ab36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d60a : loope 0x15d605 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d609 : loope 0x15d606 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016012a : loope 0x160125 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160129 : loope 0x160126 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000168c3b : loope 0x168c42 ; add byte ptr [rax], al ; ret
0x0000000000170acb : loope 0x170ad5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000174326 : loope 0x174385 ; ret
0x00000000001860f9 : loope 0x1860fc ; jmp qword ptr [rdi]
0x0000000000186179 : loope 0x18617c ; jmp qword ptr [rdi]
0x00000000001861f9 : loope 0x1861fc ; jmp qword ptr [rdi]
0x0000000000186279 : loope 0x18627c ; jmp qword ptr [rdi]
0x00000000001862f9 : loope 0x1862fc ; jmp qword ptr [rdi]
0x0000000000186379 : loope 0x18637c ; jmp qword ptr [rdi]
0x000000000018906c : loope 0x189034 ; call rsi
0x000000000018abc9 : loope 0x18abd3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000195285 : loope 0x195284 ; call qword ptr [rax]
0x0000000000195329 : loope 0x195328 ; jmp rax
0x0000000000196b99 : loope 0x196b86 ; call rsp
0x0000000000197ced : loope 0x197cf5 ; add byte ptr [rsi + rbx*2 - 0x12], al ; jmp rsp
0x00000000001b64a9 : loope 0x1b64a8 ; call rsi
0x0000000000035d6e : loope 0x35d77 ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000048987 : loope 0x489d9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000489b8 : loope 0x48a0b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000048a2d : loope 0x48a80 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000000758c1 : loope 0x75896 ; mov dword ptr [rdi], ecx ; ret
0x00000000000948eb : loope 0x948fd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000094a92 : loope 0x94ae9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000094b5b : loope 0x94b6d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000aa059 : loope 0xaa0c8 ; nop dword ptr [rax + rax] ; ret
0x00000000000aac97 : loope 0xaac58 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aad7e : loope 0xaad75 ; ret
0x00000000000abf1e : loope 0xabf33 ; je 0xabf44 ; ret
0x00000000000b1946 : loope 0xb1951 ; add byte ptr [rax], al ; call 0x2dc46
0x00000000000c89bd : loope 0xc894a ; ret 0xf631
0x00000000000d72b9 : loope 0xd72be ; add esi, esi ; ret
0x0000000000101e60 : loopne 0x101e66 ; jmp 0x101e2a
0x0000000000105f6e : loopne 0x105fd4 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010a47e : loopne 0x10a484 ; ret
0x000000000010a49a : loopne 0x10a4a9 ; movzx eax, ax ; ret
0x000000000010a50e : loopne 0x10a514 ; ret
0x000000000010a5ae : loopne 0x10a5b4 ; ret
0x000000000010a5ca : loopne 0x10a5cf ; ret
0x000000000010a63e : loopne 0x10a644 ; ret
0x000000000010a65a : loopne 0x10a663 ; movzx eax, ax ; ret
0x000000000010a6ce : loopne 0x10a6d4 ; ret
0x000000000010a75e : loopne 0x10a764 ; ret
0x000000000010a7fe : loopne 0x10a804 ; ret
0x000000000010a89e : loopne 0x10a8a4 ; ret
0x000000000010a93e : loopne 0x10a944 ; ret
0x000000000010a95a : loopne 0x10a965 ; movzx eax, ax ; ret
0x000000000010a9ce : loopne 0x10a9d4 ; ret
0x000000000010aa69 : loopne 0x10aa6f ; ret
0x000000000010aafe : loopne 0x10ab04 ; ret
0x000000000010acda : loopne 0x10ace0 ; ret
0x000000000010ae20 : loopne 0x10ae26 ; ret
0x000000000010ae33 : loopne 0x10ae42 ; movzx eax, ax ; ret
0x000000000010aea0 : loopne 0x10aea6 ; ret
0x000000000010af20 : loopne 0x10af26 ; ret
0x000000000010af33 : loopne 0x10af38 ; ret
0x000000000010afa0 : loopne 0x10afa6 ; ret
0x000000000010afb3 : loopne 0x10afbc ; movzx eax, ax ; ret
0x000000000010b020 : loopne 0x10b026 ; ret
0x000000000010b0a0 : loopne 0x10b0a6 ; ret
0x000000000010b120 : loopne 0x10b126 ; ret
0x000000000010b1a0 : loopne 0x10b1a6 ; ret
0x000000000010b220 : loopne 0x10b226 ; ret
0x000000000010b233 : loopne 0x10b23e ; movzx eax, ax ; ret
0x000000000010b2a0 : loopne 0x10b2a6 ; ret
0x000000000010b31d : loopne 0x10b323 ; ret
0x000000000010b3a0 : loopne 0x10b3a6 ; ret
0x000000000010b54a : loopne 0x10b550 ; ret
0x0000000000114a2b : loopne 0x114a30 ; ret
0x0000000000115158 : loopne 0x11516d ; cmp eax, 4 ; je 0x115167 ; ret
0x0000000000115329 : loopne 0x11533c ; pop rbp ; pop r12 ; ret
0x0000000000115b45 : loopne 0x115b97 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x0000000000123024 : loopne 0x123023 ; add eax, 0x10 ; ret
0x000000000012415b : loopne 0x124168 ; cdqe ; shr rax, 4 ; ret
0x00000000001383a7 : loopne 0x1383b0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013c701 : loopne 0x13c771 ; nop dword ptr [rax + rax] ; ret
0x000000000014da72 : loopne 0x14da3f ; jp 0x14dafb ; jp 0x14da6e ; ret
0x000000000014df62 : loopne 0x14df2f ; jp 0x14dfeb ; jp 0x14df5e ; ret
0x000000000014e305 : loopne 0x14e2d2 ; jp 0x14e38e ; jp 0x14e301 ; ret
0x0000000000151541 : loopne 0x151558 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151540 : loopne 0x151559 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151691 : loopne 0x1516a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151690 : loopne 0x1516a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517e1 : loopne 0x1517f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517e0 : loopne 0x1517f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151931 : loopne 0x151948 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151930 : loopne 0x151949 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a81 : loopne 0x151a98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a80 : loopne 0x151a99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151bd1 : loopne 0x151be8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151bd0 : loopne 0x151be9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151d21 : loopne 0x151d38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151d20 : loopne 0x151d39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151e6f : loopne 0x151e86 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151e6e : loopne 0x151e87 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151fc1 : loopne 0x151fd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151fc0 : loopne 0x151fd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152111 : loopne 0x152128 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152110 : loopne 0x152129 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152261 : loopne 0x152278 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152260 : loopne 0x152279 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001523b1 : loopne 0x1523c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001523b0 : loopne 0x1523c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152501 : loopne 0x152518 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152500 : loopne 0x152519 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152651 : loopne 0x152668 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152650 : loopne 0x152669 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001527a1 : loopne 0x1527b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001527a0 : loopne 0x1527b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f11 : loopne 0x153f28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f10 : loopne 0x153f29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154061 : loopne 0x154078 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154060 : loopne 0x154079 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001541b1 : loopne 0x1541c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001541b0 : loopne 0x1541c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154301 : loopne 0x154318 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154300 : loopne 0x154319 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154451 : loopne 0x154468 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154450 : loopne 0x154469 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001545a1 : loopne 0x1545b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001545a0 : loopne 0x1545b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001546f1 : loopne 0x154708 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001546f0 : loopne 0x154709 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015483f : loopne 0x154856 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015483e : loopne 0x154857 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154991 : loopne 0x1549a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154990 : loopne 0x1549a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ae1 : loopne 0x154af8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ae0 : loopne 0x154af9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154c31 : loopne 0x154c48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154c30 : loopne 0x154c49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154d81 : loopne 0x154d98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154d80 : loopne 0x154d99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ed1 : loopne 0x154ee8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ed0 : loopne 0x154ee9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155021 : loopne 0x155038 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155020 : loopne 0x155039 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155171 : loopne 0x155188 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155170 : loopne 0x155189 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568e1 : loopne 0x1568f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568e0 : loopne 0x1568f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a31 : loopne 0x156a48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a30 : loopne 0x156a49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b81 : loopne 0x156b98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b80 : loopne 0x156b99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156cd1 : loopne 0x156ce8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156cd0 : loopne 0x156ce9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e21 : loopne 0x156e38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e20 : loopne 0x156e39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f71 : loopne 0x156f88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f70 : loopne 0x156f89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570c1 : loopne 0x1570d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570c0 : loopne 0x1570d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015720f : loopne 0x157226 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015720e : loopne 0x157227 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157361 : loopne 0x157378 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157360 : loopne 0x157379 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001574b1 : loopne 0x1574c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001574b0 : loopne 0x1574c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157601 : loopne 0x157618 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157600 : loopne 0x157619 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157751 : loopne 0x157768 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157750 : loopne 0x157769 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001578a1 : loopne 0x1578b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001578a0 : loopne 0x1578b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001579f1 : loopne 0x157a08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001579f0 : loopne 0x157a09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157b41 : loopne 0x157b58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157b40 : loopne 0x157b59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000172ae5 : loopne 0x172b36 ; sub eax, edx ; vzeroupper ; ret
0x0000000000172ae4 : loopne 0x172b37 ; sub eax, edx ; vzeroupper ; ret
0x0000000000175864 : loopne 0x1758cf ; jmp 0x17586a
0x00000000001833f4 : loopne 0x1833d4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000186e11 : loopne 0x186e02 ; jmp qword ptr [rcx]
0x0000000000186e1d : loopne 0x186e0e ; jmp qword ptr [rcx]
0x0000000000186e25 : loopne 0x186e16 ; jmp qword ptr [rcx]
0x0000000000187df0 : loopne 0x187ddf ; int1 ; call qword ptr [rax]
0x0000000000187e78 : loopne 0x187e6e ; int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187f78 : loopne 0x187f7d ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000188030 : loopne 0x18803b ; push rax ; add dh, dl ; call qword ptr [rax]
0x000000000018b0a0 : loopne 0x18b0cd ; cli ; call qword ptr [rax]
0x0000000000194e84 : loopne 0x194ea2 ; sti ; call rax
0x0000000000194f48 : loopne 0x194fbf ; sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x00000000001952a4 : loopne 0x195289 ; sti ; jmp rax
0x00000000001952a8 : loopne 0x19528f ; sti ; jmp rax
0x00000000001952a5 : loopne 0x1952a4 ; jmp rax
0x0000000000195305 : loopne 0x195304 ; jmp qword ptr [rax]
0x0000000000195324 : loopne 0x195308 ; sti ; jmp rax
0x0000000000195328 : loopne 0x19530e ; sti ; jmp rax
0x000000000019532c : loopne 0x195318 ; sti ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019538c : loopne 0x195364 ; sti ; jmp qword ptr [rax]
0x00000000001954fc : loopne 0x195504 ; cld ; call rax
0x0000000000195e88 : loopne 0x195e12 ; cld ; push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x000000000019610c : loopne 0x196180 ; cld ; jmp qword ptr [rax]
0x0000000000197cc5 : loopne 0x197ccd ; add ah, dl ; pop rax ; out dx, al ; call rsp
0x00000000001a52d9 : loopne 0x1a52e5 ; add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x00000000001af3c0 : loopne 0x1af3c2 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0a10 : loopne 0x1b0a83 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0dd0 : loopne 0x1b0e48 ; cmc ; jmp qword ptr [rcx]
0x00000000001bc6ca : loopne 0x1bc6d9 ; ret 0xb
0x00000000001bc722 : loopne 0x1bc730 ; ret 0xa
0x000000000002dd13 : loopne 0x2dd22 ; movzx eax, ax ; ret
0x000000000002dd53 : loopne 0x2dd5c ; movzx eax, ax ; ret
0x000000000002ddf3 : loopne 0x2ddfe ; movzx eax, ax ; ret
0x000000000002ded3 : loopne 0x2ded8 ; ret
0x000000000002df4c : loopne 0x2df51 ; ret
0x000000000002df5c : loopne 0x2df6b ; movzx eax, ax ; ret
0x000000000002df9c : loopne 0x2dfa5 ; movzx eax, ax ; ret
0x000000000002df23 : loopne 0x2dfa6 ; ret
0x000000000002e03c : loopne 0x2e047 ; movzx eax, ax ; ret
0x0000000000034e75 : loopne 0x34e81 ; ret
0x0000000000035187 : loopne 0x3516e ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000036084 : loopne 0x360d4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000045a25 : loopne 0x45a4a ; or eax, edx ; ret
0x0000000000045ce4 : loopne 0x45d26 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000046072 : loopne 0x4608c ; test ch, bh ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000004846d : loopne 0x48476 ; sub eax, 1 ; ret
0x0000000000052fc5 : loopne 0x52f52 ; ret 0xe680
0x0000000000054f3e : loopne 0x54ecb ; ret 0xe680
0x0000000000005ec0 : loopne 0x5eca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000006c47b : loopne 0x6c4dd ; pop rbp ; pop r12 ; ret
0x000000000006c4a5 : loopne 0x6c507 ; pop rbp ; pop r12 ; ret
0x000000000006cb8b : loopne 0x6cbed ; pop rbp ; pop r12 ; ret
0x000000000006cc0d : loopne 0x6cc6f ; pop rbp ; pop r12 ; ret
0x000000000006dd9c : loopne 0x6dda2 ; add byte ptr [rax], al ; jmp rax
0x000000000006ddd8 : loopne 0x6ddde ; add byte ptr [rax], al ; call rax
0x000000000006de2a : loopne 0x6de30 ; add byte ptr [rax], al ; call rax
0x000000000006de6c : loopne 0x6de72 ; add byte ptr [rax], al ; jmp rax
0x000000000006de71 : loopne 0x6dee2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007206e : loopne 0x72007 ; mov eax, 0xffffffff ; ret
0x00000000000779c8 : loopne 0x77a2a ; pop rbp ; pop r12 ; ret
0x0000000000077f06 : loopne 0x77f0b ; ret
0x0000000000077f16 : loopne 0x77f1b ; ret
0x0000000000078fb9 : loopne 0x79020 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079067 : loopne 0x790ce ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008f09d : loopne 0x8f101 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f132 : loopne 0x8f196 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000094d5d : loopne 0x94db5 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a47 : loopne 0x96a9d ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a4a : loopne 0x96aac ; pop rbp ; pop r12 ; ret
0x00000000000a694c : loopne 0xa6956 ; add byte ptr [rax], al ; ret
0x00000000000aac8d : loopne 0xaaca7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000bea6c : loopne 0xbea0a ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000000c428 : loopne 0xc3e2 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000cd6b0 : loopne 0xcd716 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d17a2 : loopne 0xd1804 ; pop rbp ; pop r12 ; ret
0x00000000000d18a2 : loopne 0xd1904 ; pop rbp ; pop r12 ; ret
0x00000000000d6568 : loopne 0xd656d ; ret
0x00000000000d71e9 : loopne 0xd71f2 ; add eax, 8 ; ret
0x00000000000d7235 : loopne 0xd723b ; ret
0x00000000000d72e9 : loopne 0xd72ef ; pop rbx ; ret
0x00000000000d92a3 : loopne 0xd92b7 ; ret
0x00000000000d9b4d : loopne 0xd9bbe ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000e45d7 : loopne 0xe459f ; call 0x66d0ceeb
0x000000000019aa3c : mov ah, 0 ; add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x00000000001322f7 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001acdec : mov ah, 0x12 ; add dword ptr [rax], eax ; add dl, bl ; jmp qword ptr [rcx]
0x0000000000182e0a : mov ah, 0x13 ; ret
0x000000000019d4ec : mov ah, 0x19 ; add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000001ad7ec : mov ah, 0x1c ; add dword ptr [rax], eax ; nop ; xchg esp, esi ; call qword ptr [rax]
0x00000000000b5773 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000db0d8 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000bc209 : mov ah, 0x24 ; mov eax, 0x41000000 ; call rsp
0x00000000001aebec : mov ah, 0x30 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x0000000000198a1c : mov ah, 0x3a ; add dword ptr [rax], eax ; add al, 0x24 ; jmp rsp
0x00000000001af9ec : mov ah, 0x3e ; add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019b898 : mov ah, 0x40 ; sti ; call rsp
0x00000000001b05ec : mov ah, 0x4a ; add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000198ed4 : mov ah, 0x61 ; add dword ptr [rax], eax ; je 0x198ef5 ; cmc ; call rsp
0x00000000001b3bec : mov ah, 0x80 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000195df8 : mov ah, 0x83 ; cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x00000000001981e8 : mov ah, 0x91 ; out dx, eax ; jmp rsp
0x0000000000197630 : mov ah, 0x94 ; in eax, dx ; jmp rsp
0x000000000019ab0c : mov ah, 0xa ; add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x00000000001832b0 : mov ah, 0xa5 ; ret
0x00000000001962f0 : mov ah, 0xaa ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x000000000019751c : mov ah, 0xac ; add byte ptr [rax], al ; add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000188ab4 : mov ah, 0xbb ; jmp rdx
0x0000000000197724 : mov ah, 0xbc ; add byte ptr [rax], al ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x00000000001977d0 : mov ah, 0xc4 ; in eax, dx ; call rsp
0x00000000001978f4 : mov ah, 0xc9 ; add byte ptr [rax], al ; adc al, 0xf0 ; in eax, dx ; call rsp
0x000000000019a684 : mov ah, 0xe4 ; add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x000000000019a140 : mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x00000000000b7c1b : mov ah, 0xe9 ; ret
0x0000000000197eac : mov ah, 0xee ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x0000000000188cc5 : mov ah, 0xf3 ; jmp qword ptr [rbx]
0x00000000001b5479 : mov ah, 0xf6 ; call rsi
0x0000000000182c04 : mov ah, bl ; push rsi ; ret
0x00000000001895ad : mov ah, dh ; jmp rdx
0x00000000001a6bb5 : mov al, 0 ; add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000000ebf5e : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001a6c15 : mov al, 0 ; add byte ptr [rax], bh ; mov cl, 0xee ; call qword ptr [rax]
0x00000000001a6be5 : mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x0000000000187fd8 : mov al, 0 ; bnd jmp rax ; add dl, dh ; call qword ptr [rax]
0x00000000001bab20 : mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000000de2ec : mov al, 0x15 ; hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000012e13c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e0f4 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001358a9 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000cdcde : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000ce74d : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000d1be1 : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000d39b1 : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000c52d5 : mov al, 0x48 ; add eax, esi ; jmp rax
0x00000000001322e9 : mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000135059 : mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000013c6f8 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000012674d : mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x000000000018957c : mov al, 0x52 ; hlt ; push qword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rsi]
0x00000000001b0560 : mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a9950 : mov al, 0x5c ; int1 ; jmp qword ptr [rcx]
0x0000000000195970 : mov al, 0x5e ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x0000000000195758 : mov al, 0x61 ; cld ; inc dword ptr [rax + 0x61] ; cld ; call rax
0x00000000001b0790 : mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b09e0 : mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x0000000000187bf4 : mov al, 0x6e ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x00000000001b0c50 : mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001960c8 : mov al, 0x77 ; cld ; jmp qword ptr [rax]
0x0000000000195ec4 : mov al, 0x78 ; cld ; jmp qword ptr [rax]
0x0000000000195c84 : mov al, 0x82 ; cld ; inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195e5c : mov al, 0x86 ; cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x00000000001963cc : mov al, 0x9d ; cld ; jmp qword ptr [rsi]
0x00000000001bc6c5 : mov al, 0xa ; sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001950c0 : mov al, 0xa7 ; std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000019617c : mov al, 0xa9 ; cld ; inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000196354 : mov al, 0xad ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x00000000001a5320 : mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000000d1fa8 : mov al, 0xe8 ; ret 0x42a
0x0000000000187e44 : mov al, 0xec ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x00000000001850b6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000187eb8 : mov al, 0xee ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00000000001047ec : mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010488e : mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001047f9 : mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x104807 ; call rbx
0x00000000000fde53 : mov al, 0xf3 ; ret
0x00000000001a3fe5 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001a9e05 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000001a9e4d : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000188004 : mov al, 1 ; inc eax ; add edx, esi ; jmp rax
0x00000000001a4d80 : mov al, 2 ; std ; jmp rsp
0x00000000000a697c : mov al, 4 ; add byte ptr [rax], al ; ret
0x000000000018808c : mov al, 4 ; inc eax ; add al, 0xf2 ; call rax
0x00000000000a657c : mov al, 8 ; add byte ptr [rax], al ; ret
0x00000000001bc71d : mov al, 9 ; sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001a4615 : mov al, byte ptr [rax] ; add al, ch ; jae 0x1a460e ; call qword ptr [rcx]
0x00000000001a45a5 : mov al, byte ptr [rax] ; add byte ptr [rax + 0x71], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000000a2aab : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a547b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000166ce6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2ad9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a54a9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000166d04 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2b5d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a552d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000016aff0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2a85 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a5455 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000166cc0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2a95 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000a5465 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000166cd0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000197665 : mov bh, 0 ; add byte ptr [rsp + rbx*4], dl ; in eax, dx ; call rsp
0x000000000015b901 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015e3d1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000160ef1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000002a21b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x0000000000029d92 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x000000000006caa0 : mov bh, 0x48 ; add edi, esi ; jmp rdi
0x0000000000033411 : mov bh, 0x48 ; add esi, edi ; jmp rsi
0x0000000000170968 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000002da67 : mov bh, 0x8b ; add al, 0x10 ; ret
0x000000000002dab2 : mov bh, 0x8b ; add al, 0x10 ; ret
0x0000000000002be8 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00000000001840e4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002dd16 : mov bh, 0xc0 ; ret
0x000000000002dd37 : mov bh, 0xc0 ; ret
0x000000000002dd56 : mov bh, 0xc0 ; ret
0x000000000002dd77 : mov bh, 0xc0 ; ret
0x000000000002dd97 : mov bh, 0xc0 ; ret
0x000000000002ddb7 : mov bh, 0xc0 ; ret
0x000000000002ddd7 : mov bh, 0xc0 ; ret
0x000000000002ddf6 : mov bh, 0xc0 ; ret
0x000000000002de17 : mov bh, 0xc0 ; ret
0x000000000002de37 : mov bh, 0xc0 ; ret
0x000000000002de57 : mov bh, 0xc0 ; ret
0x000000000002df5f : mov bh, 0xc0 ; ret
0x000000000002df80 : mov bh, 0xc0 ; ret
0x000000000002df9f : mov bh, 0xc0 ; ret
0x000000000002dfc0 : mov bh, 0xc0 ; ret
0x000000000002dfe0 : mov bh, 0xc0 ; ret
0x000000000002e000 : mov bh, 0xc0 ; ret
0x000000000002e020 : mov bh, 0xc0 ; ret
0x000000000002e03f : mov bh, 0xc0 ; ret
0x000000000002e060 : mov bh, 0xc0 ; ret
0x000000000002e080 : mov bh, 0xc0 ; ret
0x000000000002e0a0 : mov bh, 0xc0 ; ret
0x000000000010a49d : mov bh, 0xc0 ; ret
0x000000000010a52e : mov bh, 0xc0 ; ret
0x000000000010a65d : mov bh, 0xc0 ; ret
0x000000000010a77e : mov bh, 0xc0 ; ret
0x000000000010a81e : mov bh, 0xc0 ; ret
0x000000000010a8be : mov bh, 0xc0 ; ret
0x000000000010a95d : mov bh, 0xc0 ; ret
0x000000000010a9ee : mov bh, 0xc0 ; ret
0x000000000010aa86 : mov bh, 0xc0 ; ret
0x000000000010ab1e : mov bh, 0xc0 ; ret
0x000000000010ae36 : mov bh, 0xc0 ; ret
0x000000000010aeb7 : mov bh, 0xc0 ; ret
0x000000000010afb6 : mov bh, 0xc0 ; ret
0x000000000010b0b7 : mov bh, 0xc0 ; ret
0x000000000010b137 : mov bh, 0xc0 ; ret
0x000000000010b1b7 : mov bh, 0xc0 ; ret
0x000000000010b236 : mov bh, 0xc0 ; ret
0x000000000010b2b7 : mov bh, 0xc0 ; ret
0x000000000010b337 : mov bh, 0xc0 ; ret
0x000000000010b3b7 : mov bh, 0xc0 ; ret
0x00000000001275de : mov bh, 0xc0 ; ret
0x000000000011940c : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000019ecb9 : mov bh, 0xe9 ; call qword ptr [rdx]
0x000000000019add9 : mov bh, 0xf9 ; call rsp
0x0000000000003790 : mov bh, 0xfa ; add ebx, ebp ; in al, 0xee ; jne 0x377a ; ret 0x975
0x00000000001951ed : mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951e9 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951c9 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x0000000000195119 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x0000000000195139 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x00000000001951cd : mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019511d : mov bh, 0xfd ; jmp rcx
0x000000000019513d : mov bh, 0xfd ; jmp rcx
0x000000000019520d : mov bh, 0xfd ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000108a73 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010a496 : mov bh, 4 ; js 0x10a426 ; loopne 0x10a4ad ; movzx eax, ax ; ret
0x000000000010a5c6 : mov bh, 4 ; js 0x10a553 ; loopne 0x10a5d3 ; ret
0x000000000010a656 : mov bh, 4 ; js 0x10a5e6 ; loopne 0x10a667 ; movzx eax, ax ; ret
0x000000000010a956 : mov bh, 4 ; js 0x10a8e6 ; loopne 0x10a969 ; movzx eax, ax ; ret
0x000000000010ae2f : mov bh, 4 ; js 0x10adbf ; loopne 0x10ae46 ; movzx eax, ax ; ret
0x000000000010af2f : mov bh, 4 ; js 0x10aebc ; loopne 0x10af3c ; ret
0x000000000010afaf : mov bh, 4 ; js 0x10af3f ; loopne 0x10afc0 ; movzx eax, ax ; ret
0x000000000010b22f : mov bh, 4 ; js 0x10b1bf ; loopne 0x10b242 ; movzx eax, ax ; ret
0x000000000002dd0f : mov bh, 4 ; js 0x2dc9f ; loopne 0x2dd26 ; movzx eax, ax ; ret
0x000000000002dd4f : mov bh, 4 ; js 0x2dcdf ; loopne 0x2dd60 ; movzx eax, ax ; ret
0x000000000002ddef : mov bh, 4 ; js 0x2dd7f ; loopne 0x2de02 ; movzx eax, ax ; ret
0x000000000002decf : mov bh, 4 ; js 0x2de5c ; loopne 0x2dedc ; ret
0x000000000002df48 : mov bh, 4 ; js 0x2ded5 ; loopne 0x2df55 ; ret
0x000000000002df58 : mov bh, 4 ; js 0x2dee8 ; loopne 0x2df6f ; movzx eax, ax ; ret
0x000000000002df98 : mov bh, 4 ; js 0x2df28 ; loopne 0x2dfa9 ; movzx eax, ax ; ret
0x000000000002e038 : mov bh, 4 ; js 0x2dfc8 ; loopne 0x2e04b ; movzx eax, ax ; ret
0x00000000001857f3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000f5f31 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000076f91 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000019ace9 : mov bh, cl ; call rsp
0x000000000018c195 : mov bh, dl ; call rax
0x000000000018c1a1 : mov bh, dl ; call rax
0x000000000018c191 : mov bh, dl ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x000000000017225e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006bc81 : mov bl, 0x11 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000ada8c : mov bl, 0x48 ; mov eax, edx ; ret
0x00000000000e513c : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000001851c3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000196791 : mov bl, 0xe8 ; call rsp
0x0000000000001b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001044fb : mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104581 : mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010458e : mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x10459c ; call rbx
0x0000000000199861 : mov bl, 0xf6 ; jmp rsp
0x0000000000003af9 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000f3521 : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000008783c : mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000199f2d : mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x000000000005057d : mov bl, byte ptr [rsi - 0x76fffff6] ; ret 0xe680
0x0000000000188751 : mov bl, dh ; jmp rsi
0x0000000000126751 : mov byte ptr [r11], 0 ; ret
0x0000000000082f10 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000007763c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ff2c9 : mov byte ptr [r8 - 1], 0 ; ret
0x00000000000ff324 : mov byte ptr [r8 - 1], 0 ; ret
0x00000000000ff339 : mov byte ptr [r8 - 1], 0 ; ret
0x000000000002fa5c : mov byte ptr [rax + 0x39], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000013d6fc : mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000082f11 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000024208 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000242c0 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000024448 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000045af9 : mov byte ptr [rax + rdx], 0 ; ret
0x000000000007763d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ff2ca : mov byte ptr [rax - 1], 0 ; ret
0x00000000000ff325 : mov byte ptr [rax - 1], 0 ; ret
0x00000000000ff33a : mov byte ptr [rax - 1], 0 ; ret
0x00000000001215b6 : mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010e74d : mov byte ptr [rax], 0x20 ; jmp 0x10e719
0x0000000000104c2e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596d : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000358d5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000036c5e : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000036cae : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000014282b : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a56d2 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a590d : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a59c0 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000004f2aa : mov byte ptr [rbp - 0x4e8], dl ; call 0x8b5a8
0x000000000004f2a9 : mov byte ptr [rbp - 0x4e8], r10b ; call 0x8b5a9
0x00000000001b0638 : mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000000fdc66 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000126752 : mov byte ptr [rbx], 0 ; ret
0x0000000000002f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000977a4 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0x8440
0x0000000000168cb3 : mov byte ptr [rcx + 2], dl ; ret
0x000000000016d103 : mov byte ptr [rcx + 2], dl ; ret
0x0000000000168cd2 : mov byte ptr [rcx + 4], dl ; ret
0x000000000016d122 : mov byte ptr [rcx + 4], dl ; ret
0x0000000000168d13 : mov byte ptr [rcx + 8], dl ; ret
0x000000000016d163 : mov byte ptr [rcx + 8], dl ; ret
0x000000000009ea33 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002be46 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x000000000018769c : mov byte ptr [rcx - 0x12], dl ; jmp rax
0x000000000009edeb : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000009ed30 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009ee6a : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004821a : mov byte ptr [rcx], 0x48 ; cmp esi, edx ; jne 0x48219 ; xor eax, eax ; ret
0x000000000002d50c : mov byte ptr [rcx], 0x83 ; ret
0x00000000000e45f1 : mov byte ptr [rcx], 0xf ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x00000000001a6a10 : mov byte ptr [rcx], al ; ret
0x00000000001a6cc8 : mov byte ptr [rcx], al ; ret
0x0000000000168c90 : mov byte ptr [rcx], dl ; ret
0x000000000016d0e0 : mov byte ptr [rcx], dl ; ret
0x00000000000a9d4a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a82eb : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6b0b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a9d5b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a74a8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a5e38 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8f18 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a99e8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a9d60 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d82 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9da0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9dc0 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a751e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a5e8e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8f6e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a9a3e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8371 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6b61 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a9de1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9de6 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9e02 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9e22 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e42 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a83f3 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6be3 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a9e63 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a75a0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a5f10 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a8ff0 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9ac0 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9e68 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e8a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ea8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9ec8 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ee4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9f04 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9f24 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f44 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a6ce5 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a84f5 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a9f65 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9f6a : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9fba : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9c90 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cae : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9cce : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9cf0 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9d10 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9d30 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9bc6 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000123c12 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000123c11 : mov byte ptr [rdi + 1], sil ; ret
0x0000000000123de0 : mov byte ptr [rdi + 2], 0 ; jne 0x123e38 ; mov eax, r8d ; ret
0x000000000009ea73 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e9e3 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a9bd8 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000a7356 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5d56 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8e36 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a9906 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8179 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6a29 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9be9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9bee : mov byte ptr [rdi + 3], ch ; ret
0x000000000009ea92 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ea02 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a9c06 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000a7372 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a5d72 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8e52 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a9922 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a81a7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6a47 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d42 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a8552 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9c17 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c1c : mov byte ptr [rdi + 5], ch ; ret
0x000000000009ea19 : mov byte ptr [rdi + 6], 0 ; ret
0x000000000009eaba : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a9c2e : mov byte ptr [rdi + 6], ch ; ret
0x0000000000130342 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a9c4c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d5940 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d5901 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d5970 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d5997 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d59e0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d59cd : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d5930 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d5910 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000d9b50 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a9c58 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000a5db3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8e93 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a9963 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a81f9 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6a89 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6d83 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a8593 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9c69 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9c6e : mov byte ptr [rdi + 9], ch ; ret
0x0000000000123df6 : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000009e976 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000152b6b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000152b93 : mov byte ptr [rdi - 1], dl ; ret
0x0000000000152bbb : mov byte ptr [rdi - 1], dl ; ret
0x0000000000152bf3 : mov byte ptr [rdi - 1], dl ; ret
0x000000000015553b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000155563 : mov byte ptr [rdi - 1], dl ; ret
0x000000000015558b : mov byte ptr [rdi - 1], dl ; ret
0x00000000001555c3 : mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f0b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f33 : mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f5b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f93 : mov byte ptr [rdi - 1], dl ; ret
0x000000000015b294 : mov byte ptr [rdi - 1], dl ; ret
0x000000000015dd64 : mov byte ptr [rdi - 1], dl ; ret
0x0000000000160884 : mov byte ptr [rdi - 1], dl ; ret
0x00000000001bbf48 : mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001bc068 : mov byte ptr [rdi - 8], ch ; call rcx
0x000000000009e9c0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009ea40 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000d5960 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d59b9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a9bb2 : mov byte ptr [rdi], ch ; ret
0x000000000009fbc2 : mov byte ptr [rdi], cl ; ret
0x00000000000a0315 : mov byte ptr [rdi], cl ; ret
0x00000000000a0a62 : mov byte ptr [rdi], cl ; ret
0x00000000000aa60f : mov byte ptr [rdi], cl ; ret
0x000000000014db7c : mov byte ptr [rdi], cl ; ret
0x000000000014e06c : mov byte ptr [rdi], cl ; ret
0x000000000014e40c : mov byte ptr [rdi], cl ; ret
0x0000000000172a85 : mov byte ptr [rdi], cl ; ret
0x000000000009e911 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x00000000000a7330 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5d30 : mov byte ptr [rdi], dh ; ret
0x00000000000a8e10 : mov byte ptr [rdi], dh ; ret
0x00000000000a98e0 : mov byte ptr [rdi], dh ; ret
0x00000000000a8152 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6a02 : mov byte ptr [rdi], dl ; ret
0x00000000000a6d00 : mov byte ptr [rdi], dl ; ret
0x00000000000a8510 : mov byte ptr [rdi], dl ; ret
0x000000000015b973 : mov byte ptr [rdi], dl ; ret
0x000000000015e443 : mov byte ptr [rdi], dl ; ret
0x0000000000160f63 : mov byte ptr [rdi], dl ; ret
0x00000000000a9bc2 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a585a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000016b019 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a2aae : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a547e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000166ce9 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000016b047 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a2adc : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a54ac : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000166d07 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a57f0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2b60 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a5530 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000018a910 : mov byte ptr [rdx - 0xa], bh ; jmp qword ptr [rdx]
0x000000000011d0d8 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105e31 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000b90ad : mov byte ptr [rdx], 0x83 ; ret 0x4102
0x000000000016aff2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2a87 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a5457 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000166cc2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000713fa : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x0000000000077f3a : mov byte ptr [rdx], bh ; ret
0x0000000000077ffa : mov byte ptr [rdx], bh ; ret
0x0000000000103604 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000713f9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000077f39 : mov byte ptr [rdx], dil ; ret
0x0000000000077ff9 : mov byte ptr [rdx], dil ; ret
0x000000000002cae8 : mov byte ptr [rip + 0x398faf], dl ; ret
0x0000000000002478 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000012413b : mov byte ptr [rsi + 3], bl ; pop rbx ; ret
0x000000000012413a : mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x00000000000959b4 : mov byte ptr [rsi + rdx + 1], al ; jg 0x959a7 ; ret
0x000000000004a773 : mov byte ptr [rsi], al ; jne 0x4a757 ; mov rax, rsi ; ret
0x000000000004a6ef : mov byte ptr [rsi], dl ; jne 0x4a6df ; mov rax, rsi ; ret
0x000000000007550f : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000006e537 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000076fb7 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000182c02 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000182c01 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000183f43 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001852df : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000185c8a : mov ch, 0xab ; ret
0x000000000000378f : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, 0xee ; jne 0x377b ; ret 0x975
0x00000000001742e7 : mov ch, 0xea ; push rbx ; ret
0x00000000001b1e59 : mov ch, 0xf5 ; call rdi
0x00000000001a7ba9 : mov ch, 0xfb ; call qword ptr [rax]
0x0000000000199f65 : mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000016f386 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001975c5 : mov cl, 0 ; add byte ptr [rax + rax*4 - 0x13], ah ; jmp rsp
0x000000000008eadb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001a6d05 : mov cl, 0 ; add byte ptr [rax], bl ; fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001095ae : mov cl, 0x15 ; mov word ptr [rbx + rbp + 0x5d027400], gs ; ret
0x000000000017435a : mov cl, 0x15 ; sbb byte ptr [rip + 0x1740025], ah ; ret
0x0000000000003bac : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000caaa6 : mov cl, 0x35 ; insb byte ptr [rdi], dx ; ret 0x2f
0x0000000000039976 : mov cl, 0x35 ; lodsb al, byte ptr [rsi] ; ret 0x38
0x000000000007ef57 : mov cl, 0x35 ; ret
0x000000000011ccbf : mov cl, 0x35 ; ret
0x00000000001288f8 : mov cl, 0x35 ; ret 0x2a03
0x0000000000002be9 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000000c78ae : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000142fe0 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001a6c19 : mov cl, 0xee ; call qword ptr [rax]
0x00000000001046a9 : mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104766 : mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001046c4 : mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001046b6 : mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x1046c4 ; call rbx
0x00000000000d64e9 : mov cl, byte ptr [rax + 0x39] ; ret
0x000000000002c852 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000091c75 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000091c8f : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000009436a : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000009438f : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000001485f5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000014860f : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000014a5ba : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000014a5df : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000014bfc5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000014bfdf : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000014d96a : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000014d98f : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000163095 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000001630af : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000001655ea : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000016560f : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000009e993 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x000000000009e993 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x0000000000089d94 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000008bc14 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000008fb74 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000091e84 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000014e654 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000014f8d4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000161084 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000001631f4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000001850b2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009fbc0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0313 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0a60 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014db7a : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e06a : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e40a : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000abf1b : mov cl, dl ; and cl, 0xf ; je 0xabf47 ; ret
0x000000000018536c : mov cs, edi ; ret 0x8b36
0x000000000018536b : mov cs, edi ; ret 0x8b36
0x000000000014b1de : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000a5d50 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8e30 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a9900 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001bd784 : mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000007a60e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d6 : mov dh, 0 ; pop rbx ; ret
0x000000000007b42e : mov dh, 0 ; pop rbx ; ret
0x000000000007b620 : mov dh, 0 ; pop rbx ; ret
0x0000000000077f63 : mov dh, 0 ; ret
0x0000000000077f9a : mov dh, 0 ; ret
0x000000000007961b : mov dh, 0 ; ret
0x000000000007cc4e : mov dh, 0 ; ret
0x000000000015b971 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000015e441 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000160f61 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008ecc4 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000033bd0 : mov dh, 0x17 ; test dl, dl ; jne 0x33bb6 ; ret
0x00000000000e3a9a : mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x0000000000025944 : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x000000000002869b : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000029595 : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x000000000006c206 : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000012de82 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000d7676 : mov dh, 0x41 ; cmp eax, esi ; jge 0xd7657 ; mov edx, eax ; jmp 0xd7660
0x00000000000cf265 : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000d054e : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000ceb89 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cecef : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cfa04 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cfbfc : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000006c853 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000046273 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000128e11 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000099b81 : mov dh, 0x45 ; ret
0x000000000009dac8 : mov dh, 0x45 ; ret
0x000000000009e507 : mov dh, 0x45 ; ret
0x000000000009dab9 : mov dh, 0x45 ; ret 0x8348
0x0000000000099b72 : mov dh, 0x45 ; ret 0x8349
0x000000000009e4f4 : mov dh, 0x45 ; ret 0x8349
0x000000000004bc83 : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000171e31 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171e21 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171df1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000171e11 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171e01 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000000e0faa : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x0000000000025c59 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000292a8 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d1921 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001840a2 : mov dh, 0x4e ; ret 0x474c
0x000000000010de63 : mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x0000000000123efd : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000006ce29 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000d45fb : mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000099567 : mov dh, 0x55 ; ret
0x000000000009bb84 : mov dh, 0x55 ; ret
0x000000000009d5e8 : mov dh, 0x55 ; ret
0x000000000009bb75 : mov dh, 0x55 ; ret 0x8348
0x000000000009d5d9 : mov dh, 0x55 ; ret 0x8348
0x0000000000099559 : mov dh, 0x55 ; ret 0x8349
0x0000000000171e35 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000171e25 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000171df5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000056807 : mov dh, 0x56 ; or al, 0x83 ; ret
0x000000000005678a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000576cc : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000171e05 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000171e15 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000001957a0 : mov dh, 0x60 ; cld ; inc dword ptr [rsi + 0x60] ; cld ; call rsi
0x000000000005e59e : mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ec111 : mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x00000000001961c4 : mov dh, 0xa8 ; cld ; inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000089385 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000012e698 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013a9b8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aa28 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aad8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013ae38 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aea8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b018 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b088 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bbc8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc38 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bca8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd18 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b84c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b90c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b9cc : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ba8c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e21d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f661 : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001303dc : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ea9df : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00000000000bb1e6 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000bb201 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cdbb7 : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000cdc0f : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003522d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000d3fdf : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000e0088 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c0eeb : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c105b : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000d9c15 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c0eeb : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c105b : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000d9c15 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c1d0 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c2ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000010ec01 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000006b31a : mov dh, 0xc0 ; neg eax ; ret
0x0000000000077fcd : mov dh, 0xc0 ; neg eax ; ret
0x00000000000ac17e : mov dh, 0xc0 ; neg eax ; ret
0x00000000000ea9c1 : mov dh, 0xc0 ; neg eax ; ret
0x00000000001076fa : mov dh, 0xc0 ; neg eax ; ret
0x0000000000107724 : mov dh, 0xc0 ; neg eax ; ret
0x0000000000109a09 : mov dh, 0xc0 ; neg eax ; ret
0x00000000001339c6 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000012f5eb : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013043e : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000130496 : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000001304fc : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000001305fb : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013a8dd : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013ab8a : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013ac4a : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013ad0a : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013adca : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013b111 : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000c75bc : mov dh, 0xc0 ; pop rbx ; ret
0x0000000000102578 : mov dh, 0xc0 ; pop rbx ; ret
0x0000000000035f2a : mov dh, 0xc0 ; ret
0x000000000003610c : mov dh, 0xc0 ; ret
0x00000000000453ba : mov dh, 0xc0 ; ret
0x00000000000e88d4 : mov dh, 0xc0 ; ret
0x00000000000f8966 : mov dh, 0xc0 ; ret
0x00000000000ff80b : mov dh, 0xc0 ; ret
0x0000000000130363 : mov dh, 0xc0 ; ret
0x0000000000130388 : mov dh, 0xc0 ; ret
0x00000000001303a8 : mov dh, 0xc0 ; ret
0x000000000013aa98 : mov dh, 0xc0 ; ret
0x000000000013bb40 : mov dh, 0xc0 ; ret
0x000000000013bb80 : mov dh, 0xc0 ; ret
0x000000000013c360 : mov dh, 0xc0 ; ret
0x000000000013c3a1 : mov dh, 0xc0 ; ret
0x000000000013c4b7 : mov dh, 0xc0 ; ret
0x000000000013c4f7 : mov dh, 0xc0 ; ret
0x00000000000aabe8 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000000aac10 : mov dh, 0xc2 ; pop rbx ; ret
0x00000000000aac10 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007a78e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001193fe : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000077f33 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x0000000000077ff3 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000c3256 : mov dh, 0xc7 ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000c3256 : mov dh, 0xc7 ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000713fe : mov dh, 0xc7 ; ret
0x00000000001852e4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000c31db : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000008ecea : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000f8b4c : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000e1290 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000008b141 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000008d3b1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000145a81 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000146a61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000014f821 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000150f81 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016e464 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000005c1eb : mov dh, 0xe4 ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x000000000005c418 : mov dh, 0xe4 ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d9b43 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000188b25 : mov dh, 0xf3 ; dec dword ptr [rcx - 0x56] ; call qword ptr [rax]
0x00000000000acb02 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000003340c : mov dh, 0xf6 ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x000000000007a621 : mov dh, 2 ; ret
0x00000000000e5732 : mov dh, 4 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d720c : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000016e461 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ecc1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008b144 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000008d3b4 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000145a84 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000146a64 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000014f824 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000150f84 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000007cb14 : mov dh, byte ptr [rax + rax] ; ret
0x000000000006dcb8 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000aad7c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000001a6981 : mov dh, ch ; call qword ptr [rsi]
0x00000000001a69b1 : mov dh, ch ; jmp rbx
0x000000000018c194 : mov dil, dl ; call rax
0x000000000018c1a0 : mov dil, dl ; call rax
0x00000000001a6e25 : mov dl, 0 ; add byte ptr [rax - 0x1a], bl ; out dx, al ; call qword ptr [rax]
0x000000000006c3f7 : mov dl, 0x11 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000003aa4 : mov dl, 0x1e ; ret
0x00000000000c5263 : mov dl, 0x48 ; add edx, esi ; jmp rdx
0x0000000000195a44 : mov dl, 0x52 ; cld ; jmp qword ptr [rdx]
0x0000000000195844 : mov dl, 0x5c ; cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001747ed : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3e6a : mov dl, 0x78 ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x0000000000188758 : mov dl, 0x79 ; ljmp ptr [rdx - 0x7d] ; call qword ptr [rdx]
0x00000000001886c0 : mov dl, 0x79 ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188740 : mov dl, 0x79 ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000195d30 : mov dl, 0x84 ; cld ; inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x0000000000196228 : mov dl, 0xab ; cld ; inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x0000000000102bf2 : mov dl, 0xcc ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000065d59 : mov dl, 0xeb ; xchg eax, ecx ; mov rdi, r15 ; call 0x71fd8
0x0000000000104623 : mov dl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000073d16 : mov dl, 1 ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000010ab85 : mov dl, 3 ; add al, 0xa ; ret
0x000000000010abe0 : mov dl, 3 ; add al, 0xa ; ret
0x000000000010b407 : mov dl, 3 ; add al, 0xa ; ret
0x000000000010b454 : mov dl, 3 ; add al, 0xa ; ret
0x00000000000ad172 : mov dl, byte ptr [rax + 0x31] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000a6a23 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a6a42 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6a83 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000152bf0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001555c0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f90 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a8150 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6a00 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9bc0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000107412 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000cd224 : mov dword ptr [0x2d0], eax ; ret
0x00000000000bb63f : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000007ef06 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000000bf1e3 : mov dword ptr [r12], 1 ; jmp 0xbf1b8
0x000000000012d8ee : mov dword ptr [r14], 0 ; ret
0x0000000000065ac7 : mov dword ptr [r14], r13d ; jmp 0x64bfa
0x0000000000123fa0 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x000000000003acb3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000123f04 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000115810 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000000ac917 : mov dword ptr [r9 + 8], esi ; ret
0x000000000009fbb6 : mov dword ptr [r9 - 2], ecx ; ret
0x00000000000a0309 : mov dword ptr [r9 - 2], ecx ; ret
0x00000000000a0a56 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000009fba1 : mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a02f4 : mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a0a41 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000071c39 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c79 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077469 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000071c3d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000071c7d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000072c77 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000072fd0 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000023acc : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000023acf : mov dword ptr [rax + 0x54], edx ; ret
0x000000000006b46b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000007bb1a : mov dword ptr [rax + 8], 0 ; ret
0x000000000008f30e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000005bd92 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000005bf02 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000013c54d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000fd308 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000000fd3b8 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000001025e8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000bb740 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00000000000bb828 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00000000000bdf90 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00000000000fb708 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000143e38 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000033ea0 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x000000000008241b : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x0000000000082d88 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x0000000000082f28 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000001a8245 : mov dword ptr [rax], 0xf046e800 ; jmp qword ptr [rdi]
0x00000000000fce54 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000c80d8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000000c8248 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000106259 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000021228 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000001a4445 : mov dword ptr [rax], eax ; add al, bl ; insd dword ptr [rdi], dx ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000abbd3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ea944 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x0000000000143ebc : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x0000000000072165 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705ca : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000070751 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000005fb88 : mov dword ptr [rax], edi ; jmp 0x5fb51
0x0000000000062807 : mov dword ptr [rax], edi ; jmp 0x627d0
0x00000000000ff201 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000123fa1 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000084116 : mov dword ptr [rax], edi ; ret
0x00000000001072d3 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac951 : mov dword ptr [rax], edx ; jne 0xac94d ; ret
0x0000000000123d0a : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000003acb4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000ea99a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000fcd4a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000720a5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000123f05 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002d9d3 : mov dword ptr [rax], edx ; ret
0x00000000000ff256 : mov dword ptr [rax], edx ; ret
0x0000000000138220 : mov dword ptr [rax], edx ; ret
0x0000000000072ef1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000115811 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000ea943 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000143ebb : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000f5c51 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d3114 : mov dword ptr [rbp - 0x2888], esi ; sub r10, rax ; jmp 0xd313b
0x000000000004d64e : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000069f55 : mov dword ptr [rbp - 0x518], ecx ; jmp 0x661ec
0x0000000000023656 : mov dword ptr [rbp - 0x58], edx ; call 0x1f8a5
0x0000000000113dcd : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x0000000000114703 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x000000000011495c : mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000113dd3 : mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000011437a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000114840 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000114314 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000113ea3 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000114226 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000001143ff : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011452e : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000005224f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000141f7d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044c91 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044d11 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044dbf : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b62e2 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6390 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6432 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001192b5 : mov dword ptr [rbp], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a5fa : mov dword ptr [rbp], edx ; call rax
0x0000000000070982 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078262 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e72 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070981 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078261 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e71 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078457 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c84b8 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0xc848e
0x00000000001435f6 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000789b9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010ecb4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013c1c5 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00000000001435ae : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000010ece4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000076ba5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000013c219 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e83bb : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000077495 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000891b9 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x00000000000891b8 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000003522f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000fc1f1 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000008926e : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x000000000007b20b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000007c95d : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000072dba : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c791 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079832 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071cc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000072ad8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072b7d : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078327 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000002a6e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000010ec84 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035e08 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007b42a : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007b61c : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008964d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001025d2 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000000d2201 : mov dword ptr [rbx], eax ; add byte ptr [rcx - 0x77], al ; ret
0x000000000013c3e3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000013c426 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007b52c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000143821 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013826f : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000001382be : mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000102572 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000136f50 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000137050 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006df3a : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072bdc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000891b6 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000047d7c : mov dword ptr [rbx], edx ; jg 0x47c91 ; pop rbx ; ret
0x00000000000896d3 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000896fd : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000008926b : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000132314 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x0000000000135083 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x0000000000135108 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000135065 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000135135 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000002057d : mov dword ptr [rcx + 0x968], eax ; ret
0x0000000000168cf2 : mov dword ptr [rcx + 3], edx ; ret
0x000000000016d142 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000ac050 : mov dword ptr [rcx + 4], eax ; jne 0xac01e ; ret
0x0000000000168ce3 : mov dword ptr [rcx + 4], edx ; ret
0x000000000016d133 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000ac04f : mov dword ptr [rcx + 4], r8d ; jne 0xac01f ; ret
0x0000000000168d54 : mov dword ptr [rcx + 5], edx ; ret
0x000000000016d1a4 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000168d64 : mov dword ptr [rcx + 6], edx ; ret
0x000000000016d1b4 : mov dword ptr [rcx + 6], edx ; ret
0x0000000000168d33 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d74 : mov dword ptr [rcx + 7], edx ; ret
0x000000000016d183 : mov dword ptr [rcx + 7], edx ; ret
0x000000000016d1c4 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d24 : mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d43 : mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d84 : mov dword ptr [rcx + 8], edx ; ret
0x000000000016d174 : mov dword ptr [rcx + 8], edx ; ret
0x000000000016d193 : mov dword ptr [rcx + 8], edx ; ret
0x000000000016d1d4 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000ac918 : mov dword ptr [rcx + 8], esi ; ret
0x000000000009e946 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00000000000481cb : mov dword ptr [rcx + rsi*8], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010906f : mov dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x000000000009fbb7 : mov dword ptr [rcx - 2], ecx ; ret
0x00000000000a030a : mov dword ptr [rcx - 2], ecx ; ret
0x00000000000a0a57 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000009fba2 : mov dword ptr [rcx - 4], ecx ; ret
0x00000000000a02f5 : mov dword ptr [rcx - 4], ecx ; ret
0x00000000000a0a42 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000009fb91 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000a02e4 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000a0a31 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000d15fc : mov dword ptr [rcx], 0xdf75d284 ; ret
0x0000000000199655 : mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x00000000000d6ce2 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006045c : mov dword ptr [rcx], eax ; jmp 0x60425
0x000000000003577a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000035e3a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047b36 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047bca : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047f5a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006b37a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006b3ad : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bc52a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bf61a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bf64a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cbf4a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc13d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc21a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc2d3 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc333 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc704 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc78a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd29a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd43a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd46a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd4ca : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd4fa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd52a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd55a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea77a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea7aa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea7da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea80a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea83a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea86a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea89a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea8ca : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f5ab9 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f5b19 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6b5a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6dfa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6e2a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6efa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6f2a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6fea : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f701a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7083 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f72a3 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7303 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f732a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f77ba : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7933 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f795a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f798a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f79ba : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f79ea : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7a1a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7a83 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7aaa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7ada : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f831a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f834a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f837a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f83ad : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f898a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f89bd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f89ea : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a1a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a4a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a7d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8aaa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8ada : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8b0a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fb773 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fbaad : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc259 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc97a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc9aa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc9da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcd7a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcf5a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcfc3 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd023 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd4ea : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd58a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd5f9 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd71a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd74a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd7b3 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd7da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd843 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd86a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdbda : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdc0a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdc3a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff18a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1ba : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001014ec : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010175a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010178a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001017f3 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010181a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010184a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010187d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001018aa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001018da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010190a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010193a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000105ffd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010602a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010605a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010608d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001060bd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001060ea : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010611d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010614a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010617a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001061ad : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001061da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010620d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001072fa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010732a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010742f : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010745a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010749a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001074ca : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001074fa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010752a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010774d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010777a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001077aa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001077da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010781d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010784a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010787a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001078aa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001078da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010790a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010793a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010796a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010799a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001079cd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a39 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a5a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a8d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107aba : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107aea : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b1a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b4a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b7a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107bad : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107bdd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c0a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c3a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c6d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c9d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ccd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107d39 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107d5a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107dc9 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107dea : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107e1a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107e89 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107eaa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107edd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f0a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f3a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f6d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107fd3 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ffa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010802d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010805d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001080e3 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010810a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108173 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010819a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001081ca : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001081fd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010822a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108359 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001083b3 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001084d3 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108539 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010855d : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010858a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001085ba : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001085ed : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108b79 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108bd9 : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108bfa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c2a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c5a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c8a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108cbd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108ced : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d1a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d4a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d7a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108daa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001406ad : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001406fd : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000071277 : mov dword ptr [rcx], eax ; ret
0x0000000000075664 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000123fa4 : mov dword ptr [rcx], ecx ; ret
0x00000000000710d1 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000123f78 : mov dword ptr [rcx], edi ; ret
0x000000000008e837 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x0000000000168cb1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000016d101 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168cd0 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000016d120 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168d11 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000016d161 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168cf0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000016d140 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168d31 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000016d181 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d41 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000016d191 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d51 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000016d1a1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d61 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000016d1b1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d71 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000016d1c1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d81 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000016d1d1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000007d722 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000168ce0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000016d130 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168d21 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x000000000016d171 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000123f08 : mov dword ptr [rcx], edx ; ret
0x0000000000168ca1 : mov dword ptr [rcx], edx ; ret
0x0000000000168cc0 : mov dword ptr [rcx], edx ; ret
0x0000000000168d01 : mov dword ptr [rcx], edx ; ret
0x000000000016d0f1 : mov dword ptr [rcx], edx ; ret
0x000000000016d110 : mov dword ptr [rcx], edx ; ret
0x000000000016d151 : mov dword ptr [rcx], edx ; ret
0x00000000000f68bb : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f68f2 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a74bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a830d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a74fb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a834b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a757d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a83cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a5e8b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8f6b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a9a3b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a6b5e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a5f0d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a8fed : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9abd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000048b3f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e4d : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e7b : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5eed : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6b1d : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6b4b : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6bbd : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8f2d : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8f5b : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8fcd : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a99fd : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9a2b : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9a9d : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9d7d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a6be0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a5f50 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6c20 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9030 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9b00 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5f70 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6c40 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9050 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9b20 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f31 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a6c01 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9011 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9ae1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000f68e0 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00000000000a75e3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a8433 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a5f53 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6c23 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9033 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9b03 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9ea3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000013be20 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000013be4f : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000013be81 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007b133 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077837 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000077bb7 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000a75c5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8415 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7603 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8453 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a5f35 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f73 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6c05 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6c43 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9015 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9053 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9ae5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9b23 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9e85 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec3 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000013beb2 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000013bde6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000bf70e : mov dword ptr [rdi + 0x20], 0 ; jmp 0xbb94a
0x000000000010e74a : mov dword ptr [rdi + 0x28], ecx ; mov byte ptr [rax], 0x20 ; jmp 0x10e71c
0x000000000013591c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013bdc4 : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013bf61 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d6bca : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d6bc9 : mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d6bce : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d6bcd : mov dword ptr [rdi + 0x30], r8d ; ret
0x0000000000094cd1 : mov dword ptr [rdi + 0x38], ecx ; ret
0x00000000001358d4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00000000000208ed : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000007b163 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007eacb : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036049 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000f5f1e : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000ac252 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012304f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000a753d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a838d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a5ead : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a6b7d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a8f8d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a9a5d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a9dfd : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a74db : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a832b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a755d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a83ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a5e6b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ecd : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b3b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b9d : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8f4b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8fad : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a1b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a7d : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9d9b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9e1d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015b7b5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015e285 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000160da5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b5f8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015e0c8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160be8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b898 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000015e368 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000160e88 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000015b745 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015e215 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000160d35 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b588 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015e058 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160b78 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003b373 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000a73a7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a81d7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000015b6d5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015e1a5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000160cc5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b518 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015dfe8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160b08 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5d97 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a6a67 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a8e77 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9947 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9c47 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009ea53 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009e9b3 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000007eace : mov dword ptr [rdi + 4], eax ; ret
0x000000000003b36d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000009eaa3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a7389 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a81b9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000015b4a8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015df78 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160a98 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009e9a3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000a5d89 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a6a59 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a6d53 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a8563 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a8e69 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a9939 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a9c29 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000f5f70 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009ea52 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009e9b2 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a743b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a827b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015b438 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015df08 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160a28 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5dfb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a6acb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a6dc4 : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a85d4 : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a8edb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a99ab : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a9ceb : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a745b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a829b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015b3c8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015de98 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000001609b8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e0b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a6adb : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a6dd4 : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a85e4 : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a8eeb : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a99bb : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a9d0b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a73f9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8239 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a747b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a82bb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015b358 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015de28 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160948 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5dd9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a5e1b : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6aa9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6aeb : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6da3 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a85b3 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a8eb9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a8efb : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9989 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a99cb : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9ca9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9d2b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ff238 : mov dword ptr [rdi + 8], 0 ; ret
0x00000000000aca35 : mov dword ptr [rdi + 8], eax ; je 0xac9f0 ; mov rax, rbx ; pop rbx ; ret
0x000000000007b137 : mov dword ptr [rdi + 8], eax ; ret
0x000000000007b167 : mov dword ptr [rdi + 8], eax ; ret
0x00000000000fc8a4 : mov dword ptr [rdi + 8], eax ; ret
0x000000000013bf65 : mov dword ptr [rdi + 8], eax ; ret
0x000000000013c51d : mov dword ptr [rdi + 8], eax ; ret
0x0000000000048ac4 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000a821b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7419 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8259 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a73db : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000482f4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000049ed4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000003ac94 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x0000000000077f96 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac85 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a5dcb : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a5de9 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6a9b : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6ab9 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6d94 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6db3 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a85a4 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a85c3 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a8eab : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a8ec9 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a997b : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a9999 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a9c8b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cc9 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000fc362 : mov dword ptr [rdi + 8], esi ; ret
0x00000000000fc3b8 : mov dword ptr [rdi + 8], esi ; ret
0x00000000000ff228 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000036472 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000036762 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000124088 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x0000000000124083 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000014db73 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x000000000014e063 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x000000000014e403 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x000000000008f315 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014db5d : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e04d : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e3ed : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000008f31e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000014db41 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000014e031 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000014e3d1 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x00000000001528b5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015292b : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155285 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001552fb : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000157c55 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000157ccb : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001528f3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152969 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001529a1 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001529c9 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001529f1 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152a09 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001552c3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155339 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155371 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155399 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553c1 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553d9 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157c93 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d09 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d41 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d69 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d91 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157da9 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048a2f : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000152c3c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152c8c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152cd2 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d0a : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d48 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d70 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d98 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152db0 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152dc8 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015560c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015565c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556a2 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556da : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155718 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155740 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155768 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155780 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155798 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157fdc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015802c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158072 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001580aa : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001580e8 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158110 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158138 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158150 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158168 : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae08 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d8d8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001603f8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152e1c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e6c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eb2 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eea : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f28 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f50 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f78 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f90 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152fa8 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001557ec : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015583c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155882 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558ba : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558f8 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155920 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155948 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155960 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155978 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001581bc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015820c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158252 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015828a : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582c8 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582f0 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158318 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158330 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158348 : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad88 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d858 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160378 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015300c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153054 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153092 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001530ca : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153108 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153130 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153158 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153170 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153188 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001559dc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a24 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a62 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a9a : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155ad8 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b00 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b28 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b40 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b58 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583ac : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583f4 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158432 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015846a : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584a8 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584d0 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584f8 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158510 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158528 : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad08 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d7d8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001602f8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001531dd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153225 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153263 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015329f : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001532d9 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153311 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153339 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153361 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153379 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bad : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bf5 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c33 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c6f : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ca9 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ce1 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d09 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d31 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d49 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015857d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585c5 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158603 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015863f : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158679 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586b1 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586d9 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158701 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158719 : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ac79 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d749 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000160269 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001533dd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153425 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153463 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015349b : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001534d9 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153511 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153539 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153561 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153579 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155dad : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155df5 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e33 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e6b : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ea9 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ee1 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f09 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f31 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f49 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015877d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001587c5 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158803 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015883b : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158879 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588b1 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588d9 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158901 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158919 : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015abe9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d6b9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001601d9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001535dd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153625 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153663 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015369b : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001536d9 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153711 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153739 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153761 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153779 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155fad : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ff5 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156033 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015606b : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560a9 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560e1 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156109 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156131 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156149 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015897d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001589c5 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a03 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a3b : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a79 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158ab1 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158ad9 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b01 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b19 : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ab59 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d629 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000160149 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a6d20 : mov dword ptr [rdi - 1], edx ; ret
0x00000000000a6d61 : mov dword ptr [rdi - 1], edx ; ret
0x00000000000a8530 : mov dword ptr [rdi - 1], edx ; ret
0x00000000000a8571 : mov dword ptr [rdi - 1], edx ; ret
0x0000000000152fbd : mov dword ptr [rdi - 2], ecx ; ret
0x000000000015598d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000015835d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000015b18d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000015dc5d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000016077d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000152dd5 : mov dword ptr [rdi - 2], edx ; ret
0x00000000001557a5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000158175 : mov dword ptr [rdi - 2], edx ; ret
0x000000000015b215 : mov dword ptr [rdi - 2], edx ; ret
0x000000000015dce5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000160805 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000152fb9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000155989 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000158359 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000015b189 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000015dc59 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000160779 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009e8ff : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009e948 : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000153399 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153599 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153799 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155d69 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155f69 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000156169 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158739 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158939 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158b39 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ad0b : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ad8b : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ae0b : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ae8b : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015af89 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b009 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b089 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d7db : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d85b : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d8db : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d95b : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015da59 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015dad9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015db59 : mov dword ptr [rdi - 4], ecx ; ret
0x00000000001602fb : mov dword ptr [rdi - 4], ecx ; ret
0x000000000016037b : mov dword ptr [rdi - 4], ecx ; ret
0x00000000001603fb : mov dword ptr [rdi - 4], ecx ; ret
0x000000000016047b : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160579 : mov dword ptr [rdi - 4], ecx ; ret
0x00000000001605f9 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160679 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152a6f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152ab7 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152af5 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b2d : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152bd3 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152beb : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152c3f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152c8f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152cd5 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d0d : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d4b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d73 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d9b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152db3 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152dcb : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e1f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e6f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eb5 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eed : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f2b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f53 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f7b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f93 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000152fab : mov dword ptr [rdi - 4], edx ; ret
0x000000000015300f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000153057 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000153095 : mov dword ptr [rdi - 4], edx ; ret
0x00000000001530cd : mov dword ptr [rdi - 4], edx ; ret
0x000000000015310b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000153133 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015315b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000153173 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015318b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000153193 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015543f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155487 : mov dword ptr [rdi - 4], edx ; ret
0x00000000001554c5 : mov dword ptr [rdi - 4], edx ; ret
0x00000000001554fd : mov dword ptr [rdi - 4], edx ; ret
0x00000000001555a3 : mov dword ptr [rdi - 4], edx ; ret
0x00000000001555bb : mov dword ptr [rdi - 4], edx ; ret
0x000000000015560f : mov dword ptr [rdi - 4], edx ; ret
0x000000000015565f : mov dword ptr [rdi - 4], edx ; ret
0x00000000001556a5 : mov dword ptr [rdi - 4], edx ; ret
0x00000000001556dd : mov dword ptr [rdi - 4], edx ; ret
0x000000000015571b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155743 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015576b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155783 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015579b : mov dword ptr [rdi - 4], edx ; ret
0x00000000001557ef : mov dword ptr [rdi - 4], edx ; ret
0x000000000015583f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155885 : mov dword ptr [rdi - 4], edx ; ret
0x00000000001558bd : mov dword ptr [rdi - 4], edx ; ret
0x00000000001558fb : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155923 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015594b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155963 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015597b : mov dword ptr [rdi - 4], edx ; ret
0x00000000001559df : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a27 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a65 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a9d : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155adb : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b03 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b2b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b43 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b5b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b63 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e0f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e57 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e95 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000157ecd : mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f73 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f8b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000157fdf : mov dword ptr [rdi - 4], edx ; ret
0x000000000015802f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000158075 : mov dword ptr [rdi - 4], edx ; ret
0x00000000001580ad : mov dword ptr [rdi - 4], edx ; ret
0x00000000001580eb : mov dword ptr [rdi - 4], edx ; ret
0x0000000000158113 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015813b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000158153 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015816b : mov dword ptr [rdi - 4], edx ; ret
0x00000000001581bf : mov dword ptr [rdi - 4], edx ; ret
0x000000000015820f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000158255 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015828d : mov dword ptr [rdi - 4], edx ; ret
0x00000000001582cb : mov dword ptr [rdi - 4], edx ; ret
0x00000000001582f3 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015831b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000158333 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015834b : mov dword ptr [rdi - 4], edx ; ret
0x00000000001583af : mov dword ptr [rdi - 4], edx ; ret
0x00000000001583f7 : mov dword ptr [rdi - 4], edx ; ret
0x0000000000158435 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015846d : mov dword ptr [rdi - 4], edx ; ret
0x00000000001584ab : mov dword ptr [rdi - 4], edx ; ret
0x00000000001584d3 : mov dword ptr [rdi - 4], edx ; ret
0x00000000001584fb : mov dword ptr [rdi - 4], edx ; ret
0x0000000000158513 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015852b : mov dword ptr [rdi - 4], edx ; ret
0x0000000000158533 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015b103 : mov dword ptr [rdi - 4], edx ; ret
0x000000000015dbd3 : mov dword ptr [rdi - 4], edx ; ret
0x00000000001606f3 : mov dword ptr [rdi - 4], edx ; ret
0x000000000009e95b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000153396 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155d66 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158736 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b086 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015db56 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160676 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e8e5 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000153596 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155f66 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158936 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b006 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015dad6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001605f6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e979 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000153796 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000156166 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158b36 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015af86 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015da56 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160576 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000489ba : mov dword ptr [rdi - 8], ecx ; ret
0x00000000001528b9 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000015292f : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000155289 : mov dword ptr [rdi - 8], ecx ; ret
0x00000000001552ff : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000157c59 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000157ccf : mov dword ptr [rdi - 8], ecx ; ret
0x000000000015ab5d : mov dword ptr [rdi - 8], ecx ; ret
0x000000000015abed : mov dword ptr [rdi - 8], ecx ; ret
0x000000000015ac7d : mov dword ptr [rdi - 8], ecx ; ret
0x000000000015d62d : mov dword ptr [rdi - 8], ecx ; ret
0x000000000015d6bd : mov dword ptr [rdi - 8], ecx ; ret
0x000000000015d74d : mov dword ptr [rdi - 8], ecx ; ret
0x000000000016014d : mov dword ptr [rdi - 8], ecx ; ret
0x00000000001601dd : mov dword ptr [rdi - 8], ecx ; ret
0x000000000016026d : mov dword ptr [rdi - 8], ecx ; ret
0x00000000001528f7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015296d : mov dword ptr [rdi - 8], edx ; ret
0x00000000001529a5 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001529cd : mov dword ptr [rdi - 8], edx ; ret
0x00000000001529f5 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000152a0d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000152a25 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001531e1 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153229 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153267 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001532a3 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001532dd : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153315 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015333d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153365 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015337d : mov dword ptr [rdi - 8], edx ; ret
0x00000000001533e1 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153429 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153467 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015349f : mov dword ptr [rdi - 8], edx ; ret
0x00000000001534dd : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153515 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015353d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153565 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015357d : mov dword ptr [rdi - 8], edx ; ret
0x00000000001535e1 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153629 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153667 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015369f : mov dword ptr [rdi - 8], edx ; ret
0x00000000001536dd : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153715 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015373d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000153765 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015377d : mov dword ptr [rdi - 8], edx ; ret
0x00000000001552c7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015533d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155375 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015539d : mov dword ptr [rdi - 8], edx ; ret
0x00000000001553c5 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001553dd : mov dword ptr [rdi - 8], edx ; ret
0x00000000001553f5 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155bb1 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155bf9 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155c37 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155c73 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155cad : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155ce5 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155d0d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155d35 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155d4d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155db1 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155df9 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155e37 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155e6f : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155ead : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155ee5 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155f0d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155f35 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155f4d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155fb1 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000155ff9 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000156037 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015606f : mov dword ptr [rdi - 8], edx ; ret
0x00000000001560ad : mov dword ptr [rdi - 8], edx ; ret
0x00000000001560e5 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015610d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000156135 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015614d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000157c97 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000157d0d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000157d45 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000157d6d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000157d95 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000157dad : mov dword ptr [rdi - 8], edx ; ret
0x0000000000157dc5 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158581 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001585c9 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158607 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158643 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015867d : mov dword ptr [rdi - 8], edx ; ret
0x00000000001586b5 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001586dd : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158705 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015871d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158781 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001587c9 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158807 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015883f : mov dword ptr [rdi - 8], edx ; ret
0x000000000015887d : mov dword ptr [rdi - 8], edx ; ret
0x00000000001588b5 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001588dd : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158905 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015891d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158981 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001589c9 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158a07 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158a3f : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158a7d : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158ab5 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158add : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158b05 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000158b1d : mov dword ptr [rdi - 8], edx ; ret
0x000000000015af05 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015d9d5 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001604f5 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000152a6c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015543c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e0c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b68 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152b90 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152bb8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000155538 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000155560 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000155588 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f08 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f30 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f58 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152ab4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152af2 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b2a : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152bd0 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152be8 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155484 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554c2 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554fa : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001555a0 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001555b8 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e54 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e92 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157eca : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f70 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f88 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae88 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d958 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160478 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003a7a0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000c038c : mov dword ptr [rdi], eax ; jmp 0xbff1f
0x00000000000ff225 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a60b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00000000000489b4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048abe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000003655b : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000003684b : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000003ac98 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000054d86 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009e922 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x000000000009ea80 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a7375 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73c7 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a7354 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5d54 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8e34 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a9904 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8177 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6a27 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009ea00 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a81a5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6a45 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a81f7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6a87 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a73a5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a81d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a5d95 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a6a65 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a8e75 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9945 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009e9b0 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a73f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8237 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a5dd7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6aa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a8eb7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9987 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a7417 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8257 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a5de7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6ab7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a8ec7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a9997 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008f313 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000000aa5f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000172a69 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000a5df8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6ac8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a8ed8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a99a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5e08 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6ad8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a8ee8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a99b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5e18 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a6ae8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a8ef8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a99c8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008f31b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009e9f0 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009e9a0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a5d86 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6a56 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a8e66 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a9936 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5dc8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a6a98 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a8ea8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a9978 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000aa603 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000172a76 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000094a97 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x000000000001f9c3 : mov dword ptr [rdi], ecx ; ret
0x0000000000034a72 : mov dword ptr [rdi], ecx ; ret
0x0000000000048989 : mov dword ptr [rdi], ecx ; ret
0x0000000000048a93 : mov dword ptr [rdi], ecx ; ret
0x00000000000758c3 : mov dword ptr [rdi], ecx ; ret
0x0000000000094a19 : mov dword ptr [rdi], ecx ; ret
0x00000000000a5d75 : mov dword ptr [rdi], ecx ; ret
0x00000000000a5db7 : mov dword ptr [rdi], ecx ; ret
0x00000000000a8e55 : mov dword ptr [rdi], ecx ; ret
0x00000000000a8e97 : mov dword ptr [rdi], ecx ; ret
0x00000000000a9925 : mov dword ptr [rdi], ecx ; ret
0x00000000000a9967 : mov dword ptr [rdi], ecx ; ret
0x000000000015b35c : mov dword ptr [rdi], ecx ; ret
0x000000000015b3cc : mov dword ptr [rdi], ecx ; ret
0x000000000015b43c : mov dword ptr [rdi], ecx ; ret
0x000000000015b4ac : mov dword ptr [rdi], ecx ; ret
0x000000000015b51c : mov dword ptr [rdi], ecx ; ret
0x000000000015b58c : mov dword ptr [rdi], ecx ; ret
0x000000000015b5fc : mov dword ptr [rdi], ecx ; ret
0x000000000015b6d8 : mov dword ptr [rdi], ecx ; ret
0x000000000015b748 : mov dword ptr [rdi], ecx ; ret
0x000000000015b7b8 : mov dword ptr [rdi], ecx ; ret
0x000000000015b89c : mov dword ptr [rdi], ecx ; ret
0x000000000015de2c : mov dword ptr [rdi], ecx ; ret
0x000000000015de9c : mov dword ptr [rdi], ecx ; ret
0x000000000015df0c : mov dword ptr [rdi], ecx ; ret
0x000000000015df7c : mov dword ptr [rdi], ecx ; ret
0x000000000015dfec : mov dword ptr [rdi], ecx ; ret
0x000000000015e05c : mov dword ptr [rdi], ecx ; ret
0x000000000015e0cc : mov dword ptr [rdi], ecx ; ret
0x000000000015e1a8 : mov dword ptr [rdi], ecx ; ret
0x000000000015e218 : mov dword ptr [rdi], ecx ; ret
0x000000000015e288 : mov dword ptr [rdi], ecx ; ret
0x000000000015e36c : mov dword ptr [rdi], ecx ; ret
0x000000000016094c : mov dword ptr [rdi], ecx ; ret
0x00000000001609bc : mov dword ptr [rdi], ecx ; ret
0x0000000000160a2c : mov dword ptr [rdi], ecx ; ret
0x0000000000160a9c : mov dword ptr [rdi], ecx ; ret
0x0000000000160b0c : mov dword ptr [rdi], ecx ; ret
0x0000000000160b7c : mov dword ptr [rdi], ecx ; ret
0x0000000000160bec : mov dword ptr [rdi], ecx ; ret
0x0000000000160cc8 : mov dword ptr [rdi], ecx ; ret
0x0000000000160d38 : mov dword ptr [rdi], ecx ; ret
0x0000000000160da8 : mov dword ptr [rdi], ecx ; ret
0x0000000000160e8c : mov dword ptr [rdi], ecx ; ret
0x00000000000a7344 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8164 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a7362 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a8192 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73b4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81e4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6d40 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a8550 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d81 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a8591 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6da1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a85b1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6db1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a85c1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dc1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a85d1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dd1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a85e1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d50 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a8560 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6d91 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a85a1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000034dd6 : mov dword ptr [rdi], edx ; ret
0x00000000000774fd : mov dword ptr [rdi], edx ; ret
0x000000000009ede0 : mov dword ptr [rdi], edx ; ret
0x000000000009edef : mov dword ptr [rdi], edx ; ret
0x000000000009ee5f : mov dword ptr [rdi], edx ; ret
0x000000000009ee6f : mov dword ptr [rdi], edx ; ret
0x000000000009ee75 : mov dword ptr [rdi], edx ; ret
0x00000000000a5d44 : mov dword ptr [rdi], edx ; ret
0x00000000000a5d62 : mov dword ptr [rdi], edx ; ret
0x00000000000a5da4 : mov dword ptr [rdi], edx ; ret
0x00000000000a6a14 : mov dword ptr [rdi], edx ; ret
0x00000000000a6a32 : mov dword ptr [rdi], edx ; ret
0x00000000000a6a74 : mov dword ptr [rdi], edx ; ret
0x00000000000a6d11 : mov dword ptr [rdi], edx ; ret
0x00000000000a6d30 : mov dword ptr [rdi], edx ; ret
0x00000000000a6d71 : mov dword ptr [rdi], edx ; ret
0x00000000000a8521 : mov dword ptr [rdi], edx ; ret
0x00000000000a8540 : mov dword ptr [rdi], edx ; ret
0x00000000000a8581 : mov dword ptr [rdi], edx ; ret
0x00000000000a8e24 : mov dword ptr [rdi], edx ; ret
0x00000000000a8e42 : mov dword ptr [rdi], edx ; ret
0x00000000000a8e84 : mov dword ptr [rdi], edx ; ret
0x00000000000a98f4 : mov dword ptr [rdi], edx ; ret
0x00000000000a9912 : mov dword ptr [rdi], edx ; ret
0x00000000000a9954 : mov dword ptr [rdi], edx ; ret
0x000000000015b664 : mov dword ptr [rdi], edx ; ret
0x000000000015b822 : mov dword ptr [rdi], edx ; ret
0x000000000015b904 : mov dword ptr [rdi], edx ; ret
0x000000000015e134 : mov dword ptr [rdi], edx ; ret
0x000000000015e2f2 : mov dword ptr [rdi], edx ; ret
0x000000000015e3d4 : mov dword ptr [rdi], edx ; ret
0x0000000000160c54 : mov dword ptr [rdi], edx ; ret
0x0000000000160e12 : mov dword ptr [rdi], edx ; ret
0x0000000000160ef4 : mov dword ptr [rdi], edx ; ret
0x00000000000a9bd4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9c02 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9c54 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000350c9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x000000000009ea61 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e9e1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000009fb9f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a02f2 : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a0a3f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000014db5b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e04b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e3eb : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000004a07d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009fb8e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a02e1 : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a0a2e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014db3e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000014e02e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000014e3ce : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009e9d1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000009fbb3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a0306 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a0a53 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000014db70 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000014e060 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000014e400 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000004a0a3 : mov dword ptr [rdi], esi ; ret
0x00000000000f5f51 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00000000001359dc : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000006dcb7 : mov dword ptr [rdx + 0x130], ecx ; ret
0x00000000000784b5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000094d5f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000710ce : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071274 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000012e7f0 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000012e7cc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012e7d0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x00000000001323b0 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x00000000001358bc : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00000000000bb640 : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000016b077 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a2b1c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a54ec : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000166d27 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000016b059 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2afe : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000a54ce : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000166d19 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000016b10b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016b089 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000166d39 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000166d7b : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000016b12b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016b0a9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000166d49 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000166d9b : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000016b0c9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016b14b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000000a2ba0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a5570 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000166d59 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000166dbb : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000168f43 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000006b414 : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016b0e9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016afdb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000a2b82 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2bc0 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a5552 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a5590 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000166cab : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000166d69 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000016e3d0 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000016e409 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000016e41b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000132331 : mov dword ptr [rdx + 8], edi ; ret
0x00000000001350a1 : mov dword ptr [rdx + 8], edi ; ret
0x00000000001350b9 : mov dword ptr [rdx + 8], edi ; ret
0x00000000001358f1 : mov dword ptr [rdx + 8], edi ; ret
0x0000000000135909 : mov dword ptr [rdx + 8], edi ; ret
0x0000000000135939 : mov dword ptr [rdx + 8], edi ; ret
0x000000000008e67b : mov dword ptr [rdx - 0x76b3ffcd], eax ; ret 0x8348
0x000000000006e574 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x0000000000076ff4 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x00000000000fc71f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000016b004 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000016b032 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000016af84 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000078961 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000c83f2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003545a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000003574a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000357ba : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000357fa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000007835d : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000bc452 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c966a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cbffa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cc092 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cc182 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cd2da : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cd34a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cd59a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cd61a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6bfa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6c4a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6c9a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6cfa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6d5a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6db2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6f92 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f768a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fbaea : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fbb3a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fc292 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fc7ba : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd1ba : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd22a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd2aa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd35a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd8aa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fddb4 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fddd4 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fefd2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ff062 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ff102 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ff15a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ff1e4 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001056da : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000010739a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001075da : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000010768a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001076ca : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000010888a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000108932 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001089e2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000115842 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000115904 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000140c74 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000004a07f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000004a13f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000055767 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001323c2 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001323fb : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000013242b : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000013245b : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001350c2 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001350f8 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000135120 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000135148 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000135942 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000013597e : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000013599f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001359bf : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001359f7 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000c9f7d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000cb48d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010c32d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010daad : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011ab22 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011b4b2 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011be43 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011cd73 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000001209dd : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000131da3 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000791c0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000fd062 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000fd112 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000fde6a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x000000000010827a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000001083fa : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000001175ba : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x000000000011766a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000a2a99 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000a2ac7 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000a5469 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000a5497 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000166c54 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000166cd4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000166cf2 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000168fdf : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016e3b2 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016e3e2 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016e3f4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c9762 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x00000000000caf32 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000010b6d2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000010d082 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000011a89f : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000011b22f : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000011bbd2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000011cb02 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x0000000000120aa2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x0000000000131842 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002e19d : mov dword ptr [rdx], eax ; ret
0x000000000007c852 : mov dword ptr [rdx], eax ; ret
0x00000000001099c0 : mov dword ptr [rdx], eax ; ret
0x0000000000109c0e : mov dword ptr [rdx], eax ; ret
0x00000000000762df : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000aae15 : mov dword ptr [rdx], ecx ; jne 0xaae0d ; ret
0x0000000000071f86 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000ea697 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000009ed25 : mov dword ptr [rdx], ecx ; ret
0x000000000009ed37 : mov dword ptr [rdx], ecx ; ret
0x000000000009ed4b : mov dword ptr [rdx], ecx ; ret
0x00000000000e7afb : mov dword ptr [rdx], edi ; ret
0x00000000000c9dd3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000cb2e3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000010c183 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000010d903 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000011a969 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000011b2f9 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000011bc99 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000011cbc9 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x0000000000120833 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x0000000000131bf9 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00000000000cb3ad : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000010c24d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000010d9cd : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011aa30 : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011b3c0 : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011bd5d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011cc8d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00000000001208fd : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x0000000000131cbd : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000013232e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000013509e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001350b6 : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001358ee : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000135906 : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000135936 : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000094f87 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9f7c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000cb48c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010c32c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010daac : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011ab21 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011b4b1 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011be42 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011cd72 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000001209dc : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000131da2 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000017431f : mov dword ptr [rip + 0x25241b], ebx ; jne 0x174311 ; pop rbx ; ret
0x0000000000115ae8 : mov dword ptr [rip + 0x2b2632], eax ; pop rbp ; ret
0x0000000000109560 : mov dword ptr [rip + 0x2bacda], ebx ; pop rbx ; ret
0x00000000001014aa : mov dword ptr [rip + 0x2c2d60], edi ; ret
0x00000000000fe4f5 : mov dword ptr [rip + 0x2c72a5], eax ; mov rdx, rax ; jmp 0xfe497
0x00000000000368bb : mov dword ptr [rip + 0x38d7cb], eax ; mov eax, edx ; ret
0x00000000000368ac : mov dword ptr [rip + 0x38d7d6], edx ; ret
0x000000000001f928 : mov dword ptr [rip + 0x3a99da], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000e88a4 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000012d90f : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000012d92b : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000012d963 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000012d9bf : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000132231 : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000134fb8 : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000135858 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003b296 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003ac00 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003ac04 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x0000000000077f36 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x0000000000077ff6 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00000000000fc1d7 : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000000fb5a6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000f5e8f : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x00000000000f67dc : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003b2e0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003b327 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000ac098 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e8887 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000012d8d1 : mov dword ptr [rsi + 8], eax ; ret
0x000000000012d8df : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e88a0 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000048034 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000bb251 : mov dword ptr [rsi + rcx], edx ; jne 0xbb24e ; ret
0x00000000000aa606 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000172a79 : mov dword ptr [rsi - 2], ecx ; ret
0x00000000000aa5f9 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000172a6b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000012d8ef : mov dword ptr [rsi], 0 ; ret
0x000000000009e8e3 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x000000000012d980 : mov dword ptr [rsi], 0xa ; ret
0x000000000012d970 : mov dword ptr [rsi], 0xb ; ret
0x000000000012d9a0 : mov dword ptr [rsi], 0xc ; ret
0x000000000012d990 : mov dword ptr [rsi], 8 ; ret
0x00000000000bf4a8 : mov dword ptr [rsi], eax ; mov rdi, rbx ; call 0x8b727
0x000000000007783b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000077bbb : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f5f34 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f5f63 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f67f6 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f6806 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000065ac8 : mov dword ptr [rsi], ebp ; jmp 0x64bf9
0x00000000001235bf : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x0000000000123053 : mov dword ptr [rsi], edi ; ret
0x0000000000119361 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000003acb6 : mov dword ptr [rsi], edx ; ret
0x0000000000081a68 : mov dword ptr [rsp + 0x10], eax ; call rdi
0x0000000000034f35 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000081951 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000007ef07 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x0000000000081a63 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x000000000012c7f7 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000008162f : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00000000000819ab : mov dword ptr [rsp + 0x20], edx ; call rax
0x0000000000100eea : mov dword ptr [rsp + 0x28], eax ; call 0xcd1f6
0x00000000000819a6 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bfad : mov dword ptr [rsp + 0x28], ecx ; call 0x138236
0x00000000000335d9 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x0000000000033632 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x0000000000033676 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x00000000000e1c98 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00000000000bc208 : mov dword ptr [rsp + 0xb8], esi ; call r12
0x0000000000089220 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x00000000000892d8 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000102d46 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013b4ad : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013c2ec : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00000000000f35bf : mov dword ptr [rsp + 8], ebp ; call 0x1f8ae
0x0000000000035003 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a216 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000000bf1e4 : mov dword ptr [rsp], 1 ; jmp 0xbf1b7
0x0000000000089590 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x000000000012a513 : mov dword ptr [rsp], ecx ; call r12
0x00000000000cd223 : mov dword ptr fs:[0x2d0], eax ; ret
0x00000000000fd307 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000fd3b7 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000001025e7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000bb73f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000bb827 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000bdf8f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000fb707 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000143e37 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000082d87 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000082f27 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000c80d7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000000c8247 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000106258 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000021227 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x000000000005fb87 : mov dword ptr fs:[rax], edi ; jmp 0x5fb52
0x0000000000062806 : mov dword ptr fs:[rax], edi ; jmp 0x627d1
0x00000000000ff200 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000ff1ff : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000ea999 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000fcd49 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000ea942 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000143eba : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000121e70 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006045b : mov dword ptr fs:[rcx], eax ; jmp 0x60426
0x0000000000035779 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000035e39 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047b35 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047bc9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047f59 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006b379 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006b3ac : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bc529 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bf619 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bf649 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cbf49 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc13c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc219 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc2d2 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc332 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc703 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc789 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd299 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd439 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd469 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd4c9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd4f9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd529 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd559 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea779 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea7a9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea7d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea809 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea839 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea869 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea899 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea8c9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f5ab8 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f5b18 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6b59 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6df9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6e29 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6ef9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6f29 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6fe9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7019 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7082 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f72a2 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7302 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7329 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f77b9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7932 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7959 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7989 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f79b9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f79e9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7a19 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7a82 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7aa9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7ad9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8319 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8349 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8379 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f83ac : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8989 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f89bc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f89e9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a19 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a49 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a7c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8aa9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8ad9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8b09 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fb772 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fbaac : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc258 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc979 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc9a9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc9d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcd79 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcf59 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcfc2 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd022 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd4e9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd589 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd5f8 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd719 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd749 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd7b2 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd7d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd842 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd869 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdbd9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdc09 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdc39 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff189 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1b9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001014eb : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101759 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101789 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001017f2 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101819 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101849 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010187c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001018a9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001018d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101909 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101939 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000105ffc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106029 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106059 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010608c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001060bc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001060e9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010611c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106149 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106179 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001061ac : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001061d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010620c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001072f9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107329 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010742e : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107459 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107499 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001074c9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001074f9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107529 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010774c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107779 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001077a9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001077d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010781c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107849 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107879 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001078a9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001078d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107909 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107939 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107969 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107999 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001079cc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a38 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a59 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a8c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ab9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ae9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b19 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b49 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b79 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107bac : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107bdc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c09 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c39 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c6c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c9c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ccc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107d38 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107d59 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107dc8 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107de9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107e19 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107e88 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ea9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107edc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f09 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f39 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f6c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107fd2 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ff9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010802c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010805c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001080e2 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108109 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108172 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108199 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001081c9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001081fc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108229 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108358 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001083b2 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001084d2 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108538 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010855c : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108589 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001085b9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001085ec : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108b78 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108bd8 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108bf9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c29 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c59 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c89 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108cbc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108cec : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d19 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d49 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d79 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108da9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001406ac : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001406fc : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006e573 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000076ff3 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000078960 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000c83f1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000035459 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000035749 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000357b9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000357f9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000007835c : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000bc451 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c9669 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cbff9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cc091 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cc181 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cd2d9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cd349 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cd599 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000cd619 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6bf9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6c49 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6c99 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6cf9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6d59 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6db1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f6f91 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f7689 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fbae9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fbb39 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fc291 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fc7b9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd1b9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd229 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd2a9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd359 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fd8a9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fddb3 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fddb2 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fddd3 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fddd2 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fefd1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ff061 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ff101 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ff159 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ff1e3 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ff1e2 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001056d9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000107399 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001075d9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000107689 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001076c9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000108889 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000108931 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001089e1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000115841 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000115903 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000140c73 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c9dd2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000cb2e2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010c182 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010d902 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011a968 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011b2f8 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011bc98 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011cbc8 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000120832 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000131bf8 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000cb3ac : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000010c24c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000010d9cc : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000011aa2f : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000011b3bf : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000011bd5c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000011cc8c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000001208fc : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x0000000000131cbc : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000014db5a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e04a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e3ea : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000152dd0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001557a0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000158170 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000a5d40 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a6a10 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a8e20 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a98f0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000fb886 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000108ab6 : mov eax, 0 ; cmovae rax, rsi ; ret
0x00000000000d6c3c : mov eax, 0 ; cmove eax, esi ; ret
0x0000000000097485 : mov eax, 0 ; cmovne rax, rdi ; ret
0x000000000012bf74 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000aacc2 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000123920 : mov eax, 0x100 ; ret
0x000000000012391a : mov eax, 0x101 ; ret
0x0000000000123926 : mov eax, 0x102 ; ret
0x0000000000123912 : mov eax, 0x104 ; ret
0x00000000000fcd2d : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000f68d3 : mov eax, 0x16 ; jbe 0xf68e8 ; ret
0x0000000000087604 : mov eax, 0x16 ; je 0x87617 ; ret
0x00000000000f5f45 : mov eax, 0x16 ; je 0xf5f58 ; ret
0x00000000000877a0 : mov eax, 0x16 ; ret
0x00000000000878a4 : mov eax, 0x16 ; ret
0x0000000000115988 : mov eax, 0x16 ; ret
0x0000000000142cae : mov eax, 0x16 ; ret
0x00000000001a73cd : mov eax, 0x1900000 ; out dx, eax ; jmp rsi
0x00000000000f6908 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x00000000000cdada : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000cdada : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000cdad9 : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000aacbb : mov eax, 0x20 ; pop rbx ; ret
0x00000000000cdabf : mov eax, 0x20 ; ret
0x00000000000cdabe : mov eax, 0x20 ; ret
0x000000000002def7 : mov eax, 0x200 ; ret
0x000000000002df17 : mov eax, 0x200 ; ret
0x0000000000126a77 : mov eax, 0x200000 ; jmp 0x126a46
0x00000000000aacb4 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000bdc81 : mov eax, 0x39480030 ; ret 0x850f
0x00000000000aacad : mov eax, 0x40 ; pop rbx ; ret
0x00000000000cdb05 : mov eax, 0x40 ; ret
0x0000000000187bac : mov eax, 0x40fff16d ; insd dword ptr [rdi], dx ; int1 ; call rax
0x00000000000bc20b : mov eax, 0x41000000 ; call rsp
0x00000000001831fb : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008f7fa : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000000f6ed0 : mov eax, 0x5f ; syscall ; ret
0x00000000000aaca6 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000cd240 : mov eax, 0x66 ; syscall ; ret
0x00000000000cd260 : mov eax, 0x68 ; syscall ; ret
0x00000000000cd250 : mov eax, 0x6b ; syscall ; ret
0x00000000000cd270 : mov eax, 0x6c ; syscall ; ret
0x00000000000cd230 : mov eax, 0x6e ; syscall ; ret
0x00000000000cd480 : mov eax, 0x6f ; syscall ; ret
0x00000000000cd9d9 : mov eax, 0x7d00 ; ret
0x00000000000cda08 : mov eax, 0x7e ; ret
0x00000000000cd9aa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000cd9aa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000cd9a9 : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000cd95b : mov eax, 0x7f ; ret
0x00000000000aac9f : mov eax, 0x80 ; pop rbx ; ret
0x000000000005cd94 : mov eax, 0x85fffff9 ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000187698 : mov eax, 0x88ffee4f ; push rcx ; out dx, al ; jmp rax
0x00000000001065a1 : mov eax, 0x89000000 ; ret 0xe8c1
0x00000000000f5c64 : mov eax, 0x89fffffe ; ret 0xcb8
0x00000000000749b1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000003184 : mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000013243f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000dc120 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc0ea : mov eax, 0xc ; ret
0x00000000000bc370 : mov eax, 0xc9 ; syscall ; ret
0x0000000000119350 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000001192e9 : mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x00000000001150c2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000001383a6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001077f0 : mov eax, 0xe4 ; syscall ; ret
0x000000000006960f : mov eax, 0xe9fffffb ; ret 0xffff
0x00000000000cd9ff : mov eax, 0xfa ; ret
0x00000000000cda20 : mov eax, 0xfc17 ; ret
0x00000000000cd98c : mov eax, 0xfde8 ; jne 0xcd963 ; ret
0x00000000000cda10 : mov eax, 0xfffa ; ret
0x00000000000cbfac : mov eax, 0xfffffff2 ; ret
0x00000000000865e2 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000000f6b0a : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x000000000008b452 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x0000000000073021 : mov eax, 0xffffffff ; ja 0x73038 ; ret
0x0000000000070b81 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000074b4f : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000078306 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000fcde8 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144845 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000001448aa : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000014491a : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000014498a : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000001449fa : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144a65 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144acf : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144b35 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144b95 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144bff : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144c6a : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144cd5 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000039cee : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f1a5 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc832 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc432 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc941 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fce05 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128a70 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000140dfe : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000140e5e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007044c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000074999 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000007a670 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000cae6a : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000011958c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000120772 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000137d7b : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000140db1 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000001428cb : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033f0e : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000072093 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000072253 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000078331 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007841d : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000078963 : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000789d3 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b2b5 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b405 : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000865db : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000c83f4 : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000f789a : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000123d50 : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000353e7 : mov eax, 0xffffffff ; ret
0x000000000003545c : mov eax, 0xffffffff ; ret
0x000000000003548e : mov eax, 0xffffffff ; ret
0x000000000003570e : mov eax, 0xffffffff ; ret
0x000000000003574c : mov eax, 0xffffffff ; ret
0x00000000000357bc : mov eax, 0xffffffff ; ret
0x00000000000357fc : mov eax, 0xffffffff ; ret
0x0000000000035fae : mov eax, 0xffffffff ; ret
0x0000000000036066 : mov eax, 0xffffffff ; ret
0x000000000003609e : mov eax, 0xffffffff ; ret
0x00000000000360de : mov eax, 0xffffffff ; ret
0x000000000003611e : mov eax, 0xffffffff ; ret
0x000000000003613e : mov eax, 0xffffffff ; ret
0x00000000000361df : mov eax, 0xffffffff ; ret
0x0000000000036281 : mov eax, 0xffffffff ; ret
0x000000000003656e : mov eax, 0xffffffff ; ret
0x000000000003685e : mov eax, 0xffffffff ; ret
0x00000000000368c8 : mov eax, 0xffffffff ; ret
0x000000000003ac36 : mov eax, 0xffffffff ; ret
0x000000000003acce : mov eax, 0xffffffff ; ret
0x000000000003b1a0 : mov eax, 0xffffffff ; ret
0x000000000003b210 : mov eax, 0xffffffff ; ret
0x0000000000047a31 : mov eax, 0xffffffff ; ret
0x0000000000052ce6 : mov eax, 0xffffffff ; ret
0x000000000006dda9 : mov eax, 0xffffffff ; ret
0x000000000006f927 : mov eax, 0xffffffff ; ret
0x0000000000072070 : mov eax, 0xffffffff ; ret
0x0000000000072230 : mov eax, 0xffffffff ; ret
0x0000000000072e8e : mov eax, 0xffffffff ; ret
0x000000000007323a : mov eax, 0xffffffff ; ret
0x0000000000073ca3 : mov eax, 0xffffffff ; ret
0x0000000000074653 : mov eax, 0xffffffff ; ret
0x00000000000748ba : mov eax, 0xffffffff ; ret
0x0000000000074f58 : mov eax, 0xffffffff ; ret
0x0000000000075af6 : mov eax, 0xffffffff ; ret
0x000000000007781e : mov eax, 0xffffffff ; ret
0x000000000007786e : mov eax, 0xffffffff ; ret
0x0000000000077b9e : mov eax, 0xffffffff ; ret
0x000000000007835f : mov eax, 0xffffffff ; ret
0x00000000000791c3 : mov eax, 0xffffffff ; ret
0x000000000007a6d3 : mov eax, 0xffffffff ; ret
0x000000000007a8e3 : mov eax, 0xffffffff ; ret
0x000000000007b5f0 : mov eax, 0xffffffff ; ret
0x000000000007bf41 : mov eax, 0xffffffff ; ret
0x000000000007c899 : mov eax, 0xffffffff ; ret
0x000000000007cab1 : mov eax, 0xffffffff ; ret
0x000000000007cac0 : mov eax, 0xffffffff ; ret
0x000000000007cad1 : mov eax, 0xffffffff ; ret
0x000000000007caf0 : mov eax, 0xffffffff ; ret
0x000000000007cc70 : mov eax, 0xffffffff ; ret
0x000000000007cf90 : mov eax, 0xffffffff ; ret
0x00000000000886b0 : mov eax, 0xffffffff ; ret
0x0000000000088748 : mov eax, 0xffffffff ; ret
0x00000000000acb18 : mov eax, 0xffffffff ; ret
0x00000000000acd50 : mov eax, 0xffffffff ; ret
0x00000000000bc454 : mov eax, 0xffffffff ; ret
0x00000000000bf69e : mov eax, 0xffffffff ; ret
0x00000000000c840e : mov eax, 0xffffffff ; ret
0x00000000000c8d01 : mov eax, 0xffffffff ; ret
0x00000000000c966c : mov eax, 0xffffffff ; ret
0x00000000000cacfe : mov eax, 0xffffffff ; ret
0x00000000000cbffc : mov eax, 0xffffffff ; ret
0x00000000000cc094 : mov eax, 0xffffffff ; ret
0x00000000000cc184 : mov eax, 0xffffffff ; ret
0x00000000000cc84e : mov eax, 0xffffffff ; ret
0x00000000000ccdd6 : mov eax, 0xffffffff ; ret
0x00000000000cd2dc : mov eax, 0xffffffff ; ret
0x00000000000cd34c : mov eax, 0xffffffff ; ret
0x00000000000cd59c : mov eax, 0xffffffff ; ret
0x00000000000cd61c : mov eax, 0xffffffff ; ret
0x00000000000cea3e : mov eax, 0xffffffff ; ret
0x00000000000ea946 : mov eax, 0xffffffff ; ret
0x00000000000ea99c : mov eax, 0xffffffff ; ret
0x00000000000f6bfc : mov eax, 0xffffffff ; ret
0x00000000000f6c16 : mov eax, 0xffffffff ; ret
0x00000000000f6c4c : mov eax, 0xffffffff ; ret
0x00000000000f6c66 : mov eax, 0xffffffff ; ret
0x00000000000f6c9c : mov eax, 0xffffffff ; ret
0x00000000000f6cb6 : mov eax, 0xffffffff ; ret
0x00000000000f6cfc : mov eax, 0xffffffff ; ret
0x00000000000f6d16 : mov eax, 0xffffffff ; ret
0x00000000000f6d5c : mov eax, 0xffffffff ; ret
0x00000000000f6d76 : mov eax, 0xffffffff ; ret
0x00000000000f6db4 : mov eax, 0xffffffff ; ret
0x00000000000f6dce : mov eax, 0xffffffff ; ret
0x00000000000f6f4e : mov eax, 0xffffffff ; ret
0x00000000000f6f94 : mov eax, 0xffffffff ; ret
0x00000000000f6fae : mov eax, 0xffffffff ; ret
0x00000000000f6fc6 : mov eax, 0xffffffff ; ret
0x00000000000f768c : mov eax, 0xffffffff ; ret
0x00000000000f9a3e : mov eax, 0xffffffff ; ret
0x00000000000f9ade : mov eax, 0xffffffff ; ret
0x00000000000fbaec : mov eax, 0xffffffff ; ret
0x00000000000fbb00 : mov eax, 0xffffffff ; ret
0x00000000000fbb3c : mov eax, 0xffffffff ; ret
0x00000000000fbb56 : mov eax, 0xffffffff ; ret
0x00000000000fc294 : mov eax, 0xffffffff ; ret
0x00000000000fc37e : mov eax, 0xffffffff ; ret
0x00000000000fc3de : mov eax, 0xffffffff ; ret
0x00000000000fc7bc : mov eax, 0xffffffff ; ret
0x00000000000fcd4c : mov eax, 0xffffffff ; ret
0x00000000000fce6e : mov eax, 0xffffffff ; ret
0x00000000000fcf2f : mov eax, 0xffffffff ; ret
0x00000000000fd065 : mov eax, 0xffffffff ; ret
0x00000000000fd115 : mov eax, 0xffffffff ; ret
0x00000000000fd1bc : mov eax, 0xffffffff ; ret
0x00000000000fd22c : mov eax, 0xffffffff ; ret
0x00000000000fd2ac : mov eax, 0xffffffff ; ret
0x00000000000fd35c : mov eax, 0xffffffff ; ret
0x00000000000fd8ac : mov eax, 0xffffffff ; ret
0x00000000000fdbae : mov eax, 0xffffffff ; ret
0x00000000000fdcce : mov eax, 0xffffffff ; ret
0x00000000000fdcfe : mov eax, 0xffffffff ; ret
0x00000000000fddb6 : mov eax, 0xffffffff ; ret
0x00000000000fddd6 : mov eax, 0xffffffff ; ret
0x00000000000fde6d : mov eax, 0xffffffff ; ret
0x00000000000fefd4 : mov eax, 0xffffffff ; ret
0x00000000000ff064 : mov eax, 0xffffffff ; ret
0x00000000000ff086 : mov eax, 0xffffffff ; ret
0x00000000000ff104 : mov eax, 0xffffffff ; ret
0x00000000000ff126 : mov eax, 0xffffffff ; ret
0x00000000000ff15c : mov eax, 0xffffffff ; ret
0x00000000000ff1e6 : mov eax, 0xffffffff ; ret
0x00000000000ff203 : mov eax, 0xffffffff ; ret
0x0000000000101d38 : mov eax, 0xffffffff ; ret
0x00000000001056dc : mov eax, 0xffffffff ; ret
0x00000000001056f6 : mov eax, 0xffffffff ; ret
0x000000000010739c : mov eax, 0xffffffff ; ret
0x00000000001075dc : mov eax, 0xffffffff ; ret
0x000000000010768c : mov eax, 0xffffffff ; ret
0x00000000001076cc : mov eax, 0xffffffff ; ret
0x000000000010807f : mov eax, 0xffffffff ; ret
0x000000000010827d : mov eax, 0xffffffff ; ret
0x00000000001083fd : mov eax, 0xffffffff ; ret
0x000000000010888c : mov eax, 0xffffffff ; ret
0x0000000000108934 : mov eax, 0xffffffff ; ret
0x00000000001089e4 : mov eax, 0xffffffff ; ret
0x0000000000115844 : mov eax, 0xffffffff ; ret
0x0000000000115906 : mov eax, 0xffffffff ; ret
0x000000000011591e : mov eax, 0xffffffff ; ret
0x00000000001175bd : mov eax, 0xffffffff ; ret
0x000000000011766d : mov eax, 0xffffffff ; ret
0x00000000001186f6 : mov eax, 0xffffffff ; ret
0x00000000001234e0 : mov eax, 0xffffffff ; ret
0x00000000001235d0 : mov eax, 0xffffffff ; ret
0x0000000000123c20 : mov eax, 0xffffffff ; ret
0x0000000000123eca : mov eax, 0xffffffff ; ret
0x0000000000123f42 : mov eax, 0xffffffff ; ret
0x0000000000124090 : mov eax, 0xffffffff ; ret
0x0000000000124140 : mov eax, 0xffffffff ; ret
0x0000000000124168 : mov eax, 0xffffffff ; ret
0x000000000013cc20 : mov eax, 0xffffffff ; ret
0x000000000013dd68 : mov eax, 0xffffffff ; ret
0x00000000001402b9 : mov eax, 0xffffffff ; ret
0x00000000001402b9 : mov eax, 0xffffffff ; ret
0x000000000014067e : mov eax, 0xffffffff ; ret
0x00000000001406ce : mov eax, 0xffffffff ; ret
0x000000000014071e : mov eax, 0xffffffff ; ret
0x000000000014073e : mov eax, 0xffffffff ; ret
0x0000000000140c76 : mov eax, 0xffffffff ; ret
0x0000000000140c7c : mov eax, 0xffffffff ; ret
0x0000000000140cde : mov eax, 0xffffffff ; ret
0x00000000001412d5 : mov eax, 0xffffffff ; ret
0x00000000001428e6 : mov eax, 0xffffffff ; ret
0x0000000000143ebe : mov eax, 0xffffffff ; ret
0x00000000000fde9f : mov eax, 1 ; add rsp, 8 ; ret
0x00000000000fe64e : mov eax, 1 ; add rsp, 8 ; ret
0x00000000000ff795 : mov eax, 1 ; add rsp, 8 ; ret
0x00000000000ff7c5 : mov eax, 1 ; add rsp, 8 ; ret
0x000000000014161e : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000172930 : mov eax, 1 ; jg 0x172949 ; neg eax ; ret
0x00000000000abc60 : mov eax, 1 ; jg 0xabc72 ; neg eax ; ret
0x0000000000170886 : mov eax, 1 ; jl 0x170899 ; neg eax ; ret
0x00000000000cdbf2 : mov eax, 1 ; js 0xcdc08 ; ret
0x000000000004a09d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000d9806 : mov eax, 1 ; mov rdx, r8 ; jmp 0xd9821
0x0000000000070b6d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000782ef : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000891f5 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000892aa : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000012e1be : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000007ba62 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089858 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c3a : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c6a : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cd1c : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e8b5 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012edd5 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001330d1 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000133add : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000137ceb : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139218 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ea60 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000013052f : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000013a936 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000013b143 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000013bef4 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000013bf3a : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000012b050 : mov eax, 1 ; pop rbx ; ret
0x000000000012eb7b : mov eax, 1 ; pop rbx ; ret
0x000000000012ebfb : mov eax, 1 ; pop rbx ; ret
0x000000000013a9da : mov eax, 1 ; pop rbx ; ret
0x000000000013aa4a : mov eax, 1 ; pop rbx ; ret
0x000000000013aafa : mov eax, 1 ; pop rbx ; ret
0x000000000013ae5b : mov eax, 1 ; pop rbx ; ret
0x000000000013aecb : mov eax, 1 ; pop rbx ; ret
0x000000000013b040 : mov eax, 1 ; pop rbx ; ret
0x000000000013b0aa : mov eax, 1 ; pop rbx ; ret
0x000000000013bbeb : mov eax, 1 ; pop rbx ; ret
0x000000000013bc5b : mov eax, 1 ; pop rbx ; ret
0x000000000013bcca : mov eax, 1 ; pop rbx ; ret
0x000000000013bd3a : mov eax, 1 ; pop rbx ; ret
0x0000000000144332 : mov eax, 1 ; pop rbx ; ret
0x0000000000048063 : mov eax, 1 ; ret
0x00000000000481fb : mov eax, 1 ; ret
0x000000000004a081 : mov eax, 1 ; ret
0x000000000004a0b6 : mov eax, 1 ; ret
0x000000000004a109 : mov eax, 1 ; ret
0x000000000004a141 : mov eax, 1 ; ret
0x0000000000055769 : mov eax, 1 ; ret
0x00000000000773f0 : mov eax, 1 ; ret
0x00000000000895d8 : mov eax, 1 ; ret
0x000000000008b45b : mov eax, 1 ; ret
0x00000000000abf71 : mov eax, 1 ; ret
0x00000000000acd70 : mov eax, 1 ; ret
0x00000000000ada9d : mov eax, 1 ; ret
0x00000000000cdb7b : mov eax, 1 ; ret
0x00000000000cdbd0 : mov eax, 1 ; ret
0x00000000000cdbe6 : mov eax, 1 ; ret
0x00000000000cea38 : mov eax, 1 ; ret
0x00000000000d163a : mov eax, 1 ; ret
0x00000000000d164a : mov eax, 1 ; ret
0x00000000000d1710 : mov eax, 1 ; ret
0x00000000000d1728 : mov eax, 1 ; ret
0x00000000000d5905 : mov eax, 1 ; ret
0x00000000000d5934 : mov eax, 1 ; ret
0x00000000000d5944 : mov eax, 1 ; ret
0x00000000000d5963 : mov eax, 1 ; ret
0x00000000000d5974 : mov eax, 1 ; ret
0x00000000000d59bb : mov eax, 1 ; ret
0x00000000000fb5be : mov eax, 1 ; ret
0x00000000000fe660 : mov eax, 1 ; ret
0x00000000000ff810 : mov eax, 1 ; ret
0x000000000010e9cd : mov eax, 1 ; ret
0x0000000000110c10 : mov eax, 1 ; ret
0x0000000000114aba : mov eax, 1 ; ret
0x000000000012b000 : mov eax, 1 ; ret
0x000000000012b060 : mov eax, 1 ; ret
0x000000000012b7b0 : mov eax, 1 ; ret
0x00000000001322fb : mov eax, 1 ; ret
0x0000000000132317 : mov eax, 1 ; ret
0x00000000001323b3 : mov eax, 1 ; ret
0x00000000001323c4 : mov eax, 1 ; ret
0x00000000001323d7 : mov eax, 1 ; ret
0x00000000001323e7 : mov eax, 1 ; ret
0x00000000001323fd : mov eax, 1 ; ret
0x0000000000132416 : mov eax, 1 ; ret
0x000000000013242d : mov eax, 1 ; ret
0x0000000000132443 : mov eax, 1 ; ret
0x000000000013245d : mov eax, 1 ; ret
0x0000000000134215 : mov eax, 1 ; ret
0x0000000000135068 : mov eax, 1 ; ret
0x0000000000135086 : mov eax, 1 ; ret
0x00000000001350c4 : mov eax, 1 ; ret
0x00000000001350d7 : mov eax, 1 ; ret
0x00000000001350e7 : mov eax, 1 ; ret
0x00000000001350fa : mov eax, 1 ; ret
0x000000000013510b : mov eax, 1 ; ret
0x0000000000135122 : mov eax, 1 ; ret
0x0000000000135138 : mov eax, 1 ; ret
0x000000000013514a : mov eax, 1 ; ret
0x00000000001358bf : mov eax, 1 ; ret
0x00000000001358d7 : mov eax, 1 ; ret
0x000000000013591f : mov eax, 1 ; ret
0x0000000000135944 : mov eax, 1 ; ret
0x0000000000135957 : mov eax, 1 ; ret
0x0000000000135967 : mov eax, 1 ; ret
0x0000000000135980 : mov eax, 1 ; ret
0x00000000001359a1 : mov eax, 1 ; ret
0x00000000001359c1 : mov eax, 1 ; ret
0x00000000001359df : mov eax, 1 ; ret
0x00000000001359f9 : mov eax, 1 ; ret
0x000000000013a8a4 : mov eax, 1 ; ret
0x000000000013a990 : mov eax, 1 ; ret
0x000000000013b120 : mov eax, 1 ; ret
0x000000000013bdc7 : mov eax, 1 ; ret
0x000000000013be23 : mov eax, 1 ; ret
0x000000000013be52 : mov eax, 1 ; ret
0x000000000013be84 : mov eax, 1 ; ret
0x000000000013beb5 : mov eax, 1 ; ret
0x000000000013c153 : mov eax, 1 ; ret
0x000000000013c194 : mov eax, 1 ; ret
0x000000000013c244 : mov eax, 1 ; ret
0x000000000013c484 : mov eax, 1 ; ret
0x000000000013c4c4 : mov eax, 1 ; ret
0x00000000001434f6 : mov eax, 1 ; ret
0x00000000000abf81 : mov eax, 2 ; ret
0x00000000000adaa3 : mov eax, 2 ; ret
0x00000000000d599b : mov eax, 2 ; ret
0x00000000000d59d1 : mov eax, 2 ; ret
0x00000000000d59e4 : mov eax, 2 ; ret
0x00000000000d8e40 : mov eax, 2 ; ret
0x00000000000e84f9 : mov eax, 2 ; ret
0x000000000012dda5 : mov eax, 2 ; ret
0x000000000012e090 : mov eax, 2 ; ret
0x000000000012e0a0 : mov eax, 2 ; ret
0x0000000000132db0 : mov eax, 2 ; ret
0x0000000000138f30 : mov eax, 2 ; ret
0x0000000000139650 : mov eax, 2 ; ret
0x0000000000115806 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000abf91 : mov eax, 3 ; ret
0x00000000000d95bf : mov eax, 3 ; ret
0x00000000000fdb22 : mov eax, 3 ; syscall ; mov eax, edx ; ret
0x0000000000122193 : mov eax, 3 ; syscall ; ret
0x00000000000abfa1 : mov eax, 4 ; ret
0x00000000000d95b9 : mov eax, 4 ; ret
0x00000000000efcbc : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000001063df : mov eax, 5 ; pop rbx ; pop rbp ; ret
0x00000000000abfb1 : mov eax, 5 ; ret
0x00000000000d95b3 : mov eax, 5 ; ret
0x00000000000abfc1 : mov eax, 6 ; ret
0x00000000000d919d : mov eax, 6 ; ret
0x0000000000112fac : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000abfd1 : mov eax, 7 ; ret
0x0000000000113305 : mov eax, 7 ; ret
0x00000000000aac98 : mov eax, 8 ; pop rbx ; ret
0x00000000000f5d67 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114958 : mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000033e8a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000106279 : mov eax, dword ptr [rax + 0x110] ; ret
0x000000000014351f : mov eax, dword ptr [rax + 0x130] ; jmp rax
0x0000000000143550 : mov eax, dword ptr [rax + 0x130] ; jmp rax
0x0000000000109c20 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000071fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000001099d0 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000128777 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128787 ; ret
0x00000000000fd3d8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfd3eb ; ret
0x0000000000072222 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000746b3 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007b2a4 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007206a : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000007b3f4 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000001149d9 : mov eax, dword ptr [rax + 0x30] ; ret
0x000000000010a347 : mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000105fcc : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000105fcc : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000007b708 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x000000000013bb4d : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x000000000013bb8d : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000134fb4 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb71 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000007ba0c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000013bb5d : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000013bb9d : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000074f74 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000135854 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003a726 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003a7f6 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003a89f : mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000106271 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002cb6e : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000013aab5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x0000000000106269 : mov eax, dword ptr [rax + 8] ; ret
0x00000000000895cb : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x895c9 ; ret
0x000000000002def5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002df15 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e0b7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000108a75 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002da1f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002da68 : mov eax, dword ptr [rax + rdx] ; ret
0x000000000002dab3 : mov eax, dword ptr [rax + rdx] ; ret
0x000000000010acd4 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b544 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002b01f : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2b031 ; call rax
0x000000000019703d : mov eax, dword ptr [rax] ; add byte ptr [rbp + rcx*2 - 0x16], ah ; call rsp
0x000000000013aaaa : mov eax, dword ptr [rax] ; jmp rax
0x000000000002cb6c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002decc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010a5c3 : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000003a723 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003a7f3 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001289f9 : mov eax, dword ptr [rax] ; ret
0x000000000007e06f : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7e07f ; call rax
0x0000000000085566 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x85576 ; call rax
0x000000000006960d : mov eax, dword ptr [rbp - 0x448] ; jmp 0x65865
0x00000000001031dc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000222c1 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000077491 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000113dd0 : mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000001fc03 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e771 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013823a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x138250 ; pop rbx ; ret
0x00000000000a2b19 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a54e9 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000166d24 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000166d36 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000166d46 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000a2b9d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a556d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000166d56 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2bbd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a558d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000166d66 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000016e406 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000146cea : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001488f3 : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014ab7a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014c253 : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001485c2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014a587 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014bf92 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014d937 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000033e8b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000016b030 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000001323c0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001350c0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a2ac5 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000a5495 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000166cf0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016e3e0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016af81 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000166c51 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000168fdc : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016e3af : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016e3f1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016b001 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a2a96 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000a5466 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000166cd1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000072e6f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000072e84 : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007c860 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007c888 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007c893 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000115190 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x1151a8 ; ret
0x00000000000cc57d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcc592 ; call rax
0x000000000013c1e3 : mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000013bd81 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d8ce : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000c8851 : mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000173f78 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x173f8f ; call rax
0x00000000000abbe0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabc68 ; ret
0x00000000000abbf5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabc68 ; ret
0x000000000012d927 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013c160 : mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000774d1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000abc00 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabc68 ; ret
0x00000000000abc1b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabc68 ; ret
0x00000000000abc30 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabc68 ; ret
0x00000000000abc45 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabc68 ; ret
0x00000000000abc50 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabc68 ; ret
0x000000000012d95f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f71 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d7240 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000007cb31 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000075ad8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x75af0 ; ret
0x00000000000f5f60 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fc310 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000fc326 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000013b239 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b379 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e711 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9c1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aa31 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aae1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae41 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aeb1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af61 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013afe1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b021 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b091 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013bb49 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb89 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb59 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013bb99 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013aab1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013aaa6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00000000001389d9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013ab91 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ac51 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ad11 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013add1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c4a7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000ac61d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac5f9 ; ret
0x0000000000077430 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000077400 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000135940 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007c84f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000001151a5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000c8960 : mov eax, dword ptr [rdi] ; ret
0x0000000000077f00 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000077f10 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000133044 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133056 ; ret
0x0000000000133043 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133057 ; ret
0x00000000001391a4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1391b6 ; ret
0x00000000001391a3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1391b7 ; ret
0x00000000000ac6d8 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac6d8 ; xor eax, eax ; ret
0x000000000002de83 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002deb3 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000aad77 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaad69 ; ret
0x0000000000091c76 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000091c90 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000009436b : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000094390 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001485f6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000148610 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014a5bb : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014a5e0 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014bfc6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014bfe0 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d96b : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d990 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000163096 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001630b0 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001655eb : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000165610 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012ddb8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000012ddb8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000074630 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e7af8 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000072167 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705cc : mov eax, dword ptr [rdx] ; ret
0x0000000000070753 : mov eax, dword ptr [rdx] ; ret
0x0000000000073030 : mov eax, dword ptr [rdx] ; ret
0x0000000000073b70 : mov eax, dword ptr [rdx] ; ret
0x0000000000074600 : mov eax, dword ptr [rdx] ; ret
0x000000000007c841 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c840 ; ret
0x0000000000140f24 : mov eax, dword ptr [rip + 0x2844e6] ; call qword ptr [rax]
0x0000000000140911 : mov eax, dword ptr [rip + 0x284af9] ; call qword ptr [rax]
0x0000000000120fd1 : mov eax, dword ptr [rip + 0x2a48a1] ; ret
0x000000000010a341 : mov eax, dword ptr [rip + 0x2b9b29] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008410f : mov eax, dword ptr [rip + 0x33fdcb] ; mov qword ptr [rax], rdi ; ret
0x0000000000081a85 : mov eax, dword ptr [rip + 0x342345] ; xor edi, edi ; call qword ptr [rax]
0x0000000000081860 : mov eax, dword ptr [rip + 0x34256a] ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007cb11 : mov eax, dword ptr [rip + 0x348a09] ; ret
0x0000000000036880 : mov eax, dword ptr [rip + 0x38d802] ; ret
0x0000000000036870 : mov eax, dword ptr [rip + 0x38d816] ; ret
0x000000000002d9cc : mov eax, dword ptr [rip + 0x39641e] ; mov qword ptr [rax], rdx ; ret
0x0000000000029c91 : mov eax, dword ptr [rip + 0x39bc59] ; ret
0x0000000000021a51 : mov eax, dword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a41 : mov eax, dword ptr [rip + 0x3a78d9] ; ret
0x0000000000114959 : mov eax, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000112850 : mov eax, dword ptr [rsi + 0x38] ; jmp 0x112652
0x000000000002e0b1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb49 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000010e0fb : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000720a7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000072290 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000c8b0e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000000c92b4 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000001430de : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002082a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000025f34 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000102e34 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000f0037 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf0079
0x000000000002436a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000024d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000025113 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000026cad : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000027c01 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000038fe7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000112b95 : mov eax, dword ptr [rsp + 0x38] ; jmp 0x112b63
0x0000000000035839 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cc042 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc7ff : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f6ae8 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000fc749 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000010884a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000001437ce : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000ba004 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000141176 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001411d6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b039 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b066 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b089 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b0b6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000006de36 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000001024c6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000140d1f : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000cc39a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcc3ae ; call rax
0x00000000000fde50 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000cc270 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000133758 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a3a3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a404 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000008308d : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000123df4 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000210b1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000210b1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000fc4dd : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc5cd : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c90 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fc598 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a807 : mov eax, eax ; pop rbx ; ret
0x0000000000070ff0 : mov eax, eax ; pop rbx ; ret
0x0000000000071038 : mov eax, eax ; pop rbx ; ret
0x0000000000082f15 : mov eax, eax ; pop rbx ; ret
0x00000000000504ba : mov eax, eax ; ret
0x000000000007df37 : mov eax, eax ; ret
0x00000000000aacdd : mov eax, eax ; ret
0x00000000000aacf6 : mov eax, eax ; ret
0x0000000000123de7 : mov eax, eax ; ret
0x0000000000123e2c : mov eax, eax ; ret
0x000000000014dc55 : mov eax, eax ; ret
0x000000000014e136 : mov eax, eax ; ret
0x000000000014e4d6 : mov eax, eax ; ret
0x000000000007912a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d900 : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012a2aa : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000006e7db : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bcc69 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000129573 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012962b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006eff9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070e59 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000717cc : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000769c6 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e2b5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006efcc : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000701e3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070201 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070e2c : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077931 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c43d : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f4af : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efb13 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117067 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001170bc : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001173fe : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117481 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117845 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011851e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001185a4 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000132915 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001354ad : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000139295 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001426b6 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006d363 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006db96 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dc08 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ee78 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006eec8 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070836 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000708ab : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f822e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ebc2 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000500e2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000050166 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000005019b : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000501ba : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007033b : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000070390 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000749b6 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000009ed81 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000133037 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000139197 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000048433 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000004a013 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000079a9d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137d61 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e77 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac2c0 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb6f0 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012403b : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9124 : mov eax, ebx ; call rax
0x0000000000096149 : mov eax, ebx ; jmp 0x95fa3
0x0000000000105e2f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a836 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a85c : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a8de : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000757dc : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000076418 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f3ca : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b9ef0 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c2d : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c62 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c99 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e834b : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e8370 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f749f : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ce81 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ce9c : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dfea : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f77a : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f7da : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077c8b : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a363 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d39a : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094f8a : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abce2 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac676 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9e1e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcecc : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcefe : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001015e2 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103159 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d3ed : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127ab4 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127af4 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326ab : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000035971 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000006abd0 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000006abe2 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000070440 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000077d3c : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000094e98 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000096c10 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000096c27 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000ff6e1 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003aaaf : mov eax, ebx ; pop rbx ; ret
0x000000000004705b : mov eax, ebx ; pop rbx ; ret
0x0000000000047068 : mov eax, ebx ; pop rbx ; ret
0x0000000000047075 : mov eax, ebx ; pop rbx ; ret
0x000000000006acc4 : mov eax, ebx ; pop rbx ; ret
0x000000000007845b : mov eax, ebx ; pop rbx ; ret
0x00000000000844e3 : mov eax, ebx ; pop rbx ; ret
0x0000000000088507 : mov eax, ebx ; pop rbx ; ret
0x0000000000088520 : mov eax, ebx ; pop rbx ; ret
0x00000000000ac21b : mov eax, ebx ; pop rbx ; ret
0x00000000000ac256 : mov eax, ebx ; pop rbx ; ret
0x00000000000aca3b : mov eax, ebx ; pop rbx ; ret
0x00000000000fc708 : mov eax, ebx ; pop rbx ; ret
0x00000000000fc725 : mov eax, ebx ; pop rbx ; ret
0x00000000000fca43 : mov eax, ebx ; pop rbx ; ret
0x00000000000fca7e : mov eax, ebx ; pop rbx ; ret
0x00000000000fca9a : mov eax, ebx ; pop rbx ; ret
0x00000000000fcae3 : mov eax, ebx ; pop rbx ; ret
0x00000000000fdc6a : mov eax, ebx ; pop rbx ; ret
0x0000000000101a64 : mov eax, ebx ; pop rbx ; ret
0x0000000000105e70 : mov eax, ebx ; pop rbx ; ret
0x00000000001407e2 : mov eax, ebx ; pop rbx ; ret
0x0000000000101ffa : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001194a9 : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000011d172 : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000482f7 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000049ed7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000003a68c : mov eax, ecx ; or rax, rdx ; ret
0x0000000000087a5d : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005b774 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033ea7 : mov eax, ecx ; ret
0x0000000000033eb1 : mov eax, ecx ; ret
0x0000000000082422 : mov eax, ecx ; ret
0x0000000000140578 : mov eax, ecx ; ret
0x0000000000045a22 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x0000000000116471 : mov eax, edi ; add rsp, 8 ; ret
0x0000000000116577 : mov eax, edi ; add rsp, 8 ; ret
0x0000000000117b01 : mov eax, edi ; add rsp, 8 ; ret
0x0000000000117bb9 : mov eax, edi ; add rsp, 8 ; ret
0x000000000002df20 : mov eax, edi ; and eax, 0x7f ; ret
0x00000000001193b6 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000119390 : mov eax, edi ; bswap eax ; ret
0x000000000003a6a1 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000003a6b1 : mov eax, edi ; cqo ; idiv rsi ; ret
0x0000000000096e84 : mov eax, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000ff2c7 : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009ea17 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000002121b : mov eax, edi ; neg eax ; ret
0x000000000009f515 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009735a : mov eax, edi ; pop rbx ; ret
0x000000000002122e : mov eax, edi ; ret
0x000000000004a60e : mov eax, edi ; ret
0x0000000000070158 : mov eax, edi ; ret
0x00000000000710d3 : mov eax, edi ; ret
0x000000000007cb41 : mov eax, edi ; ret
0x0000000000089a79 : mov eax, edi ; ret
0x000000000008b279 : mov eax, edi ; ret
0x000000000008f42c : mov eax, edi ; ret
0x000000000008f4da : mov eax, edi ; ret
0x000000000008f516 : mov eax, edi ; ret
0x000000000008f700 : mov eax, edi ; ret
0x000000000008f7ff : mov eax, edi ; ret
0x00000000000963d1 : mov eax, edi ; ret
0x000000000009e8e9 : mov eax, edi ; ret
0x000000000009e903 : mov eax, edi ; ret
0x000000000009e918 : mov eax, edi ; ret
0x000000000009e929 : mov eax, edi ; ret
0x000000000009e93c : mov eax, edi ; ret
0x000000000009e94c : mov eax, edi ; ret
0x000000000009e95f : mov eax, edi ; ret
0x000000000009e97d : mov eax, edi ; ret
0x000000000009e9a7 : mov eax, edi ; ret
0x000000000009e9b7 : mov eax, edi ; ret
0x000000000009e9c4 : mov eax, edi ; ret
0x000000000009e9d4 : mov eax, edi ; ret
0x000000000009e9e8 : mov eax, edi ; ret
0x000000000009e9f3 : mov eax, edi ; ret
0x000000000009ea07 : mov eax, edi ; ret
0x000000000009ea44 : mov eax, edi ; ret
0x000000000009ec71 : mov eax, edi ; ret
0x000000000009ecd1 : mov eax, edi ; ret
0x000000000009f85f : mov eax, edi ; ret
0x00000000000a2a1b : mov eax, edi ; ret
0x00000000000a2a72 : mov eax, edi ; ret
0x00000000000a2a8a : mov eax, edi ; ret
0x00000000000a2a9c : mov eax, edi ; ret
0x00000000000a2ab2 : mov eax, edi ; ret
0x00000000000a2aca : mov eax, edi ; ret
0x00000000000a2ae0 : mov eax, edi ; ret
0x00000000000a2b02 : mov eax, edi ; ret
0x00000000000a2b20 : mov eax, edi ; ret
0x00000000000a2b3e : mov eax, edi ; ret
0x00000000000a2b64 : mov eax, edi ; ret
0x00000000000a2b86 : mov eax, edi ; ret
0x00000000000a2ba4 : mov eax, edi ; ret
0x00000000000a2bc4 : mov eax, edi ; ret
0x00000000000a2be8 : mov eax, edi ; ret
0x00000000000a2c08 : mov eax, edi ; ret
0x00000000000a2c28 : mov eax, edi ; ret
0x00000000000a2c48 : mov eax, edi ; ret
0x00000000000a53eb : mov eax, edi ; ret
0x00000000000a5442 : mov eax, edi ; ret
0x00000000000a545a : mov eax, edi ; ret
0x00000000000a546c : mov eax, edi ; ret
0x00000000000a5482 : mov eax, edi ; ret
0x00000000000a549a : mov eax, edi ; ret
0x00000000000a54b0 : mov eax, edi ; ret
0x00000000000a54d2 : mov eax, edi ; ret
0x00000000000a54f0 : mov eax, edi ; ret
0x00000000000a550e : mov eax, edi ; ret
0x00000000000a5534 : mov eax, edi ; ret
0x00000000000a5556 : mov eax, edi ; ret
0x00000000000a5574 : mov eax, edi ; ret
0x00000000000a5594 : mov eax, edi ; ret
0x00000000000a55b8 : mov eax, edi ; ret
0x00000000000a55d8 : mov eax, edi ; ret
0x00000000000a55f8 : mov eax, edi ; ret
0x00000000000a5618 : mov eax, edi ; ret
0x00000000000a56d5 : mov eax, edi ; ret
0x00000000000a5778 : mov eax, edi ; ret
0x00000000000a57f4 : mov eax, edi ; ret
0x00000000000a585e : mov eax, edi ; ret
0x00000000000a5871 : mov eax, edi ; ret
0x00000000000a5910 : mov eax, edi ; ret
0x00000000000a59c3 : mov eax, edi ; ret
0x00000000000a6fd1 : mov eax, edi ; ret
0x00000000000a8141 : mov eax, edi ; ret
0x00000000000a87e1 : mov eax, edi ; ret
0x00000000000aa218 : mov eax, edi ; ret
0x00000000000ac73b : mov eax, edi ; ret
0x00000000000ac831 : mov eax, edi ; ret
0x00000000000acc1e : mov eax, edi ; ret
0x00000000000fd30e : mov eax, edi ; ret
0x00000000000fd3be : mov eax, edi ; ret
0x000000000010adb0 : mov eax, edi ; ret
0x000000000010b610 : mov eax, edi ; ret
0x00000000001179c1 : mov eax, edi ; ret
0x0000000000166c57 : mov eax, edi ; ret
0x0000000000166caf : mov eax, edi ; ret
0x0000000000166cc5 : mov eax, edi ; ret
0x0000000000166cd7 : mov eax, edi ; ret
0x0000000000166ced : mov eax, edi ; ret
0x0000000000166cf5 : mov eax, edi ; ret
0x0000000000166d0b : mov eax, edi ; ret
0x0000000000166d1d : mov eax, edi ; ret
0x0000000000166d2b : mov eax, edi ; ret
0x0000000000166d3d : mov eax, edi ; ret
0x0000000000166d4d : mov eax, edi ; ret
0x0000000000166d5d : mov eax, edi ; ret
0x0000000000166d6d : mov eax, edi ; ret
0x0000000000166d7f : mov eax, edi ; ret
0x0000000000166d9f : mov eax, edi ; ret
0x0000000000166dbf : mov eax, edi ; ret
0x0000000000168f47 : mov eax, edi ; ret
0x0000000000168fe2 : mov eax, edi ; ret
0x000000000016e3b5 : mov eax, edi ; ret
0x000000000016e3d4 : mov eax, edi ; ret
0x000000000016e3e5 : mov eax, edi ; ret
0x000000000016e3f7 : mov eax, edi ; ret
0x000000000016e40d : mov eax, edi ; ret
0x000000000016e41f : mov eax, edi ; ret
0x00000000001193a0 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003a632 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000011909a : mov eax, edi ; sar rax, 6 ; ret
0x0000000000119436 : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000bb888 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000fdd57 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000841ed : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085901 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d725 : mov eax, edx ; add rsp, 8 ; ret
0x00000000000bfe1c : mov eax, edx ; add rsp, 8 ; ret
0x000000000010cfbd : mov eax, edx ; add rsp, 8 ; ret
0x0000000000141001 : mov eax, edx ; add rsp, 8 ; ret
0x000000000014109d : mov eax, edx ; add rsp, 8 ; ret
0x00000000001412b1 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000141371 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000110b5c : mov eax, edx ; cmove eax, ecx ; ret
0x0000000000110bd5 : mov eax, edx ; cmove eax, ecx ; ret
0x0000000000097966 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cd1fb : mov eax, edx ; jle 0xcd20d ; ret
0x00000000000c9bdf : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9cbb : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e8295 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e82d3 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000047a12 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006e0db : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006e13a : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070a79 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070ac0 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010c99e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010c9da : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000054b8a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010eb6c : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084ba7 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086730 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045c47 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e3bf : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e40b : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006ff5f : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006ff83 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006ffcd : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000070f08 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000070f53 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007db2c : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007db6f : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000085373 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000f5b55 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000001201b3 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012f34b : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012f3a1 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000490b5 : mov eax, edx ; pop rbx ; ret
0x0000000000054e54 : mov eax, edx ; pop rbx ; ret
0x000000000006d830 : mov eax, edx ; pop rbx ; ret
0x000000000006d877 : mov eax, edx ; pop rbx ; ret
0x000000000006e53c : mov eax, edx ; pop rbx ; ret
0x0000000000070109 : mov eax, edx ; pop rbx ; ret
0x000000000007014f : mov eax, edx ; pop rbx ; ret
0x0000000000071192 : mov eax, edx ; pop rbx ; ret
0x00000000000711df : mov eax, edx ; pop rbx ; ret
0x0000000000071329 : mov eax, edx ; pop rbx ; ret
0x000000000007136f : mov eax, edx ; pop rbx ; ret
0x0000000000071f8a : mov eax, edx ; pop rbx ; ret
0x0000000000075515 : mov eax, edx ; pop rbx ; ret
0x0000000000075b87 : mov eax, edx ; pop rbx ; ret
0x0000000000075bcf : mov eax, edx ; pop rbx ; ret
0x0000000000075f8c : mov eax, edx ; pop rbx ; ret
0x0000000000075fcf : mov eax, edx ; pop rbx ; ret
0x00000000000764d7 : mov eax, edx ; pop rbx ; ret
0x000000000007651f : mov eax, edx ; pop rbx ; ret
0x0000000000076e7c : mov eax, edx ; pop rbx ; ret
0x0000000000076ebf : mov eax, edx ; pop rbx ; ret
0x0000000000076fbc : mov eax, edx ; pop rbx ; ret
0x0000000000078088 : mov eax, edx ; pop rbx ; ret
0x00000000000780cf : mov eax, edx ; pop rbx ; ret
0x00000000000aace1 : mov eax, edx ; pop rbx ; ret
0x00000000000bc60c : mov eax, edx ; pop rbx ; ret
0x00000000000bc66f : mov eax, edx ; pop rbx ; ret
0x000000000011fc9c : mov eax, edx ; pop rbx ; ret
0x000000000013c3e9 : mov eax, edx ; pop rbx ; ret
0x000000000013c42c : mov eax, edx ; pop rbx ; ret
0x00000000000218a5 : mov eax, edx ; ret
0x00000000000368c1 : mov eax, edx ; ret
0x00000000000368d0 : mov eax, edx ; ret
0x00000000000484ca : mov eax, edx ; ret
0x0000000000048b82 : mov eax, edx ; ret
0x00000000000754cc : mov eax, edx ; ret
0x00000000000759a6 : mov eax, edx ; ret
0x00000000000759b6 : mov eax, edx ; ret
0x0000000000075a96 : mov eax, edx ; ret
0x0000000000075aa6 : mov eax, edx ; ret
0x000000000008f969 : mov eax, edx ; ret
0x00000000000ada8e : mov eax, edx ; ret
0x00000000000bfe38 : mov eax, edx ; ret
0x00000000000fd430 : mov eax, edx ; ret
0x00000000000fdb29 : mov eax, edx ; ret
0x000000000010cfcd : mov eax, edx ; ret
0x0000000000168eb1 : mov eax, edx ; ret
0x000000000016d301 : mov eax, edx ; ret
0x0000000000034f01 : mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000d72e3 : mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00000000000c9f7f : mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000cb48f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010c32f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010daaf : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011ab24 : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011b4b4 : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011be45 : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011cd75 : mov eax, esi ; add rsp, 0x48 ; ret
0x00000000001209df : mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000131da5 : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000012e861 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9765 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000caf35 : mov eax, esi ; add rsp, 8 ; ret
0x000000000010b6d5 : mov eax, esi ; add rsp, 8 ; ret
0x000000000010d085 : mov eax, esi ; add rsp, 8 ; ret
0x000000000011a8a2 : mov eax, esi ; add rsp, 8 ; ret
0x000000000011b232 : mov eax, esi ; add rsp, 8 ; ret
0x000000000011bbd5 : mov eax, esi ; add rsp, 8 ; ret
0x000000000011cb05 : mov eax, esi ; add rsp, 8 ; ret
0x0000000000120aa5 : mov eax, esi ; add rsp, 8 ; ret
0x0000000000131845 : mov eax, esi ; add rsp, 8 ; ret
0x000000000004a5be : mov eax, esi ; cmovae rax, rdi ; ret
0x00000000000352e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000119077 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000006fc84 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000116d4f : mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000116d98 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011824f : mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000118298 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000c8503 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fa18 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fa64 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116a11 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116a66 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117f11 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117f66 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1d4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b781 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006d9e4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006da13 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000baa81 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116bea : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116c36 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116ea4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116ef3 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001180ea : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000118136 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001183a4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001183f3 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b633 : mov eax, esi ; pop rbx ; ret
0x000000000006b93d : mov eax, esi ; pop rbx ; ret
0x000000000006ba67 : mov eax, esi ; pop rbx ; ret
0x00000000000704f9 : mov eax, esi ; pop rbx ; ret
0x000000000007053f : mov eax, esi ; pop rbx ; ret
0x000000000007067b : mov eax, esi ; pop rbx ; ret
0x00000000000706bf : mov eax, esi ; pop rbx ; ret
0x00000000000760b0 : mov eax, esi ; pop rbx ; ret
0x00000000000760f7 : mov eax, esi ; pop rbx ; ret
0x00000000000761f2 : mov eax, esi ; pop rbx ; ret
0x000000000007623f : mov eax, esi ; pop rbx ; ret
0x00000000000ba933 : mov eax, esi ; pop rbx ; ret
0x00000000000bac3d : mov eax, esi ; pop rbx ; ret
0x00000000000bad67 : mov eax, esi ; pop rbx ; ret
0x000000000011ce42 : mov eax, esi ; pop rbx ; ret
0x000000000004a6f4 : mov eax, esi ; ret
0x000000000004a778 : mov eax, esi ; ret
0x0000000000172afb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000008f09c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f131 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c47a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c4a4 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006cb8a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006cc0c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000779c7 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a49 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d17a1 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d18a1 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000717cb : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000769c5 : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c43c : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efb12 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000132914 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001354ac : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000139294 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000123df3 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000fc4dc : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc5cc : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c8f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000fc597 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070fef : mov eax, r8d ; pop rbx ; ret
0x0000000000071037 : mov eax, r8d ; pop rbx ; ret
0x00000000000504b9 : mov eax, r8d ; ret
0x0000000000123de6 : mov eax, r8d ; ret
0x0000000000123de5 : mov eax, r8d ; ret
0x0000000000123e2b : mov eax, r8d ; ret
0x0000000000140577 : mov eax, r9d ; ret
0x00000000001a2b0d : mov ebp, 0x41380e0a ; ret
0x00000000000fe569 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000009f0f1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f101 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f0e1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000009f261 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000128072 : mov ebp, 0x89480029 ; ret 0x1be
0x000000000013c533 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000187cd5 : mov ebp, 0xbfd8fffd ; std ; lcall ptr [rax] ; ret 0xfffd
0x000000000017d404 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x0000000000195351 : mov ebp, 0xc180fffb ; sti ; call rax
0x0000000000195350 : mov ebp, 0xc180fffb ; sti ; call rax
0x0000000000181d3d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000009f161 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f141 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f121 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000009f212 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000009f255 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008d458 : mov ebp, 0xf80148c0 ; ret
0x000000000009f027 : mov ebp, 0xf80148c0 ; ret
0x000000000009f0d1 : mov ebp, 0xf80148c0 ; ret
0x000000000009f1af : mov ebp, 0xf80148c0 ; ret
0x000000000008d6dc : mov ebp, 0xf80148c6 ; ret
0x0000000000183e26 : mov ebp, 0xfb67d10d ; ret
0x000000000004dc26 : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004e1b6 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00000000000564af : mov ebp, 0xfffffb58 ; call rax
0x000000000004c389 : mov ebp, 0xfffffb58 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00000000000cf306 : mov ebp, 0xfffffcf8 ; call r12
0x00000000000ebee4 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000ec6f6 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x0000000000134831 : mov ebp, 0xffffff1c ; push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x00000000000ebc51 : mov ebp, 0xffffff78 ; call rbx
0x00000000000ec328 : mov ebp, 0xffffff78 ; call rbx
0x00000000000ec42b : mov ebp, 0xffffff78 ; call rbx
0x00000000000dc60e : mov ebp, cs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000001bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000013302c : mov ebp, eax ; call 0x12f304
0x0000000000102837 : mov ebp, eax ; call rax
0x0000000000065979 : mov ebp, eax ; jmp 0x653d5
0x0000000000138569 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x13857d
0x00000000001031d9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000352ed : mov ebp, ecx ; nop ; jmp rdx
0x000000000011907d : mov ebp, ecx ; nop ; jmp rdx
0x00000000001981a1 : mov ebp, edi ; jmp rsp
0x00000000000aebd8 : mov ebp, edi ; setne dl ; jmp 0xaebec
0x00000000000b14f9 : mov ebp, edi ; setne dl ; jmp 0xb150c
0x00000000000b3cb0 : mov ebp, edi ; setne dl ; jmp 0xb3ccc
0x00000000001035df : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000007d8ad : mov ebp, edx ; call qword ptr [r15]
0x00000000001335b4 : mov ebp, esi ; call 0x1f8a4
0x0000000000173654 : mov ebp, esi ; call 0x1f8ac
0x000000000012a615 : mov ebp, esp ; call r15
0x00000000001159d4 : mov ebp, esp ; pop rbp ; ret
0x00000000001b90c4 : mov ebp, ss ; add dword ptr [rax], eax ; clc ; ret
0x0000000000173d5a : mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x0000000000173d9a : mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x0000000000002d12 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x000000000007d269 : mov ebx, 0x441f0f66 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000058398 : mov ebx, 0x83ffffe5 ; ret
0x0000000000003671 : mov ebx, 0x952a6c41 ; ret
0x00000000000d5b93 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x0000000000188ae5 : mov ebx, 0xaa49fff3 ; call rsp
0x00000000001150f4 : mov ebx, 0xafb8341 ; je 0x115103 ; ret
0x0000000000181d3b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000181d3b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000013dd73 : mov ebx, 0xc0850028 ; je 0x13dd89 ; xor eax, eax ; ret
0x0000000000132296 : mov ebx, 0xc8 ; call rax
0x000000000005f80c : mov ebx, 2 ; jmp 0x5baf7
0x00000000001153e2 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000011553a : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00000000001335c1 : mov ebx, eax ; call 0x1f8a4
0x0000000000085961 : mov ebx, eax ; call 0x81b84
0x00000000001035e6 : mov ebx, eax ; call rax
0x000000000012e2ab : mov ebx, eax ; jne 0x12e249 ; xor eax, eax ; pop rbx ; ret
0x000000000012674f : mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00000000000fca97 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000037307 : mov ebx, eax ; mov rdi, r12 ; call r15
0x0000000000173604 : mov ebx, ebp ; call 0x1f8ac
0x000000000002c376 : mov ebx, edi ; test rax, rax ; je 0x2c386 ; call rax
0x000000000010e035 : mov ebx, edx ; jmp 0x10df60
0x00000000000ca7b5 : mov ebx, edx ; jmp 0xca688
0x000000000012bf36 : mov ebx, esi ; sub rsp, 8 ; call 0x138238
0x0000000000138323 : mov ecx, 0x480028bc ; add esp, 8 ; ret
0x00000000001047eb : mov ecx, 0x49fff1b0 ; mov edi, dword ptr [rsi] ; call rbx
0x000000000012b983 : mov ecx, 0x5b0029d3 ; ret
0x0000000000186b55 : mov ecx, 0x6e16ffed ; in eax, dx ; call qword ptr [rsi]
0x00000000000d9b93 : mov ecx, 0x83000005 ; ret 0x3902
0x0000000000033edb : mov ecx, 0x8948fffe ; fucompi st(0) ; ret 0xfeb9
0x0000000000186b41 : mov ecx, 0xb99cffed ; in eax, dx ; call qword ptr [rsi]
0x0000000000186bc1 : mov ecx, 0xb99cffed ; in eax, dx ; call qword ptr [rsi]
0x0000000000181d39 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000033ee3 : mov ecx, 0xc031fffe ; pop rbx ; ret
0x000000000002b390 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2b3a2 ; call rcx
0x000000000012b797 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x0000000000134029 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x0000000000047c94 : mov ecx, dword ptr [rcx + rax - 0x27] ; jmp rcx
0x000000000009fb9c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a02ef : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a0a3c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000013bec0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13bed9 ; xor eax, eax ; ret
0x000000000013bf00 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13bf19 ; xor eax, eax ; ret
0x0000000000047bb6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000015101e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000015107f : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000001539ee : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000153a4f : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000001563c5 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000015641f : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000074f4b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000091c73 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000091c8d : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000094368 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000009438d : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001485f3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014860d : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014a5b8 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014a5dd : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014bfc3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014bfdd : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d968 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d98d : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000163093 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001630ad : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001655e8 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000016560d : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000ac609 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xac607 ; ret
0x0000000000047f46 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000153393 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155d63 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158733 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b083 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015db53 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160673 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153593 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155f63 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158933 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b003 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015dad3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001605f3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153793 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000156163 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158b33 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015af83 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015da53 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160573 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a5d70 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8e50 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a9920 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5db1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8e91 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a9961 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000015b7b3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015e283 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000160da3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b743 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015e213 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000160d33 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b6d3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015e1a3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000160cc3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b5f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015e0c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160be5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b585 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015e055 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160b75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b515 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015dfe5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160b05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b4a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015df75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160a95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b435 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015df05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160a25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b3c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015de95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001609b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b355 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015de25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160945 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b895 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000015e365 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000160e85 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a5d51 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8e31 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a9901 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000135bbd : mov ecx, dword ptr [rsp + 0x10] ; call rcx
0x0000000000132785 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x0000000000135425 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x0000000000137e5e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000013258d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000013525c : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000012d51d : mov ecx, dword ptr [rsp + 8] ; call rcx
0x000000000012d62b : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000d9804 : mov ecx, eax ; mov eax, 1 ; mov rdx, r8 ; jmp 0xd9823
0x000000000009ed34 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000012d93c : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000009ed46 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000012aa21 : mov ecx, ebp ; call rbx
0x0000000000075291 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad66a : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000002be41 : mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000009ea2e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000ad91d : mov ecx, edi ; call rbx
0x00000000000ba568 : mov ecx, edi ; call rbx
0x000000000010a479 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a509 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a5a9 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a639 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a6c9 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a759 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a7f9 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a899 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a939 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a9c9 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010aa64 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010aaf9 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010ae1b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010ae9b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010af1b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010af9b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b01b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b09b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b11b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b19b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b21b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b29b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b318 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b39b : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000014dc71 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e151 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e4f1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014dc74 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e154 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e4f4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007ba07 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000002185b : mov ecx, esi ; call rbx
0x000000000012a2ad : mov ecx, esi ; mov rdi, r13 ; call r12
0x000000000012a31d : mov ecx, esi ; mov rdi, r13 ; call r12
0x000000000010eee4 : mov edi, 0x2000004 ; call rax
0x0000000000105ca0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000332f0 : mov edi, 0x24448b48 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001044ed : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000004764f : mov edi, 0x85000000 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x0000000000067898 : mov edi, 0x89000000 ; ret 0x348
0x00000000000c97e4 : mov edi, 0x8948002f ; ret 0x8d48
0x0000000000119899 : mov edi, 0x8949002a ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000001977ad : mov edi, 0xbb440000 ; in eax, dx ; call rsp
0x000000000006ddd7 : mov edi, 0xe0 ; call rax
0x000000000006de29 : mov edi, 0xe0 ; call rax
0x000000000006dd9b : mov edi, 0xe0 ; jmp rax
0x000000000006de6b : mov edi, 0xe0 ; jmp rax
0x000000000009d9db : mov edi, 0xf700000b ; ret 0
0x00000000000346bd : mov edi, dword ptr [rax + 0x28] ; call 0x1f8b1
0x000000000011e4c7 : mov edi, dword ptr [rax] ; call 0xf78e8
0x00000000000bb021 : mov edi, dword ptr [rax] ; call r14
0x0000000000102d43 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000e35a6 : mov edi, dword ptr [rbp + 0x20] ; call 0x1f8ad
0x00000000000e35af : mov edi, dword ptr [rbp + 0x28] ; call 0x1f8ad
0x00000000000cf305 : mov edi, dword ptr [rbp - 0x308] ; call r12
0x00000000000564ae : mov edi, dword ptr [rbp - 0x4a8] ; call rax
0x00000000000ccfde : mov edi, dword ptr [rbp - 0x58] ; call 0x1f8b1
0x00000000000ebc50 : mov edi, dword ptr [rbp - 0x88] ; call rbx
0x00000000000ec327 : mov edi, dword ptr [rbp - 0x88] ; call rbx
0x00000000000ec42a : mov edi, dword ptr [rbp - 0x88] ; call rbx
0x00000000000acb05 : mov edi, dword ptr [rbp] ; call r12
0x0000000000038f6d : mov edi, dword ptr [rbp] ; call r14
0x000000000010299a : mov edi, dword ptr [rbp] ; call rbx
0x0000000000102ac1 : mov edi, dword ptr [rbp] ; call rbx
0x0000000000102acf : mov edi, dword ptr [rbp] ; call rbx
0x0000000000102c04 : mov edi, dword ptr [rbp] ; call rbx
0x0000000000102d74 : mov edi, dword ptr [rbp] ; call rbx
0x0000000000102d82 : mov edi, dword ptr [rbp] ; call rbx
0x0000000000104592 : mov edi, dword ptr [rbp] ; call rbx
0x00000000001046ba : mov edi, dword ptr [rbp] ; call rbx
0x00000000001047fd : mov edi, dword ptr [rbp] ; call rbx
0x00000000001048fe : mov edi, dword ptr [rbp] ; call rbx
0x000000000010491a : mov edi, dword ptr [rbp] ; call rbx
0x000000000011fd7d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x11fd79 ; pop rbx ; ret
0x000000000012804c : mov edi, dword ptr [rcx + 6] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000133041 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133059 ; ret
0x00000000001391a1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1391b9 ; ret
0x0000000000047bba : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006ddd6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006de28 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006dd9a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x000000000006de6a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000102948 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102980 : mov edi, dword ptr [rdi] ; call rbx
0x00000000001029e9 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102a21 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102a6f : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102aa7 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102b2c : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102b64 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102bb2 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102bea : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102c53 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102c8b : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102cdd : mov edi, dword ptr [rdi] ; call rbx
0x0000000000102d5a : mov edi, dword ptr [rdi] ; call rbx
0x00000000001044ba : mov edi, dword ptr [rdi] ; call rbx
0x00000000001044f2 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000104540 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000104578 : mov edi, dword ptr [rdi] ; call rbx
0x00000000001045e2 : mov edi, dword ptr [rdi] ; call rbx
0x000000000010461a : mov edi, dword ptr [rdi] ; call rbx
0x0000000000104668 : mov edi, dword ptr [rdi] ; call rbx
0x00000000001046a0 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000104725 : mov edi, dword ptr [rdi] ; call rbx
0x000000000010475d : mov edi, dword ptr [rdi] ; call rbx
0x00000000001047ab : mov edi, dword ptr [rdi] ; call rbx
0x00000000001047e3 : mov edi, dword ptr [rdi] ; call rbx
0x000000000010484d : mov edi, dword ptr [rdi] ; call rbx
0x0000000000104885 : mov edi, dword ptr [rdi] ; call rbx
0x00000000001048d3 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000072fe8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x72fb4
0x0000000000113324 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001840e6 : mov edi, dword ptr [rdx] ; ret
0x0000000000102907 : mov edi, dword ptr [rsi] ; call rbx
0x000000000010298d : mov edi, dword ptr [rsi] ; call rbx
0x0000000000102a2e : mov edi, dword ptr [rsi] ; call rbx
0x0000000000102ab4 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000102b71 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000102bf7 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000102c98 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000102d67 : mov edi, dword ptr [rsi] ; call rbx
0x00000000001044ff : mov edi, dword ptr [rsi] ; call rbx
0x0000000000104585 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000104627 : mov edi, dword ptr [rsi] ; call rbx
0x00000000001046ad : mov edi, dword ptr [rsi] ; call rbx
0x000000000010476a : mov edi, dword ptr [rsi] ; call rbx
0x00000000001047f0 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000104892 : mov edi, dword ptr [rsi] ; call rbx
0x00000000001048f1 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000102e2f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000143699 : mov edi, dword ptr [rsp + 0x18] ; call 0x1f8ae
0x0000000000024071 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x0000000000024a41 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00000000000c92af : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000f360e : mov edi, dword ptr [rsp + 0x20] ; call 0x1f8ae
0x0000000000028aba : mov edi, dword ptr [rsp + 0x20] ; call r14
0x0000000000023e51 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000023ef4 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000003731e : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000002510e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfc : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000024805 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x0000000000025590 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025350 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00000000000248b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000000282af : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000029187 : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000025b58 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000028048 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000028f18 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025f2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026868 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000026ca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000012d539 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00000000000bbdb0 : mov edi, dword ptr [rsp + 0x68] ; call r12
0x00000000000bc26a : mov edi, dword ptr [rsp + 0x68] ; call r12
0x0000000000102d90 : mov edi, dword ptr [rsp] ; call rbx
0x00000000001046c8 : mov edi, dword ptr [rsp] ; call rbx
0x000000000010490c : mov edi, dword ptr [rsp] ; call rbx
0x00000000000230b1 : mov edi, eax ; call 0x8f3b4
0x0000000000136e04 : mov edi, eax ; call qword ptr [r10]
0x00000000000ece5a : mov edi, eax ; call rbx
0x00000000000877aa : mov edi, eax ; call rcx
0x0000000000136ef6 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136ff6 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137151 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137291 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000013752b : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136d07 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x0000000000137437 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000004a6ed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4a6e1 ; mov rax, rsi ; ret
0x000000000008595e : mov edi, eax ; mov rbx, rax ; call 0x81b87
0x000000000012b794 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000086b38 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000013a78b : mov edi, ebp ; add rbx, r12 ; call r14
0x0000000000172b6c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e35b8 : mov edi, ebp ; call 0x1f8ac
0x000000000013367b : mov edi, ebp ; call 0x1f8ac
0x00000000000869a2 : mov edi, ebp ; call 0x82bd4
0x00000000000f4035 : mov edi, ebp ; call 0xf0334
0x000000000012e34e : mov edi, ebp ; call qword ptr [rbx]
0x000000000011ff5e : mov edi, ebp ; call r12
0x000000000012a2b0 : mov edi, ebp ; call r12
0x000000000012a320 : mov edi, ebp ; call r12
0x000000000013c0bb : mov edi, ebp ; call r12
0x00000000000391ac : mov edi, ebp ; call r14
0x000000000003922d : mov edi, ebp ; call r14
0x0000000000039268 : mov edi, ebp ; call r14
0x000000000012c02d : mov edi, ebp ; call r14
0x0000000000037347 : mov edi, ebp ; call r15
0x0000000000037d6c : mov edi, ebp ; call r15
0x000000000002f6d9 : mov edi, ebp ; call rax
0x000000000004b38e : mov edi, ebp ; call rax
0x0000000000084fb6 : mov edi, ebp ; call rax
0x000000000008893d : mov edi, ebp ; call rax
0x0000000000088d04 : mov edi, ebp ; call rax
0x000000000011cef5 : mov edi, ebp ; call rax
0x000000000011d205 : mov edi, ebp ; call rax
0x000000000012c227 : mov edi, ebp ; call rax
0x000000000012f40b : mov edi, ebp ; call rax
0x000000000012f519 : mov edi, ebp ; call rax
0x0000000000134108 : mov edi, ebp ; call rax
0x00000000001341d2 : mov edi, ebp ; call rax
0x00000000001342fb : mov edi, ebp ; call rax
0x000000000013451b : mov edi, ebp ; call rax
0x0000000000137bf2 : mov edi, ebp ; call rax
0x00000000000ad296 : mov edi, ebp ; call rbx
0x00000000000ad3b5 : mov edi, ebp ; call rbx
0x00000000000ad55f : mov edi, ebp ; call rbx
0x00000000000ad66d : mov edi, ebp ; call rbx
0x0000000000103630 : mov edi, ebp ; call rbx
0x0000000000103755 : mov edi, ebp ; call rbx
0x000000000010387a : mov edi, ebp ; call rbx
0x00000000001038ae : mov edi, ebp ; call rbx
0x00000000001039d3 : mov edi, ebp ; call rbx
0x0000000000103af8 : mov edi, ebp ; call rbx
0x0000000000103b13 : mov edi, ebp ; call rbx
0x0000000000103b5d : mov edi, ebp ; call rbx
0x0000000000103c82 : mov edi, ebp ; call rbx
0x0000000000103da7 : mov edi, ebp ; call rbx
0x0000000000103ddb : mov edi, ebp ; call rbx
0x0000000000103f00 : mov edi, ebp ; call rbx
0x0000000000104025 : mov edi, ebp ; call rbx
0x00000000001040d9 : mov edi, ebp ; call rbx
0x00000000001040f9 : mov edi, ebp ; call rbx
0x0000000000104119 : mov edi, ebp ; call rbx
0x0000000000104139 : mov edi, ebp ; call rbx
0x000000000013bf91 : mov edi, ebp ; call rcx
0x000000000012de45 : mov edi, ebp ; call rdx
0x000000000012cac5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b4d4 : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000173651 : mov edi, ebp ; mov r13, r14 ; call 0x1f8af
0x0000000000135bba : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132782 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135422 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013258a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000135259 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012aa1e : mov edi, ebp ; mov rcx, r13 ; call rbx
0x00000000000378b4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x00000000000859c3 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000012d74d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000133673 : mov edi, ebx ; call 0x1f8ac
0x0000000000085891 : mov edi, ebx ; call 0x81b84
0x00000000000bda2b : mov edi, ebx ; call 0x89d14
0x00000000000bf4ab : mov edi, ebx ; call 0x8b724
0x00000000000ceac5 : mov edi, ebx ; call qword ptr [r15]
0x000000000012e778 : mov edi, ebx ; call qword ptr [rax]
0x0000000000137388 : mov edi, ebx ; call qword ptr [rax]
0x000000000013abb2 : mov edi, ebx ; call qword ptr [rax]
0x000000000013ac72 : mov edi, ebx ; call qword ptr [rax]
0x000000000013ad32 : mov edi, ebx ; call qword ptr [rax]
0x000000000013adf2 : mov edi, ebx ; call qword ptr [rax]
0x0000000000029c47 : mov edi, ebx ; call r12
0x0000000000021be0 : mov edi, ebx ; call r14
0x000000000006cb49 : mov edi, ebx ; call r8
0x0000000000052256 : mov edi, ebx ; call rax
0x000000000006c436 : mov edi, ebx ; call rax
0x0000000000078777 : mov edi, ebx ; call rax
0x0000000000085c81 : mov edi, ebx ; call rax
0x0000000000087e66 : mov edi, ebx ; call rax
0x0000000000088b7a : mov edi, ebx ; call rax
0x000000000011faaa : mov edi, ebx ; call rax
0x000000000011fda2 : mov edi, ebx ; call rax
0x00000000001740eb : mov edi, ebx ; jne 0x1740e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a510 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a612 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000222be : mov edi, ebx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c8b0b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001430db : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000173601 : mov edi, ebx ; mov rbx, rbp ; call 0x1f8af
0x0000000000088106 : mov edi, ebx ; mov rdx, r15 ; call rax
0x000000000007d8c2 : mov edi, ebx ; neg rdi ; call qword ptr [r15]
0x000000000007221e : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007b2a0 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072066 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000007b3f0 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000013a910 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000013b175 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000174278 : mov edi, ebx ; test rdi, rdi ; jne 0x174272 ; pop rbx ; ret
0x0000000000089268 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000f365e : mov edi, edi ; call 0x1f8ac
0x0000000000065d5d : mov edi, edi ; call 0x71fd4
0x000000000005f10f : mov edi, edi ; call 0x7b3a4
0x00000000001389e0 : mov edi, edi ; call qword ptr [rax]
0x000000000013a86e : mov edi, edi ; call r14
0x0000000000074015 : mov edi, edi ; call rax
0x0000000000087bf6 : mov edi, edi ; call rax
0x0000000000103674 : mov edi, edi ; call rbx
0x00000000001036be : mov edi, edi ; call rbx
0x00000000001036ed : mov edi, edi ; call rbx
0x0000000000103737 : mov edi, edi ; call rbx
0x0000000000103799 : mov edi, edi ; call rbx
0x00000000001037e3 : mov edi, edi ; call rbx
0x0000000000103812 : mov edi, edi ; call rbx
0x000000000010385c : mov edi, edi ; call rbx
0x00000000001038f2 : mov edi, edi ; call rbx
0x000000000010393c : mov edi, edi ; call rbx
0x000000000010396b : mov edi, edi ; call rbx
0x00000000001039b5 : mov edi, edi ; call rbx
0x0000000000103a17 : mov edi, edi ; call rbx
0x0000000000103a61 : mov edi, edi ; call rbx
0x0000000000103a90 : mov edi, edi ; call rbx
0x0000000000103ada : mov edi, edi ; call rbx
0x0000000000103ba1 : mov edi, edi ; call rbx
0x0000000000103beb : mov edi, edi ; call rbx
0x0000000000103c1a : mov edi, edi ; call rbx
0x0000000000103c64 : mov edi, edi ; call rbx
0x0000000000103cc6 : mov edi, edi ; call rbx
0x0000000000103d10 : mov edi, edi ; call rbx
0x0000000000103d3f : mov edi, edi ; call rbx
0x0000000000103d89 : mov edi, edi ; call rbx
0x0000000000103e1f : mov edi, edi ; call rbx
0x0000000000103e69 : mov edi, edi ; call rbx
0x0000000000103e98 : mov edi, edi ; call rbx
0x0000000000103ee2 : mov edi, edi ; call rbx
0x0000000000103f44 : mov edi, edi ; call rbx
0x0000000000103f8e : mov edi, edi ; call rbx
0x0000000000103fbd : mov edi, edi ; call rbx
0x0000000000104007 : mov edi, edi ; call rbx
0x0000000000104259 : mov edi, edi ; call rbx
0x0000000000104279 : mov edi, edi ; call rbx
0x0000000000104299 : mov edi, edi ; call rbx
0x00000000001042b9 : mov edi, edi ; call rbx
0x00000000001042d9 : mov edi, edi ; call rbx
0x00000000001042f9 : mov edi, edi ; call rbx
0x0000000000104319 : mov edi, edi ; call rbx
0x0000000000104339 : mov edi, edi ; call rbx
0x0000000000104359 : mov edi, edi ; call rbx
0x0000000000104379 : mov edi, edi ; call rbx
0x0000000000104399 : mov edi, edi ; call rbx
0x00000000001043b9 : mov edi, edi ; call rbx
0x00000000001043d9 : mov edi, edi ; call rbx
0x00000000001043f9 : mov edi, edi ; call rbx
0x0000000000104419 : mov edi, edi ; call rbx
0x0000000000104439 : mov edi, edi ; call rbx
0x00000000000ffd4d : mov edi, edi ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x000000000013809f : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162c : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000010af2c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000075294 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000001151a8 : mov edi, edx ; jmp rax
0x000000000004a771 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a759 ; mov rax, rsi ; ret
0x00000000001735f2 : mov edi, esi ; call 0x1f8ac
0x0000000000081867 : mov edi, esi ; call qword ptr [rax]
0x000000000012d2b8 : mov edi, esi ; call rax
0x0000000000103654 : mov edi, esi ; call rbx
0x00000000001036cd : mov edi, esi ; call rbx
0x0000000000103746 : mov edi, esi ; call rbx
0x0000000000103779 : mov edi, esi ; call rbx
0x00000000001037f2 : mov edi, esi ; call rbx
0x000000000010386b : mov edi, esi ; call rbx
0x00000000001038d2 : mov edi, esi ; call rbx
0x000000000010394b : mov edi, esi ; call rbx
0x00000000001039c4 : mov edi, esi ; call rbx
0x00000000001039f7 : mov edi, esi ; call rbx
0x0000000000103a70 : mov edi, esi ; call rbx
0x0000000000103ae9 : mov edi, esi ; call rbx
0x0000000000103b81 : mov edi, esi ; call rbx
0x0000000000103bfa : mov edi, esi ; call rbx
0x0000000000103c73 : mov edi, esi ; call rbx
0x0000000000103ca6 : mov edi, esi ; call rbx
0x0000000000103d1f : mov edi, esi ; call rbx
0x0000000000103d98 : mov edi, esi ; call rbx
0x0000000000103dff : mov edi, esi ; call rbx
0x0000000000103e78 : mov edi, esi ; call rbx
0x0000000000103ef1 : mov edi, esi ; call rbx
0x0000000000103f24 : mov edi, esi ; call rbx
0x0000000000103f9d : mov edi, esi ; call rbx
0x0000000000104016 : mov edi, esi ; call rbx
0x0000000000104159 : mov edi, esi ; call rbx
0x0000000000104179 : mov edi, esi ; call rbx
0x0000000000104199 : mov edi, esi ; call rbx
0x00000000001041b9 : mov edi, esi ; call rbx
0x00000000001041d9 : mov edi, esi ; call rbx
0x00000000001041f9 : mov edi, esi ; call rbx
0x0000000000104219 : mov edi, esi ; call rbx
0x0000000000104239 : mov edi, esi ; call rbx
0x000000000012c9d3 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d51a : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012d628 : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000013b5ef : mov edi, esp ; call qword ptr [rax]
0x000000000013b733 : mov edi, esp ; call qword ptr [rax]
0x000000000003730a : mov edi, esp ; call r15
0x0000000000037362 : mov edi, esp ; call r15
0x0000000000038384 : mov edi, esp ; call r15
0x000000000012b886 : mov edi, esp ; call rax
0x000000000012b971 : mov edi, esp ; call rax
0x0000000000132c4d : mov edi, esp ; call rax
0x00000000001356be : mov edi, esp ; call rax
0x0000000000074fe9 : mov edi, esp ; call rbx
0x00000000000750c5 : mov edi, esp ; call rbx
0x00000000000751a8 : mov edi, esp ; call rbx
0x00000000000ad820 : mov edi, esp ; call rbx
0x00000000000ba6f5 : mov edi, esp ; call rbx
0x000000000010360b : mov edi, esp ; call rbx
0x0000000000103889 : mov edi, esp ; call rbx
0x0000000000103b07 : mov edi, esp ; call rbx
0x0000000000103b38 : mov edi, esp ; call rbx
0x0000000000103db6 : mov edi, esp ; call rbx
0x0000000000104034 : mov edi, esp ; call rbx
0x0000000000104082 : mov edi, esp ; call rbx
0x00000000001040a2 : mov edi, esp ; call rbx
0x000000000013a981 : mov edi, esp ; call rdx
0x00000000000ad91a : mov edi, esp ; mov r9, r15 ; call rbx
0x00000000000ba565 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000088e56 : mov edi, esp ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00000000000cbf79 : mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000cbf79 : mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000123907 : mov edx, 0x102 ; cmove eax, edx ; ret
0x0000000000123907 : mov edx, 0x102 ; cmove eax, edx ; ret
0x00000000001238ca : mov edx, 0x104 ; cmove eax, edx ; ret
0x00000000001238ca : mov edx, 0x104 ; cmove eax, edx ; ret
0x00000000001238ac : mov edx, 0x107 ; cmove eax, edx ; ret
0x00000000001238ac : mov edx, 0x107 ; cmove eax, edx ; ret
0x00000000000784b6 : mov edx, 0x130 ; pop rbx ; ret
0x00000000001419dd : mov edx, 0x159 ; call 0x2dc47
0x0000000000080fdc : mov edx, 0x234 ; call 0x7d287
0x000000000008105d : mov edx, 0x237 ; call 0x7d287
0x000000000008103e : mov edx, 0x23a ; call 0x7d287
0x0000000000021972 : mov edx, 0x2c ; call 0x2dc47
0x00000000000b1945 : mov edx, 0x3e1 ; call 0x2dc47
0x000000000011f38f : mov edx, 0x448b0006 ; ret 0x4804
0x0000000000021953 : mov edx, 0x4a ; call 0x2dc47
0x000000000006ac87 : mov edx, 0x5d5b0035 ; ret
0x00000000001a758d : mov edx, 0x73200000 ; out dx, eax ; call rax
0x00000000001a761d : mov edx, 0x75800000 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000133e2a : mov edx, 0x854dffee ; dec dword ptr [rax - 0x77] ; ret
0x0000000000119d3c : mov edx, 0x8948002a ; ret 0x8b48
0x000000000018359e : mov edx, 0xcac982a4 ; call 0xffffffffaedad41e
0x00000000000c47d2 : mov edx, 0xe9ffffea ; ret 0xfff3
0x000000000008e649 : mov edx, 0xf480001 ; ret 0x66c3
0x0000000000023b87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000023b87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000006ff7e : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000010cfc8 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000003a6ef : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000003a7bc : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000013b48c : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013b4d6 : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001123c6 : mov edx, 5 ; call 0x2e627
0x00000000000218a0 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000077465 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cc4ec : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcc501 ; call rdx
0x0000000000071f88 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000020827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000114311 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000114223 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000001143fc : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000113ea0 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000114377 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000078770 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000011483d : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x000000000011869f : mov edx, dword ptr [rbx] ; jmp 0x118668
0x00000000001485bf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014a584 : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014bf8f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014d934 : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000146ced : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001488f6 : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014ab7d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014c256 : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000007400e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000754c6 : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000001151a1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000036266 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000000acd65 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000089675 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x89679 ; ret
0x0000000000173e60 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173e72 ; call rdx
0x000000000011452b : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000a5d92 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a6a62 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a8e72 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9942 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a5d83 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6a53 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a8e63 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a9933 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5dd3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6aa3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a8eb3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9983 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb21d : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xbb206 ; ret
0x00000000000a5de3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6ab3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a8ec3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a9993 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000152dd1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001557a1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000158171 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000153190 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b60 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158530 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015b100 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015dbd0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001606f0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152a21 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553f1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157dc1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015af01 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015d9d1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001604f1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a7360 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a8190 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a5d60 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a6a30 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a8e40 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9910 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015b820 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015e2f0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000160e10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9c00 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a73b1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a5da1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6a71 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a8e81 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a9951 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000015b661 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000015e131 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000160c51 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a7341 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8161 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5d41 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a6a11 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a8e21 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a98f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000010eee0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000010eddc : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000848e9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x0000000000070105 : mov edx, eax ; je 0x70117 ; mov eax, edx ; pop rbx ; ret
0x000000000010f474 : mov edx, eax ; jmp 0x10f486
0x000000000010f77f : mov edx, eax ; jmp 0x10f78d
0x0000000000134dc7 : mov edx, eax ; jmp 0x134d8b
0x00000000000711f7 : mov edx, eax ; jmp 0x7118b
0x0000000000071388 : mov edx, eax ; jmp 0x71322
0x0000000000075be3 : mov edx, eax ; jmp 0x75b80
0x0000000000076533 : mov edx, eax ; jmp 0x764d0
0x0000000000076cd0 : mov edx, eax ; jmp 0x76c57
0x00000000000780eb : mov edx, eax ; jmp 0x78081
0x000000000007d9c4 : mov edx, eax ; jmp 0x7d9e1
0x0000000000087840 : mov edx, eax ; jmp 0x8780b
0x00000000000beb68 : mov edx, eax ; jmp 0xbeb71
0x00000000000d0442 : mov edx, eax ; jmp 0xd03e1
0x00000000000d5199 : mov edx, eax ; jmp 0xd51b8
0x00000000000d767c : mov edx, eax ; jmp 0xd765a
0x00000000000d980c : mov edx, eax ; jmp 0xd981b
0x00000000000e0ff6 : mov edx, eax ; jmp 0xe0f90
0x00000000000f003c : mov edx, eax ; jmp 0xf0074
0x00000000000fe4fc : mov edx, eax ; jmp 0xfe490
0x0000000000075513 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000143ade : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000378b7 : mov edx, ebp ; call r15
0x0000000000114707 : mov edx, ebp ; call rax
0x0000000000114844 : mov edx, ebp ; call rax
0x00000000000ad3b2 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000037341 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000012f513 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000137bec : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088937 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000088e59 : mov edx, ebp ; mov rsi, rbp ; call rax
0x000000000003735c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000113ea7 : mov edx, ebx ; call rax
0x000000000011422a : mov edx, ebx ; call rax
0x0000000000114403 : mov edx, ebx ; call rax
0x0000000000114532 : mov edx, ebx ; call rax
0x0000000000174577 : mov edx, ebx ; jne 0x17456e ; pop rbx ; ret
0x000000000012f405 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088858 : mov edx, ecx ; jmp 0x88821
0x0000000000088109 : mov edx, edi ; call rax
0x000000000018c19d : mov edx, edi ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x0000000000063b64 : mov edx, edi ; mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000011ceef : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000011d1ff : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000114318 : mov edx, esi ; call rax
0x000000000011437e : mov edx, esp ; call rax
0x0000000000087bf3 : mov edx, esp ; mov rdi, r15 ; call rax
0x00000000001a49ad : mov es, word ptr [rax] ; add al, dl ; jg 0x1a49a6 ; jmp qword ptr [rbx]
0x000000000010ada9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000010b609 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000005977e : mov es, word ptr [rdx + 5] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001b265e : mov es, word ptr [rdx] ; add ah, bh ; ret
0x0000000000103b56 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000000a7fae : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000009ec16 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000886e3 : mov esi, 0x3948feda ; ret 0x3574
0x00000000000ac4de : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000023ac9 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000012772b : mov esi, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00000000001958cc : mov esi, 0x64fffc5b ; pop rbx ; cld ; call rsp
0x000000000009ec41 : mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009eb01 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000009ec65 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00000000001a794d : mov esi, 0x7ed00000 ; out dx, eax ; call qword ptr [rdi]
0x0000000000128be7 : mov esi, 0x83480153 ; ret
0x0000000000128dad : mov esi, 0x83480153 ; ret
0x00000000000d7f89 : mov esi, 0x840f002e ; ret 2
0x000000000009eb7e : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00000000000f1d32 : mov esi, 0x89010544 ; ret
0x00000000000c9954 : mov esi, 0x8948002f ; ret 0x8d48
0x00000000000c9954 : mov esi, 0x8948002f ; ret 0x8d48
0x0000000000087a35 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000008d80f : mov esi, 0x8c48348 ; ret
0x0000000000188ebc : mov esi, 0x99fff3d1 ; fcompi st(3) ; jmp rcx
0x000000000003d6df : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000000409df : mov esi, 0xbe0f2414 ; ret 0x8349
0x000000000004384f : mov esi, 0xbe0f2414 ; ret 0x8349
0x000000000009ecbd : mov esi, 0xc0844507 ; jne 0x9eca9 ; xor eax, eax ; ret
0x0000000000181d3e : mov esi, 0xc2c1c0bf ; ret
0x0000000000181d3e : mov esi, 0xc2c1c0bf ; ret
0x000000000010ec30 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009eb25 : mov esi, 0xc984070c ; jne 0x9eb20 ; ret
0x000000000009eae1 : mov esi, 0xd2840714 ; jne 0x9eae0 ; ret
0x00000000000aab94 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000000ff966 : mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x000000000009ebb5 : mov esi, 0xf2390714 ; je 0x9ebb8 ; ret
0x00000000001742e6 : mov esi, 0xf3ffeab5 ; ret
0x0000000000002bf1 : mov esi, 0xf8cbeb8f ; ret
0x000000000011cfe6 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x0000000000103696 : mov esi, 1 ; call rbx
0x000000000010370f : mov esi, 1 ; call rbx
0x00000000001037bb : mov esi, 1 ; call rbx
0x0000000000103834 : mov esi, 1 ; call rbx
0x0000000000103914 : mov esi, 1 ; call rbx
0x000000000010398d : mov esi, 1 ; call rbx
0x0000000000103a39 : mov esi, 1 ; call rbx
0x0000000000103ab2 : mov esi, 1 ; call rbx
0x0000000000103bc3 : mov esi, 1 ; call rbx
0x0000000000103c3c : mov esi, 1 ; call rbx
0x0000000000103ce8 : mov esi, 1 ; call rbx
0x0000000000103d61 : mov esi, 1 ; call rbx
0x0000000000103e41 : mov esi, 1 ; call rbx
0x0000000000103eba : mov esi, 1 ; call rbx
0x0000000000103f66 : mov esi, 1 ; call rbx
0x0000000000103fdf : mov esi, 1 ; call rbx
0x0000000000133027 : mov esi, 1 ; mov ebp, eax ; call 0x12f309
0x0000000000103883 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000103db0 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x000000000010374f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00000000001039cd : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000103c7c : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000103efa : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00000000001036c7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00000000001037ec : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000103945 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000103a6a : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000103bf4 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000103d19 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000103e72 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000103f97 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000103b0d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006cb43 : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006c430 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000006c42f : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000102881 : mov esi, 2 ; jmp rax
0x0000000000103b01 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x000000000010402e : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000103874 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000103af2 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000103da1 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x000000000010401f : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000103740 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000103865 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000001039be : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000103ae3 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000103c6d : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000103d92 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000103eeb : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000104010 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000001036b8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103731 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x00000000001037dd : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103856 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103936 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x00000000001039af : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103a5b : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103ad4 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103be5 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103c5e : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103d0a : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103d83 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103e63 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103edc : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000103f88 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000104001 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000010289b : mov esi, 3 ; jmp rax
0x000000000010407c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x000000000010409c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000001040d3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000001040f3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000104113 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000104133 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000104153 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000104173 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000104193 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001041b3 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001041d3 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001041f3 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000104213 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000104233 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000104253 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000104273 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000104293 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001042b3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001042d3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001042f3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000104313 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000104333 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000104353 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000104373 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000104393 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001043b3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001043d3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001043f3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000104413 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000104433 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000038f6a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000063b67 : mov esi, dword ptr [rip + 0x360403] ; call rax
0x000000000005be59 : mov esi, dword ptr [rip + 0x368111] ; call rax
0x000000000005b803 : mov esi, dword ptr [rip + 0x368767] ; call rax
0x000000000005004b : mov esi, dword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3cf : mov esi, dword ptr [rip + 0x376b9b] ; call rax
0x0000000000047f4a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000d7674 : mov esi, dword ptr [rsi + rsi*4] ; cmp r8d, esi ; jge 0xd7659 ; mov edx, eax ; jmp 0xd7662
0x000000000014db59 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e049 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000014e3e9 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012c028 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021856 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837f : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000248b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000028043 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028f13 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000845e1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000026863 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000010ede1 : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000011ff59 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000096aea : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x96b05 ; jmp 0x96abf
0x000000000006d712 : mov esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x0000000000142fdf : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000076a42 : mov esi, ebp ; call 0x4d179
0x000000000011688f : mov esi, ebp ; call 0x4d179
0x0000000000088e5c : mov esi, ebp ; call rax
0x000000000008588e : mov esi, ebp ; mov rdi, rbx ; call 0x81b87
0x00000000000bda28 : mov esi, ebp ; mov rdi, rbx ; call 0x89d17
0x0000000000085c7e : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000088b77 : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000c84bc : mov esi, ebp ; xor edx, edx ; jmp 0xc848a
0x00000000001886c5 : mov esi, ebx ; call qword ptr [rdx]
0x0000000000188745 : mov esi, ebx ; call qword ptr [rdx]
0x000000000003735f : mov esi, ebx ; mov rdi, r12 ; call r15
0x00000000001389dd : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a86b : mov esi, ebx ; mov rdi, r15 ; call r14
0x00000000000877a7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x000000000008699f : mov esi, ebx ; mov rdi, rbp ; call 0x82bd7
0x000000000013bf8e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000391a9 : mov esi, edi ; mov rdi, r13 ; call r14
0x000000000003922a : mov esi, edi ; mov rdi, r13 ; call r14
0x0000000000039265 : mov esi, edi ; mov rdi, r13 ; call r14
0x00000000000c7593 : mov esi, edi ; xor edi, edi ; call rax
0x0000000000132dca : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x0000000000138f4a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000013966a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x0000000000113328 : mov esi, edx ; call rax
0x0000000000001bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000c52d0 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000202f4 : mov esi, esi ; call 0xaaa68
0x00000000000879d5 : mov esi, esi ; call rax
0x00000000000564ab : mov esi, esi ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000ba6f2 : mov esi, esi ; mov rdi, r12 ; call rbx
0x00000000000ba562 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b38b : mov esi, esi ; mov rdi, r13 ; call rax
0x000000000008893a : mov esi, esi ; mov rdi, r13 ; call rax
0x000000000011cef2 : mov esi, esi ; mov rdi, r13 ; call rax
0x000000000011d202 : mov esi, esi ; mov rdi, r13 ; call rax
0x00000000000378b1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000013c0b8 : mov esi, esi ; mov rdi, rbp ; call r12
0x00000000001358a4 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000cdcd9 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000ce748 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000001322e4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x0000000000135054 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000c525e : mov esi, esi ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x000000000013ab95 : mov esi, esp ; call qword ptr [rax]
0x000000000013ac55 : mov esi, esp ; call qword ptr [rax]
0x000000000013ad15 : mov esi, esp ; call qword ptr [rax]
0x000000000013add5 : mov esi, esp ; call qword ptr [rax]
0x000000000003731b : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000086b35 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f4032 : mov esi, esp ; mov rdi, rbp ; call 0xf0337
0x0000000000037344 : mov esi, esp ; mov rdi, rbp ; call r15
0x0000000000037d69 : mov esi, esp ; mov rdi, rbp ; call r15
0x0000000000088d01 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000012f408 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000012f516 : mov esi, esp ; mov rdi, rbp ; call rax
0x0000000000137bef : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000012aa1b : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x000000000012e775 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000087e63 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000012a60f : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x000000000008683a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000008605d : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000202f3 : mov esi, r14d ; call 0xaaa69
0x00000000001971ac : mov esp, 0x14000096 ; adc al, 0xeb ; call rsp
0x0000000000198c14 : mov esp, 0x14000149 ; insd dword ptr [rdi], dx ; call rsp
0x000000000019b0f4 : mov esp, 0x14000234 ; and bh, dl ; call rsp
0x0000000000043e30 : mov esp, 0x1b6024 ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x000000000019a8cc : mov esp, 0x340001f4 ; fprem ; call rsp
0x00000000001b11f4 : mov esp, 0x38000156 ; jnp 0x1b11f7 ; jmp qword ptr [rcx]
0x0000000000197da4 : mov esp, 0x40000e4 ; out dx, al ; call rsp
0x0000000000197df4 : mov esp, 0x40000e6 ; insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x0000000000199b44 : mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000196be4 : mov esp, 0x44000077 ; in eax, 0xe9 ; call rsp
0x000000000019938c : mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x000000000008f837 : mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000138c91 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000138e89 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000008eb21 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000096711 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008eb51 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000096741 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eb41 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000096731 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000196b94 : mov esp, 0x54000076 ; loope 0x196b8b ; call rsp
0x00000000001277d7 : mov esp, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00000000001a3df4 : mov esp, 0x68000082 ; in eax, dx ; call qword ptr [rax]
0x0000000000199304 : mov esp, 0x74000178 ; adc al, 0xf6 ; call rsp
0x00000000000d732e : mov esp, 0x7408e383 ; xchg eax, esi ; pop rbx ; ret
0x00000000001aedf4 : mov esp, 0x78000132 ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001adef4 : mov esp, 0x8000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1f4 : mov esp, 0x8000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000000b6f6a : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000de0b4 : mov esp, 0x89000000 ; ret 0xd139
0x00000000000bf810 : mov esp, 0x89000373 ; ret 0x3b8
0x000000000010b8d4 : mov esp, 0x8948002b ; ret 0x8d48
0x000000000019a3ec : mov esp, 0x940001d1 ; adc edi, eax ; call rsp
0x00000000000f4cda : mov esp, 0x9824 ; add al, ch ; ret
0x00000000000db39b : mov esp, 0xa824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000197725 : mov esp, 0xaf940000 ; in eax, dx ; call rsp
0x0000000000196e9c : mov esp, 0xb4000084 ; cmp edx, ebp ; jmp rsp
0x000000000019b894 : mov esp, 0xb4000116 ; sti ; call rsp
0x000000000008f826 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x000000000019928c : mov esp, 0xc4000176 ; or al, 0xf6 ; call rsp
0x000000000019b3fc : mov esp, 0xc4000247 ; pop rbp ; cli ; call rsp
0x00000000001b09f4 : mov esp, 0xc800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b56f4 : mov esp, 0xc800019b ; ret
0x00000000000e0718 : mov esp, 0xc824 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000008b8b3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000008ba78 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000008bacf : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000019796c : mov esp, 0xd40000cc ; std ; in eax, dx ; call rsp
0x0000000000197cc4 : mov esp, 0xd40000e0 ; pop rax ; out dx, al ; call rsp
0x000000000019b74c : mov esp, 0xd400025c ; salc ; cli ; call rsp
0x00000000001aa2f4 : mov esp, 0xd80000e7 ; out dx, al ; int1 ; jmp rcx
0x00000000001a7785 : mov esp, 0xd9d80000 ; cld ; call qword ptr [rax]
0x00000000001969cc : mov esp, 0xe400006c ; ja 0x1969c3 ; call rsp
0x00000000001b2af4 : mov esp, 0xe800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x0000000000199c44 : mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x00000000000965ab : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008eb31 : mov esp, 0xf80148c0 ; ret
0x0000000000096721 : mov esp, 0xf80148c0 ; ret
0x0000000000067493 : mov esp, 2 ; jmp 0x63703
0x000000000013856c : mov esp, dword ptr [rax] ; jmp 0x13857a
0x00000000000203f8 : mov esp, eax ; call 0xaab88
0x00000000000352ea : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000011907a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000cf50a : mov esp, edi ; je 0xcf529 ; call 0x8b726
0x000000000005f80a : mov esp, edi ; mov ebx, 2 ; jmp 0x5baf9
0x00000000000d5194 : mov esp, edi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd51bd
0x0000000000102834 : mov esp, edx ; mov rbp, rax ; call rax
0x00000000001895a5 : mov esp, esi ; call rsp
0x0000000000189585 : mov esp, esi ; jmp rdx
0x0000000000189584 : mov esp, esi ; jmp rdx
0x0000000000189589 : mov esp, esi ; jmp rdx
0x000000000018958d : mov esp, esi ; jmp rdx
0x0000000000189591 : mov esp, esi ; jmp rdx
0x0000000000189595 : mov esp, esi ; jmp rdx
0x0000000000189599 : mov esp, esi ; jmp rdx
0x000000000018959d : mov esp, esi ; jmp rdx
0x00000000001895a1 : mov esp, esi ; jmp rdx
0x00000000001895b1 : mov esp, esi ; jmp rdx
0x00000000001895b5 : mov esp, esi ; jmp rdx
0x00000000001895b9 : mov esp, esi ; jmp rdx
0x00000000001895bd : mov esp, esi ; jmp rdx
0x00000000001895c1 : mov esp, esi ; jmp rdx
0x00000000001895c5 : mov esp, esi ; jmp rdx
0x00000000001895c9 : mov esp, esi ; jmp rdx
0x00000000001895cd : mov esp, esi ; jmp rdx
0x00000000001895d1 : mov esp, esi ; jmp rdx
0x00000000001895d5 : mov esp, esi ; jmp rdx
0x00000000001895d9 : mov esp, esi ; jmp rdx
0x00000000001895dd : mov esp, esi ; jmp rdx
0x00000000001895e1 : mov esp, esi ; jmp rdx
0x00000000001895e5 : mov esp, esi ; jmp rdx
0x00000000001895e9 : mov esp, esi ; jmp rdx
0x00000000001895ed : mov esp, esi ; jmp rdx
0x00000000001895f1 : mov esp, esi ; jmp rdx
0x00000000001895f5 : mov esp, esi ; jmp rdx
0x000000000009f47d : mov esp, esi ; sub rsp, 8 ; call 0x8b728
0x000000000007d8a8 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000fe171 : mov gs, word ptr [rax + rax] ; ret
0x000000000011f733 : mov gs, word ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x0000000000094d5e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf4a7 : mov qword ptr [r14], rax ; mov rdi, rbx ; call 0x8b728
0x000000000009fb90 : mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a02e3 : mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a0a30 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000123f07 : mov qword ptr [r9], r10 ; ret
0x0000000000123fa3 : mov qword ptr [r9], rcx ; ret
0x0000000000123f77 : mov qword ptr [r9], rdi ; ret
0x0000000000071c38 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c78 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077468 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000071c3c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c7c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072c76 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007bb19 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000fce53 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000123d09 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000072164 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000070750 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000084115 : mov qword ptr [rax], rdi ; ret
0x00000000000720a4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002d9d2 : mov qword ptr [rax], rdx ; ret
0x00000000000ff255 : mov qword ptr [rax], rdx ; ret
0x000000000013821f : mov qword ptr [rax], rdx ; ret
0x0000000000072ef0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000d3113 : mov qword ptr [rbp - 0x2888], rsi ; sub r10, rax ; jmp 0xd313c
0x000000000004d64d : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000023655 : mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a6
0x0000000000114702 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000003a5f9 : mov qword ptr [rbp], rdx ; call rax
0x000000000002a6d0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078456 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000001435f5 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000789b8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001435ad : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000076ba4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c218 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000e83ba : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000077494 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000008926d : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000fc1f0 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007b20a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000078326 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007b429 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007b61b : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008964c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001025d1 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000143820 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013826e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000001382bd : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000891b5 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000891b4 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000891b3 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000896d2 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000896fc : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008926a : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000132313 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x0000000000135082 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000002057c : mov qword ptr [rcx + 0x968], rax ; ret
0x0000000000168d53 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000016d1a3 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d63 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000016d1b3 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d73 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000016d1c3 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d83 : mov qword ptr [rcx + 8], rdx ; ret
0x000000000016d1d3 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000481ca : mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000d6ce1 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000075663 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000168d10 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000016d160 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168d30 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000016d180 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d40 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000016d190 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d50 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000016d1a0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d60 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000016d1b0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d70 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000016d1c0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d80 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000016d1d0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168d20 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000016d170 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168d00 : mov qword ptr [rcx], rdx ; ret
0x000000000016d150 : mov qword ptr [rcx], rdx ; ret
0x00000000000f68ba : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000048b3e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000a757c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a83cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a5f0c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a8fec : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9abc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a5eec : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a6bbc : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8fcc : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9a9c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9e3c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a6bdf : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a5f4f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6c1f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a902f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9aff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5f6f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6c3f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a904f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9b1f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f30 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a6c00 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9010 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9ae0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007b132 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007b131 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077836 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000077bb6 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013bde5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000010e749 : mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10e71d
0x000000000013591b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x0000000000094cd0 : mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000001358d3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007b162 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007eaca : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036048 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000f5f1d : mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000a753c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a838c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a5eac : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a6b7c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a8f8c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9a5c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9dfc : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a755c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a83ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a5ecc : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6b9c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8fac : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9a7c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9e1c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015b5f7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015e0c7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160be7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b587 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015e057 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160b77 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b517 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015dfe7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160b07 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b4a7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015df77 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160a97 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a743a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a827a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015b437 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015df07 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160a27 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5dfa : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6aca : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dc3 : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a85d3 : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a8eda : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a99aa : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a9cea : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a745a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a829a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015b3c7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015de97 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001609b7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e0a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6ada : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6dd3 : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a85e3 : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a8eea : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a99ba : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a9d0a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a747a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a82ba : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015b357 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015de27 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000160947 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e1a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a6aea : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a8efa : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a99ca : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a9d2a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ff237 : mov qword ptr [rdi + 8], 0 ; ret
0x00000000000482f3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000049ed3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000048ac3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007b136 : mov qword ptr [rdi + 8], rax ; ret
0x000000000007b166 : mov qword ptr [rdi + 8], rax ; ret
0x000000000007b165 : mov qword ptr [rdi + 8], rax ; ret
0x000000000013bf64 : mov qword ptr [rdi + 8], rax ; ret
0x000000000013c51c : mov qword ptr [rdi + 8], rax ; ret
0x000000000003ac93 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x0000000000077f95 : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac84 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ff227 : mov qword ptr [rdi + 8], rsi ; ret
0x0000000000036471 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036761 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000124087 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000008f31d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000014db40 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000014e030 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000014e3d0 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000001528b4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015292a : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155284 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001552fa : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000157c54 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000157cca : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001528f2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152968 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001529a0 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001529c8 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001529f0 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152a08 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001552c2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155338 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155370 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155398 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553c0 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553d8 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157c92 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d08 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d40 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d68 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d90 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157da8 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048a2e : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000152c3b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152c8b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152cd1 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d09 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d47 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d6f : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d97 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152daf : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152dc7 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015560b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015565b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556a1 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556d9 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155717 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015573f : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155767 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015577f : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155797 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157fdb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015802b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158071 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001580a9 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001580e7 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015810f : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158137 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015814f : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158167 : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae07 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d8d7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001603f7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152e1b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e6b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eb1 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152ee9 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f27 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f4f : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f77 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f8f : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152fa7 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001557eb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015583b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155881 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558b9 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558f7 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015591f : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155947 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015595f : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155977 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001581bb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015820b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158251 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158289 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582c7 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582ef : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158317 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015832f : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158347 : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad87 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d857 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160377 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015300b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153053 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153091 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001530c9 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153107 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015312f : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153157 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015316f : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153187 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001559db : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a23 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a61 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a99 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155ad7 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155aff : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b27 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b3f : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b57 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583ab : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583f3 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158431 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158469 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584a7 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584cf : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584f7 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015850f : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158527 : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad07 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d7d7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001602f7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001531dc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153224 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153262 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015329e : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001532d8 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153310 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153338 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153360 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153378 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bac : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bf4 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c32 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c6e : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ca8 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ce0 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d08 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d30 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d48 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015857c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585c4 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158602 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015863e : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158678 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586b0 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586d8 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158700 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158718 : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ac78 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d748 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000160268 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001533dc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153424 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153462 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015349a : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001534d8 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153510 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153538 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153560 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153578 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155dac : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155df4 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e32 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e6a : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ea8 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ee0 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f08 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f30 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f48 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015877c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001587c4 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158802 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015883a : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158878 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588b0 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588d8 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158900 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158918 : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015abe8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d6b8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001601d8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001535dc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153624 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153662 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015369a : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001536d8 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153710 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153738 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153760 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153778 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155fac : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ff4 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156032 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015606a : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560a8 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560e0 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156108 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156130 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156148 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015897c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001589c4 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a02 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a3a : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a78 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158ab0 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158ad8 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b00 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b18 : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ab58 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d628 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000160148 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a6d60 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a8570 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000489b9 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000001528b8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015292e : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155288 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000001552fe : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000157c58 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000157cce : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015ab5c : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015abec : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015abeb : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015ac7c : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015ac7b : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d62c : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d6bc : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d6bb : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d74c : mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d74b : mov qword ptr [rdi - 8], rcx ; ret
0x000000000016014c : mov qword ptr [rdi - 8], rcx ; ret
0x00000000001601dc : mov qword ptr [rdi - 8], rcx ; ret
0x00000000001601db : mov qword ptr [rdi - 8], rcx ; ret
0x000000000016026c : mov qword ptr [rdi - 8], rcx ; ret
0x000000000016026b : mov qword ptr [rdi - 8], rcx ; ret
0x00000000001528f6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015296c : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001529a4 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001529cc : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001529f4 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152a0c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152a24 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001531e0 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001531df : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001531de : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153228 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153227 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153226 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153266 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153265 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153264 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001532a2 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001532a1 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001532a0 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001532dc : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001532db : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001532da : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153314 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153313 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153312 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015333c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015333b : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015333a : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153364 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153363 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153362 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015337c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015337b : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015337a : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001533e0 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001533df : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001533de : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153428 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153427 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153426 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153466 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153465 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153464 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015349e : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015349d : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015349c : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001534dc : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001534db : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001534da : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153514 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153513 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153512 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015353c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015353b : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015353a : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153564 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153563 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153562 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015357c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015357b : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015357a : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001535e0 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153628 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153666 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015369e : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001536dc : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153714 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015373c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153764 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015377c : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001552c6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015533c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155374 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015539c : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553c4 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553dc : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553f4 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bb0 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155baf : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bae : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bf8 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bf7 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bf6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c36 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c35 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c34 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c72 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c71 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c70 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155cac : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155cab : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155caa : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ce4 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ce3 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ce2 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d0c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d0b : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d0a : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d34 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d33 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d32 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d4c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d4b : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d4a : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155db0 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155daf : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155dae : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155df8 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155df7 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155df6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e36 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e35 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e34 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e6e : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e6d : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e6c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155eac : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155eab : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155eaa : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ee4 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ee3 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ee2 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f0c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f0b : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f0a : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f34 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f33 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f32 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f4c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f4b : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155f4a : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155fb0 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ff8 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156036 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015606e : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560ac : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001560e4 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015610c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156134 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015614c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157c96 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d0c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d44 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d6c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157d94 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157dac : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157dc4 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158580 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015857f : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015857e : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585c8 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585c7 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585c6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158606 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158605 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158604 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158642 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158641 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158640 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015867c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015867b : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015867a : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586b4 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586b3 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586b2 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586dc : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586db : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586da : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158704 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158703 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158702 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015871c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015871b : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015871a : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158780 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015877f : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015877e : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001587c8 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001587c7 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001587c6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158806 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158805 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158804 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015883e : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015883d : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015883c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015887c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015887b : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015887a : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588b4 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588b3 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588b2 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588dc : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588db : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001588da : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158904 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158903 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158902 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015891c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015891b : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015891a : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158980 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001589c8 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a06 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a3e : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158a7c : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158ab4 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158adc : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b04 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158b1c : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015af04 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015d9d4 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001604f4 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152a6b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015543b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e0b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b67 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152b8f : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152bb7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000155537 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015555f : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000155587 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f07 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f2f : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f57 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152ab3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152af1 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b29 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152bcf : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152be7 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155483 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554c1 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554f9 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015559f : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001555b7 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e53 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e91 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157ec9 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f6f : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f87 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae87 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d957 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160477 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000054d85 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000094a96 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000048988 : mov qword ptr [rdi], r9 ; ret
0x0000000000048a92 : mov qword ptr [rdi], r9 ; ret
0x00000000000ff224 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a60a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000003655a : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003684a : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003ac97 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a73c6 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6a86 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a5dd6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6aa6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a8eb6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9986 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a5de6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6ab6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a8ec6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a9996 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a5df7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6ac7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a8ed7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a99a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5e07 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6ad7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a8ee7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a99b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5e17 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a6ae7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a8ef7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a99c7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008f31a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000a5dc7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a6a97 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a8ea7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a9977 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001f9c2 : mov qword ptr [rdi], rcx ; ret
0x0000000000094a18 : mov qword ptr [rdi], rcx ; ret
0x00000000000a5db6 : mov qword ptr [rdi], rcx ; ret
0x00000000000a8e96 : mov qword ptr [rdi], rcx ; ret
0x00000000000a9966 : mov qword ptr [rdi], rcx ; ret
0x000000000015b35b : mov qword ptr [rdi], rcx ; ret
0x000000000015b3cb : mov qword ptr [rdi], rcx ; ret
0x000000000015b43b : mov qword ptr [rdi], rcx ; ret
0x000000000015b4ab : mov qword ptr [rdi], rcx ; ret
0x000000000015b51b : mov qword ptr [rdi], rcx ; ret
0x000000000015b58b : mov qword ptr [rdi], rcx ; ret
0x000000000015b5fb : mov qword ptr [rdi], rcx ; ret
0x000000000015de2b : mov qword ptr [rdi], rcx ; ret
0x000000000015de9b : mov qword ptr [rdi], rcx ; ret
0x000000000015df0b : mov qword ptr [rdi], rcx ; ret
0x000000000015df7b : mov qword ptr [rdi], rcx ; ret
0x000000000015dfeb : mov qword ptr [rdi], rcx ; ret
0x000000000015e05b : mov qword ptr [rdi], rcx ; ret
0x000000000015e0cb : mov qword ptr [rdi], rcx ; ret
0x000000000016094b : mov qword ptr [rdi], rcx ; ret
0x00000000001609bb : mov qword ptr [rdi], rcx ; ret
0x0000000000160a2b : mov qword ptr [rdi], rcx ; ret
0x0000000000160a9b : mov qword ptr [rdi], rcx ; ret
0x0000000000160b0b : mov qword ptr [rdi], rcx ; ret
0x0000000000160b7b : mov qword ptr [rdi], rcx ; ret
0x0000000000160beb : mov qword ptr [rdi], rcx ; ret
0x00000000000a73b3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81e3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6d80 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a8590 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6da0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a85b0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6db0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a85c0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dc0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a85d0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dd0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a85e0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d90 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a85a0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009eddf : mov qword ptr [rdi], rdx ; ret
0x000000000009edee : mov qword ptr [rdi], rdx ; ret
0x000000000009ee5e : mov qword ptr [rdi], rdx ; ret
0x000000000009ee6e : mov qword ptr [rdi], rdx ; ret
0x000000000009ee74 : mov qword ptr [rdi], rdx ; ret
0x00000000000a5da3 : mov qword ptr [rdi], rdx ; ret
0x00000000000a6a73 : mov qword ptr [rdi], rdx ; ret
0x00000000000a6d70 : mov qword ptr [rdi], rdx ; ret
0x00000000000a8580 : mov qword ptr [rdi], rdx ; ret
0x00000000000a8e83 : mov qword ptr [rdi], rdx ; ret
0x00000000000a9953 : mov qword ptr [rdi], rdx ; ret
0x000000000015b663 : mov qword ptr [rdi], rdx ; ret
0x000000000015e133 : mov qword ptr [rdi], rdx ; ret
0x0000000000160c53 : mov qword ptr [rdi], rdx ; ret
0x00000000000a9c53 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009fb8d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a02e0 : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a0a2d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014db3d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000014e02d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000014e3cd : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000004a0a2 : mov qword ptr [rdi], rsi ; ret
0x000000000006dcb6 : mov qword ptr [rdx + 0x130], rcx ; ret
0x00000000000784b4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000000710cd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071273 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000012e7ef : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012e7cb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012e7cf : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000016b10a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000166d7a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000016b12a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000166d9a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000016b14a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000166dba : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000168f42 : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000006b413 : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016afda : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000166caa : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000016e3cf : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000016e41a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000132330 : mov qword ptr [rdx + 8], rdi ; ret
0x00000000001350a0 : mov qword ptr [rdx + 8], rdi ; ret
0x00000000001350b8 : mov qword ptr [rdx + 8], rdi ; ret
0x00000000001358f0 : mov qword ptr [rdx + 8], rdi ; ret
0x0000000000135908 : mov qword ptr [rdx + 8], rdi ; ret
0x0000000000135938 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000016af83 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001323fa : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013242a : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013245a : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001350f7 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013511f : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000135147 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013597d : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001359be : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001359f6 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000166c53 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000168fde : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016e3b1 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016e3f3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002e19c : mov qword ptr [rdx], rax ; ret
0x000000000007c851 : mov qword ptr [rdx], rax ; ret
0x00000000000762de : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000071f85 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009ed24 : mov qword ptr [rdx], rcx ; ret
0x000000000009ed36 : mov qword ptr [rdx], rcx ; ret
0x000000000009ed4a : mov qword ptr [rdx], rcx ; ret
0x00000000000e7afa : mov qword ptr [rdx], rdi ; ret
0x000000000013232d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000013509d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001350b5 : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001358ed : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000135905 : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000135935 : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000115ae7 : mov qword ptr [rip + 0x2b2632], rax ; pop rbp ; ret
0x000000000010955f : mov qword ptr [rip + 0x2bacda], rbx ; pop rbx ; ret
0x00000000000fe4f4 : mov qword ptr [rip + 0x2c72a5], rax ; mov rdx, rax ; jmp 0xfe498
0x00000000000e88a3 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000012d90e : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012d92a : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012d962 : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012d961 : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012d960 : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012d9be : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000132230 : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000134fb7 : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000134fb6 : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000134fb5 : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000135857 : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b295 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003ac03 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000077f35 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x0000000000077ff5 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000fc1d6 : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000f5e8e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f67db : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e8886 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000012d8de : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e889f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000048033 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007783a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000077bba : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001235be : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000123052 : mov qword ptr [rsi], rdi ; ret
0x0000000000119360 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000081a67 : mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000081950 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000008162e : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000819aa : mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bfac : mov qword ptr [rsp + 0x28], r9 ; call 0x138237
0x0000000000100ee9 : mov qword ptr [rsp + 0x28], rax ; call 0xcd1f7
0x00000000000335d8 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x0000000000033631 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x0000000000033675 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x00000000000e1c97 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000000bc207 : mov qword ptr [rsp + 0xb8], r14 ; call r12
0x00000000000f35be : mov qword ptr [rsp + 8], r13 ; call 0x1f8af
0x000000000008921f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000892d7 : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000102d45 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000013c2eb : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000008958f : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x000000000012a512 : mov qword ptr [rsp], rcx ; call r12
0x000000000013821e : mov qword ptr fs:[rax], rdx ; ret
0x000000000003a5f8 : mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013826d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001382bc : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002e19b : mov qword ptr fs:[rdx], rax ; ret
0x000000000014db3c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000014e02c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000014e3cc : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000133e29 : mov r10d, 0x854dffee ; dec dword ptr [rax - 0x77] ; ret
0x000000000018359d : mov r10d, 0xcac982a4 ; call 0xffffffffaedad41f
0x000000000012674e : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x00000000000203f7 : mov r12, rax ; call 0xaab89
0x00000000000cf509 : mov r12, rdi ; je 0xcf52a ; call 0x8b727
0x00000000000d5193 : mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd51be
0x000000000009f47c : mov r12, rsi ; sub rsp, 8 ; call 0x8b729
0x000000000007d8a7 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000067492 : mov r12d, 2 ; jmp 0x63704
0x000000000013856b : mov r12d, dword ptr [rax] ; jmp 0x13857b
0x0000000000102833 : mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000173653 : mov r13, r14 ; call 0x1f8ad
0x00000000000aebd7 : mov r13, r15 ; setne dl ; jmp 0xaebed
0x00000000000b14f8 : mov r13, r15 ; setne dl ; jmp 0xb150d
0x00000000000b3caf : mov r13, r15 ; setne dl ; jmp 0xb3ccd
0x000000000007d8ac : mov r13, rdx ; call qword ptr [r15]
0x000000000012a614 : mov r13, rsp ; call r15
0x0000000000065978 : mov r13d, eax ; jmp 0x653d6
0x00000000001031d8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000001335b3 : mov r13d, esi ; call 0x1f8a5
0x00000000000ff2c6 : mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000ebf5d : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002185a : mov r9, r14 ; call rbx
0x00000000000ad91c : mov r9, r15 ; call rbx
0x00000000000ba567 : mov r9, r15 ; call rbx
0x00000000000cbfab : mov rax, -0xe ; ret
0x0000000000078330 : mov rax, -1 ; pop rbx ; ret
0x00000000000353e6 : mov rax, -1 ; ret
0x00000000000361de : mov rax, -1 ; ret
0x000000000006dda8 : mov rax, -1 ; ret
0x000000000006f926 : mov rax, -1 ; ret
0x00000000000791c2 : mov rax, -1 ; ret
0x000000000007bf40 : mov rax, -1 ; ret
0x000000000007cab0 : mov rax, -1 ; ret
0x000000000007cad0 : mov rax, -1 ; ret
0x00000000000fcf2e : mov rax, -1 ; ret
0x00000000000fd064 : mov rax, -1 ; ret
0x00000000000fd114 : mov rax, -1 ; ret
0x00000000000fde6c : mov rax, -1 ; ret
0x000000000010807e : mov rax, -1 ; ret
0x000000000010827c : mov rax, -1 ; ret
0x00000000001083fc : mov rax, -1 ; ret
0x00000000001175bc : mov rax, -1 ; ret
0x000000000011766c : mov rax, -1 ; ret
0x00000000001402b8 : mov rax, -1 ; ret
0x00000000000abf70 : mov rax, 1 ; ret
0x00000000000abf80 : mov rax, 2 ; ret
0x00000000000abf90 : mov rax, 3 ; ret
0x00000000000abfa0 : mov rax, 4 ; ret
0x00000000000abfb0 : mov rax, 5 ; ret
0x00000000000abfc0 : mov rax, 6 ; ret
0x00000000000abfd0 : mov rax, 7 ; ret
0x0000000000112b94 : mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b64
0x0000000000106278 : mov rax, qword ptr [rax + 0x110] ; ret
0x000000000014351e : mov rax, qword ptr [rax + 0x130] ; jmp rax
0x000000000014354f : mov rax, qword ptr [rax + 0x130] ; jmp rax
0x0000000000109c1f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000001099cf : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000072221 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000746b2 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007b2a3 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072069 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000007b3f3 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000001149d8 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b707 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb4c : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb8c : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000134fb3 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb70 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007ba0b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013bb5c : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013bb9c : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000074f73 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000074f72 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000135853 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000106270 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000013aab4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000106268 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002b01e : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2b032 ; call rax
0x000000000002df14 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002df13 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002da1e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000013aaa9 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cb6b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003a722 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003a7f2 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001289f8 : mov rax, qword ptr [rax] ; ret
0x000000000007e06e : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e080 ; call rax
0x0000000000085565 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x85577 ; call rax
0x000000000006960c : mov rax, qword ptr [rbp - 0x448] ; jmp 0x65866
0x00000000001031db : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000222c0 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000077490 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000138239 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x138251 ; pop rbx ; ret
0x0000000000166c50 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000168fdb : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016e3ae : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016e3f0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000cc57c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcc593 ; call rax
0x000000000013c1e2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013bd80 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c8850 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000173f77 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x173f90 ; call rax
0x000000000012d926 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000774d0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d95e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f70 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb30 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013b238 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b378 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e710 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9c0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aa30 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aae0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae40 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aeb0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af60 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013afe0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b020 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b090 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013bb48 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb88 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb58 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013bb98 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013aab0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013aaa5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013ab90 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ac50 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ad10 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013add0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c4a6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000007c84e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000001151a4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002deb2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012ddb7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000012ddb7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000e7af7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007c840 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c841 ; ret
0x0000000000140f23 : mov rax, qword ptr [rip + 0x2844e6] ; call qword ptr [rax]
0x0000000000140910 : mov rax, qword ptr [rip + 0x284af9] ; call qword ptr [rax]
0x0000000000120fd0 : mov rax, qword ptr [rip + 0x2a48a1] ; ret
0x0000000000081a84 : mov rax, qword ptr [rip + 0x342345] ; xor edi, edi ; call qword ptr [rax]
0x000000000007cb10 : mov rax, qword ptr [rip + 0x348a09] ; ret
0x0000000000029c90 : mov rax, qword ptr [rip + 0x39bc59] ; ret
0x0000000000021a50 : mov rax, qword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a40 : mov rax, qword ptr [rip + 0x3a78d9] ; ret
0x000000000002cb48 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000c8b0d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000c92b3 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001430dd : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000025f33 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000102e33 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f0036 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf007a
0x0000000000024369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000025112 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000026cac : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000026cab : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027c00 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000038fe6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000003b038 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b065 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b088 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b0b5 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000006de35 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000001024c5 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000140d1e : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000fde4f : mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000010a3a2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a403 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001289f7 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000094f89 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f09b : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f130 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c479 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c4a3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006cb89 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006cc0b : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000779c6 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a48 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d17a0 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d18a0 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e2b4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117844 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008308c : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004a806 : mov rax, r8 ; pop rbx ; ret
0x0000000000082f14 : mov rax, r8 ; pop rbx ; ret
0x000000000007df36 : mov rax, r8 ; ret
0x000000000014dc54 : mov rax, r8 ; ret
0x000000000014e135 : mov rax, r8 ; ret
0x000000000014e4d5 : mov rax, r8 ; ret
0x0000000000079129 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d8ff : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006eff8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070e58 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006efcb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070e2b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077930 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f4ae : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117066 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001170bb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001173fd : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117480 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011851d : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001185a3 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006db95 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dc07 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ee77 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006eec7 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070835 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070834 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000708aa : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f822d : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ebc1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ed80 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000079a9c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e76 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac2bf : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb6ef : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012403a : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9123 : mov rax, rbx ; call rax
0x0000000000105e2e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a835 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a85b : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a8dd : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000757db : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000076417 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f3c9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c2c : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c61 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c98 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e834a : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e836f : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dfe9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077c8a : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a362 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d399 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abce1 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac675 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcecb : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcefd : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103158 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d3ec : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127ab3 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127ab2 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127af3 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326aa : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006abcf : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006abe1 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000077d3b : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000094e97 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000096c0f : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000096c26 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ff6e0 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaae : mov rax, rbx ; pop rbx ; ret
0x000000000004705a : mov rax, rbx ; pop rbx ; ret
0x0000000000047067 : mov rax, rbx ; pop rbx ; ret
0x0000000000047074 : mov rax, rbx ; pop rbx ; ret
0x000000000006acc3 : mov rax, rbx ; pop rbx ; ret
0x000000000007845a : mov rax, rbx ; pop rbx ; ret
0x00000000000844e2 : mov rax, rbx ; pop rbx ; ret
0x00000000000ac21a : mov rax, rbx ; pop rbx ; ret
0x00000000000ac255 : mov rax, rbx ; pop rbx ; ret
0x00000000000aca3a : mov rax, rbx ; pop rbx ; ret
0x00000000000fca42 : mov rax, rbx ; pop rbx ; ret
0x00000000000fca7d : mov rax, rbx ; pop rbx ; ret
0x00000000000fca99 : mov rax, rbx ; pop rbx ; ret
0x00000000000fcae2 : mov rax, rbx ; pop rbx ; ret
0x00000000000fdc69 : mov rax, rbx ; pop rbx ; ret
0x0000000000101a63 : mov rax, rbx ; pop rbx ; ret
0x0000000000105e6f : mov rax, rbx ; pop rbx ; ret
0x00000000001407e1 : mov rax, rbx ; pop rbx ; ret
0x0000000000101ff9 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000001194a8 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000011d171 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000003a68b : mov rax, rcx ; or rax, rdx ; ret
0x0000000000033ea6 : mov rax, rcx ; ret
0x0000000000033eb0 : mov rax, rcx ; ret
0x0000000000082421 : mov rax, rcx ; ret
0x0000000000116470 : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000116576 : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000117b00 : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000117bb8 : mov rax, rdi ; add rsp, 8 ; ret
0x000000000003a6a0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000003a6b0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009ea16 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009f514 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000097359 : mov rax, rdi ; pop rbx ; ret
0x0000000000097358 : mov rax, rdi ; pop rbx ; ret
0x000000000004a60d : mov rax, rdi ; ret
0x000000000007cb40 : mov rax, rdi ; ret
0x0000000000089a78 : mov rax, rdi ; ret
0x000000000008b278 : mov rax, rdi ; ret
0x000000000008f42b : mov rax, rdi ; ret
0x000000000008f4d9 : mov rax, rdi ; ret
0x000000000008f515 : mov rax, rdi ; ret
0x000000000008f6ff : mov rax, rdi ; ret
0x000000000008f7fe : mov rax, rdi ; ret
0x00000000000963d0 : mov rax, rdi ; ret
0x000000000009e8e8 : mov rax, rdi ; ret
0x000000000009e902 : mov rax, rdi ; ret
0x000000000009e917 : mov rax, rdi ; ret
0x000000000009e928 : mov rax, rdi ; ret
0x000000000009e93b : mov rax, rdi ; ret
0x000000000009e94b : mov rax, rdi ; ret
0x000000000009e95e : mov rax, rdi ; ret
0x000000000009e97c : mov rax, rdi ; ret
0x000000000009e9a6 : mov rax, rdi ; ret
0x000000000009e9b6 : mov rax, rdi ; ret
0x000000000009e9c3 : mov rax, rdi ; ret
0x000000000009e9d3 : mov rax, rdi ; ret
0x000000000009e9e7 : mov rax, rdi ; ret
0x000000000009e9f2 : mov rax, rdi ; ret
0x000000000009ea06 : mov rax, rdi ; ret
0x000000000009ea43 : mov rax, rdi ; ret
0x000000000009ec70 : mov rax, rdi ; ret
0x000000000009ecd0 : mov rax, rdi ; ret
0x000000000009f85e : mov rax, rdi ; ret
0x00000000000a2a1a : mov rax, rdi ; ret
0x00000000000a2a71 : mov rax, rdi ; ret
0x00000000000a2a89 : mov rax, rdi ; ret
0x00000000000a2a9b : mov rax, rdi ; ret
0x00000000000a2ab1 : mov rax, rdi ; ret
0x00000000000a2ac9 : mov rax, rdi ; ret
0x00000000000a2adf : mov rax, rdi ; ret
0x00000000000a2b01 : mov rax, rdi ; ret
0x00000000000a2b1f : mov rax, rdi ; ret
0x00000000000a2b3d : mov rax, rdi ; ret
0x00000000000a2b63 : mov rax, rdi ; ret
0x00000000000a2b85 : mov rax, rdi ; ret
0x00000000000a2ba3 : mov rax, rdi ; ret
0x00000000000a2bc3 : mov rax, rdi ; ret
0x00000000000a2be7 : mov rax, rdi ; ret
0x00000000000a2c07 : mov rax, rdi ; ret
0x00000000000a2c27 : mov rax, rdi ; ret
0x00000000000a2c47 : mov rax, rdi ; ret
0x00000000000a53ea : mov rax, rdi ; ret
0x00000000000a5441 : mov rax, rdi ; ret
0x00000000000a5459 : mov rax, rdi ; ret
0x00000000000a546b : mov rax, rdi ; ret
0x00000000000a5481 : mov rax, rdi ; ret
0x00000000000a5499 : mov rax, rdi ; ret
0x00000000000a54af : mov rax, rdi ; ret
0x00000000000a54d1 : mov rax, rdi ; ret
0x00000000000a54ef : mov rax, rdi ; ret
0x00000000000a550d : mov rax, rdi ; ret
0x00000000000a5533 : mov rax, rdi ; ret
0x00000000000a5555 : mov rax, rdi ; ret
0x00000000000a5573 : mov rax, rdi ; ret
0x00000000000a5593 : mov rax, rdi ; ret
0x00000000000a55b7 : mov rax, rdi ; ret
0x00000000000a55d7 : mov rax, rdi ; ret
0x00000000000a55f7 : mov rax, rdi ; ret
0x00000000000a5617 : mov rax, rdi ; ret
0x00000000000a56d4 : mov rax, rdi ; ret
0x00000000000a5777 : mov rax, rdi ; ret
0x00000000000a57f3 : mov rax, rdi ; ret
0x00000000000a585d : mov rax, rdi ; ret
0x00000000000a5870 : mov rax, rdi ; ret
0x00000000000a590f : mov rax, rdi ; ret
0x00000000000a59c2 : mov rax, rdi ; ret
0x00000000000a6fd0 : mov rax, rdi ; ret
0x00000000000a8140 : mov rax, rdi ; ret
0x00000000000a87e0 : mov rax, rdi ; ret
0x00000000000aa217 : mov rax, rdi ; ret
0x00000000000ac73a : mov rax, rdi ; ret
0x00000000000ac830 : mov rax, rdi ; ret
0x00000000001179c0 : mov rax, rdi ; ret
0x0000000000166c56 : mov rax, rdi ; ret
0x0000000000166cae : mov rax, rdi ; ret
0x0000000000166cc4 : mov rax, rdi ; ret
0x0000000000166cd6 : mov rax, rdi ; ret
0x0000000000166cec : mov rax, rdi ; ret
0x0000000000166cf4 : mov rax, rdi ; ret
0x0000000000166d0a : mov rax, rdi ; ret
0x0000000000166d1c : mov rax, rdi ; ret
0x0000000000166d2a : mov rax, rdi ; ret
0x0000000000166d3c : mov rax, rdi ; ret
0x0000000000166d4c : mov rax, rdi ; ret
0x0000000000166d5c : mov rax, rdi ; ret
0x0000000000166d6c : mov rax, rdi ; ret
0x0000000000166d7e : mov rax, rdi ; ret
0x0000000000166d9e : mov rax, rdi ; ret
0x0000000000166dbe : mov rax, rdi ; ret
0x0000000000168f46 : mov rax, rdi ; ret
0x0000000000168fe1 : mov rax, rdi ; ret
0x000000000016e3b4 : mov rax, rdi ; ret
0x000000000016e3d3 : mov rax, rdi ; ret
0x000000000016e3e4 : mov rax, rdi ; ret
0x000000000016e3f6 : mov rax, rdi ; ret
0x000000000016e40c : mov rax, rdi ; ret
0x000000000016e41e : mov rax, rdi ; ret
0x0000000000119099 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000bb887 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000bb886 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000841ec : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085900 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d724 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bfe1b : mov rax, rdx ; add rsp, 8 ; ret
0x000000000014109c : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000097965 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x000000000010eb6b : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084ba6 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008672f : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007db2b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000007db6e : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000490b4 : mov rax, rdx ; pop rbx ; ret
0x000000000006e53b : mov rax, rdx ; pop rbx ; ret
0x0000000000076fbb : mov rax, rdx ; pop rbx ; ret
0x00000000000aace0 : mov rax, rdx ; pop rbx ; ret
0x00000000000484c9 : mov rax, rdx ; ret
0x0000000000048b81 : mov rax, rdx ; ret
0x000000000008f968 : mov rax, rdx ; ret
0x00000000000ada8d : mov rax, rdx ; ret
0x00000000000bfe37 : mov rax, rdx ; ret
0x0000000000168eb0 : mov rax, rdx ; ret
0x000000000016d300 : mov rax, rdx ; ret
0x00000000000c9764 : mov rax, rsi ; add rsp, 8 ; ret
0x00000000000caf34 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000010b6d4 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000010d084 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000011a8a1 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000011b231 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000011bbd4 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000011cb04 : mov rax, rsi ; add rsp, 8 ; ret
0x0000000000120aa4 : mov rax, rsi ; add rsp, 8 ; ret
0x0000000000131844 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000004a5bd : mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000006fc83 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000c8502 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fa17 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fa63 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1d3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011ce41 : mov rax, rsi ; pop rbx ; ret
0x000000000004a6f3 : mov rax, rsi ; ret
0x000000000004a777 : mov rax, rsi ; ret
0x0000000000172afa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00000000000352ec : mov rbp, r9 ; nop ; jmp rdx
0x000000000011907c : mov rbp, r9 ; nop ; jmp rdx
0x0000000000102836 : mov rbp, rax ; call rax
0x00000000001159d3 : mov rbp, rsp ; pop rbp ; ret
0x00000000001153e1 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000115539 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000001335c0 : mov rbx, rax ; call 0x1f8a5
0x0000000000085960 : mov rbx, rax ; call 0x81b85
0x00000000001035e5 : mov rbx, rax ; call rax
0x000000000012e2aa : mov rbx, rax ; jne 0x12e24a ; xor eax, eax ; pop rbx ; ret
0x00000000000fca96 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000037306 : mov rbx, rax ; mov rdi, r12 ; call r15
0x0000000000173603 : mov rbx, rbp ; call 0x1f8ad
0x000000000002c375 : mov rbx, rdi ; test rax, rax ; je 0x2c387 ; call rax
0x000000000012bf35 : mov rbx, rsi ; sub rsp, 8 ; call 0x138239
0x000000000002b38f : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2b3a3 ; call rcx
0x000000000012b796 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000134028 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a5db0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8e90 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a9960 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000135bbc : mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132784 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135424 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013258c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000013525b : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012d51c : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012d62a : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012aa20 : mov rcx, r13 ; call rbx
0x0000000000075290 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad669 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x000000000012a2ac : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000012a31c : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000009ed33 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009ed45 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000014dc70 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e150 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e4f0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014dc73 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e153 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e4f3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000102d8f : mov rdi, qword ptr [r12] ; call rbx
0x00000000001046c7 : mov rdi, qword ptr [r12] ; call rbx
0x000000000010490b : mov rdi, qword ptr [r12] ; call rbx
0x00000000000e35a5 : mov rdi, qword ptr [r13 + 0x20] ; call 0x1f8ae
0x00000000000e35ae : mov rdi, qword ptr [r13 + 0x28] ; call 0x1f8ae
0x0000000000038f6c : mov rdi, qword ptr [r13] ; call r14
0x0000000000102999 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000102ac0 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000102c03 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000102d73 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000104591 : mov rdi, qword ptr [r13] ; call rbx
0x00000000001046b9 : mov rdi, qword ptr [r13] ; call rbx
0x00000000001047fc : mov rdi, qword ptr [r13] ; call rbx
0x00000000001048fd : mov rdi, qword ptr [r13] ; call rbx
0x0000000000102906 : mov rdi, qword ptr [r14] ; call rbx
0x000000000010298c : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102a2d : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102ab3 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102b70 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102bf6 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102c97 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102d66 : mov rdi, qword ptr [r14] ; call rbx
0x00000000001044fe : mov rdi, qword ptr [r14] ; call rbx
0x0000000000104584 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000104626 : mov rdi, qword ptr [r14] ; call rbx
0x00000000001046ac : mov rdi, qword ptr [r14] ; call rbx
0x0000000000104769 : mov rdi, qword ptr [r14] ; call rbx
0x00000000001047ef : mov rdi, qword ptr [r14] ; call rbx
0x0000000000104891 : mov rdi, qword ptr [r14] ; call rbx
0x00000000001048f0 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102947 : mov rdi, qword ptr [r15] ; call rbx
0x000000000010297f : mov rdi, qword ptr [r15] ; call rbx
0x00000000001029e8 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102a20 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102a6e : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102aa6 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102b2b : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102b63 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102bb1 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102be9 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102c52 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102c8a : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102cdc : mov rdi, qword ptr [r15] ; call rbx
0x0000000000102d59 : mov rdi, qword ptr [r15] ; call rbx
0x00000000001044b9 : mov rdi, qword ptr [r15] ; call rbx
0x00000000001044f1 : mov rdi, qword ptr [r15] ; call rbx
0x000000000010453f : mov rdi, qword ptr [r15] ; call rbx
0x0000000000104577 : mov rdi, qword ptr [r15] ; call rbx
0x00000000001045e1 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000104619 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000104667 : mov rdi, qword ptr [r15] ; call rbx
0x000000000010469f : mov rdi, qword ptr [r15] ; call rbx
0x0000000000104724 : mov rdi, qword ptr [r15] ; call rbx
0x000000000010475c : mov rdi, qword ptr [r15] ; call rbx
0x00000000001047aa : mov rdi, qword ptr [r15] ; call rbx
0x00000000001047e2 : mov rdi, qword ptr [r15] ; call rbx
0x000000000010484c : mov rdi, qword ptr [r15] ; call rbx
0x0000000000104884 : mov rdi, qword ptr [r15] ; call rbx
0x00000000001048d2 : mov rdi, qword ptr [r15] ; call rbx
0x00000000000bb020 : mov rdi, qword ptr [rax] ; call r14
0x0000000000102d42 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000cf304 : mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000000564ad : mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000ebc4f : mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00000000000ec326 : mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00000000000ec429 : mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00000000000acb04 : mov rdi, qword ptr [rbp] ; call r12
0x00000000000acb03 : mov rdi, qword ptr [rbp] ; call r12
0x0000000000102ace : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000102d81 : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000104919 : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000047bb9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006ddd5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006de27 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006dd99 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006de69 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000072fe7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb5
0x0000000000113323 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000143698 : mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8af
0x0000000000024070 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x0000000000024a40 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000f360d : mov rdi, qword ptr [rsp + 0x20] ; call 0x1f8af
0x0000000000028ab9 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e50 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000023ef3 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000003731d : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000024804 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000282ae : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000282ad : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000029186 : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000029185 : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b57 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000025b56 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028047 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028046 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028f17 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028f16 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000026867 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000026866 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000012d538 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00000000000bbdaf : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bbdae : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bc269 : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bc268 : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x000000000013b5ee : mov rdi, r12 ; call qword ptr [rax]
0x000000000013b732 : mov rdi, r12 ; call qword ptr [rax]
0x0000000000037309 : mov rdi, r12 ; call r15
0x0000000000037361 : mov rdi, r12 ; call r15
0x0000000000038383 : mov rdi, r12 ; call r15
0x0000000000132c4c : mov rdi, r12 ; call rax
0x00000000001356bd : mov rdi, r12 ; call rax
0x0000000000074fe8 : mov rdi, r12 ; call rbx
0x00000000000750c4 : mov rdi, r12 ; call rbx
0x00000000000751a7 : mov rdi, r12 ; call rbx
0x00000000000ad81f : mov rdi, r12 ; call rbx
0x00000000000ba6f4 : mov rdi, r12 ; call rbx
0x000000000010360a : mov rdi, r12 ; call rbx
0x0000000000103888 : mov rdi, r12 ; call rbx
0x0000000000103b06 : mov rdi, r12 ; call rbx
0x0000000000103b37 : mov rdi, r12 ; call rbx
0x0000000000103db5 : mov rdi, r12 ; call rbx
0x0000000000104033 : mov rdi, r12 ; call rbx
0x0000000000104081 : mov rdi, r12 ; call rbx
0x00000000001040a1 : mov rdi, r12 ; call rbx
0x00000000000ad919 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000ba564 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000088e55 : mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00000000000e35b7 : mov rdi, r13 ; call 0x1f8ad
0x000000000011ff5d : mov rdi, r13 ; call r12
0x000000000012a2af : mov rdi, r13 ; call r12
0x000000000012a31f : mov rdi, r13 ; call r12
0x00000000000391ab : mov rdi, r13 ; call r14
0x000000000003922c : mov rdi, r13 ; call r14
0x0000000000039267 : mov rdi, r13 ; call r14
0x000000000002f6d8 : mov rdi, r13 ; call rax
0x000000000004b38d : mov rdi, r13 ; call rax
0x000000000008893c : mov rdi, r13 ; call rax
0x000000000011cef4 : mov rdi, r13 ; call rax
0x000000000011d204 : mov rdi, r13 ; call rax
0x0000000000134107 : mov rdi, r13 ; call rax
0x000000000010362f : mov rdi, r13 ; call rbx
0x0000000000103754 : mov rdi, r13 ; call rbx
0x0000000000103879 : mov rdi, r13 ; call rbx
0x00000000001038ad : mov rdi, r13 ; call rbx
0x00000000001039d2 : mov rdi, r13 ; call rbx
0x0000000000103af7 : mov rdi, r13 ; call rbx
0x0000000000103b5c : mov rdi, r13 ; call rbx
0x0000000000103c81 : mov rdi, r13 ; call rbx
0x0000000000103da6 : mov rdi, r13 ; call rbx
0x0000000000103dda : mov rdi, r13 ; call rbx
0x0000000000103eff : mov rdi, r13 ; call rbx
0x0000000000104024 : mov rdi, r13 ; call rbx
0x00000000001040d8 : mov rdi, r13 ; call rbx
0x00000000001040f8 : mov rdi, r13 ; call rbx
0x0000000000104118 : mov rdi, r13 ; call rbx
0x0000000000104138 : mov rdi, r13 ; call rbx
0x0000000000173650 : mov rdi, r13 ; mov r13, r14 ; call 0x1f8b0
0x00000000000378b3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x00000000001735f1 : mov rdi, r14 ; call 0x1f8ad
0x0000000000081866 : mov rdi, r14 ; call qword ptr [rax]
0x000000000012d2b7 : mov rdi, r14 ; call rax
0x0000000000103653 : mov rdi, r14 ; call rbx
0x00000000001036cc : mov rdi, r14 ; call rbx
0x0000000000103745 : mov rdi, r14 ; call rbx
0x0000000000103778 : mov rdi, r14 ; call rbx
0x00000000001037f1 : mov rdi, r14 ; call rbx
0x000000000010386a : mov rdi, r14 ; call rbx
0x00000000001038d1 : mov rdi, r14 ; call rbx
0x000000000010394a : mov rdi, r14 ; call rbx
0x00000000001039c3 : mov rdi, r14 ; call rbx
0x00000000001039f6 : mov rdi, r14 ; call rbx
0x0000000000103a6f : mov rdi, r14 ; call rbx
0x0000000000103ae8 : mov rdi, r14 ; call rbx
0x0000000000103b80 : mov rdi, r14 ; call rbx
0x0000000000103bf9 : mov rdi, r14 ; call rbx
0x0000000000103c72 : mov rdi, r14 ; call rbx
0x0000000000103ca5 : mov rdi, r14 ; call rbx
0x0000000000103d1e : mov rdi, r14 ; call rbx
0x0000000000103d97 : mov rdi, r14 ; call rbx
0x0000000000103dfe : mov rdi, r14 ; call rbx
0x0000000000103e77 : mov rdi, r14 ; call rbx
0x0000000000103ef0 : mov rdi, r14 ; call rbx
0x0000000000103f23 : mov rdi, r14 ; call rbx
0x0000000000103f9c : mov rdi, r14 ; call rbx
0x0000000000104015 : mov rdi, r14 ; call rbx
0x0000000000104158 : mov rdi, r14 ; call rbx
0x0000000000104178 : mov rdi, r14 ; call rbx
0x0000000000104198 : mov rdi, r14 ; call rbx
0x00000000001041b8 : mov rdi, r14 ; call rbx
0x00000000001041d8 : mov rdi, r14 ; call rbx
0x00000000001041f8 : mov rdi, r14 ; call rbx
0x0000000000104218 : mov rdi, r14 ; call rbx
0x0000000000104238 : mov rdi, r14 ; call rbx
0x000000000012c9d2 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d519 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012d627 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000f365d : mov rdi, r15 ; call 0x1f8ad
0x0000000000065d5c : mov rdi, r15 ; call 0x71fd5
0x000000000005f10e : mov rdi, r15 ; call 0x7b3a5
0x00000000001389df : mov rdi, r15 ; call qword ptr [rax]
0x000000000013a86d : mov rdi, r15 ; call r14
0x0000000000074014 : mov rdi, r15 ; call rax
0x0000000000074013 : mov rdi, r15 ; call rax
0x0000000000087bf5 : mov rdi, r15 ; call rax
0x0000000000103673 : mov rdi, r15 ; call rbx
0x00000000001036bd : mov rdi, r15 ; call rbx
0x00000000001036ec : mov rdi, r15 ; call rbx
0x0000000000103736 : mov rdi, r15 ; call rbx
0x0000000000103798 : mov rdi, r15 ; call rbx
0x00000000001037e2 : mov rdi, r15 ; call rbx
0x0000000000103811 : mov rdi, r15 ; call rbx
0x000000000010385b : mov rdi, r15 ; call rbx
0x00000000001038f1 : mov rdi, r15 ; call rbx
0x000000000010393b : mov rdi, r15 ; call rbx
0x000000000010396a : mov rdi, r15 ; call rbx
0x00000000001039b4 : mov rdi, r15 ; call rbx
0x0000000000103a16 : mov rdi, r15 ; call rbx
0x0000000000103a60 : mov rdi, r15 ; call rbx
0x0000000000103a8f : mov rdi, r15 ; call rbx
0x0000000000103ad9 : mov rdi, r15 ; call rbx
0x0000000000103ba0 : mov rdi, r15 ; call rbx
0x0000000000103bea : mov rdi, r15 ; call rbx
0x0000000000103c19 : mov rdi, r15 ; call rbx
0x0000000000103c63 : mov rdi, r15 ; call rbx
0x0000000000103cc5 : mov rdi, r15 ; call rbx
0x0000000000103d0f : mov rdi, r15 ; call rbx
0x0000000000103d3e : mov rdi, r15 ; call rbx
0x0000000000103d88 : mov rdi, r15 ; call rbx
0x0000000000103e1e : mov rdi, r15 ; call rbx
0x0000000000103e68 : mov rdi, r15 ; call rbx
0x0000000000103e97 : mov rdi, r15 ; call rbx
0x0000000000103ee1 : mov rdi, r15 ; call rbx
0x0000000000103f43 : mov rdi, r15 ; call rbx
0x0000000000103f8d : mov rdi, r15 ; call rbx
0x0000000000103fbc : mov rdi, r15 ; call rbx
0x0000000000104006 : mov rdi, r15 ; call rbx
0x0000000000104258 : mov rdi, r15 ; call rbx
0x0000000000104278 : mov rdi, r15 ; call rbx
0x0000000000104298 : mov rdi, r15 ; call rbx
0x00000000001042b8 : mov rdi, r15 ; call rbx
0x00000000001042d8 : mov rdi, r15 ; call rbx
0x00000000001042f8 : mov rdi, r15 ; call rbx
0x0000000000104318 : mov rdi, r15 ; call rbx
0x0000000000104338 : mov rdi, r15 ; call rbx
0x0000000000104358 : mov rdi, r15 ; call rbx
0x0000000000104378 : mov rdi, r15 ; call rbx
0x0000000000104398 : mov rdi, r15 ; call rbx
0x00000000001043b8 : mov rdi, r15 ; call rbx
0x00000000001043d8 : mov rdi, r15 ; call rbx
0x00000000001043f8 : mov rdi, r15 ; call rbx
0x0000000000104418 : mov rdi, r15 ; call rbx
0x0000000000104438 : mov rdi, r15 ; call rbx
0x000000000013809e : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162b : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000075293 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000230b0 : mov rdi, rax ; call 0x8f3b5
0x0000000000136e03 : mov rdi, rax ; call qword ptr [r10]
0x00000000000ece59 : mov rdi, rax ; call rbx
0x00000000000877a9 : mov rdi, rax ; call rcx
0x0000000000136ef5 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136ff5 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137150 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137290 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000013752a : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136d06 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x0000000000137436 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000008595d : mov rdi, rax ; mov rbx, rax ; call 0x81b88
0x000000000012b793 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012b792 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000086b37 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000013a78a : mov rdi, rbp ; add rbx, r12 ; call r14
0x0000000000172b6b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000013367a : mov rdi, rbp ; call 0x1f8ad
0x00000000000869a1 : mov rdi, rbp ; call 0x82bd5
0x00000000000f4034 : mov rdi, rbp ; call 0xf0335
0x000000000012e34d : mov rdi, rbp ; call qword ptr [rbx]
0x000000000013c0ba : mov rdi, rbp ; call r12
0x000000000012c02c : mov rdi, rbp ; call r14
0x0000000000037346 : mov rdi, rbp ; call r15
0x0000000000037d6b : mov rdi, rbp ; call r15
0x0000000000084fb5 : mov rdi, rbp ; call rax
0x0000000000088d03 : mov rdi, rbp ; call rax
0x000000000012c226 : mov rdi, rbp ; call rax
0x000000000012f40a : mov rdi, rbp ; call rax
0x000000000012f518 : mov rdi, rbp ; call rax
0x00000000001341d1 : mov rdi, rbp ; call rax
0x00000000001342fa : mov rdi, rbp ; call rax
0x000000000013451a : mov rdi, rbp ; call rax
0x0000000000137bf1 : mov rdi, rbp ; call rax
0x00000000000ad295 : mov rdi, rbp ; call rbx
0x00000000000ad3b4 : mov rdi, rbp ; call rbx
0x00000000000ad55e : mov rdi, rbp ; call rbx
0x00000000000ad66c : mov rdi, rbp ; call rbx
0x0000000000103b12 : mov rdi, rbp ; call rbx
0x000000000013bf90 : mov rdi, rbp ; call rcx
0x000000000012de44 : mov rdi, rbp ; call rdx
0x000000000012cac4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000135bb9 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132781 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000132780 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135421 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135420 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000132589 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000135258 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012aa1d : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00000000000859c2 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012d74c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000133672 : mov rdi, rbx ; call 0x1f8ad
0x0000000000085890 : mov rdi, rbx ; call 0x81b85
0x00000000000bda2a : mov rdi, rbx ; call 0x89d15
0x00000000000bf4aa : mov rdi, rbx ; call 0x8b725
0x00000000000ceac4 : mov rdi, rbx ; call qword ptr [r15]
0x000000000012e777 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000137387 : mov rdi, rbx ; call qword ptr [rax]
0x000000000013abb1 : mov rdi, rbx ; call qword ptr [rax]
0x000000000013ac71 : mov rdi, rbx ; call qword ptr [rax]
0x000000000013ad31 : mov rdi, rbx ; call qword ptr [rax]
0x000000000013adf1 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000029c46 : mov rdi, rbx ; call r12
0x0000000000021bdf : mov rdi, rbx ; call r14
0x000000000006cb48 : mov rdi, rbx ; call r8
0x0000000000052255 : mov rdi, rbx ; call rax
0x000000000006c435 : mov rdi, rbx ; call rax
0x0000000000078776 : mov rdi, rbx ; call rax
0x0000000000078775 : mov rdi, rbx ; call rax
0x0000000000085c80 : mov rdi, rbx ; call rax
0x0000000000087e65 : mov rdi, rbx ; call rax
0x0000000000088b79 : mov rdi, rbx ; call rax
0x000000000011faa9 : mov rdi, rbx ; call rax
0x000000000011fda1 : mov rdi, rbx ; call rax
0x00000000001740ea : mov rdi, rbx ; jne 0x1740e1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a50f : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a611 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000222bd : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c8b0a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001430da : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000173600 : mov rdi, rbx ; mov rbx, rbp ; call 0x1f8b0
0x0000000000088105 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000007d8c1 : mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x000000000007221d : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007b29f : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072065 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000007b3ef : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000013a90f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000013b174 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001151a7 : mov rdi, rdx ; jmp rax
0x000000000012b885 : mov rdi, rsp ; call rax
0x000000000012b970 : mov rdi, rsp ; call rax
0x000000000013a980 : mov rdi, rsp ; call rdx
0x0000000000077464 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cc4eb : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcc502 ; call rdx
0x0000000000020826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000173e5f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173e73 ; call rdx
0x0000000000152a20 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553f0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157dc0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015af00 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015d9d0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001604f0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a5da0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6a70 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a8e80 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a9950 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000015b660 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000015e130 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000160c50 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000848e8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x000000000011437d : mov rdx, r12 ; call rax
0x0000000000087bf2 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000114706 : mov rdx, r13 ; call rax
0x0000000000114843 : mov rdx, r13 ; call rax
0x00000000000ad3b1 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000012f512 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000137beb : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088e58 : mov rdx, r13 ; mov rsi, rbp ; call rax
0x0000000000114317 : mov rdx, r14 ; call rax
0x0000000000088108 : mov rdx, r15 ; call rax
0x000000000011ceee : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000011d1fe : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000010f77e : mov rdx, r8 ; jmp 0x10f78e
0x00000000000d5198 : mov rdx, r8 ; jmp 0xd51b9
0x00000000000d980b : mov rdx, r8 ; jmp 0xd981c
0x000000000010f473 : mov rdx, rax ; jmp 0x10f487
0x0000000000134dc6 : mov rdx, rax ; jmp 0x134d8c
0x000000000007d9c3 : mov rdx, rax ; jmp 0x7d9e2
0x000000000008783f : mov rdx, rax ; jmp 0x8780c
0x00000000000beb67 : mov rdx, rax ; jmp 0xbeb72
0x00000000000d0441 : mov rdx, rax ; jmp 0xd03e2
0x00000000000e0ff5 : mov rdx, rax ; jmp 0xe0f91
0x00000000000e0ff4 : mov rdx, rax ; jmp 0xe0f92
0x00000000000f003b : mov rdx, rax ; jmp 0xf0075
0x00000000000fe4fb : mov rdx, rax ; jmp 0xfe491
0x00000000000378b6 : mov rdx, rbp ; call r15
0x0000000000088936 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000113ea6 : mov rdx, rbx ; call rax
0x0000000000114229 : mov rdx, rbx ; call rax
0x0000000000114402 : mov rdx, rbx ; call rax
0x0000000000114531 : mov rdx, rbx ; call rax
0x0000000000174576 : mov rdx, rbx ; jne 0x17456f ; pop rbx ; ret
0x000000000012f404 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088857 : mov rdx, rcx ; jmp 0x88822
0x0000000000038f69 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000063b66 : mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000005be58 : mov rsi, qword ptr [rip + 0x368111] ; call rax
0x000000000005b802 : mov rsi, qword ptr [rip + 0x368767] ; call rax
0x000000000005004a : mov rsi, qword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3ce : mov rsi, qword ptr [rip + 0x376b9b] ; call rax
0x0000000000047f49 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000012c027 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021855 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837e : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000845e0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000010ede0 : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000011ff58 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x000000000003731a : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000f4031 : mov rsi, r12 ; mov rdi, rbp ; call 0xf0338
0x0000000000037343 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000037d68 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000088d00 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012f407 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012f515 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000137bee : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012aa1a : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000087e62 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000086839 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000008605c : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000085c7d : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000000879d4 : mov rsi, r14 ; call rax
0x00000000000ba6f1 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000ba561 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b38a : mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000088939 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000011cef1 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000011d201 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000013c0b7 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x00000000000391a8 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000039229 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000039264 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000142fde : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000088e5b : mov rsi, rbp ; call rax
0x000000000008588d : mov rsi, rbp ; mov rdi, rbx ; call 0x81b88
0x00000000000bda27 : mov rsi, rbp ; mov rdi, rbx ; call 0x89d18
0x0000000000088b76 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000c84bb : mov rsi, rbp ; xor edx, edx ; jmp 0xc848b
0x000000000003735e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000001389dc : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a86a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x00000000000877a6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000008699e : mov rsi, rbx ; mov rdi, rbp ; call 0x82bd8
0x000000000013bf8d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000c7592 : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000132dc9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000138f49 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000139669 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000113327 : mov rsi, rdx ; call rax
0x000000000013ab94 : mov rsi, rsp ; call qword ptr [rax]
0x000000000013ac54 : mov rsi, rsp ; call qword ptr [rax]
0x000000000013ad14 : mov rsi, rsp ; call qword ptr [rax]
0x000000000013add4 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012e774 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000352e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000119079 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000009fbb5 : mov word ptr [r9 - 2], cx ; ret
0x00000000000a0308 : mov word ptr [r9 - 2], cx ; ret
0x00000000000a0a55 : mov word ptr [r9 - 2], cx ; ret
0x00000000000fe331 : mov word ptr [rax + rax], gs ; ret
0x000000000019cfc4 : mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x000000000008f30d : mov word ptr [rax + rdx - 2], cx ; ret
0x000000000013a7e0 : mov word ptr [rax - 0x12], ss ; dec dword ptr [rax - 0x77] ; ret
0x000000000013cec5 : mov word ptr [rax - 0x39], cs ; ret
0x00000000000ec541 : mov word ptr [rax - 0x77], cs ; ret
0x00000000000a65a0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000001095b0 : mov word ptr [rbx + rbp + 0x5d027400], gs ; ret
0x00000000001ac6c4 : mov word ptr [rbx], cs ; add dword ptr [rax], eax ; cwde ; xchg ebx, esi ; call qword ptr [rsi]
0x00000000001acec4 : mov word ptr [rbx], ss ; add dword ptr [rax], eax ; call 0x181ac2ae
0x00000000001b0cc4 : mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019b454 : mov word ptr [rcx + 2], cs ; add byte ptr [rsi], ah ; cli ; call rsp
0x0000000000168ce2 : mov word ptr [rcx + 4], dx ; ret
0x000000000016d132 : mov word ptr [rcx + 4], dx ; ret
0x0000000000168d23 : mov word ptr [rcx + 8], dx ; ret
0x000000000016d173 : mov word ptr [rcx + 8], dx ; ret
0x0000000000198f2c : mov word ptr [rcx + rax], fs ; in al, 0x20 ; cmc ; jmp rsp
0x0000000000198dbc : mov word ptr [rcx + rax], ss ; movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x0000000000168cb0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000016d100 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168ca0 : mov word ptr [rcx], dx ; ret
0x000000000016d0f0 : mov word ptr [rcx], dx ; ret
0x00000000000a74bc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a830c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a5e4c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a6b1c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8f2c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a99fc : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a9d7c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a75c4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8414 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a5f34 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a6c04 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9014 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9ae4 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9e84 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000015b897 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000015e367 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000160e87 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000001b2ac4 : mov word ptr [rdi + 1], gs ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000003b372 : mov word ptr [rdi + 2], dx ; ret
0x000000000009eaa2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a7388 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a81b8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009e9a2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a5d88 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a6a58 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a6d52 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a8562 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a8e68 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a9938 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a9c28 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a821a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a73da : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a5dca : mov word ptr [rdi + 8], dx ; ret
0x00000000000a6a9a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a6d93 : mov word ptr [rdi + 8], dx ; ret
0x00000000000a85a3 : mov word ptr [rdi + 8], dx ; ret
0x00000000000a8eaa : mov word ptr [rdi + 8], dx ; ret
0x00000000000a997a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a9c8a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000014db72 : mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000014e062 : mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000014e402 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000152fbc : mov word ptr [rdi - 2], cx ; ret
0x000000000015598c : mov word ptr [rdi - 2], cx ; ret
0x000000000015835c : mov word ptr [rdi - 2], cx ; ret
0x000000000015b18c : mov word ptr [rdi - 2], cx ; ret
0x000000000015dc5c : mov word ptr [rdi - 2], cx ; ret
0x000000000016077c : mov word ptr [rdi - 2], cx ; ret
0x0000000000152dd4 : mov word ptr [rdi - 2], dx ; ret
0x00000000001557a4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000158174 : mov word ptr [rdi - 2], dx ; ret
0x000000000015b214 : mov word ptr [rdi - 2], dx ; ret
0x000000000015dce4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000160804 : mov word ptr [rdi - 2], dx ; ret
0x0000000000152fb8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000155988 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000158358 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000015b188 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000015dc58 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000160778 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a5d53 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8e33 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a9903 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a6a26 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000aa602 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000172a75 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000015b89b : mov word ptr [rdi], cx ; ret
0x000000000015e36b : mov word ptr [rdi], cx ; ret
0x0000000000160e8b : mov word ptr [rdi], cx ; ret
0x00000000000a7343 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8163 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5d43 : mov word ptr [rdi], dx ; ret
0x00000000000a6a13 : mov word ptr [rdi], dx ; ret
0x00000000000a6d10 : mov word ptr [rdi], dx ; ret
0x00000000000a8520 : mov word ptr [rdi], dx ; ret
0x00000000000a8e23 : mov word ptr [rdi], dx ; ret
0x00000000000a98f3 : mov word ptr [rdi], dx ; ret
0x000000000015b903 : mov word ptr [rdi], dx ; ret
0x000000000015e3d3 : mov word ptr [rdi], dx ; ret
0x0000000000160ef3 : mov word ptr [rdi], dx ; ret
0x00000000000a9bd3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009ea60 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e9d0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000009fbb2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a0305 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a0a52 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000014db6f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000014e05f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000014e3ff : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000f5f50 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000001323af : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000016b058 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2afd : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a54cd : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000166d18 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2b81 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a5551 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000016b003 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a2a98 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000a5468 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000166cd3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001099bf : mov word ptr [rdx], ax ; ret
0x00000000001bb87a : mov word ptr [rdx], cs ; ret
0x00000000001a71f3 : mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a6cc2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000000fb5a5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003b2df : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b326 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000aa605 : mov word ptr [rsi - 2], cx ; ret
0x0000000000172a78 : mov word ptr [rsi - 2], cx ; ret
0x00000000000f5f33 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001aaf50 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x00000000001bb860 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001ae378 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001b0090 : mov word ptr [rsi], es ; add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000035002 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000000fe330 : mov word ptr fs:[rax + rax], gs ; ret
0x000000000014db6e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000014e05e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000014e3fe : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000003ded9 : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000000b5011 : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000001b2eaa : movabs al, byte ptr [0x41200e0a01a00320] ; ret
0x00000000000db232 : movabs al, byte ptr [0x834801538d000000] ; ret
0x000000000006368d : movabs al, byte ptr [0x840fc08548000000] ; ret 3
0x00000000000623f2 : movabs al, byte ptr [0x894810b60ffffff9] ; ret
0x00000000000ecd9c : movabs al, byte ptr [0x8948c085480003c8] ; ret
0x00000000000e054c : movabs al, byte ptr [0x8948c08548fff3f2] ; ret
0x00000000001000cc : movabs al, byte ptr [0x8948c08548fff762] ; ret
0x0000000000072fe3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x00000000000d09f0 : movabs byte ptr [0x8348e18948000000], al ; ret 0x480f
0x00000000000e3969 : movabs byte ptr [0x840fc08545000001], al ; ret 0xfffd
0x00000000000ae7dd : movabs byte ptr [0xc74900758b48fff9], al ; ret 0xfc01
0x00000000000313b4 : movabs dword ptr [0x14808c783490005], eax ; ret
0x00000000000d731b : movabs dword ptr [0x5bffffff73820fc8], eax ; ret
0x00000000000bd0a1 : movabs dword ptr [0xe800000001003099], eax ; ret 0xf7c6
0x00000000000b6070 : movabs dword ptr [0xe80000036eba000d], eax ; ret
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x00000000001105fb : movabs eax, dword ptr [0x8948f6894c000043] ; ret 0x3bf
0x000000000011f9fd : movabs eax, dword ptr [0x940f01ff83410000] ; ret 0xc085
0x000000000004bb47 : movabs eax, dword ptr [0xfffb5885c7fffffd] ; call qword ptr [rax]
0x0000000000034b30 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x000000000003492f : movapd xmm0, xmm1 ; ret
0x0000000000034954 : movapd xmm0, xmm1 ; ret
0x0000000000034982 : movapd xmm0, xmm1 ; ret
0x0000000000034b31 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034e60 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034acd : movaps xmm0, xmm1 ; jne 0x34ae9 ; add rsp, 0x28 ; ret
0x0000000000034e08 : movaps xmm0, xmm1 ; jne 0x34e21 ; add rsp, 0x28 ; ret
0x0000000000034930 : movaps xmm0, xmm1 ; ret
0x0000000000034955 : movaps xmm0, xmm1 ; ret
0x0000000000034983 : movaps xmm0, xmm1 ; ret
0x0000000000034cbd : movaps xmm0, xmm1 ; ret
0x0000000000034ce2 : movaps xmm0, xmm1 ; ret
0x0000000000034d0f : movaps xmm0, xmm1 ; ret
0x0000000000151542 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151692 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001517e2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151932 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151a82 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151bd2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151d22 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151e70 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151fc2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000152112 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000152262 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001523b2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000152502 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000152652 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001527a2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153f12 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154062 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001541b2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154302 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154452 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001545a2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001546f2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154840 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154992 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154ae2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154c32 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154d82 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154ed2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000155022 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000155172 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001568e2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156a32 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156b82 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156cd2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156e22 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156f72 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001570c2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157210 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157362 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001574b2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157602 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157752 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001578a2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001579f2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157b42 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015153e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015168e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001517de : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015192e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151a7e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151bce : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151d1e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151e6c : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151fbe : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015210e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015225e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001523ae : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001524fe : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015264e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015279e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153f0e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015405e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001541ae : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001542fe : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015444e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015459e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001546ee : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015483c : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015498e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154ade : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154c2e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154d7e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154ece : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015501e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015516e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001568de : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156a2e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156b7e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156cce : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156e1e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156f6e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001570be : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015720c : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015735e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001574ae : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001575fe : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015774e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015789e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001579ee : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157b3e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001515ec : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015173c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015188c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519dc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b2c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c7c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dcc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f1c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015206c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001521bc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015230c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015245c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001525ac : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001526fc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015284c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fbc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015410c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015425c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543ac : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544fc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015464c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015479c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548ec : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a3c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b8c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cdc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e2c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f7c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001550cc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015521c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015698c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156adc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c2c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d7c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ecc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015701c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015716c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572bc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015740c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015755c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001576ac : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577fc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015794c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157a9c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157bec : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000034dd3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034856 : movd mm0, eax ; ret
0x000000000003487b : movd mm0, eax ; ret
0x0000000000034a69 : movd mm0, eax ; ret
0x0000000000034c0d : movd mm0, eax ; ret
0x0000000000034c4f : movd mm0, eax ; ret
0x0000000000034855 : movd mm0, rax ; ret
0x000000000003487a : movd mm0, rax ; ret
0x0000000000034a68 : movd mm0, rax ; ret
0x000000000003492c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x0000000000034cba : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000348bf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034c36 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003492b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348be : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034dd2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034c0c : movd xmm0, eax ; ret
0x0000000000034c4e : movd xmm0, eax ; ret
0x0000000000034cb9 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034c35 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000e0d10 : movdqa xmm0, xmm2 ; jmp 0xe0cf6
0x00000000000a5e20 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6af0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a8f00 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a99d0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a767d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84cd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6ce0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a84f0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a5fed : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6cbd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a90cd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a9b9d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a8733 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a6f23 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000015b56f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e03f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160b5f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b4ff : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015dfcf : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160aef : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b48f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015df5f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160a7f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b41f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015deef : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160a0f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a761d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a846d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a5f8d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a6c5d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a906d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a9b3d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000015b3af : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015de7f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016099f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a763d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a848d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a5fad : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a6c7d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a908d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a9b5d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000015b33f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015de0f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016092f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a765d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a84ad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a5fcd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6c9d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a90ad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9b7d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000015b95f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e42f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160f4f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b8ef : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e3bf : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160edf : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b87f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e34f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160e6f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b80f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e2df : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160dff : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b79f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e26f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160d8f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b72f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e1ff : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160d1f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b6bf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e18f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160caf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b64f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e11f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160c3f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b5df : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e0af : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160bcf : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008f26c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x8f289 ; ret
0x000000000008f285 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000015aacb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015aaca : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015aac9 : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015aac8 : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015d59b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015d59a : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015d599 : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015d598 : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000001600bb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000001600ba : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000001600b9 : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000001600b8 : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015ab3b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015abcb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ac5b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aceb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ad6b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015adeb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ae6b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aeeb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015af6b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015afeb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b06b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b0eb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b16b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b1fb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b27b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d60b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d69b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d72b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d7bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d83b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d8bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d93b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d9bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015da3b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dabb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015db3b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dbbb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dc3b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dccb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dd4b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016012b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001601bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016024b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001602db : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016035b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001603db : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016045b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001604db : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016055b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001605db : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016065b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001606db : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016075b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001607eb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016086b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a6de0 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a85f0 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a82d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7494 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6b07 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e34 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8f14 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a99e4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5e77 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6b47 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8f57 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9a27 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e67 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b37 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8f47 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a17 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ee8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a6bb8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8fc8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9a98 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5ea8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a6b78 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a8f88 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9a58 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5ec8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6b98 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8fa8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9a78 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5e48 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a6b18 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8f28 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a99f8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5fe9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6cb9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a90c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a9b99 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a5f89 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a6c59 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a9069 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a9b39 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5fa9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a6c79 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a9089 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a9b59 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5fc9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6c99 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a90a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9b79 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5e24 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6af4 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6df0 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a8600 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a8f04 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a99d4 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000015b2ea : movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000015ddba : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001608da : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a9d44 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015b344 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b3b4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b424 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b494 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b504 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b574 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b5e4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b654 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b6c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b734 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b7a4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b814 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b884 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b8f4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b964 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015de14 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015de84 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015def4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015df64 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015dfd4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e044 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e0b4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e124 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e194 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e204 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e274 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e2e4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e354 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e3c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e434 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160934 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001609a4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160a14 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160a84 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160af4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160b64 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160bd4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160c44 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160cb4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160d24 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160d94 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160e04 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160e74 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160ee4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160f54 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a2be2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a55b2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c02 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a55d2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c22 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a55f2 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a6c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c42 : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a543c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5612 : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5772 : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a16 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2b39 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a53e6 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a5509 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2be3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a55b3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c03 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a55d3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c23 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a55f3 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a6d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c43 : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a543d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5613 : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5773 : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a17 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2b3a : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a53e7 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a550a : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000101e5b : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x101e2f
0x0000000000101e5c : movmskps eax, xmm0 ; and eax, 1 ; jmp 0x101e2e
0x00000000000e0d11 : movq mm0, mm2 ; jmp 0xe0cf5
0x00000000000a5e21 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6af1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a8f01 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a99d1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a767e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84ce : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6ce1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a84f1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a5fee : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a6cbe : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a90ce : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a9b9e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a9f3e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a8734 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a6f24 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a9fb4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000015b570 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e040 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160b60 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b500 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015dfd0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160af0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b490 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015df60 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160a80 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b420 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015def0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160a10 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a761e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a846e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a5f8e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a6c5e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a906e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a9b3e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a9ede : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000015b3b0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015de80 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001609a0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a763e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a848e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a5fae : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a6c7e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a908e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a9b5e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a9efe : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000015b340 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015de10 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160930 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a765e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a84ae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a5fce : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a6c9e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a90ae : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a9b7e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a9f1e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000015b960 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e430 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160f50 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b8f0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e3c0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160ee0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b880 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e350 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160e70 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b810 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e2e0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160e00 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b7a0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e270 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160d90 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b730 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e200 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160d20 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b6c0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e190 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160cb0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b650 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e120 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160c40 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b5e0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015e0b0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000160bd0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008f26d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8f288 ; ret
0x000000000008f286 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000015aacc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000015d59c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000001600bc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000015ab3c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015abcc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ac5c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015acec : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ad6c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015adec : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ae6c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015aeec : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015af6c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015afec : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015b06c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015b0ec : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015b16c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015b1fc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015b27c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d60c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d69c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d72c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d7bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d83c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d8bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d93c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d9bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015da3c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015dabc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015db3c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015dbbc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015dc3c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015dccc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015dd4c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016012c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001601bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016024c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001602dc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016035c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001603dc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016045c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001604dc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016055c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001605dc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016065c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001606dc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016075c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001607ec : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016086c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015b277 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dd47 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160867 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b1f7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dcc7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001607e7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b167 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dc37 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160757 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b0e7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dbb7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001606d7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b067 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015db37 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160657 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015afe7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dab7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001605d7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015af67 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015da37 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160557 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aee7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d9b7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001604d7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ae67 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d937 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160457 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ade7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d8b7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001603d7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ad67 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d837 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160357 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ace7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d7b7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001602d7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ac57 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d727 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160247 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015abc7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d697 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001601b7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ab37 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d607 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160127 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a6de1 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a85f1 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a82d5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7495 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6b08 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e35 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8f15 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a99e5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5e88 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8f68 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a9a38 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a6b5b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a5e78 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6b48 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8f58 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9a28 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e68 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b38 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8f48 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a18 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ee9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a6bb9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8fc9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9a99 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5ea9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a6b79 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a8f89 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9a59 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5ec9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6b99 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8fa9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9a79 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5e49 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a6b19 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8f29 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a99f9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5fea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6cba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a90ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a9b9a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a5f8a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a6c5a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a906a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a9b3a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5faa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a6c7a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a908a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a9b5a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5fca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6c9a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a90aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9b7a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5e25 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a6af5 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a6df1 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a8601 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a8f05 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a99d5 : movq qword ptr [rdi], mm0 ; ret
0x000000000015b2eb : movq qword ptr [rdi], mm0 ; ret
0x000000000015ddbb : movq qword ptr [rdi], mm0 ; ret
0x00000000001608db : movq qword ptr [rdi], mm0 ; ret
0x00000000000a9d45 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015b345 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b3b5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b425 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b495 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b505 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b575 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b5e5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b655 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b6c5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b735 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b7a5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b815 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b885 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b8f5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015b965 : movq qword ptr [rdi], mm1 ; ret
0x000000000015de15 : movq qword ptr [rdi], mm1 ; ret
0x000000000015de85 : movq qword ptr [rdi], mm1 ; ret
0x000000000015def5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015df65 : movq qword ptr [rdi], mm1 ; ret
0x000000000015dfd5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e045 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e0b5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e125 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e195 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e205 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e275 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e2e5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e355 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e3c5 : movq qword ptr [rdi], mm1 ; ret
0x000000000015e435 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160935 : movq qword ptr [rdi], mm1 ; ret
0x00000000001609a5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160a15 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160a85 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160af5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160b65 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160bd5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160c45 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160cb5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160d25 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160d95 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160e05 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160e75 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160ee5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000160f55 : movq qword ptr [rdi], mm1 ; ret
0x0000000000034854 : movq xmm0, rax ; ret
0x0000000000034879 : movq xmm0, rax ; ret
0x0000000000034a67 : movq xmm0, rax ; ret
0x000000000003492a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348bd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000006846a : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d5b94 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5b27
0x00000000000e072c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000001b5fd5 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001b09dc : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x0000000000198dc0 : movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x0000000000196555 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000196399 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp rax
0x0000000000196395 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000198f88 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x00000000001a9adc : movsb byte ptr [rdi], byte ptr [rsi] ; fild word ptr [rax] ; add byte ptr [rax - 0x6b], ah ; int1 ; call qword ptr [rax]
0x0000000000197eb0 : movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x0000000000183f62 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001984e0 : movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x00000000001979e4 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x0000000000196980 : movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x19696f ; jmp rsp
0x0000000000196ab0 : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196a9f ; jmp rsp
0x000000000008f198 : movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x8f1ae ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f198 : movsb byte ptr [rdi], byte ptr [rsi] ; jno 0x8f1b0 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001851bd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x185216 ; jmp 0x185157
0x00000000001aabdc : movsb byte ptr [rdi], byte ptr [rsi] ; lock add byte ptr [rax], al ; push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000001979e8 : movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x00000000001999ac : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x000000000019b65c : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x00000000001b11dc : movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000035047 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000cd370 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014dc77 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e157 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e4f7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019ae28 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff9
0x00000000001977cc : movsb byte ptr [rdi], byte ptr [rsi] ; rol byte ptr [rax], 0 ; mov ah, 0xc4 ; in eax, dx ; call rsp
0x000000000019854c : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, byte ptr [rcx] ; add byte ptr [rsp + rbx*2 - 0xf], dl ; call rsp
0x0000000000194fe5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rcx
0x000000000019b9d4 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rcx] ; add ah, ah ; ret 0xfffd
0x000000000013f314 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007573f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f6aa : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000001bc4b2 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001ae149 : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x00000000001857f5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000fe4f7 : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0xfe52c ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000001850b1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009ed44 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000489e2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000048a1e : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000142fe6 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001832b1 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000194fed : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rcx
0x00000000000348c2 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003488b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000bb8f8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000bb8f7 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000004a1d3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000142fe5 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000034c39 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000034c20 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000004a18d : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000010ec2f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b417 : movsx eax, dl ; ret
0x000000000008b417 : movsx eax, dl ; ret
0x000000000009eb24 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x9eb21 ; ret
0x000000000009ec64 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x9ec61 ; xor eax, eax ; ret
0x000000000009ebb4 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x9ebb9 ; ret
0x000000000009eae0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x9eae1 ; ret
0x00000000000c3258 : movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000c3258 : movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x0000000000089d91 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008bc11 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008fb71 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000091e81 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014e651 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014f8d1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000161081 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001631f1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000158f4b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000158fad : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000015ba1b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000015ba7d : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000015e4f6 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000015e55d : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000015101b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000015107c : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001539eb : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000153a4c : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001563c2 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000015641c : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000009ea30 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009e990 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000009e8c7 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x0000000000085544 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000002ebb7 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000004b602 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000dfd73 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000063884 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000d3fe1 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000e008a : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000210b3 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006bc84 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c3fa : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c0eed : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c105d : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000d9c17 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e1ffa : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f2135 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000210b3 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006bc84 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c3fa : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c0eed : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c105d : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000d9c17 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e1ffa : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f2135 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c1d2 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c94c : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d221b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c301 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000002e8ed : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x00000000000aabc7 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003ab4a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000014a784 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014a783 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014a648 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014a647 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014a89d : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x000000000014a89c : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x000000000014a71d : movsxd rax, ecx ; ret
0x000000000014a71c : movsxd rax, ecx ; ret
0x0000000000186a29 : movsxd rbp, ebp ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x000000000014a7c4 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a8e4 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000a645a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a648a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64a7 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64c5 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64ea : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6513 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6533 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a655c : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ea1 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ec0 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ed5 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6fc0 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7afa : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b2a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b47 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b65 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b8a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bb3 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bd3 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bfc : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86b1 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86d0 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86e5 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a87d0 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a97ca : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a97fa : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9817 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9835 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a985a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9883 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a98a3 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a98cc : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000aa050 : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000047c91 : movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e44d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e55c : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e68d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e889 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e920 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e99e : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ea64 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016eb96 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016eda1 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ee30 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016eeaa : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016fa8b : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016fb8c : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016fcbd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016feb9 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ff50 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ffce : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000170094 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001701c6 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001703d1 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000170460 : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001704da : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000a5be9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c41 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c5e : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c83 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5ca5 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5cbb : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5ce7 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5d1c : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a62fe : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6327 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6355 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6427 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a71e9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7241 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a725e : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7283 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72a5 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72bb : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72e7 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a731c : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a798e : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79b7 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79e5 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7ac7 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8cc9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d21 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d3e : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d63 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d85 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d9b : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8dc7 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8dfc : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9634 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96a1 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96be : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96e3 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9705 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a971b : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9747 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a977c : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9797 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002be43 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000005c1ed : movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x00000000000948ed : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000094b5d : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000001358a6 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000033297 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000f2e5c : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f377a : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000012d93e : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000014a639 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014a6a0 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a667 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000e1a78 : movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x000000000002e0b5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0b4 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c4 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002df45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000001510ef : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001511b4 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001512a3 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015130d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001513cc : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001514bd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151569 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151607 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001516b9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151757 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151809 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001518a7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151959 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001519f7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151aa9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151b47 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151bf9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151c97 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151d49 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151de7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151e9e : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151f37 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151fe9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152087 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152139 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001521d7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152289 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152327 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001523d9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152477 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152529 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001525c7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152679 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152717 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001527c9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000152867 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153870 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015394a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153abf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153b84 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153c73 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153cdd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153d9c : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153e8d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153f39 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153fd7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154089 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154127 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001541d9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154277 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154329 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001543c7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154479 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154517 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001545c9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154667 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154719 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001547b7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015486e : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154907 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001549b9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154a57 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154b09 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154ba7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154c59 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154cf7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154da9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154e47 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154ef9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154f97 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000155049 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001550e7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000155199 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000155237 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156240 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015631a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015648f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156554 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156643 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001566ad : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015676c : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015685d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156909 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001569a7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156a59 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156af7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156ba9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156c47 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156cf9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156d97 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156e49 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156ee7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156f99 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157037 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001570e9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157187 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015723e : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001572d7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157389 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157427 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001574d9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157577 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157629 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001576c7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157779 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157817 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001578c9 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157967 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157a19 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157ab7 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157b69 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157c07 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158c28 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158cf3 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158dde : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158e9b : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ede : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ef1 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159050 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001590d1 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015918d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015924a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015930d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001593ca : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015948d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015954a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015960d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001596ca : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015978d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015984a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015990d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001599ca : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159a8d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159b4a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159c0d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159cca : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159d8d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159e4a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159f0d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159fca : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a08d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a14a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a20e : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a2ca : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a38d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a44a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a50d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a5ca : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a68d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a74a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a8e1 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015aa74 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9b1 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9c4 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bb20 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bba1 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bc5d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bd1a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bddd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015be9a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bf5d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c01a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c0dd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c19a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c25d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c31a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c3dd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c49a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c55d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c61a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c6dd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c79a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c85d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c91a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c9dd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ca9a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cb5d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cc1a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ccde : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cd9a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ce5d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cf1a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cfdd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d09a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d15d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d21a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d3b1 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d544 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e482 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e4a4 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e600 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e681 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e73d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e7fa : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e8bd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e97a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ea3d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eafa : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ebbd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ec7a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ed3d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015edfa : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eebd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ef7a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f03d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f0fa : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f1bd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f27a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f33d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f3fa : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f4bd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f57a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f63d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f6fa : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f7be : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f87a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f93d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f9fa : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fabd : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fb7a : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fc3d : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fcfa : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fea5 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000160058 : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005c148 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x000000000005c41a : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d1bde : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d39ae : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d9b45 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000852e8 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000ce04b : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000002ec95 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000002ed85 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000005bf52 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000063d2a : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000063e61 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000c31dd : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000e6280 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000f2629 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000f37fe : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000134a44 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000cdcdb : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000ce74a : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000063e45 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000006cbbb : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000e1292 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000123f72 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000123f71 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000123df1 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000aac57 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c52d2 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000001322e6 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x0000000000135056 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000aac8f : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000006ca9d : movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x000000000003340e : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00000000000c5260 : movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x0000000000189de5 : movsxd rsi, ebp ; call qword ptr [rbx]
0x0000000000189eb9 : movsxd rsi, ebp ; call rsi
0x0000000000189ec9 : movsxd rsi, ebp ; push rbx ; cmc ; call qword ptr [rbx]
0x00000000001a9a49 : movsxd rsi, ecx ; call qword ptr [rdx]
0x0000000000199f69 : movsxd rsi, edi ; jmp rsp
0x0000000000171dbc : movsxd rsi, esi ; ret 0x7520
0x00000000000fc32a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000003afe9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b016 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000bb8f9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x000000000004a18e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000004a1d4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000009a6f7 : movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000009a6f6 : movups xmm9, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000003b171 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000348c3 : movups xmmword ptr [rdi], xmm1 ; ret
0x0000000000034c3a : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003488c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034c21 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000012e697 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013a9b7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aa27 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aad7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013ae37 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aea7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b017 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b087 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bbc7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc37 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bca7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd17 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b84b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b90b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b9cb : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ba8b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e21c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f660 : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001303db : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ea9de : movzx eax, al ; cmova eax, edx ; ret
0x00000000000bb1e5 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000bb200 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cdbb6 : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x00000000000cdc0e : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003522c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000c0eea : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c105a : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000d9c14 : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000010ec00 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34c : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000006b319 : movzx eax, al ; neg eax ; ret
0x0000000000077fcc : movzx eax, al ; neg eax ; ret
0x00000000000ac17d : movzx eax, al ; neg eax ; ret
0x00000000000ea9c0 : movzx eax, al ; neg eax ; ret
0x00000000001076f9 : movzx eax, al ; neg eax ; ret
0x0000000000107723 : movzx eax, al ; neg eax ; ret
0x0000000000109a08 : movzx eax, al ; neg eax ; ret
0x00000000001339c5 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000012f5ea : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013043d : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000130495 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001304fb : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001305fa : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013a8dc : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ab89 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ac49 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ad09 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013adc9 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013b110 : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000c75bb : movzx eax, al ; pop rbx ; ret
0x0000000000102577 : movzx eax, al ; pop rbx ; ret
0x0000000000035f29 : movzx eax, al ; ret
0x000000000003610b : movzx eax, al ; ret
0x00000000000453b9 : movzx eax, al ; ret
0x00000000000e88d3 : movzx eax, al ; ret
0x00000000000f8965 : movzx eax, al ; ret
0x00000000000ff80a : movzx eax, al ; ret
0x0000000000130362 : movzx eax, al ; ret
0x0000000000130387 : movzx eax, al ; ret
0x00000000001303a7 : movzx eax, al ; ret
0x000000000013aa97 : movzx eax, al ; ret
0x000000000013bb3f : movzx eax, al ; ret
0x000000000013bb7f : movzx eax, al ; ret
0x000000000013c35f : movzx eax, al ; ret
0x000000000013c3a0 : movzx eax, al ; ret
0x000000000013c4b6 : movzx eax, al ; ret
0x000000000013c4f6 : movzx eax, al ; ret
0x000000000002dd15 : movzx eax, ax ; ret
0x000000000002dd36 : movzx eax, ax ; ret
0x000000000002dd55 : movzx eax, ax ; ret
0x000000000002dd76 : movzx eax, ax ; ret
0x000000000002dd96 : movzx eax, ax ; ret
0x000000000002ddb6 : movzx eax, ax ; ret
0x000000000002ddd6 : movzx eax, ax ; ret
0x000000000002ddd5 : movzx eax, ax ; ret
0x000000000002ddf5 : movzx eax, ax ; ret
0x000000000002de16 : movzx eax, ax ; ret
0x000000000002de36 : movzx eax, ax ; ret
0x000000000002de56 : movzx eax, ax ; ret
0x000000000002df5e : movzx eax, ax ; ret
0x000000000002df7f : movzx eax, ax ; ret
0x000000000002df9e : movzx eax, ax ; ret
0x000000000002dfbf : movzx eax, ax ; ret
0x000000000002dfdf : movzx eax, ax ; ret
0x000000000002dfff : movzx eax, ax ; ret
0x000000000002e01f : movzx eax, ax ; ret
0x000000000002e01e : movzx eax, ax ; ret
0x000000000002e03e : movzx eax, ax ; ret
0x000000000002e05f : movzx eax, ax ; ret
0x000000000002e07f : movzx eax, ax ; ret
0x000000000002e09f : movzx eax, ax ; ret
0x000000000010a49c : movzx eax, ax ; ret
0x000000000010a52d : movzx eax, ax ; ret
0x000000000010a65c : movzx eax, ax ; ret
0x000000000010a77d : movzx eax, ax ; ret
0x000000000010a81d : movzx eax, ax ; ret
0x000000000010a8bd : movzx eax, ax ; ret
0x000000000010a8bc : movzx eax, ax ; ret
0x000000000010a95c : movzx eax, ax ; ret
0x000000000010a9ed : movzx eax, ax ; ret
0x000000000010aa85 : movzx eax, ax ; ret
0x000000000010ab1d : movzx eax, ax ; ret
0x000000000010ae35 : movzx eax, ax ; ret
0x000000000010aeb6 : movzx eax, ax ; ret
0x000000000010afb5 : movzx eax, ax ; ret
0x000000000010b0b6 : movzx eax, ax ; ret
0x000000000010b136 : movzx eax, ax ; ret
0x000000000010b1b6 : movzx eax, ax ; ret
0x000000000010b1b5 : movzx eax, ax ; ret
0x000000000010b235 : movzx eax, ax ; ret
0x000000000010b2b6 : movzx eax, ax ; ret
0x000000000010b336 : movzx eax, ax ; ret
0x000000000010b3b6 : movzx eax, ax ; ret
0x00000000001275dd : movzx eax, ax ; ret
0x00000000000c3255 : movzx eax, bh ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000713fd : movzx eax, bh ; ret
0x000000000007a78c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013033e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007bfb6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007a60d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d5 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007b42d : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007b61f : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000077f62 : movzx eax, byte ptr [rax] ; ret
0x0000000000077f99 : movzx eax, byte ptr [rax] ; ret
0x000000000007961a : movzx eax, byte ptr [rax] ; ret
0x000000000007cc4d : movzx eax, byte ptr [rax] ; ret
0x000000000008b128 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000008d39d : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000145a68 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000146a4d : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000014f808 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000150f6d : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000016e460 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ecc0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008b143 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000008d3b3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000145a83 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000146a63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000014f823 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000150f83 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007a620 : movzx eax, byte ptr [rdx] ; ret
0x000000000007a78d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aabe7 : movzx eax, cl ; pop rbx ; ret
0x00000000001193fd : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00000000000713fc : movzx eax, dil ; ret
0x00000000000aac0f : movzx eax, dl ; pop rbx ; ret
0x00000000000aac0f : movzx eax, dl ; pop rbx ; ret
0x000000000011940b : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000001193fc : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002dece : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002df47 : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010a5c5 : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010af2e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000f5f30 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000aa15a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa159 ; ret
0x00000000000aa20a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa209 ; ret
0x000000000016f304 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000016f611 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000008b140 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000008d3b0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000145a80 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000146a60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000014f820 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000150f80 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016e463 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000108a72 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000033bcf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33bb7 ; ret
0x000000000009f721 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000009f7e7 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000144dff : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000145bf8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000009f5b3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000171de4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000171e44 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000171e34 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171e24 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171e14 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171e13 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171e12 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171e04 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000171e03 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000171e02 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000171df4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000015b290 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015dd60 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000160880 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016f0b7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000016f102 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000171dcb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000171e7f : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000015b970 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015e440 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000160f60 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008ecc3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008ece9 : movzx edx, dl ; sub eax, edx ; ret
0x00000000000f8b4b : movzx edx, dl ; sub eax, edx ; ret
0x000000000015b210 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015dce0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000160800 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b900 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000015e3d0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000160ef0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000acb01 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000f8964 : movzx rax, al ; ret
0x0000000000088706 : mul al ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008d527 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000034951 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000003497f : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034cdf : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034d0c : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034950 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000003497e : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034cde : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034d0b : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000006e797 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000136d5f : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001373aa : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000035777 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000035e37 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047b33 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047bc7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047f57 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006b377 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006b3aa : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bc527 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bf617 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bf647 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cbf47 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc13a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc217 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc2d0 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc330 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc701 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cc787 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd297 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd437 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd467 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd4c7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd4f7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd527 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd557 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea777 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea7a7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea7d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea807 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea837 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea867 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea897 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ea8c7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f5ab6 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f5b16 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6b57 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6df7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6e27 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6ef7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6f27 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6fe7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7017 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7080 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f72a0 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7300 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7327 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f77b7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7930 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7957 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7987 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f79b7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f79e7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7a17 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7a80 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7aa7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f7ad7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8317 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8347 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8377 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f83aa : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8987 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f89ba : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f89e7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a17 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a47 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8a7a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8aa7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8ad7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8b07 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fb770 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fbaaa : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc256 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc977 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc9a7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fc9d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcd77 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcf57 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcfc0 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd020 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd4e7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd587 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd5f6 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd717 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd747 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd7b0 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd7d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd840 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd867 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdbd7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdc07 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdc37 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff187 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1b7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001014e9 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101757 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101787 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001017f0 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101817 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101847 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010187a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001018a7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001018d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101907 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000101937 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000105ffa : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106027 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106057 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010608a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001060ba : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001060e7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010611a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106147 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106177 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001061aa : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001061d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010620a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001072f7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107327 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010742c : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107457 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107497 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001074c7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001074f7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107527 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010774a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107777 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001077a7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001077d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010781a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107847 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107877 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001078a7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001078d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107907 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107937 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107967 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107997 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001079ca : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a36 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a57 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107a8a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ab7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ae7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b17 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b47 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107b77 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107baa : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107bda : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c07 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c37 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c6a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107c9a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107cca : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107d36 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107d57 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107dc6 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107de7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107e17 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107e86 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ea7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107eda : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f07 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f37 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107f6a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107fd0 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107ff7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010802a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010805a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001080e0 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108107 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108170 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108197 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001081c7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001081fa : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108227 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108356 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001083b0 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001084d0 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108536 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010855a : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108587 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001085b7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001085ea : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108b76 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108bd6 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108bf7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c27 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c57 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c87 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108cba : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108cea : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d17 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d47 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d77 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108da7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001406aa : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001406fa : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010ec03 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34f : neg eax ; pop rbx ; ret
0x00000000000fba62 : neg eax ; pop rbx ; ret
0x000000000002121d : neg eax ; ret
0x000000000006b31c : neg eax ; ret
0x000000000007305f : neg eax ; ret
0x0000000000077fcf : neg eax ; ret
0x000000000007cc8f : neg eax ; ret
0x00000000000abc67 : neg eax ; ret
0x00000000000ac180 : neg eax ; ret
0x00000000000ea9c3 : neg eax ; ret
0x00000000000f690f : neg eax ; ret
0x00000000001076fc : neg eax ; ret
0x0000000000107726 : neg eax ; ret
0x0000000000109a0b : neg eax ; ret
0x000000000017088d : neg eax ; ret
0x0000000000172937 : neg eax ; ret
0x0000000000088501 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000007d8c5 : neg edi ; call qword ptr [r15]
0x00000000000f7671 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000001890ac : neg edx ; jmp rcx
0x0000000000189014 : neg edx ; push rsp ; ret
0x0000000000189028 : neg edx ; push rsp ; ret
0x0000000000189094 : neg edx ; push rsp ; ret
0x000000000007d8c4 : neg rdi ; call qword ptr [r15]
0x00000000001aac70 : nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000000e3f58 : nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00000000000e3f57 : nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x0000000000073ed8 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000007a3dc : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000015a9c7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d497 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015ffab : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000035a93 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035b1c : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035c45 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035c96 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006d1fb : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdc58 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdc7d : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdcb1 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cdcfd : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce6d7 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce6f5 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce71d : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce76d : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000108643 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016e76c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec84 : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd9c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702b4 : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000023ff3 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000fd54d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c2232 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000c71f9 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a145d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a1475 ; ret
0x00000000001a146b : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1db7 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001b55d6 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a73d0 : nop ; add edi, ebp ; jmp rsi
0x000000000004b605 : nop ; add rax, rdi ; jmp rax
0x00000000000dfd76 : nop ; add rax, rdi ; jmp rax
0x000000000005bf55 : nop ; add rax, rdx ; jmp rax
0x0000000000063d2d : nop ; add rax, rdx ; jmp rax
0x0000000000063e64 : nop ; add rax, rdx ; jmp rax
0x00000000000c31e0 : nop ; add rax, rdx ; jmp rax
0x00000000000e6283 : nop ; add rax, rdx ; jmp rax
0x00000000000f262c : nop ; add rax, rdx ; jmp rax
0x00000000000f3801 : nop ; add rax, rdx ; jmp rax
0x0000000000134a47 : nop ; add rax, rdx ; jmp rax
0x00000000000aac5a : nop ; add rax, rsi ; jmp rax
0x00000000000ba00f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000ba00e : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006ac4f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000021a2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000021a2e : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077d4f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011f32f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e0ff : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013a93f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000758bf : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000758be : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000001b2cc0 : nop ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008eb1f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000009f0cf : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009f25f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000195bd8 : nop ; cld ; call qword ptr [rax]
0x0000000000195bf8 : nop ; cld ; call qword ptr [rax]
0x0000000000195c00 : nop ; cld ; call qword ptr [rax]
0x0000000000195c08 : nop ; cld ; call qword ptr [rax]
0x0000000000195c2c : nop ; cld ; call qword ptr [rax]
0x0000000000195c34 : nop ; cld ; call qword ptr [rax]
0x0000000000195c3c : nop ; cld ; call qword ptr [rax]
0x0000000000195c44 : nop ; cld ; call qword ptr [rax]
0x00000000001956b0 : nop ; cld ; inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000195c1c : nop ; cmp ah, bh ; call qword ptr [rax]
0x0000000000195be8 : nop ; cmp al, 0xfc ; call qword ptr [rax]
0x0000000000195c24 : nop ; cmp edi, esp ; call qword ptr [rax]
0x0000000000195be0 : nop ; cmp esp, edi ; call qword ptr [rax]
0x00000000001950b8 : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x00000000001b9fd0 : nop ; div bh ; call qword ptr [rdx]
0x000000000003512f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x000000000003512e : nop ; fstp st(1) ; add rsp, 8 ; ret
0x00000000001ad9c1 : nop ; hlt ; call qword ptr [rcx]
0x00000000001ad9a9 : nop ; hlt ; jmp qword ptr [rcx]
0x0000000000194f44 : nop ; insd dword ptr [rdi], dx ; sti ; jmp rax
0x0000000000194f5c : nop ; ja 0x194f5d ; call qword ptr [rax]
0x0000000000194f54 : nop ; je 0x194f55 ; call qword ptr [rax]
0x0000000000194f6c : nop ; jge 0x194f6d ; call qword ptr [rax]
0x00000000000352ef : nop ; jmp rdx
0x000000000011907f : nop ; jmp rdx
0x00000000001b0b90 : nop ; jo 0x1b0b8b ; jmp qword ptr [rcx]
0x0000000000194f64 : nop ; jp 0x194f65 ; call qword ptr [rax]
0x00000000001b1150 : nop ; jp 0x1b114b ; jmp qword ptr [rcx]
0x000000000007f42c : nop ; jp 0x7f430 ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000000d9b4f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000d9b4e : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000001a6980 : nop ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a69b0 : nop ; mov dh, ch ; jmp rbx
0x0000000000152bef : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001555bf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f8f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000011580f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000000000152dcf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015579f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015816f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000f6ecf : nop ; mov eax, 0x5f ; syscall ; ret
0x00000000000cda0f : nop ; mov eax, 0xfffa ; ret
0x00000000000cda0e : nop ; mov eax, 0xfffa ; ret
0x000000000007206f : nop ; mov eax, 0xffffffff ; ret
0x000000000007cf8f : nop ; mov eax, 0xffffffff ; ret
0x00000000000acd6f : nop ; mov eax, 1 ; ret
0x00000000000ff80f : nop ; mov eax, 1 ; ret
0x00000000000ff80e : nop ; mov eax, 1 ; ret
0x0000000000114957 : nop ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000113dcf : nop ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000abbff : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabc69 ; ret
0x00000000000abc4f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabc69 ; ret
0x00000000000fc30f : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000077eff : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000003686f : nop ; mov eax, dword ptr [rip + 0x38d816] ; ret
0x000000000003686e : nop ; mov eax, dword ptr [rip + 0x38d816] ; ret
0x000000000010adaf : nop ; mov eax, edi ; ret
0x000000000010adae : nop ; mov eax, edi ; ret
0x000000000010b60f : nop ; mov eax, edi ; ret
0x000000000010b60e : nop ; mov eax, edi ; ret
0x000000000011939f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000000368cf : nop ; mov eax, edx ; ret
0x00000000000368ce : nop ; mov eax, edx ; ret
0x000000000015318f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b5f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015852f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a735f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000007832f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007bf3f : nop ; mov rax, -1 ; ret
0x00000000000774cf : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773bf : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000013aaaf : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013ab8f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ac4f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ad0f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013adcf : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000120fcf : nop ; mov rax, qword ptr [rip + 0x2a48a1] ; ret
0x0000000000120fce : nop ; mov rax, qword ptr [rip + 0x2a48a1] ; ret
0x00000000000d179f : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d179e : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d398 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ec6f : nop ; mov rax, rdi ; ret
0x000000000009ec6e : nop ; mov rax, rdi ; ret
0x000000000017364f : nop ; mov rdi, r13 ; mov r13, r14 ; call 0x1f8b1
0x0000000000114705 : nop ; mov rdx, r13 ; call rax
0x0000000000084faf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000f5f4f : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000f5f4e : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000a5e1f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6aef : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a8eff : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a99cf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000196554 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000085543 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000000f5f2f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001953ec : nop ; or eax, 0x20fffc ; cld ; jmp rax
0x000000000019d580 : nop ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001953e8 : nop ; or edi, esp ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195b94 : nop ; pop rax ; cld ; call qword ptr [rax]
0x0000000000110a5f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f6a0f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001747ef : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001747ee : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a49f : nop ; pop rbx ; ret
0x000000000004a49e : nop ; pop rbx ; ret
0x000000000004a49d : nop ; pop rbx ; ret
0x000000000008912f : nop ; pop rbx ; ret
0x000000000008912e : nop ; pop rbx ; ret
0x00000000001375df : nop ; pop rbx ; ret
0x0000000000195968 : nop ; pop rdi ; cld ; jmp qword ptr [rax]
0x00000000001a0a60 : nop ; push rax ; jmp 0x1a0a66
0x0000000000195b6c : nop ; push rbp ; cld ; call qword ptr [rax]
0x0000000000195b7c : nop ; push rbx ; cld ; call qword ptr [rax]
0x0000000000195b5c : nop ; push rdi ; cld ; call qword ptr [rax]
0x0000000000195b64 : nop ; push rsi ; cld ; call qword ptr [rax]
0x0000000000195b74 : nop ; push rsp ; cld ; call qword ptr [rax]
0x00000000000080d8 : nop ; ret
0x000000000000bcf0 : nop ; ret
0x000000000002058f : nop ; ret
0x000000000002a66f : nop ; ret
0x000000000009eb2f : nop ; ret
0x000000000009eb2e : nop ; ret
0x00000000000aa4ef : nop ; ret
0x00000000000aa4ee : nop ; ret
0x0000000000117a6f : nop ; ret
0x000000000013225f : nop ; ret
0x000000000017433f : nop ; ret
0x0000000000002f9e : nop ; ret 0x5bdb
0x0000000000002f9d : nop ; ret 0x5bdb
0x0000000000005990 : nop ; ret 0xa
0x0000000000195388 : nop ; sar bl, cl ; jmp rax
0x0000000000195734 : nop ; sbb al, 0xfc ; jmp rax
0x0000000000194ea4 : nop ; sti ; push qword ptr [rax] ; sub bl, bh ; call rax
0x0000000000196174 : nop ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x000000000007c88f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000194f84 : nop ; xchg bl, bh ; call qword ptr [rax]
0x0000000000195e54 : nop ; xchg esp, edi ; jmp qword ptr [rax]
0x00000000001ad7f0 : nop ; xchg esp, esi ; call qword ptr [rax]
0x000000000008d7d9 : nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000c78af : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000074f5f : nop ; xor eax, eax ; ret
0x0000000000074f5e : nop ; xor eax, eax ; ret
0x000000000007bbff : nop ; xor eax, eax ; ret
0x000000000008ecef : nop ; xor eax, eax ; ret
0x00000000000f5dff : nop ; xor eax, eax ; ret
0x00000000000fc32f : nop ; xor eax, eax ; ret
0x0000000000114a2f : nop ; xor eax, eax ; ret
0x0000000000114a2e : nop ; xor eax, eax ; ret
0x0000000000114a4f : nop ; xor eax, eax ; ret
0x000000000012dd5f : nop ; xor eax, eax ; ret
0x000000000012dd5e : nop ; xor eax, eax ; ret
0x00000000001359ff : nop ; xor eax, eax ; ret
0x000000000008eb9f : nop ; xor rax, rax ; ret
0x000000000008eb9e : nop ; xor rax, rax ; ret
0x00000000001439e8 : nop dword ptr [rax + rax] ; call rcx
0x00000000000350d3 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000070153 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000a5d5b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a8e3b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a990b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001149d3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000106263 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033eab : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a6fcb : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a87db : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012c58b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a33 : nop dword ptr [rax + rax] ; ret
0x0000000000045a3b : nop dword ptr [rax + rax] ; ret
0x00000000000758c8 : nop dword ptr [rax + rax] ; ret
0x00000000000791cb : nop dword ptr [rax + rax] ; ret
0x000000000007caf8 : nop dword ptr [rax + rax] ; ret
0x0000000000088f08 : nop dword ptr [rax + rax] ; ret
0x0000000000095d0b : nop dword ptr [rax + rax] ; ret
0x000000000009eaeb : nop dword ptr [rax + rax] ; ret
0x000000000009eb88 : nop dword ptr [rax + rax] ; ret
0x00000000000a69e8 : nop dword ptr [rax + rax] ; ret
0x00000000000aa05b : nop dword ptr [rax + rax] ; ret
0x00000000000ac0ab : nop dword ptr [rax + rax] ; ret
0x00000000000ac788 : nop dword ptr [rax + rax] ; ret
0x00000000000ada93 : nop dword ptr [rax + rax] ; ret
0x00000000000d168b : nop dword ptr [rax + rax] ; ret
0x00000000000fe56b : nop dword ptr [rax + rax] ; ret
0x0000000000123ff3 : nop dword ptr [rax + rax] ; ret
0x00000000001266ab : nop dword ptr [rax + rax] ; ret
0x000000000012b7c8 : nop dword ptr [rax + rax] ; ret
0x000000000012bef8 : nop dword ptr [rax + rax] ; ret
0x000000000012bf18 : nop dword ptr [rax + rax] ; ret
0x000000000012e0a8 : nop dword ptr [rax + rax] ; ret
0x000000000013bd6b : nop dword ptr [rax + rax] ; ret
0x000000000013c703 : nop dword ptr [rax + rax] ; ret
0x0000000000141378 : nop dword ptr [rax + rax] ; ret
0x0000000000143558 : nop dword ptr [rax + rax] ; ret
0x000000000016d0c8 : nop dword ptr [rax + rax] ; ret
0x000000000017293b : nop dword ptr [rax + rax] ; ret
0x000000000003a7fb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000011ce63 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f03 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000045a2b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000048473 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000006de73 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000709bb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007a36b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007d26b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007df3b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000008b41b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000cea2b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000f6913 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001186a3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001233c3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000132463 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000013bdeb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000014a78b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000017231b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000abc6b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000006b475 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000abf3c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000174475 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00000000001436a4 : nop dword ptr [rax] ; call qword ptr [rax]
0x0000000000175139 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000ac845 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000ac835 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000ac83d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000cda05 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000368c4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000074f55 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000007cc6c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000088745 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000acb15 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000001234dc : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000012408d : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000124164 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000895d5 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012e08d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x000000000013964d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x00000000000c895d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000745fd : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002df1d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000a6a2d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076ccd : nop dword ptr [rax] ; mov edx, eax ; jmp 0x76c5a
0x0000000000094a14 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000010626d : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000848e5 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000000845dc : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000006dded : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x0000000000084ca4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000b9fac : nop dword ptr [rax] ; pop rbx ; ret
0x00000000000c7eed : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002bd51 : nop dword ptr [rax] ; ret
0x00000000000330bc : nop dword ptr [rax] ; ret
0x0000000000095d01 : nop dword ptr [rax] ; ret
0x00000000000a6ce9 : nop dword ptr [rax] ; ret
0x00000000000a84f9 : nop dword ptr [rax] ; ret
0x00000000000d1685 : nop dword ptr [rax] ; ret
0x0000000000104935 : nop dword ptr [rax] ; ret
0x000000000010cc29 : nop dword ptr [rax] ; ret
0x00000000001161fc : nop dword ptr [rax] ; ret
0x00000000001235c4 : nop dword ptr [rax] ; ret
0x000000000012beed : nop dword ptr [rax] ; ret
0x000000000013376c : nop dword ptr [rax] ; ret
0x0000000000133ffd : nop dword ptr [rax] ; ret
0x0000000000134fd9 : nop dword ptr [rax] ; ret
0x0000000000135879 : nop dword ptr [rax] ; ret
0x0000000000173d5d : nop dword ptr [rax] ; ret
0x0000000000173d9d : nop dword ptr [rax] ; ret
0x000000000017483d : nop dword ptr [rax] ; ret
0x000000000017486d : nop dword ptr [rax] ; ret
0x000000000017489d : nop dword ptr [rax] ; ret
0x00000000001748cd : nop dword ptr [rax] ; ret
0x00000000001748fd : nop dword ptr [rax] ; ret
0x0000000000110c05 : nop dword ptr [rax] ; sub eax, edi ; ret
0x00000000000d7cad : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d72ed : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000006acd4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000074e54 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000008d60c : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000aad81 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000aadc9 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000b9e89 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000b9f5d : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000d1765 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000124044 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000124195 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001266a1 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000012b79c : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000012e7d4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000013bdb5 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000013c221 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000013c31d : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001434fc : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000143e14 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000034a6d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a69e7 : nop dword ptr cs:[rax + rax] ; ret
0x00000000001439e7 : nop word ptr [rax + rax] ; call rcx
0x00000000000350d2 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000033eaa : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a6fca : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a87da : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012c58a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a3a : nop word ptr [rax + rax] ; ret
0x00000000000791ca : nop word ptr [rax + rax] ; ret
0x0000000000095d0a : nop word ptr [rax + rax] ; ret
0x000000000009eaea : nop word ptr [rax + rax] ; ret
0x00000000000aa05a : nop word ptr [rax + rax] ; ret
0x00000000000ac0aa : nop word ptr [rax + rax] ; ret
0x00000000000ada92 : nop word ptr [rax + rax] ; ret
0x00000000000d168a : nop word ptr [rax + rax] ; ret
0x00000000000fe56a : nop word ptr [rax + rax] ; ret
0x0000000000123ff2 : nop word ptr [rax + rax] ; ret
0x000000000013c702 : nop word ptr [rax + rax] ; ret
0x000000000017293a : nop word ptr [rax + rax] ; ret
0x000000000003a7fa : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f02 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000006de72 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007a36a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007d26a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007df3a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000cea2a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000f6912 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000013bdea : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000014a78a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000abc6a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000bf6ee : not eax ; add eax, 0x16e ; ret
0x000000000013c451 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000d7232 : not eax ; and eax, 2 ; ret
0x0000000000034790 : not eax ; and eax, edx ; ret
0x0000000000034b6c : not eax ; and eax, edx ; ret
0x0000000000034ec0 : not eax ; and eax, edx ; ret
0x0000000000035f63 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000218e1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000035f62 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000e3376 : or al, 0 ; add al, ch ; ret 0xf4a8
0x00000000000662e3 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000145d77 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147957 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147956 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149911 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b2de : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149989 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b32f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b32e : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cca3 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145da5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fce6a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000008241d : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000dc121 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089d00 : or al, 0 ; add byte ptr [rax], al ; ret
0x00000000000dc0eb : or al, 0 ; add byte ptr [rax], al ; ret
0x000000000012d9a2 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000082d8a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000082f2a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000662cc : or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000c00b1 : or al, 0 ; add rax, rdi ; jmp rax
0x00000000000c00b1 : or al, 0 ; add rax, rdi ; jmp rax
0x00000000000fc702 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000008f19a : or al, 0 ; cmove rax, rdx ; ret
0x000000000008f19a : or al, 0 ; cmove rax, rdx ; ret
0x00000000000abca0 : or al, 0 ; ret
0x00000000000ac87c : or al, 0 ; ret
0x00000000000ac884 : or al, 0 ; ret
0x00000000000959b2 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x959a9 ; ret
0x000000000008b126 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000008d39b : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000145a66 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000146a4b : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000014f806 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000150f6b : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000082f12 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000019d444 : or al, 0x19 ; add byte ptr [rax], al ; or rbp, rcx ; call qword ptr [rdx]
0x00000000000beb65 : or al, 0x20 ; mov rdx, rax ; jmp 0xbeb74
0x000000000012a514 : or al, 0x24 ; call r12
0x00000000001aea44 : or al, 0x2f ; add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x000000000010756a : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x0000000000053997 : or al, 0x31 ; div dh ; ret 0x4050
0x000000000013380b : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cc0e2 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000cc045 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000fc802 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000001178eb : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4e : or al, 0x48 ; add esp, 0x18 ; ret
0x000000000006b2e8 : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000f6aeb : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000fc74c : or al, 0x48 ; add esp, 0x18 ; ret
0x000000000010884d : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000c9623 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001437d1 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000035be9 : or al, 0x48 ; add esp, 0x90 ; pop rbx ; ret
0x0000000000070f03 : or al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000123051 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000ac254 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000000ac253 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c7633 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b523 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000bb642 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000011532a : or al, 0x5d ; pop r12 ; ret
0x0000000000189c28 : or al, 0x66 ; cmc ; push rsp ; cmc ; call rsp
0x000000000008e718 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000008e817 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000006c6da : or al, 0x7e ; ret
0x000000000006c86a : or al, 0x7e ; ret
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000a645c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a648c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64a9 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64c7 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a64ec : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6515 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6535 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a655e : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ea3 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ec2 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6ed7 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6fc2 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7afc : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b2c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b49 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b67 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7b8c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bb5 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bd5 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7bfe : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86b3 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86d2 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a86e7 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a87d2 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a97cc : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a97fc : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9819 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9837 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a985c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9885 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a98a5 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a98ce : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000aa052 : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000004bc85 : or al, 0x83 ; ret
0x000000000004bc84 : or al, 0x83 ; ret
0x0000000000056809 : or al, 0x83 ; ret
0x000000000005155c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000009ea32 : or al, 0x88 ; add rax, r9 ; jmp rax
0x00000000000948ef : or al, 0x88 ; add rax, rcx ; jmp rax
0x0000000000094b5f : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000002be45 : or al, 0x88 ; add rcx, r8 ; jmp rcx
0x00000000001a4444 : or al, 0x89 ; add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x13] ; jmp qword ptr [rcx]
0x00000000000e7615 : or al, 0x89 ; push rsp ; ret
0x0000000000118ceb : or al, 0x89 ; ret 0x6ae9
0x00000000000f2e5e : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x00000000000f377c : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000012d940 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000089d93 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008bc13 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008fb73 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000091e83 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014e653 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014f8d3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000161083 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001631f3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000091c74 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000091c8e : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000094369 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000009438e : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001485f4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014860e : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014a5b9 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014a5de : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014bfc4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014bfde : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d969 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d98e : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000163094 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001630ae : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001655e9 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000016560e : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000158f4d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000158faf : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015ba1d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015ba7f : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015e4f8 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015e55f : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000047c93 : or al, 0x8b ; add rcx, r11 ; jmp rcx
0x000000000015101d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000015107e : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001539ed : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000153a4e : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001563c4 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000015641e : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000003d495 : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004078d : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000043664 : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000010ada8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010b608 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000033299 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000016e44f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e55e : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e68f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e88b : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e922 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016e9a0 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016ea66 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016eb98 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016eda3 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016ee32 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016eeac : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016fa8d : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016fb8e : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016fcbf : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016febb : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016ff52 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016ffd0 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000170096 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000001701c8 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000001703d3 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000170462 : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000001704dc : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a5beb : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c43 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c60 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c85 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5ca7 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5cbd : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5ce9 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5d1e : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6300 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6329 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6357 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6429 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a71eb : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7243 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7260 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7285 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72a7 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72bd : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72e9 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a731e : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7990 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79b9 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79e7 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7ac9 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8ccb : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d23 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d40 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d65 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d87 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d9d : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8dc9 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8dfe : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9636 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96a3 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96c0 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96e5 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9707 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a971d : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9749 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a977e : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9799 : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000005c1ef : or al, 0xa0 ; add rax, rcx ; jmp rax
0x00000000001bc4b1 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001a6444 : or al, 0xa9 ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0x12], cl ; jmp qword ptr [rdx]
0x0000000000002bce : or al, 0xaf ; xbegin 0xfffffffff8c6efd2 ; ret
0x0000000000151021 : or al, 0xb ; jmp r9
0x0000000000151082 : or al, 0xb ; jmp r9
0x00000000001539f1 : or al, 0xb ; jmp r9
0x0000000000153a52 : or al, 0xb ; jmp r9
0x00000000001563c8 : or al, 0xb ; jmp r9
0x0000000000156422 : or al, 0xb ; jmp r9
0x00000000000a5bef : or al, 0xb ; jmp rcx
0x00000000000a5c47 : or al, 0xb ; jmp rcx
0x00000000000a5c64 : or al, 0xb ; jmp rcx
0x00000000000a5c89 : or al, 0xb ; jmp rcx
0x00000000000a5cab : or al, 0xb ; jmp rcx
0x00000000000a5cc1 : or al, 0xb ; jmp rcx
0x00000000000a5ced : or al, 0xb ; jmp rcx
0x00000000000a5d22 : or al, 0xb ; jmp rcx
0x00000000000a6304 : or al, 0xb ; jmp rcx
0x00000000000a632d : or al, 0xb ; jmp rcx
0x00000000000a635b : or al, 0xb ; jmp rcx
0x00000000000a642d : or al, 0xb ; jmp rcx
0x00000000000a6460 : or al, 0xb ; jmp rcx
0x00000000000a6490 : or al, 0xb ; jmp rcx
0x00000000000a64ad : or al, 0xb ; jmp rcx
0x00000000000a64cb : or al, 0xb ; jmp rcx
0x00000000000a64f0 : or al, 0xb ; jmp rcx
0x00000000000a6519 : or al, 0xb ; jmp rcx
0x00000000000a6539 : or al, 0xb ; jmp rcx
0x00000000000a6562 : or al, 0xb ; jmp rcx
0x00000000000a6ea7 : or al, 0xb ; jmp rcx
0x00000000000a6ec6 : or al, 0xb ; jmp rcx
0x00000000000a6edb : or al, 0xb ; jmp rcx
0x00000000000a6fc6 : or al, 0xb ; jmp rcx
0x00000000000a71ef : or al, 0xb ; jmp rcx
0x00000000000a7247 : or al, 0xb ; jmp rcx
0x00000000000a7264 : or al, 0xb ; jmp rcx
0x00000000000a7289 : or al, 0xb ; jmp rcx
0x00000000000a72ab : or al, 0xb ; jmp rcx
0x00000000000a72c1 : or al, 0xb ; jmp rcx
0x00000000000a72ed : or al, 0xb ; jmp rcx
0x00000000000a7322 : or al, 0xb ; jmp rcx
0x00000000000a7994 : or al, 0xb ; jmp rcx
0x00000000000a79bd : or al, 0xb ; jmp rcx
0x00000000000a79eb : or al, 0xb ; jmp rcx
0x00000000000a7acd : or al, 0xb ; jmp rcx
0x00000000000a7b00 : or al, 0xb ; jmp rcx
0x00000000000a7b30 : or al, 0xb ; jmp rcx
0x00000000000a7b4d : or al, 0xb ; jmp rcx
0x00000000000a7b6b : or al, 0xb ; jmp rcx
0x00000000000a7b90 : or al, 0xb ; jmp rcx
0x00000000000a7bb9 : or al, 0xb ; jmp rcx
0x00000000000a7bd9 : or al, 0xb ; jmp rcx
0x00000000000a7c02 : or al, 0xb ; jmp rcx
0x00000000000a86b7 : or al, 0xb ; jmp rcx
0x00000000000a86d6 : or al, 0xb ; jmp rcx
0x00000000000a86eb : or al, 0xb ; jmp rcx
0x00000000000a87d6 : or al, 0xb ; jmp rcx
0x00000000000a8ccf : or al, 0xb ; jmp rcx
0x00000000000a8d27 : or al, 0xb ; jmp rcx
0x00000000000a8d44 : or al, 0xb ; jmp rcx
0x00000000000a8d69 : or al, 0xb ; jmp rcx
0x00000000000a8d8b : or al, 0xb ; jmp rcx
0x00000000000a8da1 : or al, 0xb ; jmp rcx
0x00000000000a8dcd : or al, 0xb ; jmp rcx
0x00000000000a8e02 : or al, 0xb ; jmp rcx
0x00000000000a963a : or al, 0xb ; jmp rcx
0x00000000000a96a7 : or al, 0xb ; jmp rcx
0x00000000000a96c4 : or al, 0xb ; jmp rcx
0x00000000000a96e9 : or al, 0xb ; jmp rcx
0x00000000000a970b : or al, 0xb ; jmp rcx
0x00000000000a9721 : or al, 0xb ; jmp rcx
0x00000000000a974d : or al, 0xb ; jmp rcx
0x00000000000a9782 : or al, 0xb ; jmp rcx
0x00000000000a979d : or al, 0xb ; jmp rcx
0x00000000000a97d0 : or al, 0xb ; jmp rcx
0x00000000000a9800 : or al, 0xb ; jmp rcx
0x00000000000a981d : or al, 0xb ; jmp rcx
0x00000000000a983b : or al, 0xb ; jmp rcx
0x00000000000a9860 : or al, 0xb ; jmp rcx
0x00000000000a9889 : or al, 0xb ; jmp rcx
0x00000000000a98a9 : or al, 0xb ; jmp rcx
0x00000000000a98d2 : or al, 0xb ; jmp rcx
0x00000000000aa056 : or al, 0xb ; jmp rcx
0x00000000001358a8 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000013c6f7 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000001358be : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001358bd : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c483 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c4c3 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003646f : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x000000000003675f : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000001a8244 : or al, 0xc7 ; add byte ptr [rax], al ; call 0x281a729a
0x0000000000036473 : or al, 0xc7 ; xor eax, eax ; pop rbx ; ret
0x0000000000036763 : or al, 0xc7 ; xor eax, eax ; pop rbx ; ret
0x00000000001a9a44 : or al, 0xdf ; add byte ptr [rax], al ; clc ; movsxd rsi, ecx ; call qword ptr [rdx]
0x000000000013b3d7 : or al, 0xe8 ; ret
0x00000000000abb55 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000abb54 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a66e3 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000015b493 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b492 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015df63 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015df62 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160a83 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160a82 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000357a3 : or al, 0xf3 ; ret
0x000000000008f273 : or al, 0xf3 ; ret
0x00000000001076b3 : or al, 0xf3 ; ret
0x00000000001175a3 : or al, 0xf3 ; ret
0x0000000000117653 : or al, 0xf3 ; ret
0x00000000001ab144 : or al, 0xf6 ; add byte ptr [rax], al ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x0000000000199291 : or al, 0xf6 ; call rsp
0x0000000000122992 : or al, 0xf6 ; ret 0xc602
0x000000000006ce2b : or al, 0xf6 ; ret 0xf04
0x000000000005678c : or al, 0xf6 ; ret 0xf08
0x00000000000576ce : or al, 0xf6 ; ret 0xf08
0x00000000001011c5 : or al, 0xf7 ; ret 0xfc07
0x000000000002b391 : or al, 0xf8 ; test rcx, rcx ; je 0x2b3a1 ; call rcx
0x00000000001953a8 : or al, 0xfb ; call rax
0x00000000000f67f2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000f68e2 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001bbf44 : or al, 4 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000000a6920 : or al, 5 ; add byte ptr [rax], al ; ret
0x00000000000a8130 : or al, 5 ; add byte ptr [rax], al ; ret
0x00000000000b9e69 : or al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x000000000009eb26 : or al, 7 ; test cl, cl ; jne 0x9eb1f ; ret
0x000000000009d4ef : or al, byte ptr [rax] ; add bh, dh ; ret 0
0x000000000009d4fb : or al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000097b2b : or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000b3ead : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000037371 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000144f4d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145013 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145f57 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146047 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147af7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149af1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf48 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147b61 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149b69 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b47f : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144f71 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f85 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000102a0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010af2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012d982 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000196685 : or al, byte ptr [rax] ; add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x00000000000dfd71 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000e1ff8 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e1ff8 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e627e : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000ac60a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000003cfc1 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000000402b9 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x0000000000043190 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x000000000006f2bd : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x0000000000126359 : or al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000019ab0d : or al, byte ptr [rdx] ; add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x000000000014cf47 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012b092 : or al, ch ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000009f482 : or al, ch ; cwde ; ret 0xfffe
0x0000000000045b5d : or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012bf3b : or al, ch ; out dx, eax ; ret 0
0x000000000006dcd7 : or al, ch ; ret
0x000000000013bc07 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc77 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bce7 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd57 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008b451 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x000000000007781d : or bh, byte ptr [rax - 1] ; ret
0x0000000000077b9d : or bh, byte ptr [rax - 1] ; ret
0x0000000000045be1 : or bh, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b9e6f : or bh, byte ptr [rcx] ; ret
0x00000000000b9f45 : or bh, byte ptr [rcx] ; ret
0x00000000000e513f : or bh, dh ; ret
0x00000000000ffe1f : or bh, dh ; ret 0xfc07
0x000000000012affe : or bl, al ; mov eax, 1 ; ret
0x00000000000ac843 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000010626b : or bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000124193 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000123ff0 : or bl, al ; nop word ptr [rax + rax] ; ret
0x0000000000194e39 : or bl, bh ; jmp rax
0x00000000001bc6c6 : or bl, byte ptr [rax] ; add byte ptr [rax], al ; loopne 0x1bc6dd ; ret 0xb
0x00000000000022dc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b6e ; ret
0x0000000000096c75 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000104c30 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ea698 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x000000000011938d : or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00000000000780e8 : or bl, ch ; xchg eax, edx ; mov edx, eax ; jmp 0x78084
0x000000000015b653 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e123 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160c43 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002da7f : or bl, dh ; ret
0x0000000000035737 : or bl, dh ; ret
0x0000000000073027 : or bl, dh ; ret
0x00000000000ac91a : or bl, dh ; ret
0x00000000000c9ea2 : or bl, dh ; ret
0x00000000000cb3b2 : or bl, dh ; ret
0x00000000000fe443 : or bl, dh ; ret
0x000000000010931d : or bl, dh ; ret
0x000000000010c252 : or bl, dh ; ret
0x000000000010d9d2 : or bl, dh ; ret
0x000000000011aa35 : or bl, dh ; ret
0x000000000011b3c5 : or bl, dh ; ret
0x000000000011bd62 : or bl, dh ; ret
0x000000000011cc92 : or bl, dh ; ret
0x0000000000120902 : or bl, dh ; ret
0x0000000000124a03 : or bl, dh ; ret
0x0000000000131cc2 : or bl, dh ; ret
0x0000000000174683 : or bl, dh ; ret
0x00000000000d5998 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x000000000012c4a8 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000d5911 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000d9b51 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000033e4d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000aca36 : or byte ptr [r13 + r13*4 + 0x48], r14b ; mov eax, ebx ; pop rbx ; ret
0x00000000000a2b7f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a554f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d5902 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d59ce : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000074087 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000d7252 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000000d59e1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013bb4a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000013bb5a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000013bb8a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000013bb9a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000a2b5e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00000000000a552e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000166ca8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e3cd : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e418 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e772 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000001389da : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000eb92f : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000039f32 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000103207 : or byte ptr [r8 - 0x7d], r9b ; ret
0x000000000014d122 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000bf2d3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x00000000000d9934 : or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000a2bbe : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000000a558e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000166d67 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000016e407 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000007250f : or byte ptr [r9 - 0x77], r9b ; ret
0x00000000000d5971 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d5931 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x000000000012bf73 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000074088 : or byte ptr [rax + 0x29], cl ; ret
0x00000000000bbc84 : or byte ptr [rax + 0x29], cl ; ret
0x000000000013f9a4 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x0000000000140627 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x00000000000bbc83 : or byte ptr [rax + 0x29], r9b ; ret
0x000000000007cc47 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000105ca5 : or byte ptr [rax + 0x39], cl ; ret
0x000000000008231c : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000048e15 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000001336f9 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000d7253 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x00000000001a9eca : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000001afeac : or byte ptr [rax + 0xb], cl ; ret
0x00000000001b69ca : or byte ptr [rax + 0xb], cl ; ret
0x00000000001aca0d : or byte ptr [rax + 0xb], dl ; ret
0x00000000001193fb : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000010ea5f : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000013052e : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000013a935 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000013b142 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000013bef3 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000013bf39 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000310dc : or byte ptr [rax + 1], cl ; ret
0x00000000000313ba : or byte ptr [rax + 1], cl ; ret
0x00000000001063de : or byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; ret
0x0000000000112fab : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x000000000004b158 : or byte ptr [rax + rcx*4 - 0x73], al ; push -0x76000005 ; ret 0x8941
0x00000000000d59e2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000de6fb : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000012fd0b : or byte ptr [rax - 0x3f], cl ; in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x000000000008f34e : or byte ptr [rax - 0x73], cl ; add eax, 0x10e4a ; ret
0x000000000008ebc2 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x000000000009443d : or byte ptr [rax - 0x73], cl ; add eax, 0xb3db ; ret
0x000000000009440e : or byte ptr [rax - 0x73], cl ; add eax, 0xb63a ; ret
0x00000000000ac876 : or byte ptr [rax - 0x73], cl ; add eax, 0xc31f2 ; ret
0x000000000008ebd6 : or byte ptr [rax - 0x73], cl ; add eax, 0xdf852 ; ret
0x00000000000ac862 : or byte ptr [rax - 0x73], cl ; add eax, 0xe916 ; ret
0x00000000000abc92 : or byte ptr [rax - 0x73], cl ; add eax, 0xf596 ; ret
0x000000000011622e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff8980a ; ret
0x000000000011631e : or byte ptr [rax - 0x73], cl ; add eax, 0xfff89e6a ; ret
0x000000000013b5e8 : or byte ptr [rax - 0x73], cl ; je 0x13b61a ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b72c : or byte ptr [rax - 0x73], cl ; je 0x13b75e ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000007ee43 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000010a3a1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a402 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000102d41 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000f4186 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000000dcd9f : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013bb4b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000013bb5b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000013bb8b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000013bb9b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006ddd4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000006de26 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000012d95d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000134fb2 : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000135852 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000a2b5f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00000000000a552f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x0000000000113ea5 : or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000114228 : or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000114401 : or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000114530 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000896fb : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000038f4a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003920a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a2a70 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a2a6f : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a2b62 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a2b61 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a2b84 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a2b83 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a2bc2 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a2bc1 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a2c46 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a2c45 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5440 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a543f : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5532 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5531 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5554 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5553 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5592 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5591 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5616 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5615 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a56d3 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5776 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5775 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a57f2 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a590e : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a59c1 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000166cad : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000166cac : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000166d6b : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000166d6a : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e3d2 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e3d1 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e40b : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e40a : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e41d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e41c : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000119098 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000326a9 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000077d3a : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000094e96 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000096c0e : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000096c25 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000ff6df : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001389db : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000013a90e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000013b173 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000166ca9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e3ce : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000016e419 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e773 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000000859c1 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012d74b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007db2a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000098f97 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c0613 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c0755 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c07ee : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c090b : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c09d8 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c0aba : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c0b13 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c0c1c : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c0cab : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c0db2 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c0e3c : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c0f54 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c149a : or byte ptr [rax - 0x77], cl ; ret
0x00000000000ceefa : or byte ptr [rax - 0x77], cl ; ret
0x00000000000edc94 : or byte ptr [rax - 0x77], cl ; ret
0x000000000012f955 : or byte ptr [rax - 0x77], cl ; ret 0x314c
0x000000000013b87f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b93f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b9ff : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013babf : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000efcab : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000023433 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000023432 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000eb930 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000130245 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000039f33 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000895cd : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00000000000895cc : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x0000000000089677 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000898d9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x0000000000082318 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416b2f
0x0000000000082317 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416b30
0x0000000000082f48 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000048c36 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000004a4f9 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000103137 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000103208 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000126fb0 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000094aa6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000120014 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000094b2e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000006e67e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000054d42 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000007044b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000074998 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007a66f : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000140db0 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007413d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000001451ac : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007d9d4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007d995 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000001451ad : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146227 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149cd1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b6ce : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d0c8 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147d01 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d49 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b71f : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d123 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001451d1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146165 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bc587 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007bb1c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007bb1b : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000084086 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000191c0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001c058 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x000000000001e668 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x000000000001a078 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d0
0x000000000001b3b0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18f8
0x000000000000b530 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000000218a1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000aac99 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012d992 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000083f86 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x83f59 ; ret
0x00000000000f330c : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f488e : or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000004a608 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000105e6d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000108a70 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000a9c8d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9ccb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9c6b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000006abcb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006abdd : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000014b71e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004876c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000123e8f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x0000000000123fd2 : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x00000000000aca37 : or byte ptr [rbp + rbp*4 + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00000000000d6f24 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x00000000000bb222 : or byte ptr [rbp - 0x28], dh ; ret
0x000000000003d31d : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d41d : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040615 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040715 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000434ec : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000435ec : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000ac729 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000000dc5db : or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00000000001b0808 : or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000003cdf : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000001fc02 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x000000000012e87b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000071fc2 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000000842a0 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000032dc3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003ae45 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003aecd : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000004a8d9 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000054bae : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000055b32 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005b85c : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000634b0 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000734a7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007a454 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007bbce : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007d030 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007d576 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000084e4b : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000087792 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009f2d4 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000aa87c : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000aa9cb : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000b9e81 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000fb671 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000fb6f8 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000fef94 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ffe8d : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ffec1 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000010126d : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000109501 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000010ad4b : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000010b5ab : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000010bdf7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000011754f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000011866f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000123367 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000012b0de : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000132900 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013549a : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000138453 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001384a6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000138513 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000017400a : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000017476e : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008964f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000021a33 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000021aac : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000002e6a5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003a091 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003a621 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003b1e3 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003b242 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000006dde9 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000006e6bd : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000072dc0 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007912f : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000079838 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007a613 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007c797 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007c8d5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007df8b : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000083092 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000841f2 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000085906 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000089085 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d905 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000094e7c : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ac2c5 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ba329 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bb6f5 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bd08f : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bdb6e : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c8842 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cf4ae : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d71f6 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ef920 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f44b8 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f5c2a : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f5c57 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000101e31 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001023b3 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000106317 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001072d8 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010ec35 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010ec8a : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010ecba : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010ecea : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000112d33 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000112f47 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000115898 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001158ba : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000011f2f8 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000011f399 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000011f930 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000124040 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001287c1 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012b9ea : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012d6da : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012e222 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012e866 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012f666 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001303e1 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000130473 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000130623 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013ddd0 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000140ca8 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000174145 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000017514e : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001752ee : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007915a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000019d11d : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x0000000000033e4e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000050197 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000013dcde : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000013dcde : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000006d3d1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000006d3d0 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000070a77 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000019d4f0 : or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x000000000019d550 : or byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x00000000001af518 : or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001bc581 : or byte ptr [rbx], al ; ret
0x000000000004a00b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000bf2d4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x0000000000054b89 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00000000001426b5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e1a77 : or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000000d9935 : or byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x00000000001a0eea : or byte ptr [rcx + 0xb], cl ; ret
0x000000000006c203 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000004842b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000490b0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000013eae3 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000001316b3 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x000000000011ff5c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x000000000013b5ed : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b731 : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x0000000000037d67 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x00000000000391a7 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x0000000000039228 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x0000000000039263 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x0000000000048432 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000004a012 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000007763a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000d6eec : or byte ptr [rcx - 0x75], cl ; je 0xd6f1c ; or byte ptr [rcx], ch ; ret
0x00000000000a2bbf : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000a558f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000166d68 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000016e408 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000da623 : or byte ptr [rcx - 0x77], al ; ret 0xff25
0x00000000000da726 : or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000072510 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000003ce6f : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x0000000000040166 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x0000000000043063 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000010a478 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a48a ; ret
0x000000000010a508 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a51a ; ret
0x000000000010a5a8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a5ba ; ret
0x000000000010a638 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a64a ; ret
0x000000000010a6c8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a6da ; ret
0x000000000010a758 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a76a ; ret
0x000000000010a7f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a80a ; ret
0x000000000010a898 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a8aa ; ret
0x000000000010a938 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a94a ; ret
0x000000000010a9c8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a9da ; ret
0x000000000010aa63 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10aa75 ; ret
0x000000000010aaf8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10ab0a ; ret
0x000000000010ae1a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10ae2c ; ret
0x000000000010ae9a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10aeac ; ret
0x000000000010af1a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10af2c ; ret
0x000000000010af9a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10afac ; ret
0x000000000010b01a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b02c ; ret
0x000000000010b09a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b0ac ; ret
0x000000000010b11a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b12c ; ret
0x000000000010b19a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b1ac ; ret
0x000000000010b21a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b22c ; ret
0x000000000010b29a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b2ac ; ret
0x000000000010b317 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b329 ; ret
0x000000000010b39a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b3ac ; ret
0x0000000000083b29 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000003909a : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e3cd8 : or byte ptr [rcx - 0x7d], cl ; ret 0x4501
0x0000000000037611 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00000000000e8c0a : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00000000001982c5 : or byte ptr [rcx], al ; add ah, ah ; cli ; out dx, eax ; call rsp
0x00000000000f6802 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000359df : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000035a32 : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f68f4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d59b7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d5932 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000bb21f : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000013f413 : or byte ptr [rcx], bh ; ret 0x3875
0x00000000000d5972 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000b9eed : or byte ptr [rcx], ch ; ret
0x00000000000d6ef1 : or byte ptr [rcx], ch ; ret
0x00000000000e5553 : or byte ptr [rcx], ch ; ret
0x000000000012550c : or byte ptr [rcx], cl ; ret 0xb60f
0x0000000000115a40 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000022b4e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000039df3 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003a583 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000006dd60 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000006e2a3 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000077961 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000009f301 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000d7143 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fb683 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fefa3 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010ad5b : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010b5bb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000117833 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000013a1d6 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e7bbb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007db6b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007c8cf : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000185a7e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a3ff3 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000001a2674 : or byte ptr [rdi + 0xb], al ; jae 0x1a2688 ; ret
0x00000000001a02f9 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xaae0202], al ; ret
0x0000000000026ec3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000002a219 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000002dd14 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000002dd75 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000002df5d : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000002dfbe : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010a49b : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010ae34 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000001275dc : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007b42c : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000007b61e : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077f61 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000077f98 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000cf263 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000d054c : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000006c851 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000077fcb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000001076f8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000012f5e9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013043c : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000130494 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000001304fa : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000001305f9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013a8db : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013b10f : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000453b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000e88d2 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ff809 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000130361 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000130386 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001303a6 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c4b5 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c4f5 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000035d64 : or byte ptr [rdi], cl ; ret 0xc289
0x00000000001515eb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015173b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015188b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001519db : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000151b2b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000151c7b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000151dcb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000151f1b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015206b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001521bb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015230b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015245b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001525ab : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001526fb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015284b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000153fbb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015410b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015425b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001543ab : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001544fb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015464b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015479b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001548eb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000154a3b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000154b8b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000154cdb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000154e2b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000154f7b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001550cb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015521b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015698b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000156adb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000156c2b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000156d7b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000156ecb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015701b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015716b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001572bb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015740b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015755b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001576ab : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000001577fb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000015794b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000157a9b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000157beb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000004753f : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc221
0x000000000004c38e : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000004e1bb : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000002086a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000001b2d88 : or byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x000000000019dba2 : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x00000000001bc36d : or byte ptr [rdx], al ; add al, dh ; jns 0x1bc371 ; call qword ptr [rcx]
0x00000000000d7ca7 : or byte ptr [rdx], al ; jne 0xd7c85 ; jmp 0xd7c75
0x00000000000d5912 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d9b52 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d5999 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x000000000012c4a9 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000fc312 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000fc328 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000fc311 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000fc327 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000fc5fa : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00000000000a5771 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000010f77b : or byte ptr [rsi + rbx + 0x4c], dh ; mov edx, eax ; jmp 0x10f791
0x00000000000d7331 : or byte ptr [rsi + rdx*4 + 0x5b], dh ; ret
0x00000000000a2b80 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000a5550 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d59cf : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000edbd0 : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000edbcf : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000d5903 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003cde : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000003cdd : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000096af1 : or ch, bl ; ret 0x1f0f
0x00000000001bc5e8 : or ch, byte ptr [rdi + 5] ; ret
0x00000000001bc6cb : or ch, byte ptr [rsi] ; ret 0xb
0x000000000004763f : or cl, al ; call 0xffffffffc28db76b
0x00000000000da620 : or cl, al ; jmp 0xffffffffc296e735
0x00000000000da61f : or cl, al ; jmp 0xffffffffc296e736
0x00000000000da723 : or cl, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x000000000003505b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000bb2c7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000029d94 : or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00000000000ac165 : or cl, byte ptr [rax + 0x39] ; ret 0xe575
0x000000000007a5fe : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000078bd7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000662cb : or cl, byte ptr [rax + rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000072faf : or cl, byte ptr [rax - 0x77] ; ret
0x00000000000e8446 : or cl, byte ptr [rax - 0x77] ; ret 0xa1e8
0x00000000000c15c2 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c1787 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c1b3b : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c1d87 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c1e17 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c2ed8 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c2f6b : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000006f75c : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000077640 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000008dc6a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000950aa : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000095e32 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d980f : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000004ac1a : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000005032a : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000006bcc4 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001118da : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000111929 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000111978 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001119c7 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000111a19 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000111a64 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000111aaf : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000111afa : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000111b45 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011e151 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011ee27 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011f6d0 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011f7bc : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000127c5d : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000127cc4 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000127d24 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000127d84 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000127de4 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000127e44 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000127ea4 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000137628 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001377bb : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000137a43 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000003d45d : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040755 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004362c : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000071f87 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000119435 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000001f963 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000013e05f : or cl, byte ptr [rcx + 0x39] ; ret
0x000000000010e6c2 : or cl, byte ptr [rcx - 0x77] ; fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x00000000001193b5 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000168bd6 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000168bd5 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000008638a : or cl, byte ptr [rdi] ; xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x000000000003d323 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d343 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d363 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d383 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d3a3 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d3c3 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d3e3 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d403 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d423 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d443 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d463 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d47f : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d49b : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d4b7 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004061b : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004063b : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004065b : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004067b : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004069b : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000406bb : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000406db : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000406fb : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004071b : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004073b : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004075b : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040777 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040793 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000407af : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000434f2 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043512 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043532 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043552 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043572 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043592 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000435b2 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000435d2 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000435f2 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043612 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043632 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004364e : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004366a : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043686 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000013dce1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000013dce1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000019d169 : or cl, ch ; call qword ptr [rdi]
0x00000000001aa108 : or cl, ch ; int1 ; jmp qword ptr [rdi]
0x00000000000356f7 : or cl, ch ; ret
0x0000000000095ff4 : or cl, ch ; ret
0x00000000000e5720 : or cl, ch ; ret 0xfffe
0x0000000000002beb : or cl, cl ; clc ; ret
0x0000000000002bea : or cl, cl ; clc ; ret
0x000000000008d7b5 : or cl, cl ; cmove rax, rdx ; ret
0x000000000008d7b5 : or cl, cl ; cmove rax, rdx ; ret
0x000000000015b573 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e043 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160b63 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001056c5 : or dh, bl ; ret
0x0000000000107385 : or dh, bl ; ret
0x000000000010ab88 : or dh, bl ; ret
0x000000000010abe3 : or dh, bl ; ret
0x000000000010b40a : or dh, bl ; ret
0x000000000010b457 : or dh, bl ; ret
0x00000000000aae16 : or dh, byte ptr [rbp - 0x11] ; ret
0x00000000001979e9 : or dh, ch ; jmp rsp
0x0000000000199259 : or dh, dh ; jmp rsp
0x0000000000081ef3 : or dh, dh ; ret 0x7404
0x00000000000f71f3 : or dh, dh ; ret 0x7540
0x00000000000f7223 : or dh, dh ; ret 0x7540
0x000000000012de84 : or dh, dh ; ret 0x8802
0x0000000000081e66 : or dh, dh ; ret 0xf04
0x0000000000081f07 : or dh, dh ; ret 0xf04
0x000000000001fe58 : or dh, dh ; ret 0xf08
0x000000000002f3de : or dh, dh ; ret 0xfdf
0x0000000000095752 : or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x000000000006656e : or dword ptr [eax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000011feb0 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a87e8 ; call rax
0x0000000000132293 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x000000000010e7f9 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a3009
0x000000000009931b : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000009a40b : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000089a6e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000008b26e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000008f95e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000020580 : or dword ptr [rax], eax ; add bl, dh ; ret
0x00000000001450dd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146137 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147c97 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b57e : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b5cf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cfa3 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145037 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145101 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146075 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000073c9f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007464f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000748b6 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000075af2 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007a6cf : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000007a8df : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000fbb52 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002122a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000f5d68 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006656f : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a4cc5 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000758b4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000ed470 : or dword ptr [rax], eax ; call 0x39764
0x00000000000f2133 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f2133 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f2e5a : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f3778 : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f2627 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000f37fc : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000001bc71e : or dword ptr [rax], ebx ; add byte ptr [rax], al ; loopne 0x1bc734 ; ret 0xa
0x000000000003d43d : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040735 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004360c : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000016f886 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000012e1a6 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000010e0a6 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000eed3b : or dword ptr [rbx - 0x7af0f508], eax ; ret 0xa
0x000000000006dde3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000789d0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007d0a8 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000000488bc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000008b3c8 : or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x0000000000070fee : or dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000086356 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000095c44 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000b8550 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000d5320 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x0000000000086539 : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000143736 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000035f43 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000006ddf0 : or dword ptr [rdi], 0x20 ; ret
0x00000000000fc3c7 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000036086 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000011cfeb : or dword ptr [rdi], ecx ; ret
0x0000000000168bb6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000008b372 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x0000000000101b2a : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001020aa : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006ad8e : or dword ptr [rdx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000001ae78a : or dword ptr [rsi], 0x54028310 ; ret
0x00000000000269b0 : or dword ptr [rsi], 0xea810000 ; ret 0
0x000000000004c8ac : or dword ptr [rsi], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bc723 : or dword ptr [rsi], ebp ; ret 0xa
0x0000000000137383 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000088852 : or eax, 0x1042ce ; mov rdx, rcx ; jmp 0x88827
0x00000000000fc8ea : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000347fb : or eax, 0x15fb10 ; orpd xmm0, xmm1 ; ret
0x00000000000a7621 : or eax, 0x1c478d48 ; ret
0x00000000000a8471 : or eax, 0x1d478d48 ; ret
0x0000000000168c38 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000194e8d : or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x00000000001953ed : or eax, 0x20fffc ; cld ; jmp rax
0x000000000007bc62 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000000fc8a1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000001a52dc : or eax, 0x380e0a03 ; ret
0x00000000000b33f4 : or eax, 0x3d8d4800 ; ret
0x00000000000b1943 : or eax, 0x3e1ba00 ; add byte ptr [rax], al ; call 0x2dc49
0x000000000006c232 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c95a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000be065 : or eax, 0x440f4800 ; ret 0x8d48
0x00000000000c911f : or eax, 0x480007a4 ; mov eax, ebx ; call rax
0x000000000013821b : or eax, 0x48640029 ; mov dword ptr [rax], edx ; ret
0x00000000000967a2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000bfe1a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x000000000012cb7f : or eax, 0x4c0000de ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000006acc2 : or eax, 0x5bd88948 ; ret
0x00000000001386f2 : or eax, 0x5c415d5b ; ret
0x0000000000113073 : or eax, 0x6348002b ; ret 0x4864
0x00000000000a6705 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x000000000003d4b1 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000407a9 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043680 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000145c87 : or eax, 0x83480000 ; ret 0x4910
0x00000000001477b7 : or eax, 0x83480000 ; ret 0x4910
0x000000000014b18e : or eax, 0x83480000 ; ret 0x4910
0x000000000014cc48 : or eax, 0x83480000 ; ret 0x4910
0x000000000014cc47 : or eax, 0x83480000 ; ret 0x4910
0x0000000000147821 : or eax, 0x83480000 ; ret 0xe910
0x000000000014b1df : or eax, 0x83480000 ; ret 0xe910
0x0000000000145cb5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000a7db9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x000000000006e3ba : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008d832 : or eax, 0x8c48348 ; ret
0x00000000001429a2 : or eax, 0x8c48348 ; ret
0x00000000000711f4 : or eax, 0xc2890000 ; jmp 0x7118e
0x000000000017d159 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000001850b3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000010366e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000015b423 : or eax, 0xf7f0ff3 ; ret
0x000000000015b422 : or eax, 0xf7f0ff3 ; ret
0x000000000015def3 : or eax, 0xf7f0ff3 ; ret
0x000000000015def2 : or eax, 0xf7f0ff3 ; ret
0x0000000000160a13 : or eax, 0xf7f0ff3 ; ret
0x0000000000160a12 : or eax, 0xf7f0ff3 ; ret
0x000000000002db93 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000059879 : or eax, 0xfffff834 ; add rax, rcx ; jmp rax
0x000000000001faff : or eax, 0xffffffff ; cmp r9, rax ; je 0x1faac ; jmp 0x1fad5
0x000000000003577d : or eax, 0xffffffff ; ret
0x0000000000035e3d : or eax, 0xffffffff ; ret
0x0000000000047b39 : or eax, 0xffffffff ; ret
0x0000000000047bcd : or eax, 0xffffffff ; ret
0x0000000000047f5d : or eax, 0xffffffff ; ret
0x000000000006b37d : or eax, 0xffffffff ; ret
0x000000000006b3b0 : or eax, 0xffffffff ; ret
0x00000000000bc52d : or eax, 0xffffffff ; ret
0x00000000000bf61d : or eax, 0xffffffff ; ret
0x00000000000bf64d : or eax, 0xffffffff ; ret
0x00000000000cbf4d : or eax, 0xffffffff ; ret
0x00000000000cc140 : or eax, 0xffffffff ; ret
0x00000000000cc21d : or eax, 0xffffffff ; ret
0x00000000000cc2d6 : or eax, 0xffffffff ; ret
0x00000000000cc336 : or eax, 0xffffffff ; ret
0x00000000000cc707 : or eax, 0xffffffff ; ret
0x00000000000cc78d : or eax, 0xffffffff ; ret
0x00000000000cd29d : or eax, 0xffffffff ; ret
0x00000000000cd43d : or eax, 0xffffffff ; ret
0x00000000000cd46d : or eax, 0xffffffff ; ret
0x00000000000cd4cd : or eax, 0xffffffff ; ret
0x00000000000cd4fd : or eax, 0xffffffff ; ret
0x00000000000cd52d : or eax, 0xffffffff ; ret
0x00000000000cd55d : or eax, 0xffffffff ; ret
0x00000000000ea77d : or eax, 0xffffffff ; ret
0x00000000000ea7ad : or eax, 0xffffffff ; ret
0x00000000000ea7dd : or eax, 0xffffffff ; ret
0x00000000000ea80d : or eax, 0xffffffff ; ret
0x00000000000ea83d : or eax, 0xffffffff ; ret
0x00000000000ea86d : or eax, 0xffffffff ; ret
0x00000000000ea89d : or eax, 0xffffffff ; ret
0x00000000000ea8cd : or eax, 0xffffffff ; ret
0x00000000000f5abc : or eax, 0xffffffff ; ret
0x00000000000f5b1c : or eax, 0xffffffff ; ret
0x00000000000f6b5d : or eax, 0xffffffff ; ret
0x00000000000f6dfd : or eax, 0xffffffff ; ret
0x00000000000f6e2d : or eax, 0xffffffff ; ret
0x00000000000f6efd : or eax, 0xffffffff ; ret
0x00000000000f6f2d : or eax, 0xffffffff ; ret
0x00000000000f6fed : or eax, 0xffffffff ; ret
0x00000000000f701d : or eax, 0xffffffff ; ret
0x00000000000f7086 : or eax, 0xffffffff ; ret
0x00000000000f72a6 : or eax, 0xffffffff ; ret
0x00000000000f7306 : or eax, 0xffffffff ; ret
0x00000000000f732d : or eax, 0xffffffff ; ret
0x00000000000f77bd : or eax, 0xffffffff ; ret
0x00000000000f7936 : or eax, 0xffffffff ; ret
0x00000000000f795d : or eax, 0xffffffff ; ret
0x00000000000f798d : or eax, 0xffffffff ; ret
0x00000000000f79bd : or eax, 0xffffffff ; ret
0x00000000000f79ed : or eax, 0xffffffff ; ret
0x00000000000f7a1d : or eax, 0xffffffff ; ret
0x00000000000f7a86 : or eax, 0xffffffff ; ret
0x00000000000f7aad : or eax, 0xffffffff ; ret
0x00000000000f7add : or eax, 0xffffffff ; ret
0x00000000000f831d : or eax, 0xffffffff ; ret
0x00000000000f834d : or eax, 0xffffffff ; ret
0x00000000000f837d : or eax, 0xffffffff ; ret
0x00000000000f83b0 : or eax, 0xffffffff ; ret
0x00000000000f898d : or eax, 0xffffffff ; ret
0x00000000000f89c0 : or eax, 0xffffffff ; ret
0x00000000000f89ed : or eax, 0xffffffff ; ret
0x00000000000f8a1d : or eax, 0xffffffff ; ret
0x00000000000f8a4d : or eax, 0xffffffff ; ret
0x00000000000f8a80 : or eax, 0xffffffff ; ret
0x00000000000f8aad : or eax, 0xffffffff ; ret
0x00000000000f8add : or eax, 0xffffffff ; ret
0x00000000000f8b0d : or eax, 0xffffffff ; ret
0x00000000000fb776 : or eax, 0xffffffff ; ret
0x00000000000fbab0 : or eax, 0xffffffff ; ret
0x00000000000fc25c : or eax, 0xffffffff ; ret
0x00000000000fc97d : or eax, 0xffffffff ; ret
0x00000000000fc9ad : or eax, 0xffffffff ; ret
0x00000000000fc9dd : or eax, 0xffffffff ; ret
0x00000000000fcd7d : or eax, 0xffffffff ; ret
0x00000000000fcf5d : or eax, 0xffffffff ; ret
0x00000000000fcfc6 : or eax, 0xffffffff ; ret
0x00000000000fd026 : or eax, 0xffffffff ; ret
0x00000000000fd4ed : or eax, 0xffffffff ; ret
0x00000000000fd58d : or eax, 0xffffffff ; ret
0x00000000000fd5fc : or eax, 0xffffffff ; ret
0x00000000000fd71d : or eax, 0xffffffff ; ret
0x00000000000fd74d : or eax, 0xffffffff ; ret
0x00000000000fd7b6 : or eax, 0xffffffff ; ret
0x00000000000fd7dd : or eax, 0xffffffff ; ret
0x00000000000fd846 : or eax, 0xffffffff ; ret
0x00000000000fd86d : or eax, 0xffffffff ; ret
0x00000000000fdbdd : or eax, 0xffffffff ; ret
0x00000000000fdc0d : or eax, 0xffffffff ; ret
0x00000000000fdc3d : or eax, 0xffffffff ; ret
0x00000000000ff18d : or eax, 0xffffffff ; ret
0x00000000000ff1bd : or eax, 0xffffffff ; ret
0x00000000001014ef : or eax, 0xffffffff ; ret
0x000000000010175d : or eax, 0xffffffff ; ret
0x000000000010178d : or eax, 0xffffffff ; ret
0x00000000001017f6 : or eax, 0xffffffff ; ret
0x000000000010181d : or eax, 0xffffffff ; ret
0x000000000010184d : or eax, 0xffffffff ; ret
0x0000000000101880 : or eax, 0xffffffff ; ret
0x00000000001018ad : or eax, 0xffffffff ; ret
0x00000000001018dd : or eax, 0xffffffff ; ret
0x000000000010190d : or eax, 0xffffffff ; ret
0x000000000010193d : or eax, 0xffffffff ; ret
0x0000000000106000 : or eax, 0xffffffff ; ret
0x000000000010602d : or eax, 0xffffffff ; ret
0x000000000010605d : or eax, 0xffffffff ; ret
0x0000000000106090 : or eax, 0xffffffff ; ret
0x00000000001060c0 : or eax, 0xffffffff ; ret
0x00000000001060ed : or eax, 0xffffffff ; ret
0x0000000000106120 : or eax, 0xffffffff ; ret
0x000000000010614d : or eax, 0xffffffff ; ret
0x000000000010617d : or eax, 0xffffffff ; ret
0x00000000001061b0 : or eax, 0xffffffff ; ret
0x00000000001061dd : or eax, 0xffffffff ; ret
0x0000000000106210 : or eax, 0xffffffff ; ret
0x00000000001072fd : or eax, 0xffffffff ; ret
0x000000000010732d : or eax, 0xffffffff ; ret
0x0000000000107432 : or eax, 0xffffffff ; ret
0x000000000010745d : or eax, 0xffffffff ; ret
0x000000000010749d : or eax, 0xffffffff ; ret
0x00000000001074cd : or eax, 0xffffffff ; ret
0x00000000001074fd : or eax, 0xffffffff ; ret
0x000000000010752d : or eax, 0xffffffff ; ret
0x0000000000107750 : or eax, 0xffffffff ; ret
0x000000000010777d : or eax, 0xffffffff ; ret
0x00000000001077ad : or eax, 0xffffffff ; ret
0x00000000001077dd : or eax, 0xffffffff ; ret
0x0000000000107820 : or eax, 0xffffffff ; ret
0x000000000010784d : or eax, 0xffffffff ; ret
0x000000000010787d : or eax, 0xffffffff ; ret
0x00000000001078ad : or eax, 0xffffffff ; ret
0x00000000001078dd : or eax, 0xffffffff ; ret
0x000000000010790d : or eax, 0xffffffff ; ret
0x000000000010793d : or eax, 0xffffffff ; ret
0x000000000010796d : or eax, 0xffffffff ; ret
0x000000000010799d : or eax, 0xffffffff ; ret
0x00000000001079d0 : or eax, 0xffffffff ; ret
0x0000000000107a3c : or eax, 0xffffffff ; ret
0x0000000000107a5d : or eax, 0xffffffff ; ret
0x0000000000107a90 : or eax, 0xffffffff ; ret
0x0000000000107abd : or eax, 0xffffffff ; ret
0x0000000000107aed : or eax, 0xffffffff ; ret
0x0000000000107b1d : or eax, 0xffffffff ; ret
0x0000000000107b4d : or eax, 0xffffffff ; ret
0x0000000000107b7d : or eax, 0xffffffff ; ret
0x0000000000107bb0 : or eax, 0xffffffff ; ret
0x0000000000107be0 : or eax, 0xffffffff ; ret
0x0000000000107c0d : or eax, 0xffffffff ; ret
0x0000000000107c3d : or eax, 0xffffffff ; ret
0x0000000000107c70 : or eax, 0xffffffff ; ret
0x0000000000107ca0 : or eax, 0xffffffff ; ret
0x0000000000107cd0 : or eax, 0xffffffff ; ret
0x0000000000107d3c : or eax, 0xffffffff ; ret
0x0000000000107d5d : or eax, 0xffffffff ; ret
0x0000000000107dcc : or eax, 0xffffffff ; ret
0x0000000000107ded : or eax, 0xffffffff ; ret
0x0000000000107e1d : or eax, 0xffffffff ; ret
0x0000000000107e8c : or eax, 0xffffffff ; ret
0x0000000000107ead : or eax, 0xffffffff ; ret
0x0000000000107ee0 : or eax, 0xffffffff ; ret
0x0000000000107f0d : or eax, 0xffffffff ; ret
0x0000000000107f3d : or eax, 0xffffffff ; ret
0x0000000000107f70 : or eax, 0xffffffff ; ret
0x0000000000107fd6 : or eax, 0xffffffff ; ret
0x0000000000107ffd : or eax, 0xffffffff ; ret
0x0000000000108030 : or eax, 0xffffffff ; ret
0x0000000000108060 : or eax, 0xffffffff ; ret
0x00000000001080e6 : or eax, 0xffffffff ; ret
0x000000000010810d : or eax, 0xffffffff ; ret
0x0000000000108176 : or eax, 0xffffffff ; ret
0x000000000010819d : or eax, 0xffffffff ; ret
0x00000000001081cd : or eax, 0xffffffff ; ret
0x0000000000108200 : or eax, 0xffffffff ; ret
0x000000000010822d : or eax, 0xffffffff ; ret
0x000000000010835c : or eax, 0xffffffff ; ret
0x00000000001083b6 : or eax, 0xffffffff ; ret
0x00000000001084d6 : or eax, 0xffffffff ; ret
0x000000000010853c : or eax, 0xffffffff ; ret
0x0000000000108560 : or eax, 0xffffffff ; ret
0x000000000010858d : or eax, 0xffffffff ; ret
0x00000000001085bd : or eax, 0xffffffff ; ret
0x00000000001085f0 : or eax, 0xffffffff ; ret
0x0000000000108b7c : or eax, 0xffffffff ; ret
0x0000000000108bdc : or eax, 0xffffffff ; ret
0x0000000000108bfd : or eax, 0xffffffff ; ret
0x0000000000108c2d : or eax, 0xffffffff ; ret
0x0000000000108c5d : or eax, 0xffffffff ; ret
0x0000000000108c8d : or eax, 0xffffffff ; ret
0x0000000000108cc0 : or eax, 0xffffffff ; ret
0x0000000000108cf0 : or eax, 0xffffffff ; ret
0x0000000000108d1d : or eax, 0xffffffff ; ret
0x0000000000108d4d : or eax, 0xffffffff ; ret
0x0000000000108d7d : or eax, 0xffffffff ; ret
0x0000000000108dad : or eax, 0xffffffff ; ret
0x00000000001406b0 : or eax, 0xffffffff ; ret
0x0000000000140700 : or eax, 0xffffffff ; ret
0x00000000001a4fbf : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x000000000009d9dc : or eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000005744f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000144e7d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e67 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b42e : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cdc8 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001479c1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ce23 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ea1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145e95 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000dd98 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000012d972 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d2219 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d1bdc : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d39ac : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000ce049 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000008b29f : or eax, dword ptr [rax] ; ret
0x000000000008b29e : or eax, dword ptr [rax] ; ret
0x000000000008b29d : or eax, dword ptr [rax] ; ret
0x000000000008d70f : or eax, dword ptr [rax] ; ret
0x000000000008da9f : or eax, dword ptr [rax] ; ret
0x000000000008f395 : or eax, dword ptr [rax] ; ret
0x0000000000094457 : or eax, dword ptr [rax] ; ret
0x000000000002a694 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x000000000011e71c : or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001bcba8 : or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000036848 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001bb878 : or eax, dword ptr [rdx] ; mov word ptr [rdx], cs ; ret
0x000000000019f946 : or eax, dword ptr [rdx] ; ret 0x900e
0x000000000019f945 : or eax, dword ptr [rdx] ; ret 0x900e
0x00000000001a4fc0 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001b004f : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x00000000001ba357 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x0000000000034cb7 : or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034b67 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000119400 : or eax, edi ; bswap eax ; ret
0x000000000011940e : or eax, edi ; bswap eax ; ret
0x0000000000119422 : or eax, edi ; bswap eax ; ret
0x0000000000107556 : or eax, edi ; ret
0x000000000010756d : or eax, edi ; ret
0x0000000000107598 : or eax, edi ; ret
0x0000000000034a65 : or eax, edx ; movq xmm0, rax ; ret
0x0000000000107592 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003a68f : or eax, edx ; ret
0x0000000000045a27 : or eax, edx ; ret
0x0000000000035044 : or eax, esi ; je 0x34ff1 ; ret
0x0000000000107595 : or eax, esi ; or rax, rdi ; ret
0x000000000007c884 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006df38 : or ebp, eax ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073ce0 : or ebp, eax ; ret 0xfabb
0x000000000007ef53 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000019d431 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d430 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d461 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d479 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d491 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d4a9 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d4d9 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d4f1 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d509 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d569 : or ebp, ecx ; call qword ptr [rcx]
0x000000000019d581 : or ebp, ecx ; call qword ptr [rcx]
0x000000000019d599 : or ebp, ecx ; call qword ptr [rcx]
0x000000000019d419 : or ebp, ecx ; call qword ptr [rdx]
0x000000000019d449 : or ebp, ecx ; call qword ptr [rdx]
0x000000000019d4c1 : or ebp, ecx ; call qword ptr [rdx]
0x000000000019d389 : or ebp, ecx ; call qword ptr [rsi]
0x000000000019d551 : or ebp, ecx ; jmp qword ptr [rax]
0x000000000006fdc4 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010c99c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001bc482 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000015b5e3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e0b3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160bd3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000075ade : or ebx, esi ; ret
0x00000000000bc43e : or ebx, esi ; ret
0x00000000000cd1fe : or ebx, esi ; ret
0x00000000000fefbe : or ebx, esi ; ret
0x00000000000ff146 : or ebx, esi ; ret
0x0000000000115196 : or ebx, esi ; ret
0x000000000008392a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ef94 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000000c190e : or ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000006ffb7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010c5ab : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000010dd9b : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001274c3 : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012787a : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000127a58 : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000128d32 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ffa57 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000110c7d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000ed22b : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x0000000000024bbd : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000024c6d : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000024de5 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000007d0a9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000003d479 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040771 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000043648 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000abbf4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000abc44 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a66c3 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000001a263e : or ecx, dword ptr [rdx + 0xa] ; ret
0x0000000000094a94 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000cd98b : or edi, dword ptr [rax + 0xfde8] ; jne 0xcd964 ; ret
0x000000000010e9cc : or edi, dword ptr [rax + 1] ; ret
0x0000000000134214 : or edi, dword ptr [rax + 1] ; ret
0x000000000012dda4 : or edi, dword ptr [rax + 2] ; ret
0x0000000000113304 : or edi, dword ptr [rax + 7] ; ret
0x0000000000045b6a : or edi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000045af6 : or edi, dword ptr [rax] ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x0000000000173d99 : or edi, dword ptr [rbx + 0x1f0fffea] ; add bl, dh ; ret
0x0000000000113d36 : or edi, dword ptr [rcx] ; ret 0xf7e
0x000000000017437d : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000aa057 : or edi, edi ; loope 0xaa0ca ; nop dword ptr [rax + rax] ; ret
0x00000000001953e9 : or edi, esp ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195449 : or edi, esp ; jmp qword ptr [rax]
0x00000000001aa9e1 : or edx, esi ; call rsi
0x00000000001b7832 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x0000000000174899 : or esi, dword ptr [rax + 0x1f0fffea] ; add bl, dh ; ret
0x00000000001a2676 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000001a1468 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1db4 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000012b9e4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012d6d4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b7833 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001a7cc9 : or esi, eax ; jmp rbx
0x00000000000fc35e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000fc3b4 : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000015b503 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dfd3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160af3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f6ce4 : or esi, ebx ; ret
0x0000000000114a4c : or esi, ebx ; ret
0x000000000006dde4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000789d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000fb5a4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x0000000000195445 : or esp, edi ; jmp qword ptr [rax]
0x0000000000035f42 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000036085 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000168bb5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000780e7 : or r11b, bpl ; xchg eax, edx ; mov edx, eax ; jmp 0x78085
0x000000000015b652 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e122 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160c42 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b5e2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e0b2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160bd2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b572 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e042 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160b62 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000199258 : or r14b, sil ; jmp rsp
0x00000000001a2675 : or r14d, dword ptr [r11 + 0xa] ; ret
0x000000000015b502 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dfd2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160af2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001bb877 : or r8d, dword ptr [r10] ; mov word ptr [rdx], cs ; ret
0x00000000001b004e : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x0000000000035043 : or r8d, esi ; je 0x34ff2 ; ret
0x0000000000094a93 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000da722 : or r9b, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000029d93 : or r9b, byte ptr [r8 + 0x39] ; ret 0x4676
0x00000000001a263d : or r9d, dword ptr [r10 + 0xa] ; ret
0x0000000000168c37 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000006c231 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c959 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000003577c : or rax, 0xffffffffffffffff ; ret
0x0000000000035e3c : or rax, 0xffffffffffffffff ; ret
0x0000000000047b38 : or rax, 0xffffffffffffffff ; ret
0x0000000000047bcc : or rax, 0xffffffffffffffff ; ret
0x0000000000047f5c : or rax, 0xffffffffffffffff ; ret
0x000000000006b37c : or rax, 0xffffffffffffffff ; ret
0x000000000006b3af : or rax, 0xffffffffffffffff ; ret
0x00000000000bc52c : or rax, 0xffffffffffffffff ; ret
0x00000000000bf61c : or rax, 0xffffffffffffffff ; ret
0x00000000000bf64c : or rax, 0xffffffffffffffff ; ret
0x00000000000cbf4c : or rax, 0xffffffffffffffff ; ret
0x00000000000cc13f : or rax, 0xffffffffffffffff ; ret
0x00000000000cc21c : or rax, 0xffffffffffffffff ; ret
0x00000000000cc2d5 : or rax, 0xffffffffffffffff ; ret
0x00000000000cc335 : or rax, 0xffffffffffffffff ; ret
0x00000000000cc706 : or rax, 0xffffffffffffffff ; ret
0x00000000000cc78c : or rax, 0xffffffffffffffff ; ret
0x00000000000cd29c : or rax, 0xffffffffffffffff ; ret
0x00000000000cd43c : or rax, 0xffffffffffffffff ; ret
0x00000000000cd46c : or rax, 0xffffffffffffffff ; ret
0x00000000000cd4cc : or rax, 0xffffffffffffffff ; ret
0x00000000000cd4fc : or rax, 0xffffffffffffffff ; ret
0x00000000000cd52c : or rax, 0xffffffffffffffff ; ret
0x00000000000cd55c : or rax, 0xffffffffffffffff ; ret
0x00000000000ea77c : or rax, 0xffffffffffffffff ; ret
0x00000000000ea7ac : or rax, 0xffffffffffffffff ; ret
0x00000000000ea7dc : or rax, 0xffffffffffffffff ; ret
0x00000000000ea80c : or rax, 0xffffffffffffffff ; ret
0x00000000000ea83c : or rax, 0xffffffffffffffff ; ret
0x00000000000ea86c : or rax, 0xffffffffffffffff ; ret
0x00000000000ea89c : or rax, 0xffffffffffffffff ; ret
0x00000000000ea8cc : or rax, 0xffffffffffffffff ; ret
0x00000000000f5abb : or rax, 0xffffffffffffffff ; ret
0x00000000000f5b1b : or rax, 0xffffffffffffffff ; ret
0x00000000000f6b5c : or rax, 0xffffffffffffffff ; ret
0x00000000000f6dfc : or rax, 0xffffffffffffffff ; ret
0x00000000000f6e2c : or rax, 0xffffffffffffffff ; ret
0x00000000000f6efc : or rax, 0xffffffffffffffff ; ret
0x00000000000f6f2c : or rax, 0xffffffffffffffff ; ret
0x00000000000f6fec : or rax, 0xffffffffffffffff ; ret
0x00000000000f701c : or rax, 0xffffffffffffffff ; ret
0x00000000000f7085 : or rax, 0xffffffffffffffff ; ret
0x00000000000f72a5 : or rax, 0xffffffffffffffff ; ret
0x00000000000f7305 : or rax, 0xffffffffffffffff ; ret
0x00000000000f732c : or rax, 0xffffffffffffffff ; ret
0x00000000000f77bc : or rax, 0xffffffffffffffff ; ret
0x00000000000f7935 : or rax, 0xffffffffffffffff ; ret
0x00000000000f795c : or rax, 0xffffffffffffffff ; ret
0x00000000000f798c : or rax, 0xffffffffffffffff ; ret
0x00000000000f79bc : or rax, 0xffffffffffffffff ; ret
0x00000000000f79ec : or rax, 0xffffffffffffffff ; ret
0x00000000000f7a1c : or rax, 0xffffffffffffffff ; ret
0x00000000000f7a85 : or rax, 0xffffffffffffffff ; ret
0x00000000000f7aac : or rax, 0xffffffffffffffff ; ret
0x00000000000f7adc : or rax, 0xffffffffffffffff ; ret
0x00000000000f831c : or rax, 0xffffffffffffffff ; ret
0x00000000000f834c : or rax, 0xffffffffffffffff ; ret
0x00000000000f837c : or rax, 0xffffffffffffffff ; ret
0x00000000000f83af : or rax, 0xffffffffffffffff ; ret
0x00000000000f898c : or rax, 0xffffffffffffffff ; ret
0x00000000000f89bf : or rax, 0xffffffffffffffff ; ret
0x00000000000f89ec : or rax, 0xffffffffffffffff ; ret
0x00000000000f8a1c : or rax, 0xffffffffffffffff ; ret
0x00000000000f8a4c : or rax, 0xffffffffffffffff ; ret
0x00000000000f8a7f : or rax, 0xffffffffffffffff ; ret
0x00000000000f8aac : or rax, 0xffffffffffffffff ; ret
0x00000000000f8adc : or rax, 0xffffffffffffffff ; ret
0x00000000000f8b0c : or rax, 0xffffffffffffffff ; ret
0x00000000000fb775 : or rax, 0xffffffffffffffff ; ret
0x00000000000fbaaf : or rax, 0xffffffffffffffff ; ret
0x00000000000fc25b : or rax, 0xffffffffffffffff ; ret
0x00000000000fc97c : or rax, 0xffffffffffffffff ; ret
0x00000000000fc9ac : or rax, 0xffffffffffffffff ; ret
0x00000000000fc9dc : or rax, 0xffffffffffffffff ; ret
0x00000000000fcd7c : or rax, 0xffffffffffffffff ; ret
0x00000000000fcf5c : or rax, 0xffffffffffffffff ; ret
0x00000000000fcfc5 : or rax, 0xffffffffffffffff ; ret
0x00000000000fd025 : or rax, 0xffffffffffffffff ; ret
0x00000000000fd4ec : or rax, 0xffffffffffffffff ; ret
0x00000000000fd58c : or rax, 0xffffffffffffffff ; ret
0x00000000000fd5fb : or rax, 0xffffffffffffffff ; ret
0x00000000000fd71c : or rax, 0xffffffffffffffff ; ret
0x00000000000fd74c : or rax, 0xffffffffffffffff ; ret
0x00000000000fd7b5 : or rax, 0xffffffffffffffff ; ret
0x00000000000fd7dc : or rax, 0xffffffffffffffff ; ret
0x00000000000fd845 : or rax, 0xffffffffffffffff ; ret
0x00000000000fd86c : or rax, 0xffffffffffffffff ; ret
0x00000000000fdbdc : or rax, 0xffffffffffffffff ; ret
0x00000000000fdc0c : or rax, 0xffffffffffffffff ; ret
0x00000000000fdc3c : or rax, 0xffffffffffffffff ; ret
0x00000000000ff18c : or rax, 0xffffffffffffffff ; ret
0x00000000000ff1bc : or rax, 0xffffffffffffffff ; ret
0x00000000001014ee : or rax, 0xffffffffffffffff ; ret
0x000000000010175c : or rax, 0xffffffffffffffff ; ret
0x000000000010178c : or rax, 0xffffffffffffffff ; ret
0x00000000001017f5 : or rax, 0xffffffffffffffff ; ret
0x000000000010181c : or rax, 0xffffffffffffffff ; ret
0x000000000010184c : or rax, 0xffffffffffffffff ; ret
0x000000000010187f : or rax, 0xffffffffffffffff ; ret
0x00000000001018ac : or rax, 0xffffffffffffffff ; ret
0x00000000001018dc : or rax, 0xffffffffffffffff ; ret
0x000000000010190c : or rax, 0xffffffffffffffff ; ret
0x000000000010193c : or rax, 0xffffffffffffffff ; ret
0x0000000000105fff : or rax, 0xffffffffffffffff ; ret
0x000000000010602c : or rax, 0xffffffffffffffff ; ret
0x000000000010605c : or rax, 0xffffffffffffffff ; ret
0x000000000010608f : or rax, 0xffffffffffffffff ; ret
0x00000000001060bf : or rax, 0xffffffffffffffff ; ret
0x00000000001060ec : or rax, 0xffffffffffffffff ; ret
0x000000000010611f : or rax, 0xffffffffffffffff ; ret
0x000000000010614c : or rax, 0xffffffffffffffff ; ret
0x000000000010617c : or rax, 0xffffffffffffffff ; ret
0x00000000001061af : or rax, 0xffffffffffffffff ; ret
0x00000000001061dc : or rax, 0xffffffffffffffff ; ret
0x000000000010620f : or rax, 0xffffffffffffffff ; ret
0x00000000001072fc : or rax, 0xffffffffffffffff ; ret
0x000000000010732c : or rax, 0xffffffffffffffff ; ret
0x0000000000107431 : or rax, 0xffffffffffffffff ; ret
0x000000000010745c : or rax, 0xffffffffffffffff ; ret
0x000000000010749c : or rax, 0xffffffffffffffff ; ret
0x00000000001074cc : or rax, 0xffffffffffffffff ; ret
0x00000000001074fc : or rax, 0xffffffffffffffff ; ret
0x000000000010752c : or rax, 0xffffffffffffffff ; ret
0x000000000010774f : or rax, 0xffffffffffffffff ; ret
0x000000000010777c : or rax, 0xffffffffffffffff ; ret
0x00000000001077ac : or rax, 0xffffffffffffffff ; ret
0x00000000001077dc : or rax, 0xffffffffffffffff ; ret
0x000000000010781f : or rax, 0xffffffffffffffff ; ret
0x000000000010784c : or rax, 0xffffffffffffffff ; ret
0x000000000010787c : or rax, 0xffffffffffffffff ; ret
0x00000000001078ac : or rax, 0xffffffffffffffff ; ret
0x00000000001078dc : or rax, 0xffffffffffffffff ; ret
0x000000000010790c : or rax, 0xffffffffffffffff ; ret
0x000000000010793c : or rax, 0xffffffffffffffff ; ret
0x000000000010796c : or rax, 0xffffffffffffffff ; ret
0x000000000010799c : or rax, 0xffffffffffffffff ; ret
0x00000000001079cf : or rax, 0xffffffffffffffff ; ret
0x0000000000107a3b : or rax, 0xffffffffffffffff ; ret
0x0000000000107a5c : or rax, 0xffffffffffffffff ; ret
0x0000000000107a8f : or rax, 0xffffffffffffffff ; ret
0x0000000000107abc : or rax, 0xffffffffffffffff ; ret
0x0000000000107aec : or rax, 0xffffffffffffffff ; ret
0x0000000000107b1c : or rax, 0xffffffffffffffff ; ret
0x0000000000107b4c : or rax, 0xffffffffffffffff ; ret
0x0000000000107b7c : or rax, 0xffffffffffffffff ; ret
0x0000000000107baf : or rax, 0xffffffffffffffff ; ret
0x0000000000107bdf : or rax, 0xffffffffffffffff ; ret
0x0000000000107c0c : or rax, 0xffffffffffffffff ; ret
0x0000000000107c3c : or rax, 0xffffffffffffffff ; ret
0x0000000000107c6f : or rax, 0xffffffffffffffff ; ret
0x0000000000107c9f : or rax, 0xffffffffffffffff ; ret
0x0000000000107ccf : or rax, 0xffffffffffffffff ; ret
0x0000000000107d3b : or rax, 0xffffffffffffffff ; ret
0x0000000000107d5c : or rax, 0xffffffffffffffff ; ret
0x0000000000107dcb : or rax, 0xffffffffffffffff ; ret
0x0000000000107dec : or rax, 0xffffffffffffffff ; ret
0x0000000000107e1c : or rax, 0xffffffffffffffff ; ret
0x0000000000107e8b : or rax, 0xffffffffffffffff ; ret
0x0000000000107eac : or rax, 0xffffffffffffffff ; ret
0x0000000000107edf : or rax, 0xffffffffffffffff ; ret
0x0000000000107f0c : or rax, 0xffffffffffffffff ; ret
0x0000000000107f3c : or rax, 0xffffffffffffffff ; ret
0x0000000000107f6f : or rax, 0xffffffffffffffff ; ret
0x0000000000107fd5 : or rax, 0xffffffffffffffff ; ret
0x0000000000107ffc : or rax, 0xffffffffffffffff ; ret
0x000000000010802f : or rax, 0xffffffffffffffff ; ret
0x000000000010805f : or rax, 0xffffffffffffffff ; ret
0x00000000001080e5 : or rax, 0xffffffffffffffff ; ret
0x000000000010810c : or rax, 0xffffffffffffffff ; ret
0x0000000000108175 : or rax, 0xffffffffffffffff ; ret
0x000000000010819c : or rax, 0xffffffffffffffff ; ret
0x00000000001081cc : or rax, 0xffffffffffffffff ; ret
0x00000000001081ff : or rax, 0xffffffffffffffff ; ret
0x000000000010822c : or rax, 0xffffffffffffffff ; ret
0x000000000010835b : or rax, 0xffffffffffffffff ; ret
0x00000000001083b5 : or rax, 0xffffffffffffffff ; ret
0x00000000001084d5 : or rax, 0xffffffffffffffff ; ret
0x000000000010853b : or rax, 0xffffffffffffffff ; ret
0x000000000010855f : or rax, 0xffffffffffffffff ; ret
0x000000000010858c : or rax, 0xffffffffffffffff ; ret
0x00000000001085bc : or rax, 0xffffffffffffffff ; ret
0x00000000001085ef : or rax, 0xffffffffffffffff ; ret
0x0000000000108b7b : or rax, 0xffffffffffffffff ; ret
0x0000000000108bdb : or rax, 0xffffffffffffffff ; ret
0x0000000000108bfc : or rax, 0xffffffffffffffff ; ret
0x0000000000108c2c : or rax, 0xffffffffffffffff ; ret
0x0000000000108c5c : or rax, 0xffffffffffffffff ; ret
0x0000000000108c8c : or rax, 0xffffffffffffffff ; ret
0x0000000000108cbf : or rax, 0xffffffffffffffff ; ret
0x0000000000108cef : or rax, 0xffffffffffffffff ; ret
0x0000000000108d1c : or rax, 0xffffffffffffffff ; ret
0x0000000000108d4c : or rax, 0xffffffffffffffff ; ret
0x0000000000108d7c : or rax, 0xffffffffffffffff ; ret
0x0000000000108dac : or rax, 0xffffffffffffffff ; ret
0x00000000001406af : or rax, 0xffffffffffffffff ; ret
0x00000000001406ff : or rax, 0xffffffffffffffff ; ret
0x00000000001ba356 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x000000000014ce22 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000036847 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000107597 : or rax, rdi ; ret
0x0000000000034a64 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000003a68e : or rax, rdx ; ret
0x0000000000107594 : or rax, rsi ; or rax, rdi ; ret
0x000000000019d448 : or rbp, rcx ; call qword ptr [rdx]
0x000000000012de83 : or sil, sil ; ret 0x8802
0x0000000000034800 : orpd xmm0, xmm1 ; ret
0x0000000000034801 : orps xmm0, xmm1 ; ret
0x0000000000034bce : orps xmm0, xmm3 ; ret
0x00000000001aa22d : out 0, al ; add byte ptr [rax - 0x15], al ; int1 ; call rdi
0x0000000000197df5 : out 0, al ; add byte ptr [rsp + rbp*2], al ; out dx, al ; call rsp
0x0000000000197e15 : out 0, eax ; add ah, dl ; jo 0x197e0f ; jmp rsp
0x00000000001aa2f5 : out 0, eax ; add al, bl ; out dx, al ; int1 ; jmp rcx
0x0000000000119409 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000001126b1 : out 0x31, eax ; shr al, 0xb7 ; ret
0x000000000003730b : out 0x41, eax ; call rdi
0x0000000000037363 : out 0x41, eax ; call rdi
0x0000000000038385 : out 0x41, eax ; call rdi
0x0000000000140f26 : out 0x44, al ; sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000003731c : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000086b36 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f4033 : out 0x48, al ; mov edi, ebp ; call 0xf0336
0x0000000000037345 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000037d6a : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000088d02 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000012f409 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000012f517 : out 0x48, al ; mov edi, ebp ; call rax
0x0000000000137bf0 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000012aa1c : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x000000000012e776 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000087e64 : out 0x48, al ; mov edi, ebx ; call rax
0x000000000012a610 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000abce0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000484c8 : out 0x48, eax ; mov eax, edx ; ret
0x00000000000ff2c5 : out 0x49, eax ; mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000d189f : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001735f0 : out 0x4c, eax ; mov edi, esi ; call 0x1f8ae
0x0000000000088e57 : out 0x4c, eax ; mov edx, ebp ; mov rsi, rbp ; call rax
0x00000000000ad91b : out 0x4d, eax ; mov ecx, edi ; call rbx
0x00000000000ba566 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x0000000000001b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x000000000008605e : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x000000000007bfd3 : out 0x5b, al ; ret
0x0000000000138f28 : out 0x5b, eax ; ret
0x000000000008683b : out 0x5d, al ; pop r12 ; jmp rax
0x0000000000186a30 : out 0x65, eax ; in eax, dx ; jmp rdi
0x0000000000186a34 : out 0x65, eax ; in eax, dx ; jmp rdi
0x0000000000186ab0 : out 0x65, eax ; in eax, dx ; jmp rdi
0x0000000000186ab4 : out 0x65, eax ; in eax, dx ; jmp rdi
0x00000000001887a4 : out 0x80, eax ; jmp rsi
0x000000000002df33 : out 0x80, eax ; sete al ; ret
0x0000000000188750 : out 0x88, al ; jmp rsi
0x0000000000039905 : out 0x89, eax ; ret
0x000000000011cf0d : out 0x89, eax ; ret
0x000000000011d21d : out 0x89, eax ; ret
0x00000000001336e9 : out 0x89, eax ; ret
0x00000000000302fe : out 0x89, eax ; ret 0x8948
0x00000000000f1469 : out 0x89, eax ; ret 0x8b48
0x0000000000195040 : out 0xa7, al ; std ; push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x000000000000247e : out 0xa9, al ; ret 0xbd07
0x0000000000183f60 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000013a7de : out 0xe8, al ; mov word ptr [rax - 0x12], ss ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cd3d1 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x0000000000112042 : out 0xe8, eax ; cwde ; ret
0x00000000001286c1 : out 0xe8, eax ; pop rcx ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f5db2 : out 0xe8, eax ; push -0x76000003 ; ret 0xcb8
0x000000000002e247 : out 0xe8, eax ; ret
0x0000000000133564 : out 0xe8, eax ; ret
0x0000000000133b17 : out 0xe8, eax ; ret
0x00000000001a6e29 : out 0xee, al ; call qword ptr [rax]
0x000000000015adea : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ade9 : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d8ba : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d8b9 : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001603da : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001603d9 : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000959b9 : out 0xf3, al ; ret
0x000000000015ae6a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ae69 : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d93a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d939 : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016045a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160459 : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001aed49 : out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001aeda9 : out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000001aedf9 : out 0xf4, eax ; jmp qword ptr [rcx]
0x0000000000185c88 : out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000199931 : out 0xf6, al ; call rsp
0x000000000019a151 : out 0xf7, al ; dec esp ; ret
0x000000000019a159 : out 0xf7, al ; jmp rsp
0x000000000019a158 : out 0xf7, al ; jmp rsp
0x000000000006f734 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001ba1a5 : out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x00000000001bd208 : out 1, eax ; add byte ptr [rax], al ; ret 4
0x00000000000e3564 : out 2, al ; call 0x1f7f4
0x0000000000123fec : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012418d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000208f1 : out 4, eax ; add rdi, rbp ; call rax
0x000000000011e1b3 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000094909 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000012e349 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000047d66 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x0000000000197ead : out dx, al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x0000000000123c0f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x123c1c ; ret
0x0000000000097383 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000009742b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000123c0c : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x123c1f ; ret
0x000000000008392d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000076a43 : out dx, al ; call 0x4d178
0x0000000000116890 : out dx, al ; call 0x4d178
0x00000000001a6402 : out dx, al ; call qword ptr [rax]
0x00000000001a6401 : out dx, al ; call qword ptr [rax]
0x00000000001a688a : out dx, al ; call qword ptr [rax]
0x00000000001a6b5a : out dx, al ; call qword ptr [rax]
0x00000000001a6c1a : out dx, al ; call qword ptr [rax]
0x00000000001a6e2a : out dx, al ; call qword ptr [rax]
0x00000000001a6a6a : out dx, al ; call qword ptr [rcx]
0x00000000001a6482 : out dx, al ; call qword ptr [rdx]
0x00000000001a6481 : out dx, al ; call qword ptr [rdx]
0x00000000001a58c2 : out dx, al ; call qword ptr [rsi]
0x00000000001a6982 : out dx, al ; call qword ptr [rsi]
0x0000000000088e5d : out dx, al ; call rax
0x0000000000197a12 : out dx, al ; call rsp
0x0000000000197cca : out dx, al ; call rsp
0x0000000000197d22 : out dx, al ; call rsp
0x0000000000197daa : out dx, al ; call rsp
0x0000000000197da9 : out dx, al ; call rsp
0x0000000000197dfa : out dx, al ; call rsp
0x0000000000197eb2 : out dx, al ; call rsp
0x0000000000133568 : out dx, al ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x0000000000133678 : out dx, al ; dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x1f8af
0x000000000013a7e2 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130e37 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000133e2b : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000001b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001850b7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000003aa1 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000187ebd : out dx, al ; int1 ; call rax
0x0000000000187ec9 : out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187eb9 : out dx, al ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x0000000000187e7d : out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187ec1 : out dx, al ; int1 ; jmp rax
0x00000000001aa2f9 : out dx, al ; int1 ; jmp rcx
0x000000000018704a : out dx, al ; jmp qword ptr [rax]
0x0000000000187049 : out dx, al ; jmp qword ptr [rax]
0x00000000001a6232 : out dx, al ; jmp qword ptr [rcx]
0x00000000001a6832 : out dx, al ; jmp qword ptr [rcx]
0x00000000001a5f12 : out dx, al ; jmp qword ptr [rdi]
0x00000000001a638a : out dx, al ; jmp qword ptr [rdx]
0x00000000001a6389 : out dx, al ; jmp qword ptr [rdx]
0x00000000001a644a : out dx, al ; jmp qword ptr [rdx]
0x00000000001a6449 : out dx, al ; jmp qword ptr [rdx]
0x00000000001a667a : out dx, al ; jmp qword ptr [rdx]
0x00000000001a672a : out dx, al ; jmp qword ptr [rdx]
0x00000000001a6b72 : out dx, al ; jmp qword ptr [rsi]
0x00000000001a6d0a : out dx, al ; jmp qword ptr [rsi]
0x000000000018769e : out dx, al ; jmp rax
0x000000000018781e : out dx, al ; jmp rax
0x00000000001a69b2 : out dx, al ; jmp rbx
0x00000000001a6662 : out dx, al ; jmp rdx
0x00000000001979ea : out dx, al ; jmp rsp
0x0000000000197cf2 : out dx, al ; jmp rsp
0x0000000000197e1a : out dx, al ; jmp rsp
0x0000000000003795 : out dx, al ; jne 0x3775 ; ret 0x975
0x0000000000197cea : out dx, al ; lcall ptr [rcx + 0x5e440000] ; out dx, al ; jmp rsp
0x000000000018781a : out dx, al ; ljmp ptr [rax + 0x53] ; out dx, al ; jmp rax
0x0000000000187816 : out dx, al ; ljmp ptr [rax] ; push rsp ; out dx, al ; ljmp ptr [rax + 0x53] ; out dx, al ; jmp rax
0x0000000000197e12 : out dx, al ; ljmp ptr [rdi + 0x70d40000] ; out dx, al ; jmp rsp
0x0000000000003183 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000152c3a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152c8a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152cd0 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d08 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d46 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d6e : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d96 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152dae : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015560a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015565a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556a0 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556d8 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155716 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015573e : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155766 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015577e : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157fda : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015802a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158070 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001580a8 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001580e6 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015810e : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158136 : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015814e : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008595c : out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x81b89
0x000000000008588f : out dx, al ; mov rdi, rbx ; call 0x81b86
0x00000000000bda29 : out dx, al ; mov rdi, rbx ; call 0x89d16
0x0000000000085c7f : out dx, al ; mov rdi, rbx ; call rax
0x0000000000088b78 : out dx, al ; mov rdi, rbx ; call rax
0x000000000015b1fa : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b1f9 : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dcca : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dcc9 : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001607ea : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001607e9 : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000ac0a9 : out dx, al ; nop word ptr [rax + rax] ; ret
0x000000000014b47e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000da725 : out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x000000000008f394 : out dx, al ; or eax, dword ptr [rax] ; ret
0x0000000000197eaa : out dx, al ; push qword ptr [rsi + rbp*8 - 0x265c0000] ; out dx, al ; call rsp
0x0000000000107a86 : out dx, al ; ret
0x00000000000025b2 : out dx, al ; ret 0x88ad
0x0000000000195525 : out dx, al ; sti ; jmp qword ptr [rax]
0x00000000000c84bd : out dx, al ; xor edx, edx ; jmp 0xc8489
0x00000000000aaf8d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000081bd3 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x0000000000101b2d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c023f : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000001bab1d : out dx, eax ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x000000000007ef97 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000013a78c : out dx, eax ; add rbx, r12 ; call r14
0x0000000000172b6d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e35b9 : out dx, eax ; call 0x1f8ab
0x000000000013367c : out dx, eax ; call 0x1f8ab
0x00000000000869a3 : out dx, eax ; call 0x82bd3
0x00000000000f4036 : out dx, eax ; call 0xf0333
0x000000000012e34f : out dx, eax ; call qword ptr [rbx]
0x00000000001a7952 : out dx, eax ; call qword ptr [rdi]
0x000000000011ff5f : out dx, eax ; call r12
0x000000000012a2b1 : out dx, eax ; call r12
0x000000000012a321 : out dx, eax ; call r12
0x000000000013c0bc : out dx, eax ; call r12
0x00000000000391ad : out dx, eax ; call r14
0x000000000003922e : out dx, eax ; call r14
0x0000000000039269 : out dx, eax ; call r14
0x000000000012c02e : out dx, eax ; call r14
0x0000000000037348 : out dx, eax ; call r15
0x0000000000037d6d : out dx, eax ; call r15
0x00000000000208f5 : out dx, eax ; call rax
0x000000000002f6da : out dx, eax ; call rax
0x000000000004b38f : out dx, eax ; call rax
0x0000000000084fb7 : out dx, eax ; call rax
0x000000000008893e : out dx, eax ; call rax
0x0000000000088d05 : out dx, eax ; call rax
0x000000000011cef6 : out dx, eax ; call rax
0x000000000011d206 : out dx, eax ; call rax
0x000000000012c228 : out dx, eax ; call rax
0x000000000012f40c : out dx, eax ; call rax
0x000000000012f51a : out dx, eax ; call rax
0x0000000000134109 : out dx, eax ; call rax
0x00000000001341d3 : out dx, eax ; call rax
0x00000000001342fc : out dx, eax ; call rax
0x000000000013451c : out dx, eax ; call rax
0x0000000000137bf3 : out dx, eax ; call rax
0x00000000001a7592 : out dx, eax ; call rax
0x00000000000ad297 : out dx, eax ; call rbx
0x00000000000ad3b6 : out dx, eax ; call rbx
0x00000000000ad560 : out dx, eax ; call rbx
0x00000000000ad66e : out dx, eax ; call rbx
0x0000000000103631 : out dx, eax ; call rbx
0x0000000000103756 : out dx, eax ; call rbx
0x000000000010387b : out dx, eax ; call rbx
0x00000000001038af : out dx, eax ; call rbx
0x00000000001039d4 : out dx, eax ; call rbx
0x0000000000103af9 : out dx, eax ; call rbx
0x0000000000103b14 : out dx, eax ; call rbx
0x0000000000103b5e : out dx, eax ; call rbx
0x0000000000103c83 : out dx, eax ; call rbx
0x0000000000103da8 : out dx, eax ; call rbx
0x0000000000103ddc : out dx, eax ; call rbx
0x0000000000103f01 : out dx, eax ; call rbx
0x0000000000104026 : out dx, eax ; call rbx
0x00000000001040da : out dx, eax ; call rbx
0x00000000001040fa : out dx, eax ; call rbx
0x000000000010411a : out dx, eax ; call rbx
0x000000000010413a : out dx, eax ; call rbx
0x000000000013bf92 : out dx, eax ; call rcx
0x000000000012de46 : out dx, eax ; call rdx
0x0000000000198052 : out dx, eax ; call rsp
0x000000000019821a : out dx, eax ; call rsp
0x00000000001982ca : out dx, eax ; call rsp
0x00000000001a7c82 : out dx, eax ; call rsp
0x0000000000189dd8 : out dx, eax ; cmc ; call qword ptr [rdi]
0x000000000012b096 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000012b095 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134d85 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134dc4 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00000000001982c2 : out dx, eax ; inc dword ptr [rax + rcx - 0x51bffff] ; out dx, eax ; call rsp
0x0000000000187ecd : out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187ed1 : out dx, eax ; int1 ; jmp qword ptr [rax]
0x000000000009d9c1 : out dx, eax ; jmp 0x9d36b
0x000000000009e3fb : out dx, eax ; jmp 0x9d3f3
0x00000000001879d6 : out dx, eax ; jmp qword ptr [rax]
0x00000000001a7622 : out dx, eax ; jmp qword ptr [rax]
0x00000000001a7c6a : out dx, eax ; jmp qword ptr [rbx]
0x000000000012c588 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x00000000001a73d2 : out dx, eax ; jmp rsi
0x0000000000197fb2 : out dx, eax ; jmp rsp
0x0000000000198162 : out dx, eax ; jmp rsp
0x00000000001981a2 : out dx, eax ; jmp rsp
0x00000000001981ea : out dx, eax ; jmp rsp
0x0000000000198212 : out dx, eax ; lcall ptr [rsp + rax + 1] ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x000000000012cac6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001046b5 : out dx, eax ; mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x1046c5 ; call rbx
0x000000000013b48b : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013b4d5 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000152a6a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015543a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e0a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b66 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152b8e : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152bb6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000155536 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015555e : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000155586 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f06 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f2e : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f56 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152ab2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152af0 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b28 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152bce : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155482 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554c0 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554f8 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015559e : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e52 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e90 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157ec8 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f6e : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173652 : out dx, eax ; mov r13, r14 ; call 0x1f8ae
0x0000000000048b80 : out dx, eax ; mov rax, rdx ; ret
0x00000000001153e0 : out dx, eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000135bbb : out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132783 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135423 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013258b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000013525a : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012aa1f : out dx, eax ; mov rcx, r13 ; call rbx
0x00000000000378b5 : out dx, eax ; mov rdx, rbp ; call r15
0x000000000015b27a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b279 : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dd4a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dd49 : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016086a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160869 : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014b57d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001743ac : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000186aac : out dx, eax ; pop rbp ; in eax, dx ; jmp rdi
0x00000000000859c4 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000072cc1 : out dx, eax ; pop rbx ; ret
0x0000000000072d05 : out dx, eax ; pop rbx ; ret
0x000000000007bf7e : out dx, eax ; pop rbx ; ret
0x000000000007bfbc : out dx, eax ; pop rbx ; ret
0x0000000000197faa : out dx, eax ; push qword ptr [rdi + rsi*8 + 0x1f440000] ; out dx, eax ; jmp rsp
0x0000000000101f6d : out dx, eax ; push rdx ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000016e4d3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5a2 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e666 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6b9 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e862 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e9db : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eaab : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eb6f : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebd1 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed7a : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb03 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbd2 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc96 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fce9 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe92 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017000b : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001700db : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017019f : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170201 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001703aa : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e4e8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5b7 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6ce : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e9f0 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eac0 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebe6 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb18 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbe7 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fcfe : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170020 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001700f0 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170216 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e4fd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5cc : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6e3 : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ea05 : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ead5 : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebfb : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb2d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbfc : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd13 : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170035 : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170105 : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017022b : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aae18 : out dx, eax ; ret
0x000000000012bf3d : out dx, eax ; ret 0
0x00000000000aa2a3 : out dx, eax ; ret 0xf66
0x000000000016f9ec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000017082c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f9d5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000170815 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f9be : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001707fe : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016e47a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f04e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f069 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f084 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f11e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f139 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f154 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f21e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f239 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f254 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f31e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f339 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f354 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f36f : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f39e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3b9 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3d4 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3ef : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f41e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f439 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f454 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f46f : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f49e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4b9 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4d4 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4ef : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f51e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f539 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f554 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f56f : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f59e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5b9 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5d4 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5ef : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f62e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f649 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f664 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f67f : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f6be : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f6d9 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f6f4 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f70f : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f74e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f769 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f784 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f79f : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f7de : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f7f9 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f814 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f82f : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f87e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f899 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f8b4 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f8cf : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f91e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f939 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f954 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f96f : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016faaa : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017066e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170689 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706a4 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706bf : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706ee : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170709 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170724 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017073f : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017076e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170789 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001707a4 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001707bf : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000195565 : out dx, eax ; sti ; call qword ptr [rax - 0x1f000410]
0x0000000000195564 : out dx, eax ; sti ; call qword ptr [rax - 0x1f000410]
0x000000000012d74e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000048088 : out dx, eax ; xor eax, eax ; ret
0x0000000000048220 : out dx, eax ; xor eax, eax ; ret
0x000000000014712e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bf6f1 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000010c6fe : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017098e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001b298d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b2a05 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b29a5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b295d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000b6074 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x0000000000196109 : outsb dx, byte ptr [rsi] ; cld ; jmp rax
0x00000000001b0939 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0951 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0950 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0969 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b09b1 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b09c9 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b09e1 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b09f9 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0a11 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0a29 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000034cbb : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x0000000000186b59 : outsb dx, byte ptr [rsi] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186b5d : outsb dx, byte ptr [rsi] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186bd9 : outsb dx, byte ptr [rsi] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186bdd : outsb dx, byte ptr [rsi] ; in eax, dx ; call qword ptr [rsi]
0x0000000000186a2d : outsb dx, byte ptr [rsi] ; in eax, dx ; jmp rdi
0x0000000000186a9d : outsb dx, byte ptr [rsi] ; in eax, dx ; jmp rdi
0x0000000000186a99 : outsb dx, byte ptr [rsi] ; in eax, dx ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000187bf9 : outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187bcd : outsb dx, byte ptr [rsi] ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000187bf5 : outsb dx, byte ptr [rsi] ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187bd1 : outsb dx, byte ptr [rsi] ; int1 ; jmp rsp
0x0000000000187bd0 : outsb dx, byte ptr [rsi] ; int1 ; jmp rsp
0x0000000000185863 : outsb dx, byte ptr [rsi] ; ja 0x1857ec ; ret 0x48f
0x0000000000057c06 : outsb dx, byte ptr [rsi] ; ret 0x36
0x00000000000bf4ae : outsb dx, byte ptr [rsi] ; ret 0xfffc
0x00000000001835a4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000000f6430 : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f645d : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000194f49 : outsb dx, byte ptr [rsi] ; sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x000000000000366d : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000008f75a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000009482a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007e5c4 : outsd dx, dword ptr [rsi] ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000109f9d : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000196aad : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196aa2 ; jmp rsp
0x00000000000970ad : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b2a4d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001b2ac5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b23eb
0x00000000001b2af5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b241b
0x00000000001b2b25 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b244b
0x00000000001b2a65 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000d64ac : outsd dx, dword ptr [rsi] ; call 0xffffffffc2e1741d
0x00000000001bbf79 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x00000000001bbf49 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000001bc069 : outsd dx, dword ptr [rsi] ; clc ; call rcx
0x000000000019610d : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x00000000001b0a41 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0a59 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0aa1 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0ad1 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0ae9 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000011568d : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x0000000000089ee8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a028 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a168 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a2a8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a3e8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a528 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a668 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a7a8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008a8e8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008aa28 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ab68 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008aca8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ade8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008af28 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008b068 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008bdc2 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008bf42 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c0c2 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c242 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c3c2 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c542 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c6c2 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c842 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008c9c2 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008cb42 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ccc2 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ce42 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008cfc2 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d142 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008d2c2 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014e79c : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014e8bc : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014e9dc : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014eafc : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ec1c : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ed3c : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ee5c : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014ef7c : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f09c : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f1bc : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f2dc : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f3fc : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f51c : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f63c : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014f75c : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fa7a : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fbea : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014fd5a : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000014feca : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000015003a : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000001501aa : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000015031a : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000015048a : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000001505fa : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000015076a : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000001508da : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150a4a : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150bba : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150d2a : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000150e9a : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fe2e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009003e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009024e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009045e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009066e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009087e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000090a8e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000090c9e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000090eae : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000910be : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000912ce : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000914de : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000916ee : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000918fe : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000091b0e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092188 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000923d8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092628 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092878 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092ac8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092d18 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000092f68 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000931b8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093408 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093658 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000938a8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093af8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093d48 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000093f98 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000941e8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161336 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161536 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161736 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161936 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161b36 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161d36 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000161f36 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162136 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162336 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162536 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162736 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162936 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162b36 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162d36 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000162f36 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001634f0 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163730 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163970 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163bb0 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000163df0 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164030 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164270 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001644b0 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001646f0 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164930 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164b70 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164db0 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000164ff0 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000165230 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000165470 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000d64a8 : outsd dx, dword ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e17421
0x000000000016f7ed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000016f88d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008d52a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000003d2fc : outsd dx, dword ptr [rsi] ; ret
0x00000000000405f4 : outsd dx, dword ptr [rsi] ; ret
0x00000000000434cb : outsd dx, dword ptr [rsi] ; ret
0x000000000004d385 : outsd dx, dword ptr [rsi] ; ret
0x000000000008d52f : outsd dx, dword ptr [rsi] ; ret
0x000000000008d569 : outsd dx, dword ptr [rsi] ; ret
0x00000000000a9fbb : outsd dx, dword ptr [rsi] ; ret
0x00000000000aa24c : outsd dx, dword ptr [rsi] ; ret
0x00000000000aa3d7 : outsd dx, dword ptr [rsi] ; ret
0x00000000001531a7 : outsd dx, dword ptr [rsi] ; ret
0x0000000000153232 : outsd dx, dword ptr [rsi] ; ret
0x0000000000155b77 : outsd dx, dword ptr [rsi] ; ret
0x0000000000155c02 : outsd dx, dword ptr [rsi] ; ret
0x0000000000158547 : outsd dx, dword ptr [rsi] ; ret
0x00000000001585d2 : outsd dx, dword ptr [rsi] ; ret
0x000000000016f7f2 : outsd dx, dword ptr [rsi] ; ret
0x0000000000182f51 : outsd dx, dword ptr [rsi] ; ret
0x000000000019fe20 : outsd dx, dword ptr [rsi] ; ret
0x00000000001a02f6 : outsd dx, dword ptr [rsi] ; ret
0x0000000000115691 : outsd dx, dword ptr [rsi] ; ret 0x144
0x0000000000183f66 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000001533a7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000153432 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000155d77 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000155e02 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000158747 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000001587d2 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000016f892 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000e0d12 : outsd dx, dword ptr [rsi] ; ret 0xddeb
0x000000000008d57a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000e0cf5 : outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000019cfc9 : outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000183f65 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000144d72 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000145b42 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000146b82 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000148752 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000abf34 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000abf1f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000144d71 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000145b41 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000146b81 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000148751 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000185365 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000185366 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000009e9a1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x000000000009f015 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000034b41 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000034e71 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000009f023 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009f0c5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x9f149 ; xor eax, eax ; ret
0x0000000000034b40 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000034e70 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000008b74f : pmovmskb edx, mm4 ; test edx, edx ; je 0x8b763 ; bsf eax, edx ; ret
0x00000000000dbee5 : pop qword ptr [rsi - 0x77000000] ; ret 0xd139
0x00000000001150a5 : pop r10 ; ret
0x00000000001857ef : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000084caa : pop r12 ; jmp rax
0x0000000000086061 : pop r12 ; jmp rax
0x000000000008683d : pop r12 ; jmp rax
0x0000000000086b3c : pop r12 ; jmp rcx
0x000000000010287f : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102899 : pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000423cc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042464 : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b10ec : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b1184 : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000000b106a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010404b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002024f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e62 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e99 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000213b9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000223fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022cc9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023045 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000236d1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c6b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c82 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b5d4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b60c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c01a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c0ef : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c13f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c44d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c6c7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c8bc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002cc71 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d04e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d157 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002efbb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002f260 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002ff99 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000030a88 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032293 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032440 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000395e6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039647 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039abb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000045613 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000457f8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004584c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000048cd8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004a99d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004aa72 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ac9a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004b6f9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d281 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d332 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000503aa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050ccd : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e03 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e55 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050fb8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055bf6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e14 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e55 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000056ae1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058add : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058b03 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058be8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000005bba7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000637ac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000752a7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000776e1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000989f0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000b738f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba04a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba0a8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf7ef : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf85a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c52a7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cc51b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ccdb7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cdf3e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cead7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cecdf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf23a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf320 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf86c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d1ae8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d228d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d38c5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d55b3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5644 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5662 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d891d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8c4b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8cc4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dcdc2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dd007 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e94cb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e956c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e959c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e98b1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaab0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaada : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eadee : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef2be : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef6d3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f150d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1567 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f162d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1728 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f6038 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f9911 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fd951 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fda1c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febdb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febf2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010321d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000103409 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001052d2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105373 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105a73 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105b9c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000109207 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a08b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a204 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a2dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011004f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001102d3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000111824 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000113e5b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000115e60 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011db1f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011f58e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000120fc4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000121242 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001213a9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220a4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220c8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012239b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123665 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001236c3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001237df : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123877 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001239f4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123b78 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124353 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012438d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124631 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124aae : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124d2f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128eeb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128fd4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129715 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012998a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129aa1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129aba : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129ca1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129daa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129de2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012a0f4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c3e5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c672 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c6c5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013287b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000132892 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013468b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001346d7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001347ab : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013484b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013d512 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013e82e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f43e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f715 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013fa6c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013ff27 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140baa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140c44 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142a9f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b29 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000143905 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144732 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144767 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000014477f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021113 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002113b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021163 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002118b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021894 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022841 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002298f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023c18 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023e08 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023eab : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f05 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f1e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024042 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024082 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000245cd : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000247c6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024863 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248c9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248e8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a12 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a52 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024f78 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002531c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000025b1d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002682e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026878 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027995 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000279d4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028014 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028855 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028895 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028ee4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000298cd : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000029f9d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a066 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a17a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002aa1b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002ac85 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002bebe : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d779 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e1c4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e424 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e7cb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000306f0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000307a1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000325c6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032be8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032c8a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003332f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000340a9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003721b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000037231 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003785a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000397df : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a49f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b526 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b582 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b9f6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ba52 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bb73 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bf96 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003c6f8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f256 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f9d8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000421ae : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000042c06 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004609c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046f81 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046fe8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000472c8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000047779 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486c3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486dc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000487cc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000488a7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004915e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000492d2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000499b1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a318 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a342 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000052e04 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005316e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055059 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005526e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055422 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000554e8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005557f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006adf8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006b249 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006d4ff : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006e9b5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ec9e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ecf7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006f2f3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070c92 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070cff : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071a63 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071d7d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071e24 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000725fe : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007276e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000730d9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000731ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000733d2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073a8c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073b9d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073c83 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073e53 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007481e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074863 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074e4b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076cc4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078de5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079267 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079b71 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079ba0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079fbe : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007a169 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007afd3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c257 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c9bf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007cdb7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007ce2a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007d890 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007e520 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007f354 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007fea9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000080380 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000813df : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000081ebe : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000831e9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083359 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000833b3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083c16 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083d66 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000084787 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000085aee : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086c70 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087154 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008755b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087c8b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000881bd : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088a0a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088edc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000893d1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b5f2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b689 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008dfef : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e130 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e149 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095434 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095520 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095700 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095fa3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096385 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000964dd : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000969c8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096ac1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096d20 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096fec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000976d4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000097859 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009807d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab4f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab70 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad2f2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad5e4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad891 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000addb6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ade07 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae216 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae267 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae30a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae572 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aef29 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b0eda : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b1b90 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b3662 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b4009 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b6a96 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ba625 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf3f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf71 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc075 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc722 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc829 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bce63 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bd7c7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000be00a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef0e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef27 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bf1b5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c0011 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c322b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c7e09 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8697 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c893b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8bcf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8cf8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8ef4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8f1a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8fcb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c934d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca0d9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca13a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca1d3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca37a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca3da : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca473 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca5a4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca6a9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca7ab : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca9e3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cabf4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cac1a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb5ea : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb64a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb6e3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb889 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb8ea : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb983 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cbebb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cc9c4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccb64 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccd0a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9cd : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9e8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d41d5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5b82 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5df4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5e29 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5f98 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d65b0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6de8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d743b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d7457 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d8de9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d9c37 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da5bb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da87a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daa1c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daae1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daea5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daee7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daf34 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000db0f4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbbb3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbf62 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc0c4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc467 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc68d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc78b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc8f9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddac5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddc56 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddce8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddd65 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddebf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000de670 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df3d9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df42b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df689 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df6a8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa04 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa7e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfadf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0253 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e05db : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e1d66 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e412c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e41f6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4215 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4821 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4e9f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4f78 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e57b8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5b29 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5f1e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7f53 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e85ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e872b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e8831 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e918e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eab55 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eac1f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ed4f0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000edefb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000efe6a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f06ca : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f07af : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f08aa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f1ac8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f40a6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f499f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5cc0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7384 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7b53 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f86c1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f91c8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa180 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fab0c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb01c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb8ca : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fbe13 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ffbe3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100882 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100e9a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001016c4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101b89 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101c10 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102109 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010218c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001026fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102790 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102fe5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000103075 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000103089 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010405e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001049a4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a39 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a50 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000105761 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000107644 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000108692 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109acf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109ae8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac6a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac80 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4d2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4e8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bb84 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bbaa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c462 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c483 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c4a2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010cbbb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d534 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d55a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d76e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d801 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dbe2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc03 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc22 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010df85 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dfb7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e2eb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e4fa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010eff1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010f5ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fd02 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fee7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ff8f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ffce : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110792 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001132e6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000113718 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000116169 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000116765 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001168b5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001172f2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000117db9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118a05 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118cda : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118efb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011985c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119ad8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119be5 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a11c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a260 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a2e9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a4e9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a620 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a6a1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ac92 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae51 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae95 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011af45 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b611 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b655 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b705 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba11 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba33 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba52 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c0f2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c113 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c132 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c4e6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c542 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c5d3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c905 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c962 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c9f3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011cf2c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d23c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d6b7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dc7a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dca1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dcfa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dd28 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e053 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e880 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8b2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8da : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ed3c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fa5c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fb29 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200d7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200e8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120468 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d52 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d73 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d92 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012150a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d0e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d8f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125304 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125346 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125428 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001254e0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001262e9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000126305 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000127199 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000127947 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001279ae : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001280a6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012840e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001286e8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012871a : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000128e03 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001291da : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001292af : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a307 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a359 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a475 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a4e0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a5e7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a600 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a79e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a821 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a9ed : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aaaf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aca3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ad61 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bc60 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bee4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c128 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c825 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012cf91 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012d272 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e568 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e5bd : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e60c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012eaed : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ef20 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f110 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f12c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f2a0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f2f3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f43f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f54b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012fed1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130833 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013093d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130c5e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314b4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314c8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ed2 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ef3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131f12 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132101 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132123 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132142 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132639 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132c92 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132cc0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132f85 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001331f9 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133222 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013344c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133c63 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133e7e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000134117 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013452b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135302 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135703 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001357b8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135d27 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136291 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136551 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001367d3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137c27 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137eae : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001380ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138606 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138b44 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138cad : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138d76 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138ea8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001390e6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013999b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399b0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399fa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139a7e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139e27 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a707 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a87d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a89b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b5bd : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b608 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013c949 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ce79 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dcaa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dd10 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013df1d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e23b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e3eb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ef48 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013efbf : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f0cd : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f873 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000140289 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000140488 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014054c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014151e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141990 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141b81 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141e51 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000142c95 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001431b0 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000143393 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001440c1 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000144276 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000172f0b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000173d36 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cbe : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cd8 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000175197 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000175238 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b2 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e3 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000203e1 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000022bb0 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000032fcb : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000033c3d : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c12b : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c17a : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c1b2 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c252 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f3ee : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f43d : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f472 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f512 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004239b : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004983a : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054cb8 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054cd0 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bd1e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bf93 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e799 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e7de : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e7ec : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007188d : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007357f : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000735ad : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000073654 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075020 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007503b : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075054 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000751e2 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000751fb : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075214 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075df8 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000767c3 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076a68 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076b07 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076b39 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077295 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077aa0 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077e2f : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077eae : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000785ab : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078be4 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078fbb : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079069 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b6e0 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b7fd : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d136 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d14e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d1ba : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d1dc : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d78f : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d81a : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e0a6 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e0f4 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082ce5 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082d73 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008557f : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000086f76 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087a60 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087ace : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087e77 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088d7b : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089756 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000095a49 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096baa : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096bd4 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096ee8 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000097922 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acd07 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acd1b : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ace00 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acefd : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acf40 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae6fe : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae74d : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae782 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae822 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b10bb : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b37eb : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b383a : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3872 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3912 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b9f56 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bc918 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bc9de : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bcc26 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bcc6c : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bddf2 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bdf30 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7636 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7a38 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7acf : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7b0f : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c8d5b : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c955f : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9be2 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9c2f : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9cbe : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d7fd4 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d9838 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d98b7 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000da3bc : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000da3ef : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de379 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de405 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de458 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e8298 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e82d6 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8c3b : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8c9b : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8cfd : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd4a3 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd65f : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd6c9 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe793 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe7e3 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe9ba : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000100300 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105629 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f5b : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f71 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f97 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001082de : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010845e : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000108994 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c878 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c8ec : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010d353 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e0a9 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e0e2 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e0fe : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e3cb : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000110a62 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000110cfe : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001110ca : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000118bb2 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011b11c : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c32f : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c75e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011e981 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011ea41 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000123168 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000123207 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124ed6 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124f1c : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124f6c : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000125003 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012772e : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001277da : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000129576 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012962e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012c9f6 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ca1c : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012cdc3 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012de51 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012e41e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ed40 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ed86 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000132a85 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133356 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133637 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133686 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013553f : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137866 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013787b : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139316 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001393df : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013948e : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001395f7 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139646 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a089 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a0c7 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a4c8 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a4e0 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a690 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a6b0 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b1e1 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b6ff : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b7aa : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013c09d : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013cc12 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013cc8a : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013d340 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013d3aa : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001408ad : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014227c : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d125 : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000006d147 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000cd40a : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000cd41a : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000ffd68 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000115a44 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000115a60 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000206c2 : pop r12 ; pop r13 ; ret
0x000000000002268a : pop r12 ; pop r13 ; ret
0x0000000000022703 : pop r12 ; pop r13 ; ret
0x0000000000022b53 : pop r12 ; pop r13 ; ret
0x0000000000029dae : pop r12 ; pop r13 ; ret
0x0000000000029dd2 : pop r12 ; pop r13 ; ret
0x0000000000029e16 : pop r12 ; pop r13 ; ret
0x0000000000029e9d : pop r12 ; pop r13 ; ret
0x000000000002a83a : pop r12 ; pop r13 ; ret
0x000000000002a860 : pop r12 ; pop r13 ; ret
0x000000000002a8e2 : pop r12 ; pop r13 ; ret
0x0000000000032dc6 : pop r12 ; pop r13 ; ret
0x0000000000033b90 : pop r12 ; pop r13 ; ret
0x0000000000036bf5 : pop r12 ; pop r13 ; ret
0x0000000000036c1a : pop r12 ; pop r13 ; ret
0x0000000000039df8 : pop r12 ; pop r13 ; ret
0x0000000000039e39 : pop r12 ; pop r13 ; ret
0x000000000003a588 : pop r12 ; pop r13 ; ret
0x000000000003ae48 : pop r12 ; pop r13 ; ret
0x000000000003aed0 : pop r12 ; pop r13 ; ret
0x000000000004a8dc : pop r12 ; pop r13 ; ret
0x000000000004fff6 : pop r12 ; pop r13 ; ret
0x0000000000054b8e : pop r12 ; pop r13 ; ret
0x0000000000054bb1 : pop r12 ; pop r13 ; ret
0x0000000000054d8a : pop r12 ; pop r13 ; ret
0x0000000000054da0 : pop r12 ; pop r13 ; ret
0x0000000000055b35 : pop r12 ; pop r13 ; ret
0x000000000005b778 : pop r12 ; pop r13 ; ret
0x000000000005b85f : pop r12 ; pop r13 ; ret
0x00000000000634b3 : pop r12 ; pop r13 ; ret
0x000000000006bbd5 : pop r12 ; pop r13 ; ret
0x000000000006dd65 : pop r12 ; pop r13 ; ret
0x000000000006e293 : pop r12 ; pop r13 ; ret
0x000000000006e2a8 : pop r12 ; pop r13 ; ret
0x000000000006e2b9 : pop r12 ; pop r13 ; ret
0x000000000006efd0 : pop r12 ; pop r13 ; ret
0x000000000006effc : pop r12 ; pop r13 ; ret
0x00000000000701e7 : pop r12 ; pop r13 ; ret
0x0000000000070205 : pop r12 ; pop r13 ; ret
0x0000000000070280 : pop r12 ; pop r13 ; ret
0x0000000000070e30 : pop r12 ; pop r13 ; ret
0x0000000000070e5c : pop r12 ; pop r13 ; ret
0x00000000000717cf : pop r12 ; pop r13 ; ret
0x0000000000071915 : pop r12 ; pop r13 ; ret
0x00000000000734aa : pop r12 ; pop r13 ; ret
0x00000000000750f2 : pop r12 ; pop r13 ; ret
0x000000000007510b : pop r12 ; pop r13 ; ret
0x000000000007511c : pop r12 ; pop r13 ; ret
0x0000000000075452 : pop r12 ; pop r13 ; ret
0x00000000000757e0 : pop r12 ; pop r13 ; ret
0x000000000007641c : pop r12 ; pop r13 ; ret
0x0000000000076910 : pop r12 ; pop r13 ; ret
0x00000000000769c9 : pop r12 ; pop r13 ; ret
0x0000000000077935 : pop r12 ; pop r13 ; ret
0x0000000000077966 : pop r12 ; pop r13 ; ret
0x0000000000078a65 : pop r12 ; pop r13 ; ret
0x000000000007a457 : pop r12 ; pop r13 ; ret
0x000000000007bbd1 : pop r12 ; pop r13 ; ret
0x000000000007c441 : pop r12 ; pop r13 ; ret
0x000000000007c722 : pop r12 ; pop r13 ; ret
0x000000000007d033 : pop r12 ; pop r13 ; ret
0x000000000007d579 : pop r12 ; pop r13 ; ret
0x000000000007e223 : pop r12 ; pop r13 ; ret
0x0000000000084542 : pop r12 ; pop r13 ; ret
0x00000000000845d7 : pop r12 ; pop r13 ; ret
0x00000000000845ed : pop r12 ; pop r13 ; ret
0x0000000000084e4e : pop r12 ; pop r13 ; ret
0x00000000000850a9 : pop r12 ; pop r13 ; ret
0x00000000000850be : pop r12 ; pop r13 ; ret
0x00000000000850e5 : pop r12 ; pop r13 ; ret
0x0000000000087795 : pop r12 ; pop r13 ; ret
0x000000000008f0a0 : pop r12 ; pop r13 ; ret
0x000000000008f135 : pop r12 ; pop r13 ; ret
0x000000000009f2d7 : pop r12 ; pop r13 ; ret
0x000000000009f306 : pop r12 ; pop r13 ; ret
0x000000000009f3ce : pop r12 ; pop r13 ; ret
0x000000000009f450 : pop r12 ; pop r13 ; ret
0x000000000009f469 : pop r12 ; pop r13 ; ret
0x000000000009f4b3 : pop r12 ; pop r13 ; ret
0x000000000009f519 : pop r12 ; pop r13 ; ret
0x00000000000aa87f : pop r12 ; pop r13 ; ret
0x00000000000aa99e : pop r12 ; pop r13 ; ret
0x00000000000aa9ce : pop r12 ; pop r13 ; ret
0x00000000000b9e84 : pop r12 ; pop r13 ; ret
0x00000000000b9ef4 : pop r12 ; pop r13 ; ret
0x00000000000ba3b8 : pop r12 ; pop r13 ; ret
0x00000000000ba438 : pop r12 ; pop r13 ; ret
0x00000000000ba452 : pop r12 ; pop r13 ; ret
0x00000000000baeda : pop r12 ; pop r13 ; ret
0x00000000000c7c31 : pop r12 ; pop r13 ; ret
0x00000000000c7c66 : pop r12 ; pop r13 ; ret
0x00000000000c7c9d : pop r12 ; pop r13 ; ret
0x00000000000c8507 : pop r12 ; pop r13 ; ret
0x00000000000c989b : pop r12 ; pop r13 ; ret
0x00000000000c9a0c : pop r12 ; pop r13 ; ret
0x00000000000cb06c : pop r12 ; pop r13 ; ret
0x00000000000cb1eb : pop r12 ; pop r13 ; ret
0x00000000000cba84 : pop r12 ; pop r13 ; ret
0x00000000000cbae2 : pop r12 ; pop r13 ; ret
0x00000000000cc1de : pop r12 ; pop r13 ; ret
0x00000000000d7148 : pop r12 ; pop r13 ; ret
0x00000000000e834f : pop r12 ; pop r13 ; ret
0x00000000000e8374 : pop r12 ; pop r13 ; ret
0x00000000000e8a76 : pop r12 ; pop r13 ; ret
0x00000000000efb17 : pop r12 ; pop r13 ; ret
0x00000000000efde5 : pop r12 ; pop r13 ; ret
0x00000000000efe00 : pop r12 ; pop r13 ; ret
0x00000000000f036b : pop r12 ; pop r13 ; ret
0x00000000000f037b : pop r12 ; pop r13 ; ret
0x00000000000f040a : pop r12 ; pop r13 ; ret
0x00000000000f0451 : pop r12 ; pop r13 ; ret
0x00000000000f74a3 : pop r12 ; pop r13 ; ret
0x00000000000f85ab : pop r12 ; pop r13 ; ret
0x00000000000f9b67 : pop r12 ; pop r13 ; ret
0x00000000000f9bbf : pop r12 ; pop r13 ; ret
0x00000000000fb674 : pop r12 ; pop r13 ; ret
0x00000000000fb688 : pop r12 ; pop r13 ; ret
0x00000000000fb6fb : pop r12 ; pop r13 ; ret
0x00000000000fc2ed : pop r12 ; pop r13 ; ret
0x00000000000fc4e0 : pop r12 ; pop r13 ; ret
0x00000000000fc59c : pop r12 ; pop r13 ; ret
0x00000000000fc5d0 : pop r12 ; pop r13 ; ret
0x00000000000fd0c0 : pop r12 ; pop r13 ; ret
0x00000000000fd170 : pop r12 ; pop r13 ; ret
0x00000000000fef97 : pop r12 ; pop r13 ; ret
0x00000000000fefa8 : pop r12 ; pop r13 ; ret
0x00000000000ff8da : pop r12 ; pop r13 ; ret
0x00000000000ffa1a : pop r12 ; pop r13 ; ret
0x00000000000ffe90 : pop r12 ; pop r13 ; ret
0x00000000000ffec4 : pop r12 ; pop r13 ; ret
0x0000000000101270 : pop r12 ; pop r13 ; ret
0x0000000000104e33 : pop r12 ; pop r13 ; ret
0x0000000000104e9b : pop r12 ; pop r13 ; ret
0x0000000000105cd1 : pop r12 ; pop r13 ; ret
0x00000000001088e6 : pop r12 ; pop r13 ; ret
0x0000000000108a3c : pop r12 ; pop r13 ; ret
0x0000000000109504 : pop r12 ; pop r13 ; ret
0x00000000001098a9 : pop r12 ; pop r13 ; ret
0x00000000001098fa : pop r12 ; pop r13 ; ret
0x000000000010ad4e : pop r12 ; pop r13 ; ret
0x000000000010ad60 : pop r12 ; pop r13 ; ret
0x000000000010b5ae : pop r12 ; pop r13 ; ret
0x000000000010b5c0 : pop r12 ; pop r13 ; ret
0x000000000010b80c : pop r12 ; pop r13 ; ret
0x000000000010b996 : pop r12 ; pop r13 ; ret
0x000000000010bdfa : pop r12 ; pop r13 ; ret
0x000000000010c0c9 : pop r12 ; pop r13 ; ret
0x000000000010ce85 : pop r12 ; pop r13 ; ret
0x000000000010cea0 : pop r12 ; pop r13 ; ret
0x000000000010d1bc : pop r12 ; pop r13 ; ret
0x000000000010eb5a : pop r12 ; pop r13 ; ret
0x000000000010eb70 : pop r12 ; pop r13 ; ret
0x00000000001163fb : pop r12 ; pop r13 ; ret
0x000000000011706b : pop r12 ; pop r13 ; ret
0x00000000001170c0 : pop r12 ; pop r13 ; ret
0x0000000000117402 : pop r12 ; pop r13 ; ret
0x0000000000117485 : pop r12 ; pop r13 ; ret
0x0000000000117552 : pop r12 ; pop r13 ; ret
0x0000000000117823 : pop r12 ; pop r13 ; ret
0x0000000000117838 : pop r12 ; pop r13 ; ret
0x0000000000117849 : pop r12 ; pop r13 ; ret
0x0000000000118522 : pop r12 ; pop r13 ; ret
0x00000000001185a8 : pop r12 ; pop r13 ; ret
0x0000000000118672 : pop r12 ; pop r13 ; ret
0x000000000011a00b : pop r12 ; pop r13 ; ret
0x000000000011b8ab : pop r12 ; pop r13 ; ret
0x000000000011bf7c : pop r12 ; pop r13 ; ret
0x000000000011d0dc : pop r12 ; pop r13 ; ret
0x000000000011d127 : pop r12 ; pop r13 ; ret
0x0000000000120bdc : pop r12 ; pop r13 ; ret
0x000000000012336a : pop r12 ; pop r13 ; ret
0x000000000012b0e1 : pop r12 ; pop r13 ; ret
0x000000000012b16f : pop r12 ; pop r13 ; ret
0x000000000012b1ef : pop r12 ; pop r13 ; ret
0x000000000012b274 : pop r12 ; pop r13 ; ret
0x000000000012b2f4 : pop r12 ; pop r13 ; ret
0x000000000012b374 : pop r12 ; pop r13 ; ret
0x000000000012b3f4 : pop r12 ; pop r13 ; ret
0x000000000012b46f : pop r12 ; pop r13 ; ret
0x000000000012b4f9 : pop r12 ; pop r13 ; ret
0x000000000012b56f : pop r12 ; pop r13 ; ret
0x000000000012b5ef : pop r12 ; pop r13 ; ret
0x000000000012b679 : pop r12 ; pop r13 ; ret
0x000000000012b6f4 : pop r12 ; pop r13 ; ret
0x000000000012b76f : pop r12 ; pop r13 ; ret
0x000000000012c25d : pop r12 ; pop r13 ; ret
0x000000000012f70c : pop r12 ; pop r13 ; ret
0x00000000001307a1 : pop r12 ; pop r13 ; ret
0x00000000001307de : pop r12 ; pop r13 ; ret
0x000000000013197c : pop r12 ; pop r13 ; ret
0x0000000000131afb : pop r12 ; pop r13 ; ret
0x0000000000132903 : pop r12 ; pop r13 ; ret
0x0000000000132919 : pop r12 ; pop r13 ; ret
0x000000000013430a : pop r12 ; pop r13 ; ret
0x0000000000134ac0 : pop r12 ; pop r13 ; ret
0x0000000000134ecd : pop r12 ; pop r13 ; ret
0x000000000013549d : pop r12 ; pop r13 ; ret
0x00000000001354b1 : pop r12 ; pop r13 ; ret
0x000000000013798d : pop r12 ; pop r13 ; ret
0x0000000000137acd : pop r12 ; pop r13 ; ret
0x0000000000138456 : pop r12 ; pop r13 ; ret
0x00000000001384a9 : pop r12 ; pop r13 ; ret
0x0000000000138516 : pop r12 ; pop r13 ; ret
0x0000000000139284 : pop r12 ; pop r13 ; ret
0x0000000000139299 : pop r12 ; pop r13 ; ret
0x000000000013a1db : pop r12 ; pop r13 ; ret
0x000000000013a248 : pop r12 ; pop r13 ; ret
0x000000000013b49c : pop r12 ; pop r13 ; ret
0x000000000013b4c4 : pop r12 ; pop r13 ; ret
0x000000000013b4e5 : pop r12 ; pop r13 ; ret
0x00000000001426ba : pop r12 ; pop r13 ; ret
0x000000000014296d : pop r12 ; pop r13 ; ret
0x000000000017400d : pop r12 ; pop r13 ; ret
0x0000000000174771 : pop r12 ; pop r13 ; ret
0x00000000000b65d4 : pop r12 ; pop r14 ; ret
0x00000000000bb56c : pop r12 ; pop r14 ; ret
0x00000000000bb644 : pop r12 ; pop r14 ; ret
0x00000000000398c6 : pop r12 ; pop rbp ; ret
0x00000000000cace1 : pop r12 ; pop rbp ; ret
0x00000000000fe635 : pop r12 ; pop rbp ; ret
0x000000000001fb12 : pop r12 ; ret
0x000000000001fb78 : pop r12 ; ret
0x000000000001fc08 : pop r12 ; ret
0x0000000000035a99 : pop r12 ; ret
0x0000000000035b22 : pop r12 ; ret
0x0000000000035c4b : pop r12 ; ret
0x0000000000035c9c : pop r12 ; ret
0x0000000000035ec5 : pop r12 ; ret
0x0000000000036dee : pop r12 ; ret
0x0000000000039cf5 : pop r12 ; ret
0x000000000003a271 : pop r12 ; ret
0x000000000003a2c5 : pop r12 ; ret
0x000000000003adb3 : pop r12 ; ret
0x000000000004509c : pop r12 ; ret
0x0000000000047a15 : pop r12 ; ret
0x00000000000480de : pop r12 ; ret
0x000000000004827e : pop r12 ; ret
0x0000000000052c93 : pop r12 ; ret
0x000000000006a974 : pop r12 ; ret
0x000000000006aad6 : pop r12 ; ret
0x000000000006ab48 : pop r12 ; ret
0x000000000006c47e : pop r12 ; ret
0x000000000006c4a8 : pop r12 ; ret
0x000000000006cb8e : pop r12 ; ret
0x000000000006cc10 : pop r12 ; ret
0x000000000006d201 : pop r12 ; ret
0x000000000006d367 : pop r12 ; ret
0x000000000006db9a : pop r12 ; ret
0x000000000006dc0c : pop r12 ; ret
0x000000000006df3e : pop r12 ; ret
0x000000000006df84 : pop r12 ; ret
0x000000000006dfee : pop r12 ; ret
0x000000000006e0de : pop r12 ; ret
0x000000000006e13d : pop r12 ; ret
0x000000000006ee7c : pop r12 ; ret
0x000000000006eecc : pop r12 ; ret
0x000000000006f1ac : pop r12 ; ret
0x000000000006f1b9 : pop r12 ; ret
0x000000000006f66a : pop r12 ; ret
0x000000000006f77e : pop r12 ; ret
0x000000000006f7de : pop r12 ; ret
0x000000000006fa1c : pop r12 ; ret
0x000000000006fa68 : pop r12 ; ret
0x000000000006fc87 : pop r12 ; ret
0x000000000006fdc7 : pop r12 ; ret
0x000000000006fe11 : pop r12 ; ret
0x000000000007083a : pop r12 ; ret
0x00000000000708af : pop r12 ; ret
0x0000000000070987 : pop r12 ; ret
0x0000000000070a7c : pop r12 ; ret
0x0000000000070ac3 : pop r12 ; ret
0x0000000000070b73 : pop r12 ; ret
0x0000000000070b87 : pop r12 ; ret
0x0000000000072add : pop r12 ; ret
0x0000000000072b82 : pop r12 ; ret
0x0000000000073756 : pop r12 ; ret
0x0000000000074b55 : pop r12 ; ret
0x0000000000074b86 : pop r12 ; ret
0x0000000000076baa : pop r12 ; ret
0x00000000000779cb : pop r12 ; ret
0x0000000000077c8f : pop r12 ; ret
0x0000000000077cc2 : pop r12 ; ret
0x0000000000078164 : pop r12 ; ret
0x0000000000078190 : pop r12 ; ret
0x00000000000781d3 : pop r12 ; ret
0x0000000000078267 : pop r12 ; ret
0x00000000000782f5 : pop r12 ; ret
0x000000000007830c : pop r12 ; ret
0x0000000000079948 : pop r12 ; ret
0x000000000007a367 : pop r12 ; ret
0x000000000007a792 : pop r12 ; ret
0x000000000007b59b : pop r12 ; ret
0x000000000007b9b6 : pop r12 ; ret
0x000000000007ba69 : pop r12 ; ret
0x000000000007d39e : pop r12 ; ret
0x000000000007eedb : pop r12 ; ret
0x000000000007ef0b : pop r12 ; ret
0x0000000000084bab : pop r12 ; ret
0x0000000000085f48 : pop r12 ; ret
0x0000000000086734 : pop r12 ; ret
0x0000000000086a14 : pop r12 ; ret
0x0000000000086a7e : pop r12 ; ret
0x0000000000088489 : pop r12 ; ret
0x0000000000088bc5 : pop r12 ; ret
0x00000000000891fb : pop r12 ; ret
0x00000000000892b0 : pop r12 ; ret
0x0000000000089652 : pop r12 ; ret
0x00000000000896d7 : pop r12 ; ret
0x0000000000089701 : pop r12 ; ret
0x0000000000089820 : pop r12 ; ret
0x000000000008985f : pop r12 ; ret
0x000000000008b526 : pop r12 ; ret
0x00000000000943ea : pop r12 ; ret
0x0000000000094d64 : pop r12 ; ret
0x0000000000094f8e : pop r12 ; ret
0x0000000000096a4d : pop r12 ; ret
0x0000000000096c78 : pop r12 ; ret
0x0000000000096ce7 : pop r12 ; ret
0x0000000000096e41 : pop r12 ; ret
0x00000000000abce6 : pop r12 ; ret
0x00000000000ac67a : pop r12 ; ret
0x00000000000acb11 : pop r12 ; ret
0x00000000000ad0ec : pop r12 ; ret
0x00000000000ad15e : pop r12 ; ret
0x00000000000b9e22 : pop r12 ; ret
0x00000000000c8338 : pop r12 ; ret
0x00000000000c962a : pop r12 ; ret
0x00000000000cc0e9 : pop r12 ; ret
0x00000000000cc839 : pop r12 ; ret
0x00000000000cdc5e : pop r12 ; ret
0x00000000000cdc83 : pop r12 ; ret
0x00000000000cdcb7 : pop r12 ; ret
0x00000000000cdd03 : pop r12 ; ret
0x00000000000ce6dd : pop r12 ; ret
0x00000000000ce6fb : pop r12 ; ret
0x00000000000ce723 : pop r12 ; ret
0x00000000000ce773 : pop r12 ; ret
0x00000000000d17a5 : pop r12 ; ret
0x00000000000d18a5 : pop r12 ; ret
0x00000000000d5c27 : pop r12 ; ret
0x00000000000d5c41 : pop r12 ; ret
0x00000000000d5c71 : pop r12 ; ret
0x00000000000d6f91 : pop r12 ; ret
0x00000000000d6fd4 : pop r12 ; ret
0x00000000000d7cb4 : pop r12 ; ret
0x00000000000dc127 : pop r12 ; ret
0x00000000000e7bc0 : pop r12 ; ret
0x00000000000e8484 : pop r12 ; ret
0x00000000000efcc2 : pop r12 ; ret
0x00000000000efceb : pop r12 ; ret
0x00000000000f5d6e : pop r12 ; ret
0x00000000000f6a12 : pop r12 ; ret
0x00000000000f6e75 : pop r12 ; ret
0x00000000000f6ec0 : pop r12 ; ret
0x00000000000f713c : pop r12 ; ret
0x00000000000f71b5 : pop r12 ; ret
0x00000000000f8232 : pop r12 ; ret
0x00000000000faef1 : pop r12 ; ret
0x00000000000fb7cb : pop r12 ; ret
0x00000000000fb82f : pop r12 ; ret
0x00000000000fc439 : pop r12 ; ret
0x00000000000fc458 : pop r12 ; ret
0x00000000000fc478 : pop r12 ; ret
0x00000000000fc8f1 : pop r12 ; ret
0x00000000000fc948 : pop r12 ; ret
0x00000000000fcb4e : pop r12 ; ret
0x00000000000fcdee : pop r12 ; ret
0x00000000000fce0c : pop r12 ; ret
0x00000000000fced0 : pop r12 ; ret
0x00000000000fcf02 : pop r12 ; ret
0x00000000000fd553 : pop r12 ; ret
0x00000000000ff438 : pop r12 ; ret
0x00000000000ff5c0 : pop r12 ; ret
0x00000000001015e6 : pop r12 ; ret
0x0000000000101994 : pop r12 ; ret
0x00000000001019d0 : pop r12 ; ret
0x0000000000101f3e : pop r12 ; ret
0x0000000000101f72 : pop r12 ; ret
0x000000000010314e : pop r12 ; ret
0x000000000010315d : pop r12 ; ret
0x0000000000104c33 : pop r12 ; ret
0x000000000010548d : pop r12 ; ret
0x0000000000108649 : pop r12 ; ret
0x000000000010c9a1 : pop r12 ; ret
0x000000000010c9dd : pop r12 ; ret
0x000000000010ebc6 : pop r12 ; ret
0x000000000010ec07 : pop r12 ; ret
0x0000000000112e8b : pop r12 ; ret
0x000000000011532c : pop r12 ; ret
0x0000000000115736 : pop r12 ; ret
0x000000000011597f : pop r12 ; ret
0x0000000000116a15 : pop r12 ; ret
0x0000000000116a6a : pop r12 ; ret
0x0000000000116d52 : pop r12 ; ret
0x0000000000116d9b : pop r12 ; ret
0x0000000000117f15 : pop r12 ; ret
0x0000000000117f6a : pop r12 ; ret
0x0000000000118252 : pop r12 ; ret
0x000000000011829b : pop r12 ; ret
0x00000000001192bc : pop r12 ; ret
0x00000000001192ef : pop r12 ; ret
0x0000000000119e1b : pop r12 ; ret
0x000000000011d342 : pop r12 ; ret
0x000000000011d3c9 : pop r12 ; ret
0x000000000011d3f1 : pop r12 ; ret
0x0000000000121a3f : pop r12 ; ret
0x0000000000121a70 : pop r12 ; ret
0x0000000000121e13 : pop r12 ; ret
0x0000000000121e3c : pop r12 ; ret
0x0000000000121e77 : pop r12 ; ret
0x0000000000126972 : pop r12 ; ret
0x0000000000127ab8 : pop r12 ; ret
0x0000000000127af8 : pop r12 ; ret
0x0000000000127af8 : pop r12 ; ret
0x0000000000128a57 : pop r12 ; ret
0x0000000000128a77 : pop r12 ; ret
0x000000000012ccba : pop r12 ; ret
0x000000000012cd23 : pop r12 ; ret
0x000000000012da04 : pop r12 ; ret
0x000000000012e1ab : pop r12 ; ret
0x000000000012e1c4 : pop r12 ; ret
0x000000000012e706 : pop r12 ; ret
0x000000000012e727 : pop r12 ; ret
0x000000000012e8bc : pop r12 ; ret
0x000000000012ec94 : pop r12 ; ret
0x000000000012eddc : pop r12 ; ret
0x00000000001330a5 : pop r12 ; ret
0x00000000001330d8 : pop r12 ; ret
0x00000000001338fc : pop r12 ; ret
0x00000000001339c9 : pop r12 ; ret
0x0000000000133ae4 : pop r12 ; ret
0x0000000000133b70 : pop r12 ; ret
0x0000000000137677 : pop r12 ; ret
0x00000000001376c0 : pop r12 ; ret
0x0000000000137cce : pop r12 ; ret
0x0000000000137cf2 : pop r12 ; ret
0x00000000001386f5 : pop r12 ; ret
0x0000000000139205 : pop r12 ; ret
0x000000000013921f : pop r12 ; ret
0x000000000013b328 : pop r12 ; ret
0x000000000013bfa1 : pop r12 ; ret
0x000000000013bfbf : pop r12 ; ret
0x000000000013bfe6 : pop r12 ; ret
0x000000000013c21e : pop r12 ; ret
0x0000000000140e05 : pop r12 ; ret
0x0000000000140e65 : pop r12 ; ret
0x000000000014484b : pop r12 ; ret
0x00000000001448b0 : pop r12 ; ret
0x0000000000144920 : pop r12 ; ret
0x0000000000144990 : pop r12 ; ret
0x0000000000144a00 : pop r12 ; ret
0x0000000000144a6b : pop r12 ; ret
0x0000000000144ad5 : pop r12 ; ret
0x0000000000144b3b : pop r12 ; ret
0x0000000000144b9b : pop r12 ; ret
0x0000000000144c05 : pop r12 ; ret
0x0000000000144c70 : pop r12 ; ret
0x0000000000144cdb : pop r12 ; ret
0x00000000001740f1 : pop r12 ; ret
0x00000000001747f2 : pop r12 ; ret
0x00000000000423ce : pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042466 : pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b10ee : pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b1186 : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000000b106c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010404d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020251 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e64 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e9b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000213bb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000223fd : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022ccb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023047 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000236d3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c6d : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c84 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b5d6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b60e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c01c : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c0f1 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c141 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c44f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c6c9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c8be : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002cc73 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d050 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d159 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002efbd : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002f262 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002ff9b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000030a8a : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032295 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032442 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000395e8 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039649 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039abd : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000045615 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000457fa : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004584e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000048cda : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004a99f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004aa74 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ac9c : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004b6fb : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d283 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d334 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000503ac : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050ccf : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e05 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e57 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050fba : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055bf8 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e16 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e57 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000056ae3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058adf : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058b05 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058bea : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000005bba9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000637ae : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000752a9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000776e3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000088840 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000989f2 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000b7391 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba04c : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba0aa : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf7f1 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf85c : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c52a9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cc51d : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ccdb9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cdf40 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cead9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cece1 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf23c : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf322 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf86e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d1aea : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d228f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d38c7 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d55b5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5646 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5664 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d891f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8c4d : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8cc6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dcdc4 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dd009 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e94cd : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e956e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e959e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e98b3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaab2 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaadc : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eadf0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef2c0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef6d5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f150f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1569 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f162f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f172a : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f603a : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f9913 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fd953 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fda1e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febdd : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febf4 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010321f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010340b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000104b17 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001052d4 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105375 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105a75 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105b9e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000109209 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a08d : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a206 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a2de : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000110051 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001102d5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000111826 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000113e5d : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000115e62 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011db21 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011f590 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000120fc6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000121244 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001213ab : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220a6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220ca : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012239d : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123667 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001236c5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001237e1 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123879 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001239f6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123b7a : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124355 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012438f : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124633 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124ab0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124d31 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128eed : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128fd6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129717 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012998c : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129aa3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129abc : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129ca3 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129dac : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129de4 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012a0f6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c3e7 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c674 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c6c7 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013287d : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000132894 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013468d : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001346d9 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001347ad : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013484d : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013d514 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013e830 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f440 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f717 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013fa6e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013ff29 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140bac : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140c46 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142aa1 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b2b : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000143907 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144734 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144769 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144781 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fd : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021115 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002113d : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021165 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002118d : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021896 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022843 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022991 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023c1a : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023e0a : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023ead : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f07 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f20 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024044 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024084 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000245cf : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000247c8 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024865 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248cb : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248ea : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a14 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a54 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024f7a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002531e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000025b1f : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026830 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002687a : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027997 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000279d6 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028016 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028857 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028897 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028ee6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000298cf : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000029f9f : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a068 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a17c : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002aa1d : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002ac87 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002bec0 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d77b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e1c6 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e426 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e7cd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000306f2 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000307a3 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000325c8 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032bea : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032c8c : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000033331 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000340ab : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003721d : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000037233 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003785c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000397e1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a4a1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b528 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b584 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b9f8 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ba54 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bb75 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bf98 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003c6fa : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f258 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f9da : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000421b0 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000042c08 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004609e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046f83 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046fea : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000472ca : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004777b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486c5 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486de : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000487ce : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000488a9 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000049160 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000492d4 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000499b3 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a31a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a344 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000052e06 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000053170 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005505b : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055270 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055424 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000554ea : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055581 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006adfa : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006b24b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006d501 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006e9b7 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006eca0 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ecf9 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006f2f5 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070c94 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070d01 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071a65 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071d7f : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071e26 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000072600 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000072770 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000730db : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000731ee : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000733d4 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073a8e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073b9f : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073c85 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073e55 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074820 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074865 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074e4d : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076cc6 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078de7 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079269 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079b73 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079ba2 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079fc0 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007a16b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007afd5 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c259 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c9c1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007cdb9 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007ce2c : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007d892 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007e522 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007f356 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007feab : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000080382 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000813e1 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000081ec0 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000831eb : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008335b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000833b5 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083c18 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083d68 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000084789 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000085af0 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086c72 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087156 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008755d : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087c8d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000881bf : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088a0c : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088ede : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000893d3 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b5f4 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b68b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008dff1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e132 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e14b : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095436 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095522 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095702 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095fa5 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096387 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000964df : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000969ca : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096ac3 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096d22 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096fee : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000976d6 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009785b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009807f : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab51 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab72 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad2f4 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad5e6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad893 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000addb8 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ade09 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae218 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae269 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae30c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae574 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aef2b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b0edc : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b1b92 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b3664 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b400b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b6a98 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ba627 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf41 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf73 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc077 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc724 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc82b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bce65 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bd7c9 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000be00c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef10 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef29 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bf1b7 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c0013 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c322d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c7e0b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8699 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c893d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8bd1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8cfa : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8ef6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8f1c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8fcd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c934f : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca0db : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca13c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca1d5 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca37c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca3dc : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca475 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca5a6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca6ab : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca7ad : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca9e5 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cabf6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cac1c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb5ec : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb64c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb6e5 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb88b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb8ec : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb985 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cbebd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cc9c6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccb66 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccd0c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9cf : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9ea : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d41d7 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5b84 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5df6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5e2b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5f9a : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d65b2 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6dea : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d743d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d7459 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d8deb : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d9c39 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da5bd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da87c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daa1e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daae3 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daea7 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daee9 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daf36 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000db0f6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbbb5 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbf64 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc0c6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc469 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc68f : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc78d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc8fb : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddac7 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddc58 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddcea : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddd67 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddec1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000de672 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df3db : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df42d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df68b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df6aa : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa06 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa80 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfae1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0255 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e05dd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e1d68 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e412e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e41f8 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4217 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4823 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4ea1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4f7a : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e57ba : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5b2b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5f20 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7f55 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e85ee : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e872d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e8833 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e9190 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eab57 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eac21 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ed4f2 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000edefd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000efe6c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f06cc : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f07b1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f08ac : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f1aca : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f40a8 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f49a1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5cc2 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7386 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7b55 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f86c3 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f91ca : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa182 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fab0e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb01e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb8cc : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fbe15 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ffbe5 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100884 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100e9c : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001016c6 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101b8b : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101c12 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010210b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010218e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001026fd : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102792 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102fe7 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000103077 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010308b : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104060 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001049a6 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a3b : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a52 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000105763 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000107646 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000108694 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109ad1 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109aea : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac6c : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac82 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4d4 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4ea : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bb86 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bbac : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c464 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c485 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c4a4 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010cbbd : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d536 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d55c : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d770 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d803 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dbe4 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc05 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc24 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010df87 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dfb9 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e2ed : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e4fc : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010eff3 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010f5ee : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fd04 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fee9 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ff91 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ffd0 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110794 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001132e8 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011371a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011616b : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000116767 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001168b7 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001172f4 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000117dbb : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118a07 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118cdc : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118efd : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011985e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119ada : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119be7 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a11e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a262 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a2eb : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a4eb : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a622 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a6a3 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ac94 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae53 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae97 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011af47 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b613 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b657 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b707 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba13 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba35 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba54 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c0f4 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c115 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c134 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c4e8 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c544 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c5d5 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c907 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c964 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c9f5 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011cf2e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d23e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d6b9 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dc7c : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dca3 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dcfc : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dd2a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e055 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e882 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8b4 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8dc : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ed3e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fa5e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fb2b : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200d9 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200ea : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012046a : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d54 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d75 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d94 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012150c : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d10 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d91 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125306 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125348 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012542a : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001254e2 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001262eb : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000126307 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012719b : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000127949 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001279b0 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001280a8 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000128410 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001286ea : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012871c : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000128e05 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001291dc : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001292b1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a309 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a35b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a477 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a4e2 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a5e9 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a602 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a7a0 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a823 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a9ef : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aab1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aca5 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ad63 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bc62 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bee6 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c12a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c827 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012cf93 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012d274 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e56a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e5bf : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e60e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012eaef : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ef22 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f112 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f12e : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f2a2 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f2f5 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f441 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f54d : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012fed3 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130835 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013093f : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130c60 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314b6 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314ca : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ed4 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ef5 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131f14 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132103 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132125 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132144 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013263b : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132c94 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132cc2 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132f87 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001331fb : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133224 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013344e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133c65 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133e80 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000134119 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013452d : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135304 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135705 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001357ba : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135d29 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136293 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136553 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001367d5 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137c29 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137eb0 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001380ee : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138608 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138b46 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138caf : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138d78 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138eaa : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001390e8 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013999d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399b2 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399fc : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139a80 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139e29 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a709 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a87f : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a89d : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b5bf : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b60a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013c94b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ce7b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dcac : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dd12 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013df1f : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e23d : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e3ed : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ef4a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013efc1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f0cf : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f875 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014028b : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014048a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014054e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141520 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141992 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141b83 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141e53 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000142c97 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001431b2 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000143395 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001440c3 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000144278 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000172f0d : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000173d38 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cc0 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cda : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000175199 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000017523a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b584 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ba54 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b4 : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e5 : pop r13 ; pop r14 ; ret
0x00000000000203e3 : pop r13 ; pop r14 ; ret
0x0000000000022bb2 : pop r13 ; pop r14 ; ret
0x0000000000032fcd : pop r13 ; pop r14 ; ret
0x0000000000033c3f : pop r13 ; pop r14 ; ret
0x000000000003c12d : pop r13 ; pop r14 ; ret
0x000000000003c17c : pop r13 ; pop r14 ; ret
0x000000000003c1b4 : pop r13 ; pop r14 ; ret
0x000000000003c254 : pop r13 ; pop r14 ; ret
0x000000000003f3f0 : pop r13 ; pop r14 ; ret
0x000000000003f43f : pop r13 ; pop r14 ; ret
0x000000000003f474 : pop r13 ; pop r14 ; ret
0x000000000003f514 : pop r13 ; pop r14 ; ret
0x000000000004239d : pop r13 ; pop r14 ; ret
0x000000000004983c : pop r13 ; pop r14 ; ret
0x0000000000054cba : pop r13 ; pop r14 ; ret
0x0000000000054cd2 : pop r13 ; pop r14 ; ret
0x000000000006bd20 : pop r13 ; pop r14 ; ret
0x000000000006bf95 : pop r13 ; pop r14 ; ret
0x000000000006e79b : pop r13 ; pop r14 ; ret
0x000000000006e7e0 : pop r13 ; pop r14 ; ret
0x000000000006e7ee : pop r13 ; pop r14 ; ret
0x000000000007188f : pop r13 ; pop r14 ; ret
0x0000000000073581 : pop r13 ; pop r14 ; ret
0x00000000000735af : pop r13 ; pop r14 ; ret
0x0000000000073656 : pop r13 ; pop r14 ; ret
0x0000000000075022 : pop r13 ; pop r14 ; ret
0x000000000007503d : pop r13 ; pop r14 ; ret
0x0000000000075056 : pop r13 ; pop r14 ; ret
0x00000000000751e4 : pop r13 ; pop r14 ; ret
0x00000000000751fd : pop r13 ; pop r14 ; ret
0x0000000000075216 : pop r13 ; pop r14 ; ret
0x0000000000075dfa : pop r13 ; pop r14 ; ret
0x00000000000767c5 : pop r13 ; pop r14 ; ret
0x0000000000076a6a : pop r13 ; pop r14 ; ret
0x0000000000076b09 : pop r13 ; pop r14 ; ret
0x0000000000076b3b : pop r13 ; pop r14 ; ret
0x0000000000077297 : pop r13 ; pop r14 ; ret
0x0000000000077aa2 : pop r13 ; pop r14 ; ret
0x0000000000077e31 : pop r13 ; pop r14 ; ret
0x0000000000077eb0 : pop r13 ; pop r14 ; ret
0x00000000000785ad : pop r13 ; pop r14 ; ret
0x0000000000078be6 : pop r13 ; pop r14 ; ret
0x0000000000078fbd : pop r13 ; pop r14 ; ret
0x000000000007906b : pop r13 ; pop r14 ; ret
0x000000000007b6e2 : pop r13 ; pop r14 ; ret
0x000000000007b7ff : pop r13 ; pop r14 ; ret
0x000000000007d138 : pop r13 ; pop r14 ; ret
0x000000000007d150 : pop r13 ; pop r14 ; ret
0x000000000007d1bc : pop r13 ; pop r14 ; ret
0x000000000007d1de : pop r13 ; pop r14 ; ret
0x000000000007d791 : pop r13 ; pop r14 ; ret
0x000000000007d81c : pop r13 ; pop r14 ; ret
0x000000000007e0a8 : pop r13 ; pop r14 ; ret
0x000000000007e0f6 : pop r13 ; pop r14 ; ret
0x0000000000082ce7 : pop r13 ; pop r14 ; ret
0x0000000000082d75 : pop r13 ; pop r14 ; ret
0x0000000000085581 : pop r13 ; pop r14 ; ret
0x0000000000086f78 : pop r13 ; pop r14 ; ret
0x0000000000087a62 : pop r13 ; pop r14 ; ret
0x0000000000087ad0 : pop r13 ; pop r14 ; ret
0x0000000000087e79 : pop r13 ; pop r14 ; ret
0x0000000000088d7d : pop r13 ; pop r14 ; ret
0x0000000000089758 : pop r13 ; pop r14 ; ret
0x0000000000095a4b : pop r13 ; pop r14 ; ret
0x0000000000096bac : pop r13 ; pop r14 ; ret
0x0000000000096bd6 : pop r13 ; pop r14 ; ret
0x0000000000096eea : pop r13 ; pop r14 ; ret
0x0000000000097924 : pop r13 ; pop r14 ; ret
0x00000000000acd09 : pop r13 ; pop r14 ; ret
0x00000000000acd1d : pop r13 ; pop r14 ; ret
0x00000000000ace02 : pop r13 ; pop r14 ; ret
0x00000000000aceff : pop r13 ; pop r14 ; ret
0x00000000000acf42 : pop r13 ; pop r14 ; ret
0x00000000000ae700 : pop r13 ; pop r14 ; ret
0x00000000000ae74f : pop r13 ; pop r14 ; ret
0x00000000000ae784 : pop r13 ; pop r14 ; ret
0x00000000000ae824 : pop r13 ; pop r14 ; ret
0x00000000000b10bd : pop r13 ; pop r14 ; ret
0x00000000000b37ed : pop r13 ; pop r14 ; ret
0x00000000000b383c : pop r13 ; pop r14 ; ret
0x00000000000b3874 : pop r13 ; pop r14 ; ret
0x00000000000b3914 : pop r13 ; pop r14 ; ret
0x00000000000b9f58 : pop r13 ; pop r14 ; ret
0x00000000000bc91a : pop r13 ; pop r14 ; ret
0x00000000000bc9e0 : pop r13 ; pop r14 ; ret
0x00000000000bcc28 : pop r13 ; pop r14 ; ret
0x00000000000bcc6e : pop r13 ; pop r14 ; ret
0x00000000000bddf4 : pop r13 ; pop r14 ; ret
0x00000000000bdf32 : pop r13 ; pop r14 ; ret
0x00000000000c7638 : pop r13 ; pop r14 ; ret
0x00000000000c7a3a : pop r13 ; pop r14 ; ret
0x00000000000c7ad1 : pop r13 ; pop r14 ; ret
0x00000000000c7b11 : pop r13 ; pop r14 ; ret
0x00000000000c8d5d : pop r13 ; pop r14 ; ret
0x00000000000c9561 : pop r13 ; pop r14 ; ret
0x00000000000c9be4 : pop r13 ; pop r14 ; ret
0x00000000000c9c31 : pop r13 ; pop r14 ; ret
0x00000000000c9cc0 : pop r13 ; pop r14 ; ret
0x00000000000d7fd6 : pop r13 ; pop r14 ; ret
0x00000000000d983a : pop r13 ; pop r14 ; ret
0x00000000000d98b9 : pop r13 ; pop r14 ; ret
0x00000000000da3be : pop r13 ; pop r14 ; ret
0x00000000000da3f1 : pop r13 ; pop r14 ; ret
0x00000000000de37b : pop r13 ; pop r14 ; ret
0x00000000000de407 : pop r13 ; pop r14 ; ret
0x00000000000de45a : pop r13 ; pop r14 ; ret
0x00000000000e829a : pop r13 ; pop r14 ; ret
0x00000000000e82d8 : pop r13 ; pop r14 ; ret
0x00000000000f8c3d : pop r13 ; pop r14 ; ret
0x00000000000f8c9d : pop r13 ; pop r14 ; ret
0x00000000000f8cff : pop r13 ; pop r14 ; ret
0x00000000000fd4a5 : pop r13 ; pop r14 ; ret
0x00000000000fd661 : pop r13 ; pop r14 ; ret
0x00000000000fd6cb : pop r13 ; pop r14 ; ret
0x00000000000fe795 : pop r13 ; pop r14 ; ret
0x00000000000fe7e5 : pop r13 ; pop r14 ; ret
0x00000000000fe9bc : pop r13 ; pop r14 ; ret
0x0000000000100302 : pop r13 ; pop r14 ; ret
0x000000000010562b : pop r13 ; pop r14 ; ret
0x0000000000105f5d : pop r13 ; pop r14 ; ret
0x0000000000105f73 : pop r13 ; pop r14 ; ret
0x0000000000105f99 : pop r13 ; pop r14 ; ret
0x00000000001082e0 : pop r13 ; pop r14 ; ret
0x0000000000108460 : pop r13 ; pop r14 ; ret
0x0000000000108996 : pop r13 ; pop r14 ; ret
0x000000000010c87a : pop r13 ; pop r14 ; ret
0x000000000010c8ee : pop r13 ; pop r14 ; ret
0x000000000010d355 : pop r13 ; pop r14 ; ret
0x000000000010e0ab : pop r13 ; pop r14 ; ret
0x000000000010e0e4 : pop r13 ; pop r14 ; ret
0x000000000010e100 : pop r13 ; pop r14 ; ret
0x000000000010e3cd : pop r13 ; pop r14 ; ret
0x0000000000110a64 : pop r13 ; pop r14 ; ret
0x0000000000110d00 : pop r13 ; pop r14 ; ret
0x00000000001110cc : pop r13 ; pop r14 ; ret
0x0000000000118bb4 : pop r13 ; pop r14 ; ret
0x000000000011b11e : pop r13 ; pop r14 ; ret
0x000000000011c331 : pop r13 ; pop r14 ; ret
0x000000000011c760 : pop r13 ; pop r14 ; ret
0x000000000011e983 : pop r13 ; pop r14 ; ret
0x000000000011ea43 : pop r13 ; pop r14 ; ret
0x000000000012316a : pop r13 ; pop r14 ; ret
0x0000000000123209 : pop r13 ; pop r14 ; ret
0x0000000000124ed8 : pop r13 ; pop r14 ; ret
0x0000000000124f1e : pop r13 ; pop r14 ; ret
0x0000000000124f6e : pop r13 ; pop r14 ; ret
0x0000000000125005 : pop r13 ; pop r14 ; ret
0x0000000000127730 : pop r13 ; pop r14 ; ret
0x00000000001277dc : pop r13 ; pop r14 ; ret
0x0000000000129578 : pop r13 ; pop r14 ; ret
0x0000000000129630 : pop r13 ; pop r14 ; ret
0x000000000012c9f8 : pop r13 ; pop r14 ; ret
0x000000000012ca1e : pop r13 ; pop r14 ; ret
0x000000000012cb07 : pop r13 ; pop r14 ; ret
0x000000000012cdc5 : pop r13 ; pop r14 ; ret
0x000000000012de53 : pop r13 ; pop r14 ; ret
0x000000000012e420 : pop r13 ; pop r14 ; ret
0x000000000012ed42 : pop r13 ; pop r14 ; ret
0x000000000012ed88 : pop r13 ; pop r14 ; ret
0x0000000000132a87 : pop r13 ; pop r14 ; ret
0x0000000000133358 : pop r13 ; pop r14 ; ret
0x0000000000133639 : pop r13 ; pop r14 ; ret
0x0000000000133688 : pop r13 ; pop r14 ; ret
0x0000000000135541 : pop r13 ; pop r14 ; ret
0x0000000000137868 : pop r13 ; pop r14 ; ret
0x000000000013787d : pop r13 ; pop r14 ; ret
0x0000000000139318 : pop r13 ; pop r14 ; ret
0x00000000001393e1 : pop r13 ; pop r14 ; ret
0x0000000000139490 : pop r13 ; pop r14 ; ret
0x00000000001395f9 : pop r13 ; pop r14 ; ret
0x0000000000139648 : pop r13 ; pop r14 ; ret
0x000000000013a08b : pop r13 ; pop r14 ; ret
0x000000000013a0c9 : pop r13 ; pop r14 ; ret
0x000000000013a4ca : pop r13 ; pop r14 ; ret
0x000000000013a4e2 : pop r13 ; pop r14 ; ret
0x000000000013a692 : pop r13 ; pop r14 ; ret
0x000000000013a6b2 : pop r13 ; pop r14 ; ret
0x000000000013b1e3 : pop r13 ; pop r14 ; ret
0x000000000013b701 : pop r13 ; pop r14 ; ret
0x000000000013b7ac : pop r13 ; pop r14 ; ret
0x000000000013c09f : pop r13 ; pop r14 ; ret
0x000000000013cc14 : pop r13 ; pop r14 ; ret
0x000000000013cc8c : pop r13 ; pop r14 ; ret
0x000000000013d342 : pop r13 ; pop r14 ; ret
0x000000000013d3ac : pop r13 ; pop r14 ; ret
0x00000000001408af : pop r13 ; pop r14 ; ret
0x000000000014227e : pop r13 ; pop r14 ; ret
0x0000000000073632 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d127 : pop r13 ; pop rbp ; ret
0x000000000006d149 : pop r13 ; pop rbp ; ret
0x00000000000cd40c : pop r13 ; pop rbp ; ret
0x00000000000cd41c : pop r13 ; pop rbp ; ret
0x00000000000ffd6a : pop r13 ; pop rbp ; ret
0x0000000000115a46 : pop r13 ; pop rbp ; ret
0x0000000000115a62 : pop r13 ; pop rbp ; ret
0x00000000000206c4 : pop r13 ; ret
0x000000000002268c : pop r13 ; ret
0x0000000000022705 : pop r13 ; ret
0x0000000000022b55 : pop r13 ; ret
0x0000000000029db0 : pop r13 ; ret
0x0000000000029dd4 : pop r13 ; ret
0x0000000000029e18 : pop r13 ; ret
0x0000000000029e9f : pop r13 ; ret
0x000000000002a83c : pop r13 ; ret
0x000000000002a862 : pop r13 ; ret
0x000000000002a8e4 : pop r13 ; ret
0x0000000000032dc8 : pop r13 ; ret
0x0000000000033b92 : pop r13 ; ret
0x0000000000036bf7 : pop r13 ; ret
0x0000000000036c1c : pop r13 ; ret
0x0000000000039dfa : pop r13 ; ret
0x0000000000039e3b : pop r13 ; ret
0x000000000003a58a : pop r13 ; ret
0x000000000003ae4a : pop r13 ; ret
0x000000000003aed2 : pop r13 ; ret
0x000000000004a8de : pop r13 ; ret
0x000000000004fff8 : pop r13 ; ret
0x0000000000054b90 : pop r13 ; ret
0x0000000000054bb3 : pop r13 ; ret
0x0000000000054d8c : pop r13 ; ret
0x0000000000054da2 : pop r13 ; ret
0x0000000000055b37 : pop r13 ; ret
0x000000000005b77a : pop r13 ; ret
0x000000000005b861 : pop r13 ; ret
0x00000000000634b5 : pop r13 ; ret
0x000000000006bbd7 : pop r13 ; ret
0x000000000006dd67 : pop r13 ; ret
0x000000000006e295 : pop r13 ; ret
0x000000000006e2aa : pop r13 ; ret
0x000000000006e2bb : pop r13 ; ret
0x000000000006efd2 : pop r13 ; ret
0x000000000006effe : pop r13 ; ret
0x00000000000701e9 : pop r13 ; ret
0x0000000000070207 : pop r13 ; ret
0x0000000000070282 : pop r13 ; ret
0x0000000000070e32 : pop r13 ; ret
0x0000000000070e5e : pop r13 ; ret
0x00000000000717d1 : pop r13 ; ret
0x0000000000071917 : pop r13 ; ret
0x00000000000734ac : pop r13 ; ret
0x00000000000750f4 : pop r13 ; ret
0x000000000007510d : pop r13 ; ret
0x000000000007511e : pop r13 ; ret
0x0000000000075454 : pop r13 ; ret
0x00000000000757e2 : pop r13 ; ret
0x000000000007641e : pop r13 ; ret
0x0000000000076912 : pop r13 ; ret
0x00000000000769cb : pop r13 ; ret
0x0000000000077937 : pop r13 ; ret
0x0000000000077968 : pop r13 ; ret
0x0000000000078a67 : pop r13 ; ret
0x000000000007a459 : pop r13 ; ret
0x000000000007bbd3 : pop r13 ; ret
0x000000000007c443 : pop r13 ; ret
0x000000000007c724 : pop r13 ; ret
0x000000000007d035 : pop r13 ; ret
0x000000000007d57b : pop r13 ; ret
0x000000000007e225 : pop r13 ; ret
0x0000000000084544 : pop r13 ; ret
0x00000000000845d9 : pop r13 ; ret
0x00000000000845ef : pop r13 ; ret
0x0000000000084e50 : pop r13 ; ret
0x00000000000850ab : pop r13 ; ret
0x00000000000850c0 : pop r13 ; ret
0x00000000000850e7 : pop r13 ; ret
0x0000000000087797 : pop r13 ; ret
0x000000000008f0a2 : pop r13 ; ret
0x000000000008f137 : pop r13 ; ret
0x000000000009f2d9 : pop r13 ; ret
0x000000000009f308 : pop r13 ; ret
0x000000000009f3d0 : pop r13 ; ret
0x000000000009f452 : pop r13 ; ret
0x000000000009f46b : pop r13 ; ret
0x000000000009f4b5 : pop r13 ; ret
0x000000000009f51b : pop r13 ; ret
0x00000000000aa881 : pop r13 ; ret
0x00000000000aa9a0 : pop r13 ; ret
0x00000000000aa9d0 : pop r13 ; ret
0x00000000000b9e86 : pop r13 ; ret
0x00000000000b9ef6 : pop r13 ; ret
0x00000000000ba3ba : pop r13 ; ret
0x00000000000ba43a : pop r13 ; ret
0x00000000000ba454 : pop r13 ; ret
0x00000000000baedc : pop r13 ; ret
0x00000000000c7c33 : pop r13 ; ret
0x00000000000c7c68 : pop r13 ; ret
0x00000000000c7c9f : pop r13 ; ret
0x00000000000c8509 : pop r13 ; ret
0x00000000000c989d : pop r13 ; ret
0x00000000000c9a0e : pop r13 ; ret
0x00000000000cb06e : pop r13 ; ret
0x00000000000cb1ed : pop r13 ; ret
0x00000000000cba86 : pop r13 ; ret
0x00000000000cbae4 : pop r13 ; ret
0x00000000000cc1e0 : pop r13 ; ret
0x00000000000d714a : pop r13 ; ret
0x00000000000e8351 : pop r13 ; ret
0x00000000000e8376 : pop r13 ; ret
0x00000000000e8a78 : pop r13 ; ret
0x00000000000efb19 : pop r13 ; ret
0x00000000000efde7 : pop r13 ; ret
0x00000000000efe02 : pop r13 ; ret
0x00000000000f036d : pop r13 ; ret
0x00000000000f037d : pop r13 ; ret
0x00000000000f040c : pop r13 ; ret
0x00000000000f0453 : pop r13 ; ret
0x00000000000f74a5 : pop r13 ; ret
0x00000000000f85ad : pop r13 ; ret
0x00000000000f9b69 : pop r13 ; ret
0x00000000000f9bc1 : pop r13 ; ret
0x00000000000fb676 : pop r13 ; ret
0x00000000000fb68a : pop r13 ; ret
0x00000000000fb6fd : pop r13 ; ret
0x00000000000fc2ef : pop r13 ; ret
0x00000000000fc4e2 : pop r13 ; ret
0x00000000000fc59e : pop r13 ; ret
0x00000000000fc5d2 : pop r13 ; ret
0x00000000000fd0c2 : pop r13 ; ret
0x00000000000fd172 : pop r13 ; ret
0x00000000000fef99 : pop r13 ; ret
0x00000000000fefaa : pop r13 ; ret
0x00000000000ff8dc : pop r13 ; ret
0x00000000000ffa1c : pop r13 ; ret
0x00000000000ffe92 : pop r13 ; ret
0x00000000000ffec6 : pop r13 ; ret
0x0000000000101272 : pop r13 ; ret
0x0000000000104e35 : pop r13 ; ret
0x0000000000104e9d : pop r13 ; ret
0x0000000000105cd3 : pop r13 ; ret
0x00000000001088e8 : pop r13 ; ret
0x0000000000108a3e : pop r13 ; ret
0x0000000000109506 : pop r13 ; ret
0x00000000001098ab : pop r13 ; ret
0x00000000001098fc : pop r13 ; ret
0x000000000010ad50 : pop r13 ; ret
0x000000000010ad62 : pop r13 ; ret
0x000000000010b5b0 : pop r13 ; ret
0x000000000010b5c2 : pop r13 ; ret
0x000000000010b80e : pop r13 ; ret
0x000000000010b998 : pop r13 ; ret
0x000000000010bdfc : pop r13 ; ret
0x000000000010c0cb : pop r13 ; ret
0x000000000010ce87 : pop r13 ; ret
0x000000000010cea2 : pop r13 ; ret
0x000000000010d1be : pop r13 ; ret
0x000000000010eb5c : pop r13 ; ret
0x000000000010eb72 : pop r13 ; ret
0x00000000001163fd : pop r13 ; ret
0x000000000011706d : pop r13 ; ret
0x00000000001170c2 : pop r13 ; ret
0x0000000000117404 : pop r13 ; ret
0x0000000000117487 : pop r13 ; ret
0x0000000000117554 : pop r13 ; ret
0x0000000000117825 : pop r13 ; ret
0x000000000011783a : pop r13 ; ret
0x000000000011784b : pop r13 ; ret
0x0000000000118524 : pop r13 ; ret
0x00000000001185aa : pop r13 ; ret
0x0000000000118674 : pop r13 ; ret
0x000000000011a00d : pop r13 ; ret
0x000000000011b8ad : pop r13 ; ret
0x000000000011bf7e : pop r13 ; ret
0x000000000011d0de : pop r13 ; ret
0x000000000011d129 : pop r13 ; ret
0x0000000000120bde : pop r13 ; ret
0x000000000012336c : pop r13 ; ret
0x000000000012b0e3 : pop r13 ; ret
0x000000000012b171 : pop r13 ; ret
0x000000000012b1f1 : pop r13 ; ret
0x000000000012b276 : pop r13 ; ret
0x000000000012b2f6 : pop r13 ; ret
0x000000000012b376 : pop r13 ; ret
0x000000000012b3f6 : pop r13 ; ret
0x000000000012b471 : pop r13 ; ret
0x000000000012b4fb : pop r13 ; ret
0x000000000012b571 : pop r13 ; ret
0x000000000012b5f1 : pop r13 ; ret
0x000000000012b67b : pop r13 ; ret
0x000000000012b6f6 : pop r13 ; ret
0x000000000012b771 : pop r13 ; ret
0x000000000012c25f : pop r13 ; ret
0x000000000012f70e : pop r13 ; ret
0x00000000001307a3 : pop r13 ; ret
0x00000000001307e0 : pop r13 ; ret
0x000000000013197e : pop r13 ; ret
0x0000000000131afd : pop r13 ; ret
0x0000000000132905 : pop r13 ; ret
0x000000000013291b : pop r13 ; ret
0x000000000013430c : pop r13 ; ret
0x0000000000134ac2 : pop r13 ; ret
0x0000000000134ecf : pop r13 ; ret
0x000000000013549f : pop r13 ; ret
0x00000000001354b3 : pop r13 ; ret
0x000000000013798f : pop r13 ; ret
0x0000000000137acf : pop r13 ; ret
0x0000000000138458 : pop r13 ; ret
0x00000000001384ab : pop r13 ; ret
0x0000000000138518 : pop r13 ; ret
0x0000000000139286 : pop r13 ; ret
0x000000000013929b : pop r13 ; ret
0x000000000013a1dd : pop r13 ; ret
0x000000000013a24a : pop r13 ; ret
0x000000000013b49e : pop r13 ; ret
0x000000000013b4c6 : pop r13 ; ret
0x000000000013b4e7 : pop r13 ; ret
0x00000000001426bc : pop r13 ; ret
0x000000000014296f : pop r13 ; ret
0x000000000017400f : pop r13 ; ret
0x0000000000174773 : pop r13 ; ret
0x00000000000423d0 : pop r14 ; fmul st(0) ; ret
0x0000000000042468 : pop r14 ; fmul st(0) ; ret
0x00000000000b10f0 : pop r14 ; fmul st(0) ; ret
0x00000000000b1188 : pop r14 ; fmul st(0) ; ret
0x000000000004234e : pop r14 ; fmulp st(1) ; ret
0x00000000000b106e : pop r14 ; fmulp st(1) ; ret
0x000000000010404f : pop r14 ; pop r15 ; jmp rax
0x0000000000020253 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e66 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e9d : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000213bd : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000223ff : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022ccd : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023049 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000236d5 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c6f : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c86 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b5d8 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b610 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c01e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c0f3 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c143 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c451 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c6cb : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c8c0 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002cc75 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d052 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d15b : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002efbf : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002f264 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002ff9d : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000030a8c : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032297 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032444 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000395ea : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000003964b : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039abf : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000045617 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000457fc : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000045850 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000048cdc : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004a9a1 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004aa76 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ac9e : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004b6fd : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d285 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d336 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000503ae : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050cd1 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e07 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e59 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050fbc : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055bfa : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e18 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e59 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000056ae5 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058ae1 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058b07 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058bec : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000005bbab : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000637b0 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000752ab : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000776e5 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000088842 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000989f4 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000b7393 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba04e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba0ac : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf7f3 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf85e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c52ab : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cc51f : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ccdbb : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cdf42 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ceadb : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cece3 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf23e : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf324 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf870 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d1aec : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d2291 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d38c9 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d55b7 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5648 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5666 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8921 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8c4f : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8cc8 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dcdc6 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dd00b : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e94cf : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e9570 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e95a0 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e98b5 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaab4 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaade : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eadf2 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef2c2 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef6d7 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1511 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f156b : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1631 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f172c : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f603c : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f9915 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fd955 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fda20 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febdf : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febf6 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000103221 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010340d : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000104b19 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001052d6 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105377 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105a77 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105ba0 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010920b : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a08f : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a208 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a2e0 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000110053 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001102d7 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000111828 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000113e5f : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000115e64 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011db23 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011f592 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000120fc8 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000121246 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001213ad : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220a8 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220cc : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012239f : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123669 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001236c7 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001237e3 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012387b : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001239f8 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123b7c : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124357 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124391 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124635 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124ab2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124d33 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128eef : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128fd8 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129719 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012998e : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129aa5 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129abe : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129ca5 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129dae : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129de6 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012a0f8 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c3e9 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c676 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c6c9 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013287f : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000132896 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013468f : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001346db : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001347af : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013484f : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013d516 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013e832 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f442 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f719 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013fa70 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013ff2b : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140bae : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140c48 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142aa3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b2d : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000143909 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144736 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000014476b : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144783 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210ff : pop r14 ; pop r15 ; ret
0x0000000000021117 : pop r14 ; pop r15 ; ret
0x000000000002113f : pop r14 ; pop r15 ; ret
0x0000000000021167 : pop r14 ; pop r15 ; ret
0x000000000002118f : pop r14 ; pop r15 ; ret
0x0000000000021898 : pop r14 ; pop r15 ; ret
0x0000000000022845 : pop r14 ; pop r15 ; ret
0x0000000000022993 : pop r14 ; pop r15 ; ret
0x0000000000023c1c : pop r14 ; pop r15 ; ret
0x0000000000023e0c : pop r14 ; pop r15 ; ret
0x0000000000023eaf : pop r14 ; pop r15 ; ret
0x0000000000023f09 : pop r14 ; pop r15 ; ret
0x0000000000023f22 : pop r14 ; pop r15 ; ret
0x0000000000024046 : pop r14 ; pop r15 ; ret
0x0000000000024086 : pop r14 ; pop r15 ; ret
0x00000000000245d1 : pop r14 ; pop r15 ; ret
0x00000000000247ca : pop r14 ; pop r15 ; ret
0x0000000000024867 : pop r14 ; pop r15 ; ret
0x00000000000248cd : pop r14 ; pop r15 ; ret
0x00000000000248ec : pop r14 ; pop r15 ; ret
0x0000000000024a16 : pop r14 ; pop r15 ; ret
0x0000000000024a56 : pop r14 ; pop r15 ; ret
0x0000000000024f7c : pop r14 ; pop r15 ; ret
0x0000000000025320 : pop r14 ; pop r15 ; ret
0x0000000000025b21 : pop r14 ; pop r15 ; ret
0x0000000000026832 : pop r14 ; pop r15 ; ret
0x000000000002687c : pop r14 ; pop r15 ; ret
0x0000000000027999 : pop r14 ; pop r15 ; ret
0x00000000000279d8 : pop r14 ; pop r15 ; ret
0x0000000000028018 : pop r14 ; pop r15 ; ret
0x0000000000028859 : pop r14 ; pop r15 ; ret
0x0000000000028899 : pop r14 ; pop r15 ; ret
0x0000000000028ee8 : pop r14 ; pop r15 ; ret
0x00000000000298d1 : pop r14 ; pop r15 ; ret
0x0000000000029fa1 : pop r14 ; pop r15 ; ret
0x000000000002a06a : pop r14 ; pop r15 ; ret
0x000000000002a17e : pop r14 ; pop r15 ; ret
0x000000000002aa1f : pop r14 ; pop r15 ; ret
0x000000000002ac89 : pop r14 ; pop r15 ; ret
0x000000000002bec2 : pop r14 ; pop r15 ; ret
0x000000000002d77d : pop r14 ; pop r15 ; ret
0x000000000002e1c8 : pop r14 ; pop r15 ; ret
0x000000000002e428 : pop r14 ; pop r15 ; ret
0x000000000002e7cf : pop r14 ; pop r15 ; ret
0x00000000000306f4 : pop r14 ; pop r15 ; ret
0x00000000000307a5 : pop r14 ; pop r15 ; ret
0x00000000000325ca : pop r14 ; pop r15 ; ret
0x0000000000032bec : pop r14 ; pop r15 ; ret
0x0000000000032c8e : pop r14 ; pop r15 ; ret
0x0000000000033333 : pop r14 ; pop r15 ; ret
0x00000000000340ad : pop r14 ; pop r15 ; ret
0x000000000003721f : pop r14 ; pop r15 ; ret
0x0000000000037235 : pop r14 ; pop r15 ; ret
0x000000000003785e : pop r14 ; pop r15 ; ret
0x00000000000397e3 : pop r14 ; pop r15 ; ret
0x000000000003a4a3 : pop r14 ; pop r15 ; ret
0x000000000003b52a : pop r14 ; pop r15 ; ret
0x000000000003b586 : pop r14 ; pop r15 ; ret
0x000000000003b9fa : pop r14 ; pop r15 ; ret
0x000000000003ba56 : pop r14 ; pop r15 ; ret
0x000000000003bb77 : pop r14 ; pop r15 ; ret
0x000000000003bf9a : pop r14 ; pop r15 ; ret
0x000000000003c6fc : pop r14 ; pop r15 ; ret
0x000000000003f25a : pop r14 ; pop r15 ; ret
0x000000000003f9dc : pop r14 ; pop r15 ; ret
0x00000000000421b2 : pop r14 ; pop r15 ; ret
0x0000000000042c0a : pop r14 ; pop r15 ; ret
0x00000000000460a0 : pop r14 ; pop r15 ; ret
0x0000000000046f85 : pop r14 ; pop r15 ; ret
0x0000000000046fec : pop r14 ; pop r15 ; ret
0x00000000000472cc : pop r14 ; pop r15 ; ret
0x000000000004777d : pop r14 ; pop r15 ; ret
0x00000000000486c7 : pop r14 ; pop r15 ; ret
0x00000000000486e0 : pop r14 ; pop r15 ; ret
0x00000000000487d0 : pop r14 ; pop r15 ; ret
0x00000000000488ab : pop r14 ; pop r15 ; ret
0x0000000000049162 : pop r14 ; pop r15 ; ret
0x00000000000492d6 : pop r14 ; pop r15 ; ret
0x00000000000499b5 : pop r14 ; pop r15 ; ret
0x000000000004a31c : pop r14 ; pop r15 ; ret
0x000000000004a346 : pop r14 ; pop r15 ; ret
0x0000000000052e08 : pop r14 ; pop r15 ; ret
0x0000000000053172 : pop r14 ; pop r15 ; ret
0x000000000005505d : pop r14 ; pop r15 ; ret
0x0000000000055272 : pop r14 ; pop r15 ; ret
0x0000000000055426 : pop r14 ; pop r15 ; ret
0x00000000000554ec : pop r14 ; pop r15 ; ret
0x0000000000055583 : pop r14 ; pop r15 ; ret
0x000000000006adfc : pop r14 ; pop r15 ; ret
0x000000000006b24d : pop r14 ; pop r15 ; ret
0x000000000006d503 : pop r14 ; pop r15 ; ret
0x000000000006e9b9 : pop r14 ; pop r15 ; ret
0x000000000006eca2 : pop r14 ; pop r15 ; ret
0x000000000006ecfb : pop r14 ; pop r15 ; ret
0x000000000006f2f7 : pop r14 ; pop r15 ; ret
0x0000000000070c96 : pop r14 ; pop r15 ; ret
0x0000000000070d03 : pop r14 ; pop r15 ; ret
0x0000000000071a67 : pop r14 ; pop r15 ; ret
0x0000000000071d81 : pop r14 ; pop r15 ; ret
0x0000000000071e28 : pop r14 ; pop r15 ; ret
0x0000000000072602 : pop r14 ; pop r15 ; ret
0x0000000000072772 : pop r14 ; pop r15 ; ret
0x00000000000730dd : pop r14 ; pop r15 ; ret
0x00000000000731f0 : pop r14 ; pop r15 ; ret
0x00000000000733d6 : pop r14 ; pop r15 ; ret
0x0000000000073a90 : pop r14 ; pop r15 ; ret
0x0000000000073ba1 : pop r14 ; pop r15 ; ret
0x0000000000073c87 : pop r14 ; pop r15 ; ret
0x0000000000073e57 : pop r14 ; pop r15 ; ret
0x0000000000074822 : pop r14 ; pop r15 ; ret
0x0000000000074867 : pop r14 ; pop r15 ; ret
0x0000000000074e4f : pop r14 ; pop r15 ; ret
0x0000000000076cc8 : pop r14 ; pop r15 ; ret
0x0000000000078de9 : pop r14 ; pop r15 ; ret
0x000000000007926b : pop r14 ; pop r15 ; ret
0x0000000000079b75 : pop r14 ; pop r15 ; ret
0x0000000000079ba4 : pop r14 ; pop r15 ; ret
0x0000000000079fc2 : pop r14 ; pop r15 ; ret
0x000000000007a16d : pop r14 ; pop r15 ; ret
0x000000000007afd7 : pop r14 ; pop r15 ; ret
0x000000000007c25b : pop r14 ; pop r15 ; ret
0x000000000007c9c3 : pop r14 ; pop r15 ; ret
0x000000000007cdbb : pop r14 ; pop r15 ; ret
0x000000000007ce2e : pop r14 ; pop r15 ; ret
0x000000000007d894 : pop r14 ; pop r15 ; ret
0x000000000007e524 : pop r14 ; pop r15 ; ret
0x000000000007f358 : pop r14 ; pop r15 ; ret
0x000000000007fead : pop r14 ; pop r15 ; ret
0x0000000000080384 : pop r14 ; pop r15 ; ret
0x00000000000813e3 : pop r14 ; pop r15 ; ret
0x0000000000081ec2 : pop r14 ; pop r15 ; ret
0x00000000000831ed : pop r14 ; pop r15 ; ret
0x000000000008335d : pop r14 ; pop r15 ; ret
0x00000000000833b7 : pop r14 ; pop r15 ; ret
0x0000000000083c1a : pop r14 ; pop r15 ; ret
0x0000000000083d6a : pop r14 ; pop r15 ; ret
0x000000000008478b : pop r14 ; pop r15 ; ret
0x0000000000085af2 : pop r14 ; pop r15 ; ret
0x0000000000086c74 : pop r14 ; pop r15 ; ret
0x0000000000087158 : pop r14 ; pop r15 ; ret
0x000000000008755f : pop r14 ; pop r15 ; ret
0x0000000000087c8f : pop r14 ; pop r15 ; ret
0x00000000000881c1 : pop r14 ; pop r15 ; ret
0x0000000000088a0e : pop r14 ; pop r15 ; ret
0x0000000000088ee0 : pop r14 ; pop r15 ; ret
0x00000000000893d5 : pop r14 ; pop r15 ; ret
0x000000000008b5f6 : pop r14 ; pop r15 ; ret
0x000000000008b68d : pop r14 ; pop r15 ; ret
0x000000000008dff3 : pop r14 ; pop r15 ; ret
0x000000000008e134 : pop r14 ; pop r15 ; ret
0x000000000008e14d : pop r14 ; pop r15 ; ret
0x0000000000095438 : pop r14 ; pop r15 ; ret
0x0000000000095524 : pop r14 ; pop r15 ; ret
0x0000000000095704 : pop r14 ; pop r15 ; ret
0x0000000000095fa7 : pop r14 ; pop r15 ; ret
0x0000000000096389 : pop r14 ; pop r15 ; ret
0x00000000000964e1 : pop r14 ; pop r15 ; ret
0x00000000000969cc : pop r14 ; pop r15 ; ret
0x0000000000096ac5 : pop r14 ; pop r15 ; ret
0x0000000000096d24 : pop r14 ; pop r15 ; ret
0x0000000000096ff0 : pop r14 ; pop r15 ; ret
0x00000000000976d8 : pop r14 ; pop r15 ; ret
0x000000000009785d : pop r14 ; pop r15 ; ret
0x0000000000098081 : pop r14 ; pop r15 ; ret
0x00000000000aab53 : pop r14 ; pop r15 ; ret
0x00000000000aab74 : pop r14 ; pop r15 ; ret
0x00000000000ad2f6 : pop r14 ; pop r15 ; ret
0x00000000000ad5e8 : pop r14 ; pop r15 ; ret
0x00000000000ad895 : pop r14 ; pop r15 ; ret
0x00000000000addba : pop r14 ; pop r15 ; ret
0x00000000000ade0b : pop r14 ; pop r15 ; ret
0x00000000000ae21a : pop r14 ; pop r15 ; ret
0x00000000000ae26b : pop r14 ; pop r15 ; ret
0x00000000000ae30e : pop r14 ; pop r15 ; ret
0x00000000000ae576 : pop r14 ; pop r15 ; ret
0x00000000000aef2d : pop r14 ; pop r15 ; ret
0x00000000000b0ede : pop r14 ; pop r15 ; ret
0x00000000000b1b94 : pop r14 ; pop r15 ; ret
0x00000000000b3666 : pop r14 ; pop r15 ; ret
0x00000000000b400d : pop r14 ; pop r15 ; ret
0x00000000000b6a9a : pop r14 ; pop r15 ; ret
0x00000000000ba629 : pop r14 ; pop r15 ; ret
0x00000000000baf43 : pop r14 ; pop r15 ; ret
0x00000000000baf75 : pop r14 ; pop r15 ; ret
0x00000000000bc079 : pop r14 ; pop r15 ; ret
0x00000000000bc726 : pop r14 ; pop r15 ; ret
0x00000000000bc82d : pop r14 ; pop r15 ; ret
0x00000000000bce67 : pop r14 ; pop r15 ; ret
0x00000000000bd7cb : pop r14 ; pop r15 ; ret
0x00000000000be00e : pop r14 ; pop r15 ; ret
0x00000000000bef12 : pop r14 ; pop r15 ; ret
0x00000000000bef2b : pop r14 ; pop r15 ; ret
0x00000000000bf1b9 : pop r14 ; pop r15 ; ret
0x00000000000c0015 : pop r14 ; pop r15 ; ret
0x00000000000c322f : pop r14 ; pop r15 ; ret
0x00000000000c7e0d : pop r14 ; pop r15 ; ret
0x00000000000c869b : pop r14 ; pop r15 ; ret
0x00000000000c893f : pop r14 ; pop r15 ; ret
0x00000000000c8bd3 : pop r14 ; pop r15 ; ret
0x00000000000c8cfc : pop r14 ; pop r15 ; ret
0x00000000000c8ef8 : pop r14 ; pop r15 ; ret
0x00000000000c8f1e : pop r14 ; pop r15 ; ret
0x00000000000c8fcf : pop r14 ; pop r15 ; ret
0x00000000000c9351 : pop r14 ; pop r15 ; ret
0x00000000000ca0dd : pop r14 ; pop r15 ; ret
0x00000000000ca13e : pop r14 ; pop r15 ; ret
0x00000000000ca1d7 : pop r14 ; pop r15 ; ret
0x00000000000ca37e : pop r14 ; pop r15 ; ret
0x00000000000ca3de : pop r14 ; pop r15 ; ret
0x00000000000ca477 : pop r14 ; pop r15 ; ret
0x00000000000ca5a8 : pop r14 ; pop r15 ; ret
0x00000000000ca6ad : pop r14 ; pop r15 ; ret
0x00000000000ca7af : pop r14 ; pop r15 ; ret
0x00000000000ca9e7 : pop r14 ; pop r15 ; ret
0x00000000000cabf8 : pop r14 ; pop r15 ; ret
0x00000000000cac1e : pop r14 ; pop r15 ; ret
0x00000000000cb5ee : pop r14 ; pop r15 ; ret
0x00000000000cb64e : pop r14 ; pop r15 ; ret
0x00000000000cb6e7 : pop r14 ; pop r15 ; ret
0x00000000000cb88d : pop r14 ; pop r15 ; ret
0x00000000000cb8ee : pop r14 ; pop r15 ; ret
0x00000000000cb987 : pop r14 ; pop r15 ; ret
0x00000000000cbebf : pop r14 ; pop r15 ; ret
0x00000000000cc9c8 : pop r14 ; pop r15 ; ret
0x00000000000ccb68 : pop r14 ; pop r15 ; ret
0x00000000000ccd0e : pop r14 ; pop r15 ; ret
0x00000000000ce9d1 : pop r14 ; pop r15 ; ret
0x00000000000ce9ec : pop r14 ; pop r15 ; ret
0x00000000000d41d9 : pop r14 ; pop r15 ; ret
0x00000000000d5b86 : pop r14 ; pop r15 ; ret
0x00000000000d5df8 : pop r14 ; pop r15 ; ret
0x00000000000d5e2d : pop r14 ; pop r15 ; ret
0x00000000000d5f9c : pop r14 ; pop r15 ; ret
0x00000000000d65b4 : pop r14 ; pop r15 ; ret
0x00000000000d6dec : pop r14 ; pop r15 ; ret
0x00000000000d743f : pop r14 ; pop r15 ; ret
0x00000000000d745b : pop r14 ; pop r15 ; ret
0x00000000000d8ded : pop r14 ; pop r15 ; ret
0x00000000000d9c3b : pop r14 ; pop r15 ; ret
0x00000000000da5bf : pop r14 ; pop r15 ; ret
0x00000000000da87e : pop r14 ; pop r15 ; ret
0x00000000000daa20 : pop r14 ; pop r15 ; ret
0x00000000000daae5 : pop r14 ; pop r15 ; ret
0x00000000000daea9 : pop r14 ; pop r15 ; ret
0x00000000000daeeb : pop r14 ; pop r15 ; ret
0x00000000000daf38 : pop r14 ; pop r15 ; ret
0x00000000000db0f8 : pop r14 ; pop r15 ; ret
0x00000000000dbbb7 : pop r14 ; pop r15 ; ret
0x00000000000dbf66 : pop r14 ; pop r15 ; ret
0x00000000000dc0c8 : pop r14 ; pop r15 ; ret
0x00000000000dc46b : pop r14 ; pop r15 ; ret
0x00000000000dc691 : pop r14 ; pop r15 ; ret
0x00000000000dc78f : pop r14 ; pop r15 ; ret
0x00000000000dc8fd : pop r14 ; pop r15 ; ret
0x00000000000ddac9 : pop r14 ; pop r15 ; ret
0x00000000000ddc5a : pop r14 ; pop r15 ; ret
0x00000000000ddcec : pop r14 ; pop r15 ; ret
0x00000000000ddd69 : pop r14 ; pop r15 ; ret
0x00000000000ddec3 : pop r14 ; pop r15 ; ret
0x00000000000de674 : pop r14 ; pop r15 ; ret
0x00000000000df3dd : pop r14 ; pop r15 ; ret
0x00000000000df42f : pop r14 ; pop r15 ; ret
0x00000000000df68d : pop r14 ; pop r15 ; ret
0x00000000000df6ac : pop r14 ; pop r15 ; ret
0x00000000000dfa08 : pop r14 ; pop r15 ; ret
0x00000000000dfa82 : pop r14 ; pop r15 ; ret
0x00000000000dfae3 : pop r14 ; pop r15 ; ret
0x00000000000e0257 : pop r14 ; pop r15 ; ret
0x00000000000e05df : pop r14 ; pop r15 ; ret
0x00000000000e1d6a : pop r14 ; pop r15 ; ret
0x00000000000e4130 : pop r14 ; pop r15 ; ret
0x00000000000e41fa : pop r14 ; pop r15 ; ret
0x00000000000e4219 : pop r14 ; pop r15 ; ret
0x00000000000e4825 : pop r14 ; pop r15 ; ret
0x00000000000e4ea3 : pop r14 ; pop r15 ; ret
0x00000000000e4f7c : pop r14 ; pop r15 ; ret
0x00000000000e57bc : pop r14 ; pop r15 ; ret
0x00000000000e5b2d : pop r14 ; pop r15 ; ret
0x00000000000e5f22 : pop r14 ; pop r15 ; ret
0x00000000000e7f57 : pop r14 ; pop r15 ; ret
0x00000000000e85f0 : pop r14 ; pop r15 ; ret
0x00000000000e872f : pop r14 ; pop r15 ; ret
0x00000000000e8835 : pop r14 ; pop r15 ; ret
0x00000000000e9192 : pop r14 ; pop r15 ; ret
0x00000000000eab59 : pop r14 ; pop r15 ; ret
0x00000000000eac23 : pop r14 ; pop r15 ; ret
0x00000000000ed4f4 : pop r14 ; pop r15 ; ret
0x00000000000edeff : pop r14 ; pop r15 ; ret
0x00000000000efe6e : pop r14 ; pop r15 ; ret
0x00000000000f06ce : pop r14 ; pop r15 ; ret
0x00000000000f07b3 : pop r14 ; pop r15 ; ret
0x00000000000f08ae : pop r14 ; pop r15 ; ret
0x00000000000f1acc : pop r14 ; pop r15 ; ret
0x00000000000f40aa : pop r14 ; pop r15 ; ret
0x00000000000f49a3 : pop r14 ; pop r15 ; ret
0x00000000000f5cc4 : pop r14 ; pop r15 ; ret
0x00000000000f7388 : pop r14 ; pop r15 ; ret
0x00000000000f7b57 : pop r14 ; pop r15 ; ret
0x00000000000f86c5 : pop r14 ; pop r15 ; ret
0x00000000000f91cc : pop r14 ; pop r15 ; ret
0x00000000000fa184 : pop r14 ; pop r15 ; ret
0x00000000000fab10 : pop r14 ; pop r15 ; ret
0x00000000000fb020 : pop r14 ; pop r15 ; ret
0x00000000000fb8ce : pop r14 ; pop r15 ; ret
0x00000000000fbe17 : pop r14 ; pop r15 ; ret
0x00000000000ffbe7 : pop r14 ; pop r15 ; ret
0x0000000000100886 : pop r14 ; pop r15 ; ret
0x0000000000100e9e : pop r14 ; pop r15 ; ret
0x00000000001016c8 : pop r14 ; pop r15 ; ret
0x0000000000101b8d : pop r14 ; pop r15 ; ret
0x0000000000101c14 : pop r14 ; pop r15 ; ret
0x000000000010210d : pop r14 ; pop r15 ; ret
0x0000000000102190 : pop r14 ; pop r15 ; ret
0x00000000001026ff : pop r14 ; pop r15 ; ret
0x0000000000102794 : pop r14 ; pop r15 ; ret
0x0000000000102fe9 : pop r14 ; pop r15 ; ret
0x0000000000103079 : pop r14 ; pop r15 ; ret
0x000000000010308d : pop r14 ; pop r15 ; ret
0x0000000000104062 : pop r14 ; pop r15 ; ret
0x00000000001049a8 : pop r14 ; pop r15 ; ret
0x0000000000104a3d : pop r14 ; pop r15 ; ret
0x0000000000104a54 : pop r14 ; pop r15 ; ret
0x0000000000105765 : pop r14 ; pop r15 ; ret
0x0000000000107648 : pop r14 ; pop r15 ; ret
0x0000000000108696 : pop r14 ; pop r15 ; ret
0x0000000000109ad3 : pop r14 ; pop r15 ; ret
0x0000000000109aec : pop r14 ; pop r15 ; ret
0x000000000010ac6e : pop r14 ; pop r15 ; ret
0x000000000010ac84 : pop r14 ; pop r15 ; ret
0x000000000010b4d6 : pop r14 ; pop r15 ; ret
0x000000000010b4ec : pop r14 ; pop r15 ; ret
0x000000000010bb88 : pop r14 ; pop r15 ; ret
0x000000000010bbae : pop r14 ; pop r15 ; ret
0x000000000010c466 : pop r14 ; pop r15 ; ret
0x000000000010c487 : pop r14 ; pop r15 ; ret
0x000000000010c4a6 : pop r14 ; pop r15 ; ret
0x000000000010cbbf : pop r14 ; pop r15 ; ret
0x000000000010d538 : pop r14 ; pop r15 ; ret
0x000000000010d55e : pop r14 ; pop r15 ; ret
0x000000000010d772 : pop r14 ; pop r15 ; ret
0x000000000010d805 : pop r14 ; pop r15 ; ret
0x000000000010dbe6 : pop r14 ; pop r15 ; ret
0x000000000010dc07 : pop r14 ; pop r15 ; ret
0x000000000010dc26 : pop r14 ; pop r15 ; ret
0x000000000010df89 : pop r14 ; pop r15 ; ret
0x000000000010dfbb : pop r14 ; pop r15 ; ret
0x000000000010e2ef : pop r14 ; pop r15 ; ret
0x000000000010e4fe : pop r14 ; pop r15 ; ret
0x000000000010eff5 : pop r14 ; pop r15 ; ret
0x000000000010f5f0 : pop r14 ; pop r15 ; ret
0x000000000010fd06 : pop r14 ; pop r15 ; ret
0x000000000010feeb : pop r14 ; pop r15 ; ret
0x000000000010ff93 : pop r14 ; pop r15 ; ret
0x000000000010ffd2 : pop r14 ; pop r15 ; ret
0x0000000000110796 : pop r14 ; pop r15 ; ret
0x00000000001132ea : pop r14 ; pop r15 ; ret
0x000000000011371c : pop r14 ; pop r15 ; ret
0x000000000011616d : pop r14 ; pop r15 ; ret
0x0000000000116769 : pop r14 ; pop r15 ; ret
0x00000000001168b9 : pop r14 ; pop r15 ; ret
0x00000000001172f6 : pop r14 ; pop r15 ; ret
0x0000000000117dbd : pop r14 ; pop r15 ; ret
0x0000000000118a09 : pop r14 ; pop r15 ; ret
0x0000000000118cde : pop r14 ; pop r15 ; ret
0x0000000000118eff : pop r14 ; pop r15 ; ret
0x0000000000119860 : pop r14 ; pop r15 ; ret
0x0000000000119adc : pop r14 ; pop r15 ; ret
0x0000000000119be9 : pop r14 ; pop r15 ; ret
0x000000000011a120 : pop r14 ; pop r15 ; ret
0x000000000011a264 : pop r14 ; pop r15 ; ret
0x000000000011a2ed : pop r14 ; pop r15 ; ret
0x000000000011a4ed : pop r14 ; pop r15 ; ret
0x000000000011a624 : pop r14 ; pop r15 ; ret
0x000000000011a6a5 : pop r14 ; pop r15 ; ret
0x000000000011ac96 : pop r14 ; pop r15 ; ret
0x000000000011ae55 : pop r14 ; pop r15 ; ret
0x000000000011ae99 : pop r14 ; pop r15 ; ret
0x000000000011af49 : pop r14 ; pop r15 ; ret
0x000000000011b615 : pop r14 ; pop r15 ; ret
0x000000000011b659 : pop r14 ; pop r15 ; ret
0x000000000011b709 : pop r14 ; pop r15 ; ret
0x000000000011ba15 : pop r14 ; pop r15 ; ret
0x000000000011ba37 : pop r14 ; pop r15 ; ret
0x000000000011ba56 : pop r14 ; pop r15 ; ret
0x000000000011c0f6 : pop r14 ; pop r15 ; ret
0x000000000011c117 : pop r14 ; pop r15 ; ret
0x000000000011c136 : pop r14 ; pop r15 ; ret
0x000000000011c4ea : pop r14 ; pop r15 ; ret
0x000000000011c546 : pop r14 ; pop r15 ; ret
0x000000000011c5d7 : pop r14 ; pop r15 ; ret
0x000000000011c909 : pop r14 ; pop r15 ; ret
0x000000000011c966 : pop r14 ; pop r15 ; ret
0x000000000011c9f7 : pop r14 ; pop r15 ; ret
0x000000000011cf30 : pop r14 ; pop r15 ; ret
0x000000000011d240 : pop r14 ; pop r15 ; ret
0x000000000011d6bb : pop r14 ; pop r15 ; ret
0x000000000011dc7e : pop r14 ; pop r15 ; ret
0x000000000011dca5 : pop r14 ; pop r15 ; ret
0x000000000011dcfe : pop r14 ; pop r15 ; ret
0x000000000011dd2c : pop r14 ; pop r15 ; ret
0x000000000011e057 : pop r14 ; pop r15 ; ret
0x000000000011e884 : pop r14 ; pop r15 ; ret
0x000000000011e8b6 : pop r14 ; pop r15 ; ret
0x000000000011e8de : pop r14 ; pop r15 ; ret
0x000000000011ed40 : pop r14 ; pop r15 ; ret
0x000000000011fa60 : pop r14 ; pop r15 ; ret
0x000000000011fb2d : pop r14 ; pop r15 ; ret
0x00000000001200db : pop r14 ; pop r15 ; ret
0x00000000001200ec : pop r14 ; pop r15 ; ret
0x000000000012046c : pop r14 ; pop r15 ; ret
0x0000000000120d56 : pop r14 ; pop r15 ; ret
0x0000000000120d77 : pop r14 ; pop r15 ; ret
0x0000000000120d96 : pop r14 ; pop r15 ; ret
0x000000000012150e : pop r14 ; pop r15 ; ret
0x0000000000121d12 : pop r14 ; pop r15 ; ret
0x0000000000121d93 : pop r14 ; pop r15 ; ret
0x0000000000125308 : pop r14 ; pop r15 ; ret
0x000000000012534a : pop r14 ; pop r15 ; ret
0x000000000012542c : pop r14 ; pop r15 ; ret
0x00000000001254e4 : pop r14 ; pop r15 ; ret
0x00000000001262ed : pop r14 ; pop r15 ; ret
0x0000000000126309 : pop r14 ; pop r15 ; ret
0x000000000012719d : pop r14 ; pop r15 ; ret
0x000000000012794b : pop r14 ; pop r15 ; ret
0x00000000001279b2 : pop r14 ; pop r15 ; ret
0x00000000001280aa : pop r14 ; pop r15 ; ret
0x0000000000128412 : pop r14 ; pop r15 ; ret
0x00000000001286ec : pop r14 ; pop r15 ; ret
0x000000000012871e : pop r14 ; pop r15 ; ret
0x0000000000128e07 : pop r14 ; pop r15 ; ret
0x00000000001291de : pop r14 ; pop r15 ; ret
0x00000000001292b3 : pop r14 ; pop r15 ; ret
0x000000000012a30b : pop r14 ; pop r15 ; ret
0x000000000012a35d : pop r14 ; pop r15 ; ret
0x000000000012a479 : pop r14 ; pop r15 ; ret
0x000000000012a4e4 : pop r14 ; pop r15 ; ret
0x000000000012a5eb : pop r14 ; pop r15 ; ret
0x000000000012a604 : pop r14 ; pop r15 ; ret
0x000000000012a7a2 : pop r14 ; pop r15 ; ret
0x000000000012a825 : pop r14 ; pop r15 ; ret
0x000000000012a9f1 : pop r14 ; pop r15 ; ret
0x000000000012aab3 : pop r14 ; pop r15 ; ret
0x000000000012aca7 : pop r14 ; pop r15 ; ret
0x000000000012ad65 : pop r14 ; pop r15 ; ret
0x000000000012bc64 : pop r14 ; pop r15 ; ret
0x000000000012bee8 : pop r14 ; pop r15 ; ret
0x000000000012c12c : pop r14 ; pop r15 ; ret
0x000000000012c829 : pop r14 ; pop r15 ; ret
0x000000000012cf95 : pop r14 ; pop r15 ; ret
0x000000000012d276 : pop r14 ; pop r15 ; ret
0x000000000012e56c : pop r14 ; pop r15 ; ret
0x000000000012e5c1 : pop r14 ; pop r15 ; ret
0x000000000012e610 : pop r14 ; pop r15 ; ret
0x000000000012eaf1 : pop r14 ; pop r15 ; ret
0x000000000012ef24 : pop r14 ; pop r15 ; ret
0x000000000012f114 : pop r14 ; pop r15 ; ret
0x000000000012f130 : pop r14 ; pop r15 ; ret
0x000000000012f2a4 : pop r14 ; pop r15 ; ret
0x000000000012f2f7 : pop r14 ; pop r15 ; ret
0x000000000012f443 : pop r14 ; pop r15 ; ret
0x000000000012f54f : pop r14 ; pop r15 ; ret
0x000000000012fed5 : pop r14 ; pop r15 ; ret
0x0000000000130837 : pop r14 ; pop r15 ; ret
0x0000000000130941 : pop r14 ; pop r15 ; ret
0x0000000000130c62 : pop r14 ; pop r15 ; ret
0x00000000001314b8 : pop r14 ; pop r15 ; ret
0x00000000001314cc : pop r14 ; pop r15 ; ret
0x0000000000131ed6 : pop r14 ; pop r15 ; ret
0x0000000000131ef7 : pop r14 ; pop r15 ; ret
0x0000000000131f16 : pop r14 ; pop r15 ; ret
0x0000000000132105 : pop r14 ; pop r15 ; ret
0x0000000000132127 : pop r14 ; pop r15 ; ret
0x0000000000132146 : pop r14 ; pop r15 ; ret
0x000000000013263d : pop r14 ; pop r15 ; ret
0x0000000000132c96 : pop r14 ; pop r15 ; ret
0x0000000000132cc4 : pop r14 ; pop r15 ; ret
0x0000000000132f89 : pop r14 ; pop r15 ; ret
0x00000000001331fd : pop r14 ; pop r15 ; ret
0x0000000000133226 : pop r14 ; pop r15 ; ret
0x0000000000133450 : pop r14 ; pop r15 ; ret
0x0000000000133c67 : pop r14 ; pop r15 ; ret
0x0000000000133e82 : pop r14 ; pop r15 ; ret
0x000000000013411b : pop r14 ; pop r15 ; ret
0x000000000013452f : pop r14 ; pop r15 ; ret
0x0000000000135306 : pop r14 ; pop r15 ; ret
0x0000000000135707 : pop r14 ; pop r15 ; ret
0x00000000001357bc : pop r14 ; pop r15 ; ret
0x0000000000135d2b : pop r14 ; pop r15 ; ret
0x0000000000136295 : pop r14 ; pop r15 ; ret
0x0000000000136555 : pop r14 ; pop r15 ; ret
0x00000000001367d7 : pop r14 ; pop r15 ; ret
0x0000000000137c2b : pop r14 ; pop r15 ; ret
0x0000000000137eb2 : pop r14 ; pop r15 ; ret
0x00000000001380f0 : pop r14 ; pop r15 ; ret
0x000000000013860a : pop r14 ; pop r15 ; ret
0x0000000000138b48 : pop r14 ; pop r15 ; ret
0x0000000000138cb1 : pop r14 ; pop r15 ; ret
0x0000000000138d7a : pop r14 ; pop r15 ; ret
0x0000000000138eac : pop r14 ; pop r15 ; ret
0x00000000001390ea : pop r14 ; pop r15 ; ret
0x000000000013999f : pop r14 ; pop r15 ; ret
0x00000000001399b4 : pop r14 ; pop r15 ; ret
0x00000000001399fe : pop r14 ; pop r15 ; ret
0x0000000000139a82 : pop r14 ; pop r15 ; ret
0x0000000000139e2b : pop r14 ; pop r15 ; ret
0x000000000013a70b : pop r14 ; pop r15 ; ret
0x000000000013a881 : pop r14 ; pop r15 ; ret
0x000000000013a89f : pop r14 ; pop r15 ; ret
0x000000000013b5c1 : pop r14 ; pop r15 ; ret
0x000000000013b60c : pop r14 ; pop r15 ; ret
0x000000000013c94d : pop r14 ; pop r15 ; ret
0x000000000013ce7d : pop r14 ; pop r15 ; ret
0x000000000013dcae : pop r14 ; pop r15 ; ret
0x000000000013dd14 : pop r14 ; pop r15 ; ret
0x000000000013df21 : pop r14 ; pop r15 ; ret
0x000000000013e23f : pop r14 ; pop r15 ; ret
0x000000000013e3ef : pop r14 ; pop r15 ; ret
0x000000000013ef4c : pop r14 ; pop r15 ; ret
0x000000000013efc3 : pop r14 ; pop r15 ; ret
0x000000000013f0d1 : pop r14 ; pop r15 ; ret
0x000000000013f877 : pop r14 ; pop r15 ; ret
0x000000000014028d : pop r14 ; pop r15 ; ret
0x000000000014048c : pop r14 ; pop r15 ; ret
0x0000000000140550 : pop r14 ; pop r15 ; ret
0x0000000000141522 : pop r14 ; pop r15 ; ret
0x0000000000141994 : pop r14 ; pop r15 ; ret
0x0000000000141b85 : pop r14 ; pop r15 ; ret
0x0000000000141e55 : pop r14 ; pop r15 ; ret
0x0000000000142c99 : pop r14 ; pop r15 ; ret
0x00000000001431b4 : pop r14 ; pop r15 ; ret
0x0000000000143397 : pop r14 ; pop r15 ; ret
0x00000000001440c5 : pop r14 ; pop r15 ; ret
0x000000000014427a : pop r14 ; pop r15 ; ret
0x0000000000172f0f : pop r14 ; pop r15 ; ret
0x0000000000173d3a : pop r14 ; pop r15 ; ret
0x0000000000174cc2 : pop r14 ; pop r15 ; ret
0x0000000000174cdc : pop r14 ; pop r15 ; ret
0x000000000017519b : pop r14 ; pop r15 ; ret
0x000000000017523c : pop r14 ; pop r15 ; ret
0x000000000003b586 : pop r14 ; pop r15 ; ret
0x000000000003ba56 : pop r14 ; pop r15 ; ret
0x00000000000cd6b6 : pop r14 ; pop rbp ; ret
0x00000000000202e7 : pop r14 ; ret
0x00000000000203e5 : pop r14 ; ret
0x0000000000022bb4 : pop r14 ; ret
0x0000000000032fcf : pop r14 ; ret
0x0000000000033c41 : pop r14 ; ret
0x000000000003c12f : pop r14 ; ret
0x000000000003c17e : pop r14 ; ret
0x000000000003c1b6 : pop r14 ; ret
0x000000000003c256 : pop r14 ; ret
0x000000000003f3f2 : pop r14 ; ret
0x000000000003f441 : pop r14 ; ret
0x000000000003f476 : pop r14 ; ret
0x000000000003f516 : pop r14 ; ret
0x000000000004239f : pop r14 ; ret
0x000000000004983e : pop r14 ; ret
0x0000000000054cbc : pop r14 ; ret
0x0000000000054cd4 : pop r14 ; ret
0x000000000006bd22 : pop r14 ; ret
0x000000000006bf97 : pop r14 ; ret
0x000000000006e79d : pop r14 ; ret
0x000000000006e7e2 : pop r14 ; ret
0x000000000006e7f0 : pop r14 ; ret
0x0000000000071891 : pop r14 ; ret
0x0000000000073583 : pop r14 ; ret
0x00000000000735b1 : pop r14 ; ret
0x0000000000073658 : pop r14 ; ret
0x0000000000075024 : pop r14 ; ret
0x000000000007503f : pop r14 ; ret
0x0000000000075058 : pop r14 ; ret
0x00000000000751e6 : pop r14 ; ret
0x00000000000751ff : pop r14 ; ret
0x0000000000075218 : pop r14 ; ret
0x0000000000075dfc : pop r14 ; ret
0x00000000000767c7 : pop r14 ; ret
0x0000000000076a6c : pop r14 ; ret
0x0000000000076b0b : pop r14 ; ret
0x0000000000076b3d : pop r14 ; ret
0x0000000000077299 : pop r14 ; ret
0x0000000000077aa4 : pop r14 ; ret
0x0000000000077e33 : pop r14 ; ret
0x0000000000077eb2 : pop r14 ; ret
0x00000000000785af : pop r14 ; ret
0x0000000000078be8 : pop r14 ; ret
0x0000000000078fbf : pop r14 ; ret
0x000000000007906d : pop r14 ; ret
0x000000000007b6e4 : pop r14 ; ret
0x000000000007b801 : pop r14 ; ret
0x000000000007d13a : pop r14 ; ret
0x000000000007d152 : pop r14 ; ret
0x000000000007d1be : pop r14 ; ret
0x000000000007d1e0 : pop r14 ; ret
0x000000000007d793 : pop r14 ; ret
0x000000000007d81e : pop r14 ; ret
0x000000000007e0aa : pop r14 ; ret
0x000000000007e0f8 : pop r14 ; ret
0x0000000000082ce9 : pop r14 ; ret
0x0000000000082d77 : pop r14 ; ret
0x0000000000085583 : pop r14 ; ret
0x0000000000086f7a : pop r14 ; ret
0x0000000000087a64 : pop r14 ; ret
0x0000000000087ad2 : pop r14 ; ret
0x0000000000087e7b : pop r14 ; ret
0x0000000000088d7f : pop r14 ; ret
0x000000000008975a : pop r14 ; ret
0x0000000000095a4d : pop r14 ; ret
0x0000000000096bae : pop r14 ; ret
0x0000000000096bd8 : pop r14 ; ret
0x0000000000096eec : pop r14 ; ret
0x0000000000097926 : pop r14 ; ret
0x00000000000acd0b : pop r14 ; ret
0x00000000000acd1f : pop r14 ; ret
0x00000000000ace04 : pop r14 ; ret
0x00000000000acf01 : pop r14 ; ret
0x00000000000acf44 : pop r14 ; ret
0x00000000000ae702 : pop r14 ; ret
0x00000000000ae751 : pop r14 ; ret
0x00000000000ae786 : pop r14 ; ret
0x00000000000ae826 : pop r14 ; ret
0x00000000000b10bf : pop r14 ; ret
0x00000000000b37ef : pop r14 ; ret
0x00000000000b383e : pop r14 ; ret
0x00000000000b3876 : pop r14 ; ret
0x00000000000b3916 : pop r14 ; ret
0x00000000000b65d6 : pop r14 ; ret
0x00000000000b9f5a : pop r14 ; ret
0x00000000000bb56e : pop r14 ; ret
0x00000000000bb646 : pop r14 ; ret
0x00000000000bc91c : pop r14 ; ret
0x00000000000bc9e2 : pop r14 ; ret
0x00000000000bcc2a : pop r14 ; ret
0x00000000000bcc70 : pop r14 ; ret
0x00000000000bddf6 : pop r14 ; ret
0x00000000000bdf34 : pop r14 ; ret
0x00000000000c763a : pop r14 ; ret
0x00000000000c7a3c : pop r14 ; ret
0x00000000000c7ad3 : pop r14 ; ret
0x00000000000c7b13 : pop r14 ; ret
0x00000000000c8d5f : pop r14 ; ret
0x00000000000c9563 : pop r14 ; ret
0x00000000000c9be6 : pop r14 ; ret
0x00000000000c9c33 : pop r14 ; ret
0x00000000000c9cc2 : pop r14 ; ret
0x00000000000d7fd8 : pop r14 ; ret
0x00000000000d983c : pop r14 ; ret
0x00000000000d98bb : pop r14 ; ret
0x00000000000da3c0 : pop r14 ; ret
0x00000000000da3f3 : pop r14 ; ret
0x00000000000de37d : pop r14 ; ret
0x00000000000de409 : pop r14 ; ret
0x00000000000de45c : pop r14 ; ret
0x00000000000e829c : pop r14 ; ret
0x00000000000e82da : pop r14 ; ret
0x00000000000f8c3f : pop r14 ; ret
0x00000000000f8c9f : pop r14 ; ret
0x00000000000f8d01 : pop r14 ; ret
0x00000000000fd4a7 : pop r14 ; ret
0x00000000000fd663 : pop r14 ; ret
0x00000000000fd6cd : pop r14 ; ret
0x00000000000fe797 : pop r14 ; ret
0x00000000000fe7e7 : pop r14 ; ret
0x00000000000fe9be : pop r14 ; ret
0x0000000000100304 : pop r14 ; ret
0x000000000010562d : pop r14 ; ret
0x0000000000105f5f : pop r14 ; ret
0x0000000000105f75 : pop r14 ; ret
0x0000000000105f9b : pop r14 ; ret
0x00000000001082e2 : pop r14 ; ret
0x0000000000108462 : pop r14 ; ret
0x0000000000108998 : pop r14 ; ret
0x000000000010c87c : pop r14 ; ret
0x000000000010c8f0 : pop r14 ; ret
0x000000000010d357 : pop r14 ; ret
0x000000000010e0ad : pop r14 ; ret
0x000000000010e0e6 : pop r14 ; ret
0x000000000010e102 : pop r14 ; ret
0x000000000010e3cf : pop r14 ; ret
0x0000000000110a66 : pop r14 ; ret
0x0000000000110d02 : pop r14 ; ret
0x00000000001110ce : pop r14 ; ret
0x0000000000118bb6 : pop r14 ; ret
0x000000000011b120 : pop r14 ; ret
0x000000000011c333 : pop r14 ; ret
0x000000000011c762 : pop r14 ; ret
0x000000000011e985 : pop r14 ; ret
0x000000000011ea45 : pop r14 ; ret
0x000000000012316c : pop r14 ; ret
0x000000000012320b : pop r14 ; ret
0x0000000000124eda : pop r14 ; ret
0x0000000000124f20 : pop r14 ; ret
0x0000000000124f70 : pop r14 ; ret
0x0000000000125007 : pop r14 ; ret
0x0000000000127732 : pop r14 ; ret
0x00000000001277de : pop r14 ; ret
0x000000000012957a : pop r14 ; ret
0x0000000000129632 : pop r14 ; ret
0x000000000012c9fa : pop r14 ; ret
0x000000000012ca20 : pop r14 ; ret
0x000000000012cb09 : pop r14 ; ret
0x000000000012cdc7 : pop r14 ; ret
0x000000000012de55 : pop r14 ; ret
0x000000000012e422 : pop r14 ; ret
0x000000000012ed44 : pop r14 ; ret
0x000000000012ed8a : pop r14 ; ret
0x0000000000132a89 : pop r14 ; ret
0x000000000013335a : pop r14 ; ret
0x000000000013363b : pop r14 ; ret
0x000000000013368a : pop r14 ; ret
0x0000000000135543 : pop r14 ; ret
0x000000000013786a : pop r14 ; ret
0x000000000013787f : pop r14 ; ret
0x000000000013931a : pop r14 ; ret
0x00000000001393e3 : pop r14 ; ret
0x0000000000139492 : pop r14 ; ret
0x00000000001395fb : pop r14 ; ret
0x000000000013964a : pop r14 ; ret
0x000000000013a08d : pop r14 ; ret
0x000000000013a0cb : pop r14 ; ret
0x000000000013a4cc : pop r14 ; ret
0x000000000013a4e4 : pop r14 ; ret
0x000000000013a694 : pop r14 ; ret
0x000000000013a6b4 : pop r14 ; ret
0x000000000013b1e5 : pop r14 ; ret
0x000000000013b703 : pop r14 ; ret
0x000000000013b7ae : pop r14 ; ret
0x000000000013c0a1 : pop r14 ; ret
0x000000000013cc16 : pop r14 ; ret
0x000000000013cc8e : pop r14 ; ret
0x000000000013d344 : pop r14 ; ret
0x000000000013d3ae : pop r14 ; ret
0x00000000001408b1 : pop r14 ; ret
0x0000000000142280 : pop r14 ; ret
0x0000000000073634 : pop r14 ; sar rax, 2 ; ret
0x0000000000104051 : pop r15 ; jmp rax
0x0000000000020255 : pop r15 ; pop rbp ; ret
0x0000000000020e68 : pop r15 ; pop rbp ; ret
0x0000000000020e9f : pop r15 ; pop rbp ; ret
0x00000000000213bf : pop r15 ; pop rbp ; ret
0x0000000000022401 : pop r15 ; pop rbp ; ret
0x0000000000022ccf : pop r15 ; pop rbp ; ret
0x000000000002304b : pop r15 ; pop rbp ; ret
0x00000000000236d7 : pop r15 ; pop rbp ; ret
0x0000000000029c71 : pop r15 ; pop rbp ; ret
0x0000000000029c88 : pop r15 ; pop rbp ; ret
0x000000000002b5da : pop r15 ; pop rbp ; ret
0x000000000002b612 : pop r15 ; pop rbp ; ret
0x000000000002c020 : pop r15 ; pop rbp ; ret
0x000000000002c0f5 : pop r15 ; pop rbp ; ret
0x000000000002c145 : pop r15 ; pop rbp ; ret
0x000000000002c453 : pop r15 ; pop rbp ; ret
0x000000000002c6cd : pop r15 ; pop rbp ; ret
0x000000000002c8c2 : pop r15 ; pop rbp ; ret
0x000000000002cc77 : pop r15 ; pop rbp ; ret
0x000000000002d054 : pop r15 ; pop rbp ; ret
0x000000000002d15d : pop r15 ; pop rbp ; ret
0x000000000002efc1 : pop r15 ; pop rbp ; ret
0x000000000002f266 : pop r15 ; pop rbp ; ret
0x000000000002ff9f : pop r15 ; pop rbp ; ret
0x0000000000030a8e : pop r15 ; pop rbp ; ret
0x0000000000032299 : pop r15 ; pop rbp ; ret
0x0000000000032446 : pop r15 ; pop rbp ; ret
0x00000000000395ec : pop r15 ; pop rbp ; ret
0x000000000003964d : pop r15 ; pop rbp ; ret
0x0000000000039ac1 : pop r15 ; pop rbp ; ret
0x0000000000045619 : pop r15 ; pop rbp ; ret
0x00000000000457fe : pop r15 ; pop rbp ; ret
0x0000000000045852 : pop r15 ; pop rbp ; ret
0x0000000000048cde : pop r15 ; pop rbp ; ret
0x000000000004a9a3 : pop r15 ; pop rbp ; ret
0x000000000004aa78 : pop r15 ; pop rbp ; ret
0x000000000004aca0 : pop r15 ; pop rbp ; ret
0x000000000004b6ff : pop r15 ; pop rbp ; ret
0x000000000004d287 : pop r15 ; pop rbp ; ret
0x000000000004d338 : pop r15 ; pop rbp ; ret
0x00000000000503b0 : pop r15 ; pop rbp ; ret
0x0000000000050cd3 : pop r15 ; pop rbp ; ret
0x0000000000050e09 : pop r15 ; pop rbp ; ret
0x0000000000050e5b : pop r15 ; pop rbp ; ret
0x0000000000050fbe : pop r15 ; pop rbp ; ret
0x0000000000055bfc : pop r15 ; pop rbp ; ret
0x0000000000055e1a : pop r15 ; pop rbp ; ret
0x0000000000055e5b : pop r15 ; pop rbp ; ret
0x0000000000056ae7 : pop r15 ; pop rbp ; ret
0x0000000000058ae3 : pop r15 ; pop rbp ; ret
0x0000000000058b09 : pop r15 ; pop rbp ; ret
0x0000000000058bee : pop r15 ; pop rbp ; ret
0x000000000005bbad : pop r15 ; pop rbp ; ret
0x00000000000637b2 : pop r15 ; pop rbp ; ret
0x00000000000752ad : pop r15 ; pop rbp ; ret
0x00000000000776e7 : pop r15 ; pop rbp ; ret
0x0000000000088844 : pop r15 ; pop rbp ; ret
0x00000000000989f6 : pop r15 ; pop rbp ; ret
0x00000000000b7395 : pop r15 ; pop rbp ; ret
0x00000000000ba050 : pop r15 ; pop rbp ; ret
0x00000000000ba0ae : pop r15 ; pop rbp ; ret
0x00000000000bf7f5 : pop r15 ; pop rbp ; ret
0x00000000000bf860 : pop r15 ; pop rbp ; ret
0x00000000000c52ad : pop r15 ; pop rbp ; ret
0x00000000000cc521 : pop r15 ; pop rbp ; ret
0x00000000000ccdbd : pop r15 ; pop rbp ; ret
0x00000000000cdf44 : pop r15 ; pop rbp ; ret
0x00000000000ceadd : pop r15 ; pop rbp ; ret
0x00000000000cece5 : pop r15 ; pop rbp ; ret
0x00000000000cf240 : pop r15 ; pop rbp ; ret
0x00000000000cf326 : pop r15 ; pop rbp ; ret
0x00000000000cf872 : pop r15 ; pop rbp ; ret
0x00000000000d1aee : pop r15 ; pop rbp ; ret
0x00000000000d2293 : pop r15 ; pop rbp ; ret
0x00000000000d38cb : pop r15 ; pop rbp ; ret
0x00000000000d55b9 : pop r15 ; pop rbp ; ret
0x00000000000d564a : pop r15 ; pop rbp ; ret
0x00000000000d5668 : pop r15 ; pop rbp ; ret
0x00000000000d8923 : pop r15 ; pop rbp ; ret
0x00000000000d8c51 : pop r15 ; pop rbp ; ret
0x00000000000d8cca : pop r15 ; pop rbp ; ret
0x00000000000dcdc8 : pop r15 ; pop rbp ; ret
0x00000000000dd00d : pop r15 ; pop rbp ; ret
0x00000000000e94d1 : pop r15 ; pop rbp ; ret
0x00000000000e9572 : pop r15 ; pop rbp ; ret
0x00000000000e95a2 : pop r15 ; pop rbp ; ret
0x00000000000e98b7 : pop r15 ; pop rbp ; ret
0x00000000000eaab6 : pop r15 ; pop rbp ; ret
0x00000000000eaae0 : pop r15 ; pop rbp ; ret
0x00000000000eadf4 : pop r15 ; pop rbp ; ret
0x00000000000ef2c4 : pop r15 ; pop rbp ; ret
0x00000000000ef6d9 : pop r15 ; pop rbp ; ret
0x00000000000f1513 : pop r15 ; pop rbp ; ret
0x00000000000f156d : pop r15 ; pop rbp ; ret
0x00000000000f1633 : pop r15 ; pop rbp ; ret
0x00000000000f172e : pop r15 ; pop rbp ; ret
0x00000000000f603e : pop r15 ; pop rbp ; ret
0x00000000000f9917 : pop r15 ; pop rbp ; ret
0x00000000000fd957 : pop r15 ; pop rbp ; ret
0x00000000000fda22 : pop r15 ; pop rbp ; ret
0x00000000000febe1 : pop r15 ; pop rbp ; ret
0x00000000000febf8 : pop r15 ; pop rbp ; ret
0x0000000000103223 : pop r15 ; pop rbp ; ret
0x000000000010340f : pop r15 ; pop rbp ; ret
0x0000000000104b1b : pop r15 ; pop rbp ; ret
0x00000000001052d8 : pop r15 ; pop rbp ; ret
0x0000000000105379 : pop r15 ; pop rbp ; ret
0x0000000000105a79 : pop r15 ; pop rbp ; ret
0x0000000000105ba2 : pop r15 ; pop rbp ; ret
0x000000000010920d : pop r15 ; pop rbp ; ret
0x000000000010a091 : pop r15 ; pop rbp ; ret
0x000000000010a20a : pop r15 ; pop rbp ; ret
0x000000000010a2e2 : pop r15 ; pop rbp ; ret
0x0000000000110055 : pop r15 ; pop rbp ; ret
0x00000000001102d9 : pop r15 ; pop rbp ; ret
0x000000000011182a : pop r15 ; pop rbp ; ret
0x0000000000113e61 : pop r15 ; pop rbp ; ret
0x0000000000115e66 : pop r15 ; pop rbp ; ret
0x000000000011db25 : pop r15 ; pop rbp ; ret
0x000000000011f594 : pop r15 ; pop rbp ; ret
0x0000000000120fca : pop r15 ; pop rbp ; ret
0x0000000000121248 : pop r15 ; pop rbp ; ret
0x00000000001213af : pop r15 ; pop rbp ; ret
0x00000000001220aa : pop r15 ; pop rbp ; ret
0x00000000001220ce : pop r15 ; pop rbp ; ret
0x00000000001223a1 : pop r15 ; pop rbp ; ret
0x000000000012366b : pop r15 ; pop rbp ; ret
0x00000000001236c9 : pop r15 ; pop rbp ; ret
0x00000000001237e5 : pop r15 ; pop rbp ; ret
0x000000000012387d : pop r15 ; pop rbp ; ret
0x00000000001239fa : pop r15 ; pop rbp ; ret
0x0000000000123b7e : pop r15 ; pop rbp ; ret
0x0000000000124359 : pop r15 ; pop rbp ; ret
0x0000000000124393 : pop r15 ; pop rbp ; ret
0x0000000000124637 : pop r15 ; pop rbp ; ret
0x0000000000124ab4 : pop r15 ; pop rbp ; ret
0x0000000000124d35 : pop r15 ; pop rbp ; ret
0x0000000000128ef1 : pop r15 ; pop rbp ; ret
0x0000000000128fda : pop r15 ; pop rbp ; ret
0x000000000012971b : pop r15 ; pop rbp ; ret
0x0000000000129990 : pop r15 ; pop rbp ; ret
0x0000000000129aa7 : pop r15 ; pop rbp ; ret
0x0000000000129ac0 : pop r15 ; pop rbp ; ret
0x0000000000129ca7 : pop r15 ; pop rbp ; ret
0x0000000000129db0 : pop r15 ; pop rbp ; ret
0x0000000000129de8 : pop r15 ; pop rbp ; ret
0x000000000012a0fa : pop r15 ; pop rbp ; ret
0x000000000012c3eb : pop r15 ; pop rbp ; ret
0x000000000012c678 : pop r15 ; pop rbp ; ret
0x000000000012c6cb : pop r15 ; pop rbp ; ret
0x0000000000132881 : pop r15 ; pop rbp ; ret
0x0000000000132898 : pop r15 ; pop rbp ; ret
0x0000000000134691 : pop r15 ; pop rbp ; ret
0x00000000001346dd : pop r15 ; pop rbp ; ret
0x00000000001347b1 : pop r15 ; pop rbp ; ret
0x0000000000134851 : pop r15 ; pop rbp ; ret
0x000000000013d518 : pop r15 ; pop rbp ; ret
0x000000000013e834 : pop r15 ; pop rbp ; ret
0x000000000013f444 : pop r15 ; pop rbp ; ret
0x000000000013f71b : pop r15 ; pop rbp ; ret
0x000000000013fa72 : pop r15 ; pop rbp ; ret
0x000000000013ff2d : pop r15 ; pop rbp ; ret
0x0000000000140bb0 : pop r15 ; pop rbp ; ret
0x0000000000140c4a : pop r15 ; pop rbp ; ret
0x0000000000142aa5 : pop r15 ; pop rbp ; ret
0x0000000000142b2f : pop r15 ; pop rbp ; ret
0x000000000014390b : pop r15 ; pop rbp ; ret
0x0000000000144738 : pop r15 ; pop rbp ; ret
0x000000000014476d : pop r15 ; pop rbp ; ret
0x0000000000144785 : pop r15 ; pop rbp ; ret
0x0000000000021101 : pop r15 ; ret
0x0000000000021119 : pop r15 ; ret
0x0000000000021141 : pop r15 ; ret
0x0000000000021169 : pop r15 ; ret
0x0000000000021191 : pop r15 ; ret
0x000000000002189a : pop r15 ; ret
0x0000000000022847 : pop r15 ; ret
0x0000000000022995 : pop r15 ; ret
0x0000000000023c1e : pop r15 ; ret
0x0000000000023e0e : pop r15 ; ret
0x0000000000023eb1 : pop r15 ; ret
0x0000000000023f0b : pop r15 ; ret
0x0000000000023f24 : pop r15 ; ret
0x0000000000024048 : pop r15 ; ret
0x0000000000024088 : pop r15 ; ret
0x00000000000245d3 : pop r15 ; ret
0x00000000000247cc : pop r15 ; ret
0x0000000000024869 : pop r15 ; ret
0x00000000000248cf : pop r15 ; ret
0x00000000000248ee : pop r15 ; ret
0x0000000000024a18 : pop r15 ; ret
0x0000000000024a58 : pop r15 ; ret
0x0000000000024f7e : pop r15 ; ret
0x0000000000025322 : pop r15 ; ret
0x0000000000025b23 : pop r15 ; ret
0x0000000000026834 : pop r15 ; ret
0x000000000002687e : pop r15 ; ret
0x000000000002799b : pop r15 ; ret
0x00000000000279da : pop r15 ; ret
0x000000000002801a : pop r15 ; ret
0x000000000002885b : pop r15 ; ret
0x000000000002889b : pop r15 ; ret
0x0000000000028eea : pop r15 ; ret
0x00000000000298d3 : pop r15 ; ret
0x0000000000029fa3 : pop r15 ; ret
0x000000000002a06c : pop r15 ; ret
0x000000000002a180 : pop r15 ; ret
0x000000000002aa21 : pop r15 ; ret
0x000000000002ac8b : pop r15 ; ret
0x000000000002bec4 : pop r15 ; ret
0x000000000002d77f : pop r15 ; ret
0x000000000002e1ca : pop r15 ; ret
0x000000000002e42a : pop r15 ; ret
0x000000000002e7d1 : pop r15 ; ret
0x00000000000306f6 : pop r15 ; ret
0x00000000000307a7 : pop r15 ; ret
0x00000000000325cc : pop r15 ; ret
0x0000000000032bee : pop r15 ; ret
0x0000000000032c90 : pop r15 ; ret
0x0000000000033335 : pop r15 ; ret
0x00000000000340af : pop r15 ; ret
0x0000000000037221 : pop r15 ; ret
0x0000000000037237 : pop r15 ; ret
0x0000000000037860 : pop r15 ; ret
0x00000000000397e5 : pop r15 ; ret
0x000000000003a4a5 : pop r15 ; ret
0x000000000003b52c : pop r15 ; ret
0x000000000003b588 : pop r15 ; ret
0x000000000003b9fc : pop r15 ; ret
0x000000000003ba58 : pop r15 ; ret
0x000000000003bb79 : pop r15 ; ret
0x000000000003bf9c : pop r15 ; ret
0x000000000003c6fe : pop r15 ; ret
0x000000000003f25c : pop r15 ; ret
0x000000000003f9de : pop r15 ; ret
0x00000000000421b4 : pop r15 ; ret
0x0000000000042c0c : pop r15 ; ret
0x00000000000460a2 : pop r15 ; ret
0x0000000000046f87 : pop r15 ; ret
0x0000000000046fee : pop r15 ; ret
0x00000000000472ce : pop r15 ; ret
0x000000000004777f : pop r15 ; ret
0x00000000000486c9 : pop r15 ; ret
0x00000000000486e2 : pop r15 ; ret
0x00000000000487d2 : pop r15 ; ret
0x00000000000488ad : pop r15 ; ret
0x0000000000049164 : pop r15 ; ret
0x00000000000492d8 : pop r15 ; ret
0x00000000000499b7 : pop r15 ; ret
0x000000000004a31e : pop r15 ; ret
0x000000000004a348 : pop r15 ; ret
0x0000000000052e0a : pop r15 ; ret
0x0000000000053174 : pop r15 ; ret
0x000000000005505f : pop r15 ; ret
0x0000000000055274 : pop r15 ; ret
0x0000000000055428 : pop r15 ; ret
0x00000000000554ee : pop r15 ; ret
0x0000000000055585 : pop r15 ; ret
0x000000000006adfe : pop r15 ; ret
0x000000000006b24f : pop r15 ; ret
0x000000000006d505 : pop r15 ; ret
0x000000000006e9bb : pop r15 ; ret
0x000000000006eca4 : pop r15 ; ret
0x000000000006ecfd : pop r15 ; ret
0x000000000006f2f9 : pop r15 ; ret
0x0000000000070c98 : pop r15 ; ret
0x0000000000070d05 : pop r15 ; ret
0x0000000000071a69 : pop r15 ; ret
0x0000000000071d83 : pop r15 ; ret
0x0000000000071e2a : pop r15 ; ret
0x0000000000072604 : pop r15 ; ret
0x0000000000072774 : pop r15 ; ret
0x00000000000730df : pop r15 ; ret
0x00000000000731f2 : pop r15 ; ret
0x00000000000733d8 : pop r15 ; ret
0x0000000000073a92 : pop r15 ; ret
0x0000000000073ba3 : pop r15 ; ret
0x0000000000073c89 : pop r15 ; ret
0x0000000000073e59 : pop r15 ; ret
0x0000000000074824 : pop r15 ; ret
0x0000000000074869 : pop r15 ; ret
0x0000000000074e51 : pop r15 ; ret
0x0000000000076cca : pop r15 ; ret
0x0000000000078deb : pop r15 ; ret
0x000000000007926d : pop r15 ; ret
0x0000000000079b77 : pop r15 ; ret
0x0000000000079ba6 : pop r15 ; ret
0x0000000000079fc4 : pop r15 ; ret
0x000000000007a16f : pop r15 ; ret
0x000000000007afd9 : pop r15 ; ret
0x000000000007c25d : pop r15 ; ret
0x000000000007c9c5 : pop r15 ; ret
0x000000000007cdbd : pop r15 ; ret
0x000000000007ce30 : pop r15 ; ret
0x000000000007d896 : pop r15 ; ret
0x000000000007e526 : pop r15 ; ret
0x000000000007f35a : pop r15 ; ret
0x000000000007feaf : pop r15 ; ret
0x0000000000080386 : pop r15 ; ret
0x00000000000813e5 : pop r15 ; ret
0x0000000000081ec4 : pop r15 ; ret
0x00000000000831ef : pop r15 ; ret
0x000000000008335f : pop r15 ; ret
0x00000000000833b9 : pop r15 ; ret
0x0000000000083c1c : pop r15 ; ret
0x0000000000083d6c : pop r15 ; ret
0x000000000008478d : pop r15 ; ret
0x0000000000085af4 : pop r15 ; ret
0x0000000000086c76 : pop r15 ; ret
0x000000000008715a : pop r15 ; ret
0x0000000000087561 : pop r15 ; ret
0x0000000000087c91 : pop r15 ; ret
0x00000000000881c3 : pop r15 ; ret
0x0000000000088a10 : pop r15 ; ret
0x0000000000088ee2 : pop r15 ; ret
0x00000000000893d7 : pop r15 ; ret
0x000000000008b5f8 : pop r15 ; ret
0x000000000008b68f : pop r15 ; ret
0x000000000008dff5 : pop r15 ; ret
0x000000000008e136 : pop r15 ; ret
0x000000000008e14f : pop r15 ; ret
0x000000000009543a : pop r15 ; ret
0x0000000000095526 : pop r15 ; ret
0x0000000000095706 : pop r15 ; ret
0x0000000000095fa9 : pop r15 ; ret
0x000000000009638b : pop r15 ; ret
0x00000000000964e3 : pop r15 ; ret
0x00000000000969ce : pop r15 ; ret
0x0000000000096ac7 : pop r15 ; ret
0x0000000000096d26 : pop r15 ; ret
0x0000000000096ff2 : pop r15 ; ret
0x00000000000976da : pop r15 ; ret
0x000000000009785f : pop r15 ; ret
0x0000000000098083 : pop r15 ; ret
0x00000000000aab55 : pop r15 ; ret
0x00000000000aab76 : pop r15 ; ret
0x00000000000ad2f8 : pop r15 ; ret
0x00000000000ad5ea : pop r15 ; ret
0x00000000000ad897 : pop r15 ; ret
0x00000000000addbc : pop r15 ; ret
0x00000000000ade0d : pop r15 ; ret
0x00000000000ae21c : pop r15 ; ret
0x00000000000ae26d : pop r15 ; ret
0x00000000000ae310 : pop r15 ; ret
0x00000000000ae578 : pop r15 ; ret
0x00000000000aef2f : pop r15 ; ret
0x00000000000b0ee0 : pop r15 ; ret
0x00000000000b1b96 : pop r15 ; ret
0x00000000000b3668 : pop r15 ; ret
0x00000000000b400f : pop r15 ; ret
0x00000000000b6a9c : pop r15 ; ret
0x00000000000ba62b : pop r15 ; ret
0x00000000000baf45 : pop r15 ; ret
0x00000000000baf77 : pop r15 ; ret
0x00000000000bc07b : pop r15 ; ret
0x00000000000bc728 : pop r15 ; ret
0x00000000000bc82f : pop r15 ; ret
0x00000000000bce69 : pop r15 ; ret
0x00000000000bd7cd : pop r15 ; ret
0x00000000000be010 : pop r15 ; ret
0x00000000000bef14 : pop r15 ; ret
0x00000000000bef2d : pop r15 ; ret
0x00000000000bf1bb : pop r15 ; ret
0x00000000000c0017 : pop r15 ; ret
0x00000000000c3231 : pop r15 ; ret
0x00000000000c7e0f : pop r15 ; ret
0x00000000000c869d : pop r15 ; ret
0x00000000000c8941 : pop r15 ; ret
0x00000000000c8bd5 : pop r15 ; ret
0x00000000000c8cfe : pop r15 ; ret
0x00000000000c8efa : pop r15 ; ret
0x00000000000c8f20 : pop r15 ; ret
0x00000000000c8fd1 : pop r15 ; ret
0x00000000000c9353 : pop r15 ; ret
0x00000000000ca0df : pop r15 ; ret
0x00000000000ca140 : pop r15 ; ret
0x00000000000ca1d9 : pop r15 ; ret
0x00000000000ca380 : pop r15 ; ret
0x00000000000ca3e0 : pop r15 ; ret
0x00000000000ca479 : pop r15 ; ret
0x00000000000ca5aa : pop r15 ; ret
0x00000000000ca6af : pop r15 ; ret
0x00000000000ca7b1 : pop r15 ; ret
0x00000000000ca9e9 : pop r15 ; ret
0x00000000000cabfa : pop r15 ; ret
0x00000000000cac20 : pop r15 ; ret
0x00000000000cb5f0 : pop r15 ; ret
0x00000000000cb650 : pop r15 ; ret
0x00000000000cb6e9 : pop r15 ; ret
0x00000000000cb88f : pop r15 ; ret
0x00000000000cb8f0 : pop r15 ; ret
0x00000000000cb989 : pop r15 ; ret
0x00000000000cbec1 : pop r15 ; ret
0x00000000000cc9ca : pop r15 ; ret
0x00000000000ccb6a : pop r15 ; ret
0x00000000000ccd10 : pop r15 ; ret
0x00000000000ce9d3 : pop r15 ; ret
0x00000000000ce9ee : pop r15 ; ret
0x00000000000d41db : pop r15 ; ret
0x00000000000d5b88 : pop r15 ; ret
0x00000000000d5dfa : pop r15 ; ret
0x00000000000d5e2f : pop r15 ; ret
0x00000000000d5f9e : pop r15 ; ret
0x00000000000d65b6 : pop r15 ; ret
0x00000000000d6dee : pop r15 ; ret
0x00000000000d7441 : pop r15 ; ret
0x00000000000d745d : pop r15 ; ret
0x00000000000d8def : pop r15 ; ret
0x00000000000d9c3d : pop r15 ; ret
0x00000000000da5c1 : pop r15 ; ret
0x00000000000da880 : pop r15 ; ret
0x00000000000daa22 : pop r15 ; ret
0x00000000000daae7 : pop r15 ; ret
0x00000000000daeab : pop r15 ; ret
0x00000000000daeed : pop r15 ; ret
0x00000000000daf3a : pop r15 ; ret
0x00000000000db0fa : pop r15 ; ret
0x00000000000dbbb9 : pop r15 ; ret
0x00000000000dbf68 : pop r15 ; ret
0x00000000000dc0ca : pop r15 ; ret
0x00000000000dc46d : pop r15 ; ret
0x00000000000dc693 : pop r15 ; ret
0x00000000000dc791 : pop r15 ; ret
0x00000000000dc8ff : pop r15 ; ret
0x00000000000ddacb : pop r15 ; ret
0x00000000000ddc5c : pop r15 ; ret
0x00000000000ddcee : pop r15 ; ret
0x00000000000ddd6b : pop r15 ; ret
0x00000000000ddec5 : pop r15 ; ret
0x00000000000de676 : pop r15 ; ret
0x00000000000df3df : pop r15 ; ret
0x00000000000df431 : pop r15 ; ret
0x00000000000df68f : pop r15 ; ret
0x00000000000df6ae : pop r15 ; ret
0x00000000000dfa0a : pop r15 ; ret
0x00000000000dfa84 : pop r15 ; ret
0x00000000000dfae5 : pop r15 ; ret
0x00000000000e0259 : pop r15 ; ret
0x00000000000e05e1 : pop r15 ; ret
0x00000000000e1d6c : pop r15 ; ret
0x00000000000e4132 : pop r15 ; ret
0x00000000000e41fc : pop r15 ; ret
0x00000000000e421b : pop r15 ; ret
0x00000000000e4827 : pop r15 ; ret
0x00000000000e4ea5 : pop r15 ; ret
0x00000000000e4f7e : pop r15 ; ret
0x00000000000e57be : pop r15 ; ret
0x00000000000e5b2f : pop r15 ; ret
0x00000000000e5f24 : pop r15 ; ret
0x00000000000e7f59 : pop r15 ; ret
0x00000000000e85f2 : pop r15 ; ret
0x00000000000e8731 : pop r15 ; ret
0x00000000000e8837 : pop r15 ; ret
0x00000000000e9194 : pop r15 ; ret
0x00000000000eab5b : pop r15 ; ret
0x00000000000eac25 : pop r15 ; ret
0x00000000000ed4f6 : pop r15 ; ret
0x00000000000edf01 : pop r15 ; ret
0x00000000000efe70 : pop r15 ; ret
0x00000000000f06d0 : pop r15 ; ret
0x00000000000f07b5 : pop r15 ; ret
0x00000000000f08b0 : pop r15 ; ret
0x00000000000f1ace : pop r15 ; ret
0x00000000000f40ac : pop r15 ; ret
0x00000000000f49a5 : pop r15 ; ret
0x00000000000f5cc6 : pop r15 ; ret
0x00000000000f738a : pop r15 ; ret
0x00000000000f7b59 : pop r15 ; ret
0x00000000000f86c7 : pop r15 ; ret
0x00000000000f91ce : pop r15 ; ret
0x00000000000fa186 : pop r15 ; ret
0x00000000000fab12 : pop r15 ; ret
0x00000000000fb022 : pop r15 ; ret
0x00000000000fb8d0 : pop r15 ; ret
0x00000000000fbe19 : pop r15 ; ret
0x00000000000ffbe9 : pop r15 ; ret
0x0000000000100888 : pop r15 ; ret
0x0000000000100ea0 : pop r15 ; ret
0x00000000001016ca : pop r15 ; ret
0x0000000000101b8f : pop r15 ; ret
0x0000000000101c16 : pop r15 ; ret
0x000000000010210f : pop r15 ; ret
0x0000000000102192 : pop r15 ; ret
0x0000000000102701 : pop r15 ; ret
0x0000000000102796 : pop r15 ; ret
0x0000000000102feb : pop r15 ; ret
0x000000000010307b : pop r15 ; ret
0x000000000010308f : pop r15 ; ret
0x0000000000104064 : pop r15 ; ret
0x00000000001049aa : pop r15 ; ret
0x0000000000104a3f : pop r15 ; ret
0x0000000000104a56 : pop r15 ; ret
0x0000000000105767 : pop r15 ; ret
0x000000000010764a : pop r15 ; ret
0x0000000000108698 : pop r15 ; ret
0x0000000000109ad5 : pop r15 ; ret
0x0000000000109aee : pop r15 ; ret
0x000000000010ac70 : pop r15 ; ret
0x000000000010ac86 : pop r15 ; ret
0x000000000010b4d8 : pop r15 ; ret
0x000000000010b4ee : pop r15 ; ret
0x000000000010bb8a : pop r15 ; ret
0x000000000010bbb0 : pop r15 ; ret
0x000000000010c468 : pop r15 ; ret
0x000000000010c489 : pop r15 ; ret
0x000000000010c4a8 : pop r15 ; ret
0x000000000010cbc1 : pop r15 ; ret
0x000000000010d53a : pop r15 ; ret
0x000000000010d560 : pop r15 ; ret
0x000000000010d774 : pop r15 ; ret
0x000000000010d807 : pop r15 ; ret
0x000000000010dbe8 : pop r15 ; ret
0x000000000010dc09 : pop r15 ; ret
0x000000000010dc28 : pop r15 ; ret
0x000000000010df8b : pop r15 ; ret
0x000000000010dfbd : pop r15 ; ret
0x000000000010e2f1 : pop r15 ; ret
0x000000000010e500 : pop r15 ; ret
0x000000000010eff7 : pop r15 ; ret
0x000000000010f5f2 : pop r15 ; ret
0x000000000010fd08 : pop r15 ; ret
0x000000000010feed : pop r15 ; ret
0x000000000010ff95 : pop r15 ; ret
0x000000000010ffd4 : pop r15 ; ret
0x0000000000110798 : pop r15 ; ret
0x00000000001132ec : pop r15 ; ret
0x000000000011371e : pop r15 ; ret
0x000000000011616f : pop r15 ; ret
0x000000000011676b : pop r15 ; ret
0x00000000001168bb : pop r15 ; ret
0x00000000001172f8 : pop r15 ; ret
0x0000000000117dbf : pop r15 ; ret
0x0000000000118a0b : pop r15 ; ret
0x0000000000118ce0 : pop r15 ; ret
0x0000000000118f01 : pop r15 ; ret
0x0000000000119862 : pop r15 ; ret
0x0000000000119ade : pop r15 ; ret
0x0000000000119beb : pop r15 ; ret
0x000000000011a122 : pop r15 ; ret
0x000000000011a266 : pop r15 ; ret
0x000000000011a2ef : pop r15 ; ret
0x000000000011a4ef : pop r15 ; ret
0x000000000011a626 : pop r15 ; ret
0x000000000011a6a7 : pop r15 ; ret
0x000000000011ac98 : pop r15 ; ret
0x000000000011ae57 : pop r15 ; ret
0x000000000011ae9b : pop r15 ; ret
0x000000000011af4b : pop r15 ; ret
0x000000000011b617 : pop r15 ; ret
0x000000000011b65b : pop r15 ; ret
0x000000000011b70b : pop r15 ; ret
0x000000000011ba17 : pop r15 ; ret
0x000000000011ba39 : pop r15 ; ret
0x000000000011ba58 : pop r15 ; ret
0x000000000011c0f8 : pop r15 ; ret
0x000000000011c119 : pop r15 ; ret
0x000000000011c138 : pop r15 ; ret
0x000000000011c4ec : pop r15 ; ret
0x000000000011c548 : pop r15 ; ret
0x000000000011c5d9 : pop r15 ; ret
0x000000000011c90b : pop r15 ; ret
0x000000000011c968 : pop r15 ; ret
0x000000000011c9f9 : pop r15 ; ret
0x000000000011cf32 : pop r15 ; ret
0x000000000011d242 : pop r15 ; ret
0x000000000011d6bd : pop r15 ; ret
0x000000000011dc80 : pop r15 ; ret
0x000000000011dca7 : pop r15 ; ret
0x000000000011dd00 : pop r15 ; ret
0x000000000011dd2e : pop r15 ; ret
0x000000000011e059 : pop r15 ; ret
0x000000000011e886 : pop r15 ; ret
0x000000000011e8b8 : pop r15 ; ret
0x000000000011e8e0 : pop r15 ; ret
0x000000000011ed42 : pop r15 ; ret
0x000000000011fa62 : pop r15 ; ret
0x000000000011fb2f : pop r15 ; ret
0x00000000001200dd : pop r15 ; ret
0x00000000001200ee : pop r15 ; ret
0x000000000012046e : pop r15 ; ret
0x0000000000120d58 : pop r15 ; ret
0x0000000000120d79 : pop r15 ; ret
0x0000000000120d98 : pop r15 ; ret
0x0000000000121510 : pop r15 ; ret
0x0000000000121d14 : pop r15 ; ret
0x0000000000121d95 : pop r15 ; ret
0x000000000012530a : pop r15 ; ret
0x000000000012534c : pop r15 ; ret
0x000000000012542e : pop r15 ; ret
0x00000000001254e6 : pop r15 ; ret
0x00000000001262ef : pop r15 ; ret
0x000000000012630b : pop r15 ; ret
0x000000000012719f : pop r15 ; ret
0x000000000012794d : pop r15 ; ret
0x00000000001279b4 : pop r15 ; ret
0x00000000001280ac : pop r15 ; ret
0x0000000000128414 : pop r15 ; ret
0x00000000001286ee : pop r15 ; ret
0x0000000000128720 : pop r15 ; ret
0x0000000000128e09 : pop r15 ; ret
0x00000000001291e0 : pop r15 ; ret
0x00000000001292b5 : pop r15 ; ret
0x000000000012a30d : pop r15 ; ret
0x000000000012a35f : pop r15 ; ret
0x000000000012a47b : pop r15 ; ret
0x000000000012a4e6 : pop r15 ; ret
0x000000000012a5ed : pop r15 ; ret
0x000000000012a606 : pop r15 ; ret
0x000000000012a7a4 : pop r15 ; ret
0x000000000012a827 : pop r15 ; ret
0x000000000012a9f3 : pop r15 ; ret
0x000000000012aab5 : pop r15 ; ret
0x000000000012aca9 : pop r15 ; ret
0x000000000012ad67 : pop r15 ; ret
0x000000000012bc66 : pop r15 ; ret
0x000000000012beea : pop r15 ; ret
0x000000000012c12e : pop r15 ; ret
0x000000000012c82b : pop r15 ; ret
0x000000000012cf97 : pop r15 ; ret
0x000000000012d278 : pop r15 ; ret
0x000000000012e56e : pop r15 ; ret
0x000000000012e5c3 : pop r15 ; ret
0x000000000012e612 : pop r15 ; ret
0x000000000012eaf3 : pop r15 ; ret
0x000000000012ef26 : pop r15 ; ret
0x000000000012f116 : pop r15 ; ret
0x000000000012f132 : pop r15 ; ret
0x000000000012f2a6 : pop r15 ; ret
0x000000000012f2f9 : pop r15 ; ret
0x000000000012f445 : pop r15 ; ret
0x000000000012f551 : pop r15 ; ret
0x000000000012fed7 : pop r15 ; ret
0x0000000000130839 : pop r15 ; ret
0x0000000000130943 : pop r15 ; ret
0x0000000000130c64 : pop r15 ; ret
0x00000000001314ba : pop r15 ; ret
0x00000000001314ce : pop r15 ; ret
0x0000000000131ed8 : pop r15 ; ret
0x0000000000131ef9 : pop r15 ; ret
0x0000000000131f18 : pop r15 ; ret
0x0000000000132107 : pop r15 ; ret
0x0000000000132129 : pop r15 ; ret
0x0000000000132148 : pop r15 ; ret
0x000000000013263f : pop r15 ; ret
0x0000000000132c98 : pop r15 ; ret
0x0000000000132cc6 : pop r15 ; ret
0x0000000000132f8b : pop r15 ; ret
0x00000000001331ff : pop r15 ; ret
0x0000000000133228 : pop r15 ; ret
0x0000000000133452 : pop r15 ; ret
0x0000000000133c69 : pop r15 ; ret
0x0000000000133e84 : pop r15 ; ret
0x000000000013411d : pop r15 ; ret
0x0000000000134531 : pop r15 ; ret
0x0000000000135308 : pop r15 ; ret
0x0000000000135709 : pop r15 ; ret
0x00000000001357be : pop r15 ; ret
0x0000000000135d2d : pop r15 ; ret
0x0000000000136297 : pop r15 ; ret
0x0000000000136557 : pop r15 ; ret
0x00000000001367d9 : pop r15 ; ret
0x0000000000137c2d : pop r15 ; ret
0x0000000000137eb4 : pop r15 ; ret
0x00000000001380f2 : pop r15 ; ret
0x000000000013860c : pop r15 ; ret
0x0000000000138b4a : pop r15 ; ret
0x0000000000138cb3 : pop r15 ; ret
0x0000000000138d7c : pop r15 ; ret
0x0000000000138eae : pop r15 ; ret
0x00000000001390ec : pop r15 ; ret
0x00000000001399a1 : pop r15 ; ret
0x00000000001399b6 : pop r15 ; ret
0x0000000000139a00 : pop r15 ; ret
0x0000000000139a84 : pop r15 ; ret
0x0000000000139e2d : pop r15 ; ret
0x000000000013a70d : pop r15 ; ret
0x000000000013a883 : pop r15 ; ret
0x000000000013a8a1 : pop r15 ; ret
0x000000000013b5c3 : pop r15 ; ret
0x000000000013b60e : pop r15 ; ret
0x000000000013c94f : pop r15 ; ret
0x000000000013ce7f : pop r15 ; ret
0x000000000013dcb0 : pop r15 ; ret
0x000000000013dd16 : pop r15 ; ret
0x000000000013df23 : pop r15 ; ret
0x000000000013e241 : pop r15 ; ret
0x000000000013e3f1 : pop r15 ; ret
0x000000000013ef4e : pop r15 ; ret
0x000000000013efc5 : pop r15 ; ret
0x000000000013f0d3 : pop r15 ; ret
0x000000000013f879 : pop r15 ; ret
0x000000000014028f : pop r15 ; ret
0x000000000014048e : pop r15 ; ret
0x0000000000140552 : pop r15 ; ret
0x0000000000141524 : pop r15 ; ret
0x0000000000141996 : pop r15 ; ret
0x0000000000141b87 : pop r15 ; ret
0x0000000000141e57 : pop r15 ; ret
0x0000000000142c9b : pop r15 ; ret
0x00000000001431b6 : pop r15 ; ret
0x0000000000143399 : pop r15 ; ret
0x00000000001440c7 : pop r15 ; ret
0x000000000014427c : pop r15 ; ret
0x0000000000172f11 : pop r15 ; ret
0x0000000000173d3c : pop r15 ; ret
0x0000000000174cc4 : pop r15 ; ret
0x0000000000174cde : pop r15 ; ret
0x000000000017519d : pop r15 ; ret
0x000000000017523e : pop r15 ; ret
0x000000000003b588 : pop r15 ; ret
0x000000000003ba58 : pop r15 ; ret
0x000000000007eacc : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000135136 : pop r8 ; mov eax, 1 ; ret
0x00000000001946b7 : pop r9 ; clc ; ret 0x6e1f
0x00000000000edc8f : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x000000000013586e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000010f938 : pop rax ; add eax, dword ptr [rax] ; add al, ch ; jmp rdx
0x00000000001b2a68 : pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x0000000000135a34 : pop rax ; call rax
0x0000000000195b59 : pop rax ; cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195b95 : pop rax ; cld ; call qword ptr [rax]
0x0000000000195b55 : pop rax ; cld ; jmp qword ptr [rax]
0x00000000001a6b28 : pop rax ; cli ; call qword ptr [rax]
0x00000000001b59a8 : pop rax ; fcomi st(6) ; jmp rsi
0x00000000000b9fa9 : pop rax ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001aefc8 : pop rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a6728 : pop rax ; jae 0x1a671c ; jmp qword ptr [rdx]
0x00000000001b0cc8 : pop rax ; jb 0x1b0cc3 ; jmp qword ptr [rcx]
0x000000000019e568 : pop rax ; jl 0x19e557 ; jmp qword ptr [rsi]
0x0000000000135876 : pop rax ; jmp rcx
0x00000000001b1e58 : pop rax ; mov ch, 0xf5 ; call rdi
0x000000000007eacd : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000135137 : pop rax ; mov eax, 1 ; ret
0x000000000002def4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002def3 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de82 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012e7ce : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000101ff8 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000001194a7 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000011d170 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000e513e : pop rax ; or bh, dh ; ret
0x00000000000a4cc4 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000019d478 : pop rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a6e28 : pop rax ; out 0xee, al ; call qword ptr [rax]
0x0000000000197cc9 : pop rax ; out dx, al ; call rsp
0x00000000001b0968 : pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019cfc8 : pop rax ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00000000001b0608 : pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000001f92e : pop rax ; pop rbx ; pop rbp ; ret
0x00000000001743ad : pop rax ; pop rbx ; pop rbp ; ret
0x000000000005df1c : pop rax ; pop rdi ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x0000000000107419 : pop rax ; pop rdi ; call rax
0x00000000001435b1 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000001435f9 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000143823 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000033544 : pop rax ; ret
0x000000000003a728 : pop rax ; ret
0x000000000003a727 : pop rax ; ret
0x000000000003a7f8 : pop rax ; ret
0x000000000003a7f7 : pop rax ; ret
0x000000000003a8a1 : pop rax ; ret
0x000000000003a8a0 : pop rax ; ret
0x00000000000abc07 : pop rax ; ret
0x0000000000106273 : pop rax ; ret
0x0000000000106272 : pop rax ; ret
0x00000000001a1448 : pop rax ; ret
0x00000000000caabc : pop rax ; ret 0x2f
0x000000000019ab39 : pop rax ; stc ; jmp rsp
0x00000000001a0b98 : pop rax ; stosb byte ptr [rdi], al ; jmp 0x1a0b9e
0x00000000001019cb : pop rax ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001adbb8 : pop rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001bc1b8 : pop rax ; xchg ebx, edi ; call rcx
0x00000000000deab7 : pop rbp ; add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000de8ed : pop rbp ; add byte ptr [rcx], al ; ret 0xda39
0x00000000001192b6 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000198e7d : pop rbp ; add dword ptr [rax], eax ; adc al, 0x91 ; hlt ; jmp rsp
0x000000000009e409 : pop rbp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00000000001101cf : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012e87d : pop rbp ; add eax, edx ; ret
0x00000000001153e3 : pop rbp ; clc ; leave ; ret
0x000000000011553b : pop rbp ; clc ; leave ; ret
0x000000000019583d : pop rbp ; cld ; jmp qword ptr [rdx]
0x0000000000195781 : pop rbp ; cld ; jmp rax
0x000000000019b401 : pop rbp ; cli ; call rsp
0x000000000002e198 : pop rbp ; cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000048daa : pop rbp ; enter -0x74b8, 0x14 ; ret
0x0000000000186bd5 : pop rbp ; in eax, dx ; call qword ptr [rsi]
0x0000000000186aad : pop rbp ; in eax, dx ; jmp rdi
0x0000000000071fc4 : pop rbp ; jmp rax
0x00000000000842a2 : pop rbp ; jmp rax
0x00000000000859c6 : pop rbp ; jmp rax
0x000000000013a913 : pop rbp ; jmp rax
0x000000000013b178 : pop rbp ; jmp rax
0x000000000012bf65 : pop rbp ; jmp rcx
0x000000000012e0fb : pop rbp ; jmp rcx
0x000000000012d752 : pop rbp ; jmp rdx
0x000000000013d6fb : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000007ef05 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000084ca9 : pop rbp ; pop r12 ; jmp rax
0x0000000000086060 : pop rbp ; pop r12 ; jmp rax
0x000000000008683c : pop rbp ; pop r12 ; jmp rax
0x0000000000086b3b : pop rbp ; pop r12 ; jmp rcx
0x000000000010287e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102898 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000423cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042463 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b10eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b1183 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042349 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000000b1069 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010404a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000210fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021112 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002113a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021162 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002118a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021893 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022840 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002298e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023c17 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023e07 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023eaa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f04 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f1d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024041 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024081 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000245cc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000247c5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024862 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248c8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248e7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a11 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a51 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024f77 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002531b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000025b1c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002682d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026877 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027994 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000279d3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028013 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028854 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028894 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028ee3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000298cc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000029f9c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a065 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a179 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002aa1a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002ac84 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002bebd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d778 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e1c3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e423 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e7ca : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000306ef : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000307a0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000325c5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032be7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032c89 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003332e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000340a8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003721a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000037230 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000397de : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a49e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b525 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b581 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b9f5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ba51 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bb72 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bf95 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003c6f7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f255 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f9d7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000421ad : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000042c05 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004609b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046f80 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046fe7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000472c7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000047778 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486c2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000487cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000488a6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004915d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000492d1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000499b0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a317 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a341 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000052e03 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005316d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055058 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005526d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055421 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000554e7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005557e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006adf7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006b248 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006d4fe : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006e9b4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ec9d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ecf6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006f2f2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070c91 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070cfe : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071a62 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071d7c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071e23 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000725fd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000730d8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000731eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000733d1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073a8b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073b9c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073c82 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073e52 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007481d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074862 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074e4a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076cc3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078de4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079b70 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079b9f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079fbd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007a168 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007afd2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c256 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c9be : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007cdb6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007ce29 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007d88f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007e51f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007fea8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008037f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000813de : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000081ebd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000831e8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083358 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000833b2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083c15 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083d65 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000084786 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000085aed : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086c6f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087153 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008755a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087c8a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000881bc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088a09 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088edb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000893d0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b5f1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b688 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008dfee : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e12f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e148 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095433 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009551f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000956ff : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095fa2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096384 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000964dc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000969c7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096ac0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096d1f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096feb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000976d3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000097858 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009807c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab4e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab6f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad2f1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad5e3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad890 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000addb5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ade06 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae215 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae266 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae309 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae571 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aef28 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b0ed9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b1b8f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b3661 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b4008 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b6a95 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ba624 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf3e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf70 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc074 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc721 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc828 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bce62 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bd7c6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000be009 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef0d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef26 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bf1b4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c0010 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c322a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c7e08 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8696 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c893a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8bce : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8cf7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8ef3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8f19 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8fca : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c934c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca0d8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca139 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca1d2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca379 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca3d9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca472 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca5a3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca6a8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca7aa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca9e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cabf3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cac19 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb5e9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb649 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb6e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb888 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb8e9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb982 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cbeba : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cc9c3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccb63 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccd09 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9cc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9e7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d41d4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5b81 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5df3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5e28 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5f97 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d65af : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6de7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d743a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d7456 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d8de8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d9c36 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da5ba : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da879 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daa1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daae0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daea4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daee6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daf33 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000db0f3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbbb2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbf61 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc0c3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc466 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc68c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc78a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc8f8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddac4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddc55 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddce7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddd64 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddebe : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000de66f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df3d8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df42a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df688 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df6a7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa03 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa7d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfade : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0252 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e05da : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e1d65 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e412b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e41f5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4214 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4820 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4e9e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4f77 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e57b7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5b28 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5f1d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7f52 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e85eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e872a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e8830 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e918d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eab54 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eac1e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ed4ef : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000edefa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000efe69 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f06c9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f07ae : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f08a9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f1ac7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f40a5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f499e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5cbf : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7383 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7b52 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f86c0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f91c7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa17f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fab0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb01b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb8c9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fbe12 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ffbe2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100881 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100e99 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001016c3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101b88 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101c0f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102108 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010218b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001026fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010278f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102fe4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000103074 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000103088 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010405d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001049a3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a38 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a4f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000105760 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000107643 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000108691 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109ace : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109ae7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac69 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac7f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4d1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4e7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bb83 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bba9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c461 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c482 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c4a1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010cbba : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d533 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d559 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d76d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d800 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dbe1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc02 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc21 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010df84 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dfb6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e2ea : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e4f9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010eff0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010f5eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fd01 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fee6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ff8e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ffcd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110791 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001132e5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000113717 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000116764 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001168b4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001172f1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000117db8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118a04 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118cd9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118efa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011985b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119ad7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119be4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a11b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a25f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a2e8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a4e8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a61f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a6a0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ac91 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae50 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae94 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011af44 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b610 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b654 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b704 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba10 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba32 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba51 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c0f1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c112 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c131 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c4e5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c541 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c5d2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c904 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c961 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c9f2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011cf2b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d23b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d6b6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dc79 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dca0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dcf9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dd27 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e052 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e87f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8b1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8d9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ed3b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fa5b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fb28 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200d6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200e7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120467 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d51 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d72 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d91 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121509 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d0d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d8e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125303 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125345 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125427 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001254df : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001262e8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000126304 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000127198 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000127946 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001279ad : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001280a5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012840d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001286e7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000128719 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000128e02 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001291d9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001292ae : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a306 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a358 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a474 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a4df : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a5e6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a5ff : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a79d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a820 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a9ec : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aaae : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aca2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ad60 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bc5f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bee3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c127 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c824 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012cf90 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012d271 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e567 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e5bc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e60b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012eaec : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ef1f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f10f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f12b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f29f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f2f2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f43e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f54a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012fed0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130832 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013093c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130c5d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314b3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314c7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ed1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ef2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131f11 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132100 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132122 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132141 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132638 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132c91 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132cbf : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132f84 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001331f8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133221 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013344b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133c62 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133e7d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000134116 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013452a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135301 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135702 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001357b7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135d26 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136290 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136550 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001367d2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137c26 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137ead : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001380eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138605 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138b43 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138cac : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138ea7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001390e5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013999a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399af : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399f9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139a7d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139e26 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a706 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a87c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a89a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b5bc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b607 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013c948 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ce78 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dca9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dd0f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013df1c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e23a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e3ea : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ef47 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013efbe : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f0cc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f872 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000140288 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000140487 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014054b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014151d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014198f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141b80 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141e50 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000142c94 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001431af : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000143392 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001440c0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000144275 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000172f0a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000173d35 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cbd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cd7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000175196 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000175237 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000202e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000203e0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000022baf : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000032fca : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000033c3c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c12a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c179 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c1b1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c251 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f3ed : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f43c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f471 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f511 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004239a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000049839 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054cb7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054ccf : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bd1d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bf92 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e798 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e7dd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e7eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007188c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007357e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000735ac : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000073653 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007501f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007503a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075053 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000751e1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000751fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075213 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075df7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000767c2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076a67 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076b06 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076b38 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077294 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077a9f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077e2e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077ead : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000785aa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078be3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078fba : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079068 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b6df : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b7fc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d135 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d14d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d1b9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d1db : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d78e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d819 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e0a5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e0f3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082ce4 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082d72 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008557e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000086f75 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087a5f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087acd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087e76 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088d7a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089755 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000095a48 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096ba9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096bd3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096ee7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000097921 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acd06 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acd1a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acdff : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acefc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acf3f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae6fd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae74c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae781 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae821 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b10ba : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b37ea : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3839 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3871 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3911 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b9f55 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bc917 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bc9dd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bcc25 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bcc6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bddf1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bdf2f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7635 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7a37 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7ace : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7b0e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c8d5a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c955e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9be1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9c2e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9cbd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d7fd3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d9837 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d98b6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000da3bb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000da3ee : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de378 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de404 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de457 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e8297 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e82d5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8c3a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8c9a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8cfc : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd4a2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd65e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd6c8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe792 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe7e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe9b9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001002ff : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105628 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f5a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f70 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f96 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001082dd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010845d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000108993 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c877 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c8eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010d352 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e0a8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e0e1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e0fd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e3ca : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000110a61 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000110cfd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001110c9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000118bb1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011b11b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c32e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c75d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011e980 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011ea40 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000123167 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000123206 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124ed5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124f1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124f6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000125002 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012772d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001277d9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000129575 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012962d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012c9f5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ca1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012cdc2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012de50 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012e41d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ed3f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ed85 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000132a84 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133355 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133636 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133685 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013553e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137865 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013787a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139315 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001393de : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013948d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001395f6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139645 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a088 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a0c6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a4c7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a4df : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a68f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a6af : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b1e0 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b6fe : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b7a9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013c09c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013cc11 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013cc89 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013d33f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013d3a9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001408ac : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014227b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c1 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022689 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022702 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022b52 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029dad : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029dd1 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029e15 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029e9c : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a839 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a85f : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a8e1 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032dc5 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033b8f : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036bf4 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036c19 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000039df7 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000039e38 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a587 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003ae47 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003aecf : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a8db : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004fff5 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054b8d : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054bb0 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054d89 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054d9f : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000055b34 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005b777 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005b85e : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000634b2 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006bbd4 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dd64 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e292 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e2a7 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e2b8 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006efcf : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006effb : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000701e6 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070204 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007027f : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070e2f : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070e5b : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000717ce : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071914 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000734a9 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000750f1 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007510a : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007511b : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000075451 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000757df : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007641b : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007690f : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000769c8 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077934 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077965 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078a64 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007a456 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007bbd0 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c440 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c721 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d032 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d578 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e222 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084541 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000845d6 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000845ec : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084e4d : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000850a8 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000850bd : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000850e4 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000087794 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f09f : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f134 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f2d6 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f305 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f3cd : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f44f : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f468 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f4b2 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f518 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aa87e : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aa99d : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aa9cd : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b9e83 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b9ef3 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba3b7 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba437 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba451 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000baed9 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c30 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c65 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c9c : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c8506 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c989a : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9a0b : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cb06b : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cb1ea : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cba83 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cbae1 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cc1dd : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d7147 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e834e : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e8373 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e8a75 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efb16 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efde4 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efdff : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f036a : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f037a : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0409 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0450 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f74a2 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f85aa : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f9b66 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f9bbe : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb673 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb687 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb6fa : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc2ec : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc4df : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc59b : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc5cf : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fd0bf : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fd16f : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fef96 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fefa7 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff8d9 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ffa19 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ffe8f : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ffec3 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010126f : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104e32 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104e9a : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105cd0 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001088e5 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000108a3b : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000109503 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001098a8 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001098f9 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ad4d : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ad5f : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b5ad : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b5bf : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b80b : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b995 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010bdf9 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010c0c8 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ce84 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ce9f : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010d1bb : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010eb59 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010eb6f : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001163fa : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011706a : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001170bf : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117401 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117484 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117551 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117822 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117837 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117848 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118521 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001185a7 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118671 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011a00a : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011b8aa : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011bf7b : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011d0db : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011d126 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000120bdb : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000123369 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b0e0 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b16e : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b1ee : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b273 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b2f3 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b373 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b3f3 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b46e : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b4f8 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b56e : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b5ee : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b678 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b6f3 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b76e : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012c25c : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f70b : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001307a0 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001307dd : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013197b : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131afa : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000132902 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000132918 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000134309 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000134abf : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000134ecc : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013549c : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001354b0 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013798c : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137acc : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000138455 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001384a8 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000138515 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000139283 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000139298 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a1da : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a247 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b49b : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b4c3 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b4e4 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001426b9 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014296c : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017400c : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000174770 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b65d3 : pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bb56b : pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bb643 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb11 : pop rbp ; pop r12 ; ret
0x000000000001fb77 : pop rbp ; pop r12 ; ret
0x000000000001fc07 : pop rbp ; pop r12 ; ret
0x0000000000035a98 : pop rbp ; pop r12 ; ret
0x0000000000035b21 : pop rbp ; pop r12 ; ret
0x0000000000035c4a : pop rbp ; pop r12 ; ret
0x0000000000035c9b : pop rbp ; pop r12 ; ret
0x0000000000035ec4 : pop rbp ; pop r12 ; ret
0x0000000000036ded : pop rbp ; pop r12 ; ret
0x0000000000039cf4 : pop rbp ; pop r12 ; ret
0x000000000003a270 : pop rbp ; pop r12 ; ret
0x000000000003a2c4 : pop rbp ; pop r12 ; ret
0x000000000003adb2 : pop rbp ; pop r12 ; ret
0x000000000004509b : pop rbp ; pop r12 ; ret
0x0000000000047a14 : pop rbp ; pop r12 ; ret
0x00000000000480dd : pop rbp ; pop r12 ; ret
0x000000000004827d : pop rbp ; pop r12 ; ret
0x0000000000052c92 : pop rbp ; pop r12 ; ret
0x000000000006a973 : pop rbp ; pop r12 ; ret
0x000000000006aad5 : pop rbp ; pop r12 ; ret
0x000000000006ab47 : pop rbp ; pop r12 ; ret
0x000000000006c47d : pop rbp ; pop r12 ; ret
0x000000000006c4a7 : pop rbp ; pop r12 ; ret
0x000000000006cb8d : pop rbp ; pop r12 ; ret
0x000000000006cc0f : pop rbp ; pop r12 ; ret
0x000000000006d200 : pop rbp ; pop r12 ; ret
0x000000000006d366 : pop rbp ; pop r12 ; ret
0x000000000006db99 : pop rbp ; pop r12 ; ret
0x000000000006dc0b : pop rbp ; pop r12 ; ret
0x000000000006df3d : pop rbp ; pop r12 ; ret
0x000000000006df83 : pop rbp ; pop r12 ; ret
0x000000000006dfed : pop rbp ; pop r12 ; ret
0x000000000006e0dd : pop rbp ; pop r12 ; ret
0x000000000006e13c : pop rbp ; pop r12 ; ret
0x000000000006ee7b : pop rbp ; pop r12 ; ret
0x000000000006eecb : pop rbp ; pop r12 ; ret
0x000000000006f1ab : pop rbp ; pop r12 ; ret
0x000000000006f1b8 : pop rbp ; pop r12 ; ret
0x000000000006f669 : pop rbp ; pop r12 ; ret
0x000000000006f77d : pop rbp ; pop r12 ; ret
0x000000000006f7dd : pop rbp ; pop r12 ; ret
0x000000000006fa1b : pop rbp ; pop r12 ; ret
0x000000000006fa67 : pop rbp ; pop r12 ; ret
0x000000000006fc86 : pop rbp ; pop r12 ; ret
0x000000000006fdc6 : pop rbp ; pop r12 ; ret
0x000000000006fe10 : pop rbp ; pop r12 ; ret
0x0000000000070839 : pop rbp ; pop r12 ; ret
0x00000000000708ae : pop rbp ; pop r12 ; ret
0x0000000000070986 : pop rbp ; pop r12 ; ret
0x0000000000070a7b : pop rbp ; pop r12 ; ret
0x0000000000070ac2 : pop rbp ; pop r12 ; ret
0x0000000000070b72 : pop rbp ; pop r12 ; ret
0x0000000000070b86 : pop rbp ; pop r12 ; ret
0x0000000000072adc : pop rbp ; pop r12 ; ret
0x0000000000072b81 : pop rbp ; pop r12 ; ret
0x0000000000073755 : pop rbp ; pop r12 ; ret
0x0000000000074b54 : pop rbp ; pop r12 ; ret
0x0000000000074b85 : pop rbp ; pop r12 ; ret
0x0000000000076ba9 : pop rbp ; pop r12 ; ret
0x00000000000779ca : pop rbp ; pop r12 ; ret
0x0000000000077c8e : pop rbp ; pop r12 ; ret
0x0000000000077cc1 : pop rbp ; pop r12 ; ret
0x0000000000078163 : pop rbp ; pop r12 ; ret
0x000000000007818f : pop rbp ; pop r12 ; ret
0x00000000000781d2 : pop rbp ; pop r12 ; ret
0x0000000000078266 : pop rbp ; pop r12 ; ret
0x00000000000782f4 : pop rbp ; pop r12 ; ret
0x000000000007830b : pop rbp ; pop r12 ; ret
0x0000000000079947 : pop rbp ; pop r12 ; ret
0x000000000007a366 : pop rbp ; pop r12 ; ret
0x000000000007a791 : pop rbp ; pop r12 ; ret
0x000000000007b59a : pop rbp ; pop r12 ; ret
0x000000000007b9b5 : pop rbp ; pop r12 ; ret
0x000000000007ba68 : pop rbp ; pop r12 ; ret
0x000000000007d39d : pop rbp ; pop r12 ; ret
0x000000000007eeda : pop rbp ; pop r12 ; ret
0x0000000000084baa : pop rbp ; pop r12 ; ret
0x0000000000085f47 : pop rbp ; pop r12 ; ret
0x0000000000086733 : pop rbp ; pop r12 ; ret
0x0000000000086a13 : pop rbp ; pop r12 ; ret
0x0000000000086a7d : pop rbp ; pop r12 ; ret
0x0000000000088488 : pop rbp ; pop r12 ; ret
0x0000000000088bc4 : pop rbp ; pop r12 ; ret
0x00000000000891fa : pop rbp ; pop r12 ; ret
0x00000000000892af : pop rbp ; pop r12 ; ret
0x0000000000089651 : pop rbp ; pop r12 ; ret
0x00000000000896d6 : pop rbp ; pop r12 ; ret
0x0000000000089700 : pop rbp ; pop r12 ; ret
0x000000000008981f : pop rbp ; pop r12 ; ret
0x000000000008985e : pop rbp ; pop r12 ; ret
0x000000000008b525 : pop rbp ; pop r12 ; ret
0x00000000000943e9 : pop rbp ; pop r12 ; ret
0x0000000000094d63 : pop rbp ; pop r12 ; ret
0x0000000000094f8d : pop rbp ; pop r12 ; ret
0x0000000000096a4c : pop rbp ; pop r12 ; ret
0x0000000000096c77 : pop rbp ; pop r12 ; ret
0x0000000000096ce6 : pop rbp ; pop r12 ; ret
0x0000000000096e40 : pop rbp ; pop r12 ; ret
0x00000000000abce5 : pop rbp ; pop r12 ; ret
0x00000000000ac679 : pop rbp ; pop r12 ; ret
0x00000000000acb10 : pop rbp ; pop r12 ; ret
0x00000000000ad0eb : pop rbp ; pop r12 ; ret
0x00000000000ad15d : pop rbp ; pop r12 ; ret
0x00000000000b9e21 : pop rbp ; pop r12 ; ret
0x00000000000c8337 : pop rbp ; pop r12 ; ret
0x00000000000c9629 : pop rbp ; pop r12 ; ret
0x00000000000cc0e8 : pop rbp ; pop r12 ; ret
0x00000000000cc838 : pop rbp ; pop r12 ; ret
0x00000000000cdc5d : pop rbp ; pop r12 ; ret
0x00000000000cdc82 : pop rbp ; pop r12 ; ret
0x00000000000cdcb6 : pop rbp ; pop r12 ; ret
0x00000000000cdd02 : pop rbp ; pop r12 ; ret
0x00000000000ce6dc : pop rbp ; pop r12 ; ret
0x00000000000ce6fa : pop rbp ; pop r12 ; ret
0x00000000000ce722 : pop rbp ; pop r12 ; ret
0x00000000000ce772 : pop rbp ; pop r12 ; ret
0x00000000000d17a4 : pop rbp ; pop r12 ; ret
0x00000000000d18a4 : pop rbp ; pop r12 ; ret
0x00000000000d5c26 : pop rbp ; pop r12 ; ret
0x00000000000d5c40 : pop rbp ; pop r12 ; ret
0x00000000000d5c70 : pop rbp ; pop r12 ; ret
0x00000000000d6f90 : pop rbp ; pop r12 ; ret
0x00000000000d6fd3 : pop rbp ; pop r12 ; ret
0x00000000000d7cb3 : pop rbp ; pop r12 ; ret
0x00000000000dc126 : pop rbp ; pop r12 ; ret
0x00000000000e7bbf : pop rbp ; pop r12 ; ret
0x00000000000e8483 : pop rbp ; pop r12 ; ret
0x00000000000efcc1 : pop rbp ; pop r12 ; ret
0x00000000000efcea : pop rbp ; pop r12 ; ret
0x00000000000f5d6d : pop rbp ; pop r12 ; ret
0x00000000000f6a11 : pop rbp ; pop r12 ; ret
0x00000000000f6e74 : pop rbp ; pop r12 ; ret
0x00000000000f6ebf : pop rbp ; pop r12 ; ret
0x00000000000f713b : pop rbp ; pop r12 ; ret
0x00000000000f71b4 : pop rbp ; pop r12 ; ret
0x00000000000f8231 : pop rbp ; pop r12 ; ret
0x00000000000faef0 : pop rbp ; pop r12 ; ret
0x00000000000fb7ca : pop rbp ; pop r12 ; ret
0x00000000000fb82e : pop rbp ; pop r12 ; ret
0x00000000000fc438 : pop rbp ; pop r12 ; ret
0x00000000000fc457 : pop rbp ; pop r12 ; ret
0x00000000000fc477 : pop rbp ; pop r12 ; ret
0x00000000000fc8f0 : pop rbp ; pop r12 ; ret
0x00000000000fc947 : pop rbp ; pop r12 ; ret
0x00000000000fcb4d : pop rbp ; pop r12 ; ret
0x00000000000fcded : pop rbp ; pop r12 ; ret
0x00000000000fce0b : pop rbp ; pop r12 ; ret
0x00000000000fcecf : pop rbp ; pop r12 ; ret
0x00000000000fcf01 : pop rbp ; pop r12 ; ret
0x00000000000fd552 : pop rbp ; pop r12 ; ret
0x00000000000ff437 : pop rbp ; pop r12 ; ret
0x00000000000ff5bf : pop rbp ; pop r12 ; ret
0x00000000001015e5 : pop rbp ; pop r12 ; ret
0x0000000000101993 : pop rbp ; pop r12 ; ret
0x00000000001019cf : pop rbp ; pop r12 ; ret
0x0000000000101f3d : pop rbp ; pop r12 ; ret
0x0000000000101f71 : pop rbp ; pop r12 ; ret
0x000000000010314d : pop rbp ; pop r12 ; ret
0x000000000010315c : pop rbp ; pop r12 ; ret
0x0000000000104c32 : pop rbp ; pop r12 ; ret
0x000000000010548c : pop rbp ; pop r12 ; ret
0x0000000000108648 : pop rbp ; pop r12 ; ret
0x000000000010c9a0 : pop rbp ; pop r12 ; ret
0x000000000010c9dc : pop rbp ; pop r12 ; ret
0x000000000010ebc5 : pop rbp ; pop r12 ; ret
0x000000000010ec06 : pop rbp ; pop r12 ; ret
0x0000000000112e8a : pop rbp ; pop r12 ; ret
0x000000000011532b : pop rbp ; pop r12 ; ret
0x0000000000115735 : pop rbp ; pop r12 ; ret
0x000000000011597e : pop rbp ; pop r12 ; ret
0x0000000000116a14 : pop rbp ; pop r12 ; ret
0x0000000000116a69 : pop rbp ; pop r12 ; ret
0x0000000000116d51 : pop rbp ; pop r12 ; ret
0x0000000000116d9a : pop rbp ; pop r12 ; ret
0x0000000000117f14 : pop rbp ; pop r12 ; ret
0x0000000000117f69 : pop rbp ; pop r12 ; ret
0x0000000000118251 : pop rbp ; pop r12 ; ret
0x000000000011829a : pop rbp ; pop r12 ; ret
0x00000000001192bb : pop rbp ; pop r12 ; ret
0x00000000001192ee : pop rbp ; pop r12 ; ret
0x0000000000119e1a : pop rbp ; pop r12 ; ret
0x000000000011d341 : pop rbp ; pop r12 ; ret
0x000000000011d3c8 : pop rbp ; pop r12 ; ret
0x000000000011d3f0 : pop rbp ; pop r12 ; ret
0x0000000000121a3e : pop rbp ; pop r12 ; ret
0x0000000000121a6f : pop rbp ; pop r12 ; ret
0x0000000000121e12 : pop rbp ; pop r12 ; ret
0x0000000000121e3b : pop rbp ; pop r12 ; ret
0x0000000000121e76 : pop rbp ; pop r12 ; ret
0x0000000000126971 : pop rbp ; pop r12 ; ret
0x0000000000127ab7 : pop rbp ; pop r12 ; ret
0x0000000000127af7 : pop rbp ; pop r12 ; ret
0x0000000000127af7 : pop rbp ; pop r12 ; ret
0x0000000000128a56 : pop rbp ; pop r12 ; ret
0x0000000000128a76 : pop rbp ; pop r12 ; ret
0x000000000012ccb9 : pop rbp ; pop r12 ; ret
0x000000000012cd22 : pop rbp ; pop r12 ; ret
0x000000000012da03 : pop rbp ; pop r12 ; ret
0x000000000012e1aa : pop rbp ; pop r12 ; ret
0x000000000012e1c3 : pop rbp ; pop r12 ; ret
0x000000000012e705 : pop rbp ; pop r12 ; ret
0x000000000012e726 : pop rbp ; pop r12 ; ret
0x000000000012e8bb : pop rbp ; pop r12 ; ret
0x000000000012ec93 : pop rbp ; pop r12 ; ret
0x000000000012eddb : pop rbp ; pop r12 ; ret
0x00000000001330a4 : pop rbp ; pop r12 ; ret
0x00000000001330d7 : pop rbp ; pop r12 ; ret
0x00000000001338fb : pop rbp ; pop r12 ; ret
0x00000000001339c8 : pop rbp ; pop r12 ; ret
0x0000000000133ae3 : pop rbp ; pop r12 ; ret
0x0000000000133b6f : pop rbp ; pop r12 ; ret
0x0000000000137676 : pop rbp ; pop r12 ; ret
0x00000000001376bf : pop rbp ; pop r12 ; ret
0x0000000000137ccd : pop rbp ; pop r12 ; ret
0x0000000000137cf1 : pop rbp ; pop r12 ; ret
0x00000000001386f4 : pop rbp ; pop r12 ; ret
0x0000000000139204 : pop rbp ; pop r12 ; ret
0x000000000013921e : pop rbp ; pop r12 ; ret
0x000000000013b327 : pop rbp ; pop r12 ; ret
0x000000000013bfa0 : pop rbp ; pop r12 ; ret
0x000000000013bfbe : pop rbp ; pop r12 ; ret
0x000000000013bfe5 : pop rbp ; pop r12 ; ret
0x000000000013c21d : pop rbp ; pop r12 ; ret
0x0000000000140e04 : pop rbp ; pop r12 ; ret
0x0000000000140e64 : pop rbp ; pop r12 ; ret
0x000000000014484a : pop rbp ; pop r12 ; ret
0x00000000001448af : pop rbp ; pop r12 ; ret
0x000000000014491f : pop rbp ; pop r12 ; ret
0x000000000014498f : pop rbp ; pop r12 ; ret
0x00000000001449ff : pop rbp ; pop r12 ; ret
0x0000000000144a6a : pop rbp ; pop r12 ; ret
0x0000000000144ad4 : pop rbp ; pop r12 ; ret
0x0000000000144b3a : pop rbp ; pop r12 ; ret
0x0000000000144b9a : pop rbp ; pop r12 ; ret
0x0000000000144c04 : pop rbp ; pop r12 ; ret
0x0000000000144c6f : pop rbp ; pop r12 ; ret
0x0000000000144cda : pop rbp ; pop r12 ; ret
0x00000000001740f0 : pop rbp ; pop r12 ; ret
0x00000000001747f1 : pop rbp ; pop r12 ; ret
0x000000000012cb06 : pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000423cf : pop rbp ; pop r14 ; fmul st(0) ; ret
0x0000000000042467 : pop rbp ; pop r14 ; fmul st(0) ; ret
0x00000000000b10ef : pop rbp ; pop r14 ; fmul st(0) ; ret
0x00000000000b1187 : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000004234d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x00000000000b106d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000010404e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000020252 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e65 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e9c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000213bc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000223fe : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022ccc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023048 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000236d4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c6e : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c85 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b5d7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b60f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c01d : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c0f2 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c142 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c450 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c6ca : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c8bf : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002cc74 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d051 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d15a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002efbe : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002f263 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002ff9c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000030a8b : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032296 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032443 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000395e9 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000003964a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039abe : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000045616 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000457fb : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004584f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000048cdb : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004a9a0 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004aa75 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ac9d : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004b6fc : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d284 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d335 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000503ad : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050cd0 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e06 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e58 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050fbb : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055bf9 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e17 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e58 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000056ae4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058ae0 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058b06 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058beb : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000005bbaa : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000637af : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000752aa : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000776e4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000088841 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000989f3 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000b7392 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba04d : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba0ab : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf7f2 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf85d : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c52aa : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cc51e : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ccdba : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cdf41 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ceada : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cece2 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf23d : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf323 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf86f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d1aeb : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d2290 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d38c8 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d55b6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5647 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5665 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8920 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8c4e : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8cc7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dcdc5 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dd00a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e94ce : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e956f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e959f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e98b4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaab3 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaadd : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eadf1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef2c1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef6d6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1510 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f156a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1630 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f172b : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f603b : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f9914 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fd954 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fda1f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febde : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febf5 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000103220 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010340c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000104b18 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001052d5 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105376 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105a76 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105b9f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010920a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a08e : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a207 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a2df : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000110052 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001102d6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000111827 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000113e5e : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000115e63 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011db22 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011f591 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000120fc7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000121245 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001213ac : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220a7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220cb : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012239e : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123668 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001236c6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001237e2 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012387a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001239f7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123b7b : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124356 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124390 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124634 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124ab1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124d32 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128eee : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128fd7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129718 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012998d : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129aa4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129abd : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129ca4 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129dad : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129de5 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012a0f7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c3e8 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c675 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c6c8 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013287e : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000132895 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013468e : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001346da : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001347ae : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013484e : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013d515 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013e831 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f441 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f718 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013fa6f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013ff2a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140bad : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140c47 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142aa2 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b2c : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000143908 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144735 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000014476a : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144782 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fe : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000021116 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002113e : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000021166 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002118e : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000021897 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000022844 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000022992 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000023c1b : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000023e0b : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000023eae : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000023f08 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000023f21 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000024045 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000024085 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000245d0 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000247c9 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000024866 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000248cc : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000248eb : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000024a15 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000024a55 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000024f7b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002531f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000025b20 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000026831 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002687b : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000027998 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000279d7 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000028017 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000028858 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000028898 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000028ee7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000298d0 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000029fa0 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002a069 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002a17d : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002aa1e : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002ac88 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002bec1 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002d77c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002e1c7 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002e427 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002e7ce : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000306f3 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000307a4 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000325c9 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000032beb : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000032c8d : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000033332 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000340ac : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003721e : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000037234 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003785d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000397e2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003a4a2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003b529 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003b585 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003b9f9 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003ba55 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003bb76 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003bf99 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003c6fb : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003f259 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003f9db : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000421b1 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000042c09 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000004609f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000046f84 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000046feb : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000472cb : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000004777c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000486c6 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000486df : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000487cf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000488aa : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000049161 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000492d5 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000499b4 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000004a31b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000004a345 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000052e07 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000053171 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000005505c : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000055271 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000055425 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000554eb : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000055582 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000006adfb : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000006b24c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000006d502 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000006e9b8 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000006eca1 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000006ecfa : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000006f2f6 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000070c95 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000070d02 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000071a66 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000071d80 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000071e27 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000072601 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000072771 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000730dc : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000731ef : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000733d5 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000073a8f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000073ba0 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000073c86 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000073e56 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000074821 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000074866 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000074e4e : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000076cc7 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000078de8 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007926a : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000079b74 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000079ba3 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000079fc1 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007a16c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007afd6 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007c25a : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007c9c2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007cdba : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007ce2d : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007d893 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007e523 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007f357 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007feac : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000080383 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000813e2 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000081ec1 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000831ec : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000008335c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000833b6 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000083c19 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000083d69 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000008478a : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000085af1 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000086c73 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000087157 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000008755e : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000087c8e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000881c0 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000088a0d : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000088edf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000893d4 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000008b5f5 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000008b68c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000008dff2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000008e133 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000008e14c : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000095437 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000095523 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000095703 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000095fa6 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000096388 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000964e0 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000969cb : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000096ac4 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000096d23 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000096fef : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000976d7 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000009785c : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000098080 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000aab52 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000aab73 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ad2f5 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ad5e7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ad894 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000addb9 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ade0a : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ae219 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ae26a : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ae30d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ae575 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000aef2c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000b0edd : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000b1b93 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000b3665 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000b400c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000b6a99 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ba628 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000baf42 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000baf74 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000bc078 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000bc725 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000bc82c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000bce66 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000bd7ca : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000be00d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000bef11 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000bef2a : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000bf1b8 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c0014 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c322e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c7e0c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c869a : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c893e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c8bd2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c8cfb : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c8ef7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c8f1d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c8fce : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c9350 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca0dc : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca13d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca1d6 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca37d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca3dd : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca476 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca5a7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca6ac : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca7ae : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ca9e6 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cabf7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cac1d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cb5ed : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cb64d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cb6e6 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cb88c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cb8ed : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cb986 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cbebe : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cc9c7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ccb67 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ccd0d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ce9d0 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ce9eb : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d41d8 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d5b85 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d5df7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d5e2c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d5f9b : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d65b3 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d6deb : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d743e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d745a : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d8dec : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000d9c3a : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000da5be : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000da87d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000daa1f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000daae4 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000daea8 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000daeea : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000daf37 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000db0f7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dbbb6 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dbf65 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dc0c7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dc46a : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dc690 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dc78e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dc8fc : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ddac8 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ddc59 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ddceb : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ddd68 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ddec2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000de673 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000df3dc : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000df42e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000df68c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000df6ab : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dfa07 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dfa81 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000dfae2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e0256 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e05de : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e1d69 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e412f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e41f9 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e4218 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e4824 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e4ea2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e4f7b : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e57bb : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e5b2c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e5f21 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e7f56 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e85ef : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e872e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e8834 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000e9191 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000eab58 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000eac22 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ed4f3 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000edefe : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000efe6d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f06cd : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f07b2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f08ad : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f1acb : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f40a9 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f49a2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f5cc3 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f7387 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f7b56 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f86c4 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000f91cb : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000fa183 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000fab0f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000fb01f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000fb8cd : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000fbe16 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000ffbe6 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000100885 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000100e9d : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001016c7 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000101b8c : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000101c13 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010210c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010218f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001026fe : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000102793 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000102fe8 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000103078 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010308c : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000104061 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001049a7 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000104a3c : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000104a53 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000105764 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000107647 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000108695 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000109ad2 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000109aeb : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010ac6d : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010ac83 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010b4d5 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010b4eb : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010bb87 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010bbad : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010c465 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010c486 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010c4a5 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010cbbe : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010d537 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010d55d : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010d771 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010d804 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010dbe5 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010dc06 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010dc25 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010df88 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010dfba : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010e2ee : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010e4fd : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010eff4 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010f5ef : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010fd05 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010feea : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010ff92 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000010ffd1 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000110795 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001132e9 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011371b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011616c : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000116768 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001168b8 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001172f5 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000117dbc : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000118a08 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000118cdd : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000118efe : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011985f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000119adb : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000119be8 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011a11f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011a263 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011a2ec : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011a4ec : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011a623 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011a6a4 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011ac95 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011ae54 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011ae98 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011af48 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011b614 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011b658 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011b708 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011ba14 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011ba36 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011ba55 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011c0f5 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011c116 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011c135 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011c4e9 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011c545 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011c5d6 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011c908 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011c965 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011c9f6 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011cf2f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011d23f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011d6ba : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011dc7d : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011dca4 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011dcfd : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011dd2b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011e056 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011e883 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011e8b5 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011e8dd : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011ed3f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011fa5f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000011fb2c : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001200da : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001200eb : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012046b : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000120d55 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000120d76 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000120d95 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012150d : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000121d11 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000121d92 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000125307 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000125349 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012542b : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001254e3 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001262ec : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000126308 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012719c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012794a : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001279b1 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001280a9 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000128411 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001286eb : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012871d : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000128e06 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001291dd : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001292b2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012a30a : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012a35c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012a478 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012a4e3 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012a5ea : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012a603 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012a7a1 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012a824 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012a9f0 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012aab2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012aca6 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012ad64 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012bc63 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012bee7 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012c12b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012c828 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012cf94 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012d275 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012e56b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012e5c0 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012e60f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012eaf0 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012ef23 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012f113 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012f12f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012f2a3 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012f2f6 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012f442 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012f54e : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000012fed4 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000130836 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000130940 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000130c61 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001314b7 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001314cb : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000131ed5 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000131ef6 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000131f15 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000132104 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000132126 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000132145 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013263c : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000132c95 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000132cc3 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000132f88 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001331fc : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000133225 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013344f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000133c66 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000133e81 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013411a : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013452e : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000135305 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000135706 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001357bb : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000135d2a : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000136294 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000136554 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001367d6 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000137c2a : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000137eb1 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001380ef : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000138609 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000138b47 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000138cb0 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000138d79 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000138eab : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001390e9 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013999e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001399b3 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001399fd : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000139a81 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000139e2a : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013a70a : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013a880 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013a89e : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013b5c0 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013b60b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013c94c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013ce7c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013dcad : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013dd13 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013df20 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013e23e : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013e3ee : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013ef4b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013efc2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013f0d0 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000013f876 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000014028c : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000014048b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000014054f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000141521 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000141993 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000141b84 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000141e54 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000142c98 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001431b3 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000143396 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001440c4 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000144279 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000172f0e : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000173d39 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000174cc1 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000174cdb : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000017519a : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000017523b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003b585 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003ba55 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cd6b5 : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000000202e6 : pop rbp ; pop r14 ; ret
0x00000000000203e4 : pop rbp ; pop r14 ; ret
0x0000000000022bb3 : pop rbp ; pop r14 ; ret
0x0000000000032fce : pop rbp ; pop r14 ; ret
0x0000000000033c40 : pop rbp ; pop r14 ; ret
0x000000000003c12e : pop rbp ; pop r14 ; ret
0x000000000003c17d : pop rbp ; pop r14 ; ret
0x000000000003c1b5 : pop rbp ; pop r14 ; ret
0x000000000003c255 : pop rbp ; pop r14 ; ret
0x000000000003f3f1 : pop rbp ; pop r14 ; ret
0x000000000003f440 : pop rbp ; pop r14 ; ret
0x000000000003f475 : pop rbp ; pop r14 ; ret
0x000000000003f515 : pop rbp ; pop r14 ; ret
0x000000000004239e : pop rbp ; pop r14 ; ret
0x000000000004983d : pop rbp ; pop r14 ; ret
0x0000000000054cbb : pop rbp ; pop r14 ; ret
0x0000000000054cd3 : pop rbp ; pop r14 ; ret
0x000000000006bd21 : pop rbp ; pop r14 ; ret
0x000000000006bf96 : pop rbp ; pop r14 ; ret
0x000000000006e79c : pop rbp ; pop r14 ; ret
0x000000000006e7e1 : pop rbp ; pop r14 ; ret
0x000000000006e7ef : pop rbp ; pop r14 ; ret
0x0000000000071890 : pop rbp ; pop r14 ; ret
0x0000000000073582 : pop rbp ; pop r14 ; ret
0x00000000000735b0 : pop rbp ; pop r14 ; ret
0x0000000000073657 : pop rbp ; pop r14 ; ret
0x0000000000075023 : pop rbp ; pop r14 ; ret
0x000000000007503e : pop rbp ; pop r14 ; ret
0x0000000000075057 : pop rbp ; pop r14 ; ret
0x00000000000751e5 : pop rbp ; pop r14 ; ret
0x00000000000751fe : pop rbp ; pop r14 ; ret
0x0000000000075217 : pop rbp ; pop r14 ; ret
0x0000000000075dfb : pop rbp ; pop r14 ; ret
0x00000000000767c6 : pop rbp ; pop r14 ; ret
0x0000000000076a6b : pop rbp ; pop r14 ; ret
0x0000000000076b0a : pop rbp ; pop r14 ; ret
0x0000000000076b3c : pop rbp ; pop r14 ; ret
0x0000000000077298 : pop rbp ; pop r14 ; ret
0x0000000000077aa3 : pop rbp ; pop r14 ; ret
0x0000000000077e32 : pop rbp ; pop r14 ; ret
0x0000000000077eb1 : pop rbp ; pop r14 ; ret
0x00000000000785ae : pop rbp ; pop r14 ; ret
0x0000000000078be7 : pop rbp ; pop r14 ; ret
0x0000000000078fbe : pop rbp ; pop r14 ; ret
0x000000000007906c : pop rbp ; pop r14 ; ret
0x000000000007b6e3 : pop rbp ; pop r14 ; ret
0x000000000007b800 : pop rbp ; pop r14 ; ret
0x000000000007d139 : pop rbp ; pop r14 ; ret
0x000000000007d151 : pop rbp ; pop r14 ; ret
0x000000000007d1bd : pop rbp ; pop r14 ; ret
0x000000000007d1df : pop rbp ; pop r14 ; ret
0x000000000007d792 : pop rbp ; pop r14 ; ret
0x000000000007d81d : pop rbp ; pop r14 ; ret
0x000000000007e0a9 : pop rbp ; pop r14 ; ret
0x000000000007e0f7 : pop rbp ; pop r14 ; ret
0x0000000000082ce8 : pop rbp ; pop r14 ; ret
0x0000000000082d76 : pop rbp ; pop r14 ; ret
0x0000000000085582 : pop rbp ; pop r14 ; ret
0x0000000000086f79 : pop rbp ; pop r14 ; ret
0x0000000000087a63 : pop rbp ; pop r14 ; ret
0x0000000000087ad1 : pop rbp ; pop r14 ; ret
0x0000000000087e7a : pop rbp ; pop r14 ; ret
0x0000000000088d7e : pop rbp ; pop r14 ; ret
0x0000000000089759 : pop rbp ; pop r14 ; ret
0x0000000000095a4c : pop rbp ; pop r14 ; ret
0x0000000000096bad : pop rbp ; pop r14 ; ret
0x0000000000096bd7 : pop rbp ; pop r14 ; ret
0x0000000000096eeb : pop rbp ; pop r14 ; ret
0x0000000000097925 : pop rbp ; pop r14 ; ret
0x00000000000acd0a : pop rbp ; pop r14 ; ret
0x00000000000acd1e : pop rbp ; pop r14 ; ret
0x00000000000ace03 : pop rbp ; pop r14 ; ret
0x00000000000acf00 : pop rbp ; pop r14 ; ret
0x00000000000acf43 : pop rbp ; pop r14 ; ret
0x00000000000ae701 : pop rbp ; pop r14 ; ret
0x00000000000ae750 : pop rbp ; pop r14 ; ret
0x00000000000ae785 : pop rbp ; pop r14 ; ret
0x00000000000ae825 : pop rbp ; pop r14 ; ret
0x00000000000b10be : pop rbp ; pop r14 ; ret
0x00000000000b37ee : pop rbp ; pop r14 ; ret
0x00000000000b383d : pop rbp ; pop r14 ; ret
0x00000000000b3875 : pop rbp ; pop r14 ; ret
0x00000000000b3915 : pop rbp ; pop r14 ; ret
0x00000000000b9f59 : pop rbp ; pop r14 ; ret
0x00000000000bc91b : pop rbp ; pop r14 ; ret
0x00000000000bc9e1 : pop rbp ; pop r14 ; ret
0x00000000000bcc29 : pop rbp ; pop r14 ; ret
0x00000000000bcc6f : pop rbp ; pop r14 ; ret
0x00000000000bddf5 : pop rbp ; pop r14 ; ret
0x00000000000bdf33 : pop rbp ; pop r14 ; ret
0x00000000000c7639 : pop rbp ; pop r14 ; ret
0x00000000000c7a3b : pop rbp ; pop r14 ; ret
0x00000000000c7ad2 : pop rbp ; pop r14 ; ret
0x00000000000c7b12 : pop rbp ; pop r14 ; ret
0x00000000000c8d5e : pop rbp ; pop r14 ; ret
0x00000000000c9562 : pop rbp ; pop r14 ; ret
0x00000000000c9be5 : pop rbp ; pop r14 ; ret
0x00000000000c9c32 : pop rbp ; pop r14 ; ret
0x00000000000c9cc1 : pop rbp ; pop r14 ; ret
0x00000000000d7fd7 : pop rbp ; pop r14 ; ret
0x00000000000d983b : pop rbp ; pop r14 ; ret
0x00000000000d98ba : pop rbp ; pop r14 ; ret
0x00000000000da3bf : pop rbp ; pop r14 ; ret
0x00000000000da3f2 : pop rbp ; pop r14 ; ret
0x00000000000de37c : pop rbp ; pop r14 ; ret
0x00000000000de408 : pop rbp ; pop r14 ; ret
0x00000000000de45b : pop rbp ; pop r14 ; ret
0x00000000000e829b : pop rbp ; pop r14 ; ret
0x00000000000e82d9 : pop rbp ; pop r14 ; ret
0x00000000000f8c3e : pop rbp ; pop r14 ; ret
0x00000000000f8c9e : pop rbp ; pop r14 ; ret
0x00000000000f8d00 : pop rbp ; pop r14 ; ret
0x00000000000fd4a6 : pop rbp ; pop r14 ; ret
0x00000000000fd662 : pop rbp ; pop r14 ; ret
0x00000000000fd6cc : pop rbp ; pop r14 ; ret
0x00000000000fe796 : pop rbp ; pop r14 ; ret
0x00000000000fe7e6 : pop rbp ; pop r14 ; ret
0x00000000000fe9bd : pop rbp ; pop r14 ; ret
0x0000000000100303 : pop rbp ; pop r14 ; ret
0x000000000010562c : pop rbp ; pop r14 ; ret
0x0000000000105f5e : pop rbp ; pop r14 ; ret
0x0000000000105f74 : pop rbp ; pop r14 ; ret
0x0000000000105f9a : pop rbp ; pop r14 ; ret
0x00000000001082e1 : pop rbp ; pop r14 ; ret
0x0000000000108461 : pop rbp ; pop r14 ; ret
0x0000000000108997 : pop rbp ; pop r14 ; ret
0x000000000010c87b : pop rbp ; pop r14 ; ret
0x000000000010c8ef : pop rbp ; pop r14 ; ret
0x000000000010d356 : pop rbp ; pop r14 ; ret
0x000000000010e0ac : pop rbp ; pop r14 ; ret
0x000000000010e0e5 : pop rbp ; pop r14 ; ret
0x000000000010e101 : pop rbp ; pop r14 ; ret
0x000000000010e3ce : pop rbp ; pop r14 ; ret
0x0000000000110a65 : pop rbp ; pop r14 ; ret
0x0000000000110d01 : pop rbp ; pop r14 ; ret
0x00000000001110cd : pop rbp ; pop r14 ; ret
0x0000000000118bb5 : pop rbp ; pop r14 ; ret
0x000000000011b11f : pop rbp ; pop r14 ; ret
0x000000000011c332 : pop rbp ; pop r14 ; ret
0x000000000011c761 : pop rbp ; pop r14 ; ret
0x000000000011e984 : pop rbp ; pop r14 ; ret
0x000000000011ea44 : pop rbp ; pop r14 ; ret
0x000000000012316b : pop rbp ; pop r14 ; ret
0x000000000012320a : pop rbp ; pop r14 ; ret
0x0000000000124ed9 : pop rbp ; pop r14 ; ret
0x0000000000124f1f : pop rbp ; pop r14 ; ret
0x0000000000124f6f : pop rbp ; pop r14 ; ret
0x0000000000125006 : pop rbp ; pop r14 ; ret
0x0000000000127731 : pop rbp ; pop r14 ; ret
0x00000000001277dd : pop rbp ; pop r14 ; ret
0x0000000000129579 : pop rbp ; pop r14 ; ret
0x0000000000129631 : pop rbp ; pop r14 ; ret
0x000000000012c9f9 : pop rbp ; pop r14 ; ret
0x000000000012ca1f : pop rbp ; pop r14 ; ret
0x000000000012cb08 : pop rbp ; pop r14 ; ret
0x000000000012cdc6 : pop rbp ; pop r14 ; ret
0x000000000012de54 : pop rbp ; pop r14 ; ret
0x000000000012e421 : pop rbp ; pop r14 ; ret
0x000000000012ed43 : pop rbp ; pop r14 ; ret
0x000000000012ed89 : pop rbp ; pop r14 ; ret
0x0000000000132a88 : pop rbp ; pop r14 ; ret
0x0000000000133359 : pop rbp ; pop r14 ; ret
0x000000000013363a : pop rbp ; pop r14 ; ret
0x0000000000133689 : pop rbp ; pop r14 ; ret
0x0000000000135542 : pop rbp ; pop r14 ; ret
0x0000000000137869 : pop rbp ; pop r14 ; ret
0x000000000013787e : pop rbp ; pop r14 ; ret
0x0000000000139319 : pop rbp ; pop r14 ; ret
0x00000000001393e2 : pop rbp ; pop r14 ; ret
0x0000000000139491 : pop rbp ; pop r14 ; ret
0x00000000001395fa : pop rbp ; pop r14 ; ret
0x0000000000139649 : pop rbp ; pop r14 ; ret
0x000000000013a08c : pop rbp ; pop r14 ; ret
0x000000000013a0ca : pop rbp ; pop r14 ; ret
0x000000000013a4cb : pop rbp ; pop r14 ; ret
0x000000000013a4e3 : pop rbp ; pop r14 ; ret
0x000000000013a693 : pop rbp ; pop r14 ; ret
0x000000000013a6b3 : pop rbp ; pop r14 ; ret
0x000000000013b1e4 : pop rbp ; pop r14 ; ret
0x000000000013b702 : pop rbp ; pop r14 ; ret
0x000000000013b7ad : pop rbp ; pop r14 ; ret
0x000000000013c0a0 : pop rbp ; pop r14 ; ret
0x000000000013cc15 : pop rbp ; pop r14 ; ret
0x000000000013cc8d : pop rbp ; pop r14 ; ret
0x000000000013d343 : pop rbp ; pop r14 ; ret
0x000000000013d3ad : pop rbp ; pop r14 ; ret
0x00000000001408b0 : pop rbp ; pop r14 ; ret
0x000000000014227f : pop rbp ; pop r14 ; ret
0x0000000000073633 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x000000000006d128 : pop rbp ; pop rbp ; ret
0x000000000006d14a : pop rbp ; pop rbp ; ret
0x00000000000cd40d : pop rbp ; pop rbp ; ret
0x00000000000cd41d : pop rbp ; pop rbp ; ret
0x00000000000ffd6b : pop rbp ; pop rbp ; ret
0x0000000000115a47 : pop rbp ; pop rbp ; ret
0x0000000000115a63 : pop rbp ; pop rbp ; ret
0x0000000000048438 : pop rbp ; pop rbx ; ret
0x000000000004a018 : pop rbp ; pop rbx ; ret
0x000000000001f930 : pop rbp ; ret
0x0000000000020257 : pop rbp ; ret
0x00000000000206c5 : pop rbp ; ret
0x0000000000020e6a : pop rbp ; ret
0x0000000000020ea1 : pop rbp ; ret
0x00000000000213c1 : pop rbp ; ret
0x0000000000021a35 : pop rbp ; ret
0x0000000000021aae : pop rbp ; ret
0x0000000000022403 : pop rbp ; ret
0x000000000002268d : pop rbp ; ret
0x0000000000022706 : pop rbp ; ret
0x0000000000022b56 : pop rbp ; ret
0x0000000000022cd1 : pop rbp ; ret
0x000000000002304d : pop rbp ; ret
0x00000000000236d9 : pop rbp ; ret
0x0000000000029c73 : pop rbp ; ret
0x0000000000029c8a : pop rbp ; ret
0x0000000000029db1 : pop rbp ; ret
0x0000000000029dd5 : pop rbp ; ret
0x0000000000029e19 : pop rbp ; ret
0x0000000000029ea0 : pop rbp ; ret
0x000000000002a83d : pop rbp ; ret
0x000000000002a863 : pop rbp ; ret
0x000000000002a8e5 : pop rbp ; ret
0x000000000002b5dc : pop rbp ; ret
0x000000000002b614 : pop rbp ; ret
0x000000000002c022 : pop rbp ; ret
0x000000000002c0f7 : pop rbp ; ret
0x000000000002c147 : pop rbp ; ret
0x000000000002c455 : pop rbp ; ret
0x000000000002c6cf : pop rbp ; ret
0x000000000002c8c4 : pop rbp ; ret
0x000000000002cc79 : pop rbp ; ret
0x000000000002d056 : pop rbp ; ret
0x000000000002d15f : pop rbp ; ret
0x000000000002e6a7 : pop rbp ; ret
0x000000000002efc3 : pop rbp ; ret
0x000000000002f268 : pop rbp ; ret
0x000000000002ffa1 : pop rbp ; ret
0x0000000000030a90 : pop rbp ; ret
0x000000000003229b : pop rbp ; ret
0x0000000000032448 : pop rbp ; ret
0x00000000000326ae : pop rbp ; ret
0x0000000000032dc9 : pop rbp ; ret
0x0000000000033b93 : pop rbp ; ret
0x00000000000358da : pop rbp ; ret
0x0000000000035974 : pop rbp ; ret
0x0000000000036958 : pop rbp ; ret
0x000000000003696f : pop rbp ; ret
0x0000000000036aba : pop rbp ; ret
0x0000000000036acf : pop rbp ; ret
0x0000000000036bf8 : pop rbp ; ret
0x0000000000036c1d : pop rbp ; ret
0x0000000000036c63 : pop rbp ; ret
0x0000000000036cb3 : pop rbp ; ret
0x00000000000395ee : pop rbp ; ret
0x000000000003964f : pop rbp ; ret
0x00000000000398c8 : pop rbp ; ret
0x0000000000039ac3 : pop rbp ; ret
0x0000000000039dfb : pop rbp ; ret
0x0000000000039e3c : pop rbp ; ret
0x000000000003a093 : pop rbp ; ret
0x000000000003a1d7 : pop rbp ; ret
0x000000000003a58b : pop rbp ; ret
0x000000000003a623 : pop rbp ; ret
0x000000000003ae4b : pop rbp ; ret
0x000000000003aed3 : pop rbp ; ret
0x000000000003b179 : pop rbp ; ret
0x000000000003b1e5 : pop rbp ; ret
0x000000000003b244 : pop rbp ; ret
0x0000000000044c99 : pop rbp ; ret
0x0000000000044d19 : pop rbp ; ret
0x0000000000044dc7 : pop rbp ; ret
0x000000000004561b : pop rbp ; ret
0x0000000000045800 : pop rbp ; ret
0x0000000000045854 : pop rbp ; ret
0x0000000000045c4a : pop rbp ; ret
0x0000000000048ce0 : pop rbp ; ret
0x000000000004a8df : pop rbp ; ret
0x000000000004a9a5 : pop rbp ; ret
0x000000000004aa7a : pop rbp ; ret
0x000000000004aca2 : pop rbp ; ret
0x000000000004b701 : pop rbp ; ret
0x000000000004d289 : pop rbp ; ret
0x000000000004d33a : pop rbp ; ret
0x000000000004fff9 : pop rbp ; ret
0x00000000000500e5 : pop rbp ; ret
0x0000000000050169 : pop rbp ; ret
0x000000000005019e : pop rbp ; ret
0x00000000000501bd : pop rbp ; ret
0x00000000000503b2 : pop rbp ; ret
0x0000000000050cd5 : pop rbp ; ret
0x0000000000050e0b : pop rbp ; ret
0x0000000000050e5d : pop rbp ; ret
0x0000000000050fc0 : pop rbp ; ret
0x0000000000054b91 : pop rbp ; ret
0x0000000000054bb4 : pop rbp ; ret
0x0000000000054d8d : pop rbp ; ret
0x0000000000054da3 : pop rbp ; ret
0x0000000000055b38 : pop rbp ; ret
0x0000000000055bfe : pop rbp ; ret
0x0000000000055e1c : pop rbp ; ret
0x0000000000055e5d : pop rbp ; ret
0x0000000000056ae9 : pop rbp ; ret
0x0000000000058ae5 : pop rbp ; ret
0x0000000000058b0b : pop rbp ; ret
0x0000000000058bf0 : pop rbp ; ret
0x000000000005b77b : pop rbp ; ret
0x000000000005b862 : pop rbp ; ret
0x000000000005bbaf : pop rbp ; ret
0x00000000000634b6 : pop rbp ; ret
0x00000000000637b4 : pop rbp ; ret
0x000000000006abd3 : pop rbp ; ret
0x000000000006abe5 : pop rbp ; ret
0x000000000006ac4d : pop rbp ; ret
0x000000000006ac57 : pop rbp ; ret
0x000000000006ac8b : pop rbp ; ret
0x000000000006b784 : pop rbp ; ret
0x000000000006bbd8 : pop rbp ; ret
0x000000000006d129 : pop rbp ; ret
0x000000000006d14b : pop rbp ; ret
0x000000000006d9e7 : pop rbp ; ret
0x000000000006da16 : pop rbp ; ret
0x000000000006dd68 : pop rbp ; ret
0x000000000006ddeb : pop rbp ; ret
0x000000000006e296 : pop rbp ; ret
0x000000000006e2ab : pop rbp ; ret
0x000000000006e2bc : pop rbp ; ret
0x000000000006e3c2 : pop rbp ; ret
0x000000000006e40e : pop rbp ; ret
0x000000000006e6bf : pop rbp ; ret
0x000000000006efd3 : pop rbp ; ret
0x000000000006efff : pop rbp ; ret
0x000000000006ff62 : pop rbp ; ret
0x000000000006ff86 : pop rbp ; ret
0x000000000006ffd0 : pop rbp ; ret
0x00000000000701ea : pop rbp ; ret
0x0000000000070208 : pop rbp ; ret
0x0000000000070283 : pop rbp ; ret
0x000000000007033e : pop rbp ; ret
0x0000000000070393 : pop rbp ; ret
0x0000000000070443 : pop rbp ; ret
0x0000000000070452 : pop rbp ; ret
0x0000000000070e33 : pop rbp ; ret
0x0000000000070e5f : pop rbp ; ret
0x0000000000070f0b : pop rbp ; ret
0x0000000000070f56 : pop rbp ; ret
0x00000000000717d2 : pop rbp ; ret
0x0000000000071918 : pop rbp ; ret
0x0000000000072dc2 : pop rbp ; ret
0x00000000000734ad : pop rbp ; ret
0x00000000000745fb : pop rbp ; ret
0x0000000000074637 : pop rbp ; ret
0x000000000007499f : pop rbp ; ret
0x00000000000749b9 : pop rbp ; ret
0x00000000000750f5 : pop rbp ; ret
0x000000000007510e : pop rbp ; ret
0x000000000007511f : pop rbp ; ret
0x00000000000752af : pop rbp ; ret
0x0000000000075455 : pop rbp ; ret
0x00000000000757e3 : pop rbp ; ret
0x000000000007641f : pop rbp ; ret
0x0000000000076913 : pop rbp ; ret
0x00000000000769cc : pop rbp ; ret
0x00000000000776e9 : pop rbp ; ret
0x0000000000077938 : pop rbp ; ret
0x0000000000077969 : pop rbp ; ret
0x0000000000077d3f : pop rbp ; ret
0x0000000000077d57 : pop rbp ; ret
0x0000000000078a68 : pop rbp ; ret
0x0000000000079131 : pop rbp ; ret
0x0000000000079514 : pop rbp ; ret
0x00000000000796d0 : pop rbp ; ret
0x000000000007978e : pop rbp ; ret
0x000000000007983a : pop rbp ; ret
0x0000000000079aa4 : pop rbp ; ret
0x000000000007a45a : pop rbp ; ret
0x000000000007a615 : pop rbp ; ret
0x000000000007a676 : pop rbp ; ret
0x000000000007abb3 : pop rbp ; ret
0x000000000007ae62 : pop rbp ; ret
0x000000000007bbd4 : pop rbp ; ret
0x000000000007bc68 : pop rbp ; ret
0x000000000007be32 : pop rbp ; ret
0x000000000007c444 : pop rbp ; ret
0x000000000007c725 : pop rbp ; ret
0x000000000007c799 : pop rbp ; ret
0x000000000007c8d7 : pop rbp ; ret
0x000000000007c908 : pop rbp ; ret
0x000000000007d036 : pop rbp ; ret
0x000000000007d57c : pop rbp ; ret
0x000000000007db2f : pop rbp ; ret
0x000000000007db72 : pop rbp ; ret
0x000000000007df8d : pop rbp ; ret
0x000000000007e226 : pop rbp ; ret
0x0000000000083094 : pop rbp ; ret
0x00000000000841f4 : pop rbp ; ret
0x0000000000084545 : pop rbp ; ret
0x00000000000845da : pop rbp ; ret
0x00000000000845f0 : pop rbp ; ret
0x0000000000084e51 : pop rbp ; ret
0x00000000000850ac : pop rbp ; ret
0x00000000000850c1 : pop rbp ; ret
0x00000000000850e8 : pop rbp ; ret
0x0000000000085376 : pop rbp ; ret
0x0000000000085908 : pop rbp ; ret
0x0000000000087798 : pop rbp ; ret
0x0000000000088846 : pop rbp ; ret
0x0000000000089087 : pop rbp ; ret
0x000000000008b4af : pop rbp ; ret
0x000000000008b507 : pop rbp ; ret
0x000000000008d907 : pop rbp ; ret
0x000000000008f0a3 : pop rbp ; ret
0x000000000008f138 : pop rbp ; ret
0x0000000000094e7e : pop rbp ; ret
0x0000000000094e9b : pop rbp ; ret
0x0000000000096c13 : pop rbp ; ret
0x0000000000096c2a : pop rbp ; ret
0x0000000000097520 : pop rbp ; ret
0x00000000000989f8 : pop rbp ; ret
0x000000000009ed84 : pop rbp ; ret
0x000000000009f2da : pop rbp ; ret
0x000000000009f309 : pop rbp ; ret
0x000000000009f3d1 : pop rbp ; ret
0x000000000009f453 : pop rbp ; ret
0x000000000009f46c : pop rbp ; ret
0x000000000009f4b6 : pop rbp ; ret
0x000000000009f51c : pop rbp ; ret
0x00000000000aa882 : pop rbp ; ret
0x00000000000aa9a1 : pop rbp ; ret
0x00000000000aa9d1 : pop rbp ; ret
0x00000000000abd37 : pop rbp ; ret
0x00000000000ac2c7 : pop rbp ; ret
0x00000000000b62ea : pop rbp ; ret
0x00000000000b6398 : pop rbp ; ret
0x00000000000b643a : pop rbp ; ret
0x00000000000b7397 : pop rbp ; ret
0x00000000000b9e87 : pop rbp ; ret
0x00000000000b9ef7 : pop rbp ; ret
0x00000000000ba052 : pop rbp ; ret
0x00000000000ba0b0 : pop rbp ; ret
0x00000000000ba32b : pop rbp ; ret
0x00000000000ba3bb : pop rbp ; ret
0x00000000000ba43b : pop rbp ; ret
0x00000000000ba455 : pop rbp ; ret
0x00000000000baa84 : pop rbp ; ret
0x00000000000baedd : pop rbp ; ret
0x00000000000bb6f7 : pop rbp ; ret
0x00000000000bb725 : pop rbp ; ret
0x00000000000bd091 : pop rbp ; ret
0x00000000000bd176 : pop rbp ; ret
0x00000000000bdb70 : pop rbp ; ret
0x00000000000bf7f7 : pop rbp ; ret
0x00000000000bf862 : pop rbp ; ret
0x00000000000c52af : pop rbp ; ret
0x00000000000c7c34 : pop rbp ; ret
0x00000000000c7c69 : pop rbp ; ret
0x00000000000c7ca0 : pop rbp ; ret
0x00000000000c808a : pop rbp ; ret
0x00000000000c80ca : pop rbp ; ret
0x00000000000c81f7 : pop rbp ; ret
0x00000000000c823a : pop rbp ; ret
0x00000000000c850a : pop rbp ; ret
0x00000000000c8844 : pop rbp ; ret
0x00000000000c89d1 : pop rbp ; ret
0x00000000000c89f0 : pop rbp ; ret
0x00000000000c989e : pop rbp ; ret
0x00000000000c9a0f : pop rbp ; ret
0x00000000000cace3 : pop rbp ; ret
0x00000000000cae0c : pop rbp ; ret
0x00000000000cae70 : pop rbp ; ret
0x00000000000cb06f : pop rbp ; ret
0x00000000000cb1ee : pop rbp ; ret
0x00000000000cba87 : pop rbp ; ret
0x00000000000cbae5 : pop rbp ; ret
0x00000000000cc1e1 : pop rbp ; ret
0x00000000000cc268 : pop rbp ; ret
0x00000000000cc278 : pop rbp ; ret
0x00000000000cc523 : pop rbp ; ret
0x00000000000ccdbf : pop rbp ; ret
0x00000000000cd40e : pop rbp ; ret
0x00000000000cd41e : pop rbp ; ret
0x00000000000cd6b8 : pop rbp ; ret
0x00000000000cdf46 : pop rbp ; ret
0x00000000000ce09c : pop rbp ; ret
0x00000000000ce0ac : pop rbp ; ret
0x00000000000ceadf : pop rbp ; ret
0x00000000000cece7 : pop rbp ; ret
0x00000000000cf242 : pop rbp ; ret
0x00000000000cf328 : pop rbp ; ret
0x00000000000cf4b0 : pop rbp ; ret
0x00000000000cf874 : pop rbp ; ret
0x00000000000d1af0 : pop rbp ; ret
0x00000000000d2295 : pop rbp ; ret
0x00000000000d38cd : pop rbp ; ret
0x00000000000d55bb : pop rbp ; ret
0x00000000000d564c : pop rbp ; ret
0x00000000000d566a : pop rbp ; ret
0x00000000000d714b : pop rbp ; ret
0x00000000000d71f8 : pop rbp ; ret
0x00000000000d8925 : pop rbp ; ret
0x00000000000d8c53 : pop rbp ; ret
0x00000000000d8ccc : pop rbp ; ret
0x00000000000da2d7 : pop rbp ; ret
0x00000000000dcdca : pop rbp ; ret
0x00000000000dd00f : pop rbp ; ret
0x00000000000e8352 : pop rbp ; ret
0x00000000000e8377 : pop rbp ; ret
0x00000000000e8a79 : pop rbp ; ret
0x00000000000e94d3 : pop rbp ; ret
0x00000000000e9574 : pop rbp ; ret
0x00000000000e95a4 : pop rbp ; ret
0x00000000000e98b9 : pop rbp ; ret
0x00000000000eaab8 : pop rbp ; ret
0x00000000000eaae2 : pop rbp ; ret
0x00000000000eadf6 : pop rbp ; ret
0x00000000000ef2c6 : pop rbp ; ret
0x00000000000ef6db : pop rbp ; ret
0x00000000000ef922 : pop rbp ; ret
0x00000000000efb1a : pop rbp ; ret
0x00000000000efde8 : pop rbp ; ret
0x00000000000efe03 : pop rbp ; ret
0x00000000000f036e : pop rbp ; ret
0x00000000000f037e : pop rbp ; ret
0x00000000000f040d : pop rbp ; ret
0x00000000000f0454 : pop rbp ; ret
0x00000000000f1515 : pop rbp ; ret
0x00000000000f156f : pop rbp ; ret
0x00000000000f1635 : pop rbp ; ret
0x00000000000f1730 : pop rbp ; ret
0x00000000000f44ba : pop rbp ; ret
0x00000000000f5b58 : pop rbp ; ret
0x00000000000f5bf1 : pop rbp ; ret
0x00000000000f5c2c : pop rbp ; ret
0x00000000000f5c59 : pop rbp ; ret
0x00000000000f6040 : pop rbp ; ret
0x00000000000f74a6 : pop rbp ; ret
0x00000000000f85ae : pop rbp ; ret
0x00000000000f9919 : pop rbp ; ret
0x00000000000f9b6a : pop rbp ; ret
0x00000000000f9bc2 : pop rbp ; ret
0x00000000000fb677 : pop rbp ; ret
0x00000000000fb68b : pop rbp ; ret
0x00000000000fb6fe : pop rbp ; ret
0x00000000000fc2f0 : pop rbp ; ret
0x00000000000fc4e3 : pop rbp ; ret
0x00000000000fc59f : pop rbp ; ret
0x00000000000fc5d3 : pop rbp ; ret
0x00000000000fccf7 : pop rbp ; ret
0x00000000000fd0c3 : pop rbp ; ret
0x00000000000fd173 : pop rbp ; ret
0x00000000000fd959 : pop rbp ; ret
0x00000000000fda24 : pop rbp ; ret
0x00000000000fe637 : pop rbp ; ret
0x00000000000febe3 : pop rbp ; ret
0x00000000000febfa : pop rbp ; ret
0x00000000000fef9a : pop rbp ; ret
0x00000000000fefab : pop rbp ; ret
0x00000000000ff6e4 : pop rbp ; ret
0x00000000000ff8dd : pop rbp ; ret
0x00000000000ffa1d : pop rbp ; ret
0x00000000000ffd6c : pop rbp ; ret
0x00000000000ffe93 : pop rbp ; ret
0x00000000000ffec7 : pop rbp ; ret
0x0000000000101273 : pop rbp ; ret
0x0000000000101e33 : pop rbp ; ret
0x00000000001023b5 : pop rbp ; ret
0x0000000000103225 : pop rbp ; ret
0x0000000000103411 : pop rbp ; ret
0x0000000000104b1d : pop rbp ; ret
0x0000000000104e36 : pop rbp ; ret
0x0000000000104e9e : pop rbp ; ret
0x0000000000104f75 : pop rbp ; ret
0x0000000000104fc3 : pop rbp ; ret
0x00000000001052da : pop rbp ; ret
0x000000000010537b : pop rbp ; ret
0x0000000000105a7b : pop rbp ; ret
0x0000000000105ba4 : pop rbp ; ret
0x0000000000105cd4 : pop rbp ; ret
0x0000000000105d41 : pop rbp ; ret
0x0000000000105db1 : pop rbp ; ret
0x0000000000106319 : pop rbp ; ret
0x00000000001063e5 : pop rbp ; ret
0x00000000001072da : pop rbp ; ret
0x00000000001088e9 : pop rbp ; ret
0x0000000000108a3f : pop rbp ; ret
0x000000000010920f : pop rbp ; ret
0x0000000000109507 : pop rbp ; ret
0x00000000001095b6 : pop rbp ; ret
0x000000000010962c : pop rbp ; ret
0x0000000000109639 : pop rbp ; ret
0x00000000001098ac : pop rbp ; ret
0x00000000001098fd : pop rbp ; ret
0x000000000010a093 : pop rbp ; ret
0x000000000010a20c : pop rbp ; ret
0x000000000010a2e4 : pop rbp ; ret
0x000000000010ad51 : pop rbp ; ret
0x000000000010ad63 : pop rbp ; ret
0x000000000010b5b1 : pop rbp ; ret
0x000000000010b5c3 : pop rbp ; ret
0x000000000010b80f : pop rbp ; ret
0x000000000010b999 : pop rbp ; ret
0x000000000010bdfd : pop rbp ; ret
0x000000000010c0cc : pop rbp ; ret
0x000000000010ce88 : pop rbp ; ret
0x000000000010cea3 : pop rbp ; ret
0x000000000010d1bf : pop rbp ; ret
0x000000000010ea3b : pop rbp ; ret
0x000000000010ea66 : pop rbp ; ret
0x000000000010eb5d : pop rbp ; ret
0x000000000010eb73 : pop rbp ; ret
0x000000000010ec37 : pop rbp ; ret
0x000000000010ec8c : pop rbp ; ret
0x000000000010ecbc : pop rbp ; ret
0x000000000010ecec : pop rbp ; ret
0x0000000000110057 : pop rbp ; ret
0x00000000001102db : pop rbp ; ret
0x000000000011182c : pop rbp ; ret
0x0000000000112d35 : pop rbp ; ret
0x0000000000112efd : pop rbp ; ret
0x0000000000112f49 : pop rbp ; ret
0x0000000000112fb2 : pop rbp ; ret
0x0000000000112fd0 : pop rbp ; ret
0x0000000000113e63 : pop rbp ; ret
0x000000000011589a : pop rbp ; ret
0x00000000001158bc : pop rbp ; ret
0x00000000001159d6 : pop rbp ; ret
0x0000000000115a48 : pop rbp ; ret
0x0000000000115a64 : pop rbp ; ret
0x0000000000115aee : pop rbp ; ret
0x0000000000115e68 : pop rbp ; ret
0x00000000001163fe : pop rbp ; ret
0x0000000000116bed : pop rbp ; ret
0x0000000000116c39 : pop rbp ; ret
0x0000000000116ea7 : pop rbp ; ret
0x0000000000116ef6 : pop rbp ; ret
0x000000000011706e : pop rbp ; ret
0x00000000001170c3 : pop rbp ; ret
0x0000000000117405 : pop rbp ; ret
0x0000000000117488 : pop rbp ; ret
0x0000000000117555 : pop rbp ; ret
0x0000000000117826 : pop rbp ; ret
0x000000000011783b : pop rbp ; ret
0x000000000011784c : pop rbp ; ret
0x00000000001178f1 : pop rbp ; ret
0x000000000011791f : pop rbp ; ret
0x00000000001180ed : pop rbp ; ret
0x0000000000118139 : pop rbp ; ret
0x00000000001183a7 : pop rbp ; ret
0x00000000001183f6 : pop rbp ; ret
0x0000000000118525 : pop rbp ; ret
0x00000000001185ab : pop rbp ; ret
0x0000000000118675 : pop rbp ; ret
0x0000000000119592 : pop rbp ; ret
0x000000000011a00e : pop rbp ; ret
0x000000000011b8ae : pop rbp ; ret
0x000000000011bf7f : pop rbp ; ret
0x000000000011d0df : pop rbp ; ret
0x000000000011d12a : pop rbp ; ret
0x000000000011db27 : pop rbp ; ret
0x000000000011f2fa : pop rbp ; ret
0x000000000011f337 : pop rbp ; ret
0x000000000011f39b : pop rbp ; ret
0x000000000011f596 : pop rbp ; ret
0x000000000011f932 : pop rbp ; ret
0x00000000001201b6 : pop rbp ; ret
0x0000000000120778 : pop rbp ; ret
0x0000000000120bdf : pop rbp ; ret
0x0000000000120fcc : pop rbp ; ret
0x000000000012124a : pop rbp ; ret
0x00000000001213b1 : pop rbp ; ret
0x00000000001220ac : pop rbp ; ret
0x00000000001220d0 : pop rbp ; ret
0x000000000012221c : pop rbp ; ret
0x00000000001223a3 : pop rbp ; ret
0x000000000012336d : pop rbp ; ret
0x000000000012366d : pop rbp ; ret
0x00000000001236cb : pop rbp ; ret
0x00000000001237e7 : pop rbp ; ret
0x000000000012387f : pop rbp ; ret
0x00000000001239fc : pop rbp ; ret
0x0000000000123b80 : pop rbp ; ret
0x0000000000123e95 : pop rbp ; ret
0x0000000000123fd8 : pop rbp ; ret
0x0000000000124042 : pop rbp ; ret
0x000000000012435b : pop rbp ; ret
0x0000000000124395 : pop rbp ; ret
0x0000000000124639 : pop rbp ; ret
0x0000000000124ab6 : pop rbp ; ret
0x0000000000124d37 : pop rbp ; ret
0x0000000000125178 : pop rbp ; ret
0x00000000001287c3 : pop rbp ; ret
0x0000000000128ef3 : pop rbp ; ret
0x0000000000128fdc : pop rbp ; ret
0x000000000012971d : pop rbp ; ret
0x0000000000129992 : pop rbp ; ret
0x0000000000129aa9 : pop rbp ; ret
0x0000000000129ac2 : pop rbp ; ret
0x0000000000129ca9 : pop rbp ; ret
0x0000000000129db2 : pop rbp ; ret
0x0000000000129dea : pop rbp ; ret
0x000000000012a0fc : pop rbp ; ret
0x000000000012b0e4 : pop rbp ; ret
0x000000000012b172 : pop rbp ; ret
0x000000000012b1f2 : pop rbp ; ret
0x000000000012b277 : pop rbp ; ret
0x000000000012b2f7 : pop rbp ; ret
0x000000000012b377 : pop rbp ; ret
0x000000000012b3f7 : pop rbp ; ret
0x000000000012b472 : pop rbp ; ret
0x000000000012b4fc : pop rbp ; ret
0x000000000012b572 : pop rbp ; ret
0x000000000012b5f2 : pop rbp ; ret
0x000000000012b67c : pop rbp ; ret
0x000000000012b6f7 : pop rbp ; ret
0x000000000012b772 : pop rbp ; ret
0x000000000012b9ec : pop rbp ; ret
0x000000000012bf7a : pop rbp ; ret
0x000000000012c260 : pop rbp ; ret
0x000000000012c3ed : pop rbp ; ret
0x000000000012c67a : pop rbp ; ret
0x000000000012c6cd : pop rbp ; ret
0x000000000012cbfc : pop rbp ; ret
0x000000000012cd65 : pop rbp ; ret
0x000000000012cd99 : pop rbp ; ret
0x000000000012d69f : pop rbp ; ret
0x000000000012d6dc : pop rbp ; ret
0x000000000012d78c : pop rbp ; ret
0x000000000012d7dc : pop rbp ; ret
0x000000000012d85c : pop rbp ; ret
0x000000000012e107 : pop rbp ; ret
0x000000000012e14f : pop rbp ; ret
0x000000000012e224 : pop rbp ; ret
0x000000000012e868 : pop rbp ; ret
0x000000000012f34e : pop rbp ; ret
0x000000000012f3a4 : pop rbp ; ret
0x000000000012f5ee : pop rbp ; ret
0x000000000012f60c : pop rbp ; ret
0x000000000012f668 : pop rbp ; ret
0x000000000012f70f : pop rbp ; ret
0x00000000001303e3 : pop rbp ; ret
0x0000000000130421 : pop rbp ; ret
0x0000000000130441 : pop rbp ; ret
0x0000000000130475 : pop rbp ; ret
0x0000000000130499 : pop rbp ; ret
0x00000000001304bc : pop rbp ; ret
0x00000000001304ff : pop rbp ; ret
0x0000000000130535 : pop rbp ; ret
0x0000000000130557 : pop rbp ; ret
0x00000000001305d6 : pop rbp ; ret
0x00000000001305fe : pop rbp ; ret
0x0000000000130625 : pop rbp ; ret
0x000000000013067f : pop rbp ; ret
0x00000000001307a4 : pop rbp ; ret
0x00000000001307e1 : pop rbp ; ret
0x000000000013197f : pop rbp ; ret
0x0000000000131afe : pop rbp ; ret
0x0000000000132883 : pop rbp ; ret
0x000000000013289a : pop rbp ; ret
0x0000000000132906 : pop rbp ; ret
0x000000000013291c : pop rbp ; ret
0x000000000013303a : pop rbp ; ret
0x0000000000133760 : pop rbp ; ret
0x0000000000133813 : pop rbp ; ret
0x000000000013430d : pop rbp ; ret
0x0000000000134693 : pop rbp ; ret
0x00000000001346df : pop rbp ; ret
0x00000000001347b3 : pop rbp ; ret
0x0000000000134853 : pop rbp ; ret
0x0000000000134ac3 : pop rbp ; ret
0x0000000000134ed0 : pop rbp ; ret
0x00000000001354a0 : pop rbp ; ret
0x00000000001354b4 : pop rbp ; ret
0x0000000000136b6b : pop rbp ; ret
0x0000000000136c16 : pop rbp ; ret
0x00000000001370dc : pop rbp ; ret
0x000000000013721c : pop rbp ; ret
0x00000000001373b1 : pop rbp ; ret
0x000000000013758e : pop rbp ; ret
0x0000000000137990 : pop rbp ; ret
0x0000000000137ad0 : pop rbp ; ret
0x0000000000137d68 : pop rbp ; ret
0x0000000000137d81 : pop rbp ; ret
0x0000000000138459 : pop rbp ; ret
0x00000000001384ac : pop rbp ; ret
0x0000000000138519 : pop rbp ; ret
0x000000000013919a : pop rbp ; ret
0x0000000000139287 : pop rbp ; ret
0x000000000013929c : pop rbp ; ret
0x000000000013a1de : pop rbp ; ret
0x000000000013a24b : pop rbp ; ret
0x000000000013a8e0 : pop rbp ; ret
0x000000000013a93c : pop rbp ; ret
0x000000000013a947 : pop rbp ; ret
0x000000000013ab44 : pop rbp ; ret
0x000000000013ab8d : pop rbp ; ret
0x000000000013ac04 : pop rbp ; ret
0x000000000013ac4d : pop rbp ; ret
0x000000000013acc4 : pop rbp ; ret
0x000000000013ad0d : pop rbp ; ret
0x000000000013ad84 : pop rbp ; ret
0x000000000013adcd : pop rbp ; ret
0x000000000013af28 : pop rbp ; ret
0x000000000013af37 : pop rbp ; ret
0x000000000013afa7 : pop rbp ; ret
0x000000000013afb7 : pop rbp ; ret
0x000000000013b114 : pop rbp ; ret
0x000000000013b149 : pop rbp ; ret
0x000000000013b187 : pop rbp ; ret
0x000000000013b49f : pop rbp ; ret
0x000000000013b4c7 : pop rbp ; ret
0x000000000013b4e8 : pop rbp ; ret
0x000000000013b853 : pop rbp ; ret
0x000000000013b86f : pop rbp ; ret
0x000000000013b913 : pop rbp ; ret
0x000000000013b92f : pop rbp ; ret
0x000000000013b9d3 : pop rbp ; ret
0x000000000013b9ef : pop rbp ; ret
0x000000000013ba93 : pop rbp ; ret
0x000000000013baaf : pop rbp ; ret
0x000000000013befa : pop rbp ; ret
0x000000000013bf40 : pop rbp ; ret
0x000000000013d51a : pop rbp ; ret
0x000000000013ddd2 : pop rbp ; ret
0x000000000013e836 : pop rbp ; ret
0x000000000013f446 : pop rbp ; ret
0x000000000013f71d : pop rbp ; ret
0x000000000013fa74 : pop rbp ; ret
0x000000000013ff2f : pop rbp ; ret
0x0000000000140bb2 : pop rbp ; ret
0x0000000000140c4c : pop rbp ; ret
0x0000000000140caa : pop rbp ; ret
0x0000000000140db7 : pop rbp ; ret
0x0000000000141f85 : pop rbp ; ret
0x00000000001426bd : pop rbp ; ret
0x0000000000142830 : pop rbp ; ret
0x00000000001428d1 : pop rbp ; ret
0x0000000000142970 : pop rbp ; ret
0x0000000000142aa7 : pop rbp ; ret
0x0000000000142b31 : pop rbp ; ret
0x0000000000142c42 : pop rbp ; ret
0x000000000014390d : pop rbp ; ret
0x000000000014473a : pop rbp ; ret
0x000000000014476f : pop rbp ; ret
0x0000000000144787 : pop rbp ; ret
0x0000000000174010 : pop rbp ; ret
0x0000000000174147 : pop rbp ; ret
0x00000000001743af : pop rbp ; ret
0x0000000000174774 : pop rbp ; ret
0x0000000000175150 : pop rbp ; ret
0x00000000001752f0 : pop rbp ; ret
0x0000000000088e1f : pop rbp ; ret 8
0x0000000000048db2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000076ca6 : pop rbp ; sbb al, ch ; ret
0x0000000000194f15 : pop rbp ; sti ; jmp qword ptr [rax]
0x000000000012ddb4 : pop rbp ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000012ddb4 : pop rbp ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000007915c : pop rbp ; sub rax, rdx ; ret
0x0000000000113331 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x0000000000100ee7 : pop rbx ; add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0xcd1f9
0x00000000001a167d : pop rbx ; add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x00000000001a167c : pop rbx ; add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x0000000000182b38 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000aac3c : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000aac6f : pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000115327 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000001958d1 : pop rbx ; cld ; call rsp
0x00000000001958d0 : pop rbx ; cld ; call rsp
0x0000000000195751 : pop rbx ; cld ; jmp qword ptr [rax]
0x0000000000196115 : pop rbx ; cld ; jmp rax
0x00000000001b05c1 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b05f1 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b05f0 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0609 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0639 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000182b36 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006e28e : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000186dbc : pop rbx ; in al, 0xed ; jmp qword ptr [rcx]
0x000000000006f8ca : pop rbx ; jmp rax
0x00000000000bf0b1 : pop rbx ; jp 0xbf0ea ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001192e8 : pop rbx ; mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x0000000000070b80 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000074b4e : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000078305 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000fcde7 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144844 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000001448a9 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144919 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144989 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000001449f9 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144a64 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144ace : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144b34 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144b94 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144bfe : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144c69 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000144cd4 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000070b6c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000782ee : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000891f4 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000892a9 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000012e1bd : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000d5962 : pop rbx ; mov eax, 1 ; ret
0x00000000000efcbb : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000003a725 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003a7f5 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003a89e : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000aacdc : pop rbx ; mov eax, eax ; ret
0x00000000000aacf5 : pop rbx ; mov eax, eax ; ret
0x0000000000047a11 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006e0da : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006e139 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070a78 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070abf : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010c99d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010c9d9 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000116d4e : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000116d97 : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011824e : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000118297 : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000717ca : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000769c4 : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc4db : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc5cb : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c8e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000009ee6d : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000072220 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007b2a2 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072068 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000007b3f2 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006eff7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070e57 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fc82 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000086838 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000001339c4 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000001339c3 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000cd6b1 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006d124 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000006d146 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000cd409 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000cd419 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000ffd67 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000115a43 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000115a5f : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000398c5 : pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000cace0 : pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000fe634 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000012e87c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fc3 : pop rbx ; pop rbp ; jmp rax
0x00000000000842a1 : pop rbx ; pop rbp ; jmp rax
0x00000000000859c5 : pop rbx ; pop rbp ; jmp rax
0x000000000013a912 : pop rbx ; pop rbp ; jmp rax
0x000000000013b177 : pop rbx ; pop rbp ; jmp rax
0x000000000012bf64 : pop rbx ; pop rbp ; jmp rcx
0x000000000012e0fa : pop rbx ; pop rbp ; jmp rcx
0x000000000012d751 : pop rbx ; pop rbp ; jmp rdx
0x0000000000084ca8 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000008605f : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000086b3a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000010287d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102897 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000202e1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000022bae : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000032fc9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000033c3b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c129 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c178 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f3ec : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003f43b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000042399 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000049838 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054cb6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bd1c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bf91 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007188b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007357d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000735ab : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000073652 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007501e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075039 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075052 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000751e0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000751f9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075212 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075df6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000767c1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076a66 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076b05 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076b37 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077293 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077a9e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077e2d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077eac : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000785a9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078be2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d134 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d14c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d1b8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d1da : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d78d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d818 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e0a4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e0f2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082ce3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082d71 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008557d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000086f74 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087acc : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087e75 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088d79 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089754 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000095a47 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096ba8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096bd2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096ee6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acd05 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acd19 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acdfe : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acefb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acf3e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae6fc : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ae74b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b10b9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b37e9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3838 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b9f54 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bc916 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bcc24 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bddf0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bdf2e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7634 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7a36 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7acd : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7b0d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c8d59 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c955d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9c2d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d7fd2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d9836 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d98b5 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000da3ba : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de403 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8c39 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8c99 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8cfb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd4a1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd65d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd6c7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe791 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe7e1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe9b8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001002fe : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105627 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f59 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f6f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105f95 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001082dc : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010845c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000108992 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c876 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010c8ea : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010d351 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e0a7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e3c9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000110a60 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000110cfc : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001110c8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000118bb0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011b11a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c32d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c75c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011e97f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011e97e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011ea3f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011ea3e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124ed4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124f1a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124f6a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000125001 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012772c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001277d8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012c9f4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ca1a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012cdc1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012de4f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012e41c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000132a83 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133354 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133635 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013553d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137864 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137879 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139314 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001393dd : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013948c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001395f5 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a087 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a0c5 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a4c6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a4de : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a68e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a6ae : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b1df : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b6fd : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013b7a8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013c09b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013cc10 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013cc88 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013d33e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013d3a8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001408ab : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014227a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022688 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022701 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022b51 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029dac : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029dd0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029e14 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029e9b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a838 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a85e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a8e0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032dc4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033b8e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036bf3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036c18 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000039df6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000039e37 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a586 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003ae46 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003aece : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a8da : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004fff4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054b8c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054baf : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000054d88 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000055b33 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005b776 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005b85d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000634b1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006bbd3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dd63 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e2a6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e2b7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006efce : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000701e5 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070203 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007027e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070e2e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071913 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000734a8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000750f0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000075109 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007511a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000075450 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000757de : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007641a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007690e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077933 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077964 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078a63 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007a455 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007bbcf : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c43f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c720 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d031 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d577 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e221 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084540 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000845d5 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000845eb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084e4c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000850a7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000850bc : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000850e3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000087793 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f09e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f133 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f2d5 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f304 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f3cc : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f44e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f467 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f4b1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f517 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aa87d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aa9cc : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b9e82 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b9ef2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba3b6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba436 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba450 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000baed8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c2f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c64 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7c9b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c8505 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9899 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9a0a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cb06a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cb1e9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cba82 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cbae0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cc1dc : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d7146 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e834d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e8372 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e8a74 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efb15 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efde3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efdfe : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0369 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0379 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0408 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f044f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f74a1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f85a9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f9b65 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f9bbd : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb672 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb686 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb6f9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc2eb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc59a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fd0be : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fd16e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fef95 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fefa6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff8d8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ffa18 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ffe8e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ffec2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010126e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104e31 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104e99 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105ccf : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001088e4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000108a3a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000109502 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001098a7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001098f8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ad4c : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ad5e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b5ac : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b5be : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b80a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b994 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010bdf8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010c0c7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ce83 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ce9e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010d1ba : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010eb58 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010eb6e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001163f9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117069 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001170be : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117400 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117483 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117550 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117821 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117820 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117836 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117847 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118520 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001185a6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118670 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011a009 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011b8a9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011bf7a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000120bda : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000123368 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b0df : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b16d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b1ed : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b272 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b2f2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b372 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b3f2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b46d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b4f7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b56d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b5ed : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b677 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b6f2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012b76d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012c25b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f70a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f709 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013079f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001307dc : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013197a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131af9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000132901 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000132917 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000134308 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000134abe : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000134ecb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013549b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001354af : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013798b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137acb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000138454 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001384a7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000138514 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000139282 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000139297 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a1d9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a246 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b49a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b4c2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b4e3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001426b8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014296b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017400b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017476f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b65d2 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bb56a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb10 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001fc06 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035a97 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035b20 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035c49 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035c9a : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035ec3 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036dec : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039cf3 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a26f : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a2c3 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003adb1 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004509a : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000480dc : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004827c : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a972 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006aad4 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ab46 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c47c : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c4a6 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006cb8c : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006cc0e : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d1ff : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d365 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006db98 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dc0a : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006df3c : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006df82 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dfec : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ee7a : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006eeca : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f1aa : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f1b7 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f668 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f77c : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f7dc : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fa1a : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fa66 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fdc5 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fe0f : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070838 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000708ad : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070985 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072adb : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072b80 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073754 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074b84 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076ba8 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000779c9 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077c8d : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077cc0 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078162 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007818e : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781d1 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781d0 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078265 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079946 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a365 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a790 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b599 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b9b4 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ba67 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d39c : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007eed9 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084ba9 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085f46 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086732 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086a12 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086a7c : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088bc3 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089650 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000896d5 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000896ff : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008981e : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008985d : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b524 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094d62 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094f8c : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a4b : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096c76 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096e3f : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abce4 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac678 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000acb0f : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad0ea : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9e20 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8336 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9628 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc0e7 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc837 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cdc5c : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cdc81 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cdcb5 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cdd01 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce6db : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce6f9 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce721 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce771 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d17a3 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d18a3 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c25 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c3f : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5c6f : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7cb2 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc125 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7bbe : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efce9 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5d6c : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6a10 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6e73 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6ebe : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f713a : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f71b3 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8230 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000faeef : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb7c9 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb82d : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc437 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc8ef : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc946 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcb4c : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fce0a : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcece : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcf00 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd551 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff436 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff5be : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001015e4 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101992 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001019ce : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101f3c : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010315b : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104c31 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010548b : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108647 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ebc4 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ec05 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112e89 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115734 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011597d : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116a13 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116a68 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117f13 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117f68 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001192ba : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000119e19 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d340 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d3c7 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d3ef : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121a3d : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121a6e : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e11 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e3a : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e75 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126970 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127ab6 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127af6 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127af6 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128a55 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128a75 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ccb8 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cd21 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012da02 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e704 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e725 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e8ba : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ec92 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012edda : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001330a3 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001330d6 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001338fa : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000133ae2 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000133b6e : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000137675 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001376be : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000137cf0 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001386f3 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139203 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013921d : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b326 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bf9f : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bfbd : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bfe4 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c21c : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000140e03 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000140e63 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001740ef : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001747f0 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cb05 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000001f92f : pop rbx ; pop rbp ; ret
0x0000000000021a34 : pop rbx ; pop rbp ; ret
0x0000000000021aad : pop rbx ; pop rbp ; ret
0x000000000002e6a6 : pop rbx ; pop rbp ; ret
0x00000000000326ad : pop rbx ; pop rbp ; ret
0x00000000000358d9 : pop rbx ; pop rbp ; ret
0x0000000000035973 : pop rbx ; pop rbp ; ret
0x0000000000036957 : pop rbx ; pop rbp ; ret
0x000000000003696e : pop rbx ; pop rbp ; ret
0x0000000000036ab9 : pop rbx ; pop rbp ; ret
0x0000000000036ace : pop rbx ; pop rbp ; ret
0x0000000000036c62 : pop rbx ; pop rbp ; ret
0x0000000000036cb2 : pop rbx ; pop rbp ; ret
0x000000000003a092 : pop rbx ; pop rbp ; ret
0x000000000003a1d6 : pop rbx ; pop rbp ; ret
0x000000000003a622 : pop rbx ; pop rbp ; ret
0x000000000003b178 : pop rbx ; pop rbp ; ret
0x000000000003b1e4 : pop rbx ; pop rbp ; ret
0x000000000003b243 : pop rbx ; pop rbp ; ret
0x0000000000044c98 : pop rbx ; pop rbp ; ret
0x0000000000044d18 : pop rbx ; pop rbp ; ret
0x0000000000044dc6 : pop rbx ; pop rbp ; ret
0x0000000000045c49 : pop rbx ; pop rbp ; ret
0x00000000000500e4 : pop rbx ; pop rbp ; ret
0x0000000000050168 : pop rbx ; pop rbp ; ret
0x000000000005019d : pop rbx ; pop rbp ; ret
0x00000000000501bc : pop rbx ; pop rbp ; ret
0x000000000006abd2 : pop rbx ; pop rbp ; ret
0x000000000006abe4 : pop rbx ; pop rbp ; ret
0x000000000006ac4c : pop rbx ; pop rbp ; ret
0x000000000006ac56 : pop rbx ; pop rbp ; ret
0x000000000006ac8a : pop rbx ; pop rbp ; ret
0x000000000006b783 : pop rbx ; pop rbp ; ret
0x000000000006d9e6 : pop rbx ; pop rbp ; ret
0x000000000006da15 : pop rbx ; pop rbp ; ret
0x000000000006ddea : pop rbx ; pop rbp ; ret
0x000000000006e3c1 : pop rbx ; pop rbp ; ret
0x000000000006e40d : pop rbx ; pop rbp ; ret
0x000000000006e6be : pop rbx ; pop rbp ; ret
0x000000000006ff61 : pop rbx ; pop rbp ; ret
0x000000000006ff85 : pop rbx ; pop rbp ; ret
0x000000000006ffcf : pop rbx ; pop rbp ; ret
0x000000000007033d : pop rbx ; pop rbp ; ret
0x0000000000070392 : pop rbx ; pop rbp ; ret
0x0000000000070442 : pop rbx ; pop rbp ; ret
0x0000000000070451 : pop rbx ; pop rbp ; ret
0x0000000000070f0a : pop rbx ; pop rbp ; ret
0x0000000000070f55 : pop rbx ; pop rbp ; ret
0x0000000000072dc1 : pop rbx ; pop rbp ; ret
0x00000000000745fa : pop rbx ; pop rbp ; ret
0x0000000000074636 : pop rbx ; pop rbp ; ret
0x000000000007499e : pop rbx ; pop rbp ; ret
0x00000000000749b8 : pop rbx ; pop rbp ; ret
0x0000000000077d3e : pop rbx ; pop rbp ; ret
0x0000000000077d56 : pop rbx ; pop rbp ; ret
0x0000000000079130 : pop rbx ; pop rbp ; ret
0x0000000000079513 : pop rbx ; pop rbp ; ret
0x00000000000796cf : pop rbx ; pop rbp ; ret
0x000000000007978d : pop rbx ; pop rbp ; ret
0x0000000000079839 : pop rbx ; pop rbp ; ret
0x0000000000079aa3 : pop rbx ; pop rbp ; ret
0x000000000007a614 : pop rbx ; pop rbp ; ret
0x000000000007a675 : pop rbx ; pop rbp ; ret
0x000000000007abb2 : pop rbx ; pop rbp ; ret
0x000000000007ae61 : pop rbx ; pop rbp ; ret
0x000000000007bc67 : pop rbx ; pop rbp ; ret
0x000000000007be31 : pop rbx ; pop rbp ; ret
0x000000000007c798 : pop rbx ; pop rbp ; ret
0x000000000007c8d6 : pop rbx ; pop rbp ; ret
0x000000000007c907 : pop rbx ; pop rbp ; ret
0x000000000007db2e : pop rbx ; pop rbp ; ret
0x000000000007db71 : pop rbx ; pop rbp ; ret
0x000000000007df8c : pop rbx ; pop rbp ; ret
0x0000000000083093 : pop rbx ; pop rbp ; ret
0x00000000000841f3 : pop rbx ; pop rbp ; ret
0x0000000000085375 : pop rbx ; pop rbp ; ret
0x0000000000085907 : pop rbx ; pop rbp ; ret
0x0000000000089086 : pop rbx ; pop rbp ; ret
0x000000000008b4ae : pop rbx ; pop rbp ; ret
0x000000000008b506 : pop rbx ; pop rbp ; ret
0x000000000008d906 : pop rbx ; pop rbp ; ret
0x0000000000094e7d : pop rbx ; pop rbp ; ret
0x0000000000094e9a : pop rbx ; pop rbp ; ret
0x0000000000096c12 : pop rbx ; pop rbp ; ret
0x0000000000096c29 : pop rbx ; pop rbp ; ret
0x000000000009751f : pop rbx ; pop rbp ; ret
0x000000000009ed83 : pop rbx ; pop rbp ; ret
0x00000000000abd36 : pop rbx ; pop rbp ; ret
0x00000000000ac2c6 : pop rbx ; pop rbp ; ret
0x00000000000b62e9 : pop rbx ; pop rbp ; ret
0x00000000000b6397 : pop rbx ; pop rbp ; ret
0x00000000000b6439 : pop rbx ; pop rbp ; ret
0x00000000000ba32a : pop rbx ; pop rbp ; ret
0x00000000000baa83 : pop rbx ; pop rbp ; ret
0x00000000000bb6f6 : pop rbx ; pop rbp ; ret
0x00000000000bb724 : pop rbx ; pop rbp ; ret
0x00000000000bd090 : pop rbx ; pop rbp ; ret
0x00000000000bdb6f : pop rbx ; pop rbp ; ret
0x00000000000c8089 : pop rbx ; pop rbp ; ret
0x00000000000c80c9 : pop rbx ; pop rbp ; ret
0x00000000000c81f6 : pop rbx ; pop rbp ; ret
0x00000000000c8239 : pop rbx ; pop rbp ; ret
0x00000000000c8843 : pop rbx ; pop rbp ; ret
0x00000000000c89d0 : pop rbx ; pop rbp ; ret
0x00000000000c89ef : pop rbx ; pop rbp ; ret
0x00000000000cae0b : pop rbx ; pop rbp ; ret
0x00000000000cae6f : pop rbx ; pop rbp ; ret
0x00000000000cc267 : pop rbx ; pop rbp ; ret
0x00000000000cc277 : pop rbx ; pop rbp ; ret
0x00000000000ce09b : pop rbx ; pop rbp ; ret
0x00000000000ce0ab : pop rbx ; pop rbp ; ret
0x00000000000cf4af : pop rbx ; pop rbp ; ret
0x00000000000d71f7 : pop rbx ; pop rbp ; ret
0x00000000000da2d6 : pop rbx ; pop rbp ; ret
0x00000000000ef921 : pop rbx ; pop rbp ; ret
0x00000000000f44b9 : pop rbx ; pop rbp ; ret
0x00000000000f5b57 : pop rbx ; pop rbp ; ret
0x00000000000f5bf0 : pop rbx ; pop rbp ; ret
0x00000000000f5c2b : pop rbx ; pop rbp ; ret
0x00000000000f5c58 : pop rbx ; pop rbp ; ret
0x00000000000fccf6 : pop rbx ; pop rbp ; ret
0x00000000000ff6e3 : pop rbx ; pop rbp ; ret
0x0000000000101e32 : pop rbx ; pop rbp ; ret
0x00000000001023b4 : pop rbx ; pop rbp ; ret
0x0000000000104f74 : pop rbx ; pop rbp ; ret
0x0000000000104fc2 : pop rbx ; pop rbp ; ret
0x0000000000105d40 : pop rbx ; pop rbp ; ret
0x0000000000105db0 : pop rbx ; pop rbp ; ret
0x0000000000106318 : pop rbx ; pop rbp ; ret
0x00000000001063e4 : pop rbx ; pop rbp ; ret
0x00000000001072d9 : pop rbx ; pop rbp ; ret
0x000000000010ea3a : pop rbx ; pop rbp ; ret
0x000000000010ea65 : pop rbx ; pop rbp ; ret
0x000000000010ec36 : pop rbx ; pop rbp ; ret
0x000000000010ec8b : pop rbx ; pop rbp ; ret
0x000000000010ecbb : pop rbx ; pop rbp ; ret
0x000000000010eceb : pop rbx ; pop rbp ; ret
0x0000000000112d34 : pop rbx ; pop rbp ; ret
0x0000000000112efc : pop rbx ; pop rbp ; ret
0x0000000000112f48 : pop rbx ; pop rbp ; ret
0x0000000000112fb1 : pop rbx ; pop rbp ; ret
0x0000000000112fcf : pop rbx ; pop rbp ; ret
0x0000000000115899 : pop rbx ; pop rbp ; ret
0x00000000001158bb : pop rbx ; pop rbp ; ret
0x0000000000116bec : pop rbx ; pop rbp ; ret
0x0000000000116c38 : pop rbx ; pop rbp ; ret
0x0000000000116ea6 : pop rbx ; pop rbp ; ret
0x0000000000116ef5 : pop rbx ; pop rbp ; ret
0x00000000001178f0 : pop rbx ; pop rbp ; ret
0x000000000011791e : pop rbx ; pop rbp ; ret
0x000000000011791d : pop rbx ; pop rbp ; ret
0x00000000001180ec : pop rbx ; pop rbp ; ret
0x0000000000118138 : pop rbx ; pop rbp ; ret
0x00000000001183a6 : pop rbx ; pop rbp ; ret
0x00000000001183f5 : pop rbx ; pop rbp ; ret
0x0000000000119591 : pop rbx ; pop rbp ; ret
0x000000000011f2f9 : pop rbx ; pop rbp ; ret
0x000000000011f336 : pop rbx ; pop rbp ; ret
0x000000000011f39a : pop rbx ; pop rbp ; ret
0x000000000011f931 : pop rbx ; pop rbp ; ret
0x00000000001201b5 : pop rbx ; pop rbp ; ret
0x0000000000120777 : pop rbx ; pop rbp ; ret
0x000000000012221b : pop rbx ; pop rbp ; ret
0x0000000000123e94 : pop rbx ; pop rbp ; ret
0x0000000000123fd7 : pop rbx ; pop rbp ; ret
0x0000000000124041 : pop rbx ; pop rbp ; ret
0x0000000000125177 : pop rbx ; pop rbp ; ret
0x0000000000125176 : pop rbx ; pop rbp ; ret
0x00000000001287c2 : pop rbx ; pop rbp ; ret
0x000000000012b9eb : pop rbx ; pop rbp ; ret
0x000000000012bf79 : pop rbx ; pop rbp ; ret
0x000000000012cbfb : pop rbx ; pop rbp ; ret
0x000000000012cd64 : pop rbx ; pop rbp ; ret
0x000000000012cd98 : pop rbx ; pop rbp ; ret
0x000000000012d69e : pop rbx ; pop rbp ; ret
0x000000000012d6db : pop rbx ; pop rbp ; ret
0x000000000012d78b : pop rbx ; pop rbp ; ret
0x000000000012d7db : pop rbx ; pop rbp ; ret
0x000000000012d85b : pop rbx ; pop rbp ; ret
0x000000000012e106 : pop rbx ; pop rbp ; ret
0x000000000012e14e : pop rbx ; pop rbp ; ret
0x000000000012e223 : pop rbx ; pop rbp ; ret
0x000000000012e867 : pop rbx ; pop rbp ; ret
0x000000000012f34d : pop rbx ; pop rbp ; ret
0x000000000012f3a3 : pop rbx ; pop rbp ; ret
0x000000000012f5ed : pop rbx ; pop rbp ; ret
0x000000000012f60b : pop rbx ; pop rbp ; ret
0x000000000012f667 : pop rbx ; pop rbp ; ret
0x00000000001303e2 : pop rbx ; pop rbp ; ret
0x0000000000130420 : pop rbx ; pop rbp ; ret
0x0000000000130440 : pop rbx ; pop rbp ; ret
0x0000000000130474 : pop rbx ; pop rbp ; ret
0x0000000000130498 : pop rbx ; pop rbp ; ret
0x00000000001304bb : pop rbx ; pop rbp ; ret
0x00000000001304fe : pop rbx ; pop rbp ; ret
0x0000000000130534 : pop rbx ; pop rbp ; ret
0x0000000000130556 : pop rbx ; pop rbp ; ret
0x00000000001305d5 : pop rbx ; pop rbp ; ret
0x00000000001305fd : pop rbx ; pop rbp ; ret
0x0000000000130624 : pop rbx ; pop rbp ; ret
0x000000000013067e : pop rbx ; pop rbp ; ret
0x0000000000133039 : pop rbx ; pop rbp ; ret
0x000000000013375f : pop rbx ; pop rbp ; ret
0x0000000000133812 : pop rbx ; pop rbp ; ret
0x0000000000136b6a : pop rbx ; pop rbp ; ret
0x0000000000136c15 : pop rbx ; pop rbp ; ret
0x00000000001370db : pop rbx ; pop rbp ; ret
0x000000000013721b : pop rbx ; pop rbp ; ret
0x00000000001373b0 : pop rbx ; pop rbp ; ret
0x000000000013758d : pop rbx ; pop rbp ; ret
0x0000000000137d67 : pop rbx ; pop rbp ; ret
0x0000000000137d80 : pop rbx ; pop rbp ; ret
0x0000000000139199 : pop rbx ; pop rbp ; ret
0x000000000013a8df : pop rbx ; pop rbp ; ret
0x000000000013a93b : pop rbx ; pop rbp ; ret
0x000000000013a946 : pop rbx ; pop rbp ; ret
0x000000000013ab43 : pop rbx ; pop rbp ; ret
0x000000000013ab8c : pop rbx ; pop rbp ; ret
0x000000000013ac03 : pop rbx ; pop rbp ; ret
0x000000000013ac4c : pop rbx ; pop rbp ; ret
0x000000000013acc3 : pop rbx ; pop rbp ; ret
0x000000000013ad0c : pop rbx ; pop rbp ; ret
0x000000000013ad83 : pop rbx ; pop rbp ; ret
0x000000000013adcc : pop rbx ; pop rbp ; ret
0x000000000013af27 : pop rbx ; pop rbp ; ret
0x000000000013af36 : pop rbx ; pop rbp ; ret
0x000000000013afa6 : pop rbx ; pop rbp ; ret
0x000000000013afb6 : pop rbx ; pop rbp ; ret
0x000000000013b113 : pop rbx ; pop rbp ; ret
0x000000000013b148 : pop rbx ; pop rbp ; ret
0x000000000013b186 : pop rbx ; pop rbp ; ret
0x000000000013b852 : pop rbx ; pop rbp ; ret
0x000000000013b86e : pop rbx ; pop rbp ; ret
0x000000000013b912 : pop rbx ; pop rbp ; ret
0x000000000013b92e : pop rbx ; pop rbp ; ret
0x000000000013b9d2 : pop rbx ; pop rbp ; ret
0x000000000013b9ee : pop rbx ; pop rbp ; ret
0x000000000013ba92 : pop rbx ; pop rbp ; ret
0x000000000013baae : pop rbx ; pop rbp ; ret
0x000000000013bef9 : pop rbx ; pop rbp ; ret
0x000000000013bf3f : pop rbx ; pop rbp ; ret
0x000000000013ddd1 : pop rbx ; pop rbp ; ret
0x0000000000140ca9 : pop rbx ; pop rbp ; ret
0x0000000000140db6 : pop rbx ; pop rbp ; ret
0x0000000000141f84 : pop rbx ; pop rbp ; ret
0x000000000014282f : pop rbx ; pop rbp ; ret
0x00000000001428d0 : pop rbx ; pop rbp ; ret
0x0000000000142c41 : pop rbx ; pop rbp ; ret
0x0000000000174146 : pop rbx ; pop rbp ; ret
0x00000000001743ae : pop rbx ; pop rbp ; ret
0x000000000017514f : pop rbx ; pop rbp ; ret
0x00000000001752ef : pop rbx ; pop rbp ; ret
0x000000000007915b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000101fc1 : pop rbx ; push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x000000000002a69a : pop rbx ; ret
0x000000000002a6d8 : pop rbx ; ret
0x000000000002a6ea : pop rbx ; ret
0x0000000000033ee8 : pop rbx ; ret
0x0000000000033f13 : pop rbx ; ret
0x0000000000035234 : pop rbx ; ret
0x0000000000035841 : pop rbx ; ret
0x0000000000035b9f : pop rbx ; ret
0x0000000000035bf1 : pop rbx ; ret
0x0000000000035d91 : pop rbx ; ret
0x0000000000035e0f : pop rbx ; ret
0x0000000000035e0e : pop rbx ; ret
0x0000000000036477 : pop rbx ; ret
0x0000000000036767 : pop rbx ; ret
0x0000000000039ee7 : pop rbx ; ret
0x000000000003a6cd : pop rbx ; ret
0x000000000003a6f9 : pop rbx ; ret
0x000000000003a7a8 : pop rbx ; ret
0x000000000003a7c6 : pop rbx ; ret
0x000000000003a802 : pop rbx ; ret
0x000000000003a872 : pop rbx ; ret
0x000000000003aa07 : pop rbx ; ret
0x000000000003aab1 : pop rbx ; ret
0x0000000000045389 : pop rbx ; ret
0x000000000004705d : pop rbx ; ret
0x000000000004706a : pop rbx ; ret
0x0000000000047077 : pop rbx ; ret
0x0000000000047d84 : pop rbx ; ret
0x0000000000048039 : pop rbx ; ret
0x00000000000481d0 : pop rbx ; ret
0x0000000000048439 : pop rbx ; ret
0x00000000000490b7 : pop rbx ; ret
0x000000000004a019 : pop rbx ; ret
0x000000000004a4a0 : pop rbx ; ret
0x000000000004a682 : pop rbx ; ret
0x000000000004a69a : pop rbx ; ret
0x000000000004a809 : pop rbx ; ret
0x0000000000054e56 : pop rbx ; ret
0x000000000006acc6 : pop rbx ; ret
0x000000000006acd2 : pop rbx ; ret
0x000000000006ad29 : pop rbx ; ret
0x000000000006ad39 : pop rbx ; ret
0x000000000006b351 : pop rbx ; ret
0x000000000006b635 : pop rbx ; ret
0x000000000006b93f : pop rbx ; ret
0x000000000006ba69 : pop rbx ; ret
0x000000000006d832 : pop rbx ; ret
0x000000000006d879 : pop rbx ; ret
0x000000000006e53e : pop rbx ; ret
0x000000000006e57a : pop rbx ; ret
0x000000000007010b : pop rbx ; ret
0x0000000000070151 : pop rbx ; ret
0x00000000000704fb : pop rbx ; ret
0x0000000000070541 : pop rbx ; ret
0x000000000007067d : pop rbx ; ret
0x00000000000706c1 : pop rbx ; ret
0x0000000000070ff2 : pop rbx ; ret
0x000000000007103a : pop rbx ; ret
0x0000000000071194 : pop rbx ; ret
0x00000000000711e1 : pop rbx ; ret
0x000000000007132b : pop rbx ; ret
0x0000000000071371 : pop rbx ; ret
0x0000000000071ccb : pop rbx ; ret
0x0000000000071f8c : pop rbx ; ret
0x0000000000072098 : pop rbx ; ret
0x00000000000720a9 : pop rbx ; ret
0x0000000000072169 : pop rbx ; ret
0x0000000000072258 : pop rbx ; ret
0x0000000000072292 : pop rbx ; ret
0x0000000000072be0 : pop rbx ; ret
0x0000000000072c7e : pop rbx ; ret
0x0000000000072cc2 : pop rbx ; ret
0x0000000000072d06 : pop rbx ; ret
0x0000000000072fd7 : pop rbx ; ret
0x000000000007469e : pop rbx ; ret
0x0000000000075517 : pop rbx ; ret
0x0000000000075668 : pop rbx ; ret
0x0000000000075b89 : pop rbx ; ret
0x0000000000075bd1 : pop rbx ; ret
0x0000000000075f8e : pop rbx ; ret
0x0000000000075fd1 : pop rbx ; ret
0x00000000000760b2 : pop rbx ; ret
0x00000000000760f9 : pop rbx ; ret
0x00000000000761f4 : pop rbx ; ret
0x0000000000076241 : pop rbx ; ret
0x00000000000762e3 : pop rbx ; ret
0x00000000000764d9 : pop rbx ; ret
0x0000000000076521 : pop rbx ; ret
0x0000000000076651 : pop rbx ; ret
0x0000000000076e7e : pop rbx ; ret
0x0000000000076ec1 : pop rbx ; ret
0x0000000000076fbe : pop rbx ; ret
0x0000000000076ffa : pop rbx ; ret
0x000000000007746c : pop rbx ; ret
0x0000000000077498 : pop rbx ; ret
0x000000000007789d : pop rbx ; ret
0x0000000000077c0d : pop rbx ; ret
0x000000000007808a : pop rbx ; ret
0x00000000000780d1 : pop rbx ; ret
0x000000000007832d : pop rbx ; ret
0x0000000000078337 : pop rbx ; ret
0x00000000000783c6 : pop rbx ; ret
0x0000000000078422 : pop rbx ; ret
0x000000000007845d : pop rbx ; ret
0x0000000000078491 : pop rbx ; ret
0x00000000000784bb : pop rbx ; ret
0x0000000000078968 : pop rbx ; ret
0x00000000000789be : pop rbx ; ret
0x00000000000789d8 : pop rbx ; ret
0x000000000007b1aa : pop rbx ; ret
0x000000000007b212 : pop rbx ; ret
0x000000000007b2ba : pop rbx ; ret
0x000000000007b2d8 : pop rbx ; ret
0x000000000007b40a : pop rbx ; ret
0x000000000007b430 : pop rbx ; ret
0x000000000007b532 : pop rbx ; ret
0x000000000007b622 : pop rbx ; ret
0x000000000007bf7f : pop rbx ; ret
0x000000000007bfbd : pop rbx ; ret
0x000000000007bfd4 : pop rbx ; ret
0x000000000007c964 : pop rbx ; ret
0x000000000007d0ab : pop rbx ; ret
0x0000000000082f17 : pop rbx ; ret
0x0000000000082f3a : pop rbx ; ret
0x00000000000844e5 : pop rbx ; ret
0x00000000000844e9 : pop rbx ; ret
0x000000000008652b : pop rbx ; ret
0x00000000000865e0 : pop rbx ; ret
0x00000000000865e7 : pop rbx ; ret
0x0000000000088509 : pop rbx ; ret
0x0000000000088522 : pop rbx ; ret
0x000000000008870e : pop rbx ; ret
0x0000000000088743 : pop rbx ; ret
0x0000000000089130 : pop rbx ; ret
0x0000000000094a99 : pop rbx ; ret
0x000000000009735c : pop rbx ; ret
0x0000000000097389 : pop rbx ; ret
0x000000000009796c : pop rbx ; ret
0x00000000000aabd2 : pop rbx ; ret
0x00000000000aabea : pop rbx ; ret
0x00000000000aac01 : pop rbx ; ret
0x00000000000aac12 : pop rbx ; ret
0x00000000000aac22 : pop rbx ; ret
0x00000000000aac9d : pop rbx ; ret
0x00000000000aaca4 : pop rbx ; ret
0x00000000000aacab : pop rbx ; ret
0x00000000000aacb2 : pop rbx ; ret
0x00000000000aacb9 : pop rbx ; ret
0x00000000000aacc0 : pop rbx ; ret
0x00000000000aacc7 : pop rbx ; ret
0x00000000000aace3 : pop rbx ; ret
0x00000000000ac21d : pop rbx ; ret
0x00000000000ac258 : pop rbx ; ret
0x00000000000ac9eb : pop rbx ; ret
0x00000000000aca3d : pop rbx ; ret
0x00000000000b9fb0 : pop rbx ; ret
0x00000000000b9ff6 : pop rbx ; ret
0x00000000000ba00c : pop rbx ; ret
0x00000000000ba016 : pop rbx ; ret
0x00000000000ba935 : pop rbx ; ret
0x00000000000bac3f : pop rbx ; ret
0x00000000000bad69 : pop rbx ; ret
0x00000000000bb8cf : pop rbx ; ret
0x00000000000bb8ce : pop rbx ; ret
0x00000000000bc60e : pop rbx ; ret
0x00000000000bc671 : pop rbx ; ret
0x00000000000bf788 : pop rbx ; ret
0x00000000000c75be : pop rbx ; ret
0x00000000000c788d : pop rbx ; ret
0x00000000000c78b6 : pop rbx ; ret
0x00000000000c7989 : pop rbx ; ret
0x00000000000c7ef0 : pop rbx ; ret
0x00000000000c7f44 : pop rbx ; ret
0x00000000000c7fc0 : pop rbx ; ret
0x00000000000c83df : pop rbx ; ret
0x00000000000c83f9 : pop rbx ; ret
0x00000000000c87a1 : pop rbx ; ret
0x00000000000cc04a : pop rbx ; ret
0x00000000000d6ce8 : pop rbx ; ret
0x00000000000d72eb : pop rbx ; ret
0x00000000000d72f2 : pop rbx ; ret
0x00000000000d7302 : pop rbx ; ret
0x00000000000d7323 : pop rbx ; ret
0x00000000000d7334 : pop rbx ; ret
0x00000000000d7353 : pop rbx ; ret
0x00000000000da1cd : pop rbx ; ret
0x00000000000daf65 : pop rbx ; ret
0x00000000000daf7b : pop rbx ; ret
0x00000000000e83c2 : pop rbx ; ret
0x00000000000ea69b : pop rbx ; ret
0x00000000000f76f3 : pop rbx ; ret
0x00000000000f7727 : pop rbx ; ret
0x00000000000f7849 : pop rbx ; ret
0x00000000000f7869 : pop rbx ; ret
0x00000000000f789f : pop rbx ; ret
0x00000000000f82b4 : pop rbx ; ret
0x00000000000fba64 : pop rbx ; ret
0x00000000000fba72 : pop rbx ; ret
0x00000000000fc1f4 : pop rbx ; ret
0x00000000000fc1f3 : pop rbx ; ret
0x00000000000fc1f2 : pop rbx ; ret
0x00000000000fc70a : pop rbx ; ret
0x00000000000fc727 : pop rbx ; ret
0x00000000000fc807 : pop rbx ; ret
0x00000000000fca45 : pop rbx ; ret
0x00000000000fca80 : pop rbx ; ret
0x00000000000fca9c : pop rbx ; ret
0x00000000000fcae5 : pop rbx ; ret
0x00000000000fdc6c : pop rbx ; ret
0x00000000000fdc9d : pop rbx ; ret
0x00000000000fe105 : pop rbx ; ret
0x00000000000fe2c6 : pop rbx ; ret
0x00000000000fe502 : pop rbx ; ret
0x0000000000101a66 : pop rbx ; ret
0x0000000000101ffd : pop rbx ; ret
0x00000000001024f2 : pop rbx ; ret
0x000000000010257a : pop rbx ; ret
0x00000000001025d8 : pop rbx ; ret
0x0000000000105e34 : pop rbx ; ret
0x0000000000105e72 : pop rbx ; ret
0x0000000000108b08 : pop rbx ; ret
0x0000000000109566 : pop rbx ; ret
0x000000000010ed16 : pop rbx ; ret
0x0000000000113334 : pop rbx ; ret
0x0000000000115208 : pop rbx ; ret
0x00000000001194ac : pop rbx ; ret
0x000000000011ce44 : pop rbx ; ret
0x000000000011ce6a : pop rbx ; ret
0x000000000011d175 : pop rbx ; ret
0x000000000011fc9e : pop rbx ; ret
0x000000000011fd85 : pop rbx ; ret
0x0000000000123005 : pop rbx ; ret
0x0000000000123004 : pop rbx ; ret
0x0000000000123d11 : pop rbx ; ret
0x0000000000123d55 : pop rbx ; ret
0x000000000012413e : pop rbx ; ret
0x00000000001288ca : pop rbx ; ret
0x00000000001289c4 : pop rbx ; ret
0x000000000012b047 : pop rbx ; ret
0x000000000012b055 : pop rbx ; ret
0x000000000012b88e : pop rbx ; ret
0x000000000012b8c8 : pop rbx ; ret
0x000000000012b987 : pop rbx ; ret
0x000000000012b9bf : pop rbx ; ret
0x000000000012c590 : pop rbx ; ret
0x000000000012e291 : pop rbx ; ret
0x000000000012e2b1 : pop rbx ; ret
0x000000000012e69e : pop rbx ; ret
0x000000000012e6d8 : pop rbx ; ret
0x000000000012eb5b : pop rbx ; ret
0x000000000012eb80 : pop rbx ; ret
0x000000000012ebdb : pop rbx ; ret
0x000000000012ec00 : pop rbx ; ret
0x000000000012f823 : pop rbx ; ret
0x0000000000136a29 : pop rbx ; ret
0x0000000000136d65 : pop rbx ; ret
0x0000000000136e63 : pop rbx ; ret
0x0000000000136f58 : pop rbx ; ret
0x0000000000137058 : pop rbx ; ret
0x0000000000137495 : pop rbx ; ret
0x00000000001375e0 : pop rbx ; ret
0x0000000000138241 : pop rbx ; ret
0x0000000000138271 : pop rbx ; ret
0x00000000001382c0 : pop rbx ; ret
0x0000000000138f29 : pop rbx ; ret
0x000000000013a9be : pop rbx ; ret
0x000000000013a9df : pop rbx ; ret
0x000000000013aa00 : pop rbx ; ret
0x000000000013aa2e : pop rbx ; ret
0x000000000013aa4f : pop rbx ; ret
0x000000000013aa6f : pop rbx ; ret
0x000000000013aade : pop rbx ; ret
0x000000000013aaff : pop rbx ; ret
0x000000000013ae3e : pop rbx ; ret
0x000000000013ae60 : pop rbx ; ret
0x000000000013ae81 : pop rbx ; ret
0x000000000013aeae : pop rbx ; ret
0x000000000013aed0 : pop rbx ; ret
0x000000000013aef0 : pop rbx ; ret
0x000000000013b01e : pop rbx ; ret
0x000000000013b045 : pop rbx ; ret
0x000000000013b06e : pop rbx ; ret
0x000000000013b08e : pop rbx ; ret
0x000000000013b0af : pop rbx ; ret
0x000000000013b0d0 : pop rbx ; ret
0x000000000013bbce : pop rbx ; ret
0x000000000013bbf0 : pop rbx ; ret
0x000000000013bc0f : pop rbx ; ret
0x000000000013bc3e : pop rbx ; ret
0x000000000013bc60 : pop rbx ; ret
0x000000000013bc7f : pop rbx ; ret
0x000000000013bcae : pop rbx ; ret
0x000000000013bccf : pop rbx ; ret
0x000000000013bcef : pop rbx ; ret
0x000000000013bd1e : pop rbx ; ret
0x000000000013bd3f : pop rbx ; ret
0x000000000013bd5f : pop rbx ; ret
0x000000000013c1cc : pop rbx ; ret
0x000000000013c311 : pop rbx ; ret
0x000000000013c3eb : pop rbx ; ret
0x000000000013c42e : pop rbx ; ret
0x000000000013c553 : pop rbx ; ret
0x00000000001407e4 : pop rbx ; ret
0x0000000000140823 : pop rbx ; ret
0x0000000000140eb0 : pop rbx ; ret
0x000000000014117e : pop rbx ; ret
0x00000000001411de : pop rbx ; ret
0x00000000001435b3 : pop rbx ; ret
0x00000000001435fb : pop rbx ; ret
0x0000000000143825 : pop rbx ; ret
0x0000000000144337 : pop rbx ; ret
0x0000000000144346 : pop rbx ; ret
0x00000000001443a2 : pop rbx ; ret
0x000000000017427f : pop rbx ; ret
0x0000000000174327 : pop rbx ; ret
0x00000000001743fe : pop rbx ; ret
0x000000000017457b : pop rbx ; ret
0x00000000001b2ddd : pop rbx ; ret
0x0000000000001b18 : pop rbx ; ret 0x2a63
0x0000000000185e20 : pop rbx ; ret 0x6f9
0x0000000000194f4d : pop rbx ; sti ; call qword ptr [rax]
0x00000000000ad159 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000001fb74 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000943e6 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000d6f8d : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000d6fd0 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e8480 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fc454 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fc474 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010314a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000012e1a7 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000137cca : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009ee5b : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000019b6dd : pop rcx ; add al, byte ptr [rax] ; je 0x19b6b1 ; cli ; jmp rsp
0x00000000001419de : pop rcx ; add dword ptr [rax], eax ; add al, ch ; pop rcx ; ret 0xffee
0x0000000000194330 : pop rcx ; clc ; ret 0x6e1f
0x00000000001946b8 : pop rcx ; clc ; ret 0x6e1f
0x00000000001960d1 : pop rcx ; cld ; jmp rax
0x0000000000034ce0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x0000000000034d0d : pop rcx ; enter 0x280f, -0x3f ; ret
0x00000000000662e2 : pop rcx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000be064 : pop rcx ; or eax, 0x440f4800 ; ret 0x8d48
0x000000000013cc0f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013d33d : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000101f3b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ea69a : pop rcx ; pop rbx ; ret
0x0000000000001b17 : pop rcx ; pop rbx ; ret 0x2a63
0x000000000003c1af : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000003c24f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000003f46f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000003f50f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000ae77f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000ae81f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000b386f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000b390f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000001419e3 : pop rcx ; ret 0xffee
0x0000000000188e7c : pop rcx ; sal bl, 1 ; jmp rcx
0x000000000007d87e : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000000ac9e3 : pop rcx ; sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000001286c3 : pop rcx ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000001515e8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151738 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151888 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519d8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b28 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c78 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dc8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f18 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152068 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001521b8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152308 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152458 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001525a8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001526f8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152848 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fb8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154108 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154258 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543a8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544f8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154648 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154798 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548e8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a38 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b88 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cd8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e28 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f78 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001550c8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000155218 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156988 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ad8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c28 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d78 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ec8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157018 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157168 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572b8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157408 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157558 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001576a8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577f8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157948 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157a98 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157be8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000f6fc2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000005df1d : pop rdi ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000001b1b0d : pop rdi ; add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x000000000014bc0d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010741a : pop rdi ; call rax
0x000000000019576d : pop rdi ; cld ; call qword ptr [rax]
0x0000000000195969 : pop rdi ; cld ; jmp qword ptr [rax]
0x00000000001960e1 : pop rdi ; cld ; jmp rax
0x000000000019582d : pop rdi ; cld ; jmp rdx
0x0000000000153009 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153051 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015308f : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001530c7 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153105 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015312d : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153155 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015316d : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001559d9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a21 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a5f : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a97 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155ad5 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155afd : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b25 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b3d : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583a9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001583f1 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015842f : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158467 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584a5 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584cd : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001584f5 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015850d : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e19 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152e69 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152eaf : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152ee7 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f25 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f4d : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f75 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f8d : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001557e9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155839 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015587f : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558b7 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558f5 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015591d : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155945 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015595d : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001581b9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158209 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015824f : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158287 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582c5 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001582ed : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158315 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015832d : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001850de : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000104052 : pop rdi ; jmp rax
0x00000000001840a1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000152c39 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152c89 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152ccf : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d07 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d45 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d6d : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d95 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152dad : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155609 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155659 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015569f : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556d7 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155715 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015573d : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155765 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015577d : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157fd9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158029 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015806f : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001580a7 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001580e5 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015810d : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158135 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015814d : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152a69 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155439 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e09 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b65 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152b8d : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152bb5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000155535 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015555d : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000155585 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f05 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f2d : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000157f55 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152ab1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152aef : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b27 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152bcd : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155481 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554bf : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554f7 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015559d : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e51 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157e8f : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157ec7 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f6d : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000020256 : pop rdi ; pop rbp ; ret
0x0000000000020e69 : pop rdi ; pop rbp ; ret
0x0000000000020ea0 : pop rdi ; pop rbp ; ret
0x00000000000213c0 : pop rdi ; pop rbp ; ret
0x0000000000022402 : pop rdi ; pop rbp ; ret
0x0000000000022cd0 : pop rdi ; pop rbp ; ret
0x000000000002304c : pop rdi ; pop rbp ; ret
0x00000000000236d8 : pop rdi ; pop rbp ; ret
0x0000000000029c72 : pop rdi ; pop rbp ; ret
0x0000000000029c89 : pop rdi ; pop rbp ; ret
0x000000000002b5db : pop rdi ; pop rbp ; ret
0x000000000002b613 : pop rdi ; pop rbp ; ret
0x000000000002c021 : pop rdi ; pop rbp ; ret
0x000000000002c0f6 : pop rdi ; pop rbp ; ret
0x000000000002c146 : pop rdi ; pop rbp ; ret
0x000000000002c454 : pop rdi ; pop rbp ; ret
0x000000000002c6ce : pop rdi ; pop rbp ; ret
0x000000000002c8c3 : pop rdi ; pop rbp ; ret
0x000000000002cc78 : pop rdi ; pop rbp ; ret
0x000000000002d055 : pop rdi ; pop rbp ; ret
0x000000000002d15e : pop rdi ; pop rbp ; ret
0x000000000002efc2 : pop rdi ; pop rbp ; ret
0x000000000002f267 : pop rdi ; pop rbp ; ret
0x000000000002ffa0 : pop rdi ; pop rbp ; ret
0x0000000000030a8f : pop rdi ; pop rbp ; ret
0x000000000003229a : pop rdi ; pop rbp ; ret
0x0000000000032447 : pop rdi ; pop rbp ; ret
0x00000000000395ed : pop rdi ; pop rbp ; ret
0x000000000003964e : pop rdi ; pop rbp ; ret
0x0000000000039ac2 : pop rdi ; pop rbp ; ret
0x000000000004561a : pop rdi ; pop rbp ; ret
0x00000000000457ff : pop rdi ; pop rbp ; ret
0x0000000000045853 : pop rdi ; pop rbp ; ret
0x0000000000048cdf : pop rdi ; pop rbp ; ret
0x000000000004a9a4 : pop rdi ; pop rbp ; ret
0x000000000004aa79 : pop rdi ; pop rbp ; ret
0x000000000004aca1 : pop rdi ; pop rbp ; ret
0x000000000004b700 : pop rdi ; pop rbp ; ret
0x000000000004d288 : pop rdi ; pop rbp ; ret
0x000000000004d339 : pop rdi ; pop rbp ; ret
0x00000000000503b1 : pop rdi ; pop rbp ; ret
0x0000000000050cd4 : pop rdi ; pop rbp ; ret
0x0000000000050e0a : pop rdi ; pop rbp ; ret
0x0000000000050e5c : pop rdi ; pop rbp ; ret
0x0000000000050fbf : pop rdi ; pop rbp ; ret
0x0000000000055bfd : pop rdi ; pop rbp ; ret
0x0000000000055e1b : pop rdi ; pop rbp ; ret
0x0000000000055e5c : pop rdi ; pop rbp ; ret
0x0000000000056ae8 : pop rdi ; pop rbp ; ret
0x0000000000058ae4 : pop rdi ; pop rbp ; ret
0x0000000000058b0a : pop rdi ; pop rbp ; ret
0x0000000000058bef : pop rdi ; pop rbp ; ret
0x000000000005bbae : pop rdi ; pop rbp ; ret
0x00000000000637b3 : pop rdi ; pop rbp ; ret
0x00000000000752ae : pop rdi ; pop rbp ; ret
0x00000000000776e8 : pop rdi ; pop rbp ; ret
0x0000000000088845 : pop rdi ; pop rbp ; ret
0x00000000000989f7 : pop rdi ; pop rbp ; ret
0x00000000000b7396 : pop rdi ; pop rbp ; ret
0x00000000000ba051 : pop rdi ; pop rbp ; ret
0x00000000000ba0af : pop rdi ; pop rbp ; ret
0x00000000000bf7f6 : pop rdi ; pop rbp ; ret
0x00000000000bf861 : pop rdi ; pop rbp ; ret
0x00000000000c52ae : pop rdi ; pop rbp ; ret
0x00000000000cc522 : pop rdi ; pop rbp ; ret
0x00000000000ccdbe : pop rdi ; pop rbp ; ret
0x00000000000cdf45 : pop rdi ; pop rbp ; ret
0x00000000000ceade : pop rdi ; pop rbp ; ret
0x00000000000cece6 : pop rdi ; pop rbp ; ret
0x00000000000cf241 : pop rdi ; pop rbp ; ret
0x00000000000cf327 : pop rdi ; pop rbp ; ret
0x00000000000cf873 : pop rdi ; pop rbp ; ret
0x00000000000d1aef : pop rdi ; pop rbp ; ret
0x00000000000d2294 : pop rdi ; pop rbp ; ret
0x00000000000d38cc : pop rdi ; pop rbp ; ret
0x00000000000d55ba : pop rdi ; pop rbp ; ret
0x00000000000d564b : pop rdi ; pop rbp ; ret
0x00000000000d5669 : pop rdi ; pop rbp ; ret
0x00000000000d8924 : pop rdi ; pop rbp ; ret
0x00000000000d8c52 : pop rdi ; pop rbp ; ret
0x00000000000d8ccb : pop rdi ; pop rbp ; ret
0x00000000000dcdc9 : pop rdi ; pop rbp ; ret
0x00000000000dd00e : pop rdi ; pop rbp ; ret
0x00000000000e94d2 : pop rdi ; pop rbp ; ret
0x00000000000e9573 : pop rdi ; pop rbp ; ret
0x00000000000e95a3 : pop rdi ; pop rbp ; ret
0x00000000000e98b8 : pop rdi ; pop rbp ; ret
0x00000000000eaab7 : pop rdi ; pop rbp ; ret
0x00000000000eaae1 : pop rdi ; pop rbp ; ret
0x00000000000eadf5 : pop rdi ; pop rbp ; ret
0x00000000000ef2c5 : pop rdi ; pop rbp ; ret
0x00000000000ef6da : pop rdi ; pop rbp ; ret
0x00000000000f1514 : pop rdi ; pop rbp ; ret
0x00000000000f156e : pop rdi ; pop rbp ; ret
0x00000000000f1634 : pop rdi ; pop rbp ; ret
0x00000000000f172f : pop rdi ; pop rbp ; ret
0x00000000000f603f : pop rdi ; pop rbp ; ret
0x00000000000f9918 : pop rdi ; pop rbp ; ret
0x00000000000fd958 : pop rdi ; pop rbp ; ret
0x00000000000fda23 : pop rdi ; pop rbp ; ret
0x00000000000febe2 : pop rdi ; pop rbp ; ret
0x00000000000febf9 : pop rdi ; pop rbp ; ret
0x0000000000103224 : pop rdi ; pop rbp ; ret
0x0000000000103410 : pop rdi ; pop rbp ; ret
0x0000000000104b1c : pop rdi ; pop rbp ; ret
0x00000000001052d9 : pop rdi ; pop rbp ; ret
0x000000000010537a : pop rdi ; pop rbp ; ret
0x0000000000105a7a : pop rdi ; pop rbp ; ret
0x0000000000105ba3 : pop rdi ; pop rbp ; ret
0x000000000010920e : pop rdi ; pop rbp ; ret
0x000000000010a092 : pop rdi ; pop rbp ; ret
0x000000000010a20b : pop rdi ; pop rbp ; ret
0x000000000010a2e3 : pop rdi ; pop rbp ; ret
0x0000000000110056 : pop rdi ; pop rbp ; ret
0x00000000001102da : pop rdi ; pop rbp ; ret
0x000000000011182b : pop rdi ; pop rbp ; ret
0x0000000000113e62 : pop rdi ; pop rbp ; ret
0x0000000000115e67 : pop rdi ; pop rbp ; ret
0x000000000011db26 : pop rdi ; pop rbp ; ret
0x000000000011f595 : pop rdi ; pop rbp ; ret
0x0000000000120fcb : pop rdi ; pop rbp ; ret
0x0000000000121249 : pop rdi ; pop rbp ; ret
0x00000000001213b0 : pop rdi ; pop rbp ; ret
0x00000000001220ab : pop rdi ; pop rbp ; ret
0x00000000001220cf : pop rdi ; pop rbp ; ret
0x00000000001223a2 : pop rdi ; pop rbp ; ret
0x000000000012366c : pop rdi ; pop rbp ; ret
0x00000000001236ca : pop rdi ; pop rbp ; ret
0x00000000001237e6 : pop rdi ; pop rbp ; ret
0x000000000012387e : pop rdi ; pop rbp ; ret
0x00000000001239fb : pop rdi ; pop rbp ; ret
0x0000000000123b7f : pop rdi ; pop rbp ; ret
0x000000000012435a : pop rdi ; pop rbp ; ret
0x0000000000124394 : pop rdi ; pop rbp ; ret
0x0000000000124638 : pop rdi ; pop rbp ; ret
0x0000000000124ab5 : pop rdi ; pop rbp ; ret
0x0000000000124d36 : pop rdi ; pop rbp ; ret
0x0000000000128ef2 : pop rdi ; pop rbp ; ret
0x0000000000128fdb : pop rdi ; pop rbp ; ret
0x000000000012971c : pop rdi ; pop rbp ; ret
0x0000000000129991 : pop rdi ; pop rbp ; ret
0x0000000000129aa8 : pop rdi ; pop rbp ; ret
0x0000000000129ac1 : pop rdi ; pop rbp ; ret
0x0000000000129ca8 : pop rdi ; pop rbp ; ret
0x0000000000129db1 : pop rdi ; pop rbp ; ret
0x0000000000129de9 : pop rdi ; pop rbp ; ret
0x000000000012a0fb : pop rdi ; pop rbp ; ret
0x000000000012c3ec : pop rdi ; pop rbp ; ret
0x000000000012c679 : pop rdi ; pop rbp ; ret
0x000000000012c6cc : pop rdi ; pop rbp ; ret
0x0000000000132882 : pop rdi ; pop rbp ; ret
0x0000000000132899 : pop rdi ; pop rbp ; ret
0x0000000000134692 : pop rdi ; pop rbp ; ret
0x00000000001346de : pop rdi ; pop rbp ; ret
0x00000000001347b2 : pop rdi ; pop rbp ; ret
0x0000000000134852 : pop rdi ; pop rbp ; ret
0x000000000013d519 : pop rdi ; pop rbp ; ret
0x000000000013e835 : pop rdi ; pop rbp ; ret
0x000000000013f445 : pop rdi ; pop rbp ; ret
0x000000000013f71c : pop rdi ; pop rbp ; ret
0x000000000013fa73 : pop rdi ; pop rbp ; ret
0x000000000013ff2e : pop rdi ; pop rbp ; ret
0x0000000000140bb1 : pop rdi ; pop rbp ; ret
0x0000000000140c4b : pop rdi ; pop rbp ; ret
0x0000000000142aa6 : pop rdi ; pop rbp ; ret
0x0000000000142b30 : pop rdi ; pop rbp ; ret
0x000000000014390c : pop rdi ; pop rbp ; ret
0x0000000000144739 : pop rdi ; pop rbp ; ret
0x000000000014476e : pop rdi ; pop rbp ; ret
0x0000000000144786 : pop rdi ; pop rbp ; ret
0x0000000000021102 : pop rdi ; ret
0x000000000002111a : pop rdi ; ret
0x0000000000021142 : pop rdi ; ret
0x000000000002116a : pop rdi ; ret
0x0000000000021192 : pop rdi ; ret
0x000000000002189b : pop rdi ; ret
0x0000000000022848 : pop rdi ; ret
0x0000000000022996 : pop rdi ; ret
0x0000000000023c1f : pop rdi ; ret
0x0000000000023e0f : pop rdi ; ret
0x0000000000023eb2 : pop rdi ; ret
0x0000000000023f0c : pop rdi ; ret
0x0000000000023f25 : pop rdi ; ret
0x0000000000024049 : pop rdi ; ret
0x0000000000024089 : pop rdi ; ret
0x00000000000245d4 : pop rdi ; ret
0x00000000000247cd : pop rdi ; ret
0x000000000002486a : pop rdi ; ret
0x00000000000248d0 : pop rdi ; ret
0x00000000000248ef : pop rdi ; ret
0x0000000000024a19 : pop rdi ; ret
0x0000000000024a59 : pop rdi ; ret
0x0000000000024f7f : pop rdi ; ret
0x0000000000025323 : pop rdi ; ret
0x0000000000025b24 : pop rdi ; ret
0x0000000000026835 : pop rdi ; ret
0x000000000002687f : pop rdi ; ret
0x000000000002799c : pop rdi ; ret
0x00000000000279db : pop rdi ; ret
0x000000000002801b : pop rdi ; ret
0x000000000002885c : pop rdi ; ret
0x000000000002889c : pop rdi ; ret
0x0000000000028eeb : pop rdi ; ret
0x00000000000298d4 : pop rdi ; ret
0x0000000000029fa4 : pop rdi ; ret
0x000000000002a06d : pop rdi ; ret
0x000000000002a181 : pop rdi ; ret
0x000000000002aa22 : pop rdi ; ret
0x000000000002ac8c : pop rdi ; ret
0x000000000002bec5 : pop rdi ; ret
0x000000000002d780 : pop rdi ; ret
0x000000000002e1cb : pop rdi ; ret
0x000000000002e42b : pop rdi ; ret
0x000000000002e7d2 : pop rdi ; ret
0x00000000000306f7 : pop rdi ; ret
0x00000000000307a8 : pop rdi ; ret
0x00000000000325cd : pop rdi ; ret
0x0000000000032bef : pop rdi ; ret
0x0000000000032c91 : pop rdi ; ret
0x0000000000033336 : pop rdi ; ret
0x00000000000340b0 : pop rdi ; ret
0x0000000000037222 : pop rdi ; ret
0x0000000000037238 : pop rdi ; ret
0x0000000000037861 : pop rdi ; ret
0x00000000000397e6 : pop rdi ; ret
0x000000000003a4a6 : pop rdi ; ret
0x000000000003b52d : pop rdi ; ret
0x000000000003b589 : pop rdi ; ret
0x000000000003b9fd : pop rdi ; ret
0x000000000003ba59 : pop rdi ; ret
0x000000000003bb7a : pop rdi ; ret
0x000000000003bf9d : pop rdi ; ret
0x000000000003c6ff : pop rdi ; ret
0x000000000003f25d : pop rdi ; ret
0x000000000003f9df : pop rdi ; ret
0x00000000000421b5 : pop rdi ; ret
0x0000000000042c0d : pop rdi ; ret
0x00000000000460a3 : pop rdi ; ret
0x0000000000046f88 : pop rdi ; ret
0x0000000000046fef : pop rdi ; ret
0x00000000000472cf : pop rdi ; ret
0x0000000000047780 : pop rdi ; ret
0x00000000000486ca : pop rdi ; ret
0x00000000000486e3 : pop rdi ; ret
0x00000000000487d3 : pop rdi ; ret
0x00000000000488ae : pop rdi ; ret
0x0000000000049165 : pop rdi ; ret
0x00000000000492d9 : pop rdi ; ret
0x00000000000499b8 : pop rdi ; ret
0x000000000004a31f : pop rdi ; ret
0x000000000004a349 : pop rdi ; ret
0x0000000000052e0b : pop rdi ; ret
0x0000000000053175 : pop rdi ; ret
0x0000000000055060 : pop rdi ; ret
0x0000000000055275 : pop rdi ; ret
0x0000000000055429 : pop rdi ; ret
0x00000000000554ef : pop rdi ; ret
0x0000000000055586 : pop rdi ; ret
0x000000000006adff : pop rdi ; ret
0x000000000006b250 : pop rdi ; ret
0x000000000006d506 : pop rdi ; ret
0x000000000006e9bc : pop rdi ; ret
0x000000000006eca5 : pop rdi ; ret
0x000000000006ecfe : pop rdi ; ret
0x000000000006f2fa : pop rdi ; ret
0x0000000000070c99 : pop rdi ; ret
0x0000000000070d06 : pop rdi ; ret
0x0000000000071a6a : pop rdi ; ret
0x0000000000071d84 : pop rdi ; ret
0x0000000000071e2b : pop rdi ; ret
0x0000000000072605 : pop rdi ; ret
0x0000000000072775 : pop rdi ; ret
0x00000000000730e0 : pop rdi ; ret
0x00000000000731f3 : pop rdi ; ret
0x00000000000733d9 : pop rdi ; ret
0x0000000000073a93 : pop rdi ; ret
0x0000000000073ba4 : pop rdi ; ret
0x0000000000073c8a : pop rdi ; ret
0x0000000000073e5a : pop rdi ; ret
0x0000000000074825 : pop rdi ; ret
0x000000000007486a : pop rdi ; ret
0x0000000000074e52 : pop rdi ; ret
0x0000000000076ccb : pop rdi ; ret
0x0000000000078dec : pop rdi ; ret
0x000000000007926e : pop rdi ; ret
0x0000000000079b78 : pop rdi ; ret
0x0000000000079ba7 : pop rdi ; ret
0x0000000000079fc5 : pop rdi ; ret
0x000000000007a170 : pop rdi ; ret
0x000000000007afda : pop rdi ; ret
0x000000000007c25e : pop rdi ; ret
0x000000000007c9c6 : pop rdi ; ret
0x000000000007cdbe : pop rdi ; ret
0x000000000007ce31 : pop rdi ; ret
0x000000000007d897 : pop rdi ; ret
0x000000000007e527 : pop rdi ; ret
0x000000000007f35b : pop rdi ; ret
0x000000000007feb0 : pop rdi ; ret
0x0000000000080387 : pop rdi ; ret
0x00000000000813e6 : pop rdi ; ret
0x0000000000081ec5 : pop rdi ; ret
0x00000000000831f0 : pop rdi ; ret
0x0000000000083360 : pop rdi ; ret
0x00000000000833ba : pop rdi ; ret
0x0000000000083c1d : pop rdi ; ret
0x0000000000083d6d : pop rdi ; ret
0x000000000008478e : pop rdi ; ret
0x0000000000085af5 : pop rdi ; ret
0x0000000000086c77 : pop rdi ; ret
0x000000000008715b : pop rdi ; ret
0x0000000000087562 : pop rdi ; ret
0x0000000000087c92 : pop rdi ; ret
0x00000000000881c4 : pop rdi ; ret
0x0000000000088a11 : pop rdi ; ret
0x0000000000088ee3 : pop rdi ; ret
0x00000000000893d8 : pop rdi ; ret
0x000000000008b5f9 : pop rdi ; ret
0x000000000008b690 : pop rdi ; ret
0x000000000008dff6 : pop rdi ; ret
0x000000000008e137 : pop rdi ; ret
0x000000000008e150 : pop rdi ; ret
0x000000000009543b : pop rdi ; ret
0x0000000000095527 : pop rdi ; ret
0x0000000000095707 : pop rdi ; ret
0x0000000000095faa : pop rdi ; ret
0x000000000009638c : pop rdi ; ret
0x00000000000964e4 : pop rdi ; ret
0x00000000000969cf : pop rdi ; ret
0x0000000000096ac8 : pop rdi ; ret
0x0000000000096d27 : pop rdi ; ret
0x0000000000096ff3 : pop rdi ; ret
0x00000000000976db : pop rdi ; ret
0x0000000000097860 : pop rdi ; ret
0x0000000000098084 : pop rdi ; ret
0x00000000000aab56 : pop rdi ; ret
0x00000000000aab77 : pop rdi ; ret
0x00000000000ad2f9 : pop rdi ; ret
0x00000000000ad5eb : pop rdi ; ret
0x00000000000ad898 : pop rdi ; ret
0x00000000000addbd : pop rdi ; ret
0x00000000000ade0e : pop rdi ; ret
0x00000000000ae21d : pop rdi ; ret
0x00000000000ae26e : pop rdi ; ret
0x00000000000ae311 : pop rdi ; ret
0x00000000000ae579 : pop rdi ; ret
0x00000000000aef30 : pop rdi ; ret
0x00000000000b0ee1 : pop rdi ; ret
0x00000000000b1b97 : pop rdi ; ret
0x00000000000b3669 : pop rdi ; ret
0x00000000000b4010 : pop rdi ; ret
0x00000000000b6a9d : pop rdi ; ret
0x00000000000ba62c : pop rdi ; ret
0x00000000000baf46 : pop rdi ; ret
0x00000000000baf78 : pop rdi ; ret
0x00000000000bc07c : pop rdi ; ret
0x00000000000bc729 : pop rdi ; ret
0x00000000000bc830 : pop rdi ; ret
0x00000000000bce6a : pop rdi ; ret
0x00000000000bd7ce : pop rdi ; ret
0x00000000000be011 : pop rdi ; ret
0x00000000000bef15 : pop rdi ; ret
0x00000000000bef2e : pop rdi ; ret
0x00000000000bf1bc : pop rdi ; ret
0x00000000000c0018 : pop rdi ; ret
0x00000000000c3232 : pop rdi ; ret
0x00000000000c7e10 : pop rdi ; ret
0x00000000000c869e : pop rdi ; ret
0x00000000000c8942 : pop rdi ; ret
0x00000000000c8bd6 : pop rdi ; ret
0x00000000000c8cff : pop rdi ; ret
0x00000000000c8efb : pop rdi ; ret
0x00000000000c8f21 : pop rdi ; ret
0x00000000000c8fd2 : pop rdi ; ret
0x00000000000c9354 : pop rdi ; ret
0x00000000000ca0e0 : pop rdi ; ret
0x00000000000ca141 : pop rdi ; ret
0x00000000000ca1da : pop rdi ; ret
0x00000000000ca381 : pop rdi ; ret
0x00000000000ca3e1 : pop rdi ; ret
0x00000000000ca47a : pop rdi ; ret
0x00000000000ca5ab : pop rdi ; ret
0x00000000000ca6b0 : pop rdi ; ret
0x00000000000ca7b2 : pop rdi ; ret
0x00000000000ca9ea : pop rdi ; ret
0x00000000000cabfb : pop rdi ; ret
0x00000000000cac21 : pop rdi ; ret
0x00000000000cb5f1 : pop rdi ; ret
0x00000000000cb651 : pop rdi ; ret
0x00000000000cb6ea : pop rdi ; ret
0x00000000000cb890 : pop rdi ; ret
0x00000000000cb8f1 : pop rdi ; ret
0x00000000000cb98a : pop rdi ; ret
0x00000000000cbec2 : pop rdi ; ret
0x00000000000cc9cb : pop rdi ; ret
0x00000000000ccb6b : pop rdi ; ret
0x00000000000ccd11 : pop rdi ; ret
0x00000000000ce9d4 : pop rdi ; ret
0x00000000000ce9ef : pop rdi ; ret
0x00000000000d41dc : pop rdi ; ret
0x00000000000d5b89 : pop rdi ; ret
0x00000000000d5dfb : pop rdi ; ret
0x00000000000d5e30 : pop rdi ; ret
0x00000000000d5f9f : pop rdi ; ret
0x00000000000d65b7 : pop rdi ; ret
0x00000000000d6def : pop rdi ; ret
0x00000000000d7442 : pop rdi ; ret
0x00000000000d745e : pop rdi ; ret
0x00000000000d8df0 : pop rdi ; ret
0x00000000000d9c3e : pop rdi ; ret
0x00000000000da5c2 : pop rdi ; ret
0x00000000000da881 : pop rdi ; ret
0x00000000000daa23 : pop rdi ; ret
0x00000000000daae8 : pop rdi ; ret
0x00000000000daeac : pop rdi ; ret
0x00000000000daeee : pop rdi ; ret
0x00000000000daf3b : pop rdi ; ret
0x00000000000db0fb : pop rdi ; ret
0x00000000000dbbba : pop rdi ; ret
0x00000000000dbf69 : pop rdi ; ret
0x00000000000dc0cb : pop rdi ; ret
0x00000000000dc46e : pop rdi ; ret
0x00000000000dc694 : pop rdi ; ret
0x00000000000dc792 : pop rdi ; ret
0x00000000000dc900 : pop rdi ; ret
0x00000000000ddacc : pop rdi ; ret
0x00000000000ddc5d : pop rdi ; ret
0x00000000000ddcef : pop rdi ; ret
0x00000000000ddd6c : pop rdi ; ret
0x00000000000ddec6 : pop rdi ; ret
0x00000000000de677 : pop rdi ; ret
0x00000000000df3e0 : pop rdi ; ret
0x00000000000df432 : pop rdi ; ret
0x00000000000df690 : pop rdi ; ret
0x00000000000df6af : pop rdi ; ret
0x00000000000dfa0b : pop rdi ; ret
0x00000000000dfa85 : pop rdi ; ret
0x00000000000dfae6 : pop rdi ; ret
0x00000000000e025a : pop rdi ; ret
0x00000000000e05e2 : pop rdi ; ret
0x00000000000e1d6d : pop rdi ; ret
0x00000000000e4133 : pop rdi ; ret
0x00000000000e41fd : pop rdi ; ret
0x00000000000e421c : pop rdi ; ret
0x00000000000e4828 : pop rdi ; ret
0x00000000000e4ea6 : pop rdi ; ret
0x00000000000e4f7f : pop rdi ; ret
0x00000000000e57bf : pop rdi ; ret
0x00000000000e5b30 : pop rdi ; ret
0x00000000000e5f25 : pop rdi ; ret
0x00000000000e7f5a : pop rdi ; ret
0x00000000000e85f3 : pop rdi ; ret
0x00000000000e8732 : pop rdi ; ret
0x00000000000e8838 : pop rdi ; ret
0x00000000000e9195 : pop rdi ; ret
0x00000000000eab5c : pop rdi ; ret
0x00000000000eac26 : pop rdi ; ret
0x00000000000ed4f7 : pop rdi ; ret
0x00000000000edf02 : pop rdi ; ret
0x00000000000efe71 : pop rdi ; ret
0x00000000000f06d1 : pop rdi ; ret
0x00000000000f07b6 : pop rdi ; ret
0x00000000000f08b1 : pop rdi ; ret
0x00000000000f1acf : pop rdi ; ret
0x00000000000f40ad : pop rdi ; ret
0x00000000000f49a6 : pop rdi ; ret
0x00000000000f5cc7 : pop rdi ; ret
0x00000000000f738b : pop rdi ; ret
0x00000000000f7b5a : pop rdi ; ret
0x00000000000f86c8 : pop rdi ; ret
0x00000000000f91cf : pop rdi ; ret
0x00000000000fa187 : pop rdi ; ret
0x00000000000fab13 : pop rdi ; ret
0x00000000000fb023 : pop rdi ; ret
0x00000000000fb8d1 : pop rdi ; ret
0x00000000000fbe1a : pop rdi ; ret
0x00000000000ffbea : pop rdi ; ret
0x0000000000100889 : pop rdi ; ret
0x0000000000100ea1 : pop rdi ; ret
0x00000000001016cb : pop rdi ; ret
0x0000000000101b90 : pop rdi ; ret
0x0000000000101c17 : pop rdi ; ret
0x0000000000102110 : pop rdi ; ret
0x0000000000102193 : pop rdi ; ret
0x0000000000102702 : pop rdi ; ret
0x0000000000102797 : pop rdi ; ret
0x0000000000102fec : pop rdi ; ret
0x000000000010307c : pop rdi ; ret
0x0000000000103090 : pop rdi ; ret
0x0000000000104065 : pop rdi ; ret
0x00000000001049ab : pop rdi ; ret
0x0000000000104a40 : pop rdi ; ret
0x0000000000104a57 : pop rdi ; ret
0x0000000000105768 : pop rdi ; ret
0x000000000010764b : pop rdi ; ret
0x0000000000108699 : pop rdi ; ret
0x0000000000109ad6 : pop rdi ; ret
0x0000000000109aef : pop rdi ; ret
0x000000000010ac71 : pop rdi ; ret
0x000000000010ac87 : pop rdi ; ret
0x000000000010b4d9 : pop rdi ; ret
0x000000000010b4ef : pop rdi ; ret
0x000000000010bb8b : pop rdi ; ret
0x000000000010bbb1 : pop rdi ; ret
0x000000000010c469 : pop rdi ; ret
0x000000000010c48a : pop rdi ; ret
0x000000000010c4a9 : pop rdi ; ret
0x000000000010cbc2 : pop rdi ; ret
0x000000000010d53b : pop rdi ; ret
0x000000000010d561 : pop rdi ; ret
0x000000000010d775 : pop rdi ; ret
0x000000000010d808 : pop rdi ; ret
0x000000000010dbe9 : pop rdi ; ret
0x000000000010dc0a : pop rdi ; ret
0x000000000010dc29 : pop rdi ; ret
0x000000000010df8c : pop rdi ; ret
0x000000000010dfbe : pop rdi ; ret
0x000000000010e2f2 : pop rdi ; ret
0x000000000010e501 : pop rdi ; ret
0x000000000010eff8 : pop rdi ; ret
0x000000000010f5f3 : pop rdi ; ret
0x000000000010fd09 : pop rdi ; ret
0x000000000010feee : pop rdi ; ret
0x000000000010ff96 : pop rdi ; ret
0x000000000010ffd5 : pop rdi ; ret
0x0000000000110799 : pop rdi ; ret
0x00000000001132ed : pop rdi ; ret
0x000000000011371f : pop rdi ; ret
0x0000000000116170 : pop rdi ; ret
0x000000000011676c : pop rdi ; ret
0x00000000001168bc : pop rdi ; ret
0x00000000001172f9 : pop rdi ; ret
0x0000000000117dc0 : pop rdi ; ret
0x0000000000118a0c : pop rdi ; ret
0x0000000000118ce1 : pop rdi ; ret
0x0000000000118f02 : pop rdi ; ret
0x0000000000119863 : pop rdi ; ret
0x0000000000119adf : pop rdi ; ret
0x0000000000119bec : pop rdi ; ret
0x000000000011a123 : pop rdi ; ret
0x000000000011a267 : pop rdi ; ret
0x000000000011a2f0 : pop rdi ; ret
0x000000000011a4f0 : pop rdi ; ret
0x000000000011a627 : pop rdi ; ret
0x000000000011a6a8 : pop rdi ; ret
0x000000000011ac99 : pop rdi ; ret
0x000000000011ae58 : pop rdi ; ret
0x000000000011ae9c : pop rdi ; ret
0x000000000011af4c : pop rdi ; ret
0x000000000011b618 : pop rdi ; ret
0x000000000011b65c : pop rdi ; ret
0x000000000011b70c : pop rdi ; ret
0x000000000011ba18 : pop rdi ; ret
0x000000000011ba3a : pop rdi ; ret
0x000000000011ba59 : pop rdi ; ret
0x000000000011c0f9 : pop rdi ; ret
0x000000000011c11a : pop rdi ; ret
0x000000000011c139 : pop rdi ; ret
0x000000000011c4ed : pop rdi ; ret
0x000000000011c549 : pop rdi ; ret
0x000000000011c5da : pop rdi ; ret
0x000000000011c90c : pop rdi ; ret
0x000000000011c969 : pop rdi ; ret
0x000000000011c9fa : pop rdi ; ret
0x000000000011cf33 : pop rdi ; ret
0x000000000011d243 : pop rdi ; ret
0x000000000011d6be : pop rdi ; ret
0x000000000011dc81 : pop rdi ; ret
0x000000000011dca8 : pop rdi ; ret
0x000000000011dd01 : pop rdi ; ret
0x000000000011dd2f : pop rdi ; ret
0x000000000011e05a : pop rdi ; ret
0x000000000011e887 : pop rdi ; ret
0x000000000011e8b9 : pop rdi ; ret
0x000000000011e8e1 : pop rdi ; ret
0x000000000011ed43 : pop rdi ; ret
0x000000000011fa63 : pop rdi ; ret
0x000000000011fb30 : pop rdi ; ret
0x00000000001200de : pop rdi ; ret
0x00000000001200ef : pop rdi ; ret
0x000000000012046f : pop rdi ; ret
0x0000000000120d59 : pop rdi ; ret
0x0000000000120d7a : pop rdi ; ret
0x0000000000120d99 : pop rdi ; ret
0x0000000000121511 : pop rdi ; ret
0x0000000000121d15 : pop rdi ; ret
0x0000000000121d96 : pop rdi ; ret
0x000000000012530b : pop rdi ; ret
0x000000000012534d : pop rdi ; ret
0x000000000012542f : pop rdi ; ret
0x00000000001254e7 : pop rdi ; ret
0x00000000001262f0 : pop rdi ; ret
0x000000000012630c : pop rdi ; ret
0x00000000001271a0 : pop rdi ; ret
0x000000000012794e : pop rdi ; ret
0x00000000001279b5 : pop rdi ; ret
0x00000000001280ad : pop rdi ; ret
0x0000000000128415 : pop rdi ; ret
0x00000000001286ef : pop rdi ; ret
0x0000000000128721 : pop rdi ; ret
0x0000000000128e0a : pop rdi ; ret
0x00000000001291e1 : pop rdi ; ret
0x00000000001292b6 : pop rdi ; ret
0x000000000012a30e : pop rdi ; ret
0x000000000012a360 : pop rdi ; ret
0x000000000012a47c : pop rdi ; ret
0x000000000012a4e7 : pop rdi ; ret
0x000000000012a5ee : pop rdi ; ret
0x000000000012a607 : pop rdi ; ret
0x000000000012a7a5 : pop rdi ; ret
0x000000000012a828 : pop rdi ; ret
0x000000000012a9f4 : pop rdi ; ret
0x000000000012aab6 : pop rdi ; ret
0x000000000012acaa : pop rdi ; ret
0x000000000012ad68 : pop rdi ; ret
0x000000000012bc67 : pop rdi ; ret
0x000000000012beeb : pop rdi ; ret
0x000000000012c12f : pop rdi ; ret
0x000000000012c82c : pop rdi ; ret
0x000000000012cf98 : pop rdi ; ret
0x000000000012d279 : pop rdi ; ret
0x000000000012e56f : pop rdi ; ret
0x000000000012e5c4 : pop rdi ; ret
0x000000000012e613 : pop rdi ; ret
0x000000000012eaf4 : pop rdi ; ret
0x000000000012ef27 : pop rdi ; ret
0x000000000012f117 : pop rdi ; ret
0x000000000012f133 : pop rdi ; ret
0x000000000012f2a7 : pop rdi ; ret
0x000000000012f2fa : pop rdi ; ret
0x000000000012f446 : pop rdi ; ret
0x000000000012f552 : pop rdi ; ret
0x000000000012fed8 : pop rdi ; ret
0x000000000013083a : pop rdi ; ret
0x0000000000130944 : pop rdi ; ret
0x0000000000130c65 : pop rdi ; ret
0x00000000001314bb : pop rdi ; ret
0x00000000001314cf : pop rdi ; ret
0x0000000000131ed9 : pop rdi ; ret
0x0000000000131efa : pop rdi ; ret
0x0000000000131f19 : pop rdi ; ret
0x0000000000132108 : pop rdi ; ret
0x000000000013212a : pop rdi ; ret
0x0000000000132149 : pop rdi ; ret
0x0000000000132640 : pop rdi ; ret
0x0000000000132c99 : pop rdi ; ret
0x0000000000132cc7 : pop rdi ; ret
0x0000000000132f8c : pop rdi ; ret
0x0000000000133200 : pop rdi ; ret
0x0000000000133229 : pop rdi ; ret
0x0000000000133453 : pop rdi ; ret
0x0000000000133c6a : pop rdi ; ret
0x0000000000133e85 : pop rdi ; ret
0x000000000013411e : pop rdi ; ret
0x0000000000134532 : pop rdi ; ret
0x0000000000135309 : pop rdi ; ret
0x000000000013570a : pop rdi ; ret
0x00000000001357bf : pop rdi ; ret
0x0000000000135d2e : pop rdi ; ret
0x0000000000136298 : pop rdi ; ret
0x0000000000136558 : pop rdi ; ret
0x00000000001367da : pop rdi ; ret
0x0000000000137c2e : pop rdi ; ret
0x0000000000137eb5 : pop rdi ; ret
0x00000000001380f3 : pop rdi ; ret
0x000000000013860d : pop rdi ; ret
0x0000000000138b4b : pop rdi ; ret
0x0000000000138cb4 : pop rdi ; ret
0x0000000000138d7d : pop rdi ; ret
0x0000000000138eaf : pop rdi ; ret
0x00000000001390ed : pop rdi ; ret
0x00000000001399a2 : pop rdi ; ret
0x00000000001399b7 : pop rdi ; ret
0x0000000000139a01 : pop rdi ; ret
0x0000000000139a85 : pop rdi ; ret
0x0000000000139e2e : pop rdi ; ret
0x000000000013a70e : pop rdi ; ret
0x000000000013a884 : pop rdi ; ret
0x000000000013a8a2 : pop rdi ; ret
0x000000000013b5c4 : pop rdi ; ret
0x000000000013b60f : pop rdi ; ret
0x000000000013c950 : pop rdi ; ret
0x000000000013ce80 : pop rdi ; ret
0x000000000013dcb1 : pop rdi ; ret
0x000000000013dd17 : pop rdi ; ret
0x000000000013df24 : pop rdi ; ret
0x000000000013e242 : pop rdi ; ret
0x000000000013e3f2 : pop rdi ; ret
0x000000000013ef4f : pop rdi ; ret
0x000000000013efc6 : pop rdi ; ret
0x000000000013f0d4 : pop rdi ; ret
0x000000000013f87a : pop rdi ; ret
0x0000000000140290 : pop rdi ; ret
0x000000000014048f : pop rdi ; ret
0x0000000000140553 : pop rdi ; ret
0x0000000000141525 : pop rdi ; ret
0x0000000000141997 : pop rdi ; ret
0x0000000000141b88 : pop rdi ; ret
0x0000000000141e58 : pop rdi ; ret
0x0000000000142c9c : pop rdi ; ret
0x00000000001431b7 : pop rdi ; ret
0x000000000014339a : pop rdi ; ret
0x00000000001440c8 : pop rdi ; ret
0x000000000014427d : pop rdi ; ret
0x0000000000172f12 : pop rdi ; ret
0x0000000000173d3d : pop rdi ; ret
0x0000000000174cc5 : pop rdi ; ret
0x0000000000174cdf : pop rdi ; ret
0x000000000017519e : pop rdi ; ret
0x000000000017523f : pop rdi ; ret
0x000000000019dba5 : pop rdi ; ret
0x000000000003b589 : pop rdi ; ret
0x000000000003ba59 : pop rdi ; ret
0x0000000000067499 : pop rdi ; ret 0xffff
0x00000000000c7885 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000110cee : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000001464f6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000001b0561 : pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0579 : pop rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000134dc2 : pop rdx ; cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000003a9e : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000184cc1 : pop rdx ; je 0x184c8b ; ret 0xacfc
0x0000000000003185 : pop rdx ; jmp 0xffffffff88c2d332
0x00000000000ac883 : pop rdx ; or al, 0 ; ret
0x0000000000185c87 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000001150a4 : pop rdx ; pop r10 ; ret
0x0000000000101ffc : pop rdx ; pop rbx ; ret
0x00000000001194ab : pop rdx ; pop rbx ; ret
0x000000000011d174 : pop rdx ; pop rbx ; ret
0x00000000001435b2 : pop rdx ; pop rbx ; ret
0x00000000001435fa : pop rdx ; pop rbx ; ret
0x0000000000143824 : pop rdx ; pop rbx ; ret
0x00000000000ea699 : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000001150c9 : pop rdx ; pop rsi ; ret
0x0000000000001b92 : pop rdx ; ret
0x0000000000001b96 : pop rdx ; ret
0x0000000000001b9a : pop rdx ; ret
0x0000000000001b9e : pop rdx ; ret
0x00000000001150a6 : pop rdx ; ret
0x00000000001857f0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000ac575 : pop rdx ; test al, 0xf0 ; jne 0xac5a9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000014bb0e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012413c : pop rsi ; add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x000000000010935c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x0000000000195839 : pop rsi ; cld ; call qword ptr [rdx + 0x22fffc5d]
0x00000000001957b5 : pop rsi ; cld ; call qword ptr [rsi]
0x0000000000195975 : pop rsi ; cld ; call rax
0x0000000000195974 : pop rsi ; cld ; call rax
0x0000000000195971 : pop rsi ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019611d : pop rsi ; cld ; jmp rax
0x00000000001958f5 : pop rsi ; cld ; jmp rsp
0x00000000000cdebe : pop rsi ; fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c924a : pop rsi ; fldcw word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000423d1 : pop rsi ; fmul st(0) ; ret
0x0000000000042469 : pop rsi ; fmul st(0) ; ret
0x00000000000b10f1 : pop rsi ; fmul st(0) ; ret
0x00000000000b1189 : pop rsi ; fmul st(0) ; ret
0x000000000004234f : pop rsi ; fmulp st(1) ; ret
0x00000000000b106f : pop rsi ; fmulp st(1) ; ret
0x0000000000094aa5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000197cf1 : pop rsi ; out dx, al ; jmp rsp
0x0000000000197cf0 : pop rsi ; out dx, al ; jmp rsp
0x0000000000104050 : pop rsi ; pop r15 ; jmp rax
0x0000000000020254 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000020e67 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000020e9e : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000213be : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000022400 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000022cce : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002304a : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000236d6 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000029c70 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000029c87 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002b5d9 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002b611 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002c01f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002c0f4 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002c144 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002c452 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002c6cc : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002c8c1 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002cc76 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002d053 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002d15c : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002efc0 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002f265 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002ff9e : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000030a8d : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000032298 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000032445 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000395eb : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000003964c : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000039ac0 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000045618 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000457fd : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000045851 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000048cdd : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000004a9a2 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000004aa77 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000004ac9f : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000004b6fe : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000004d286 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000004d337 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000503af : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000050cd2 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000050e08 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000050e5a : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000050fbd : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000055bfb : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000055e19 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000055e5a : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000056ae6 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000058ae2 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000058b08 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000058bed : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000005bbac : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000637b1 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000752ac : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000776e6 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000088843 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000989f5 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000b7394 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000ba04f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000ba0ad : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000bf7f4 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000bf85f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000c52ac : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000cc520 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000ccdbc : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000cdf43 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000ceadc : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000cece4 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000cf23f : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000cf325 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000cf871 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000d1aed : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000d2292 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000d38ca : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000d55b8 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000d5649 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000d5667 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000d8922 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000d8c50 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000d8cc9 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000dcdc7 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000dd00c : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000e94d0 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000e9571 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000e95a1 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000e98b6 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000eaab5 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000eaadf : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000eadf3 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000ef2c3 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000ef6d8 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000f1512 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000f156c : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000f1632 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000f172d : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000f603d : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000f9916 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000fd956 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000fda21 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000febe0 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000febf7 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000103222 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000010340e : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000104b1a : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001052d7 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000105378 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000105a78 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000105ba1 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000010920c : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000010a090 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000010a209 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000010a2e1 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000110054 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001102d8 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000111829 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000113e60 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000115e65 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000011db24 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000011f593 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000120fc9 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000121247 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001213ae : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001220a9 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001220cd : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001223a0 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000012366a : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001236c8 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001237e4 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000012387c : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001239f9 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000123b7d : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000124358 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000124392 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000124636 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000124ab3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000124d34 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000128ef0 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000128fd9 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000012971a : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000012998f : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000129aa6 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000129abf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000129ca6 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000129daf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000129de7 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000012a0f9 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000012c3ea : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000012c677 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000012c6ca : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000132880 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000132897 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000134690 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001346dc : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000001347b0 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000134850 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000013d517 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000013e833 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000013f443 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000013f71a : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000013fa71 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000013ff2c : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000140baf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000140c49 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000142aa4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000142b2e : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000014390a : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000144737 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000014476c : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000144784 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000021100 : pop rsi ; pop r15 ; ret
0x0000000000021118 : pop rsi ; pop r15 ; ret
0x0000000000021140 : pop rsi ; pop r15 ; ret
0x0000000000021168 : pop rsi ; pop r15 ; ret
0x0000000000021190 : pop rsi ; pop r15 ; ret
0x0000000000021899 : pop rsi ; pop r15 ; ret
0x0000000000022846 : pop rsi ; pop r15 ; ret
0x0000000000022994 : pop rsi ; pop r15 ; ret
0x0000000000023c1d : pop rsi ; pop r15 ; ret
0x0000000000023e0d : pop rsi ; pop r15 ; ret
0x0000000000023eb0 : pop rsi ; pop r15 ; ret
0x0000000000023f0a : pop rsi ; pop r15 ; ret
0x0000000000023f23 : pop rsi ; pop r15 ; ret
0x0000000000024047 : pop rsi ; pop r15 ; ret
0x0000000000024087 : pop rsi ; pop r15 ; ret
0x00000000000245d2 : pop rsi ; pop r15 ; ret
0x00000000000247cb : pop rsi ; pop r15 ; ret
0x0000000000024868 : pop rsi ; pop r15 ; ret
0x00000000000248ce : pop rsi ; pop r15 ; ret
0x00000000000248ed : pop rsi ; pop r15 ; ret
0x0000000000024a17 : pop rsi ; pop r15 ; ret
0x0000000000024a57 : pop rsi ; pop r15 ; ret
0x0000000000024f7d : pop rsi ; pop r15 ; ret
0x0000000000025321 : pop rsi ; pop r15 ; ret
0x0000000000025b22 : pop rsi ; pop r15 ; ret
0x0000000000026833 : pop rsi ; pop r15 ; ret
0x000000000002687d : pop rsi ; pop r15 ; ret
0x000000000002799a : pop rsi ; pop r15 ; ret
0x00000000000279d9 : pop rsi ; pop r15 ; ret
0x0000000000028019 : pop rsi ; pop r15 ; ret
0x000000000002885a : pop rsi ; pop r15 ; ret
0x000000000002889a : pop rsi ; pop r15 ; ret
0x0000000000028ee9 : pop rsi ; pop r15 ; ret
0x00000000000298d2 : pop rsi ; pop r15 ; ret
0x0000000000029fa2 : pop rsi ; pop r15 ; ret
0x000000000002a06b : pop rsi ; pop r15 ; ret
0x000000000002a17f : pop rsi ; pop r15 ; ret
0x000000000002aa20 : pop rsi ; pop r15 ; ret
0x000000000002ac8a : pop rsi ; pop r15 ; ret
0x000000000002bec3 : pop rsi ; pop r15 ; ret
0x000000000002d77e : pop rsi ; pop r15 ; ret
0x000000000002e1c9 : pop rsi ; pop r15 ; ret
0x000000000002e429 : pop rsi ; pop r15 ; ret
0x000000000002e7d0 : pop rsi ; pop r15 ; ret
0x00000000000306f5 : pop rsi ; pop r15 ; ret
0x00000000000307a6 : pop rsi ; pop r15 ; ret
0x00000000000325cb : pop rsi ; pop r15 ; ret
0x0000000000032bed : pop rsi ; pop r15 ; ret
0x0000000000032c8f : pop rsi ; pop r15 ; ret
0x0000000000033334 : pop rsi ; pop r15 ; ret
0x00000000000340ae : pop rsi ; pop r15 ; ret
0x0000000000037220 : pop rsi ; pop r15 ; ret
0x0000000000037236 : pop rsi ; pop r15 ; ret
0x000000000003785f : pop rsi ; pop r15 ; ret
0x00000000000397e4 : pop rsi ; pop r15 ; ret
0x000000000003a4a4 : pop rsi ; pop r15 ; ret
0x000000000003b52b : pop rsi ; pop r15 ; ret
0x000000000003b587 : pop rsi ; pop r15 ; ret
0x000000000003b9fb : pop rsi ; pop r15 ; ret
0x000000000003ba57 : pop rsi ; pop r15 ; ret
0x000000000003bb78 : pop rsi ; pop r15 ; ret
0x000000000003bf9b : pop rsi ; pop r15 ; ret
0x000000000003c6fd : pop rsi ; pop r15 ; ret
0x000000000003f25b : pop rsi ; pop r15 ; ret
0x000000000003f9dd : pop rsi ; pop r15 ; ret
0x00000000000421b3 : pop rsi ; pop r15 ; ret
0x0000000000042c0b : pop rsi ; pop r15 ; ret
0x00000000000460a1 : pop rsi ; pop r15 ; ret
0x0000000000046f86 : pop rsi ; pop r15 ; ret
0x0000000000046fed : pop rsi ; pop r15 ; ret
0x00000000000472cd : pop rsi ; pop r15 ; ret
0x000000000004777e : pop rsi ; pop r15 ; ret
0x00000000000486c8 : pop rsi ; pop r15 ; ret
0x00000000000486e1 : pop rsi ; pop r15 ; ret
0x00000000000487d1 : pop rsi ; pop r15 ; ret
0x00000000000488ac : pop rsi ; pop r15 ; ret
0x0000000000049163 : pop rsi ; pop r15 ; ret
0x00000000000492d7 : pop rsi ; pop r15 ; ret
0x00000000000499b6 : pop rsi ; pop r15 ; ret
0x000000000004a31d : pop rsi ; pop r15 ; ret
0x000000000004a347 : pop rsi ; pop r15 ; ret
0x0000000000052e09 : pop rsi ; pop r15 ; ret
0x0000000000053173 : pop rsi ; pop r15 ; ret
0x000000000005505e : pop rsi ; pop r15 ; ret
0x0000000000055273 : pop rsi ; pop r15 ; ret
0x0000000000055427 : pop rsi ; pop r15 ; ret
0x00000000000554ed : pop rsi ; pop r15 ; ret
0x0000000000055584 : pop rsi ; pop r15 ; ret
0x000000000006adfd : pop rsi ; pop r15 ; ret
0x000000000006b24e : pop rsi ; pop r15 ; ret
0x000000000006d504 : pop rsi ; pop r15 ; ret
0x000000000006e9ba : pop rsi ; pop r15 ; ret
0x000000000006eca3 : pop rsi ; pop r15 ; ret
0x000000000006ecfc : pop rsi ; pop r15 ; ret
0x000000000006f2f8 : pop rsi ; pop r15 ; ret
0x0000000000070c97 : pop rsi ; pop r15 ; ret
0x0000000000070d04 : pop rsi ; pop r15 ; ret
0x0000000000071a68 : pop rsi ; pop r15 ; ret
0x0000000000071d82 : pop rsi ; pop r15 ; ret
0x0000000000071e29 : pop rsi ; pop r15 ; ret
0x0000000000072603 : pop rsi ; pop r15 ; ret
0x0000000000072773 : pop rsi ; pop r15 ; ret
0x00000000000730de : pop rsi ; pop r15 ; ret
0x00000000000731f1 : pop rsi ; pop r15 ; ret
0x00000000000733d7 : pop rsi ; pop r15 ; ret
0x0000000000073a91 : pop rsi ; pop r15 ; ret
0x0000000000073ba2 : pop rsi ; pop r15 ; ret
0x0000000000073c88 : pop rsi ; pop r15 ; ret
0x0000000000073e58 : pop rsi ; pop r15 ; ret
0x0000000000074823 : pop rsi ; pop r15 ; ret
0x0000000000074868 : pop rsi ; pop r15 ; ret
0x0000000000074e50 : pop rsi ; pop r15 ; ret
0x0000000000076cc9 : pop rsi ; pop r15 ; ret
0x0000000000078dea : pop rsi ; pop r15 ; ret
0x000000000007926c : pop rsi ; pop r15 ; ret
0x0000000000079b76 : pop rsi ; pop r15 ; ret
0x0000000000079ba5 : pop rsi ; pop r15 ; ret
0x0000000000079fc3 : pop rsi ; pop r15 ; ret
0x000000000007a16e : pop rsi ; pop r15 ; ret
0x000000000007afd8 : pop rsi ; pop r15 ; ret
0x000000000007c25c : pop rsi ; pop r15 ; ret
0x000000000007c9c4 : pop rsi ; pop r15 ; ret
0x000000000007cdbc : pop rsi ; pop r15 ; ret
0x000000000007ce2f : pop rsi ; pop r15 ; ret
0x000000000007d895 : pop rsi ; pop r15 ; ret
0x000000000007e525 : pop rsi ; pop r15 ; ret
0x000000000007f359 : pop rsi ; pop r15 ; ret
0x000000000007feae : pop rsi ; pop r15 ; ret
0x0000000000080385 : pop rsi ; pop r15 ; ret
0x00000000000813e4 : pop rsi ; pop r15 ; ret
0x0000000000081ec3 : pop rsi ; pop r15 ; ret
0x00000000000831ee : pop rsi ; pop r15 ; ret
0x000000000008335e : pop rsi ; pop r15 ; ret
0x00000000000833b8 : pop rsi ; pop r15 ; ret
0x0000000000083c1b : pop rsi ; pop r15 ; ret
0x0000000000083d6b : pop rsi ; pop r15 ; ret
0x000000000008478c : pop rsi ; pop r15 ; ret
0x0000000000085af3 : pop rsi ; pop r15 ; ret
0x0000000000086c75 : pop rsi ; pop r15 ; ret
0x0000000000087159 : pop rsi ; pop r15 ; ret
0x0000000000087560 : pop rsi ; pop r15 ; ret
0x0000000000087c90 : pop rsi ; pop r15 ; ret
0x00000000000881c2 : pop rsi ; pop r15 ; ret
0x0000000000088a0f : pop rsi ; pop r15 ; ret
0x0000000000088ee1 : pop rsi ; pop r15 ; ret
0x00000000000893d6 : pop rsi ; pop r15 ; ret
0x000000000008b5f7 : pop rsi ; pop r15 ; ret
0x000000000008b68e : pop rsi ; pop r15 ; ret
0x000000000008dff4 : pop rsi ; pop r15 ; ret
0x000000000008e135 : pop rsi ; pop r15 ; ret
0x000000000008e14e : pop rsi ; pop r15 ; ret
0x0000000000095439 : pop rsi ; pop r15 ; ret
0x0000000000095525 : pop rsi ; pop r15 ; ret
0x0000000000095705 : pop rsi ; pop r15 ; ret
0x0000000000095fa8 : pop rsi ; pop r15 ; ret
0x000000000009638a : pop rsi ; pop r15 ; ret
0x00000000000964e2 : pop rsi ; pop r15 ; ret
0x00000000000969cd : pop rsi ; pop r15 ; ret
0x0000000000096ac6 : pop rsi ; pop r15 ; ret
0x0000000000096d25 : pop rsi ; pop r15 ; ret
0x0000000000096ff1 : pop rsi ; pop r15 ; ret
0x00000000000976d9 : pop rsi ; pop r15 ; ret
0x000000000009785e : pop rsi ; pop r15 ; ret
0x0000000000098082 : pop rsi ; pop r15 ; ret
0x00000000000aab54 : pop rsi ; pop r15 ; ret
0x00000000000aab75 : pop rsi ; pop r15 ; ret
0x00000000000ad2f7 : pop rsi ; pop r15 ; ret
0x00000000000ad5e9 : pop rsi ; pop r15 ; ret
0x00000000000ad896 : pop rsi ; pop r15 ; ret
0x00000000000addbb : pop rsi ; pop r15 ; ret
0x00000000000ade0c : pop rsi ; pop r15 ; ret
0x00000000000ae21b : pop rsi ; pop r15 ; ret
0x00000000000ae26c : pop rsi ; pop r15 ; ret
0x00000000000ae30f : pop rsi ; pop r15 ; ret
0x00000000000ae577 : pop rsi ; pop r15 ; ret
0x00000000000aef2e : pop rsi ; pop r15 ; ret
0x00000000000b0edf : pop rsi ; pop r15 ; ret
0x00000000000b1b95 : pop rsi ; pop r15 ; ret
0x00000000000b3667 : pop rsi ; pop r15 ; ret
0x00000000000b400e : pop rsi ; pop r15 ; ret
0x00000000000b6a9b : pop rsi ; pop r15 ; ret
0x00000000000ba62a : pop rsi ; pop r15 ; ret
0x00000000000baf44 : pop rsi ; pop r15 ; ret
0x00000000000baf76 : pop rsi ; pop r15 ; ret
0x00000000000bc07a : pop rsi ; pop r15 ; ret
0x00000000000bc727 : pop rsi ; pop r15 ; ret
0x00000000000bc82e : pop rsi ; pop r15 ; ret
0x00000000000bce68 : pop rsi ; pop r15 ; ret
0x00000000000bd7cc : pop rsi ; pop r15 ; ret
0x00000000000be00f : pop rsi ; pop r15 ; ret
0x00000000000bef13 : pop rsi ; pop r15 ; ret
0x00000000000bef2c : pop rsi ; pop r15 ; ret
0x00000000000bf1ba : pop rsi ; pop r15 ; ret
0x00000000000c0016 : pop rsi ; pop r15 ; ret
0x00000000000c3230 : pop rsi ; pop r15 ; ret
0x00000000000c7e0e : pop rsi ; pop r15 ; ret
0x00000000000c869c : pop rsi ; pop r15 ; ret
0x00000000000c8940 : pop rsi ; pop r15 ; ret
0x00000000000c8bd4 : pop rsi ; pop r15 ; ret
0x00000000000c8cfd : pop rsi ; pop r15 ; ret
0x00000000000c8ef9 : pop rsi ; pop r15 ; ret
0x00000000000c8f1f : pop rsi ; pop r15 ; ret
0x00000000000c8fd0 : pop rsi ; pop r15 ; ret
0x00000000000c9352 : pop rsi ; pop r15 ; ret
0x00000000000ca0de : pop rsi ; pop r15 ; ret
0x00000000000ca13f : pop rsi ; pop r15 ; ret
0x00000000000ca1d8 : pop rsi ; pop r15 ; ret
0x00000000000ca37f : pop rsi ; pop r15 ; ret
0x00000000000ca3df : pop rsi ; pop r15 ; ret
0x00000000000ca478 : pop rsi ; pop r15 ; ret
0x00000000000ca5a9 : pop rsi ; pop r15 ; ret
0x00000000000ca6ae : pop rsi ; pop r15 ; ret
0x00000000000ca7b0 : pop rsi ; pop r15 ; ret
0x00000000000ca9e8 : pop rsi ; pop r15 ; ret
0x00000000000cabf9 : pop rsi ; pop r15 ; ret
0x00000000000cac1f : pop rsi ; pop r15 ; ret
0x00000000000cb5ef : pop rsi ; pop r15 ; ret
0x00000000000cb64f : pop rsi ; pop r15 ; ret
0x00000000000cb6e8 : pop rsi ; pop r15 ; ret
0x00000000000cb88e : pop rsi ; pop r15 ; ret
0x00000000000cb8ef : pop rsi ; pop r15 ; ret
0x00000000000cb988 : pop rsi ; pop r15 ; ret
0x00000000000cbec0 : pop rsi ; pop r15 ; ret
0x00000000000cc9c9 : pop rsi ; pop r15 ; ret
0x00000000000ccb69 : pop rsi ; pop r15 ; ret
0x00000000000ccd0f : pop rsi ; pop r15 ; ret
0x00000000000ce9d2 : pop rsi ; pop r15 ; ret
0x00000000000ce9ed : pop rsi ; pop r15 ; ret
0x00000000000d41da : pop rsi ; pop r15 ; ret
0x00000000000d5b87 : pop rsi ; pop r15 ; ret
0x00000000000d5df9 : pop rsi ; pop r15 ; ret
0x00000000000d5e2e : pop rsi ; pop r15 ; ret
0x00000000000d5f9d : pop rsi ; pop r15 ; ret
0x00000000000d65b5 : pop rsi ; pop r15 ; ret
0x00000000000d6ded : pop rsi ; pop r15 ; ret
0x00000000000d7440 : pop rsi ; pop r15 ; ret
0x00000000000d745c : pop rsi ; pop r15 ; ret
0x00000000000d8dee : pop rsi ; pop r15 ; ret
0x00000000000d9c3c : pop rsi ; pop r15 ; ret
0x00000000000da5c0 : pop rsi ; pop r15 ; ret
0x00000000000da87f : pop rsi ; pop r15 ; ret
0x00000000000daa21 : pop rsi ; pop r15 ; ret
0x00000000000daae6 : pop rsi ; pop r15 ; ret
0x00000000000daeaa : pop rsi ; pop r15 ; ret
0x00000000000daeec : pop rsi ; pop r15 ; ret
0x00000000000daf39 : pop rsi ; pop r15 ; ret
0x00000000000db0f9 : pop rsi ; pop r15 ; ret
0x00000000000dbbb8 : pop rsi ; pop r15 ; ret
0x00000000000dbf67 : pop rsi ; pop r15 ; ret
0x00000000000dc0c9 : pop rsi ; pop r15 ; ret
0x00000000000dc46c : pop rsi ; pop r15 ; ret
0x00000000000dc692 : pop rsi ; pop r15 ; ret
0x00000000000dc790 : pop rsi ; pop r15 ; ret
0x00000000000dc8fe : pop rsi ; pop r15 ; ret
0x00000000000ddaca : pop rsi ; pop r15 ; ret
0x00000000000ddc5b : pop rsi ; pop r15 ; ret
0x00000000000ddced : pop rsi ; pop r15 ; ret
0x00000000000ddd6a : pop rsi ; pop r15 ; ret
0x00000000000ddec4 : pop rsi ; pop r15 ; ret
0x00000000000de675 : pop rsi ; pop r15 ; ret
0x00000000000df3de : pop rsi ; pop r15 ; ret
0x00000000000df430 : pop rsi ; pop r15 ; ret
0x00000000000df68e : pop rsi ; pop r15 ; ret
0x00000000000df6ad : pop rsi ; pop r15 ; ret
0x00000000000dfa09 : pop rsi ; pop r15 ; ret
0x00000000000dfa83 : pop rsi ; pop r15 ; ret
0x00000000000dfae4 : pop rsi ; pop r15 ; ret
0x00000000000e0258 : pop rsi ; pop r15 ; ret
0x00000000000e05e0 : pop rsi ; pop r15 ; ret
0x00000000000e1d6b : pop rsi ; pop r15 ; ret
0x00000000000e4131 : pop rsi ; pop r15 ; ret
0x00000000000e41fb : pop rsi ; pop r15 ; ret
0x00000000000e421a : pop rsi ; pop r15 ; ret
0x00000000000e4826 : pop rsi ; pop r15 ; ret
0x00000000000e4ea4 : pop rsi ; pop r15 ; ret
0x00000000000e4f7d : pop rsi ; pop r15 ; ret
0x00000000000e57bd : pop rsi ; pop r15 ; ret
0x00000000000e5b2e : pop rsi ; pop r15 ; ret
0x00000000000e5f23 : pop rsi ; pop r15 ; ret
0x00000000000e7f58 : pop rsi ; pop r15 ; ret
0x00000000000e85f1 : pop rsi ; pop r15 ; ret
0x00000000000e8730 : pop rsi ; pop r15 ; ret
0x00000000000e8836 : pop rsi ; pop r15 ; ret
0x00000000000e9193 : pop rsi ; pop r15 ; ret
0x00000000000eab5a : pop rsi ; pop r15 ; ret
0x00000000000eac24 : pop rsi ; pop r15 ; ret
0x00000000000ed4f5 : pop rsi ; pop r15 ; ret
0x00000000000edf00 : pop rsi ; pop r15 ; ret
0x00000000000efe6f : pop rsi ; pop r15 ; ret
0x00000000000f06cf : pop rsi ; pop r15 ; ret
0x00000000000f07b4 : pop rsi ; pop r15 ; ret
0x00000000000f08af : pop rsi ; pop r15 ; ret
0x00000000000f1acd : pop rsi ; pop r15 ; ret
0x00000000000f40ab : pop rsi ; pop r15 ; ret
0x00000000000f49a4 : pop rsi ; pop r15 ; ret
0x00000000000f5cc5 : pop rsi ; pop r15 ; ret
0x00000000000f7389 : pop rsi ; pop r15 ; ret
0x00000000000f7b58 : pop rsi ; pop r15 ; ret
0x00000000000f86c6 : pop rsi ; pop r15 ; ret
0x00000000000f91cd : pop rsi ; pop r15 ; ret
0x00000000000fa185 : pop rsi ; pop r15 ; ret
0x00000000000fab11 : pop rsi ; pop r15 ; ret
0x00000000000fb021 : pop rsi ; pop r15 ; ret
0x00000000000fb8cf : pop rsi ; pop r15 ; ret
0x00000000000fbe18 : pop rsi ; pop r15 ; ret
0x00000000000ffbe8 : pop rsi ; pop r15 ; ret
0x0000000000100887 : pop rsi ; pop r15 ; ret
0x0000000000100e9f : pop rsi ; pop r15 ; ret
0x00000000001016c9 : pop rsi ; pop r15 ; ret
0x0000000000101b8e : pop rsi ; pop r15 ; ret
0x0000000000101c15 : pop rsi ; pop r15 ; ret
0x000000000010210e : pop rsi ; pop r15 ; ret
0x0000000000102191 : pop rsi ; pop r15 ; ret
0x0000000000102700 : pop rsi ; pop r15 ; ret
0x0000000000102795 : pop rsi ; pop r15 ; ret
0x0000000000102fea : pop rsi ; pop r15 ; ret
0x000000000010307a : pop rsi ; pop r15 ; ret
0x000000000010308e : pop rsi ; pop r15 ; ret
0x0000000000104063 : pop rsi ; pop r15 ; ret
0x00000000001049a9 : pop rsi ; pop r15 ; ret
0x0000000000104a3e : pop rsi ; pop r15 ; ret
0x0000000000104a55 : pop rsi ; pop r15 ; ret
0x0000000000105766 : pop rsi ; pop r15 ; ret
0x0000000000107649 : pop rsi ; pop r15 ; ret
0x0000000000108697 : pop rsi ; pop r15 ; ret
0x0000000000109ad4 : pop rsi ; pop r15 ; ret
0x0000000000109aed : pop rsi ; pop r15 ; ret
0x000000000010ac6f : pop rsi ; pop r15 ; ret
0x000000000010ac85 : pop rsi ; pop r15 ; ret
0x000000000010b4d7 : pop rsi ; pop r15 ; ret
0x000000000010b4ed : pop rsi ; pop r15 ; ret
0x000000000010bb89 : pop rsi ; pop r15 ; ret
0x000000000010bbaf : pop rsi ; pop r15 ; ret
0x000000000010c467 : pop rsi ; pop r15 ; ret
0x000000000010c488 : pop rsi ; pop r15 ; ret
0x000000000010c4a7 : pop rsi ; pop r15 ; ret
0x000000000010cbc0 : pop rsi ; pop r15 ; ret
0x000000000010d539 : pop rsi ; pop r15 ; ret
0x000000000010d55f : pop rsi ; pop r15 ; ret
0x000000000010d773 : pop rsi ; pop r15 ; ret
0x000000000010d806 : pop rsi ; pop r15 ; ret
0x000000000010dbe7 : pop rsi ; pop r15 ; ret
0x000000000010dc08 : pop rsi ; pop r15 ; ret
0x000000000010dc27 : pop rsi ; pop r15 ; ret
0x000000000010df8a : pop rsi ; pop r15 ; ret
0x000000000010dfbc : pop rsi ; pop r15 ; ret
0x000000000010e2f0 : pop rsi ; pop r15 ; ret
0x000000000010e4ff : pop rsi ; pop r15 ; ret
0x000000000010eff6 : pop rsi ; pop r15 ; ret
0x000000000010f5f1 : pop rsi ; pop r15 ; ret
0x000000000010fd07 : pop rsi ; pop r15 ; ret
0x000000000010feec : pop rsi ; pop r15 ; ret
0x000000000010ff94 : pop rsi ; pop r15 ; ret
0x000000000010ffd3 : pop rsi ; pop r15 ; ret
0x0000000000110797 : pop rsi ; pop r15 ; ret
0x00000000001132eb : pop rsi ; pop r15 ; ret
0x000000000011371d : pop rsi ; pop r15 ; ret
0x000000000011616e : pop rsi ; pop r15 ; ret
0x000000000011676a : pop rsi ; pop r15 ; ret
0x00000000001168ba : pop rsi ; pop r15 ; ret
0x00000000001172f7 : pop rsi ; pop r15 ; ret
0x0000000000117dbe : pop rsi ; pop r15 ; ret
0x0000000000118a0a : pop rsi ; pop r15 ; ret
0x0000000000118cdf : pop rsi ; pop r15 ; ret
0x0000000000118f00 : pop rsi ; pop r15 ; ret
0x0000000000119861 : pop rsi ; pop r15 ; ret
0x0000000000119add : pop rsi ; pop r15 ; ret
0x0000000000119bea : pop rsi ; pop r15 ; ret
0x000000000011a121 : pop rsi ; pop r15 ; ret
0x000000000011a265 : pop rsi ; pop r15 ; ret
0x000000000011a2ee : pop rsi ; pop r15 ; ret
0x000000000011a4ee : pop rsi ; pop r15 ; ret
0x000000000011a625 : pop rsi ; pop r15 ; ret
0x000000000011a6a6 : pop rsi ; pop r15 ; ret
0x000000000011ac97 : pop rsi ; pop r15 ; ret
0x000000000011ae56 : pop rsi ; pop r15 ; ret
0x000000000011ae9a : pop rsi ; pop r15 ; ret
0x000000000011af4a : pop rsi ; pop r15 ; ret
0x000000000011b616 : pop rsi ; pop r15 ; ret
0x000000000011b65a : pop rsi ; pop r15 ; ret
0x000000000011b70a : pop rsi ; pop r15 ; ret
0x000000000011ba16 : pop rsi ; pop r15 ; ret
0x000000000011ba38 : pop rsi ; pop r15 ; ret
0x000000000011ba57 : pop rsi ; pop r15 ; ret
0x000000000011c0f7 : pop rsi ; pop r15 ; ret
0x000000000011c118 : pop rsi ; pop r15 ; ret
0x000000000011c137 : pop rsi ; pop r15 ; ret
0x000000000011c4eb : pop rsi ; pop r15 ; ret
0x000000000011c547 : pop rsi ; pop r15 ; ret
0x000000000011c5d8 : pop rsi ; pop r15 ; ret
0x000000000011c90a : pop rsi ; pop r15 ; ret
0x000000000011c967 : pop rsi ; pop r15 ; ret
0x000000000011c9f8 : pop rsi ; pop r15 ; ret
0x000000000011cf31 : pop rsi ; pop r15 ; ret
0x000000000011d241 : pop rsi ; pop r15 ; ret
0x000000000011d6bc : pop rsi ; pop r15 ; ret
0x000000000011dc7f : pop rsi ; pop r15 ; ret
0x000000000011dca6 : pop rsi ; pop r15 ; ret
0x000000000011dcff : pop rsi ; pop r15 ; ret
0x000000000011dd2d : pop rsi ; pop r15 ; ret
0x000000000011e058 : pop rsi ; pop r15 ; ret
0x000000000011e885 : pop rsi ; pop r15 ; ret
0x000000000011e8b7 : pop rsi ; pop r15 ; ret
0x000000000011e8df : pop rsi ; pop r15 ; ret
0x000000000011ed41 : pop rsi ; pop r15 ; ret
0x000000000011fa61 : pop rsi ; pop r15 ; ret
0x000000000011fb2e : pop rsi ; pop r15 ; ret
0x00000000001200dc : pop rsi ; pop r15 ; ret
0x00000000001200ed : pop rsi ; pop r15 ; ret
0x000000000012046d : pop rsi ; pop r15 ; ret
0x0000000000120d57 : pop rsi ; pop r15 ; ret
0x0000000000120d78 : pop rsi ; pop r15 ; ret
0x0000000000120d97 : pop rsi ; pop r15 ; ret
0x000000000012150f : pop rsi ; pop r15 ; ret
0x0000000000121d13 : pop rsi ; pop r15 ; ret
0x0000000000121d94 : pop rsi ; pop r15 ; ret
0x0000000000125309 : pop rsi ; pop r15 ; ret
0x000000000012534b : pop rsi ; pop r15 ; ret
0x000000000012542d : pop rsi ; pop r15 ; ret
0x00000000001254e5 : pop rsi ; pop r15 ; ret
0x00000000001262ee : pop rsi ; pop r15 ; ret
0x000000000012630a : pop rsi ; pop r15 ; ret
0x000000000012719e : pop rsi ; pop r15 ; ret
0x000000000012794c : pop rsi ; pop r15 ; ret
0x00000000001279b3 : pop rsi ; pop r15 ; ret
0x00000000001280ab : pop rsi ; pop r15 ; ret
0x0000000000128413 : pop rsi ; pop r15 ; ret
0x00000000001286ed : pop rsi ; pop r15 ; ret
0x000000000012871f : pop rsi ; pop r15 ; ret
0x0000000000128e08 : pop rsi ; pop r15 ; ret
0x00000000001291df : pop rsi ; pop r15 ; ret
0x00000000001292b4 : pop rsi ; pop r15 ; ret
0x000000000012a30c : pop rsi ; pop r15 ; ret
0x000000000012a35e : pop rsi ; pop r15 ; ret
0x000000000012a47a : pop rsi ; pop r15 ; ret
0x000000000012a4e5 : pop rsi ; pop r15 ; ret
0x000000000012a5ec : pop rsi ; pop r15 ; ret
0x000000000012a605 : pop rsi ; pop r15 ; ret
0x000000000012a7a3 : pop rsi ; pop r15 ; ret
0x000000000012a826 : pop rsi ; pop r15 ; ret
0x000000000012a9f2 : pop rsi ; pop r15 ; ret
0x000000000012aab4 : pop rsi ; pop r15 ; ret
0x000000000012aca8 : pop rsi ; pop r15 ; ret
0x000000000012ad66 : pop rsi ; pop r15 ; ret
0x000000000012bc65 : pop rsi ; pop r15 ; ret
0x000000000012bee9 : pop rsi ; pop r15 ; ret
0x000000000012c12d : pop rsi ; pop r15 ; ret
0x000000000012c82a : pop rsi ; pop r15 ; ret
0x000000000012cf96 : pop rsi ; pop r15 ; ret
0x000000000012d277 : pop rsi ; pop r15 ; ret
0x000000000012e56d : pop rsi ; pop r15 ; ret
0x000000000012e5c2 : pop rsi ; pop r15 ; ret
0x000000000012e611 : pop rsi ; pop r15 ; ret
0x000000000012eaf2 : pop rsi ; pop r15 ; ret
0x000000000012ef25 : pop rsi ; pop r15 ; ret
0x000000000012f115 : pop rsi ; pop r15 ; ret
0x000000000012f131 : pop rsi ; pop r15 ; ret
0x000000000012f2a5 : pop rsi ; pop r15 ; ret
0x000000000012f2f8 : pop rsi ; pop r15 ; ret
0x000000000012f444 : pop rsi ; pop r15 ; ret
0x000000000012f550 : pop rsi ; pop r15 ; ret
0x000000000012fed6 : pop rsi ; pop r15 ; ret
0x0000000000130838 : pop rsi ; pop r15 ; ret
0x0000000000130942 : pop rsi ; pop r15 ; ret
0x0000000000130c63 : pop rsi ; pop r15 ; ret
0x00000000001314b9 : pop rsi ; pop r15 ; ret
0x00000000001314cd : pop rsi ; pop r15 ; ret
0x0000000000131ed7 : pop rsi ; pop r15 ; ret
0x0000000000131ef8 : pop rsi ; pop r15 ; ret
0x0000000000131f17 : pop rsi ; pop r15 ; ret
0x0000000000132106 : pop rsi ; pop r15 ; ret
0x0000000000132128 : pop rsi ; pop r15 ; ret
0x0000000000132147 : pop rsi ; pop r15 ; ret
0x000000000013263e : pop rsi ; pop r15 ; ret
0x0000000000132c97 : pop rsi ; pop r15 ; ret
0x0000000000132cc5 : pop rsi ; pop r15 ; ret
0x0000000000132f8a : pop rsi ; pop r15 ; ret
0x00000000001331fe : pop rsi ; pop r15 ; ret
0x0000000000133227 : pop rsi ; pop r15 ; ret
0x0000000000133451 : pop rsi ; pop r15 ; ret
0x0000000000133c68 : pop rsi ; pop r15 ; ret
0x0000000000133e83 : pop rsi ; pop r15 ; ret
0x000000000013411c : pop rsi ; pop r15 ; ret
0x0000000000134530 : pop rsi ; pop r15 ; ret
0x0000000000135307 : pop rsi ; pop r15 ; ret
0x0000000000135708 : pop rsi ; pop r15 ; ret
0x00000000001357bd : pop rsi ; pop r15 ; ret
0x0000000000135d2c : pop rsi ; pop r15 ; ret
0x0000000000136296 : pop rsi ; pop r15 ; ret
0x0000000000136556 : pop rsi ; pop r15 ; ret
0x00000000001367d8 : pop rsi ; pop r15 ; ret
0x0000000000137c2c : pop rsi ; pop r15 ; ret
0x0000000000137eb3 : pop rsi ; pop r15 ; ret
0x00000000001380f1 : pop rsi ; pop r15 ; ret
0x000000000013860b : pop rsi ; pop r15 ; ret
0x0000000000138b49 : pop rsi ; pop r15 ; ret
0x0000000000138cb2 : pop rsi ; pop r15 ; ret
0x0000000000138d7b : pop rsi ; pop r15 ; ret
0x0000000000138ead : pop rsi ; pop r15 ; ret
0x00000000001390eb : pop rsi ; pop r15 ; ret
0x00000000001399a0 : pop rsi ; pop r15 ; ret
0x00000000001399b5 : pop rsi ; pop r15 ; ret
0x00000000001399ff : pop rsi ; pop r15 ; ret
0x0000000000139a83 : pop rsi ; pop r15 ; ret
0x0000000000139e2c : pop rsi ; pop r15 ; ret
0x000000000013a70c : pop rsi ; pop r15 ; ret
0x000000000013a882 : pop rsi ; pop r15 ; ret
0x000000000013a8a0 : pop rsi ; pop r15 ; ret
0x000000000013b5c2 : pop rsi ; pop r15 ; ret
0x000000000013b60d : pop rsi ; pop r15 ; ret
0x000000000013c94e : pop rsi ; pop r15 ; ret
0x000000000013ce7e : pop rsi ; pop r15 ; ret
0x000000000013dcaf : pop rsi ; pop r15 ; ret
0x000000000013dd15 : pop rsi ; pop r15 ; ret
0x000000000013df22 : pop rsi ; pop r15 ; ret
0x000000000013e240 : pop rsi ; pop r15 ; ret
0x000000000013e3f0 : pop rsi ; pop r15 ; ret
0x000000000013ef4d : pop rsi ; pop r15 ; ret
0x000000000013efc4 : pop rsi ; pop r15 ; ret
0x000000000013f0d2 : pop rsi ; pop r15 ; ret
0x000000000013f878 : pop rsi ; pop r15 ; ret
0x000000000014028e : pop rsi ; pop r15 ; ret
0x000000000014048d : pop rsi ; pop r15 ; ret
0x0000000000140551 : pop rsi ; pop r15 ; ret
0x0000000000141523 : pop rsi ; pop r15 ; ret
0x0000000000141995 : pop rsi ; pop r15 ; ret
0x0000000000141b86 : pop rsi ; pop r15 ; ret
0x0000000000141e56 : pop rsi ; pop r15 ; ret
0x0000000000142c9a : pop rsi ; pop r15 ; ret
0x00000000001431b5 : pop rsi ; pop r15 ; ret
0x0000000000143398 : pop rsi ; pop r15 ; ret
0x00000000001440c6 : pop rsi ; pop r15 ; ret
0x000000000014427b : pop rsi ; pop r15 ; ret
0x0000000000172f10 : pop rsi ; pop r15 ; ret
0x0000000000173d3b : pop rsi ; pop r15 ; ret
0x0000000000174cc3 : pop rsi ; pop r15 ; ret
0x0000000000174cdd : pop rsi ; pop r15 ; ret
0x000000000017519c : pop rsi ; pop r15 ; ret
0x000000000017523d : pop rsi ; pop r15 ; ret
0x000000000003b587 : pop rsi ; pop r15 ; ret
0x000000000003ba57 : pop rsi ; pop r15 ; ret
0x00000000000cd6b7 : pop rsi ; pop rbp ; ret
0x00000000000202e8 : pop rsi ; ret
0x00000000000203e6 : pop rsi ; ret
0x0000000000022bb5 : pop rsi ; ret
0x0000000000032fd0 : pop rsi ; ret
0x0000000000033c42 : pop rsi ; ret
0x000000000003c130 : pop rsi ; ret
0x000000000003c17f : pop rsi ; ret
0x000000000003c1b7 : pop rsi ; ret
0x000000000003c257 : pop rsi ; ret
0x000000000003f3f3 : pop rsi ; ret
0x000000000003f442 : pop rsi ; ret
0x000000000003f477 : pop rsi ; ret
0x000000000003f517 : pop rsi ; ret
0x00000000000423a0 : pop rsi ; ret
0x000000000004983f : pop rsi ; ret
0x0000000000054cbd : pop rsi ; ret
0x0000000000054cd5 : pop rsi ; ret
0x000000000006bd23 : pop rsi ; ret
0x000000000006bf98 : pop rsi ; ret
0x000000000006e79e : pop rsi ; ret
0x000000000006e7e3 : pop rsi ; ret
0x000000000006e7f1 : pop rsi ; ret
0x0000000000071892 : pop rsi ; ret
0x0000000000073584 : pop rsi ; ret
0x00000000000735b2 : pop rsi ; ret
0x0000000000073659 : pop rsi ; ret
0x0000000000075025 : pop rsi ; ret
0x0000000000075040 : pop rsi ; ret
0x0000000000075059 : pop rsi ; ret
0x00000000000751e7 : pop rsi ; ret
0x0000000000075200 : pop rsi ; ret
0x0000000000075219 : pop rsi ; ret
0x0000000000075dfd : pop rsi ; ret
0x00000000000767c8 : pop rsi ; ret
0x0000000000076a6d : pop rsi ; ret
0x0000000000076b0c : pop rsi ; ret
0x0000000000076b3e : pop rsi ; ret
0x000000000007729a : pop rsi ; ret
0x0000000000077aa5 : pop rsi ; ret
0x0000000000077e34 : pop rsi ; ret
0x0000000000077eb3 : pop rsi ; ret
0x00000000000785b0 : pop rsi ; ret
0x0000000000078be9 : pop rsi ; ret
0x0000000000078fc0 : pop rsi ; ret
0x000000000007906e : pop rsi ; ret
0x000000000007b6e5 : pop rsi ; ret
0x000000000007b802 : pop rsi ; ret
0x000000000007d13b : pop rsi ; ret
0x000000000007d153 : pop rsi ; ret
0x000000000007d1bf : pop rsi ; ret
0x000000000007d1e1 : pop rsi ; ret
0x000000000007d794 : pop rsi ; ret
0x000000000007d81f : pop rsi ; ret
0x000000000007e0ab : pop rsi ; ret
0x000000000007e0f9 : pop rsi ; ret
0x0000000000082cea : pop rsi ; ret
0x0000000000082d78 : pop rsi ; ret
0x0000000000085584 : pop rsi ; ret
0x0000000000086f7b : pop rsi ; ret
0x0000000000087a65 : pop rsi ; ret
0x0000000000087ad3 : pop rsi ; ret
0x0000000000087e7c : pop rsi ; ret
0x0000000000088d80 : pop rsi ; ret
0x000000000008975b : pop rsi ; ret
0x0000000000095a4e : pop rsi ; ret
0x0000000000096baf : pop rsi ; ret
0x0000000000096bd9 : pop rsi ; ret
0x0000000000096eed : pop rsi ; ret
0x0000000000097927 : pop rsi ; ret
0x00000000000acd0c : pop rsi ; ret
0x00000000000acd20 : pop rsi ; ret
0x00000000000ace05 : pop rsi ; ret
0x00000000000acf02 : pop rsi ; ret
0x00000000000acf45 : pop rsi ; ret
0x00000000000ae703 : pop rsi ; ret
0x00000000000ae752 : pop rsi ; ret
0x00000000000ae787 : pop rsi ; ret
0x00000000000ae827 : pop rsi ; ret
0x00000000000b10c0 : pop rsi ; ret
0x00000000000b37f0 : pop rsi ; ret
0x00000000000b383f : pop rsi ; ret
0x00000000000b3877 : pop rsi ; ret
0x00000000000b3917 : pop rsi ; ret
0x00000000000b65d7 : pop rsi ; ret
0x00000000000b9f5b : pop rsi ; ret
0x00000000000bb56f : pop rsi ; ret
0x00000000000bb647 : pop rsi ; ret
0x00000000000bc91d : pop rsi ; ret
0x00000000000bc9e3 : pop rsi ; ret
0x00000000000bcc2b : pop rsi ; ret
0x00000000000bcc71 : pop rsi ; ret
0x00000000000bddf7 : pop rsi ; ret
0x00000000000bdf35 : pop rsi ; ret
0x00000000000c763b : pop rsi ; ret
0x00000000000c7a3d : pop rsi ; ret
0x00000000000c7ad4 : pop rsi ; ret
0x00000000000c7b14 : pop rsi ; ret
0x00000000000c8d60 : pop rsi ; ret
0x00000000000c9564 : pop rsi ; ret
0x00000000000c9be7 : pop rsi ; ret
0x00000000000c9c34 : pop rsi ; ret
0x00000000000c9cc3 : pop rsi ; ret
0x00000000000d7fd9 : pop rsi ; ret
0x00000000000d983d : pop rsi ; ret
0x00000000000d98bc : pop rsi ; ret
0x00000000000da3c1 : pop rsi ; ret
0x00000000000da3f4 : pop rsi ; ret
0x00000000000de37e : pop rsi ; ret
0x00000000000de40a : pop rsi ; ret
0x00000000000de45d : pop rsi ; ret
0x00000000000e829d : pop rsi ; ret
0x00000000000e82db : pop rsi ; ret
0x00000000000f8c40 : pop rsi ; ret
0x00000000000f8ca0 : pop rsi ; ret
0x00000000000f8d02 : pop rsi ; ret
0x00000000000fd4a8 : pop rsi ; ret
0x00000000000fd664 : pop rsi ; ret
0x00000000000fd6ce : pop rsi ; ret
0x00000000000fe798 : pop rsi ; ret
0x00000000000fe7e8 : pop rsi ; ret
0x00000000000fe9bf : pop rsi ; ret
0x0000000000100305 : pop rsi ; ret
0x000000000010562e : pop rsi ; ret
0x0000000000105f60 : pop rsi ; ret
0x0000000000105f76 : pop rsi ; ret
0x0000000000105f9c : pop rsi ; ret
0x00000000001082e3 : pop rsi ; ret
0x0000000000108463 : pop rsi ; ret
0x0000000000108999 : pop rsi ; ret
0x000000000010c87d : pop rsi ; ret
0x000000000010c8f1 : pop rsi ; ret
0x000000000010d358 : pop rsi ; ret
0x000000000010d3dd : pop rsi ; ret
0x000000000010e0ae : pop rsi ; ret
0x000000000010e0e7 : pop rsi ; ret
0x000000000010e103 : pop rsi ; ret
0x000000000010e3d0 : pop rsi ; ret
0x0000000000110a67 : pop rsi ; ret
0x0000000000110d03 : pop rsi ; ret
0x00000000001110cf : pop rsi ; ret
0x000000000011207e : pop rsi ; ret
0x00000000001150ca : pop rsi ; ret
0x0000000000118bb7 : pop rsi ; ret
0x000000000011b121 : pop rsi ; ret
0x000000000011c334 : pop rsi ; ret
0x000000000011c763 : pop rsi ; ret
0x000000000011e986 : pop rsi ; ret
0x000000000011ea46 : pop rsi ; ret
0x000000000012316d : pop rsi ; ret
0x000000000012320c : pop rsi ; ret
0x0000000000124edb : pop rsi ; ret
0x0000000000124f21 : pop rsi ; ret
0x0000000000124f71 : pop rsi ; ret
0x0000000000125008 : pop rsi ; ret
0x0000000000127733 : pop rsi ; ret
0x00000000001277df : pop rsi ; ret
0x000000000012957b : pop rsi ; ret
0x0000000000129633 : pop rsi ; ret
0x000000000012c9fb : pop rsi ; ret
0x000000000012ca21 : pop rsi ; ret
0x000000000012cb0a : pop rsi ; ret
0x000000000012cdc8 : pop rsi ; ret
0x000000000012de56 : pop rsi ; ret
0x000000000012e423 : pop rsi ; ret
0x000000000012ed45 : pop rsi ; ret
0x000000000012ed8b : pop rsi ; ret
0x0000000000132a8a : pop rsi ; ret
0x000000000013335b : pop rsi ; ret
0x000000000013363c : pop rsi ; ret
0x000000000013368b : pop rsi ; ret
0x0000000000135544 : pop rsi ; ret
0x000000000013786b : pop rsi ; ret
0x0000000000137880 : pop rsi ; ret
0x000000000013931b : pop rsi ; ret
0x00000000001393e4 : pop rsi ; ret
0x0000000000139493 : pop rsi ; ret
0x00000000001395fc : pop rsi ; ret
0x000000000013964b : pop rsi ; ret
0x000000000013a08e : pop rsi ; ret
0x000000000013a0cc : pop rsi ; ret
0x000000000013a4cd : pop rsi ; ret
0x000000000013a4e5 : pop rsi ; ret
0x000000000013a695 : pop rsi ; ret
0x000000000013a6b5 : pop rsi ; ret
0x000000000013b1e6 : pop rsi ; ret
0x000000000013b704 : pop rsi ; ret
0x000000000013b7af : pop rsi ; ret
0x000000000013c0a2 : pop rsi ; ret
0x000000000013cc17 : pop rsi ; ret
0x000000000013cc8f : pop rsi ; ret
0x000000000013d345 : pop rsi ; ret
0x000000000013d3af : pop rsi ; ret
0x00000000001408b2 : pop rsi ; ret
0x0000000000142281 : pop rsi ; ret
0x00000000001a288f : pop rsi ; ret
0x0000000000101dbb : pop rsi ; ret 0xcdbb
0x0000000000073635 : pop rsi ; sar rax, 2 ; ret
0x00000000000f90d5 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000147340 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000198214 : pop rsp ; add al, 1 ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x00000000001467f4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a3c94 : pop rsp ; add dword ptr [rax], 0xed46a800 ; jmp qword ptr [rsi]
0x00000000000d9592 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000148040 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000bb8f5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000195985 : pop rsp ; cld ; call qword ptr [rax]
0x0000000000195849 : pop rsp ; cld ; call rdx
0x0000000000195848 : pop rsp ; cld ; call rdx
0x0000000000195845 : pop rsp ; cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001960d9 : pop rsp ; cld ; jmp rax
0x00000000001957c9 : pop rsp ; cld ; jmp rsi
0x00000000001b9594 : pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x0000000000186899 : pop rsp ; in eax, dx ; call qword ptr [rdi]
0x0000000000186891 : pop rsp ; in eax, dx ; call rsp
0x00000000001868b9 : pop rsp ; in eax, dx ; call rsp
0x00000000001868d1 : pop rsp ; in eax, dx ; call rsp
0x0000000000198551 : pop rsp ; int1 ; call rsp
0x00000000001a9951 : pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001a9969 : pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001887a0 : pop rsp ; jle 0x188799 ; jmp rdi
0x000000000018a850 : pop rsp ; jle 0x18a84c ; jmp rdx
0x0000000000084cab : pop rsp ; jmp rax
0x0000000000086062 : pop rsp ; jmp rax
0x000000000008683e : pop rsp ; jmp rax
0x0000000000086b3d : pop rsp ; jmp rcx
0x0000000000199f2c : pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000102880 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000010289a : pop rsp ; mov esi, 3 ; jmp rax
0x000000000006fb6f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001451d0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000423cd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042465 : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b10ed : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b1185 : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000000b106b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010404c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020250 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e63 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e9a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000213ba : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000223fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022cca : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023046 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000236d2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c6c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c83 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b5d5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b60d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c01b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c0f0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c140 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c44e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c6c8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c8bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002cc72 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d04f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d158 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002efbc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002f261 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002ff9a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000030a89 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032294 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032441 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000395e7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039648 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039abc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000045614 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000457f9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004584d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000048cd9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004a99e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004aa73 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ac9b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004b6fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d282 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d333 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000503ab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050cce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e04 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e56 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050fb9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055bf7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e15 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e56 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000056ae2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058ade : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058b04 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058be9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000005bba8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000637ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000752a8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000776e2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008883f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000989f1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000b7390 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba04b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba0a9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf7f0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf85b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c52a8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cc51c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ccdb8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cdf3f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cead8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cece0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf23b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf321 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf86d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d1ae9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d228e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d38c6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d55b4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5645 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5663 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d891e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8c4c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8cc5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dcdc3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dd008 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e94cc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e956d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e959d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e98b2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaab1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaadb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eadef : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef2bf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef6d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f150e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1568 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f162e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1729 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f6039 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f9912 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fd952 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fda1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febdc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febf3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010321e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010340a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000104b16 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001052d3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105374 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105a74 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105b9d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000109208 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a08c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a205 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a2dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000110050 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001102d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000111825 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000113e5c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000115e61 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011db20 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011f58f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000120fc5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000121243 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001213aa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220a5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012239c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123666 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001236c4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001237e0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123878 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001239f5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123b79 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124354 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012438e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124632 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124aaf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124d30 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128eec : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128fd5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129716 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012998b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129aa2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129abb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129ca2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129dab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129de3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012a0f5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c3e6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c673 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c6c6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013287c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000132893 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013468c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001346d8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001347ac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013484c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013d513 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013e82f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f43f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f716 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013fa6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013ff28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140bab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140c45 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142aa0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000143906 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144733 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144768 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144780 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021114 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002113c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021164 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002118c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021895 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022842 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022990 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023c19 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023e09 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023eac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f06 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f1f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024043 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024083 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000245ce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000247c7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024864 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248ca : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a13 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024f79 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002531d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000025b1e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002682f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026879 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027996 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000279d5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028015 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028856 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028896 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028ee5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000298ce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000029f9e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a067 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a17b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002aa1c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002ac86 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002bebf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d77a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e1c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e425 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e7cc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000306f1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000307a2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000325c7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032be9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032c8b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000033330 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000340aa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003721c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000037232 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003785b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000397e0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a4a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b527 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b583 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b9f7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ba53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bb74 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bf97 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003c6f9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f257 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f9d9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000421af : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000042c07 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004609d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046f82 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046fe9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000472c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004777a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486c4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000487cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000488a8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004915f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000492d3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000499b2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a319 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a343 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000052e05 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005316f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005505a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005526f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055423 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000554e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055580 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006adf9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006b24a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006d500 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006e9b6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ec9f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ecf8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006f2f4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070c93 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070d00 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071a64 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071d7e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071e25 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000725ff : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007276f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000730da : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000731ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000733d3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073a8d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073b9e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073c84 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073e54 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007481f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074864 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074e4c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076cc5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078de6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079268 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079b72 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079ba1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079fbf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007a16a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007afd4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c258 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c9c0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007cdb8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007ce2b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007d891 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007e521 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007f355 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007feaa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000080381 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000813e0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000081ebf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000831ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008335a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000833b4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083c17 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083d67 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000084788 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000085aef : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086c71 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087155 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008755c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087c8c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000881be : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088a0b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088edd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000893d2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b5f3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b68a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008dff0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e131 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e14a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095435 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095521 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095701 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095fa4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096386 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000964de : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000969c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096ac2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096d21 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096fed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000976d5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009785a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009807e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab50 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab71 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad2f3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad5e5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad892 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000addb7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ade08 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae217 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae268 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae30b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae573 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aef2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b0edb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b1b91 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b3663 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b400a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b6a97 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ba626 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf40 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf72 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc076 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc723 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc82a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bce64 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bd7c8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000be00b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef0f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bf1b6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c0012 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c322c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c7e0a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8698 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c893c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8bd0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8cf9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8ef5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8f1b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8fcc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c934e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca0da : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca13b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca1d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca37b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca3db : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca474 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca5a5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca6aa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca7ac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca9e4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cabf5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cac1b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb5eb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb64b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb6e4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb88a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb8eb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb984 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cbebc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cc9c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccb65 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccd0b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9ce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d41d6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5b83 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5df5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5e2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5f99 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d65b1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6de9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d743c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d7458 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d8dea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d9c38 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da5bc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da87b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daa1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daae2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daea6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daee8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daf35 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000db0f5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbbb4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbf63 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc0c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc468 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc68e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc78c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc8fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddac6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddc57 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddce9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddd66 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddec0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000de671 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df3da : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df42c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df68a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df6a9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa05 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa7f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfae0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0254 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e05dc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e1d67 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e412d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e41f7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4216 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4822 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4ea0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4f79 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e57b9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5b2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5f1f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7f54 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e85ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e872c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e8832 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e918f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eab56 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eac20 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ed4f1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000edefc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000efe6b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f06cb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f07b0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f08ab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f1ac9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f40a7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f49a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5cc1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7385 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7b54 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f86c2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f91c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa181 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fab0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb01d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb8cb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fbe14 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ffbe4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100883 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100e9b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001016c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101b8a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101c11 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010210a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010218d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001026fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102791 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102fe6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000103076 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010308a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010405f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001049a5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a3a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a51 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000105762 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000107645 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000108693 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109ad0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109ae9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac6b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac81 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4d3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bb85 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bbab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c463 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c484 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c4a3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010cbbc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d535 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d55b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d76f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d802 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dbe3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc04 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc23 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010df86 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dfb8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e2ec : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e4fb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010eff2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010f5ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fd03 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fee8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ff90 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ffcf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110793 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001132e7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000113719 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011616a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000116766 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001168b6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001172f3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000117dba : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118a06 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118cdb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118efc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011985d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119ad9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119be6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a11d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a261 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a2ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a4ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a621 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a6a2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ac93 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae52 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae96 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011af46 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b612 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b656 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b706 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba12 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba34 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c0f3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c114 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c133 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c4e7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c543 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c5d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c906 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c963 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c9f4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011cf2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d23d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d6b8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dc7b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dca2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dcfb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dd29 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e054 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e881 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8b3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8db : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ed3d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fa5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fb2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200d8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120469 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d74 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d93 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012150b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d0f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d90 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125305 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125347 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125429 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001254e1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001262ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000126306 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012719a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000127948 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001279af : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001280a7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012840f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001286e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012871b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000128e04 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001291db : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001292b0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a308 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a35a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a476 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a4e1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a5e8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a601 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a79f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a822 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a9ee : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aab0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aca4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ad62 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bc61 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bee5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c129 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c826 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012cf92 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012d273 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e569 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e5be : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e60d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012eaee : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ef21 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f111 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f12d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f2a1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f2f4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f440 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f54c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012fed2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130834 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013093e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130c5f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314b5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ed3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ef4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131f13 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132102 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132124 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132143 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013263a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132c93 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132cc1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132f86 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001331fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133223 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013344d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133c64 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133e7f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000134118 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013452c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135303 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135704 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001357b9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135d28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136292 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136552 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001367d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137c28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137eaf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001380ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138607 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138b45 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138cae : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138d77 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138ea9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001390e7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013999c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399b1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399fb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139a7f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139e28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a708 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a87e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a89c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b5be : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b609 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013c94a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ce7a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dcab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dd11 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013df1e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e23c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e3ec : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ef49 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013efc0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f0ce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f874 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014028a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000140489 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014054d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014151f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141991 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141b82 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141e52 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000142c96 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001431b1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000143394 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001440c2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000144277 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000172f0c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000173d37 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cbf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cd9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000175198 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000175239 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b583 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ba53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b3 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000203e2 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022bb1 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000032fcc : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000033c3e : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003c12c : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003c17b : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003c1b3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003c253 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003f3ef : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003f43e : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003f473 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003f513 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000004239c : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000004983b : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054cb9 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054cd1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006bd1f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006bf94 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006e79a : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006e7df : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006e7ed : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007188e : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073580 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000735ae : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073655 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075021 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007503c : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075055 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000751e3 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000751fc : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075215 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075df9 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000767c4 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000076a69 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000076b08 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000076b3a : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077296 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077aa1 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077e30 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077eaf : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000785ac : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000078be5 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000078fbc : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007906a : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007b6e1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007b7fe : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d137 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d14f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d1bb : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d1dd : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d790 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d81b : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007e0a7 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007e0f5 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000082ce6 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000082d74 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000085580 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000086f77 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000087a61 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000087acf : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000087e78 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000088d7c : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000089757 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000095a4a : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096bab : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096bd5 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096ee9 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000097923 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acd08 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acd1c : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ace01 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acefe : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acf41 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ae6ff : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ae74e : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ae783 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ae823 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b10bc : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b37ec : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b383b : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b3873 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b3913 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b9f57 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bc919 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bc9df : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bcc27 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bcc6d : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bddf3 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bdf31 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c7637 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c7a39 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c7ad0 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c7b10 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c8d5c : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9560 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9be3 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9c30 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9cbf : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d7fd5 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d9839 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d98b8 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000da3bd : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000da3f0 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de37a : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de406 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de459 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e8299 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e82d7 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000f8c3c : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000f8c9c : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000f8cfe : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fd4a4 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fd660 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fd6ca : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fe794 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fe7e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fe9bb : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000100301 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010562a : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000105f5c : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000105f72 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000105f98 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001082df : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010845f : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000108995 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010c879 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010c8ed : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010d354 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010e0aa : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010e0e3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010e0ff : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010e3cc : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000110a63 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000110cff : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001110cb : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000118bb3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011b11d : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011c330 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011c75f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011e982 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011ea42 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000123169 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000123208 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000124ed7 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000124f1d : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000124f6d : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000125004 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012772f : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001277db : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000129577 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012962f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012c9f7 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012ca1d : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012cdc4 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012de52 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012e41f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012ed41 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012ed87 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000132a86 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000133357 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000133638 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000133687 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000135540 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000137867 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013787c : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000139317 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001393e0 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013948f : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001395f8 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000139647 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a08a : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a0c8 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a4c9 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a4e1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a691 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a6b1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013b1e2 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013b700 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013b7ab : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013c09e : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013cc13 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013cc8b : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013d341 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013d3ab : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001408ae : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000014227d : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073631 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d126 : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000006d148 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000cd40b : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000cd41b : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000ffd69 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000115a45 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000115a61 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000206c3 : pop rsp ; pop r13 ; ret
0x000000000002268b : pop rsp ; pop r13 ; ret
0x0000000000022704 : pop rsp ; pop r13 ; ret
0x0000000000022b54 : pop rsp ; pop r13 ; ret
0x0000000000029daf : pop rsp ; pop r13 ; ret
0x0000000000029dd3 : pop rsp ; pop r13 ; ret
0x0000000000029e17 : pop rsp ; pop r13 ; ret
0x0000000000029e9e : pop rsp ; pop r13 ; ret
0x000000000002a83b : pop rsp ; pop r13 ; ret
0x000000000002a861 : pop rsp ; pop r13 ; ret
0x000000000002a8e3 : pop rsp ; pop r13 ; ret
0x0000000000032dc7 : pop rsp ; pop r13 ; ret
0x0000000000033b91 : pop rsp ; pop r13 ; ret
0x0000000000036bf6 : pop rsp ; pop r13 ; ret
0x0000000000036c1b : pop rsp ; pop r13 ; ret
0x0000000000039df9 : pop rsp ; pop r13 ; ret
0x0000000000039e3a : pop rsp ; pop r13 ; ret
0x000000000003a589 : pop rsp ; pop r13 ; ret
0x000000000003ae49 : pop rsp ; pop r13 ; ret
0x000000000003aed1 : pop rsp ; pop r13 ; ret
0x000000000004a8dd : pop rsp ; pop r13 ; ret
0x000000000004fff7 : pop rsp ; pop r13 ; ret
0x0000000000054b8f : pop rsp ; pop r13 ; ret
0x0000000000054bb2 : pop rsp ; pop r13 ; ret
0x0000000000054d8b : pop rsp ; pop r13 ; ret
0x0000000000054da1 : pop rsp ; pop r13 ; ret
0x0000000000055b36 : pop rsp ; pop r13 ; ret
0x000000000005b779 : pop rsp ; pop r13 ; ret
0x000000000005b860 : pop rsp ; pop r13 ; ret
0x00000000000634b4 : pop rsp ; pop r13 ; ret
0x000000000006bbd6 : pop rsp ; pop r13 ; ret
0x000000000006dd66 : pop rsp ; pop r13 ; ret
0x000000000006e294 : pop rsp ; pop r13 ; ret
0x000000000006e2a9 : pop rsp ; pop r13 ; ret
0x000000000006e2ba : pop rsp ; pop r13 ; ret
0x000000000006efd1 : pop rsp ; pop r13 ; ret
0x000000000006effd : pop rsp ; pop r13 ; ret
0x00000000000701e8 : pop rsp ; pop r13 ; ret
0x0000000000070206 : pop rsp ; pop r13 ; ret
0x0000000000070281 : pop rsp ; pop r13 ; ret
0x0000000000070e31 : pop rsp ; pop r13 ; ret
0x0000000000070e5d : pop rsp ; pop r13 ; ret
0x00000000000717d0 : pop rsp ; pop r13 ; ret
0x0000000000071916 : pop rsp ; pop r13 ; ret
0x00000000000734ab : pop rsp ; pop r13 ; ret
0x00000000000750f3 : pop rsp ; pop r13 ; ret
0x000000000007510c : pop rsp ; pop r13 ; ret
0x000000000007511d : pop rsp ; pop r13 ; ret
0x0000000000075453 : pop rsp ; pop r13 ; ret
0x00000000000757e1 : pop rsp ; pop r13 ; ret
0x000000000007641d : pop rsp ; pop r13 ; ret
0x0000000000076911 : pop rsp ; pop r13 ; ret
0x00000000000769ca : pop rsp ; pop r13 ; ret
0x0000000000077936 : pop rsp ; pop r13 ; ret
0x0000000000077967 : pop rsp ; pop r13 ; ret
0x0000000000078a66 : pop rsp ; pop r13 ; ret
0x000000000007a458 : pop rsp ; pop r13 ; ret
0x000000000007bbd2 : pop rsp ; pop r13 ; ret
0x000000000007c442 : pop rsp ; pop r13 ; ret
0x000000000007c723 : pop rsp ; pop r13 ; ret
0x000000000007d034 : pop rsp ; pop r13 ; ret
0x000000000007d57a : pop rsp ; pop r13 ; ret
0x000000000007e224 : pop rsp ; pop r13 ; ret
0x0000000000084543 : pop rsp ; pop r13 ; ret
0x00000000000845d8 : pop rsp ; pop r13 ; ret
0x00000000000845ee : pop rsp ; pop r13 ; ret
0x0000000000084e4f : pop rsp ; pop r13 ; ret
0x00000000000850aa : pop rsp ; pop r13 ; ret
0x00000000000850bf : pop rsp ; pop r13 ; ret
0x00000000000850e6 : pop rsp ; pop r13 ; ret
0x0000000000087796 : pop rsp ; pop r13 ; ret
0x000000000008f0a1 : pop rsp ; pop r13 ; ret
0x000000000008f136 : pop rsp ; pop r13 ; ret
0x000000000009f2d8 : pop rsp ; pop r13 ; ret
0x000000000009f307 : pop rsp ; pop r13 ; ret
0x000000000009f3cf : pop rsp ; pop r13 ; ret
0x000000000009f451 : pop rsp ; pop r13 ; ret
0x000000000009f46a : pop rsp ; pop r13 ; ret
0x000000000009f4b4 : pop rsp ; pop r13 ; ret
0x000000000009f51a : pop rsp ; pop r13 ; ret
0x00000000000aa880 : pop rsp ; pop r13 ; ret
0x00000000000aa99f : pop rsp ; pop r13 ; ret
0x00000000000aa9cf : pop rsp ; pop r13 ; ret
0x00000000000b9e85 : pop rsp ; pop r13 ; ret
0x00000000000b9ef5 : pop rsp ; pop r13 ; ret
0x00000000000ba3b9 : pop rsp ; pop r13 ; ret
0x00000000000ba439 : pop rsp ; pop r13 ; ret
0x00000000000ba453 : pop rsp ; pop r13 ; ret
0x00000000000baedb : pop rsp ; pop r13 ; ret
0x00000000000c7c32 : pop rsp ; pop r13 ; ret
0x00000000000c7c67 : pop rsp ; pop r13 ; ret
0x00000000000c7c9e : pop rsp ; pop r13 ; ret
0x00000000000c8508 : pop rsp ; pop r13 ; ret
0x00000000000c989c : pop rsp ; pop r13 ; ret
0x00000000000c9a0d : pop rsp ; pop r13 ; ret
0x00000000000cb06d : pop rsp ; pop r13 ; ret
0x00000000000cb1ec : pop rsp ; pop r13 ; ret
0x00000000000cba85 : pop rsp ; pop r13 ; ret
0x00000000000cbae3 : pop rsp ; pop r13 ; ret
0x00000000000cc1df : pop rsp ; pop r13 ; ret
0x00000000000d7149 : pop rsp ; pop r13 ; ret
0x00000000000e8350 : pop rsp ; pop r13 ; ret
0x00000000000e8375 : pop rsp ; pop r13 ; ret
0x00000000000e8a77 : pop rsp ; pop r13 ; ret
0x00000000000efb18 : pop rsp ; pop r13 ; ret
0x00000000000efde6 : pop rsp ; pop r13 ; ret
0x00000000000efe01 : pop rsp ; pop r13 ; ret
0x00000000000f036c : pop rsp ; pop r13 ; ret
0x00000000000f037c : pop rsp ; pop r13 ; ret
0x00000000000f040b : pop rsp ; pop r13 ; ret
0x00000000000f0452 : pop rsp ; pop r13 ; ret
0x00000000000f74a4 : pop rsp ; pop r13 ; ret
0x00000000000f85ac : pop rsp ; pop r13 ; ret
0x00000000000f9b68 : pop rsp ; pop r13 ; ret
0x00000000000f9bc0 : pop rsp ; pop r13 ; ret
0x00000000000fb675 : pop rsp ; pop r13 ; ret
0x00000000000fb689 : pop rsp ; pop r13 ; ret
0x00000000000fb6fc : pop rsp ; pop r13 ; ret
0x00000000000fc2ee : pop rsp ; pop r13 ; ret
0x00000000000fc4e1 : pop rsp ; pop r13 ; ret
0x00000000000fc59d : pop rsp ; pop r13 ; ret
0x00000000000fc5d1 : pop rsp ; pop r13 ; ret
0x00000000000fd0c1 : pop rsp ; pop r13 ; ret
0x00000000000fd171 : pop rsp ; pop r13 ; ret
0x00000000000fef98 : pop rsp ; pop r13 ; ret
0x00000000000fefa9 : pop rsp ; pop r13 ; ret
0x00000000000ff8db : pop rsp ; pop r13 ; ret
0x00000000000ffa1b : pop rsp ; pop r13 ; ret
0x00000000000ffe91 : pop rsp ; pop r13 ; ret
0x00000000000ffec5 : pop rsp ; pop r13 ; ret
0x0000000000101271 : pop rsp ; pop r13 ; ret
0x0000000000104e34 : pop rsp ; pop r13 ; ret
0x0000000000104e9c : pop rsp ; pop r13 ; ret
0x0000000000105cd2 : pop rsp ; pop r13 ; ret
0x00000000001088e7 : pop rsp ; pop r13 ; ret
0x0000000000108a3d : pop rsp ; pop r13 ; ret
0x0000000000109505 : pop rsp ; pop r13 ; ret
0x00000000001098aa : pop rsp ; pop r13 ; ret
0x00000000001098fb : pop rsp ; pop r13 ; ret
0x000000000010ad4f : pop rsp ; pop r13 ; ret
0x000000000010ad61 : pop rsp ; pop r13 ; ret
0x000000000010b5af : pop rsp ; pop r13 ; ret
0x000000000010b5c1 : pop rsp ; pop r13 ; ret
0x000000000010b80d : pop rsp ; pop r13 ; ret
0x000000000010b997 : pop rsp ; pop r13 ; ret
0x000000000010bdfb : pop rsp ; pop r13 ; ret
0x000000000010c0ca : pop rsp ; pop r13 ; ret
0x000000000010ce86 : pop rsp ; pop r13 ; ret
0x000000000010cea1 : pop rsp ; pop r13 ; ret
0x000000000010d1bd : pop rsp ; pop r13 ; ret
0x000000000010eb5b : pop rsp ; pop r13 ; ret
0x000000000010eb71 : pop rsp ; pop r13 ; ret
0x00000000001163fc : pop rsp ; pop r13 ; ret
0x000000000011706c : pop rsp ; pop r13 ; ret
0x00000000001170c1 : pop rsp ; pop r13 ; ret
0x0000000000117403 : pop rsp ; pop r13 ; ret
0x0000000000117486 : pop rsp ; pop r13 ; ret
0x0000000000117553 : pop rsp ; pop r13 ; ret
0x0000000000117824 : pop rsp ; pop r13 ; ret
0x0000000000117839 : pop rsp ; pop r13 ; ret
0x000000000011784a : pop rsp ; pop r13 ; ret
0x0000000000118523 : pop rsp ; pop r13 ; ret
0x00000000001185a9 : pop rsp ; pop r13 ; ret
0x0000000000118673 : pop rsp ; pop r13 ; ret
0x000000000011a00c : pop rsp ; pop r13 ; ret
0x000000000011b8ac : pop rsp ; pop r13 ; ret
0x000000000011bf7d : pop rsp ; pop r13 ; ret
0x000000000011d0dd : pop rsp ; pop r13 ; ret
0x000000000011d128 : pop rsp ; pop r13 ; ret
0x0000000000120bdd : pop rsp ; pop r13 ; ret
0x000000000012336b : pop rsp ; pop r13 ; ret
0x000000000012b0e2 : pop rsp ; pop r13 ; ret
0x000000000012b170 : pop rsp ; pop r13 ; ret
0x000000000012b1f0 : pop rsp ; pop r13 ; ret
0x000000000012b275 : pop rsp ; pop r13 ; ret
0x000000000012b2f5 : pop rsp ; pop r13 ; ret
0x000000000012b375 : pop rsp ; pop r13 ; ret
0x000000000012b3f5 : pop rsp ; pop r13 ; ret
0x000000000012b470 : pop rsp ; pop r13 ; ret
0x000000000012b4fa : pop rsp ; pop r13 ; ret
0x000000000012b570 : pop rsp ; pop r13 ; ret
0x000000000012b5f0 : pop rsp ; pop r13 ; ret
0x000000000012b67a : pop rsp ; pop r13 ; ret
0x000000000012b6f5 : pop rsp ; pop r13 ; ret
0x000000000012b770 : pop rsp ; pop r13 ; ret
0x000000000012c25e : pop rsp ; pop r13 ; ret
0x000000000012f70d : pop rsp ; pop r13 ; ret
0x00000000001307a2 : pop rsp ; pop r13 ; ret
0x00000000001307df : pop rsp ; pop r13 ; ret
0x000000000013197d : pop rsp ; pop r13 ; ret
0x0000000000131afc : pop rsp ; pop r13 ; ret
0x0000000000132904 : pop rsp ; pop r13 ; ret
0x000000000013291a : pop rsp ; pop r13 ; ret
0x000000000013430b : pop rsp ; pop r13 ; ret
0x0000000000134ac1 : pop rsp ; pop r13 ; ret
0x0000000000134ece : pop rsp ; pop r13 ; ret
0x000000000013549e : pop rsp ; pop r13 ; ret
0x00000000001354b2 : pop rsp ; pop r13 ; ret
0x000000000013798e : pop rsp ; pop r13 ; ret
0x0000000000137ace : pop rsp ; pop r13 ; ret
0x0000000000138457 : pop rsp ; pop r13 ; ret
0x00000000001384aa : pop rsp ; pop r13 ; ret
0x0000000000138517 : pop rsp ; pop r13 ; ret
0x0000000000139285 : pop rsp ; pop r13 ; ret
0x000000000013929a : pop rsp ; pop r13 ; ret
0x000000000013a1dc : pop rsp ; pop r13 ; ret
0x000000000013a249 : pop rsp ; pop r13 ; ret
0x000000000013b49d : pop rsp ; pop r13 ; ret
0x000000000013b4c5 : pop rsp ; pop r13 ; ret
0x000000000013b4e6 : pop rsp ; pop r13 ; ret
0x00000000001426bb : pop rsp ; pop r13 ; ret
0x000000000014296e : pop rsp ; pop r13 ; ret
0x000000000017400e : pop rsp ; pop r13 ; ret
0x0000000000174772 : pop rsp ; pop r13 ; ret
0x00000000000b65d5 : pop rsp ; pop r14 ; ret
0x00000000000bb56d : pop rsp ; pop r14 ; ret
0x00000000000bb645 : pop rsp ; pop r14 ; ret
0x00000000000398c7 : pop rsp ; pop rbp ; ret
0x00000000000cace2 : pop rsp ; pop rbp ; ret
0x00000000000fe636 : pop rsp ; pop rbp ; ret
0x00000000001a0b94 : pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; stosb byte ptr [rdi], al ; jmp 0x1a0ba2
0x00000000001b1194 : pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x0000000000003838 : pop rsp ; ret
0x000000000001fb13 : pop rsp ; ret
0x000000000001fb79 : pop rsp ; ret
0x000000000001fc09 : pop rsp ; ret
0x000000000002e836 : pop rsp ; ret
0x0000000000035a9a : pop rsp ; ret
0x0000000000035b23 : pop rsp ; ret
0x0000000000035c4c : pop rsp ; ret
0x0000000000035c9d : pop rsp ; ret
0x0000000000035ec6 : pop rsp ; ret
0x0000000000036def : pop rsp ; ret
0x0000000000039cf6 : pop rsp ; ret
0x000000000003a272 : pop rsp ; ret
0x000000000003a2c6 : pop rsp ; ret
0x000000000003adb4 : pop rsp ; ret
0x000000000004509d : pop rsp ; ret
0x0000000000047a16 : pop rsp ; ret
0x00000000000480df : pop rsp ; ret
0x000000000004827f : pop rsp ; ret
0x0000000000052c94 : pop rsp ; ret
0x000000000006a975 : pop rsp ; ret
0x000000000006aad7 : pop rsp ; ret
0x000000000006ab49 : pop rsp ; ret
0x000000000006c47f : pop rsp ; ret
0x000000000006c4a9 : pop rsp ; ret
0x000000000006cb8f : pop rsp ; ret
0x000000000006cc11 : pop rsp ; ret
0x000000000006d202 : pop rsp ; ret
0x000000000006d368 : pop rsp ; ret
0x000000000006db9b : pop rsp ; ret
0x000000000006dc0d : pop rsp ; ret
0x000000000006df3f : pop rsp ; ret
0x000000000006df85 : pop rsp ; ret
0x000000000006dfef : pop rsp ; ret
0x000000000006e0df : pop rsp ; ret
0x000000000006e13e : pop rsp ; ret
0x000000000006ee7d : pop rsp ; ret
0x000000000006eecd : pop rsp ; ret
0x000000000006f1ad : pop rsp ; ret
0x000000000006f1ba : pop rsp ; ret
0x000000000006f66b : pop rsp ; ret
0x000000000006f77f : pop rsp ; ret
0x000000000006f7df : pop rsp ; ret
0x000000000006fa1d : pop rsp ; ret
0x000000000006fa69 : pop rsp ; ret
0x000000000006fc88 : pop rsp ; ret
0x000000000006fdc8 : pop rsp ; ret
0x000000000006fe12 : pop rsp ; ret
0x000000000007083b : pop rsp ; ret
0x00000000000708b0 : pop rsp ; ret
0x0000000000070988 : pop rsp ; ret
0x0000000000070a7d : pop rsp ; ret
0x0000000000070ac4 : pop rsp ; ret
0x0000000000070b74 : pop rsp ; ret
0x0000000000070b88 : pop rsp ; ret
0x0000000000072ade : pop rsp ; ret
0x0000000000072b83 : pop rsp ; ret
0x0000000000073757 : pop rsp ; ret
0x0000000000074b56 : pop rsp ; ret
0x0000000000074b87 : pop rsp ; ret
0x0000000000076bab : pop rsp ; ret
0x00000000000779cc : pop rsp ; ret
0x0000000000077c90 : pop rsp ; ret
0x0000000000077cc3 : pop rsp ; ret
0x0000000000078165 : pop rsp ; ret
0x0000000000078191 : pop rsp ; ret
0x00000000000781d4 : pop rsp ; ret
0x0000000000078268 : pop rsp ; ret
0x00000000000782f6 : pop rsp ; ret
0x000000000007830d : pop rsp ; ret
0x0000000000079949 : pop rsp ; ret
0x000000000007a368 : pop rsp ; ret
0x000000000007a793 : pop rsp ; ret
0x000000000007b59c : pop rsp ; ret
0x000000000007b9b7 : pop rsp ; ret
0x000000000007ba6a : pop rsp ; ret
0x000000000007d39f : pop rsp ; ret
0x000000000007eedc : pop rsp ; ret
0x000000000007ef0c : pop rsp ; ret
0x0000000000084bac : pop rsp ; ret
0x0000000000085f49 : pop rsp ; ret
0x0000000000086735 : pop rsp ; ret
0x0000000000086a15 : pop rsp ; ret
0x0000000000086a7f : pop rsp ; ret
0x000000000008848a : pop rsp ; ret
0x0000000000088bc6 : pop rsp ; ret
0x00000000000891fc : pop rsp ; ret
0x00000000000892b1 : pop rsp ; ret
0x0000000000089653 : pop rsp ; ret
0x00000000000896d8 : pop rsp ; ret
0x0000000000089702 : pop rsp ; ret
0x0000000000089821 : pop rsp ; ret
0x0000000000089860 : pop rsp ; ret
0x000000000008b527 : pop rsp ; ret
0x00000000000943eb : pop rsp ; ret
0x0000000000094d65 : pop rsp ; ret
0x0000000000094f8f : pop rsp ; ret
0x0000000000096a4e : pop rsp ; ret
0x0000000000096c79 : pop rsp ; ret
0x0000000000096ce8 : pop rsp ; ret
0x0000000000096e42 : pop rsp ; ret
0x00000000000abce7 : pop rsp ; ret
0x00000000000ac67b : pop rsp ; ret
0x00000000000acb12 : pop rsp ; ret
0x00000000000ad0ed : pop rsp ; ret
0x00000000000ad15f : pop rsp ; ret
0x00000000000b9e23 : pop rsp ; ret
0x00000000000c8339 : pop rsp ; ret
0x00000000000c962b : pop rsp ; ret
0x00000000000cc0ea : pop rsp ; ret
0x00000000000cc83a : pop rsp ; ret
0x00000000000cdc5f : pop rsp ; ret
0x00000000000cdc84 : pop rsp ; ret
0x00000000000cdcb8 : pop rsp ; ret
0x00000000000cdd04 : pop rsp ; ret
0x00000000000ce6de : pop rsp ; ret
0x00000000000ce6fc : pop rsp ; ret
0x00000000000ce724 : pop rsp ; ret
0x00000000000ce774 : pop rsp ; ret
0x00000000000d17a6 : pop rsp ; ret
0x00000000000d18a6 : pop rsp ; ret
0x00000000000d5c28 : pop rsp ; ret
0x00000000000d5c42 : pop rsp ; ret
0x00000000000d5c72 : pop rsp ; ret
0x00000000000d6f92 : pop rsp ; ret
0x00000000000d6fd5 : pop rsp ; ret
0x00000000000d7cb5 : pop rsp ; ret
0x00000000000dc128 : pop rsp ; ret
0x00000000000e7bc1 : pop rsp ; ret
0x00000000000e8485 : pop rsp ; ret
0x00000000000efcc3 : pop rsp ; ret
0x00000000000efcec : pop rsp ; ret
0x00000000000f5d6f : pop rsp ; ret
0x00000000000f6a13 : pop rsp ; ret
0x00000000000f6e76 : pop rsp ; ret
0x00000000000f6ec1 : pop rsp ; ret
0x00000000000f713d : pop rsp ; ret
0x00000000000f71b6 : pop rsp ; ret
0x00000000000f8233 : pop rsp ; ret
0x00000000000faef2 : pop rsp ; ret
0x00000000000fb7cc : pop rsp ; ret
0x00000000000fb830 : pop rsp ; ret
0x00000000000fc43a : pop rsp ; ret
0x00000000000fc459 : pop rsp ; ret
0x00000000000fc479 : pop rsp ; ret
0x00000000000fc8f2 : pop rsp ; ret
0x00000000000fc949 : pop rsp ; ret
0x00000000000fcb4f : pop rsp ; ret
0x00000000000fcdef : pop rsp ; ret
0x00000000000fce0d : pop rsp ; ret
0x00000000000fced1 : pop rsp ; ret
0x00000000000fcf03 : pop rsp ; ret
0x00000000000fd554 : pop rsp ; ret
0x00000000000ff439 : pop rsp ; ret
0x00000000000ff5c1 : pop rsp ; ret
0x00000000001015e7 : pop rsp ; ret
0x0000000000101995 : pop rsp ; ret
0x00000000001019d1 : pop rsp ; ret
0x0000000000101f3f : pop rsp ; ret
0x0000000000101f73 : pop rsp ; ret
0x000000000010314f : pop rsp ; ret
0x000000000010315e : pop rsp ; ret
0x0000000000104c34 : pop rsp ; ret
0x000000000010548e : pop rsp ; ret
0x000000000010864a : pop rsp ; ret
0x000000000010c9a2 : pop rsp ; ret
0x000000000010c9de : pop rsp ; ret
0x000000000010ebc7 : pop rsp ; ret
0x000000000010ec08 : pop rsp ; ret
0x0000000000112e8c : pop rsp ; ret
0x000000000011532d : pop rsp ; ret
0x0000000000115737 : pop rsp ; ret
0x0000000000115980 : pop rsp ; ret
0x0000000000116a16 : pop rsp ; ret
0x0000000000116a6b : pop rsp ; ret
0x0000000000116d53 : pop rsp ; ret
0x0000000000116d9c : pop rsp ; ret
0x0000000000117f16 : pop rsp ; ret
0x0000000000117f6b : pop rsp ; ret
0x0000000000118253 : pop rsp ; ret
0x000000000011829c : pop rsp ; ret
0x00000000001192bd : pop rsp ; ret
0x00000000001192f0 : pop rsp ; ret
0x0000000000119e1c : pop rsp ; ret
0x000000000011d343 : pop rsp ; ret
0x000000000011d3ca : pop rsp ; ret
0x000000000011d3f2 : pop rsp ; ret
0x0000000000121a40 : pop rsp ; ret
0x0000000000121a71 : pop rsp ; ret
0x0000000000121e14 : pop rsp ; ret
0x0000000000121e3d : pop rsp ; ret
0x0000000000121e78 : pop rsp ; ret
0x0000000000126973 : pop rsp ; ret
0x0000000000127ab9 : pop rsp ; ret
0x0000000000127af9 : pop rsp ; ret
0x0000000000127af9 : pop rsp ; ret
0x0000000000128a58 : pop rsp ; ret
0x0000000000128a78 : pop rsp ; ret
0x000000000012ccbb : pop rsp ; ret
0x000000000012cd24 : pop rsp ; ret
0x000000000012da05 : pop rsp ; ret
0x000000000012e1ac : pop rsp ; ret
0x000000000012e1c5 : pop rsp ; ret
0x000000000012e707 : pop rsp ; ret
0x000000000012e728 : pop rsp ; ret
0x000000000012e8bd : pop rsp ; ret
0x000000000012ec95 : pop rsp ; ret
0x000000000012eddd : pop rsp ; ret
0x00000000001330a6 : pop rsp ; ret
0x00000000001330d9 : pop rsp ; ret
0x00000000001338fd : pop rsp ; ret
0x00000000001339ca : pop rsp ; ret
0x0000000000133ae5 : pop rsp ; ret
0x0000000000133b71 : pop rsp ; ret
0x0000000000137678 : pop rsp ; ret
0x00000000001376c1 : pop rsp ; ret
0x0000000000137ccf : pop rsp ; ret
0x0000000000137cf3 : pop rsp ; ret
0x00000000001386f6 : pop rsp ; ret
0x0000000000139206 : pop rsp ; ret
0x0000000000139220 : pop rsp ; ret
0x000000000013b329 : pop rsp ; ret
0x000000000013bfa2 : pop rsp ; ret
0x000000000013bfc0 : pop rsp ; ret
0x000000000013bfe7 : pop rsp ; ret
0x000000000013c21f : pop rsp ; ret
0x0000000000140e06 : pop rsp ; ret
0x0000000000140e66 : pop rsp ; ret
0x000000000014484c : pop rsp ; ret
0x00000000001448b1 : pop rsp ; ret
0x0000000000144921 : pop rsp ; ret
0x0000000000144991 : pop rsp ; ret
0x0000000000144a01 : pop rsp ; ret
0x0000000000144a6c : pop rsp ; ret
0x0000000000144ad6 : pop rsp ; ret
0x0000000000144b3c : pop rsp ; ret
0x0000000000144b9c : pop rsp ; ret
0x0000000000144c06 : pop rsp ; ret
0x0000000000144c71 : pop rsp ; ret
0x0000000000144cdc : pop rsp ; ret
0x00000000001740f2 : pop rsp ; ret
0x00000000001747f3 : pop rsp ; ret
0x000000000000318d : pop rsp ; ret 0x52c0
0x0000000000194f11 : pop rsp ; sti ; call rax
0x000000000019e594 : pop rsp ; sub al, byte ptr [rax] ; add al, bh ; jl 0x19e58b ; jmp rsp
0x00000000001aef94 : pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a58bd : popfq ; add byte ptr [rax], al ; add esi, ebp ; call qword ptr [rsi]
0x00000000001972f5 : popfq ; add byte ptr [rax], al ; and al, 0x44 ; jmp 0x197301
0x00000000001999ad : popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x00000000001ae37e : popfq ; add ecx, dword ptr [rdx] ; ret
0x000000000019644d : popfq ; cld ; call qword ptr [rdx]
0x00000000001963cd : popfq ; cld ; jmp qword ptr [rsi]
0x000000000019658d : popfq ; cld ; jmp rax
0x00000000000e3375 : popfq ; or al, 0 ; add al, ch ; ret 0xf4a8
0x00000000000e90b5 : popfq ; ret
0x0000000000173607 : popfq ; ret 0xffea
0x0000000000148a20 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000104907 : popfq ; scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000005a7b3 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000015b342 : psllq mm1, qword ptr [r15] ; jg 0x15b35d ; ret
0x000000000015de12 : psllq mm1, qword ptr [r15] ; jg 0x15de2d ; ret
0x0000000000160932 : psllq mm1, qword ptr [r15] ; jg 0x16094d ; ret
0x000000000015b343 : psllq mm1, qword ptr [rdi] ; jg 0x15b35c ; ret
0x000000000015de13 : psllq mm1, qword ptr [rdi] ; jg 0x15de2c ; ret
0x0000000000160933 : psllq mm1, qword ptr [rdi] ; jg 0x16094c ; ret
0x00000000000a5e66 : psllq mm1, qword ptr [rdi] ; jg 0xa5e7a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5e65 : psllq mm1, qword ptr [rdi] ; jg 0xa5e7b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ec7 : psllq mm1, qword ptr [rdi] ; jg 0xa5edc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6b36 : psllq mm1, qword ptr [rdi] ; jg 0xa6b4a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b35 : psllq mm1, qword ptr [rdi] ; jg 0xa6b4b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b97 : psllq mm1, qword ptr [rdi] ; jg 0xa6bac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8f46 : psllq mm1, qword ptr [rdi] ; jg 0xa8f5a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8f45 : psllq mm1, qword ptr [rdi] ; jg 0xa8f5b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8fa7 : psllq mm1, qword ptr [rdi] ; jg 0xa8fbc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9a16 : psllq mm1, qword ptr [rdi] ; jg 0xa9a2a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a15 : psllq mm1, qword ptr [rdi] ; jg 0xa9a2b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a77 : psllq mm1, qword ptr [rdi] ; jg 0xa9a8c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bf21c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x00000000000ad5c7 : push -0x38b6ffcf ; ret 0xffff
0x0000000000002c01 : push -0x7329150 ; ret
0x0000000000111924 : push -0x74fff86c ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000f5db4 : push -0x76000003 ; ret 0xcb8
0x000000000004b15c : push -0x76000005 ; ret 0x8941
0x000000000005c896 : push -0x7c000006 ; ret 0x8908
0x000000000005ca10 : push -0x7c000006 ; ret 0x8908
0x000000000005cbfe : push -0x7c000006 ; ret 0x8908
0x000000000005cdb4 : push -0x7c000006 ; ret 0x8908
0x000000000005cfaf : push -0x7c000006 ; ret 0x8908
0x000000000005d56d : push -0x7c000006 ; ret 0x8908
0x000000000005ed5d : push -0x7c000006 ; ret 0x8908
0x000000000005fa45 : push -0x7c000006 ; ret 0x8908
0x000000000005fbae : push -0x7c000006 ; ret 0x8908
0x000000000005fd72 : push -0x7c000006 ; ret 0x8908
0x0000000000060827 : push -0x7c000006 ; ret 0x8908
0x0000000000060bf0 : push -0x7c000006 ; ret 0x8908
0x0000000000060ccd : push -0x7c000006 ; ret 0x8908
0x000000000006186b : push -0x7c000006 ; ret 0x8908
0x000000000006294f : push -0x7c000006 ; ret 0x8908
0x0000000000062b92 : push -0x7c000006 ; ret 0x8908
0x000000000018875c : push -0x7d ; call qword ptr [rdx]
0x0000000000116893 : push -0x7eb7000d ; ret
0x0000000000170974 : push -0x9ffffff ; ret 0x7501
0x000000000002057f : push -0xcfffff7 ; ret
0x00000000000ac567 : push -0xfb872b8 ; ret
0x0000000000096e3b : push -1 ; ja 0x96e21 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019613d : push -4 ; jmp rax
0x000000000012c4aa : push 0 ; push 0x19 ; call qword ptr [rax]
0x0000000000045f8f : push 0x11b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000004665e : push 0x13b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000012c4ac : push 0x19 ; call qword ptr [rax]
0x00000000000fa3d8 : push 0x244c8903 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00000000000e10bc : push 0x2494b60f ; ret
0x0000000000081862 : push 0x25 ; xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x000000000005633c : push 0x39fffffb ; fmul dword ptr [rdi] ; ret
0x00000000001ba33a : push 0x41380e0a ; ret
0x00000000001ba339 : push 0x41380e0a ; ret
0x0000000000199005 : push 0x44740001 ; cmc ; jmp rsp
0x0000000000085c7c : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000000e8a73 : push 0x5c415d5b ; pop r13 ; ret
0x000000000012c25a : push 0x5c415d5b ; pop r13 ; ret
0x0000000000196139 : push 0x6a60fffc ; cld ; jmp rax
0x0000000000185862 : push 0x6e ; ja 0x1857ed ; ret 0x48f
0x0000000000134fce : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000a68c2 : push 5 ; add byte ptr [rax], al ; ret
0x00000000000504c1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000194e8f : push qword ptr [rax + 0x1e] ; sti ; call qword ptr [rax]
0x0000000000194eaf : push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x000000000019596f : push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x0000000000195e5b : push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x0000000000196353 : push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x00000000001950bf : push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; jmp rax
0x0000000000195bc3 : push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000018957f : push qword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rsi]
0x00000000001959bf : push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000194f4b : push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x000000000018957b : push qword ptr [rax + 0x70fff452] ; push rdx ; hlt ; jmp qword ptr [rsi]
0x0000000000194e2f : push qword ptr [rax + 6] ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x000000000019aa3b : push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x0000000000187dfb : push qword ptr [rax - 0x15] ; int1 ; jmp qword ptr [rax - 0x2f000e15]
0x0000000000187fd7 : push qword ptr [rax - 0x1f000e00] ; add dl, dh ; call qword ptr [rax]
0x0000000000187fd6 : push qword ptr [rax - 0x1f000e00] ; add dl, dh ; call qword ptr [rax]
0x0000000000195313 : push qword ptr [rax - 0x28] ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001952af : push qword ptr [rax - 0x29] ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x000000000019532f : push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000018808b : push qword ptr [rax - 0x3f000dfc] ; add al, 0xf2 ; call rax
0x000000000018808a : push qword ptr [rax - 0x3f000dfc] ; add al, 0xf2 ; call rax
0x0000000000188003 : push qword ptr [rax - 0x3f000dff] ; add edx, esi ; jmp rax
0x0000000000188002 : push qword ptr [rax - 0x3f000dff] ; add edx, esi ; jmp rax
0x0000000000187eb7 : push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187e43 : push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000187bf3 : push qword ptr [rax - 0x3f000e92] ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000196397 : push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000196583 : push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000060dbb : push qword ptr [rax - 0x77] ; ret
0x0000000000195e8b : push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x000000000019552b : push qword ptr [rax - 0xf] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000019557f : push qword ptr [rax - 8] ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000194e6f : push qword ptr [rax] ; adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000001954f3 : push qword ptr [rax] ; add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000001954db : push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x0000000000194e1f : push qword ptr [rax] ; add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000194ecf : push qword ptr [rax] ; cmp bh, bl ; call qword ptr [rax]
0x00000000001952b3 : push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000187e0b : push qword ptr [rax] ; in al, dx ; int1 ; jmp rax
0x00000000000a56cf : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a590a : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a59bd : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001955af : push qword ptr [rax] ; sub ah, bh ; push rax ; sub esp, edi ; call rax
0x0000000000194ea7 : push qword ptr [rax] ; sub bl, bh ; call rax
0x0000000000195637 : push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x00000000001952cf : push qword ptr [rax] ; xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x00000000001722f8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00000000001722f7 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000007469b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000007ba4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000072b65 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000001429a0 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000072b0d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000c89ae : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000048b7e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000011fd82 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x00000000001287bb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017427c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000484c6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bfd1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000115b72 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00000000000cc295 : push qword ptr [rbx + 0x31] ; ret
0x00000000000cc2f5 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f7045 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f7265 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f72c5 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f78f5 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f7a45 : push qword ptr [rbx + 0x31] ; ret
0x00000000000fb735 : push qword ptr [rbx + 0x31] ; ret
0x00000000000fcf85 : push qword ptr [rbx + 0x31] ; ret
0x00000000000fcfe5 : push qword ptr [rbx + 0x31] ; ret
0x00000000000fd775 : push qword ptr [rbx + 0x31] ; ret
0x00000000000fd805 : push qword ptr [rbx + 0x31] ; ret
0x00000000001017b5 : push qword ptr [rbx + 0x31] ; ret
0x0000000000107f95 : push qword ptr [rbx + 0x31] ; ret
0x00000000001080a5 : push qword ptr [rbx + 0x31] ; ret
0x0000000000108135 : push qword ptr [rbx + 0x31] ; ret
0x0000000000108375 : push qword ptr [rbx + 0x31] ; ret
0x0000000000108495 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f5a78 : push qword ptr [rbx + 0x34] ; ret
0x00000000000f5ad8 : push qword ptr [rbx + 0x34] ; ret
0x00000000000fc218 : push qword ptr [rbx + 0x34] ; ret
0x00000000000fd5b8 : push qword ptr [rbx + 0x34] ; ret
0x00000000001079f8 : push qword ptr [rbx + 0x34] ; ret
0x0000000000107cf8 : push qword ptr [rbx + 0x34] ; ret
0x0000000000107d88 : push qword ptr [rbx + 0x34] ; ret
0x0000000000107e48 : push qword ptr [rbx + 0x34] ; ret
0x0000000000108318 : push qword ptr [rbx + 0x34] ; ret
0x00000000001084f8 : push qword ptr [rbx + 0x34] ; ret
0x0000000000108b38 : push qword ptr [rbx + 0x34] ; ret
0x0000000000108b98 : push qword ptr [rbx + 0x34] ; ret
0x000000000003576c : push qword ptr [rbx + 1] ; ret
0x0000000000035e2c : push qword ptr [rbx + 1] ; ret
0x000000000006b36c : push qword ptr [rbx + 1] ; ret
0x000000000006b39f : push qword ptr [rbx + 1] ; ret
0x00000000000bc51c : push qword ptr [rbx + 1] ; ret
0x00000000000bf60c : push qword ptr [rbx + 1] ; ret
0x00000000000bf63c : push qword ptr [rbx + 1] ; ret
0x00000000000cbf3c : push qword ptr [rbx + 1] ; ret
0x00000000000cc12f : push qword ptr [rbx + 1] ; ret
0x00000000000cc20c : push qword ptr [rbx + 1] ; ret
0x00000000000cc2c5 : push qword ptr [rbx + 1] ; ret
0x00000000000cc325 : push qword ptr [rbx + 1] ; ret
0x00000000000cc6f6 : push qword ptr [rbx + 1] ; ret
0x00000000000cc77c : push qword ptr [rbx + 1] ; ret
0x00000000000cd28c : push qword ptr [rbx + 1] ; ret
0x00000000000cd42c : push qword ptr [rbx + 1] ; ret
0x00000000000cd45c : push qword ptr [rbx + 1] ; ret
0x00000000000cd4bc : push qword ptr [rbx + 1] ; ret
0x00000000000cd4ec : push qword ptr [rbx + 1] ; ret
0x00000000000cd51c : push qword ptr [rbx + 1] ; ret
0x00000000000cd54c : push qword ptr [rbx + 1] ; ret
0x00000000000ea76c : push qword ptr [rbx + 1] ; ret
0x00000000000ea79c : push qword ptr [rbx + 1] ; ret
0x00000000000ea7cc : push qword ptr [rbx + 1] ; ret
0x00000000000ea7fc : push qword ptr [rbx + 1] ; ret
0x00000000000ea82c : push qword ptr [rbx + 1] ; ret
0x00000000000ea85c : push qword ptr [rbx + 1] ; ret
0x00000000000ea88c : push qword ptr [rbx + 1] ; ret
0x00000000000ea8bc : push qword ptr [rbx + 1] ; ret
0x00000000000f5aab : push qword ptr [rbx + 1] ; ret
0x00000000000f5b0b : push qword ptr [rbx + 1] ; ret
0x00000000000f6b4c : push qword ptr [rbx + 1] ; ret
0x00000000000f6dec : push qword ptr [rbx + 1] ; ret
0x00000000000f6e1c : push qword ptr [rbx + 1] ; ret
0x00000000000f6eec : push qword ptr [rbx + 1] ; ret
0x00000000000f6f1c : push qword ptr [rbx + 1] ; ret
0x00000000000f6fdc : push qword ptr [rbx + 1] ; ret
0x00000000000f700c : push qword ptr [rbx + 1] ; ret
0x00000000000f7075 : push qword ptr [rbx + 1] ; ret
0x00000000000f7295 : push qword ptr [rbx + 1] ; ret
0x00000000000f72f5 : push qword ptr [rbx + 1] ; ret
0x00000000000f731c : push qword ptr [rbx + 1] ; ret
0x00000000000f77ac : push qword ptr [rbx + 1] ; ret
0x00000000000f7925 : push qword ptr [rbx + 1] ; ret
0x00000000000f794c : push qword ptr [rbx + 1] ; ret
0x00000000000f797c : push qword ptr [rbx + 1] ; ret
0x00000000000f79ac : push qword ptr [rbx + 1] ; ret
0x00000000000f79dc : push qword ptr [rbx + 1] ; ret
0x00000000000f7a0c : push qword ptr [rbx + 1] ; ret
0x00000000000f7a75 : push qword ptr [rbx + 1] ; ret
0x00000000000f7a75 : push qword ptr [rbx + 1] ; ret
0x00000000000f7a9c : push qword ptr [rbx + 1] ; ret
0x00000000000f7a9c : push qword ptr [rbx + 1] ; ret
0x00000000000f7acc : push qword ptr [rbx + 1] ; ret
0x00000000000f7acc : push qword ptr [rbx + 1] ; ret
0x00000000000f830c : push qword ptr [rbx + 1] ; ret
0x00000000000f833c : push qword ptr [rbx + 1] ; ret
0x00000000000f836c : push qword ptr [rbx + 1] ; ret
0x00000000000f839f : push qword ptr [rbx + 1] ; ret
0x00000000000f897c : push qword ptr [rbx + 1] ; ret
0x00000000000f89af : push qword ptr [rbx + 1] ; ret
0x00000000000f89dc : push qword ptr [rbx + 1] ; ret
0x00000000000f8a0c : push qword ptr [rbx + 1] ; ret
0x00000000000f8a3c : push qword ptr [rbx + 1] ; ret
0x00000000000f8a6f : push qword ptr [rbx + 1] ; ret
0x00000000000f8a9c : push qword ptr [rbx + 1] ; ret
0x00000000000f8acc : push qword ptr [rbx + 1] ; ret
0x00000000000f8afc : push qword ptr [rbx + 1] ; ret
0x00000000000fb765 : push qword ptr [rbx + 1] ; ret
0x00000000000fba9f : push qword ptr [rbx + 1] ; ret
0x00000000000fc24b : push qword ptr [rbx + 1] ; ret
0x00000000000fc96c : push qword ptr [rbx + 1] ; ret
0x00000000000fc99c : push qword ptr [rbx + 1] ; ret
0x00000000000fc9cc : push qword ptr [rbx + 1] ; ret
0x00000000000fcd6c : push qword ptr [rbx + 1] ; ret
0x00000000000fcf4c : push qword ptr [rbx + 1] ; ret
0x00000000000fcfb5 : push qword ptr [rbx + 1] ; ret
0x00000000000fd015 : push qword ptr [rbx + 1] ; ret
0x00000000000fd4dc : push qword ptr [rbx + 1] ; ret
0x00000000000fd57c : push qword ptr [rbx + 1] ; ret
0x00000000000fd5eb : push qword ptr [rbx + 1] ; ret
0x00000000000fd70c : push qword ptr [rbx + 1] ; ret
0x00000000000fd73c : push qword ptr [rbx + 1] ; ret
0x00000000000fd7a5 : push qword ptr [rbx + 1] ; ret
0x00000000000fd7cc : push qword ptr [rbx + 1] ; ret
0x00000000000fd835 : push qword ptr [rbx + 1] ; ret
0x00000000000fd85c : push qword ptr [rbx + 1] ; ret
0x00000000000fdbcc : push qword ptr [rbx + 1] ; ret
0x00000000000fdbfc : push qword ptr [rbx + 1] ; ret
0x00000000000fdc2c : push qword ptr [rbx + 1] ; ret
0x00000000000ff17c : push qword ptr [rbx + 1] ; ret
0x00000000000ff1ac : push qword ptr [rbx + 1] ; ret
0x00000000001014de : push qword ptr [rbx + 1] ; ret
0x000000000010174c : push qword ptr [rbx + 1] ; ret
0x000000000010177c : push qword ptr [rbx + 1] ; ret
0x00000000001017e5 : push qword ptr [rbx + 1] ; ret
0x000000000010180c : push qword ptr [rbx + 1] ; ret
0x000000000010183c : push qword ptr [rbx + 1] ; ret
0x000000000010186f : push qword ptr [rbx + 1] ; ret
0x000000000010189c : push qword ptr [rbx + 1] ; ret
0x00000000001018cc : push qword ptr [rbx + 1] ; ret
0x00000000001018fc : push qword ptr [rbx + 1] ; ret
0x000000000010192c : push qword ptr [rbx + 1] ; ret
0x0000000000105fef : push qword ptr [rbx + 1] ; ret
0x000000000010601c : push qword ptr [rbx + 1] ; ret
0x000000000010604c : push qword ptr [rbx + 1] ; ret
0x000000000010607f : push qword ptr [rbx + 1] ; ret
0x00000000001060af : push qword ptr [rbx + 1] ; ret
0x00000000001060dc : push qword ptr [rbx + 1] ; ret
0x000000000010610f : push qword ptr [rbx + 1] ; ret
0x000000000010613c : push qword ptr [rbx + 1] ; ret
0x000000000010616c : push qword ptr [rbx + 1] ; ret
0x000000000010619f : push qword ptr [rbx + 1] ; ret
0x00000000001061cc : push qword ptr [rbx + 1] ; ret
0x00000000001061ff : push qword ptr [rbx + 1] ; ret
0x00000000001072ec : push qword ptr [rbx + 1] ; ret
0x000000000010731c : push qword ptr [rbx + 1] ; ret
0x000000000010744c : push qword ptr [rbx + 1] ; ret
0x000000000010748c : push qword ptr [rbx + 1] ; ret
0x00000000001074bc : push qword ptr [rbx + 1] ; ret
0x00000000001074ec : push qword ptr [rbx + 1] ; ret
0x000000000010751c : push qword ptr [rbx + 1] ; ret
0x000000000010773f : push qword ptr [rbx + 1] ; ret
0x000000000010776c : push qword ptr [rbx + 1] ; ret
0x000000000010779c : push qword ptr [rbx + 1] ; ret
0x00000000001077cc : push qword ptr [rbx + 1] ; ret
0x000000000010780f : push qword ptr [rbx + 1] ; ret
0x000000000010783c : push qword ptr [rbx + 1] ; ret
0x000000000010786c : push qword ptr [rbx + 1] ; ret
0x000000000010789c : push qword ptr [rbx + 1] ; ret
0x00000000001078cc : push qword ptr [rbx + 1] ; ret
0x00000000001078fc : push qword ptr [rbx + 1] ; ret
0x000000000010792c : push qword ptr [rbx + 1] ; ret
0x000000000010795c : push qword ptr [rbx + 1] ; ret
0x000000000010798c : push qword ptr [rbx + 1] ; ret
0x00000000001079bf : push qword ptr [rbx + 1] ; ret
0x0000000000107a2b : push qword ptr [rbx + 1] ; ret
0x0000000000107a4c : push qword ptr [rbx + 1] ; ret
0x0000000000107a7f : push qword ptr [rbx + 1] ; ret
0x0000000000107a7f : push qword ptr [rbx + 1] ; ret
0x0000000000107aac : push qword ptr [rbx + 1] ; ret
0x0000000000107aac : push qword ptr [rbx + 1] ; ret
0x0000000000107adc : push qword ptr [rbx + 1] ; ret
0x0000000000107adc : push qword ptr [rbx + 1] ; ret
0x0000000000107b0c : push qword ptr [rbx + 1] ; ret
0x0000000000107b0c : push qword ptr [rbx + 1] ; ret
0x0000000000107b3c : push qword ptr [rbx + 1] ; ret
0x0000000000107b3c : push qword ptr [rbx + 1] ; ret
0x0000000000107b6c : push qword ptr [rbx + 1] ; ret
0x0000000000107b6c : push qword ptr [rbx + 1] ; ret
0x0000000000107b9f : push qword ptr [rbx + 1] ; ret
0x0000000000107bcf : push qword ptr [rbx + 1] ; ret
0x0000000000107bfc : push qword ptr [rbx + 1] ; ret
0x0000000000107c2c : push qword ptr [rbx + 1] ; ret
0x0000000000107c5f : push qword ptr [rbx + 1] ; ret
0x0000000000107c8f : push qword ptr [rbx + 1] ; ret
0x0000000000107cbf : push qword ptr [rbx + 1] ; ret
0x0000000000107d2b : push qword ptr [rbx + 1] ; ret
0x0000000000107d4c : push qword ptr [rbx + 1] ; ret
0x0000000000107dbb : push qword ptr [rbx + 1] ; ret
0x0000000000107ddc : push qword ptr [rbx + 1] ; ret
0x0000000000107e0c : push qword ptr [rbx + 1] ; ret
0x0000000000107e7b : push qword ptr [rbx + 1] ; ret
0x0000000000107e9c : push qword ptr [rbx + 1] ; ret
0x0000000000107ecf : push qword ptr [rbx + 1] ; ret
0x0000000000107efc : push qword ptr [rbx + 1] ; ret
0x0000000000107f2c : push qword ptr [rbx + 1] ; ret
0x0000000000107f5f : push qword ptr [rbx + 1] ; ret
0x0000000000107fc5 : push qword ptr [rbx + 1] ; ret
0x0000000000107fec : push qword ptr [rbx + 1] ; ret
0x000000000010801f : push qword ptr [rbx + 1] ; ret
0x000000000010804f : push qword ptr [rbx + 1] ; ret
0x00000000001080d5 : push qword ptr [rbx + 1] ; ret
0x00000000001080fc : push qword ptr [rbx + 1] ; ret
0x0000000000108165 : push qword ptr [rbx + 1] ; ret
0x000000000010818c : push qword ptr [rbx + 1] ; ret
0x00000000001081bc : push qword ptr [rbx + 1] ; ret
0x00000000001081ef : push qword ptr [rbx + 1] ; ret
0x000000000010821c : push qword ptr [rbx + 1] ; ret
0x000000000010834b : push qword ptr [rbx + 1] ; ret
0x00000000001083a5 : push qword ptr [rbx + 1] ; ret
0x00000000001084c5 : push qword ptr [rbx + 1] ; ret
0x000000000010852b : push qword ptr [rbx + 1] ; ret
0x000000000010854f : push qword ptr [rbx + 1] ; ret
0x000000000010857c : push qword ptr [rbx + 1] ; ret
0x00000000001085ac : push qword ptr [rbx + 1] ; ret
0x00000000001085df : push qword ptr [rbx + 1] ; ret
0x0000000000108b6b : push qword ptr [rbx + 1] ; ret
0x0000000000108bcb : push qword ptr [rbx + 1] ; ret
0x0000000000108bec : push qword ptr [rbx + 1] ; ret
0x0000000000108c1c : push qword ptr [rbx + 1] ; ret
0x0000000000108c4c : push qword ptr [rbx + 1] ; ret
0x0000000000108c7c : push qword ptr [rbx + 1] ; ret
0x0000000000108caf : push qword ptr [rbx + 1] ; ret
0x0000000000108cdf : push qword ptr [rbx + 1] ; ret
0x0000000000108d0c : push qword ptr [rbx + 1] ; ret
0x0000000000108d3c : push qword ptr [rbx + 1] ; ret
0x0000000000108d6c : push qword ptr [rbx + 1] ; ret
0x0000000000108d9c : push qword ptr [rbx + 1] ; ret
0x000000000014069f : push qword ptr [rbx + 1] ; ret
0x00000000001406ef : push qword ptr [rbx + 1] ; ret
0x00000000000f5aab : push qword ptr [rbx + 1] ; ret
0x0000000000047b26 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x0000000000072cbc : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000072d00 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000007bf79 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000195df7 : push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000073cde : push qword ptr [rbx + rcx - 0x18] ; ret 0xfabb
0x0000000000198ed3 : push qword ptr [rcx + 0x14740001] ; cmc ; call rsp
0x00000000001978f3 : push qword ptr [rcx + rcx*8 - 0xfec0000] ; in eax, dx ; call rsp
0x000000000019b073 : push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x00000000001975c3 : push qword ptr [rcx + rsi*4 - 0x7f9c0000] ; in eax, dx ; jmp rsp
0x0000000000074b81 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000faeec : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000faeeb : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000faeea : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000cf38b : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x0000000000075f78 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000076e68 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000504c2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000b7c15 : push qword ptr [rcx] ; test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x00000000001158dc : push qword ptr [rdi + 0x1b] ; ret
0x000000000003542d : push qword ptr [rdi + 0x20] ; ret
0x00000000000f7648 : push qword ptr [rdi + 0x35] ; ret
0x00000000000f76ec : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fc7a3 : push qword ptr [rdi + 0xa] ; ret
0x00000000001056c3 : push qword ptr [rdi + 0xa] ; ret
0x0000000000107383 : push qword ptr [rdi + 0xa] ; ret
0x00000000000f6ce2 : push qword ptr [rdi + 0xb] ; ret
0x0000000000108262 : push qword ptr [rdi + 0xb] ; ret
0x00000000001083e2 : push qword ptr [rdi + 0xb] ; ret
0x00000000000357a1 : push qword ptr [rdi + 0xc] ; ret
0x00000000001076b1 : push qword ptr [rdi + 0xc] ; ret
0x00000000001175a1 : push qword ptr [rdi + 0xc] ; ret
0x0000000000117651 : push qword ptr [rdi + 0xc] ; ret
0x00000000000cd58c : push qword ptr [rdi + 1] ; ret
0x00000000000cd60c : push qword ptr [rdi + 1] ; ret
0x000000000010887c : push qword ptr [rdi + 1] ; ret
0x00000000000357eb : push qword ptr [rdi + 2] ; ret
0x00000000000fbb2b : push qword ptr [rdi + 2] ; ret
0x00000000000fd29b : push qword ptr [rdi + 2] ; ret
0x00000000000fd34b : push qword ptr [rdi + 2] ; ret
0x00000000000fd89b : push qword ptr [rdi + 2] ; ret
0x00000000000f6bea : push qword ptr [rdi + 3] ; ret
0x00000000000f6c8a : push qword ptr [rdi + 3] ; ret
0x00000000000fd1aa : push qword ptr [rdi + 3] ; ret
0x00000000000fd21a : push qword ptr [rdi + 3] ; ret
0x00000000000f6c39 : push qword ptr [rdi + 4] ; ret
0x00000000000cc170 : push qword ptr [rdi + 5] ; ret
0x00000000000cd2c8 : push qword ptr [rdi + 5] ; ret
0x00000000000cd338 : push qword ptr [rdi + 5] ; ret
0x00000000000ff050 : push qword ptr [rdi + 5] ; ret
0x00000000000ff0f0 : push qword ptr [rdi + 5] ; ret
0x00000000000cc07f : push qword ptr [rdi + 6] ; ret
0x00000000000f6d9f : push qword ptr [rdi + 6] ; ret
0x00000000000fbad7 : push qword ptr [rdi + 6] ; ret
0x00000000000fc27f : push qword ptr [rdi + 6] ; ret
0x00000000000fd04f : push qword ptr [rdi + 6] ; ret
0x00000000000fd0ff : push qword ptr [rdi + 6] ; ret
0x0000000000107677 : push qword ptr [rdi + 6] ; ret
0x000000000011582f : push qword ptr [rdi + 6] ; ret
0x00000000000c9656 : push qword ptr [rdi + 7] ; ret
0x00000000000f6d46 : push qword ptr [rdi + 7] ; ret
0x00000000000f6f7e : push qword ptr [rdi + 7] ; ret
0x000000000010891e : push qword ptr [rdi + 7] ; ret
0x00000000001089ce : push qword ptr [rdi + 7] ; ret
0x0000000000035735 : push qword ptr [rdi + 8] ; ret
0x0000000000073025 : push qword ptr [rdi + 8] ; ret
0x00000000000cbfe5 : push qword ptr [rdi + 8] ; ret
0x00000000001075c5 : push qword ptr [rdi + 8] ; ret
0x00000000000c83dc : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00000000000bc43c : push qword ptr [rdi + 9] ; ret
0x00000000000fefbc : push qword ptr [rdi + 9] ; ret
0x00000000000ff144 : push qword ptr [rdi + 9] ; ret
0x000000000007b596 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000000e84f6 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000134836 : push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x0000000000197fab : push qword ptr [rdi + rsi*8 + 0x1f440000] ; out dx, eax ; jmp rsp
0x0000000000096e3c : push qword ptr [rdi - 0x27] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001158b4 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000188b23 : push qword ptr [rdi] ; mov dh, 0xf3 ; dec dword ptr [rcx - 0x56] ; call qword ptr [rax]
0x0000000000188b22 : push qword ptr [rdi] ; mov dh, 0xf3 ; dec dword ptr [rcx - 0x56] ; call qword ptr [rax]
0x0000000000195843 : push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x0000000000195d2f : push qword ptr [rdx + 0x42fffc84] ; test ah, bh ; call rdx
0x0000000000196227 : push qword ptr [rdx + 0x42fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rdx
0x00000000001962ef : push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x000000000019ab0b : push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x0000000000198a1b : push qword ptr [rdx + rdi + 0x24040001] ; jmp rsp
0x0000000000198a1a : push qword ptr [rdx + rdi + 0x24040001] ; jmp rsp
0x00000000000ad2ab : push qword ptr [rdx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x0000000000186e1b : push qword ptr [rdx - 0x20] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000019620f : push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x00000000001886bf : push qword ptr [rdx - 0xb000c87] ; mov esi, ebx ; call qword ptr [rdx]
0x00000000001886be : push qword ptr [rdx - 0xb000c87] ; mov esi, ebx ; call qword ptr [rdx]
0x000000000018873f : push qword ptr [rdx - 0xb000c87] ; mov esi, ebx ; call qword ptr [rdx]
0x000000000018873e : push qword ptr [rdx - 0xb000c87] ; mov esi, ebx ; call qword ptr [rdx]
0x000000000019643f : push qword ptr [rdx] ; lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x00000000001890bf : push qword ptr [rip + 0x23fff3db] ; fcomi st(3) ; call qword ptr [rcx]
0x00000000001890be : push qword ptr [rip + 0x23fff3db] ; fcomi st(3) ; call qword ptr [rcx]
0x00000000001961c3 : push qword ptr [rsi + 0x46fffca8] ; test al, 0xfc ; call rsi
0x00000000001099b9 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000186a2b : push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000186a9b : push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000186a97 : push qword ptr [rsi + rbp*2 - 0x13] ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x0000000000187bcb : push qword ptr [rsi + rbp*2] ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000197eab : push qword ptr [rsi + rbp*8 - 0x265c0000] ; out dx, al ; call rsp
0x0000000000195043 : push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x000000000019a683 : push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x000000000019751b : push qword ptr [rsp + rbp*4 + 0x6b040000] ; in eax, dx ; jmp rsp
0x0000000000197723 : push qword ptr [rsp + rdi*4 - 0x506c0000] ; in eax, dx ; call rsp
0x0000000000186d5b : push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000135066 : push r12 ; mov eax, 1 ; ret
0x000000000007b20c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007c95e : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000071c3a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007c891 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012c73d : push rax ; adc dh, dh ; ret 0x7401
0x000000000012c915 : push rax ; adc dh, dh ; ret 0x7401
0x00000000001369e9 : push rax ; adc dh, dh ; ret 0x7401
0x000000000008156d : push rax ; adc dh, dh ; ret 0xf0f
0x00000000001aabe0 : push rax ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000000819e6 : push rax ; add al, ch ; ret
0x00000000001954d8 : push rax ; add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x000000000007b20d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007c95f : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001a0b95 : push rax ; add byte ptr [rax], al ; pop rax ; stosb byte ptr [rdi], al ; jmp 0x1a0ba1
0x0000000000188033 : push rax ; add dh, dl ; call qword ptr [rax]
0x0000000000188032 : push rax ; add dh, dl ; call qword ptr [rax]
0x0000000000077f5c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000077f93 : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001335af : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; cmc ; call 0x1f8a9
0x00000000001b0c05 : push rax ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0c35 : push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0c36 ; jmp qword ptr [rcx]
0x00000000001b0b75 : push rax ; add dword ptr [rax], eax ; js 0x1b0bf0 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b8d : push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b8e ; jmp qword ptr [rcx]
0x000000000002d711 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000009574f : push rax ; add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x000000000018800f : push rax ; add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x000000000018800e : push rax ; add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000188053 : push rax ; add esi, edx ; call qword ptr [rax]
0x0000000000188052 : push rax ; add esi, edx ; call qword ptr [rax]
0x00000000001953d3 : push rax ; add esp, edi ; call rax
0x000000000013bc09 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc79 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bce9 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd59 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b867 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b927 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b9e7 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013baa7 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000141061 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000001b2960 : push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000218e8 : push rax ; call rbx
0x00000000001bb590 : push rax ; clc ; call qword ptr [rbx]
0x0000000000195b91 : push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x0000000000195b51 : push rax ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x000000000004b829 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000004bfb2 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000004c7d4 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000057345 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000006f736 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001b1b10 : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001952bb : push rax ; fdiv st(3), st(0) ; call rax
0x0000000000195300 : push rax ; fdivp st(3) ; jmp qword ptr [rax]
0x00000000001952d3 : push rax ; fdivr st(3) ; call rax
0x0000000000195337 : push rax ; fsincos ; call rax
0x0000000000189108 : push rax ; hlt ; call qword ptr [rax]
0x00000000001891a1 : push rax ; hlt ; call rdi
0x000000000018919d : push rax ; hlt ; dec ebp ; push rax ; hlt ; call rdi
0x00000000001891a5 : push rax ; hlt ; jmp rcx
0x0000000000187e53 : push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000195510 : push rax ; in eax, 0xfb ; call qword ptr [rax - 0x1f000417]
0x00000000001b0f20 : push rax ; jbe 0x1b0f1b ; jmp qword ptr [rcx]
0x000000000019609c : push rax ; jge 0x19609e ; call rax
0x00000000001960a4 : push rax ; jl 0x1960a6 ; call rax
0x00000000001a0a61 : push rax ; jmp 0x1a0a65
0x00000000001960ac : push rax ; jnp 0x1960ae ; call rax
0x00000000001b1210 : push rax ; jnp 0x1b120b ; jmp qword ptr [rcx]
0x00000000001960bc : push rax ; jns 0x1960be ; call rax
0x00000000001960b4 : push rax ; jp 0x1960b6 ; call rax
0x0000000000074fe2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000196164 : push rax ; lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x000000000005f10a : push rax ; loop 0x5f115 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a9
0x0000000000023ace : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000023acd : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000135856 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000135855 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000113326 : push rax ; mov rsi, rdx ; call rax
0x0000000000196393 : push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x000000000007ee42 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000081ef2 : push rax ; or dh, dh ; ret 0x7404
0x0000000000081e65 : push rax ; or dh, dh ; ret 0xf04
0x0000000000081f06 : push rax ; or dh, dh ; ret 0xf04
0x000000000001fe57 : push rax ; or dh, dh ; ret 0xf08
0x00000000001450dc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019d460 : push rax ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a6400 : push rax ; out dx, al ; call qword ptr [rax]
0x000000000013a7e1 : push rax ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000187ec7 : push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x00000000001946b6 : push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000195780 : push rax ; pop rbp ; cld ; jmp rax
0x00000000000acb0e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019658c : push rax ; popfq ; cld ; jmp rax
0x0000000000195b8f : push rax ; push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x00000000001959bb : push rax ; push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000195bcc : push rax ; push rcx ; cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x0000000000187fc7 : push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000023ad0 : push rax ; push rsp ; ret
0x00000000000348fd : push rax ; ret
0x0000000000034c9b : push rax ; ret
0x00000000000091b8 : push rax ; ret 0x13
0x00000000001123cc : push rax ; ret 0xfff1
0x00000000000c0201 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c3194 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000195393 : push rax ; sar ebx, -1 ; ret
0x0000000000194e7f : push rax ; sbb bl, bh ; jmp rax
0x000000000007c886 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000072bda : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001100e2 : push rax ; sbb dh, dh ; ret 0x7508
0x0000000000114a25 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000f5b81 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000187f97 : push rax ; std ; int1 ; call qword ptr [rax]
0x0000000000195657 : push rax ; sub bh, ah ; call rax
0x000000000018b09b : push rax ; sub dl, bh ; jmp rax
0x00000000001956bb : push rax ; sub edi, esp ; jmp rax
0x00000000001955b3 : push rax ; sub esp, edi ; call rax
0x0000000000195634 : push rax ; sub esp, edi ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x00000000001ae240 : push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000195c6c : push rax ; test esp, edi ; jmp rax
0x0000000000195c10 : push rax ; xor al, 0xfc ; call qword ptr [rax + 0x10fffc35]
0x000000000007bfcd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000195bcf : push rax ; xor edi, esp ; call qword ptr [rax]
0x00000000000e2440 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e2465 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x0000000000172b77 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000012ed7c : push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000000f5c52 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5bd4 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000004950f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000f247d : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f2d7a : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f3311 : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f38f8 : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f3cb8 : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000102f91 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000d45fc : push rbp ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000195b71 : push rbp ; cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000195b6d : push rbp ; cld ; call qword ptr [rax]
0x00000000000edcd8 : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x0000000000001cb9 : push rbp ; je 0x1ce7 ; ret
0x00000000000e3007 : push rbp ; jno 0xe300f ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114704 : push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000149b68 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000113ea4 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000114227 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000114400 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000011452f : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000d6eeb : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd6f1d ; or byte ptr [rcx], ch ; ret
0x0000000000099568 : push rbp ; ret
0x000000000009bb85 : push rbp ; ret
0x000000000009d5e9 : push rbp ; ret
0x000000000009bb76 : push rbp ; ret 0x8348
0x000000000009d5da : push rbp ; ret 0x8348
0x000000000009955a : push rbp ; ret 0x8349
0x0000000000105a1a : push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000025de : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x257b ; loop 0x25c6 ; ret 0x23cb
0x00000000001116a8 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000004bccf : push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d581b : push rbp ; test al, 0x89 ; ret
0x0000000000023657 : push rbp ; test al, 0xe8 ; ret 0xffff
0x0000000000113d31 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00000000001159d0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008eb1a : push rbp ; xor rax, rax ; ret
0x00000000000891d1 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000089286 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000b6849 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000105e21 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000db237 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000128be8 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000128dae : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000085f7f : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001b0f1d : push rbx ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0f1e ; jmp qword ptr [rcx]
0x0000000000110a7c : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000195b7d : push rbx ; cld ; call qword ptr [rax]
0x00000000001959c1 : push rbx ; cld ; jmp rax
0x0000000000195bc1 : push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x00000000001959bd : push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x000000000019b2e1 : push rbx ; cli ; call rsp
0x0000000000189ecb : push rbx ; cmc ; call qword ptr [rbx]
0x00000000001b0331 : push rbx ; cmc ; call qword ptr [rdx]
0x0000000000002053 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000e03e6 : push rbx ; cmp cl, ch ; ret
0x00000000000dfee7 : push rbx ; cmp cl, ch ; ret 0xfffe
0x00000000001892c5 : push rbx ; hlt ; call rdi
0x00000000001892c1 : push rbx ; hlt ; dec ebp ; push rbx ; hlt ; call rdi
0x00000000001892c9 : push rbx ; hlt ; jmp rcx
0x000000000002a692 : push rbx ; je 0x2a6a9 ; cmp esi, 3 ; je 0x2a6a9 ; pop rbx ; ret
0x0000000000072ad9 : push rbx ; je 0x72b3d ; pop rbp ; pop r12 ; ret
0x0000000000072b7e : push rbx ; je 0x72be2 ; pop rbp ; pop r12 ; ret
0x00000000000cdbcd : push rbx ; je 0xcdbaa ; mov eax, 1 ; ret
0x00000000000cdbcc : push rbx ; je 0xcdbab ; mov eax, 1 ; ret
0x00000000001a0b19 : push rbx ; jmp 0x1a0b1d
0x00000000001a0b18 : push rbx ; jmp 0x1a0b1e
0x00000000000ac54c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a6f22 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000006ce2a : push rbx ; or al, 0xf6 ; ret 0xf04
0x000000000007b42b : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000007b61d : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003cdc : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000045b69 : push rbx ; or edi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000018781d : push rbx ; out dx, al ; jmp rax
0x000000000002d8a8 : push rbx ; ret
0x0000000000078363 : push rbx ; ret
0x00000000000945ad : push rbx ; ret
0x00000000000945e9 : push rbx ; ret
0x00000000000947d3 : push rbx ; ret
0x00000000000948d2 : push rbx ; ret
0x00000000000bb206 : push rbx ; ret
0x0000000000123c24 : push rbx ; ret
0x0000000000126692 : push rbx ; ret
0x000000000014a95f : push rbx ; ret
0x00000000001742e9 : push rbx ; ret
0x00000000001afd06 : push rbx ; ret
0x00000000000891d5 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000008928a : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000076ba6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001443b3 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1443c9 ; xor eax, eax ; ret
0x00000000001443e3 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1443f9 ; xor eax, eax ; ret
0x0000000000144413 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144429 ; xor eax, eax ; ret
0x000000000007a8a4 : push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000078771 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000184cbc : push rbx ; xchg eax, edx ; jae 0x184c9b ; push rsi ; pop rdx ; je 0x184c90 ; ret 0xacfc
0x000000000004b514 : push rcx ; adc al, 0 ; call 0x777f5
0x0000000000132315 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x0000000000135084 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00000000000b7956 : push rcx ; add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000001b0c7d : push rcx ; add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0c7c : push rcx ; add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0cad : push rcx ; add dword ptr [rax], eax ; jb 0x1b0cae ; jmp qword ptr [rcx]
0x00000000001b0c4d : push rcx ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0cc5 : push rcx ; add dword ptr [rax], eax ; pop rax ; jb 0x1b0cc6 ; jmp qword ptr [rcx]
0x00000000001b0d0d : push rcx ; add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000d6d9e : push rcx ; add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x000000000009ede9 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee68 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000013ab3e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abfe : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013acbe : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad7e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000183f45 : push rcx ; call qword ptr [rsi]
0x0000000000183f44 : push rcx ; call qword ptr [rsi]
0x0000000000195a11 : push rcx ; cld ; call rdx
0x0000000000195a4d : push rcx ; cld ; jmp qword ptr [rdx]
0x0000000000195a0d : push rcx ; cld ; ljmp ptr [rcx + rdx*2] ; cld ; call rdx
0x0000000000195bcd : push rcx ; cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x0000000000194ff4 : push rcx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x0000000000189201 : push rcx ; hlt ; call rsp
0x00000000001891fd : push rcx ; hlt ; dec edx ; push rcx ; hlt ; call rsp
0x00000000001974e1 : push rcx ; in eax, dx ; jmp rsp
0x000000000009fd1d : push rcx ; jl 0x9fd6e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fe84 : push rcx ; jl 0x9fed5 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0470 : push rcx ; jl 0xa04c1 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a05d7 : push rcx ; jl 0xa0628 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0bbd : push rcx ; jl 0xa0c0e ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0d24 : push rcx ; jl 0xa0d75 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000187fc9 : push rcx ; jmp qword ptr [rax]
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x0000000000194fe4 : push rcx ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rcx
0x0000000000194fec : push rcx ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rcx
0x000000000018769d : push rcx ; out dx, al ; jmp rax
0x0000000000187fc5 : push rcx ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000127aeb : push rcx ; ret
0x00000000001bad2e : push rcx ; ret
0x0000000000127bc3 : push rcx ; ret 0x29
0x000000000003d31f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d33f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d35f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d37f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d39f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d3bf : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d3df : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d3ff : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d41f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d43f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d45f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d47b : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d497 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d4b3 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040617 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040637 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040657 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040677 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040697 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000406b7 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000406d7 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000406f7 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040717 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040737 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040757 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040773 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004078f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000407ab : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000434ee : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004350e : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004352e : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004354e : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004356e : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004358e : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000435ae : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000435ce : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000435ee : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004360e : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004362e : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004364a : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000043666 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000043682 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000120692 : push rcx ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000082f23 : push rcx ; sysenter
0x00000000000a9de2 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a8372 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a9f40 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9c18 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009eaa4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a738a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a81a8 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a81ba : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000015b4a9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000015df79 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000160a99 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000009ea14 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e9a4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002da7c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000019b65d : push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b665 : push rdi ; add al, byte ptr [rax] ; ret
0x00000000000a9bea : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a743c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000a827c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000fea4a : push rdi ; add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00000000000a9c48 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000108a9a : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000001ba1a9 : push rdi ; call qword ptr [rdx]
0x00000000001528f8 : push rdi ; clc ; ret
0x000000000015296e : push rdi ; clc ; ret
0x00000000001529a6 : push rdi ; clc ; ret
0x00000000001529ce : push rdi ; clc ; ret
0x00000000001529f6 : push rdi ; clc ; ret
0x0000000000152a0e : push rdi ; clc ; ret
0x0000000000152a26 : push rdi ; clc ; ret
0x00000000001531e2 : push rdi ; clc ; ret
0x000000000015322a : push rdi ; clc ; ret
0x0000000000153268 : push rdi ; clc ; ret
0x00000000001532a4 : push rdi ; clc ; ret
0x00000000001532de : push rdi ; clc ; ret
0x0000000000153316 : push rdi ; clc ; ret
0x000000000015333e : push rdi ; clc ; ret
0x0000000000153366 : push rdi ; clc ; ret
0x000000000015337e : push rdi ; clc ; ret
0x00000000001533e2 : push rdi ; clc ; ret
0x000000000015342a : push rdi ; clc ; ret
0x0000000000153468 : push rdi ; clc ; ret
0x00000000001534a0 : push rdi ; clc ; ret
0x00000000001534de : push rdi ; clc ; ret
0x0000000000153516 : push rdi ; clc ; ret
0x000000000015353e : push rdi ; clc ; ret
0x0000000000153566 : push rdi ; clc ; ret
0x000000000015357e : push rdi ; clc ; ret
0x00000000001535e2 : push rdi ; clc ; ret
0x000000000015362a : push rdi ; clc ; ret
0x0000000000153668 : push rdi ; clc ; ret
0x00000000001536a0 : push rdi ; clc ; ret
0x00000000001536de : push rdi ; clc ; ret
0x0000000000153716 : push rdi ; clc ; ret
0x000000000015373e : push rdi ; clc ; ret
0x0000000000153766 : push rdi ; clc ; ret
0x000000000015377e : push rdi ; clc ; ret
0x00000000001552c8 : push rdi ; clc ; ret
0x000000000015533e : push rdi ; clc ; ret
0x0000000000155376 : push rdi ; clc ; ret
0x000000000015539e : push rdi ; clc ; ret
0x00000000001553c6 : push rdi ; clc ; ret
0x00000000001553de : push rdi ; clc ; ret
0x00000000001553f6 : push rdi ; clc ; ret
0x0000000000155bb2 : push rdi ; clc ; ret
0x0000000000155bfa : push rdi ; clc ; ret
0x0000000000155c38 : push rdi ; clc ; ret
0x0000000000155c74 : push rdi ; clc ; ret
0x0000000000155cae : push rdi ; clc ; ret
0x0000000000155ce6 : push rdi ; clc ; ret
0x0000000000155d0e : push rdi ; clc ; ret
0x0000000000155d36 : push rdi ; clc ; ret
0x0000000000155d4e : push rdi ; clc ; ret
0x0000000000155db2 : push rdi ; clc ; ret
0x0000000000155dfa : push rdi ; clc ; ret
0x0000000000155e38 : push rdi ; clc ; ret
0x0000000000155e70 : push rdi ; clc ; ret
0x0000000000155eae : push rdi ; clc ; ret
0x0000000000155ee6 : push rdi ; clc ; ret
0x0000000000155f0e : push rdi ; clc ; ret
0x0000000000155f36 : push rdi ; clc ; ret
0x0000000000155f4e : push rdi ; clc ; ret
0x0000000000155fb2 : push rdi ; clc ; ret
0x0000000000155ffa : push rdi ; clc ; ret
0x0000000000156038 : push rdi ; clc ; ret
0x0000000000156070 : push rdi ; clc ; ret
0x00000000001560ae : push rdi ; clc ; ret
0x00000000001560e6 : push rdi ; clc ; ret
0x000000000015610e : push rdi ; clc ; ret
0x0000000000156136 : push rdi ; clc ; ret
0x000000000015614e : push rdi ; clc ; ret
0x0000000000157c98 : push rdi ; clc ; ret
0x0000000000157d0e : push rdi ; clc ; ret
0x0000000000157d46 : push rdi ; clc ; ret
0x0000000000157d6e : push rdi ; clc ; ret
0x0000000000157d96 : push rdi ; clc ; ret
0x0000000000157dae : push rdi ; clc ; ret
0x0000000000157dc6 : push rdi ; clc ; ret
0x0000000000158582 : push rdi ; clc ; ret
0x00000000001585ca : push rdi ; clc ; ret
0x0000000000158608 : push rdi ; clc ; ret
0x0000000000158644 : push rdi ; clc ; ret
0x000000000015867e : push rdi ; clc ; ret
0x00000000001586b6 : push rdi ; clc ; ret
0x00000000001586de : push rdi ; clc ; ret
0x0000000000158706 : push rdi ; clc ; ret
0x000000000015871e : push rdi ; clc ; ret
0x0000000000158782 : push rdi ; clc ; ret
0x00000000001587ca : push rdi ; clc ; ret
0x0000000000158808 : push rdi ; clc ; ret
0x0000000000158840 : push rdi ; clc ; ret
0x000000000015887e : push rdi ; clc ; ret
0x00000000001588b6 : push rdi ; clc ; ret
0x00000000001588de : push rdi ; clc ; ret
0x0000000000158906 : push rdi ; clc ; ret
0x000000000015891e : push rdi ; clc ; ret
0x0000000000158982 : push rdi ; clc ; ret
0x00000000001589ca : push rdi ; clc ; ret
0x0000000000158a08 : push rdi ; clc ; ret
0x0000000000158a40 : push rdi ; clc ; ret
0x0000000000158a7e : push rdi ; clc ; ret
0x0000000000158ab6 : push rdi ; clc ; ret
0x0000000000158ade : push rdi ; clc ; ret
0x0000000000158b06 : push rdi ; clc ; ret
0x0000000000158b1e : push rdi ; clc ; ret
0x000000000015af06 : push rdi ; clc ; ret
0x000000000015d9d6 : push rdi ; clc ; ret
0x00000000001604f6 : push rdi ; clc ; ret
0x00000000000038eb : push rdi ; clc ; salc ; jb 0x3971 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000195b61 : push rdi ; cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000195b5d : push rdi ; cld ; call qword ptr [rax]
0x0000000000152a70 : push rdi ; cld ; ret
0x0000000000152ab8 : push rdi ; cld ; ret
0x0000000000152af6 : push rdi ; cld ; ret
0x0000000000152b2e : push rdi ; cld ; ret
0x0000000000152bd4 : push rdi ; cld ; ret
0x0000000000152bec : push rdi ; cld ; ret
0x0000000000152c40 : push rdi ; cld ; ret
0x0000000000152c90 : push rdi ; cld ; ret
0x0000000000152cd6 : push rdi ; cld ; ret
0x0000000000152d0e : push rdi ; cld ; ret
0x0000000000152d4c : push rdi ; cld ; ret
0x0000000000152d74 : push rdi ; cld ; ret
0x0000000000152d9c : push rdi ; cld ; ret
0x0000000000152db4 : push rdi ; cld ; ret
0x0000000000152dcc : push rdi ; cld ; ret
0x0000000000152e20 : push rdi ; cld ; ret
0x0000000000152e70 : push rdi ; cld ; ret
0x0000000000152eb6 : push rdi ; cld ; ret
0x0000000000152eee : push rdi ; cld ; ret
0x0000000000152f2c : push rdi ; cld ; ret
0x0000000000152f54 : push rdi ; cld ; ret
0x0000000000152f7c : push rdi ; cld ; ret
0x0000000000152f94 : push rdi ; cld ; ret
0x0000000000152fac : push rdi ; cld ; ret
0x0000000000153010 : push rdi ; cld ; ret
0x0000000000153058 : push rdi ; cld ; ret
0x0000000000153096 : push rdi ; cld ; ret
0x00000000001530ce : push rdi ; cld ; ret
0x000000000015310c : push rdi ; cld ; ret
0x0000000000153134 : push rdi ; cld ; ret
0x000000000015315c : push rdi ; cld ; ret
0x0000000000153174 : push rdi ; cld ; ret
0x000000000015318c : push rdi ; cld ; ret
0x0000000000153194 : push rdi ; cld ; ret
0x0000000000155440 : push rdi ; cld ; ret
0x0000000000155488 : push rdi ; cld ; ret
0x00000000001554c6 : push rdi ; cld ; ret
0x00000000001554fe : push rdi ; cld ; ret
0x00000000001555a4 : push rdi ; cld ; ret
0x00000000001555bc : push rdi ; cld ; ret
0x0000000000155610 : push rdi ; cld ; ret
0x0000000000155660 : push rdi ; cld ; ret
0x00000000001556a6 : push rdi ; cld ; ret
0x00000000001556de : push rdi ; cld ; ret
0x000000000015571c : push rdi ; cld ; ret
0x0000000000155744 : push rdi ; cld ; ret
0x000000000015576c : push rdi ; cld ; ret
0x0000000000155784 : push rdi ; cld ; ret
0x000000000015579c : push rdi ; cld ; ret
0x00000000001557f0 : push rdi ; cld ; ret
0x0000000000155840 : push rdi ; cld ; ret
0x0000000000155886 : push rdi ; cld ; ret
0x00000000001558be : push rdi ; cld ; ret
0x00000000001558fc : push rdi ; cld ; ret
0x0000000000155924 : push rdi ; cld ; ret
0x000000000015594c : push rdi ; cld ; ret
0x0000000000155964 : push rdi ; cld ; ret
0x000000000015597c : push rdi ; cld ; ret
0x00000000001559e0 : push rdi ; cld ; ret
0x0000000000155a28 : push rdi ; cld ; ret
0x0000000000155a66 : push rdi ; cld ; ret
0x0000000000155a9e : push rdi ; cld ; ret
0x0000000000155adc : push rdi ; cld ; ret
0x0000000000155b04 : push rdi ; cld ; ret
0x0000000000155b2c : push rdi ; cld ; ret
0x0000000000155b44 : push rdi ; cld ; ret
0x0000000000155b5c : push rdi ; cld ; ret
0x0000000000155b64 : push rdi ; cld ; ret
0x0000000000157e10 : push rdi ; cld ; ret
0x0000000000157e58 : push rdi ; cld ; ret
0x0000000000157e96 : push rdi ; cld ; ret
0x0000000000157ece : push rdi ; cld ; ret
0x0000000000157f74 : push rdi ; cld ; ret
0x0000000000157f8c : push rdi ; cld ; ret
0x0000000000157fe0 : push rdi ; cld ; ret
0x0000000000158030 : push rdi ; cld ; ret
0x0000000000158076 : push rdi ; cld ; ret
0x00000000001580ae : push rdi ; cld ; ret
0x00000000001580ec : push rdi ; cld ; ret
0x0000000000158114 : push rdi ; cld ; ret
0x000000000015813c : push rdi ; cld ; ret
0x0000000000158154 : push rdi ; cld ; ret
0x000000000015816c : push rdi ; cld ; ret
0x00000000001581c0 : push rdi ; cld ; ret
0x0000000000158210 : push rdi ; cld ; ret
0x0000000000158256 : push rdi ; cld ; ret
0x000000000015828e : push rdi ; cld ; ret
0x00000000001582cc : push rdi ; cld ; ret
0x00000000001582f4 : push rdi ; cld ; ret
0x000000000015831c : push rdi ; cld ; ret
0x0000000000158334 : push rdi ; cld ; ret
0x000000000015834c : push rdi ; cld ; ret
0x00000000001583b0 : push rdi ; cld ; ret
0x00000000001583f8 : push rdi ; cld ; ret
0x0000000000158436 : push rdi ; cld ; ret
0x000000000015846e : push rdi ; cld ; ret
0x00000000001584ac : push rdi ; cld ; ret
0x00000000001584d4 : push rdi ; cld ; ret
0x00000000001584fc : push rdi ; cld ; ret
0x0000000000158514 : push rdi ; cld ; ret
0x000000000015852c : push rdi ; cld ; ret
0x0000000000158534 : push rdi ; cld ; ret
0x000000000015b104 : push rdi ; cld ; ret
0x000000000015dbd4 : push rdi ; cld ; ret
0x00000000001606f4 : push rdi ; cld ; ret
0x000000000019b351 : push rdi ; cli ; jmp rsp
0x0000000000153597 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155f67 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158937 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b007 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015dad7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001605f7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ad89 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d859 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160379 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001358d5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000886da : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000015ad09 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015d7d9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001602f9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ab5a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d62a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016014a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000007b164 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000015abea : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015ac7a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d6ba : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015d74a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001601da : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016026a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000123050 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000a9c8c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cca : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9c6a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000bb221 : push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000004a00a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004842a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000013eae2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000048431 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000004a011 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000077f60 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000077f97 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a7620 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a8470 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000d20f2 : push rdi ; ret
0x00000000001122c5 : push rdi ; ret
0x000000000016f7ee : push rdi ; ret
0x000000000009d4e5 : push rdi ; ret 0xf800
0x000000000009d9c6 : push rdi ; ret 0xf800
0x000000000009e400 : push rdi ; ret 0xf800
0x000000000016f88e : push rdi ; ret 0xff3
0x000000000013beb3 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000010f576 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000013cfcb : push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000153797 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000156167 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158b37 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015af87 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015da57 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160577 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fba : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000015598a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000015835a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000015b18a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000015dc5a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000016077a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000153397 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155d67 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158737 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b087 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015db57 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160677 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000101a2a : push rdi ; sub al, 0 ; add rsp, 8 ; ret
0x000000000013591d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000013bdc5 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000013c151 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000104c2c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007400f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000a9f20 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008d52b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000198d85 : push rdx ; add dword ptr [rax], eax ; in al, 7 ; hlt ; call rsp
0x00000000001b0dcd : push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e4b ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d55 : push rdx ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x0000000000123efe : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000195a49 : push rdx ; cld ; call qword ptr [rdx + 0x22fffc51]
0x0000000000195a45 : push rdx ; cld ; jmp qword ptr [rdx]
0x0000000000195bc5 : push rdx ; cld ; jmp rax
0x00000000001891b3 : push rdx ; hlt ; call qword ptr [rax]
0x0000000000189365 : push rdx ; hlt ; call qword ptr [rax]
0x00000000001892d7 : push rdx ; hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x0000000000189361 : push rdx ; hlt ; inc dword ptr [rsi] ; push rdx ; hlt ; call qword ptr [rax]
0x0000000000189581 : push rdx ; hlt ; jmp qword ptr [rsi]
0x0000000000189265 : push rdx ; hlt ; jmp rbx
0x000000000018957d : push rdx ; hlt ; push qword ptr [rax + 0x52] ; hlt ; jmp qword ptr [rsi]
0x00000000001891af : push rdx ; hlt ; push rdx ; hlt ; call qword ptr [rax]
0x0000000000089676 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000013f412 : push rdx ; or byte ptr [rcx], bh ; ret 0x3875
0x000000000019582c : push rdx ; pop rdi ; cld ; jmp rdx
0x00000000001a71f5 : push rdx ; ret
0x00000000001a9ecd : push rdx ; ret
0x0000000000023aca : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000019ab11 : push rdx ; stc ; call rsp
0x0000000000101fc2 : push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x0000000000101f6e : push rdx ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x0000000000112424 : push rdx ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000144443 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144459 ; xor eax, eax ; ret
0x0000000000144473 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144489 ; xor eax, eax ; ret
0x00000000001444a3 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1444b9 ; xor eax, eax ; ret
0x0000000000001b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x0000000000196237 : push rdx ; test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x0000000000195d18 : push rdx ; xchg esp, edi ; jmp rdx
0x000000000016e4d4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5a3 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e667 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6ba : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e863 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e9dc : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eaac : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eb70 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebd2 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed7b : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb04 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbd3 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fc97 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fcea : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe93 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017000c : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001700dc : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001701a0 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170202 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001703ab : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa6e9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0xaa740 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000720a2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000075be0 : push rsi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b83
0x000000000015b741 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000015e211 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000160d31 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000f9606 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000001b11dd : push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b11f5 : push rsi ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b1195 : push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b114d : push rsi ; add dword ptr [rax], eax ; nop ; jp 0x1b114e ; jmp qword ptr [rcx]
0x00000000001b120d : push rsi ; add dword ptr [rax], eax ; push rax ; jnp 0x1b120e ; jmp qword ptr [rcx]
0x00000000001b1165 : push rsi ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x000000000015b7b1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000015e281 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000160da1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5df5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000000a6ac5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000000a8ed5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000000a99a5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000020c29 : push rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015b6d1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000015e1a1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000160cc1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5d93 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000a6a63 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000a8e73 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000a9943 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000016e4e9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5b8 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6cf : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e9f1 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016eac1 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebe7 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb19 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbe8 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fcff : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170021 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001700f1 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170217 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000152a22 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001553f2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157dc2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015af02 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015d9d2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001604f2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000195b69 : push rsi ; cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195b65 : push rsi ; cld ; call qword ptr [rax]
0x0000000000153191 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b61 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158531 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015b101 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015dbd1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001606f1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152dc5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155795 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158165 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152fa5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155975 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158345 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153185 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155b55 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000158525 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152be5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001555b5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000157f85 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000019b311 : push rsi ; cli ; jmp rsp
0x0000000000185860 : push rsi ; cli ; push 0x6e ; ja 0x1857ef ; ret 0x48f
0x0000000000171e36 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000019503c : push rsi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rsi
0x0000000000171e26 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000182639 : push rsi ; in al, dx ; call rax
0x0000000000171df6 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000113302 : push rsi ; je 0x113318 ; mov eax, 7 ; ret
0x00000000000f5f1b : push rsi ; js 0xf5f6f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f68b8 : push rsi ; js 0xf690c ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000056808 : push rsi ; or al, 0x83 ; ret
0x000000000005678b : push rsi ; or al, 0xf6 ; ret 0xf08
0x00000000000576cd : push rsi ; or al, 0xf6 ; ret 0xf08
0x0000000000094b2d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000bb21e : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x0000000000184cc0 : push rsi ; pop rdx ; je 0x184c8c ; ret 0xacfc
0x00000000001957c8 : push rsi ; pop rsp ; cld ; jmp rsi
0x0000000000034bcf : push rsi ; ret
0x00000000000649ae : push rsi ; ret
0x0000000000064d5c : push rsi ; ret
0x000000000006597f : push rsi ; ret
0x0000000000065ace : push rsi ; ret
0x0000000000065b8f : push rsi ; ret
0x00000000000668b5 : push rsi ; ret
0x00000000000851a2 : push rsi ; ret
0x00000000000f96b2 : push rsi ; ret
0x0000000000182c06 : push rsi ; ret
0x00000000001a2667 : push rsi ; ret
0x00000000000e5177 : push rsi ; ret 0x7420
0x000000000009f9ca : push rsi ; ret 0x7518
0x0000000000061bbf : push rsi ; ret 0xf02
0x00000000000e4b51 : push rsi ; ret 0xf08
0x00000000000582e8 : push rsi ; ret 0xf10
0x00000000001961ac : push rsi ; stosd dword ptr [rdi], eax ; cld ; jmp rsi
0x00000000000eef8f : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000171e06 : push rsi ; sub eax, edx ; ret
0x0000000000171e16 : push rsi ; sub eax, edx ; ret
0x0000000000195cb4 : push rsi ; test ah, bh ; jmp rsi
0x00000000000fb5a7 : push rsi ; xor ax, ax ; ret
0x000000000016e4fe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5cd : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6e4 : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ea06 : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ead6 : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebfc : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb2e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbfd : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd14 : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170036 : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170106 : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017022c : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001b0fe5 : push rsp ; add dword ptr [rax], eax ; js 0x1b0fe6 ; jmp qword ptr [rbx]
0x0000000000198dbd : push rsp ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x00000000001bad8c : push rsp ; add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b078c : push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x000000000010eee1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000010eddd : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000003dfe3 : push rsp ; and al, 0x18 ; call 0x3c0a9
0x000000000012c7f8 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000081630 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00000000000819ac : push rsp ; and al, 0x20 ; call rax
0x00000000000ba6ee : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000fdd54 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000848ea : push rsp ; and al, 0x68 ; call rax
0x0000000000085c7a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000004a1d0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a18a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000001989f8 : push rsp ; and dh, bl ; jmp rsp
0x00000000000812c2 : push rsp ; and eax, 0x950f4100 ; ret
0x0000000000196850 : push rsp ; and ecx, ebp ; call rsp
0x00000000001af451 : push rsp ; call rsi
0x00000000001bb8f1 : push rsp ; clc ; call qword ptr [rax]
0x00000000001bb929 : push rsp ; clc ; jmp qword ptr [rcx]
0x000000000019a688 : push rsp ; clc ; jmp rsp
0x0000000000195b79 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b75 : push rsp ; cld ; call qword ptr [rax]
0x00000000001bb58c : push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a6be9 : push rsp ; cli ; call qword ptr [rax]
0x0000000000189c2b : push rsp ; cmc ; call rsp
0x0000000000188cc0 : push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rsp
0x0000000000189020 : push rsp ; fdivr st(3), st(0) ; push rsp ; ret
0x000000000019a5e4 : push rsp ; fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000001892dd : push rsp ; hlt ; call qword ptr [rbx]
0x00000000001892e5 : push rsp ; hlt ; jmp qword ptr [rdi]
0x000000000018932d : push rsp ; hlt ; jmp rbx
0x00000000001a248c : push rsp ; imul eax, dword ptr [rax], 0xecf52000 ; call qword ptr [rsi]
0x00000000000cd9d6 : push rsp ; jne 0xcd963 ; mov eax, 0x7d00 ; ret
0x00000000001a2c8c : push rsp ; jno 0x1a2c96 ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x000000000009f12b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000001962d8 : push rsp ; lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x0000000000196b98 : push rsp ; loope 0x196b87 ; call rsp
0x0000000000186e10 : push rsp ; loopne 0x186e03 ; jmp qword ptr [rcx]
0x0000000000135067 : push rsp ; mov eax, 1 ; ret
0x00000000001a758c : push rsp ; mov edx, 0x73200000 ; out dx, eax ; call rax
0x00000000001886c3 : push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x00000000001886c2 : push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188743 : push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188742 : push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000187819 : push rsp ; out dx, al ; ljmp ptr [rax + 0x53] ; out dx, al ; jmp rax
0x00000000001b298c : push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001958f4 : push rsp ; pop rsi ; cld ; jmp rsp
0x0000000000198550 : push rsp ; pop rsp ; int1 ; call rsp
0x00000000001b0b8c : push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b8f ; jmp qword ptr [rcx]
0x0000000000023ad1 : push rsp ; ret
0x0000000000034bc9 : push rsp ; ret
0x000000000008217e : push rsp ; ret
0x000000000008249d : push rsp ; ret
0x00000000000cf390 : push rsp ; ret
0x00000000000e760b : push rsp ; ret
0x00000000000e7617 : push rsp ; ret
0x0000000000189017 : push rsp ; ret
0x0000000000189016 : push rsp ; ret
0x000000000018901b : push rsp ; ret
0x000000000018901a : push rsp ; ret
0x0000000000189023 : push rsp ; ret
0x0000000000189022 : push rsp ; ret
0x000000000018902b : push rsp ; ret
0x000000000018902a : push rsp ; ret
0x0000000000189097 : push rsp ; ret
0x0000000000189096 : push rsp ; ret
0x000000000019a12c : push rsp ; ret
0x00000000001ae78f : push rsp ; ret
0x0000000000189097 : push rsp ; ret
0x0000000000189096 : push rsp ; ret
0x0000000000034df8 : push rsp ; ret 0x2e0f
0x000000000010a434 : push rsp ; ret 0x8940
0x000000000010a4c4 : push rsp ; ret 0x8940
0x000000000010a564 : push rsp ; ret 0x8940
0x000000000010a5f4 : push rsp ; ret 0x8940
0x000000000010a684 : push rsp ; ret 0x8940
0x000000000010a714 : push rsp ; ret 0x8940
0x000000000010a7b4 : push rsp ; ret 0x8940
0x000000000010a854 : push rsp ; ret 0x8940
0x000000000010a8f4 : push rsp ; ret 0x8940
0x000000000010a984 : push rsp ; ret 0x8940
0x000000000010aab4 : push rsp ; ret 0x8940
0x000000000010ab4c : push rsp ; ret 0x8940
0x0000000000034aba : push rsp ; ret 0xf66
0x000000000019a10b : push rsp ; ret 1
0x00000000000e7613 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x0000000000195de0 : push rsp ; xchg ah, bh ; jmp rsp
0x000000000018874b : push rsp ; xor ebx, 0xffffffff ; out 0x88, al ; jmp rsi
0x000000000018874a : push rsp ; xor ebx, 0xffffffff ; out 0x88, al ; jmp rsi
0x00000000001acdd4 : pushfq ; adc al, byte ptr [rcx] ; add al, ch ; fpatan ; jmp qword ptr [rcx]
0x0000000000147000 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000019b2dc : pushfq ; add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x00000000001b3bd4 : pushfq ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000008638d : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000001af9d4 : pushfq ; add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001bc4a4 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000023ff1 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000db23f : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000019aea4 : pushfq ; and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x0000000000196551 : pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001b95d4 : pushfq ; fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x0000000000197669 : pushfq ; in eax, dx ; call rsp
0x000000000001fb06 : pushfq ; jmp 0x1face
0x0000000000197cec : pushfq ; loope 0x197cf6 ; add byte ptr [rsi + rbx*2 - 0x12], al ; jmp rsp
0x000000000007841c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000186b54 : pushfq ; mov ecx, 0x6e16ffed ; in eax, dx ; call qword ptr [rsi]
0x0000000000186b40 : pushfq ; mov ecx, 0xb99cffed ; in eax, dx ; call qword ptr [rsi]
0x0000000000186bc0 : pushfq ; mov ecx, 0xb99cffed ; in eax, dx ; call qword ptr [rsi]
0x00000000001977ac : pushfq ; mov edi, 0xbb440000 ; in eax, dx ; call rsp
0x00000000001b5fd4 : pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x0000000000147d00 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145cb4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000001972f4 : pushfq ; popfq ; add byte ptr [rax], al ; and al, 0x44 ; jmp 0x197302
0x0000000000195a0c : pushfq ; push rcx ; cld ; ljmp ptr [rcx + rdx*2] ; cld ; call rdx
0x000000000019a144 : pushfq ; ret
0x00000000001a7ed4 : pushfq ; ret
0x00000000000bd78f : pushfq ; ret 0xb60f
0x00000000000ac17b : pushfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000001974dc : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x19753a ; in eax, dx ; jmp rsp
0x00000000001bad90 : rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b0330 : rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001891fc : rcl byte ptr [rcx - 0xc], 0xff ; retf 0xf451 ; call rsp
0x00000000000f5b80 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000184cbf : rcl dword ptr [rsi + 0x5a], cl ; je 0x184c8d ; ret 0xacfc
0x0000000000184cbb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x184c91 ; ret 0xacfc
0x00000000001048ec : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000034f9f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000034fd9 : rcr bl, 0x3f ; fsubp st(1) ; ret
0x000000000003c1b0 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000003c250 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000003f470 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000003f510 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000006e7ea : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000ae780 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000ae820 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000b3870 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000b3910 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000de377 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000010e0e0 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000123166 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000012ed84 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000133684 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000139644 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000fc4de : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x00000000000fc5ce : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000001fb76 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000052c91 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000943e8 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000d6f8f : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000d6fd2 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e8482 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000fc456 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000fc476 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000010314c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000012e1a9 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001339c7 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000137ccc : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000c9be0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9cbc : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e8296 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e82d4 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000047a13 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006e0dc : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006e13b : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000070a7a : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000070ac1 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000010c99f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000010c9db : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000048437 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000004a017 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000019577c : rcr byte ptr [rbp - 4], 0xff ; push rax ; pop rbp ; cld ; jmp rax
0x0000000000194f14 : rcr byte ptr [rbp - 5], 1 ; jmp qword ptr [rax]
0x00000000000cd408 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000115a42 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000075051 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075211 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077eab : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007e0f1 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096ba7 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096ee5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acf3d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bdf2d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d98b4 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000da3b9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de402 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fe7e0 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000137878 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a4dd : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a6ad : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022b50 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000039df5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003a585 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000006dd62 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000006e2a5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000075119 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000077963 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000850e2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000009f303 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000009f466 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000d7145 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000efde2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fb685 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fc599 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fefa5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010ad5d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010b5bd : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000117835 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000137aca : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000013a1d8 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb569 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000003a2c2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006df81 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000074b83 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000077cbf : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000086a7b : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008981d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d7cb1 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e7bbd : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000efce8 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000faeee : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ff435 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001192b9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d33f : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d3c6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000121a6d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000121e39 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ccb7 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012da01 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012e724 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ec91 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001338f9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000133b6d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c9c2c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054b8b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000010eb6d : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000084ba8 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000086731 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000045c48 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006e3c0 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006e40c : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006ff60 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006ff84 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006ffce : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000070f09 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000070f54 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007db2d : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007db70 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000085374 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000f5b56 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000001201b4 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000012f34c : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000012f3a2 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006fb6b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010c9d8 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001850dd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001afa50 : rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001956f0 : rcr byte ptr [rdx], 1 ; cld ; jmp qword ptr [rax]
0x00000000001956fc : rcr byte ptr [rsi], 0xfc ; call qword ptr [rax]
0x00000000001acdc0 : rcr cl, 1 ; jmp qword ptr [rcx]
0x00000000000ea693 : rcr dword ptr [rax + 0xa89002d], 1 ; pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000048469 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x000000000014dc76 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e156 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e4f6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000142fe4 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000123e28 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9a : rep stosq qword ptr [rdi], rax ; ret
0x00000000000f5b85 : rep stosq qword ptr [rdi], rax ; ret
0x00000000000f5dfb : rep stosq qword ptr [rdi], rax ; ret
0x0000000000000937 : ret
0x0000000000000979 : ret
0x0000000000000a4c : ret
0x0000000000000a4b : ret
0x0000000000000c34 : ret
0x0000000000001004 : ret
0x0000000000001394 : ret
0x0000000000001a90 : ret
0x0000000000001b2a : ret
0x0000000000001b2f : ret
0x0000000000001b6b : ret
0x0000000000001b93 : ret
0x0000000000001b97 : ret
0x0000000000001b9b : ret
0x0000000000001b9f : ret
0x0000000000001cbc : ret
0x0000000000001e4a : ret
0x000000000000205a : ret
0x00000000000020d4 : ret
0x0000000000002263 : ret
0x00000000000022e5 : ret
0x0000000000002318 : ret
0x0000000000002336 : ret
0x0000000000002539 : ret
0x000000000000254f : ret
0x000000000000260c : ret
0x000000000000272c : ret
0x0000000000002874 : ret
0x0000000000002b89 : ret
0x0000000000002bd3 : ret
0x0000000000002bd2 : ret
0x0000000000002bd7 : ret
0x0000000000002bd6 : ret
0x0000000000002be7 : ret
0x0000000000002be6 : ret
0x0000000000002bef : ret
0x0000000000002bee : ret
0x0000000000002bf7 : ret
0x0000000000002bf6 : ret
0x0000000000002bff : ret
0x0000000000002bfe : ret
0x0000000000002c07 : ret
0x0000000000002c06 : ret
0x0000000000002c0b : ret
0x0000000000002c0a : ret
0x0000000000002c13 : ret
0x0000000000002c12 : ret
0x0000000000002cab : ret
0x0000000000002d1b : ret
0x0000000000002d1a : ret
0x0000000000002d27 : ret
0x0000000000002d26 : ret
0x0000000000002d7b : ret
0x0000000000003105 : ret
0x00000000000032a1 : ret
0x0000000000003676 : ret
0x0000000000003819 : ret
0x0000000000003818 : ret
0x0000000000003839 : ret
0x00000000000038b4 : ret
0x00000000000038db : ret
0x00000000000038da : ret
0x000000000000395d : ret
0x000000000000395c : ret
0x0000000000003992 : ret
0x000000000000399a : ret
0x000000000000399e : ret
0x00000000000039a6 : ret
0x00000000000039a8 : ret
0x0000000000003aa6 : ret
0x0000000000003afe : ret
0x0000000000003baf : ret
0x0000000000004050 : ret
0x0000000000004179 : ret
0x0000000000004178 : ret
0x0000000000004509 : ret
0x0000000000004508 : ret
0x0000000000004521 : ret
0x0000000000004520 : ret
0x00000000000045d8 : ret
0x0000000000004758 : ret
0x00000000000057f0 : ret
0x0000000000005eb0 : ret
0x00000000000063d0 : ret
0x0000000000006411 : ret
0x0000000000006410 : ret
0x00000000000066c9 : ret
0x00000000000069a8 : ret
0x00000000000080d9 : ret
0x0000000000008908 : ret
0x0000000000008d39 : ret
0x0000000000008fd0 : ret
0x00000000000091c0 : ret
0x0000000000009210 : ret
0x0000000000009540 : ret
0x00000000000098f1 : ret
0x00000000000098f0 : ret
0x000000000000ac90 : ret
0x000000000000bcf1 : ret
0x000000000000c430 : ret
0x000000000000d350 : ret
0x000000000000e3c1 : ret
0x000000000000e3c0 : ret
0x000000000000e620 : ret
0x000000000000f141 : ret
0x000000000000f2c1 : ret
0x000000000000f2c0 : ret
0x000000000000f369 : ret
0x00000000000102a8 : ret
0x0000000000010af8 : ret
0x0000000000018251 : ret
0x00000000000191c8 : ret
0x000000000001bd49 : ret
0x000000000001bd61 : ret
0x000000000001bdd9 : ret
0x000000000001be09 : ret
0x000000000001be21 : ret
0x000000000001f721 : ret
0x000000000001f8ec : ret
0x000000000001f931 : ret
0x000000000001f97b : ret
0x000000000001f9c5 : ret
0x000000000001fb08 : ret
0x000000000001fb14 : ret
0x000000000001fb7a : ret
0x000000000001fb7d : ret
0x000000000001fc0a : ret
0x00000000000201de : ret
0x0000000000020258 : ret
0x00000000000202e9 : ret
0x00000000000203e7 : ret
0x0000000000020584 : ret
0x0000000000020583 : ret
0x0000000000020591 : ret
0x0000000000020590 : ret
0x00000000000206c6 : ret
0x0000000000020937 : ret
0x0000000000020947 : ret
0x00000000000209b5 : ret
0x0000000000020bf0 : ret
0x0000000000020c2f : ret
0x0000000000020d36 : ret
0x0000000000020e6b : ret
0x0000000000020ea2 : ret
0x0000000000020fe3 : ret
0x0000000000021103 : ret
0x000000000002111b : ret
0x0000000000021143 : ret
0x000000000002116b : ret
0x0000000000021193 : ret
0x000000000002121f : ret
0x0000000000021230 : ret
0x00000000000213c2 : ret
0x00000000000214d8 : ret
0x00000000000217e9 : ret
0x000000000002189c : ret
0x00000000000218a7 : ret
0x00000000000219de : ret
0x0000000000021a36 : ret
0x0000000000021a47 : ret
0x0000000000021a57 : ret
0x0000000000021aaf : ret
0x00000000000221e7 : ret
0x00000000000221f9 : ret
0x0000000000022341 : ret
0x0000000000022404 : ret
0x000000000002249b : ret
0x0000000000022540 : ret
0x000000000002268e : ret
0x0000000000022707 : ret
0x0000000000022849 : ret
0x0000000000022997 : ret
0x0000000000022b57 : ret
0x0000000000022b99 : ret
0x0000000000022bb6 : ret
0x0000000000022c82 : ret
0x0000000000022cd2 : ret
0x0000000000022d81 : ret
0x000000000002304e : ret
0x000000000002308d : ret
0x00000000000230a1 : ret
0x00000000000230c6 : ret
0x000000000002347f : ret
0x0000000000023502 : ret
0x0000000000023573 : ret
0x00000000000235e8 : ret
0x00000000000236da : ret
0x0000000000023ad2 : ret
0x0000000000023b8f : ret
0x0000000000023bac : ret
0x0000000000023c20 : ret
0x0000000000023e10 : ret
0x0000000000023eb3 : ret
0x0000000000023f0d : ret
0x0000000000023f26 : ret
0x000000000002404a : ret
0x000000000002408a : ret
0x000000000002420c : ret
0x00000000000242c4 : ret
0x0000000000024304 : ret
0x000000000002444c : ret
0x00000000000245d5 : ret
0x00000000000247ce : ret
0x000000000002486b : ret
0x00000000000248d1 : ret
0x00000000000248f0 : ret
0x0000000000024a1a : ret
0x0000000000024a5a : ret
0x0000000000024bc4 : ret
0x0000000000024c74 : ret
0x0000000000024ca4 : ret
0x0000000000024dec : ret
0x0000000000024f80 : ret
0x0000000000025001 : ret
0x0000000000025044 : ret
0x00000000000251f2 : ret
0x0000000000025202 : ret
0x0000000000025324 : ret
0x0000000000025368 : ret
0x00000000000256f3 : ret
0x00000000000256fa : ret
0x0000000000025aab : ret
0x0000000000025b25 : ret
0x0000000000026559 : ret
0x0000000000026836 : ret
0x0000000000026880 : ret
0x0000000000026a8a : ret
0x0000000000026afa : ret
0x0000000000026b16 : ret
0x0000000000026b32 : ret
0x0000000000026b4e : ret
0x0000000000026c44 : ret
0x0000000000026dca : ret
0x0000000000026e5a : ret
0x0000000000026e77 : ret
0x0000000000026e94 : ret
0x0000000000026eb1 : ret
0x000000000002799d : ret
0x00000000000279dc : ret
0x000000000002801c : ret
0x000000000002885d : ret
0x000000000002889d : ret
0x0000000000028cfb : ret
0x0000000000028eec : ret
0x00000000000296ed : ret
0x000000000002975f : ret
0x0000000000029803 : ret
0x000000000002981f : ret
0x00000000000298d5 : ret
0x0000000000029965 : ret
0x0000000000029ac7 : ret
0x0000000000029aea : ret
0x0000000000029c74 : ret
0x0000000000029c8b : ret
0x0000000000029c97 : ret
0x0000000000029ce5 : ret
0x0000000000029db2 : ret
0x0000000000029dd6 : ret
0x0000000000029e1a : ret
0x0000000000029ea1 : ret
0x0000000000029fa5 : ret
0x000000000002a06e : ret
0x000000000002a0e6 : ret
0x000000000002a182 : ret
0x000000000002a31a : ret
0x000000000002a3d3 : ret
0x000000000002a671 : ret
0x000000000002a670 : ret
0x000000000002a69b : ret
0x000000000002a6d9 : ret
0x000000000002a6eb : ret
0x000000000002a83e : ret
0x000000000002a864 : ret
0x000000000002a889 : ret
0x000000000002a8e6 : ret
0x000000000002a8f9 : ret
0x000000000002aa23 : ret
0x000000000002aadd : ret
0x000000000002abb5 : ret
0x000000000002ac8d : ret
0x000000000002ad38 : ret
0x000000000002b00b : ret
0x000000000002b160 : ret
0x000000000002b251 : ret
0x000000000002b25e : ret
0x000000000002b5dd : ret
0x000000000002b615 : ret
0x000000000002b6de : ret
0x000000000002b76f : ret
0x000000000002b964 : ret
0x000000000002b9a8 : ret
0x000000000002bd59 : ret
0x000000000002bd58 : ret
0x000000000002bdd9 : ret
0x000000000002bec6 : ret
0x000000000002c023 : ret
0x000000000002c0f8 : ret
0x000000000002c148 : ret
0x000000000002c456 : ret
0x000000000002c65a : ret
0x000000000002c6d0 : ret
0x000000000002c8c5 : ret
0x000000000002cad5 : ret
0x000000000002caee : ret
0x000000000002cb31 : ret
0x000000000002cb30 : ret
0x000000000002cb40 : ret
0x000000000002cb3f : ret
0x000000000002cb50 : ret
0x000000000002cb74 : ret
0x000000000002cc7a : ret
0x000000000002cdd7 : ret
0x000000000002d057 : ret
0x000000000002d0e1 : ret
0x000000000002d160 : ret
0x000000000002d2c9 : ret
0x000000000002d50f : ret
0x000000000002d621 : ret
0x000000000002d6a1 : ret
0x000000000002d716 : ret
0x000000000002d781 : ret
0x000000000002d822 : ret
0x000000000002d8aa : ret
0x000000000002d8a9 : ret
0x000000000002d90e : ret
0x000000000002d9d5 : ret
0x000000000002da26 : ret
0x000000000002da6c : ret
0x000000000002da6b : ret
0x000000000002da81 : ret
0x000000000002da80 : ret
0x000000000002dab6 : ret
0x000000000002db9b : ret
0x000000000002dcc3 : ret
0x000000000002dd18 : ret
0x000000000002dd39 : ret
0x000000000002dd58 : ret
0x000000000002dd79 : ret
0x000000000002dd99 : ret
0x000000000002ddb9 : ret
0x000000000002ddd9 : ret
0x000000000002ddf8 : ret
0x000000000002de19 : ret
0x000000000002de39 : ret
0x000000000002de59 : ret
0x000000000002de8b : ret
0x000000000002de8a : ret
0x000000000002debb : ret
0x000000000002deba : ret
0x000000000002ded5 : ret
0x000000000002defc : ret
0x000000000002df1c : ret
0x000000000002df25 : ret
0x000000000002df38 : ret
0x000000000002df4e : ret
0x000000000002df61 : ret
0x000000000002df82 : ret
0x000000000002dfa1 : ret
0x000000000002dfc2 : ret
0x000000000002dfe2 : ret
0x000000000002e002 : ret
0x000000000002e022 : ret
0x000000000002e041 : ret
0x000000000002e062 : ret
0x000000000002e082 : ret
0x000000000002e0a2 : ret
0x000000000002e0ba : ret
0x000000000002e0ca : ret
0x000000000002e0ef : ret
0x000000000002e100 : ret
0x000000000002e120 : ret
0x000000000002e140 : ret
0x000000000002e19f : ret
0x000000000002e1cc : ret
0x000000000002e249 : ret
0x000000000002e2d5 : ret
0x000000000002e42c : ret
0x000000000002e517 : ret
0x000000000002e6a8 : ret
0x000000000002e7d3 : ret
0x000000000002e837 : ret
0x000000000002efc4 : ret
0x000000000002f269 : ret
0x000000000002fc8d : ret
0x000000000002ffa2 : ret
0x0000000000030379 : ret
0x0000000000030423 : ret
0x0000000000030589 : ret
0x00000000000306c4 : ret
0x00000000000306f8 : ret
0x0000000000030770 : ret
0x000000000003078e : ret
0x00000000000307a9 : ret
0x0000000000030809 : ret
0x0000000000030a91 : ret
0x0000000000030b59 : ret
0x00000000000310df : ret
0x00000000000310e9 : ret
0x00000000000312f4 : ret
0x000000000003132e : ret
0x00000000000313bd : ret
0x00000000000313c3 : ret
0x00000000000316e9 : ret
0x0000000000031707 : ret
0x00000000000320aa : ret
0x00000000000320c3 : ret
0x00000000000320e2 : ret
0x000000000003229c : ret
0x0000000000032449 : ret
0x00000000000325ce : ret
0x0000000000032662 : ret
0x00000000000326af : ret
0x000000000003271d : ret
0x0000000000032755 : ret
0x000000000003285a : ret
0x0000000000032931 : ret
0x000000000003294e : ret
0x00000000000329de : ret
0x0000000000032a32 : ret
0x0000000000032a46 : ret
0x0000000000032bf0 : ret
0x0000000000032c92 : ret
0x0000000000032dca : ret
0x0000000000032e7c : ret
0x0000000000032ec9 : ret
0x0000000000032fd1 : ret
0x000000000003300d : ret
0x00000000000330c1 : ret
0x00000000000330c0 : ret
0x0000000000033289 : ret
0x00000000000332f8 : ret
0x0000000000033337 : ret
0x0000000000033397 : ret
0x0000000000033507 : ret
0x0000000000033545 : ret
0x0000000000033b94 : ret
0x0000000000033bd7 : ret
0x0000000000033bd6 : ret
0x0000000000033c14 : ret
0x0000000000033c43 : ret
0x0000000000033c4d : ret
0x0000000000033caa : ret
0x0000000000033dca : ret
0x0000000000033e93 : ret
0x0000000000033ea9 : ret
0x0000000000033eb3 : ret
0x0000000000033ee9 : ret
0x0000000000033f14 : ret
0x00000000000340b1 : ret
0x0000000000034252 : ret
0x0000000000034412 : ret
0x0000000000034492 : ret
0x0000000000034794 : ret
0x00000000000347c3 : ret
0x00000000000347e9 : ret
0x0000000000034804 : ret
0x0000000000034859 : ret
0x000000000003487f : ret
0x000000000003487e : ret
0x0000000000034893 : ret
0x00000000000348c6 : ret
0x00000000000348fe : ret
0x0000000000034933 : ret
0x0000000000034958 : ret
0x0000000000034986 : ret
0x0000000000034a01 : ret
0x0000000000034a6c : ret
0x0000000000034a74 : ret
0x0000000000034ad6 : ret
0x0000000000034b26 : ret
0x0000000000034b38 : ret
0x0000000000034b49 : ret
0x0000000000034b70 : ret
0x0000000000034b94 : ret
0x0000000000034bb1 : ret
0x0000000000034bca : ret
0x0000000000034bd0 : ret
0x0000000000034bd1 : ret
0x0000000000034c10 : ret
0x0000000000034c28 : ret
0x0000000000034c3d : ret
0x0000000000034c52 : ret
0x0000000000034c60 : ret
0x0000000000034c5f : ret
0x0000000000034c9c : ret
0x0000000000034cc0 : ret
0x0000000000034ce5 : ret
0x0000000000034d12 : ret
0x0000000000034dd9 : ret
0x0000000000034dd8 : ret
0x0000000000034e11 : ret
0x0000000000034e59 : ret
0x0000000000034e67 : ret
0x0000000000034e77 : ret
0x0000000000034ec4 : ret
0x0000000000034f06 : ret
0x0000000000034f1e : ret
0x0000000000034f3d : ret
0x0000000000034fa4 : ret
0x0000000000034fde : ret
0x000000000003500b : ret
0x000000000003502f : ret
0x0000000000035049 : ret
0x0000000000035048 : ret
0x0000000000035060 : ret
0x00000000000350cf : ret
0x00000000000350db : ret
0x00000000000350da : ret
0x0000000000035136 : ret
0x000000000003517e : ret
0x000000000003518f : ret
0x00000000000351ad : ret
0x0000000000035235 : ret
0x000000000003530b : ret
0x000000000003530a : ret
0x00000000000353b1 : ret
0x00000000000353ed : ret
0x0000000000035431 : ret
0x0000000000035430 : ret
0x0000000000035461 : ret
0x0000000000035493 : ret
0x00000000000356a0 : ret
0x00000000000356e8 : ret
0x00000000000356f9 : ret
0x0000000000035713 : ret
0x0000000000035739 : ret
0x0000000000035738 : ret
0x0000000000035751 : ret
0x000000000003576f : ret
0x0000000000035780 : ret
0x00000000000357a5 : ret
0x00000000000357a4 : ret
0x00000000000357c1 : ret
0x00000000000357ee : ret
0x0000000000035801 : ret
0x0000000000035842 : ret
0x00000000000358db : ret
0x0000000000035975 : ret
0x00000000000359e3 : ret
0x0000000000035a36 : ret
0x0000000000035a9b : ret
0x0000000000035b24 : ret
0x0000000000035ba0 : ret
0x0000000000035bb2 : ret
0x0000000000035bf2 : ret
0x0000000000035c4d : ret
0x0000000000035c9e : ret
0x0000000000035d92 : ret
0x0000000000035e10 : ret
0x0000000000035e2f : ret
0x0000000000035e40 : ret
0x0000000000035ec7 : ret
0x0000000000035f2c : ret
0x0000000000035f48 : ret
0x0000000000035f6b : ret
0x0000000000035f9d : ret
0x0000000000035fb3 : ret
0x0000000000036050 : ret
0x000000000003606b : ret
0x000000000003608a : ret
0x00000000000360a3 : ret
0x00000000000360cc : ret
0x00000000000360e3 : ret
0x000000000003610e : ret
0x0000000000036123 : ret
0x0000000000036143 : ret
0x00000000000361b7 : ret
0x00000000000361e5 : ret
0x000000000003626f : ret
0x0000000000036272 : ret
0x0000000000036286 : ret
0x0000000000036478 : ret
0x000000000003655f : ret
0x0000000000036573 : ret
0x0000000000036768 : ret
0x000000000003684f : ret
0x0000000000036863 : ret
0x0000000000036876 : ret
0x0000000000036886 : ret
0x00000000000368b2 : ret
0x00000000000368c3 : ret
0x00000000000368cd : ret
0x00000000000368d2 : ret
0x0000000000036959 : ret
0x0000000000036970 : ret
0x0000000000036abb : ret
0x0000000000036ad0 : ret
0x0000000000036bf9 : ret
0x0000000000036c1e : ret
0x0000000000036c64 : ret
0x0000000000036cb4 : ret
0x0000000000036d03 : ret
0x0000000000036df0 : ret
0x0000000000036e94 : ret
0x0000000000037223 : ret
0x0000000000037239 : ret
0x0000000000037301 : ret
0x0000000000037308 : ret
0x000000000003737a : ret
0x0000000000037643 : ret
0x0000000000037863 : ret
0x0000000000037862 : ret
0x0000000000037b85 : ret
0x0000000000038215 : ret
0x0000000000038bc4 : ret
0x0000000000038f50 : ret
0x000000000003909d : ret
0x000000000003912a : ret
0x000000000003918f : ret
0x0000000000039210 : ret
0x000000000003928f : ret
0x00000000000392b6 : ret
0x00000000000395ef : ret
0x0000000000039650 : ret
0x00000000000397d4 : ret
0x00000000000397e7 : ret
0x00000000000398c9 : ret
0x0000000000039907 : ret
0x000000000003995d : ret
0x0000000000039ac4 : ret
0x0000000000039c33 : ret
0x0000000000039cf7 : ret
0x0000000000039dfc : ret
0x0000000000039e3d : ret
0x0000000000039ee8 : ret
0x0000000000039f0a : ret
0x000000000003a094 : ret
0x000000000003a1d8 : ret
0x000000000003a273 : ret
0x000000000003a2c7 : ret
0x000000000003a4a7 : ret
0x000000000003a521 : ret
0x000000000003a58c : ret
0x000000000003a624 : ret
0x000000000003a63b : ret
0x000000000003a650 : ret
0x000000000003a670 : ret
0x000000000003a691 : ret
0x000000000003a6a8 : ret
0x000000000003a6b8 : ret
0x000000000003a6ce : ret
0x000000000003a6fa : ret
0x000000000003a729 : ret
0x000000000003a785 : ret
0x000000000003a7a9 : ret
0x000000000003a7c7 : ret
0x000000000003a7f9 : ret
0x000000000003a803 : ret
0x000000000003a855 : ret
0x000000000003a873 : ret
0x000000000003a8a2 : ret
0x000000000003a95d : ret
0x000000000003aa06 : ret
0x000000000003aa05 : ret
0x000000000003aa08 : ret
0x000000000003aab2 : ret
0x000000000003ab53 : ret
0x000000000003ac09 : ret
0x000000000003ac3b : ret
0x000000000003ac88 : ret
0x000000000003ac9c : ret
0x000000000003acb8 : ret
0x000000000003acd3 : ret
0x000000000003adb5 : ret
0x000000000003ae4c : ret
0x000000000003aed4 : ret
0x000000000003af6d : ret
0x000000000003afc0 : ret
0x000000000003aff2 : ret
0x000000000003b01f : ret
0x000000000003b041 : ret
0x000000000003b06e : ret
0x000000000003b091 : ret
0x000000000003b0be : ret
0x000000000003b0eb : ret
0x000000000003b17a : ret
0x000000000003b1a5 : ret
0x000000000003b1e6 : ret
0x000000000003b215 : ret
0x000000000003b245 : ret
0x000000000003b29b : ret
0x000000000003b2e5 : ret
0x000000000003b32c : ret
0x000000000003b376 : ret
0x000000000003b466 : ret
0x000000000003b480 : ret
0x000000000003b52e : ret
0x000000000003b58a : ret
0x000000000003b936 : ret
0x000000000003b950 : ret
0x000000000003b9fe : ret
0x000000000003ba5a : ret
0x000000000003bb7b : ret
0x000000000003be33 : ret
0x000000000003bea5 : ret
0x000000000003bf9e : ret
0x000000000003c039 : ret
0x000000000003c131 : ret
0x000000000003c180 : ret
0x000000000003c1b8 : ret
0x000000000003c258 : ret
0x000000000003c2a6 : ret
0x000000000003c2cc : ret
0x000000000003c436 : ret
0x000000000003c45a : ret
0x000000000003c4d0 : ret
0x000000000003c700 : ret
0x000000000003ca28 : ret
0x000000000003cef6 : ret
0x000000000003d2fd : ret
0x000000000003e023 : ret
0x000000000003e144 : ret
0x000000000003e14a : ret
0x000000000003e1a4 : ret
0x000000000003e6be : ret
0x000000000003e6dc : ret
0x000000000003ea25 : ret
0x000000000003ea93 : ret
0x000000000003eaa8 : ret
0x000000000003f0f3 : ret
0x000000000003f165 : ret
0x000000000003f25e : ret
0x000000000003f2f9 : ret
0x000000000003f3f4 : ret
0x000000000003f443 : ret
0x000000000003f478 : ret
0x000000000003f518 : ret
0x000000000003f566 : ret
0x000000000003f58c : ret
0x000000000003f706 : ret
0x000000000003f72a : ret
0x000000000003f7a8 : ret
0x000000000003f9e0 : ret
0x00000000000401ee : ret
0x00000000000405f5 : ret
0x00000000000412b3 : ret
0x00000000000413c3 : ret
0x00000000000413c9 : ret
0x000000000004141d : ret
0x000000000004192c : ret
0x00000000000419d2 : ret
0x0000000000041a47 : ret
0x0000000000041a60 : ret
0x0000000000042043 : ret
0x00000000000420b5 : ret
0x00000000000421b6 : ret
0x0000000000042259 : ret
0x0000000000042352 : ret
0x00000000000423a1 : ret
0x00000000000423d4 : ret
0x000000000004246c : ret
0x00000000000424b6 : ret
0x00000000000424da : ret
0x0000000000042582 : ret
0x0000000000042672 : ret
0x00000000000426c8 : ret
0x0000000000042c0e : ret
0x00000000000430eb : ret
0x00000000000434cc : ret
0x0000000000043837 : ret
0x0000000000043e39 : ret
0x00000000000441f2 : ret
0x0000000000044286 : ret
0x0000000000044a39 : ret
0x0000000000044ac2 : ret
0x0000000000044c62 : ret
0x0000000000044c9a : ret
0x0000000000044ce2 : ret
0x0000000000044d1a : ret
0x0000000000044d92 : ret
0x0000000000044dc8 : ret
0x0000000000045040 : ret
0x000000000004504e : ret
0x000000000004509e : ret
0x000000000004538a : ret
0x00000000000453bc : ret
0x0000000000045503 : ret
0x000000000004561c : ret
0x0000000000045801 : ret
0x0000000000045855 : ret
0x0000000000045a2a : ret
0x0000000000045a29 : ret
0x0000000000045a32 : ret
0x0000000000045a39 : ret
0x0000000000045a38 : ret
0x0000000000045a41 : ret
0x0000000000045a40 : ret
0x0000000000045afe : ret
0x0000000000045afd : ret
0x0000000000045b65 : ret
0x0000000000045b6f : ret
0x0000000000045bdc : ret
0x0000000000045be6 : ret
0x0000000000045c4b : ret
0x0000000000045cfa : ret
0x0000000000045df6 : ret
0x0000000000045f98 : ret
0x0000000000045f97 : ret
0x00000000000460a4 : ret
0x0000000000046183 : ret
0x00000000000461f6 : ret
0x000000000004624e : ret
0x0000000000046278 : ret
0x00000000000462ce : ret
0x000000000004632e : ret
0x000000000004632d : ret
0x0000000000046667 : ret
0x0000000000046666 : ret
0x0000000000046c22 : ret
0x0000000000046c21 : ret
0x0000000000046eb4 : ret
0x0000000000046f05 : ret
0x0000000000046f19 : ret
0x0000000000046f18 : ret
0x0000000000046f26 : ret
0x0000000000046f89 : ret
0x0000000000046ff0 : ret
0x0000000000047025 : ret
0x0000000000047052 : ret
0x000000000004705e : ret
0x000000000004706b : ret
0x0000000000047078 : ret
0x0000000000047089 : ret
0x00000000000470a4 : ret
0x00000000000470b2 : ret
0x00000000000470ee : ret
0x0000000000047257 : ret
0x000000000004726a : ret
0x000000000004727f : ret
0x00000000000472d0 : ret
0x00000000000472f9 : ret
0x0000000000047781 : ret
0x0000000000047a17 : ret
0x0000000000047a36 : ret
0x0000000000047b2b : ret
0x0000000000047b30 : ret
0x0000000000047b2f : ret
0x0000000000047b2b : ret
0x0000000000047b3c : ret
0x0000000000047bbf : ret
0x0000000000047bd0 : ret
0x0000000000047d85 : ret
0x0000000000047f4f : ret
0x0000000000047f60 : ret
0x000000000004803a : ret
0x0000000000048068 : ret
0x000000000004808b : ret
0x00000000000480bb : ret
0x00000000000480e0 : ret
0x00000000000481d1 : ret
0x0000000000048200 : ret
0x0000000000048223 : ret
0x000000000004825b : ret
0x0000000000048280 : ret
0x00000000000482fb : ret
0x0000000000048380 : ret
0x0000000000048396 : ret
0x0000000000048403 : ret
0x000000000004843a : ret
0x0000000000048472 : ret
0x000000000004847a : ret
0x00000000000484cd : ret
0x00000000000484cc : ret
0x000000000004857f : ret
0x0000000000048616 : ret
0x0000000000048631 : ret
0x00000000000486cb : ret
0x00000000000486e4 : ret
0x00000000000487d4 : ret
0x00000000000488af : ret
0x00000000000488c8 : ret
0x000000000004898b : ret
0x00000000000489bd : ret
0x00000000000489e3 : ret
0x0000000000048a1f : ret
0x0000000000048a32 : ret
0x0000000000048a95 : ret
0x0000000000048ac7 : ret
0x0000000000048af3 : ret
0x0000000000048b2f : ret
0x0000000000048b42 : ret
0x0000000000048b85 : ret
0x0000000000048b84 : ret
0x0000000000048c12 : ret
0x0000000000048c39 : ret
0x0000000000048ce1 : ret
0x0000000000048daf : ret
0x0000000000048db7 : ret
0x0000000000049014 : ret
0x0000000000049071 : ret
0x000000000004908a : ret
0x000000000004909e : ret
0x00000000000490b8 : ret
0x00000000000490f5 : ret
0x0000000000049128 : ret
0x0000000000049166 : ret
0x000000000004922a : ret
0x000000000004923f : ret
0x00000000000492da : ret
0x00000000000495a4 : ret
0x00000000000497d5 : ret
0x0000000000049808 : ret
0x0000000000049840 : ret
0x0000000000049903 : ret
0x0000000000049917 : ret
0x00000000000499b9 : ret
0x0000000000049e3f : ret
0x0000000000049e46 : ret
0x0000000000049e5f : ret
0x0000000000049e7d : ret
0x0000000000049edb : ret
0x0000000000049f60 : ret
0x0000000000049f76 : ret
0x0000000000049fe3 : ret
0x000000000004a01a : ret
0x000000000004a086 : ret
0x000000000004a0a5 : ret
0x000000000004a0bb : ret
0x000000000004a10e : ret
0x000000000004a146 : ret
0x000000000004a193 : ret
0x000000000004a1d9 : ret
0x000000000004a21e : ret
0x000000000004a320 : ret
0x000000000004a34a : ret
0x000000000004a4a2 : ret
0x000000000004a4a1 : ret
0x000000000004a4fc : ret
0x000000000004a5c4 : ret
0x000000000004a611 : ret
0x000000000004a610 : ret
0x000000000004a683 : ret
0x000000000004a69b : ret
0x000000000004a6f6 : ret
0x000000000004a77a : ret
0x000000000004a7f3 : ret
0x000000000004a80a : ret
0x000000000004a8e0 : ret
0x000000000004a9a6 : ret
0x000000000004aa7b : ret
0x000000000004aca3 : ret
0x000000000004acb8 : ret
0x000000000004ae2f : ret
0x000000000004b049 : ret
0x000000000004b120 : ret
0x000000000004b166 : ret
0x000000000004b2dd : ret
0x000000000004b689 : ret
0x000000000004b702 : ret
0x000000000004b795 : ret
0x000000000004b82d : ret
0x000000000004b848 : ret
0x000000000004b87c : ret
0x000000000004bab4 : ret
0x000000000004bc87 : ret
0x000000000004bca7 : ret
0x000000000004bcd5 : ret
0x000000000004bd24 : ret
0x000000000004bd63 : ret
0x000000000004bef4 : ret
0x000000000004bfb6 : ret
0x000000000004bfd4 : ret
0x000000000004c01a : ret
0x000000000004c4ea : ret
0x000000000004c5b7 : ret
0x000000000004c674 : ret
0x000000000004c741 : ret
0x000000000004c7d8 : ret
0x000000000004c7eb : ret
0x000000000004c8b5 : ret
0x000000000004c924 : ret
0x000000000004c93c : ret
0x000000000004c98c : ret
0x000000000004cb1a : ret
0x000000000004cb77 : ret
0x000000000004cf59 : ret
0x000000000004cfd0 : ret
0x000000000004d28a : ret
0x000000000004d33b : ret
0x000000000004d34b : ret
0x000000000004d386 : ret
0x000000000004d3b4 : ret
0x000000000004d6d8 : ret
0x000000000004d7df : ret
0x000000000004d7fd : ret
0x000000000004dc11 : ret
0x000000000004dc24 : ret
0x000000000004dc23 : ret
0x000000000004e1a9 : ret
0x000000000004e2c0 : ret
0x000000000004ed62 : ret
0x000000000004ee8c : ret
0x000000000004eedc : ret
0x000000000004ef28 : ret
0x000000000004ef8d : ret
0x000000000004f2c6 : ret
0x000000000004fffa : ret
0x00000000000500e6 : ret
0x000000000005016a : ret
0x000000000005019f : ret
0x00000000000501be : ret
0x00000000000503b3 : ret
0x000000000005044c : ret
0x00000000000504bd : ret
0x00000000000504bc : ret
0x00000000000504ca : ret
0x0000000000050972 : ret
0x0000000000050cd6 : ret
0x0000000000050e0c : ret
0x0000000000050e5e : ret
0x0000000000050eb8 : ret
0x0000000000050fc1 : ret
0x0000000000051345 : ret
0x000000000005137e : ret
0x0000000000051602 : ret
0x00000000000519e1 : ret
0x0000000000052c95 : ret
0x0000000000052ceb : ret
0x0000000000052dac : ret
0x0000000000052e0c : ret
0x0000000000053176 : ret
0x0000000000053309 : ret
0x0000000000053624 : ret
0x0000000000053623 : ret
0x000000000005362c : ret
0x000000000005362b : ret
0x0000000000053b2a : ret
0x0000000000053b30 : ret
0x00000000000548e1 : ret
0x0000000000054a7d : ret
0x0000000000054b92 : ret
0x0000000000054bb5 : ret
0x0000000000054cbe : ret
0x0000000000054cd6 : ret
0x0000000000054d8e : ret
0x0000000000054da4 : ret
0x0000000000054e57 : ret
0x0000000000054f6a : ret
0x0000000000055061 : ret
0x00000000000550c1 : ret
0x00000000000550d4 : ret
0x00000000000551c9 : ret
0x0000000000055276 : ret
0x000000000005542a : ret
0x000000000005546d : ret
0x0000000000055472 : ret
0x00000000000554f0 : ret
0x0000000000055587 : ret
0x000000000005576e : ret
0x00000000000557fe : ret
0x00000000000558a0 : ret
0x0000000000055939 : ret
0x00000000000559ce : ret
0x0000000000055a5e : ret
0x0000000000055aee : ret
0x0000000000055b39 : ret
0x0000000000055b90 : ret
0x0000000000055bff : ret
0x0000000000055cee : ret
0x0000000000055d0f : ret
0x0000000000055e1d : ret
0x0000000000055e5e : ret
0x0000000000055f3f : ret
0x0000000000056229 : ret
0x0000000000056344 : ret
0x0000000000056343 : ret
0x00000000000563e7 : ret
0x000000000005680b : ret
0x0000000000056846 : ret
0x000000000005688e : ret
0x0000000000056920 : ret
0x0000000000056a69 : ret
0x0000000000056aea : ret
0x0000000000056b85 : ret
0x0000000000056c37 : ret
0x0000000000057161 : ret
0x0000000000057316 : ret
0x0000000000057349 : ret
0x000000000005735c : ret
0x0000000000057454 : ret
0x00000000000574a1 : ret
0x00000000000575aa : ret
0x000000000005786e : ret
0x0000000000057bfd : ret
0x0000000000057c3e : ret
0x0000000000057cc6 : ret
0x0000000000057d3e : ret
0x0000000000057f46 : ret
0x00000000000580e6 : ret
0x0000000000058204 : ret
0x0000000000058288 : ret
0x000000000005839d : ret
0x0000000000058534 : ret
0x00000000000586bc : ret
0x00000000000586bb : ret
0x0000000000058ae6 : ret
0x0000000000058b0c : ret
0x0000000000058bf1 : ret
0x0000000000058eb3 : ret
0x0000000000058fbc : ret
0x00000000000592a1 : ret
0x0000000000059477 : ret
0x00000000000595a1 : ret
0x00000000000595c9 : ret
0x00000000000596fc : ret
0x000000000005971d : ret
0x0000000000059784 : ret
0x0000000000059f0f : ret
0x000000000005a4d9 : ret
0x000000000005a7ba : ret
0x000000000005aa9d : ret
0x000000000005ae2a : ret
0x000000000005af89 : ret
0x000000000005b77c : ret
0x000000000005b864 : ret
0x000000000005b863 : ret
0x000000000005bbb0 : ret
0x000000000005bc1b : ret
0x000000000005bce4 : ret
0x000000000005c33a : ret
0x000000000005c489 : ret
0x000000000005cc17 : ret
0x000000000005cd9c : ret
0x000000000005cdcd : ret
0x000000000005d213 : ret
0x000000000005d290 : ret
0x000000000005d538 : ret
0x000000000005d672 : ret
0x000000000005d6fa : ret
0x000000000005d9e8 : ret
0x000000000005da72 : ret
0x000000000005df15 : ret
0x000000000005e281 : ret
0x000000000005e5a3 : ret
0x000000000005e693 : ret
0x000000000005e797 : ret
0x000000000005e85f : ret
0x000000000005e8b9 : ret
0x000000000005ebf8 : ret
0x000000000005eec0 : ret
0x000000000005f06f : ret
0x000000000005f06e : ret
0x000000000005f4be : ret
0x000000000005f539 : ret
0x000000000005f637 : ret
0x000000000005f684 : ret
0x000000000005f7d3 : ret
0x00000000000609e3 : ret
0x00000000000609e6 : ret
0x00000000000609e3 : ret
0x0000000000060ae0 : ret
0x0000000000060aef : ret
0x0000000000060dbe : ret
0x0000000000060dc8 : ret
0x0000000000060f7f : ret
0x00000000000613ac : ret
0x0000000000061a42 : ret
0x0000000000061ded : ret
0x0000000000061e97 : ret
0x0000000000061f19 : ret
0x0000000000061f22 : ret
0x0000000000062038 : ret
0x000000000006205c : ret
0x00000000000623fb : ret
0x0000000000062423 : ret
0x0000000000062d52 : ret
0x00000000000634b8 : ret
0x00000000000634b7 : ret
0x0000000000063571 : ret
0x00000000000637b5 : ret
0x00000000000637fb : ret
0x0000000000063ad7 : ret
0x0000000000063c76 : ret
0x0000000000063dff : ret
0x0000000000064126 : ret
0x0000000000064138 : ret
0x00000000000641a5 : ret
0x000000000006432d : ret
0x000000000006470b : ret
0x00000000000649a7 : ret
0x00000000000649b0 : ret
0x0000000000064c6e : ret
0x0000000000064d4d : ret
0x0000000000064d5e : ret
0x0000000000064e99 : ret
0x0000000000064f31 : ret
0x00000000000652fb : ret
0x0000000000065897 : ret
0x00000000000658a0 : ret
0x0000000000065981 : ret
0x0000000000065ad0 : ret
0x0000000000065b91 : ret
0x00000000000662d1 : ret
0x00000000000662f2 : ret
0x0000000000066330 : ret
0x0000000000066509 : ret
0x0000000000066574 : ret
0x0000000000066595 : ret
0x00000000000668b7 : ret
0x00000000000668fe : ret
0x000000000006733d : ret
0x0000000000067584 : ret
0x00000000000675f5 : ret
0x0000000000067f56 : ret
0x0000000000068255 : ret
0x0000000000068470 : ret
0x00000000000684ee : ret
0x0000000000068882 : ret
0x0000000000068a41 : ret
0x0000000000068aca : ret
0x0000000000068cc3 : ret
0x0000000000068d5b : ret
0x0000000000068f4e : ret
0x00000000000695f0 : ret
0x0000000000069ad4 : ret
0x0000000000069cea : ret
0x0000000000069fad : ret
0x000000000006a7de : ret
0x000000000006a882 : ret
0x000000000006a91e : ret
0x000000000006a976 : ret
0x000000000006aad8 : ret
0x000000000006aaf9 : ret
0x000000000006ab4a : ret
0x000000000006abc5 : ret
0x000000000006abd4 : ret
0x000000000006abe6 : ret
0x000000000006ac4e : ret
0x000000000006ac58 : ret
0x000000000006ac8c : ret
0x000000000006acc7 : ret
0x000000000006acd3 : ret
0x000000000006acda : ret
0x000000000006ad2a : ret
0x000000000006ad3a : ret
0x000000000006ae00 : ret
0x000000000006b251 : ret
0x000000000006b2ed : ret
0x000000000006b31e : ret
0x000000000006b352 : ret
0x000000000006b36f : ret
0x000000000006b380 : ret
0x000000000006b3a2 : ret
0x000000000006b3b3 : ret
0x000000000006b41b : ret
0x000000000006b45d : ret
0x000000000006b45c : ret
0x000000000006b474 : ret
0x000000000006b47e : ret
0x000000000006b4c0 : ret
0x000000000006b4bf : ret
0x000000000006b636 : ret
0x000000000006b785 : ret
0x000000000006b940 : ret
0x000000000006ba6a : ret
0x000000000006bb5e : ret
0x000000000006bbd9 : ret
0x000000000006bc1a : ret
0x000000000006bcf4 : ret
0x000000000006bcfa : ret
0x000000000006bd24 : ret
0x000000000006bf99 : ret
0x000000000006c480 : ret
0x000000000006c4aa : ret
0x000000000006c6dc : ret
0x000000000006c86c : ret
0x000000000006cb90 : ret
0x000000000006cc12 : ret
0x000000000006d12a : ret
0x000000000006d14c : ret
0x000000000006d203 : ret
0x000000000006d369 : ret
0x000000000006d39c : ret
0x000000000006d41d : ret
0x000000000006d507 : ret
0x000000000006d5de : ret
0x000000000006d833 : ret
0x000000000006d87a : ret
0x000000000006d9e8 : ret
0x000000000006da17 : ret
0x000000000006db9c : ret
0x000000000006dc0e : ret
0x000000000006dcbe : ret
0x000000000006dcbd : ret
0x000000000006dcd9 : ret
0x000000000006dce4 : ret
0x000000000006dd69 : ret
0x000000000006ddaf : ret
0x000000000006ddec : ret
0x000000000006ddf3 : ret
0x000000000006de3e : ret
0x000000000006de7a : ret
0x000000000006df40 : ret
0x000000000006df86 : ret
0x000000000006dfb6 : ret
0x000000000006dff0 : ret
0x000000000006e0e0 : ret
0x000000000006e13f : ret
0x000000000006e297 : ret
0x000000000006e2ac : ret
0x000000000006e2bd : ret
0x000000000006e3c3 : ret
0x000000000006e40f : ret
0x000000000006e53f : ret
0x000000000006e57b : ret
0x000000000006e6c0 : ret
0x000000000006e79f : ret
0x000000000006e7d1 : ret
0x000000000006e7e4 : ret
0x000000000006e7f2 : ret
0x000000000006e878 : ret
0x000000000006e9bd : ret
0x000000000006eca6 : ret
0x000000000006ecff : ret
0x000000000006ee7e : ret
0x000000000006eece : ret
0x000000000006efd4 : ret
0x000000000006f000 : ret
0x000000000006f0c2 : ret
0x000000000006f1ae : ret
0x000000000006f1bb : ret
0x000000000006f29b : ret
0x000000000006f29a : ret
0x000000000006f2fb : ret
0x000000000006f61f : ret
0x000000000006f66c : ret
0x000000000006f6a5 : ret
0x000000000006f73a : ret
0x000000000006f75f : ret
0x000000000006f780 : ret
0x000000000006f7e0 : ret
0x000000000006f92d : ret
0x000000000006fa1e : ret
0x000000000006fa6a : ret
0x000000000006fc89 : ret
0x000000000006fdc9 : ret
0x000000000006fe13 : ret
0x000000000006ff63 : ret
0x000000000006ff87 : ret
0x000000000006ffd1 : ret
0x00000000000700f3 : ret
0x000000000007010c : ret
0x0000000000070152 : ret
0x000000000007015a : ret
0x00000000000701eb : ret
0x0000000000070209 : ret
0x0000000000070284 : ret
0x000000000007033f : ret
0x0000000000070394 : ret
0x0000000000070444 : ret
0x0000000000070453 : ret
0x00000000000704b9 : ret
0x00000000000704fc : ret
0x0000000000070542 : ret
0x00000000000705ce : ret
0x0000000000070649 : ret
0x000000000007067e : ret
0x00000000000706c2 : ret
0x0000000000070755 : ret
0x000000000007083c : ret
0x00000000000708b1 : ret
0x0000000000070989 : ret
0x00000000000709c2 : ret
0x0000000000070a7e : ret
0x0000000000070ac5 : ret
0x0000000000070b75 : ret
0x0000000000070b89 : ret
0x0000000000070bf9 : ret
0x0000000000070c9a : ret
0x0000000000070cb2 : ret
0x0000000000070d07 : ret
0x0000000000070e34 : ret
0x0000000000070e60 : ret
0x0000000000070f0c : ret
0x0000000000070f57 : ret
0x0000000000070ff3 : ret
0x000000000007103b : ret
0x00000000000710d5 : ret
0x0000000000071195 : ret
0x00000000000711e2 : ret
0x0000000000071279 : ret
0x000000000007132c : ret
0x0000000000071372 : ret
0x0000000000071400 : ret
0x00000000000714ae : ret
0x0000000000071539 : ret
0x0000000000071600 : ret
0x00000000000716b2 : ret
0x000000000007174e : ret
0x00000000000717d3 : ret
0x000000000007186f : ret
0x0000000000071893 : ret
0x0000000000071919 : ret
0x00000000000719ae : ret
0x0000000000071a6b : ret
0x0000000000071c04 : ret
0x0000000000071c03 : ret
0x0000000000071c40 : ret
0x0000000000071c3f : ret
0x0000000000071c3e : ret
0x0000000000071c80 : ret
0x0000000000071c7f : ret
0x0000000000071c7e : ret
0x0000000000071ccc : ret
0x0000000000071d85 : ret
0x0000000000071e2c : ret
0x0000000000071f8d : ret
0x0000000000072075 : ret
0x0000000000072099 : ret
0x00000000000720aa : ret
0x000000000007216a : ret
0x0000000000072235 : ret
0x0000000000072259 : ret
0x0000000000072293 : ret
0x0000000000072513 : ret
0x0000000000072606 : ret
0x0000000000072776 : ret
0x000000000007284e : ret
0x0000000000072aae : ret
0x0000000000072adf : ret
0x0000000000072b84 : ret
0x0000000000072be1 : ret
0x0000000000072c7f : ret
0x0000000000072cc3 : ret
0x0000000000072d07 : ret
0x0000000000072d61 : ret
0x0000000000072d73 : ret
0x0000000000072dc3 : ret
0x0000000000072e78 : ret
0x0000000000072e8d : ret
0x0000000000072e93 : ret
0x0000000000072ef6 : ret
0x0000000000072ef5 : ret
0x0000000000072fb2 : ret
0x0000000000072fd9 : ret
0x0000000000072fd8 : ret
0x0000000000072fec : ret
0x0000000000073029 : ret
0x0000000000073028 : ret
0x0000000000073032 : ret
0x0000000000073061 : ret
0x00000000000730e1 : ret
0x00000000000731f4 : ret
0x000000000007323f : ret
0x00000000000733da : ret
0x00000000000734ae : ret
0x00000000000734fc : ret
0x0000000000073585 : ret
0x00000000000735b3 : ret
0x000000000007363a : ret
0x000000000007365a : ret
0x0000000000073758 : ret
0x0000000000073a94 : ret
0x0000000000073b72 : ret
0x0000000000073ba5 : ret
0x0000000000073c8b : ret
0x0000000000073ca8 : ret
0x0000000000073e5b : ret
0x0000000000073f95 : ret
0x000000000007403c : ret
0x0000000000074080 : ret
0x000000000007408b : ret
0x000000000007409f : ret
0x0000000000074146 : ret
0x000000000007415a : ret
0x0000000000074180 : ret
0x000000000007442d : ret
0x00000000000745fc : ret
0x0000000000074602 : ret
0x0000000000074638 : ret
0x0000000000074658 : ret
0x000000000007469f : ret
0x0000000000074826 : ret
0x000000000007486b : ret
0x00000000000748bf : ret
0x00000000000749a0 : ret
0x00000000000749ba : ret
0x0000000000074b57 : ret
0x0000000000074b88 : ret
0x0000000000074d1b : ret
0x0000000000074d1a : ret
0x0000000000074e14 : ret
0x0000000000074e53 : ret
0x0000000000074e5a : ret
0x0000000000074e73 : ret
0x0000000000074f54 : ret
0x0000000000074f5d : ret
0x0000000000074f62 : ret
0x0000000000074f77 : ret
0x0000000000074f76 : ret
0x0000000000074f75 : ret
0x0000000000075026 : ret
0x0000000000075041 : ret
0x000000000007505a : ret
0x00000000000750f6 : ret
0x000000000007510f : ret
0x0000000000075120 : ret
0x00000000000751e8 : ret
0x0000000000075201 : ret
0x000000000007521a : ret
0x00000000000752b0 : ret
0x0000000000075456 : ret
0x00000000000754ce : ret
0x0000000000075518 : ret
0x0000000000075669 : ret
0x0000000000075745 : ret
0x00000000000757e4 : ret
0x00000000000758bd : ret
0x00000000000758c5 : ret
0x00000000000758d1 : ret
0x00000000000758d0 : ret
0x00000000000759a8 : ret
0x00000000000759b8 : ret
0x0000000000075a98 : ret
0x0000000000075aa8 : ret
0x0000000000075ae0 : ret
0x0000000000075adf : ret
0x0000000000075afb : ret
0x0000000000075b8a : ret
0x0000000000075bd2 : ret
0x0000000000075dfe : ret
0x0000000000075f8f : ret
0x0000000000075fd2 : ret
0x00000000000760b3 : ret
0x00000000000760fa : ret
0x00000000000761f5 : ret
0x0000000000076242 : ret
0x00000000000762e4 : ret
0x0000000000076395 : ret
0x0000000000076420 : ret
0x00000000000764da : ret
0x0000000000076522 : ret
0x0000000000076652 : ret
0x000000000007670f : ret
0x0000000000076776 : ret
0x00000000000767c9 : ret
0x0000000000076914 : ret
0x00000000000769cd : ret
0x0000000000076a4b : ret
0x0000000000076a6e : ret
0x0000000000076b0d : ret
0x0000000000076b3f : ret
0x0000000000076bac : ret
0x0000000000076ca9 : ret
0x0000000000076ccc : ret
0x0000000000076dde : ret
0x0000000000076e7f : ret
0x0000000000076ec2 : ret
0x0000000000076fbf : ret
0x0000000000076ffb : ret
0x000000000007729b : ret
0x00000000000773bd : ret
0x00000000000773c8 : ret
0x00000000000773eb : ret
0x00000000000773f6 : ret
0x00000000000773f5 : ret
0x0000000000077407 : ret
0x0000000000077418 : ret
0x0000000000077428 : ret
0x0000000000077437 : ret
0x000000000007746d : ret
0x0000000000077499 : ret
0x00000000000774cd : ret
0x00000000000774d8 : ret
0x0000000000077500 : ret
0x00000000000774ff : ret
0x00000000000775f1 : ret
0x0000000000077643 : ret
0x00000000000776ea : ret
0x0000000000077718 : ret
0x0000000000077761 : ret
0x0000000000077823 : ret
0x000000000007783f : ret
0x0000000000077873 : ret
0x000000000007789e : ret
0x0000000000077939 : ret
0x000000000007796a : ret
0x00000000000779cd : ret
0x0000000000077a0f : ret
0x0000000000077a89 : ret
0x0000000000077aa6 : ret
0x0000000000077b5c : ret
0x0000000000077ba3 : ret
0x0000000000077bbf : ret
0x0000000000077c0e : ret
0x0000000000077c67 : ret
0x0000000000077c91 : ret
0x0000000000077cc4 : ret
0x0000000000077d19 : ret
0x0000000000077d40 : ret
0x0000000000077d58 : ret
0x0000000000077d8d : ret
0x0000000000077e35 : ret
0x0000000000077eb4 : ret
0x0000000000077ef3 : ret
0x0000000000077f08 : ret
0x0000000000077f18 : ret
0x0000000000077f3c : ret
0x0000000000077f65 : ret
0x0000000000077f9c : ret
0x0000000000077fd1 : ret
0x0000000000077ffc : ret
0x000000000007808b : ret
0x00000000000780d2 : ret
0x0000000000078166 : ret
0x0000000000078186 : ret
0x0000000000078192 : ret
0x00000000000781d5 : ret
0x0000000000078269 : ret
0x00000000000782a2 : ret
0x00000000000782f7 : ret
0x000000000007830e : ret
0x000000000007832e : ret
0x0000000000078338 : ret
0x0000000000078365 : ret
0x0000000000078364 : ret
0x00000000000783a3 : ret
0x00000000000783c7 : ret
0x0000000000078423 : ret
0x000000000007845e : ret
0x0000000000078492 : ret
0x00000000000784bc : ret
0x00000000000785b1 : ret
0x0000000000078969 : ret
0x00000000000789bf : ret
0x00000000000789d9 : ret
0x0000000000078a69 : ret
0x0000000000078bea : ret
0x0000000000078c06 : ret
0x0000000000078ded : ret
0x0000000000078e93 : ret
0x0000000000078fc1 : ret
0x0000000000079046 : ret
0x000000000007906f : ret
0x0000000000079132 : ret
0x0000000000079160 : ret
0x00000000000791c9 : ret
0x00000000000791d1 : ret
0x00000000000791d0 : ret
0x0000000000079270 : ret
0x000000000007926f : ret
0x0000000000079515 : ret
0x000000000007961d : ret
0x00000000000796d1 : ret
0x000000000007978f : ret
0x000000000007983b : ret
0x000000000007994b : ret
0x000000000007994a : ret
0x0000000000079aa5 : ret
0x0000000000079b79 : ret
0x0000000000079ba8 : ret
0x0000000000079fc6 : ret
0x000000000007a171 : ret
0x000000000007a369 : ret
0x000000000007a372 : ret
0x000000000007a397 : ret
0x000000000007a45b : ret
0x000000000007a616 : ret
0x000000000007a623 : ret
0x000000000007a677 : ret
0x000000000007a6d8 : ret
0x000000000007a794 : ret
0x000000000007a8e8 : ret
0x000000000007a9ce : ret
0x000000000007a9cd : ret
0x000000000007abb5 : ret
0x000000000007abb4 : ret
0x000000000007ae64 : ret
0x000000000007ae63 : ret
0x000000000007aee9 : ret
0x000000000007af44 : ret
0x000000000007af43 : ret
0x000000000007af7d : ret
0x000000000007afdb : ret
0x000000000007b0e9 : ret
0x000000000007b13a : ret
0x000000000007b16a : ret
0x000000000007b1ab : ret
0x000000000007b213 : ret
0x000000000007b2bb : ret
0x000000000007b2d9 : ret
0x000000000007b40b : ret
0x000000000007b431 : ret
0x000000000007b533 : ret
0x000000000007b567 : ret
0x000000000007b59d : ret
0x000000000007b5e1 : ret
0x000000000007b5f5 : ret
0x000000000007b623 : ret
0x000000000007b684 : ret
0x000000000007b6e6 : ret
0x000000000007b6f2 : ret
0x000000000007b803 : ret
0x000000000007b9b8 : ret
0x000000000007ba6b : ret
0x000000000007bb22 : ret
0x000000000007bb21 : ret
0x000000000007bbd5 : ret
0x000000000007bc02 : ret
0x000000000007bc69 : ret
0x000000000007be33 : ret
0x000000000007bf47 : ret
0x000000000007bf80 : ret
0x000000000007bfbe : ret
0x000000000007bfd5 : ret
0x000000000007c011 : ret
0x000000000007c01f : ret
0x000000000007c078 : ret
0x000000000007c25f : ret
0x000000000007c445 : ret
0x000000000007c726 : ret
0x000000000007c79a : ret
0x000000000007c849 : ret
0x000000000007c848 : ret
0x000000000007c847 : ret
0x000000000007c854 : ret
0x000000000007c866 : ret
0x000000000007c88d : ret
0x000000000007c898 : ret
0x000000000007c89e : ret
0x000000000007c8d8 : ret
0x000000000007c909 : ret
0x000000000007c944 : ret
0x000000000007c966 : ret
0x000000000007c965 : ret
0x000000000007c9c7 : ret
0x000000000007cab7 : ret
0x000000000007cac5 : ret
0x000000000007cad7 : ret
0x000000000007cae2 : ret
0x000000000007caf5 : ret
0x000000000007cb01 : ret
0x000000000007cb00 : ret
0x000000000007cb17 : ret
0x000000000007cb22 : ret
0x000000000007cb34 : ret
0x000000000007cb43 : ret
0x000000000007cbaf : ret
0x000000000007cbfb : ret
0x000000000007cbfa : ret
0x000000000007cc1f : ret
0x000000000007cc50 : ret
0x000000000007cc75 : ret
0x000000000007cc91 : ret
0x000000000007cdbf : ret
0x000000000007ce32 : ret
0x000000000007cf95 : ret
0x000000000007d037 : ret
0x000000000007d0ac : ret
0x000000000007d0c1 : ret
0x000000000007d13c : ret
0x000000000007d154 : ret
0x000000000007d1c0 : ret
0x000000000007d1e2 : ret
0x000000000007d1e9 : ret
0x000000000007d272 : ret
0x000000000007d363 : ret
0x000000000007d3a0 : ret
0x000000000007d47f : ret
0x000000000007d4fb : ret
0x000000000007d558 : ret
0x000000000007d562 : ret
0x000000000007d57d : ret
0x000000000007d72b : ret
0x000000000007d77c : ret
0x000000000007d795 : ret
0x000000000007d820 : ret
0x000000000007d885 : ret
0x000000000007d898 : ret
0x000000000007d9bc : ret
0x000000000007db30 : ret
0x000000000007db73 : ret
0x000000000007df39 : ret
0x000000000007df42 : ret
0x000000000007df8e : ret
0x000000000007e04d : ret
0x000000000007e0ac : ret
0x000000000007e0fa : ret
0x000000000007e227 : ret
0x000000000007e245 : ret
0x000000000007e46c : ret
0x000000000007e509 : ret
0x000000000007e528 : ret
0x000000000007e552 : ret
0x000000000007e5ca : ret
0x000000000007e5fd : ret
0x000000000007e607 : ret
0x000000000007ead1 : ret
0x000000000007eb13 : ret
0x000000000007eb58 : ret
0x000000000007ee9d : ret
0x000000000007eed6 : ret
0x000000000007eedd : ret
0x000000000007ef0d : ret
0x000000000007ef59 : ret
0x000000000007f0c2 : ret
0x000000000007f0ca : ret
0x000000000007f107 : ret
0x000000000007f160 : ret
0x000000000007f1f1 : ret
0x000000000007f35d : ret
0x000000000007f35c : ret
0x000000000007f41a : ret
0x000000000007f532 : ret
0x000000000007f5e4 : ret
0x000000000007f60b : ret
0x000000000007fc55 : ret
0x000000000007fdb9 : ret
0x000000000007fe59 : ret
0x000000000007feb1 : ret
0x000000000007ff39 : ret
0x00000000000802b9 : ret
0x00000000000802ce : ret
0x0000000000080320 : ret
0x0000000000080347 : ret
0x0000000000080388 : ret
0x0000000000080aba : ret
0x00000000000812c8 : ret
0x00000000000812f8 : ret
0x00000000000813e7 : ret
0x00000000000819e9 : ret
0x0000000000081b11 : ret
0x0000000000081bdb : ret
0x0000000000081bda : ret
0x0000000000081be0 : ret
0x0000000000081c58 : ret
0x0000000000081c57 : ret
0x0000000000081c95 : ret
0x0000000000081d8e : ret
0x0000000000081d8d : ret
0x0000000000081e44 : ret
0x0000000000081e43 : ret
0x0000000000081ec6 : ret
0x000000000008217f : ret
0x00000000000822d7 : ret
0x000000000008230f : ret
0x000000000008230e : ret
0x00000000000823d4 : ret
0x0000000000082424 : ret
0x000000000008249e : ret
0x0000000000082594 : ret
0x00000000000825f8 : ret
0x000000000008261f : ret
0x0000000000082ceb : ret
0x0000000000082d79 : ret
0x0000000000082d90 : ret
0x0000000000082f18 : ret
0x0000000000082f30 : ret
0x0000000000082f3b : ret
0x0000000000083095 : ret
0x00000000000831f1 : ret
0x0000000000083361 : ret
0x00000000000833bb : ret
0x0000000000083450 : ret
0x0000000000083477 : ret
0x0000000000083c1e : ret
0x0000000000083d6e : ret
0x0000000000083f8f : ret
0x0000000000083f8e : ret
0x0000000000084015 : ret
0x0000000000084014 : ret
0x00000000000840b1 : ret
0x00000000000840b0 : ret
0x0000000000084118 : ret
0x000000000008412a : ret
0x0000000000084172 : ret
0x00000000000841e8 : ret
0x00000000000841f5 : ret
0x0000000000084252 : ret
0x000000000008427c : ret
0x00000000000842e6 : ret
0x00000000000844e6 : ret
0x00000000000844ea : ret
0x0000000000084546 : ret
0x00000000000845db : ret
0x00000000000845f1 : ret
0x000000000008460d : ret
0x000000000008478f : ret
0x0000000000084935 : ret
0x00000000000849ab : ret
0x00000000000849d2 : ret
0x0000000000084bad : ret
0x0000000000084d89 : ret
0x0000000000084da5 : ret
0x0000000000084e52 : ret
0x0000000000084f51 : ret
0x0000000000084ff7 : ret
0x00000000000850ad : ret
0x00000000000850c2 : ret
0x00000000000850e9 : ret
0x00000000000851a4 : ret
0x0000000000085225 : ret
0x0000000000085259 : ret
0x000000000008527d : ret
0x00000000000852d6 : ret
0x0000000000085377 : ret
0x0000000000085585 : ret
0x0000000000085721 : ret
0x000000000008581b : ret
0x000000000008581a : ret
0x0000000000085886 : ret
0x0000000000085889 : ret
0x0000000000085886 : ret
0x0000000000085909 : ret
0x0000000000085962 : ret
0x000000000008598c : ret
0x0000000000085ae1 : ret
0x0000000000085af6 : ret
0x0000000000085cc5 : ret
0x0000000000085d23 : ret
0x0000000000085d4a : ret
0x0000000000085f4a : ret
0x000000000008652c : ret
0x00000000000865e1 : ret
0x00000000000865e8 : ret
0x0000000000086736 : ret
0x00000000000867f2 : ret
0x0000000000086a16 : ret
0x0000000000086a80 : ret
0x0000000000086b76 : ret
0x0000000000086c78 : ret
0x0000000000086f7c : ret
0x000000000008715c : ret
0x0000000000087563 : ret
0x000000000008760b : ret
0x0000000000087799 : ret
0x00000000000877a5 : ret
0x00000000000878a9 : ret
0x00000000000878da : ret
0x0000000000087a66 : ret
0x0000000000087abd : ret
0x0000000000087ad4 : ret
0x0000000000087bc1 : ret
0x0000000000087bdd : ret
0x0000000000087c93 : ret
0x0000000000087e7d : ret
0x000000000008810f : ret
0x00000000000881c5 : ret
0x000000000008837a : ret
0x000000000008848b : ret
0x0000000000088500 : ret
0x000000000008850a : ret
0x0000000000088523 : ret
0x00000000000885e9 : ret
0x00000000000885f9 : ret
0x00000000000886aa : ret
0x00000000000886b5 : ret
0x000000000008870f : ret
0x0000000000088744 : ret
0x000000000008874d : ret
0x0000000000088848 : ret
0x0000000000088847 : ret
0x0000000000088a12 : ret
0x0000000000088bc8 : ret
0x0000000000088bc7 : ret
0x0000000000088cdb : ret
0x0000000000088d68 : ret
0x0000000000088d67 : ret
0x0000000000088d81 : ret
0x0000000000088ee4 : ret
0x0000000000088f11 : ret
0x0000000000088f10 : ret
0x0000000000088f2a : ret
0x0000000000088f47 : ret
0x0000000000089088 : ret
0x0000000000089131 : ret
0x00000000000891fd : ret
0x00000000000892b2 : ret
0x00000000000893d9 : ret
0x00000000000894c8 : ret
0x00000000000895d4 : ret
0x00000000000895d3 : ret
0x00000000000895dd : ret
0x00000000000895df : ret
0x00000000000895de : ret
0x0000000000089654 : ret
0x000000000008967e : ret
0x000000000008967d : ret
0x000000000008967c : ret
0x0000000000089680 : ret
0x000000000008967f : ret
0x00000000000896d9 : ret
0x0000000000089703 : ret
0x000000000008975c : ret
0x0000000000089822 : ret
0x0000000000089861 : ret
0x00000000000898b4 : ret
0x0000000000089a7b : ret
0x0000000000089aa1 : ret
0x0000000000089b06 : ret
0x0000000000089b55 : ret
0x0000000000089bfa : ret
0x0000000000089c24 : ret
0x0000000000089c57 : ret
0x0000000000089c70 : ret
0x0000000000089c9f : ret
0x0000000000089d04 : ret
0x0000000000089f43 : ret
0x000000000008a083 : ret
0x000000000008a1c3 : ret
0x000000000008a303 : ret
0x000000000008a443 : ret
0x000000000008a583 : ret
0x000000000008a6c3 : ret
0x000000000008a803 : ret
0x000000000008a943 : ret
0x000000000008aa83 : ret
0x000000000008abc3 : ret
0x000000000008ad03 : ret
0x000000000008ae43 : ret
0x000000000008af83 : ret
0x000000000008b0c3 : ret
0x000000000008b12e : ret
0x000000000008b131 : ret
0x000000000008b148 : ret
0x000000000008b194 : ret
0x000000000008b27b : ret
0x000000000008b2a1 : ret
0x000000000008b346 : ret
0x000000000008b41a : ret
0x000000000008b422 : ret
0x000000000008b45a : ret
0x000000000008b461 : ret
0x000000000008b460 : ret
0x000000000008b4b0 : ret
0x000000000008b4d4 : ret
0x000000000008b508 : ret
0x000000000008b528 : ret
0x000000000008b5fa : ret
0x000000000008b656 : ret
0x000000000008b691 : ret
0x000000000008b6ec : ret
0x000000000008b759 : ret
0x000000000008b7a6 : ret
0x000000000008b803 : ret
0x000000000008b837 : ret
0x000000000008b85a : ret
0x000000000008b8bb : ret
0x000000000008b8c8 : ret
0x000000000008b966 : ret
0x000000000008b9d2 : ret
0x000000000008b9e3 : ret
0x000000000008ba1f : ret
0x000000000008ba32 : ret
0x000000000008ba80 : ret
0x000000000008bad7 : ret
0x000000000008bb14 : ret
0x000000000008bb60 : ret
0x000000000008be23 : ret
0x000000000008bfa3 : ret
0x000000000008c123 : ret
0x000000000008c2a3 : ret
0x000000000008c423 : ret
0x000000000008c5a3 : ret
0x000000000008c723 : ret
0x000000000008c8a3 : ret
0x000000000008ca23 : ret
0x000000000008cba3 : ret
0x000000000008cd23 : ret
0x000000000008cea3 : ret
0x000000000008d023 : ret
0x000000000008d1a3 : ret
0x000000000008d323 : ret
0x000000000008d3a3 : ret
0x000000000008d3a6 : ret
0x000000000008d3b8 : ret
0x000000000008d3f4 : ret
0x000000000008d45d : ret
0x000000000008d497 : ret
0x000000000008d4ec : ret
0x000000000008d530 : ret
0x000000000008d56a : ret
0x000000000008d5f0 : ret
0x000000000008d612 : ret
0x000000000008d6e1 : ret
0x000000000008d711 : ret
0x000000000008d7bb : ret
0x000000000008d7e0 : ret
0x000000000008d814 : ret
0x000000000008d837 : ret
0x000000000008d8bc : ret
0x000000000008d908 : ret
0x000000000008d96b : ret
0x000000000008d9e6 : ret
0x000000000008d9f8 : ret
0x000000000008da3b : ret
0x000000000008daa1 : ret
0x000000000008db46 : ret
0x000000000008dff7 : ret
0x000000000008e0a5 : ret
0x000000000008e138 : ret
0x000000000008e151 : ret
0x000000000008e1e6 : ret
0x000000000008e4a3 : ret
0x000000000008e650 : ret
0x000000000008e745 : ret
0x000000000008e840 : ret
0x000000000008e8fc : ret
0x000000000008e955 : ret
0x000000000008e9bf : ret
0x000000000008e9d4 : ret
0x000000000008ea62 : ret
0x000000000008ea77 : ret
0x000000000008eabb : ret
0x000000000008eae2 : ret
0x000000000008eb1e : ret
0x000000000008eb28 : ret
0x000000000008eb36 : ret
0x000000000008eb48 : ret
0x000000000008eb58 : ret
0x000000000008eb6b : ret
0x000000000008eb7d : ret
0x000000000008eb8d : ret
0x000000000008eb9d : ret
0x000000000008eba3 : ret
0x000000000008ebca : ret
0x000000000008ebde : ret
0x000000000008ebe6 : ret
0x000000000008ecc8 : ret
0x000000000008ecd0 : ret
0x000000000008ecee : ret
0x000000000008ecf2 : ret
0x000000000008eebc : ret
0x000000000008f075 : ret
0x000000000008f0a4 : ret
0x000000000008f139 : ret
0x000000000008f1a1 : ret
0x000000000008f1a0 : ret
0x000000000008f1f0 : ret
0x000000000008f275 : ret
0x000000000008f274 : ret
0x000000000008f28b : ret
0x000000000008f2ed : ret
0x000000000008f2ec : ret
0x000000000008f312 : ret
0x000000000008f319 : ret
0x000000000008f322 : ret
0x000000000008f356 : ret
0x000000000008f397 : ret
0x000000000008f42e : ret
0x000000000008f4dc : ret
0x000000000008f518 : ret
0x000000000008f702 : ret
0x000000000008f762 : ret
0x000000000008f766 : ret
0x000000000008f762 : ret
0x000000000008f76b : ret
0x000000000008f762 : ret
0x000000000008f770 : ret
0x000000000008f775 : ret
0x000000000008f77a : ret
0x000000000008f77f : ret
0x000000000008f784 : ret
0x000000000008f7a9 : ret
0x000000000008f7ae : ret
0x000000000008f7a9 : ret
0x000000000008f7b3 : ret
0x000000000008f7ae : ret
0x000000000008f7b8 : ret
0x000000000008f7bd : ret
0x000000000008f7c2 : ret
0x000000000008f7c7 : ret
0x000000000008f7c2 : ret
0x000000000008f7cc : ret
0x000000000008f801 : ret
0x000000000008f82e : ret
0x000000000008f840 : ret
0x000000000008f884 : ret
0x000000000008f96b : ret
0x000000000008f9a4 : ret
0x000000000008f9f0 : ret
0x000000000008fa53 : ret
0x000000000008fed3 : ret
0x00000000000900e3 : ret
0x00000000000902f3 : ret
0x0000000000090503 : ret
0x0000000000090713 : ret
0x0000000000090923 : ret
0x0000000000090b33 : ret
0x0000000000090d43 : ret
0x0000000000090f53 : ret
0x0000000000091163 : ret
0x0000000000091373 : ret
0x0000000000091583 : ret
0x0000000000091793 : ret
0x00000000000919a3 : ret
0x0000000000091bb3 : ret
0x0000000000091c7b : ret
0x0000000000091c7e : ret
0x0000000000091c95 : ret
0x0000000000091ce0 : ret
0x0000000000091d43 : ret
0x0000000000092233 : ret
0x0000000000092483 : ret
0x00000000000926d3 : ret
0x0000000000092923 : ret
0x0000000000092b73 : ret
0x0000000000092dc3 : ret
0x0000000000093013 : ret
0x0000000000093263 : ret
0x00000000000934b3 : ret
0x0000000000093703 : ret
0x0000000000093953 : ret
0x0000000000093ba3 : ret
0x0000000000093df3 : ret
0x0000000000094043 : ret
0x0000000000094293 : ret
0x0000000000094370 : ret
0x0000000000094373 : ret
0x0000000000094395 : ret
0x00000000000943ec : ret
0x0000000000094416 : ret
0x000000000009442a : ret
0x0000000000094445 : ret
0x0000000000094459 : ret
0x00000000000944ec : ret
0x00000000000944eb : ret
0x00000000000945af : ret
0x00000000000945ae : ret
0x00000000000945eb : ret
0x00000000000945ea : ret
0x00000000000947d5 : ret
0x00000000000947d4 : ret
0x0000000000094832 : ret
0x0000000000094836 : ret
0x0000000000094832 : ret
0x000000000009483b : ret
0x0000000000094832 : ret
0x0000000000094840 : ret
0x0000000000094845 : ret
0x000000000009484a : ret
0x000000000009484f : ret
0x0000000000094854 : ret
0x0000000000094879 : ret
0x000000000009487e : ret
0x0000000000094879 : ret
0x0000000000094883 : ret
0x000000000009487e : ret
0x0000000000094888 : ret
0x000000000009488d : ret
0x0000000000094892 : ret
0x0000000000094897 : ret
0x0000000000094892 : ret
0x000000000009489c : ret
0x00000000000948d4 : ret
0x00000000000948d3 : ret
0x0000000000094a1c : ret
0x0000000000094a1b : ret
0x0000000000094a9a : ret
0x0000000000094cd5 : ret
0x0000000000094cd4 : ret
0x0000000000094cfd : ret
0x0000000000094d66 : ret
0x0000000000094e7f : ret
0x0000000000094e9c : ret
0x0000000000094f39 : ret
0x0000000000094f7b : ret
0x0000000000094f83 : ret
0x0000000000094f90 : ret
0x0000000000095421 : ret
0x000000000009543c : ret
0x00000000000954d8 : ret
0x0000000000095528 : ret
0x0000000000095547 : ret
0x0000000000095708 : ret
0x0000000000095789 : ret
0x0000000000095788 : ret
0x00000000000957ff : ret
0x000000000009585d : ret
0x00000000000959bb : ret
0x00000000000959ba : ret
0x00000000000959e7 : ret
0x0000000000095a4f : ret
0x0000000000095a64 : ret
0x0000000000095c47 : ret
0x0000000000095d00 : ret
0x0000000000095d09 : ret
0x0000000000095d08 : ret
0x0000000000095d11 : ret
0x0000000000095d10 : ret
0x0000000000095fab : ret
0x0000000000095ff6 : ret
0x0000000000096152 : ret
0x00000000000961ee : ret
0x0000000000096217 : ret
0x0000000000096236 : ret
0x0000000000096260 : ret
0x00000000000962e7 : ret
0x000000000009631c : ret
0x000000000009638d : ret
0x00000000000963d3 : ret
0x00000000000964e5 : ret
0x0000000000096543 : ret
0x00000000000965b3 : ret
0x0000000000096605 : ret
0x0000000000096665 : ret
0x000000000009667a : ret
0x00000000000966f0 : ret
0x0000000000096701 : ret
0x0000000000096718 : ret
0x0000000000096726 : ret
0x0000000000096738 : ret
0x0000000000096748 : ret
0x0000000000096753 : ret
0x00000000000967aa : ret
0x00000000000967fd : ret
0x00000000000968aa : ret
0x00000000000968c8 : ret
0x00000000000968f7 : ret
0x0000000000096910 : ret
0x000000000009693f : ret
0x00000000000969d0 : ret
0x0000000000096a4f : ret
0x0000000000096ac9 : ret
0x0000000000096b61 : ret
0x0000000000096b83 : ret
0x0000000000096bb0 : ret
0x0000000000096bda : ret
0x0000000000096c14 : ret
0x0000000000096c2b : ret
0x0000000000096c7b : ret
0x0000000000096c7a : ret
0x0000000000096ce9 : ret
0x0000000000096d28 : ret
0x0000000000096e44 : ret
0x0000000000096e43 : ret
0x0000000000096eac : ret
0x0000000000096ed4 : ret
0x0000000000096eee : ret
0x0000000000096f47 : ret
0x0000000000096fd0 : ret
0x0000000000096ff4 : ret
0x0000000000097008 : ret
0x000000000009700f : ret
0x0000000000097049 : ret
0x0000000000097146 : ret
0x00000000000971cf : ret
0x000000000009727e : ret
0x0000000000097320 : ret
0x0000000000097327 : ret
0x000000000009735d : ret
0x000000000009738a : ret
0x00000000000973d0 : ret
0x0000000000097431 : ret
0x000000000009748e : ret
0x00000000000974c0 : ret
0x00000000000974c7 : ret
0x0000000000097521 : ret
0x00000000000975a8 : ret
0x00000000000976dc : ret
0x0000000000097861 : ret
0x00000000000978cf : ret
0x0000000000097928 : ret
0x000000000009796b : ret
0x000000000009796a : ret
0x000000000009796d : ret
0x0000000000097b30 : ret
0x0000000000097b75 : ret
0x0000000000097d0a : ret
0x0000000000097e25 : ret
0x0000000000097fba : ret
0x000000000009806b : ret
0x0000000000098085 : ret
0x00000000000981d2 : ret
0x00000000000983f0 : ret
0x0000000000098465 : ret
0x00000000000987d8 : ret
0x00000000000989c5 : ret
0x00000000000989f9 : ret
0x0000000000098b3e : ret
0x0000000000098f9a : ret
0x0000000000099086 : ret
0x00000000000991c1 : ret
0x0000000000099342 : ret
0x0000000000099569 : ret
0x0000000000099714 : ret
0x0000000000099b83 : ret
0x0000000000099b82 : ret
0x0000000000099bfa : ret
0x0000000000099bf9 : ret
0x0000000000099d47 : ret
0x000000000009a2fc : ret
0x000000000009a432 : ret
0x000000000009a6fb : ret
0x000000000009a705 : ret
0x000000000009a948 : ret
0x000000000009ae24 : ret
0x000000000009b087 : ret
0x000000000009b2cc : ret
0x000000000009b2d2 : ret
0x000000000009b500 : ret
0x000000000009b591 : ret
0x000000000009b60c : ret
0x000000000009bb86 : ret
0x000000000009bd32 : ret
0x000000000009c990 : ret
0x000000000009cbec : ret
0x000000000009ce27 : ret
0x000000000009ce70 : ret
0x000000000009d0a6 : ret
0x000000000009d5ea : ret
0x000000000009daca : ret
0x000000000009dac9 : ret
0x000000000009db80 : ret
0x000000000009ddd4 : ret
0x000000000009e3b3 : ret
0x000000000009e509 : ret
0x000000000009e508 : ret
0x000000000009e8eb : ret
0x000000000009e905 : ret
0x000000000009e91a : ret
0x000000000009e92b : ret
0x000000000009e93e : ret
0x000000000009e94e : ret
0x000000000009e961 : ret
0x000000000009e97f : ret
0x000000000009e9a9 : ret
0x000000000009e9b9 : ret
0x000000000009e9c6 : ret
0x000000000009e9d6 : ret
0x000000000009e9ea : ret
0x000000000009e9f5 : ret
0x000000000009ea09 : ret
0x000000000009ea1d : ret
0x000000000009ea46 : ret
0x000000000009ea5a : ret
0x000000000009ea67 : ret
0x000000000009ea7b : ret
0x000000000009ea86 : ret
0x000000000009ea9a : ret
0x000000000009eaaa : ret
0x000000000009eabe : ret
0x000000000009eae9 : ret
0x000000000009eae8 : ret
0x000000000009eae7 : ret
0x000000000009eaf1 : ret
0x000000000009eaf0 : ret
0x000000000009eaf4 : ret
0x000000000009eb2d : ret
0x000000000009eb2c : ret
0x000000000009eb31 : ret
0x000000000009eb30 : ret
0x000000000009eb34 : ret
0x000000000009eb87 : ret
0x000000000009eb86 : ret
0x000000000009eb91 : ret
0x000000000009eb90 : ret
0x000000000009eb94 : ret
0x000000000009ebbd : ret
0x000000000009ebbc : ret
0x000000000009ebbf : ret
0x000000000009ebbe : ret
0x000000000009ebe1 : ret
0x000000000009ebe0 : ret
0x000000000009ebdf : ret
0x000000000009ebe4 : ret
0x000000000009ec32 : ret
0x000000000009ec31 : ret
0x000000000009ec35 : ret
0x000000000009ec6d : ret
0x000000000009ec73 : ret
0x000000000009ecc6 : ret
0x000000000009ecd3 : ret
0x000000000009ed27 : ret
0x000000000009ed39 : ret
0x000000000009ed4d : ret
0x000000000009ed85 : ret
0x000000000009ede3 : ret
0x000000000009ede2 : ret
0x000000000009edf1 : ret
0x000000000009ee1a : ret
0x000000000009ee62 : ret
0x000000000009ee61 : ret
0x000000000009ee71 : ret
0x000000000009ee77 : ret
0x000000000009ef10 : ret
0x000000000009ef71 : ret
0x000000000009ef85 : ret
0x000000000009efe0 : ret
0x000000000009f000 : ret
0x000000000009f02c : ret
0x000000000009f070 : ret
0x000000000009f095 : ret
0x000000000009f0ce : ret
0x000000000009f0d6 : ret
0x000000000009f0e8 : ret
0x000000000009f0f8 : ret
0x000000000009f108 : ret
0x000000000009f11f : ret
0x000000000009f131 : ret
0x000000000009f151 : ret
0x000000000009f171 : ret
0x000000000009f183 : ret
0x000000000009f1b4 : ret
0x000000000009f21a : ret
0x000000000009f25d : ret
0x000000000009f268 : ret
0x000000000009f287 : ret
0x000000000009f2c9 : ret
0x000000000009f2db : ret
0x000000000009f30a : ret
0x000000000009f3bf : ret
0x000000000009f3d2 : ret
0x000000000009f454 : ret
0x000000000009f46d : ret
0x000000000009f4b7 : ret
0x000000000009f4db : ret
0x000000000009f51d : ret
0x000000000009f53b : ret
0x000000000009f540 : ret
0x000000000009f53b : ret
0x000000000009f548 : ret
0x000000000009f5b9 : ret
0x000000000009f727 : ret
0x000000000009f7ed : ret
0x000000000009f812 : ret
0x000000000009f861 : ret
0x000000000009fae9 : ret
0x000000000009fb25 : ret
0x000000000009fb53 : ret
0x000000000009fb6c : ret
0x000000000009fb80 : ret
0x000000000009fb94 : ret
0x000000000009fba5 : ret
0x000000000009fbba : ret
0x000000000009fbc4 : ret
0x000000000009fd23 : ret
0x000000000009fe8a : ret
0x000000000009ffec : ret
0x00000000000a023c : ret
0x00000000000a0278 : ret
0x00000000000a02a6 : ret
0x00000000000a02bf : ret
0x00000000000a02d3 : ret
0x00000000000a02e7 : ret
0x00000000000a02f8 : ret
0x00000000000a030d : ret
0x00000000000a0317 : ret
0x00000000000a0476 : ret
0x00000000000a05dd : ret
0x00000000000a073f : ret
0x00000000000a0989 : ret
0x00000000000a09c5 : ret
0x00000000000a09f3 : ret
0x00000000000a0a0c : ret
0x00000000000a0a20 : ret
0x00000000000a0a34 : ret
0x00000000000a0a45 : ret
0x00000000000a0a5a : ret
0x00000000000a0a64 : ret
0x00000000000a0bc3 : ret
0x00000000000a0d2a : ret
0x00000000000a0e8c : ret
0x00000000000a142e : ret
0x00000000000a15a2 : ret
0x00000000000a161a : ret
0x00000000000a1678 : ret
0x00000000000a2a1d : ret
0x00000000000a2a74 : ret
0x00000000000a2a8c : ret
0x00000000000a2a9e : ret
0x00000000000a2ab4 : ret
0x00000000000a2acc : ret
0x00000000000a2ae2 : ret
0x00000000000a2b04 : ret
0x00000000000a2b22 : ret
0x00000000000a2b40 : ret
0x00000000000a2b66 : ret
0x00000000000a2b88 : ret
0x00000000000a2ba6 : ret
0x00000000000a2bc6 : ret
0x00000000000a2bea : ret
0x00000000000a2c0a : ret
0x00000000000a2c2a : ret
0x00000000000a2c4a : ret
0x00000000000a2de8 : ret
0x00000000000a3221 : ret
0x00000000000a32c1 : ret
0x00000000000a32d9 : ret
0x00000000000a3328 : ret
0x00000000000a4cc9 : ret
0x00000000000a53ed : ret
0x00000000000a5444 : ret
0x00000000000a545c : ret
0x00000000000a546e : ret
0x00000000000a5484 : ret
0x00000000000a549c : ret
0x00000000000a54b2 : ret
0x00000000000a54d4 : ret
0x00000000000a54f2 : ret
0x00000000000a5510 : ret
0x00000000000a5536 : ret
0x00000000000a5558 : ret
0x00000000000a5576 : ret
0x00000000000a5596 : ret
0x00000000000a55ba : ret
0x00000000000a55da : ret
0x00000000000a55fa : ret
0x00000000000a561a : ret
0x00000000000a56d7 : ret
0x00000000000a577a : ret
0x00000000000a57f6 : ret
0x00000000000a5860 : ret
0x00000000000a5873 : ret
0x00000000000a5912 : ret
0x00000000000a59c5 : ret
0x00000000000a5a6b : ret
0x00000000000a5ae7 : ret
0x00000000000a5d32 : ret
0x00000000000a5d46 : ret
0x00000000000a5d59 : ret
0x00000000000a5d64 : ret
0x00000000000a5d77 : ret
0x00000000000a5d8c : ret
0x00000000000a5d9a : ret
0x00000000000a5da6 : ret
0x00000000000a5db9 : ret
0x00000000000a5dce : ret
0x00000000000a5ddc : ret
0x00000000000a5dec : ret
0x00000000000a5dfe : ret
0x00000000000a5e0e : ret
0x00000000000a5e1e : ret
0x00000000000a5e28 : ret
0x00000000000a5e3b : ret
0x00000000000a5e50 : ret
0x00000000000a5e6e : ret
0x00000000000a5e7e : ret
0x00000000000a5e91 : ret
0x00000000000a5eb0 : ret
0x00000000000a5ed0 : ret
0x00000000000a5ef0 : ret
0x00000000000a5f13 : ret
0x00000000000a5f38 : ret
0x00000000000a5f56 : ret
0x00000000000a5f76 : ret
0x00000000000a5f92 : ret
0x00000000000a5fb2 : ret
0x00000000000a5fd2 : ret
0x00000000000a5ff2 : ret
0x00000000000a60c8 : ret
0x00000000000a616c : ret
0x00000000000a6580 : ret
0x00000000000a65a4 : ret
0x00000000000a65c7 : ret
0x00000000000a65e2 : ret
0x00000000000a6605 : ret
0x00000000000a662a : ret
0x00000000000a6648 : ret
0x00000000000a6664 : ret
0x00000000000a6687 : ret
0x00000000000a66ac : ret
0x00000000000a66ca : ret
0x00000000000a66ea : ret
0x00000000000a670c : ret
0x00000000000a672c : ret
0x00000000000a674c : ret
0x00000000000a6766 : ret
0x00000000000a6789 : ret
0x00000000000a67ae : ret
0x00000000000a67cc : ret
0x00000000000a67ec : ret
0x00000000000a680f : ret
0x00000000000a682e : ret
0x00000000000a684e : ret
0x00000000000a686e : ret
0x00000000000a6891 : ret
0x00000000000a68c6 : ret
0x00000000000a68f4 : ret
0x00000000000a6924 : ret
0x00000000000a6950 : ret
0x00000000000a6980 : ret
0x00000000000a69b0 : ret
0x00000000000a69e0 : ret
0x00000000000a69f0 : ret
0x00000000000a6a04 : ret
0x00000000000a6a16 : ret
0x00000000000a6a2c : ret
0x00000000000a6a34 : ret
0x00000000000a6a4a : ret
0x00000000000a6a5c : ret
0x00000000000a6a6a : ret
0x00000000000a6a76 : ret
0x00000000000a6a8c : ret
0x00000000000a6a9e : ret
0x00000000000a6aac : ret
0x00000000000a6abc : ret
0x00000000000a6ace : ret
0x00000000000a6ade : ret
0x00000000000a6aee : ret
0x00000000000a6af8 : ret
0x00000000000a6b0e : ret
0x00000000000a6b20 : ret
0x00000000000a6b3e : ret
0x00000000000a6b4e : ret
0x00000000000a6b64 : ret
0x00000000000a6b80 : ret
0x00000000000a6ba0 : ret
0x00000000000a6bc0 : ret
0x00000000000a6be6 : ret
0x00000000000a6c08 : ret
0x00000000000a6c26 : ret
0x00000000000a6c46 : ret
0x00000000000a6c62 : ret
0x00000000000a6c82 : ret
0x00000000000a6ca2 : ret
0x00000000000a6cc2 : ret
0x00000000000a6ce8 : ret
0x00000000000a6cf0 : ret
0x00000000000a6d02 : ret
0x00000000000a6d13 : ret
0x00000000000a6d23 : ret
0x00000000000a6d32 : ret
0x00000000000a6d45 : ret
0x00000000000a6d56 : ret
0x00000000000a6d64 : ret
0x00000000000a6d73 : ret
0x00000000000a6d86 : ret
0x00000000000a6d97 : ret
0x00000000000a6da6 : ret
0x00000000000a6db6 : ret
0x00000000000a6dc7 : ret
0x00000000000a6dd7 : ret
0x00000000000a6de5 : ret
0x00000000000a6df4 : ret
0x00000000000a6f28 : ret
0x00000000000a6fd3 : ret
0x00000000000a706b : ret
0x00000000000a70e7 : ret
0x00000000000a7335 : ret
0x00000000000a734a : ret
0x00000000000a735d : ret
0x00000000000a7368 : ret
0x00000000000a737b : ret
0x00000000000a7390 : ret
0x00000000000a73ae : ret
0x00000000000a73ba : ret
0x00000000000a73cd : ret
0x00000000000a73e2 : ret
0x00000000000a7400 : ret
0x00000000000a7420 : ret
0x00000000000a7442 : ret
0x00000000000a7462 : ret
0x00000000000a7482 : ret
0x00000000000a749c : ret
0x00000000000a74af : ret
0x00000000000a74c4 : ret
0x00000000000a74e2 : ret
0x00000000000a7502 : ret
0x00000000000a7525 : ret
0x00000000000a7544 : ret
0x00000000000a7564 : ret
0x00000000000a7584 : ret
0x00000000000a75a7 : ret
0x00000000000a75cc : ret
0x00000000000a75ea : ret
0x00000000000a760a : ret
0x00000000000a7626 : ret
0x00000000000a7646 : ret
0x00000000000a7666 : ret
0x00000000000a7686 : ret
0x00000000000a7758 : ret
0x00000000000a77fc : ret
0x00000000000a7c23 : ret
0x00000000000a7c48 : ret
0x00000000000a7c6b : ret
0x00000000000a7c86 : ret
0x00000000000a7ca9 : ret
0x00000000000a7cce : ret
0x00000000000a7cec : ret
0x00000000000a7d08 : ret
0x00000000000a7d2b : ret
0x00000000000a7d50 : ret
0x00000000000a7d7e : ret
0x00000000000a7d9e : ret
0x00000000000a7dc0 : ret
0x00000000000a7df0 : ret
0x00000000000a7e20 : ret
0x00000000000a7e4a : ret
0x00000000000a7e6d : ret
0x00000000000a7e92 : ret
0x00000000000a7ec0 : ret
0x00000000000a7ef0 : ret
0x00000000000a7f23 : ret
0x00000000000a7f52 : ret
0x00000000000a7f82 : ret
0x00000000000a7fb2 : ret
0x00000000000a7fe5 : ret
0x00000000000a801a : ret
0x00000000000a8048 : ret
0x00000000000a8078 : ret
0x00000000000a80a4 : ret
0x00000000000a80d4 : ret
0x00000000000a8104 : ret
0x00000000000a8134 : ret
0x00000000000a8143 : ret
0x00000000000a8158 : ret
0x00000000000a816a : ret
0x00000000000a8180 : ret
0x00000000000a8198 : ret
0x00000000000a81ae : ret
0x00000000000a81c0 : ret
0x00000000000a81de : ret
0x00000000000a81ea : ret
0x00000000000a8200 : ret
0x00000000000a8222 : ret
0x00000000000a8240 : ret
0x00000000000a8260 : ret
0x00000000000a8282 : ret
0x00000000000a82a2 : ret
0x00000000000a82c2 : ret
0x00000000000a82dc : ret
0x00000000000a82f2 : ret
0x00000000000a8314 : ret
0x00000000000a8332 : ret
0x00000000000a8352 : ret
0x00000000000a8378 : ret
0x00000000000a8394 : ret
0x00000000000a83b4 : ret
0x00000000000a83d4 : ret
0x00000000000a83fa : ret
0x00000000000a841c : ret
0x00000000000a843a : ret
0x00000000000a845a : ret
0x00000000000a8476 : ret
0x00000000000a8496 : ret
0x00000000000a84b6 : ret
0x00000000000a84d6 : ret
0x00000000000a84f8 : ret
0x00000000000a8500 : ret
0x00000000000a8512 : ret
0x00000000000a8523 : ret
0x00000000000a8533 : ret
0x00000000000a8542 : ret
0x00000000000a8555 : ret
0x00000000000a8566 : ret
0x00000000000a8574 : ret
0x00000000000a8583 : ret
0x00000000000a8596 : ret
0x00000000000a85a7 : ret
0x00000000000a85b6 : ret
0x00000000000a85c6 : ret
0x00000000000a85d7 : ret
0x00000000000a85e7 : ret
0x00000000000a85f5 : ret
0x00000000000a8604 : ret
0x00000000000a873c : ret
0x00000000000a873b : ret
0x00000000000a873a : ret
0x00000000000a87e3 : ret
0x00000000000a8b4b : ret
0x00000000000a8bc7 : ret
0x00000000000a8e12 : ret
0x00000000000a8e26 : ret
0x00000000000a8e39 : ret
0x00000000000a8e44 : ret
0x00000000000a8e57 : ret
0x00000000000a8e6c : ret
0x00000000000a8e7a : ret
0x00000000000a8e86 : ret
0x00000000000a8e99 : ret
0x00000000000a8eae : ret
0x00000000000a8ebc : ret
0x00000000000a8ecc : ret
0x00000000000a8ede : ret
0x00000000000a8eee : ret
0x00000000000a8efe : ret
0x00000000000a8f08 : ret
0x00000000000a8f1b : ret
0x00000000000a8f30 : ret
0x00000000000a8f4e : ret
0x00000000000a8f5e : ret
0x00000000000a8f71 : ret
0x00000000000a8f90 : ret
0x00000000000a8fb0 : ret
0x00000000000a8fd0 : ret
0x00000000000a8ff3 : ret
0x00000000000a9018 : ret
0x00000000000a9036 : ret
0x00000000000a9056 : ret
0x00000000000a9072 : ret
0x00000000000a9092 : ret
0x00000000000a90b2 : ret
0x00000000000a90d2 : ret
0x00000000000a9468 : ret
0x00000000000a950c : ret
0x00000000000a98e2 : ret
0x00000000000a98f6 : ret
0x00000000000a9909 : ret
0x00000000000a9914 : ret
0x00000000000a9927 : ret
0x00000000000a993c : ret
0x00000000000a994a : ret
0x00000000000a9956 : ret
0x00000000000a9969 : ret
0x00000000000a997e : ret
0x00000000000a998c : ret
0x00000000000a999c : ret
0x00000000000a99ae : ret
0x00000000000a99be : ret
0x00000000000a99ce : ret
0x00000000000a99d8 : ret
0x00000000000a99eb : ret
0x00000000000a9a00 : ret
0x00000000000a9a1e : ret
0x00000000000a9a2e : ret
0x00000000000a9a41 : ret
0x00000000000a9a60 : ret
0x00000000000a9a80 : ret
0x00000000000a9aa0 : ret
0x00000000000a9ac3 : ret
0x00000000000a9ae8 : ret
0x00000000000a9b06 : ret
0x00000000000a9b26 : ret
0x00000000000a9b42 : ret
0x00000000000a9b62 : ret
0x00000000000a9b82 : ret
0x00000000000a9ba2 : ret
0x00000000000a9bb4 : ret
0x00000000000a9bc9 : ret
0x00000000000a9bdb : ret
0x00000000000a9bf1 : ret
0x00000000000a9c09 : ret
0x00000000000a9c1f : ret
0x00000000000a9c31 : ret
0x00000000000a9c4f : ret
0x00000000000a9c5b : ret
0x00000000000a9c71 : ret
0x00000000000a9c93 : ret
0x00000000000a9cb1 : ret
0x00000000000a9cd1 : ret
0x00000000000a9cf3 : ret
0x00000000000a9d13 : ret
0x00000000000a9d33 : ret
0x00000000000a9d4d : ret
0x00000000000a9d63 : ret
0x00000000000a9d85 : ret
0x00000000000a9da3 : ret
0x00000000000a9dc3 : ret
0x00000000000a9de9 : ret
0x00000000000a9e05 : ret
0x00000000000a9e25 : ret
0x00000000000a9e45 : ret
0x00000000000a9e6b : ret
0x00000000000a9e8d : ret
0x00000000000a9eab : ret
0x00000000000a9ecb : ret
0x00000000000a9ee7 : ret
0x00000000000a9f07 : ret
0x00000000000a9f27 : ret
0x00000000000a9f47 : ret
0x00000000000a9f6d : ret
0x00000000000a9fbd : ret
0x00000000000a9fbc : ret
0x00000000000aa060 : ret
0x00000000000aa0ff : ret
0x00000000000aa163 : ret
0x00000000000aa166 : ret
0x00000000000aa1c3 : ret
0x00000000000aa213 : ret
0x00000000000aa216 : ret
0x00000000000aa21a : ret
0x00000000000aa22b : ret
0x00000000000aa24d : ret
0x00000000000aa2c7 : ret
0x00000000000aa32f : ret
0x00000000000aa387 : ret
0x00000000000aa392 : ret
0x00000000000aa3d8 : ret
0x00000000000aa400 : ret
0x00000000000aa46f : ret
0x00000000000aa4d7 : ret
0x00000000000aa4f1 : ret
0x00000000000aa4f0 : ret
0x00000000000aa502 : ret
0x00000000000aa591 : ret
0x00000000000aa5b2 : ret
0x00000000000aa5c5 : ret
0x00000000000aa5d4 : ret
0x00000000000aa5de : ret
0x00000000000aa5ed : ret
0x00000000000aa5fc : ret
0x00000000000aa609 : ret
0x00000000000aa611 : ret
0x00000000000aa69a : ret
0x00000000000aa6f2 : ret
0x00000000000aa78f : ret
0x00000000000aa83a : ret
0x00000000000aa853 : ret
0x00000000000aa883 : ret
0x00000000000aa906 : ret
0x00000000000aa9a2 : ret
0x00000000000aa9a5 : ret
0x00000000000aa9d2 : ret
0x00000000000aab57 : ret
0x00000000000aab62 : ret
0x00000000000aab78 : ret
0x00000000000aabd3 : ret
0x00000000000aabeb : ret
0x00000000000aac02 : ret
0x00000000000aac0e : ret
0x00000000000aac13 : ret
0x00000000000aac23 : ret
0x00000000000aac42 : ret
0x00000000000aac75 : ret
0x00000000000aac9e : ret
0x00000000000aaca5 : ret
0x00000000000aacac : ret
0x00000000000aacb3 : ret
0x00000000000aacba : ret
0x00000000000aacc1 : ret
0x00000000000aacc8 : ret
0x00000000000aacdf : ret
0x00000000000aace4 : ret
0x00000000000aacf8 : ret
0x00000000000aad36 : ret
0x00000000000aad80 : ret
0x00000000000aad7f : ret
0x00000000000aad8a : ret
0x00000000000aadc8 : ret
0x00000000000aadc7 : ret
0x00000000000aadd2 : ret
0x00000000000aae1a : ret
0x00000000000aae19 : ret
0x00000000000aaec9 : ret
0x00000000000aaf92 : ret
0x00000000000aafa3 : ret
0x00000000000ab588 : ret
0x00000000000ab931 : ret
0x00000000000ab991 : ret
0x00000000000abaf6 : ret
0x00000000000abb15 : ret
0x00000000000abb2c : ret
0x00000000000abb41 : ret
0x00000000000abb5c : ret
0x00000000000abb77 : ret
0x00000000000abb8c : ret
0x00000000000abba1 : ret
0x00000000000abbbc : ret
0x00000000000abbd7 : ret
0x00000000000abbe8 : ret
0x00000000000abbfd : ret
0x00000000000abc08 : ret
0x00000000000abc23 : ret
0x00000000000abc38 : ret
0x00000000000abc4d : ret
0x00000000000abc58 : ret
0x00000000000abc69 : ret
0x00000000000abc73 : ret
0x00000000000abc9a : ret
0x00000000000abca2 : ret
0x00000000000abcca : ret
0x00000000000abce8 : ret
0x00000000000abd38 : ret
0x00000000000abf22 : ret
0x00000000000abf3b : ret
0x00000000000abf44 : ret
0x00000000000abf54 : ret
0x00000000000abf63 : ret
0x00000000000abf77 : ret
0x00000000000abf87 : ret
0x00000000000abf97 : ret
0x00000000000abfa7 : ret
0x00000000000abfb7 : ret
0x00000000000abfc7 : ret
0x00000000000abfd7 : ret
0x00000000000ac054 : ret
0x00000000000ac056 : ret
0x00000000000ac055 : ret
0x00000000000ac091 : ret
0x00000000000ac09f : ret
0x00000000000ac0b1 : ret
0x00000000000ac0b0 : ret
0x00000000000ac16e : ret
0x00000000000ac16d : ret
0x00000000000ac182 : ret
0x00000000000ac21e : ret
0x00000000000ac259 : ret
0x00000000000ac2aa : ret
0x00000000000ac2c8 : ret
0x00000000000ac3c4 : ret
0x00000000000ac441 : ret
0x00000000000ac4a3 : ret
0x00000000000ac4c0 : ret
0x00000000000ac4e6 : ret
0x00000000000ac510 : ret
0x00000000000ac551 : ret
0x00000000000ac56c : ret
0x00000000000ac57e : ret
0x00000000000ac594 : ret
0x00000000000ac5a4 : ret
0x00000000000ac5b4 : ret
0x00000000000ac5c4 : ret
0x00000000000ac5d3 : ret
0x00000000000ac610 : ret
0x00000000000ac60f : ret
0x00000000000ac626 : ret
0x00000000000ac625 : ret
0x00000000000ac629 : ret
0x00000000000ac67c : ret
0x00000000000ac6e0 : ret
0x00000000000ac732 : ret
0x00000000000ac73e : ret
0x00000000000ac73d : ret
0x00000000000ac791 : ret
0x00000000000ac790 : ret
0x00000000000ac828 : ret
0x00000000000ac834 : ret
0x00000000000ac833 : ret
0x00000000000ac83c : ret
0x00000000000ac844 : ret
0x00000000000ac84c : ret
0x00000000000ac86a : ret
0x00000000000ac87e : ret
0x00000000000ac886 : ret
0x00000000000ac91c : ret
0x00000000000ac91b : ret
0x00000000000ac956 : ret
0x00000000000ac955 : ret
0x00000000000ac954 : ret
0x00000000000ac9a5 : ret
0x00000000000ac9be : ret
0x00000000000ac9ec : ret
0x00000000000aca3e : ret
0x00000000000aca42 : ret
0x00000000000aca62 : ret
0x00000000000acb14 : ret
0x00000000000acb13 : ret
0x00000000000acb1d : ret
0x00000000000acc20 : ret
0x00000000000acd0d : ret
0x00000000000acd21 : ret
0x00000000000acd55 : ret
0x00000000000acd6e : ret
0x00000000000acd75 : ret
0x00000000000ace06 : ret
0x00000000000ace19 : ret
0x00000000000acf03 : ret
0x00000000000acf46 : ret
0x00000000000ad0ee : ret
0x00000000000ad160 : ret
0x00000000000ad178 : ret
0x00000000000ad2fa : ret
0x00000000000ad5ec : ret
0x00000000000ad899 : ret
0x00000000000ada91 : ret
0x00000000000ada90 : ret
0x00000000000ada99 : ret
0x00000000000ada98 : ret
0x00000000000ada9c : ret
0x00000000000adaa2 : ret
0x00000000000adaa8 : ret
0x00000000000adacf : ret
0x00000000000adace : ret
0x00000000000adacd : ret
0x00000000000adc1a : ret
0x00000000000addbe : ret
0x00000000000ade0f : ret
0x00000000000adf95 : ret
0x00000000000adfcb : ret
0x00000000000adfdb : ret
0x00000000000ae07a : ret
0x00000000000ae135 : ret
0x00000000000ae21e : ret
0x00000000000ae26f : ret
0x00000000000ae312 : ret
0x00000000000ae37d : ret
0x00000000000ae3da : ret
0x00000000000ae3ea : ret
0x00000000000ae461 : ret
0x00000000000ae46a : ret
0x00000000000ae57a : ret
0x00000000000ae704 : ret
0x00000000000ae753 : ret
0x00000000000ae788 : ret
0x00000000000ae828 : ret
0x00000000000ae876 : ret
0x00000000000ae89c : ret
0x00000000000aea16 : ret
0x00000000000aea3a : ret
0x00000000000aeab8 : ret
0x00000000000aeb6a : ret
0x00000000000aec49 : ret
0x00000000000aec89 : ret
0x00000000000aecb6 : ret
0x00000000000aeddc : ret
0x00000000000aef31 : ret
0x00000000000af426 : ret
0x00000000000af4d1 : ret
0x00000000000af5ec : ret
0x00000000000af6e1 : ret
0x00000000000af767 : ret
0x00000000000af868 : ret
0x00000000000af9b2 : ret
0x00000000000afa0f : ret
0x00000000000affbc : ret
0x00000000000afffa : ret
0x00000000000b0012 : ret
0x00000000000b0087 : ret
0x00000000000b00a0 : ret
0x00000000000b062e : ret
0x00000000000b075e : ret
0x00000000000b07bd : ret
0x00000000000b0dc1 : ret
0x00000000000b0dca : ret
0x00000000000b0ee2 : ret
0x00000000000b1072 : ret
0x00000000000b10c1 : ret
0x00000000000b10f4 : ret
0x00000000000b118c : ret
0x00000000000b11d6 : ret
0x00000000000b11fa : ret
0x00000000000b12a2 : ret
0x00000000000b1392 : ret
0x00000000000b13e8 : ret
0x00000000000b1569 : ret
0x00000000000b15aa : ret
0x00000000000b15d6 : ret
0x00000000000b1706 : ret
0x00000000000b1b98 : ret
0x00000000000b1d56 : ret
0x00000000000b1de7 : ret
0x00000000000b1f0c : ret
0x00000000000b2198 : ret
0x00000000000b22c0 : ret
0x00000000000b22d8 : ret
0x00000000000b2c53 : ret
0x00000000000b2f8e : ret
0x00000000000b2f91 : ret
0x00000000000b3027 : ret
0x00000000000b3073 : ret
0x00000000000b33f9 : ret
0x00000000000b3551 : ret
0x00000000000b355a : ret
0x00000000000b366a : ret
0x00000000000b37f1 : ret
0x00000000000b3840 : ret
0x00000000000b3878 : ret
0x00000000000b3918 : ret
0x00000000000b3966 : ret
0x00000000000b398c : ret
0x00000000000b3af6 : ret
0x00000000000b3b1a : ret
0x00000000000b3b90 : ret
0x00000000000b3d29 : ret
0x00000000000b3d69 : ret
0x00000000000b3d96 : ret
0x00000000000b3ebc : ret
0x00000000000b4011 : ret
0x00000000000b4531 : ret
0x00000000000b45d9 : ret
0x00000000000b46fc : ret
0x00000000000b47ed : ret
0x00000000000b4873 : ret
0x00000000000b497e : ret
0x00000000000b4ac5 : ret
0x00000000000b4b22 : ret
0x00000000000b5181 : ret
0x00000000000b51c5 : ret
0x00000000000b51dd : ret
0x00000000000b5264 : ret
0x00000000000b5280 : ret
0x00000000000b5ad6 : ret
0x00000000000b5c19 : ret
0x00000000000b5c81 : ret
0x00000000000b6079 : ret
0x00000000000b62b2 : ret
0x00000000000b62eb : ret
0x00000000000b6362 : ret
0x00000000000b6399 : ret
0x00000000000b6402 : ret
0x00000000000b643b : ret
0x00000000000b64f3 : ret
0x00000000000b64f2 : ret
0x00000000000b65d9 : ret
0x00000000000b65d8 : ret
0x00000000000b65dc : ret
0x00000000000b67ca : ret
0x00000000000b67e5 : ret
0x00000000000b685c : ret
0x00000000000b6965 : ret
0x00000000000b69dc : ret
0x00000000000b6a9e : ret
0x00000000000b6dff : ret
0x00000000000b6f89 : ret
0x00000000000b6f97 : ret
0x00000000000b6fcc : ret
0x00000000000b7363 : ret
0x00000000000b7398 : ret
0x00000000000b75b9 : ret
0x00000000000b7817 : ret
0x00000000000b7aa0 : ret
0x00000000000b7c1d : ret
0x00000000000b7e2b : ret
0x00000000000b7e82 : ret
0x00000000000b8553 : ret
0x00000000000b86cd : ret
0x00000000000b8701 : ret
0x00000000000b8803 : ret
0x00000000000b88f6 : ret
0x00000000000b8e0f : ret
0x00000000000b9194 : ret
0x00000000000b9234 : ret
0x00000000000b925e : ret
0x00000000000b926c : ret
0x00000000000b94e9 : ret
0x00000000000b965f : ret
0x00000000000b9735 : ret
0x00000000000b9936 : ret
0x00000000000b9a89 : ret
0x00000000000b9aa1 : ret
0x00000000000b9b56 : ret
0x00000000000b9b5f : ret
0x00000000000b9bdc : ret
0x00000000000b9dab : ret
0x00000000000b9df9 : ret
0x00000000000b9e12 : ret
0x00000000000b9e1d : ret
0x00000000000b9e24 : ret
0x00000000000b9e27 : ret
0x00000000000b9e66 : ret
0x00000000000b9e71 : ret
0x00000000000b9e7b : ret
0x00000000000b9e88 : ret
0x00000000000b9e92 : ret
0x00000000000b9ec1 : ret
0x00000000000b9edd : ret
0x00000000000b9eef : ret
0x00000000000b9ef8 : ret
0x00000000000b9efb : ret
0x00000000000b9f39 : ret
0x00000000000b9f47 : ret
0x00000000000b9f51 : ret
0x00000000000b9f5c : ret
0x00000000000b9f62 : ret
0x00000000000b9fb1 : ret
0x00000000000b9ff7 : ret
0x00000000000ba00d : ret
0x00000000000ba017 : ret
0x00000000000ba053 : ret
0x00000000000ba0b1 : ret
0x00000000000ba2a1 : ret
0x00000000000ba32c : ret
0x00000000000ba3bc : ret
0x00000000000ba43c : ret
0x00000000000ba456 : ret
0x00000000000ba62d : ret
0x00000000000ba936 : ret
0x00000000000baa85 : ret
0x00000000000bac40 : ret
0x00000000000bad6a : ret
0x00000000000bae5e : ret
0x00000000000baede : ret
0x00000000000baf47 : ret
0x00000000000baf79 : ret
0x00000000000bb1ec : ret
0x00000000000bb208 : ret
0x00000000000bb207 : ret
0x00000000000bb226 : ret
0x00000000000bb225 : ret
0x00000000000bb257 : ret
0x00000000000bb256 : ret
0x00000000000bb255 : ret
0x00000000000bb399 : ret
0x00000000000bb41d : ret
0x00000000000bb528 : ret
0x00000000000bb570 : ret
0x00000000000bb648 : ret
0x00000000000bb6f8 : ret
0x00000000000bb726 : ret
0x00000000000bb748 : ret
0x00000000000bb7e7 : ret
0x00000000000bb814 : ret
0x00000000000bb830 : ret
0x00000000000bb88e : ret
0x00000000000bb8d0 : ret
0x00000000000bb8fe : ret
0x00000000000bb9b5 : ret
0x00000000000bbaad : ret
0x00000000000bbac5 : ret
0x00000000000bbada : ret
0x00000000000bbc31 : ret
0x00000000000bbc87 : ret
0x00000000000bbe2f : ret
0x00000000000bc07d : ret
0x00000000000bc377 : ret
0x00000000000bc409 : ret
0x00000000000bc440 : ret
0x00000000000bc43f : ret
0x00000000000bc459 : ret
0x00000000000bc4e9 : ret
0x00000000000bc51f : ret
0x00000000000bc530 : ret
0x00000000000bc60f : ret
0x00000000000bc672 : ret
0x00000000000bc6c9 : ret
0x00000000000bc6fa : ret
0x00000000000bc72a : ret
0x00000000000bc831 : ret
0x00000000000bc91e : ret
0x00000000000bc9e4 : ret
0x00000000000bcbba : ret
0x00000000000bcc2c : ret
0x00000000000bcc3b : ret
0x00000000000bcc72 : ret
0x00000000000bce6b : ret
0x00000000000bd092 : ret
0x00000000000bd0ba : ret
0x00000000000bd0db : ret
0x00000000000bd13e : ret
0x00000000000bd177 : ret
0x00000000000bd33c : ret
0x00000000000bd3f0 : ret
0x00000000000bd690 : ret
0x00000000000bd6a4 : ret
0x00000000000bd722 : ret
0x00000000000bd761 : ret
0x00000000000bd7cf : ret
0x00000000000bd839 : ret
0x00000000000bd872 : ret
0x00000000000bd8b1 : ret
0x00000000000bd8d8 : ret
0x00000000000bd9f6 : ret
0x00000000000bda13 : ret
0x00000000000bdb71 : ret
0x00000000000bddf8 : ret
0x00000000000bdf36 : ret
0x00000000000bdf98 : ret
0x00000000000be012 : ret
0x00000000000be309 : ret
0x00000000000be44c : ret
0x00000000000be755 : ret
0x00000000000be9a0 : ret
0x00000000000be9a5 : ret
0x00000000000bea2c : ret
0x00000000000bea72 : ret
0x00000000000beb3d : ret
0x00000000000bef16 : ret
0x00000000000bef2f : ret
0x00000000000befeb : ret
0x00000000000befee : ret
0x00000000000bf052 : ret
0x00000000000bf0b7 : ret
0x00000000000bf1bd : ret
0x00000000000bf220 : ret
0x00000000000bf272 : ret
0x00000000000bf366 : ret
0x00000000000bf372 : ret
0x00000000000bf429 : ret
0x00000000000bf52d : ret
0x00000000000bf542 : ret
0x00000000000bf60f : ret
0x00000000000bf620 : ret
0x00000000000bf63f : ret
0x00000000000bf650 : ret
0x00000000000bf687 : ret
0x00000000000bf6a3 : ret
0x00000000000bf6f6 : ret
0x00000000000bf6f5 : ret
0x00000000000bf789 : ret
0x00000000000bf7f8 : ret
0x00000000000bf863 : ret
0x00000000000bfe22 : ret
0x00000000000bfe3a : ret
0x00000000000c0019 : ret
0x00000000000c00ba : ret
0x00000000000c0133 : ret
0x00000000000c0205 : ret
0x00000000000c0243 : ret
0x00000000000c028a : ret
0x00000000000c02aa : ret
0x00000000000c0322 : ret
0x00000000000c0395 : ret
0x00000000000c0599 : ret
0x00000000000c0616 : ret
0x00000000000c0758 : ret
0x00000000000c07f1 : ret
0x00000000000c090e : ret
0x00000000000c09db : ret
0x00000000000c0abd : ret
0x00000000000c0ae2 : ret
0x00000000000c0b16 : ret
0x00000000000c0c1f : ret
0x00000000000c0cae : ret
0x00000000000c0db5 : ret
0x00000000000c0e3f : ret
0x00000000000c0f06 : ret
0x00000000000c0f12 : ret
0x00000000000c0f57 : ret
0x00000000000c0feb : ret
0x00000000000c0ffd : ret
0x00000000000c11ac : ret
0x00000000000c1375 : ret
0x00000000000c149d : ret
0x00000000000c1642 : ret
0x00000000000c1702 : ret
0x00000000000c1872 : ret
0x00000000000c1904 : ret
0x00000000000c1914 : ret
0x00000000000c1ab2 : ret
0x00000000000c1c2a : ret
0x00000000000c1cf4 : ret
0x00000000000c2237 : ret
0x00000000000c2555 : ret
0x00000000000c2657 : ret
0x00000000000c271c : ret
0x00000000000c2814 : ret
0x00000000000c2b69 : ret
0x00000000000c2bcb : ret
0x00000000000c2c1a : ret
0x00000000000c30f8 : ret
0x00000000000c3123 : ret
0x00000000000c3136 : ret
0x00000000000c3198 : ret
0x00000000000c3233 : ret
0x00000000000c32a5 : ret
0x00000000000c33fe : ret
0x00000000000c33fd : ret
0x00000000000c3441 : ret
0x00000000000c344f : ret
0x00000000000c3545 : ret
0x00000000000c393c : ret
0x00000000000c397c : ret
0x00000000000c39be : ret
0x00000000000c39c2 : ret
0x00000000000c3a0b : ret
0x00000000000c3a19 : ret
0x00000000000c3c01 : ret
0x00000000000c3c03 : ret
0x00000000000c3c01 : ret
0x00000000000c40be : ret
0x00000000000c4398 : ret
0x00000000000c4859 : ret
0x00000000000c4867 : ret
0x00000000000c4998 : ret
0x00000000000c49a6 : ret
0x00000000000c4af6 : ret
0x00000000000c50aa : ret
0x00000000000c52b0 : ret
0x00000000000c52e9 : ret
0x00000000000c52e8 : ret
0x00000000000c59d4 : ret
0x00000000000c59db : ret
0x00000000000c5a73 : ret
0x00000000000c5a7a : ret
0x00000000000c610c : ret
0x00000000000c6131 : ret
0x00000000000c6145 : ret
0x00000000000c626d : ret
0x00000000000c6292 : ret
0x00000000000c62a6 : ret
0x00000000000c6353 : ret
0x00000000000c63a1 : ret
0x00000000000c6431 : ret
0x00000000000c6456 : ret
0x00000000000c646a : ret
0x00000000000c6584 : ret
0x00000000000c6583 : ret
0x00000000000c6840 : ret
0x00000000000c6865 : ret
0x00000000000c6879 : ret
0x00000000000c7082 : ret
0x00000000000c711a : ret
0x00000000000c7119 : ret
0x00000000000c71fe : ret
0x00000000000c756a : ret
0x00000000000c75bf : ret
0x00000000000c75c2 : ret
0x00000000000c763c : ret
0x00000000000c76bc : ret
0x00000000000c76f1 : ret
0x00000000000c788e : ret
0x00000000000c78b7 : ret
0x00000000000c798a : ret
0x00000000000c7a3e : ret
0x00000000000c7ad5 : ret
0x00000000000c7b15 : ret
0x00000000000c7c35 : ret
0x00000000000c7c6a : ret
0x00000000000c7ca1 : ret
0x00000000000c7de0 : ret
0x00000000000c7e11 : ret
0x00000000000c7ef1 : ret
0x00000000000c7f45 : ret
0x00000000000c7fc1 : ret
0x00000000000c7ffb : ret
0x00000000000c808b : ret
0x00000000000c80cb : ret
0x00000000000c80e0 : ret
0x00000000000c8168 : ret
0x00000000000c81f8 : ret
0x00000000000c823b : ret
0x00000000000c8250 : ret
0x00000000000c833a : ret
0x00000000000c83e0 : ret
0x00000000000c83fa : ret
0x00000000000c8413 : ret
0x00000000000c84c1 : ret
0x00000000000c850b : ret
0x00000000000c869f : ret
0x00000000000c87a2 : ret
0x00000000000c8845 : ret
0x00000000000c8854 : ret
0x00000000000c8943 : ret
0x00000000000c8962 : ret
0x00000000000c89d2 : ret
0x00000000000c89f1 : ret
0x00000000000c8a5e : ret
0x00000000000c8b02 : ret
0x00000000000c8b70 : ret
0x00000000000c8bd7 : ret
0x00000000000c8d00 : ret
0x00000000000c8d06 : ret
0x00000000000c8d09 : ret
0x00000000000c8d61 : ret
0x00000000000c8efc : ret
0x00000000000c8f22 : ret
0x00000000000c8fd3 : ret
0x00000000000c9250 : ret
0x00000000000c9355 : ret
0x00000000000c9565 : ret
0x00000000000c958d : ret
0x00000000000c95a0 : ret
0x00000000000c959f : ret
0x00000000000c962c : ret
0x00000000000c9659 : ret
0x00000000000c9671 : ret
0x00000000000c96aa : ret
0x00000000000c976b : ret
0x00000000000c989f : ret
0x00000000000c9a10 : ret
0x00000000000c9b96 : ret
0x00000000000c9be8 : ret
0x00000000000c9c35 : ret
0x00000000000c9cc4 : ret
0x00000000000c9d17 : ret
0x00000000000c9dd9 : ret
0x00000000000c9ea4 : ret
0x00000000000c9ea3 : ret
0x00000000000c9f85 : ret
0x00000000000c9f84 : ret
0x00000000000ca0e1 : ret
0x00000000000ca142 : ret
0x00000000000ca1db : ret
0x00000000000ca382 : ret
0x00000000000ca3e2 : ret
0x00000000000ca47b : ret
0x00000000000ca532 : ret
0x00000000000ca5ac : ret
0x00000000000ca5af : ret
0x00000000000ca68c : ret
0x00000000000ca6b1 : ret
0x00000000000ca7b3 : ret
0x00000000000ca7b8 : ret
0x00000000000ca7be : ret
0x00000000000ca7b8 : ret
0x00000000000ca9eb : ret
0x00000000000cabfc : ret
0x00000000000cac22 : ret
0x00000000000cace4 : ret
0x00000000000cad03 : ret
0x00000000000cadf2 : ret
0x00000000000cae06 : ret
0x00000000000cae05 : ret
0x00000000000cae0d : ret
0x00000000000cae4e : ret
0x00000000000cae71 : ret
0x00000000000caf3b : ret
0x00000000000cb070 : ret
0x00000000000cb1ef : ret
0x00000000000cb2e9 : ret
0x00000000000cb378 : ret
0x00000000000cb3b4 : ret
0x00000000000cb3b3 : ret
0x00000000000cb495 : ret
0x00000000000cb494 : ret
0x00000000000cb5f2 : ret
0x00000000000cb652 : ret
0x00000000000cb6eb : ret
0x00000000000cb891 : ret
0x00000000000cb8f2 : ret
0x00000000000cb98b : ret
0x00000000000cba12 : ret
0x00000000000cba88 : ret
0x00000000000cbae6 : ret
0x00000000000cbec3 : ret
0x00000000000cbf3f : ret
0x00000000000cbf50 : ret
0x00000000000cbf82 : ret
0x00000000000cbfb2 : ret
0x00000000000cbfe8 : ret
0x00000000000cc001 : ret
0x00000000000cc04b : ret
0x00000000000cc082 : ret
0x00000000000cc099 : ret
0x00000000000cc0eb : ret
0x00000000000cc132 : ret
0x00000000000cc143 : ret
0x00000000000cc173 : ret
0x00000000000cc189 : ret
0x00000000000cc1e2 : ret
0x00000000000cc20f : ret
0x00000000000cc220 : ret
0x00000000000cc269 : ret
0x00000000000cc279 : ret
0x00000000000cc298 : ret
0x00000000000cc2c8 : ret
0x00000000000cc2d9 : ret
0x00000000000cc2f8 : ret
0x00000000000cc328 : ret
0x00000000000cc339 : ret
0x00000000000cc3bb : ret
0x00000000000cc524 : ret
0x00000000000cc6f9 : ret
0x00000000000cc70a : ret
0x00000000000cc77f : ret
0x00000000000cc790 : ret
0x00000000000cc83b : ret
0x00000000000cc853 : ret
0x00000000000cc911 : ret
0x00000000000cc9cc : ret
0x00000000000ccaba : ret
0x00000000000ccb4e : ret
0x00000000000ccb6c : ret
0x00000000000ccc6a : ret
0x00000000000cccf4 : ret
0x00000000000ccd12 : ret
0x00000000000ccdc0 : ret
0x00000000000ccddb : ret
0x00000000000cd200 : ret
0x00000000000cd1ff : ret
0x00000000000cd22b : ret
0x00000000000cd237 : ret
0x00000000000cd247 : ret
0x00000000000cd257 : ret
0x00000000000cd267 : ret
0x00000000000cd277 : ret
0x00000000000cd28f : ret
0x00000000000cd2a0 : ret
0x00000000000cd2cb : ret
0x00000000000cd2e1 : ret
0x00000000000cd317 : ret
0x00000000000cd33b : ret
0x00000000000cd351 : ret
0x00000000000cd371 : ret
0x00000000000cd387 : ret
0x00000000000cd3b4 : ret
0x00000000000cd3d8 : ret
0x00000000000cd40f : ret
0x00000000000cd41f : ret
0x00000000000cd42f : ret
0x00000000000cd440 : ret
0x00000000000cd45f : ret
0x00000000000cd470 : ret
0x00000000000cd487 : ret
0x00000000000cd4bf : ret
0x00000000000cd4d0 : ret
0x00000000000cd4ef : ret
0x00000000000cd500 : ret
0x00000000000cd51f : ret
0x00000000000cd530 : ret
0x00000000000cd54f : ret
0x00000000000cd560 : ret
0x00000000000cd58f : ret
0x00000000000cd5a1 : ret
0x00000000000cd5e5 : ret
0x00000000000cd60f : ret
0x00000000000cd621 : ret
0x00000000000cd665 : ret
0x00000000000cd6b9 : ret
0x00000000000cd7d8 : ret
0x00000000000cd8f0 : ret
0x00000000000cd960 : ret
0x00000000000cd994 : ret
0x00000000000cd993 : ret
0x00000000000cd9b3 : ret
0x00000000000cd9de : ret
0x00000000000cda04 : ret
0x00000000000cda0d : ret
0x00000000000cda15 : ret
0x00000000000cda25 : ret
0x00000000000cda9c : ret
0x00000000000cda9b : ret
0x00000000000cdac4 : ret
0x00000000000cdae3 : ret
0x00000000000cdb0a : ret
0x00000000000cdb80 : ret
0x00000000000cdba4 : ret
0x00000000000cdbbe : ret
0x00000000000cdbd5 : ret
0x00000000000cdbeb : ret
0x00000000000cdbfa : ret
0x00000000000cdbf9 : ret
0x00000000000cdc16 : ret
0x00000000000cdc60 : ret
0x00000000000cdc85 : ret
0x00000000000cdcb9 : ret
0x00000000000cdd05 : ret
0x00000000000cdec4 : ret
0x00000000000cdf47 : ret
0x00000000000ce074 : ret
0x00000000000ce09d : ret
0x00000000000ce0ad : ret
0x00000000000ce6df : ret
0x00000000000ce6fd : ret
0x00000000000ce725 : ret
0x00000000000ce775 : ret
0x00000000000ce9d5 : ret
0x00000000000ce9f0 : ret
0x00000000000cea32 : ret
0x00000000000cea3d : ret
0x00000000000cea43 : ret
0x00000000000ceae0 : ret
0x00000000000cec93 : ret
0x00000000000cece8 : ret
0x00000000000cedc8 : ret
0x00000000000ceefd : ret
0x00000000000cf243 : ret
0x00000000000cf329 : ret
0x00000000000cf37b : ret
0x00000000000cf391 : ret
0x00000000000cf489 : ret
0x00000000000cf4b1 : ret
0x00000000000cf875 : ret
0x00000000000d01f4 : ret
0x00000000000d03fa : ret
0x00000000000d043f : ret
0x00000000000d045b : ret
0x00000000000d0468 : ret
0x00000000000d0641 : ret
0x00000000000d0b40 : ret
0x00000000000d0c8e : ret
0x00000000000d1603 : ret
0x00000000000d1602 : ret
0x00000000000d163f : ret
0x00000000000d164f : ret
0x00000000000d1689 : ret
0x00000000000d1688 : ret
0x00000000000d1691 : ret
0x00000000000d1690 : ret
0x00000000000d16dc : ret
0x00000000000d1715 : ret
0x00000000000d172d : ret
0x00000000000d176a : ret
0x00000000000d1795 : ret
0x00000000000d17a7 : ret
0x00000000000d17f0 : ret
0x00000000000d180d : ret
0x00000000000d181d : ret
0x00000000000d1853 : ret
0x00000000000d1896 : ret
0x00000000000d18a7 : ret
0x00000000000d18f1 : ret
0x00000000000d18fd : ret
0x00000000000d190e : ret
0x00000000000d1926 : ret
0x00000000000d195e : ret
0x00000000000d1a56 : ret
0x00000000000d1af1 : ret
0x00000000000d1b70 : ret
0x00000000000d20cd : ret
0x00000000000d20d4 : ret
0x00000000000d20ec : ret
0x00000000000d20eb : ret
0x00000000000d20f3 : ret
0x00000000000d2206 : ret
0x00000000000d226b : ret
0x00000000000d2296 : ret
0x00000000000d2672 : ret
0x00000000000d325c : ret
0x00000000000d3835 : ret
0x00000000000d38ce : ret
0x00000000000d3947 : ret
0x00000000000d41dd : ret
0x00000000000d4456 : ret
0x00000000000d4962 : ret
0x00000000000d51da : ret
0x00000000000d5442 : ret
0x00000000000d5464 : ret
0x00000000000d55bc : ret
0x00000000000d564d : ret
0x00000000000d566b : ret
0x00000000000d581e : ret
0x00000000000d590a : ret
0x00000000000d5916 : ret
0x00000000000d5939 : ret
0x00000000000d5949 : ret
0x00000000000d5968 : ret
0x00000000000d5979 : ret
0x00000000000d59a0 : ret
0x00000000000d59c0 : ret
0x00000000000d59d6 : ret
0x00000000000d59e9 : ret
0x00000000000d5b8a : ret
0x00000000000d5c29 : ret
0x00000000000d5c43 : ret
0x00000000000d5c73 : ret
0x00000000000d5d25 : ret
0x00000000000d5d35 : ret
0x00000000000d5de2 : ret
0x00000000000d5dfc : ret
0x00000000000d5e31 : ret
0x00000000000d5fa0 : ret
0x00000000000d64ec : ret
0x00000000000d656a : ret
0x00000000000d65b8 : ret
0x00000000000d6bc8 : ret
0x00000000000d6bd1 : ret
0x00000000000d6c44 : ret
0x00000000000d6c62 : ret
0x00000000000d6ce9 : ret
0x00000000000d6d6d : ret
0x00000000000d6da5 : ret
0x00000000000d6df0 : ret
0x00000000000d6ecb : ret
0x00000000000d6ef3 : ret
0x00000000000d6f93 : ret
0x00000000000d6fd6 : ret
0x00000000000d714c : ret
0x00000000000d71ee : ret
0x00000000000d71fa : ret
0x00000000000d71f9 : ret
0x00000000000d7237 : ret
0x00000000000d7243 : ret
0x00000000000d7242 : ret
0x00000000000d7241 : ret
0x00000000000d729f : ret
0x00000000000d72bd : ret
0x00000000000d72ec : ret
0x00000000000d72f3 : ret
0x00000000000d7303 : ret
0x00000000000d7324 : ret
0x00000000000d7335 : ret
0x00000000000d7354 : ret
0x00000000000d7443 : ret
0x00000000000d745f : ret
0x00000000000d7565 : ret
0x00000000000d7cac : ret
0x00000000000d7cb6 : ret
0x00000000000d7fda : ret
0x00000000000d818e : ret
0x00000000000d8276 : ret
0x00000000000d82af : ret
0x00000000000d83af : ret
0x00000000000d844f : ret
0x00000000000d853d : ret
0x00000000000d85cc : ret
0x00000000000d866e : ret
0x00000000000d86d3 : ret
0x00000000000d8704 : ret
0x00000000000d87c4 : ret
0x00000000000d890e : ret
0x00000000000d8926 : ret
0x00000000000d896b : ret
0x00000000000d8a39 : ret
0x00000000000d8c54 : ret
0x00000000000d8ccd : ret
0x00000000000d8d3b : ret
0x00000000000d8df1 : ret
0x00000000000d8e45 : ret
0x00000000000d8e52 : ret
0x00000000000d8e5d : ret
0x00000000000d8f3c : ret
0x00000000000d91a2 : ret
0x00000000000d91d5 : ret
0x00000000000d92a6 : ret
0x00000000000d92a5 : ret
0x00000000000d932f : ret
0x00000000000d95b8 : ret
0x00000000000d95be : ret
0x00000000000d95c4 : ret
0x00000000000d983e : ret
0x00000000000d98bd : ret
0x00000000000d991c : ret
0x00000000000d999e : ret
0x00000000000d9a00 : ret
0x00000000000d9b56 : ret
0x00000000000d9c3f : ret
0x00000000000d9d69 : ret
0x00000000000da1ce : ret
0x00000000000da222 : ret
0x00000000000da29e : ret
0x00000000000da2d8 : ret
0x00000000000da3c2 : ret
0x00000000000da3f5 : ret
0x00000000000da5c3 : ret
0x00000000000da882 : ret
0x00000000000daa24 : ret
0x00000000000daae9 : ret
0x00000000000dab82 : ret
0x00000000000dabb2 : ret
0x00000000000dac1f : ret
0x00000000000dacbf : ret
0x00000000000daead : ret
0x00000000000daeef : ret
0x00000000000daf3c : ret
0x00000000000daf66 : ret
0x00000000000daf7c : ret
0x00000000000db0fc : ret
0x00000000000db103 : ret
0x00000000000db23b : ret
0x00000000000db499 : ret
0x00000000000db63c : ret
0x00000000000db722 : ret
0x00000000000db882 : ret
0x00000000000dbaa9 : ret
0x00000000000dbbbb : ret
0x00000000000dbe7d : ret
0x00000000000dbf6a : ret
0x00000000000dc0cc : ret
0x00000000000dc0ef : ret
0x00000000000dc129 : ret
0x00000000000dc342 : ret
0x00000000000dc349 : ret
0x00000000000dc374 : ret
0x00000000000dc46f : ret
0x00000000000dc5d0 : ret
0x00000000000dc5e1 : ret
0x00000000000dc5e6 : ret
0x00000000000dc615 : ret
0x00000000000dc695 : ret
0x00000000000dc6b1 : ret
0x00000000000dc793 : ret
0x00000000000dc878 : ret
0x00000000000dc901 : ret
0x00000000000dca02 : ret
0x00000000000dcbb9 : ret
0x00000000000dcbbc : ret
0x00000000000dcd9e : ret
0x00000000000dcda5 : ret
0x00000000000dcdcb : ret
0x00000000000dcf5b : ret
0x00000000000dd010 : ret
0x00000000000dd086 : ret
0x00000000000dd172 : ret
0x00000000000dd263 : ret
0x00000000000dd3ba : ret
0x00000000000dd600 : ret
0x00000000000dd6b5 : ret
0x00000000000dd9c8 : ret
0x00000000000dd9cf : ret
0x00000000000dd9fa : ret
0x00000000000ddacd : ret
0x00000000000ddaed : ret
0x00000000000ddc5e : ret
0x00000000000ddcf0 : ret
0x00000000000ddd6d : ret
0x00000000000ddec7 : ret
0x00000000000ddf0e : ret
0x00000000000de017 : ret
0x00000000000de32e : ret
0x00000000000de37f : ret
0x00000000000de40b : ret
0x00000000000de45e : ret
0x00000000000de678 : ret
0x00000000000de702 : ret
0x00000000000de796 : ret
0x00000000000de7ba : ret
0x00000000000de811 : ret
0x00000000000dea25 : ret
0x00000000000dea78 : ret
0x00000000000deb6d : ret
0x00000000000dedad : ret
0x00000000000df076 : ret
0x00000000000df121 : ret
0x00000000000df25d : ret
0x00000000000df3e1 : ret
0x00000000000df433 : ret
0x00000000000df691 : ret
0x00000000000df6b0 : ret
0x00000000000df7d1 : ret
0x00000000000df854 : ret
0x00000000000dfa0c : ret
0x00000000000dfa86 : ret
0x00000000000dfae7 : ret
0x00000000000e025b : ret
0x00000000000e03e9 : ret
0x00000000000e0555 : ret
0x00000000000e05e3 : ret
0x00000000000e073c : ret
0x00000000000e083b : ret
0x00000000000e08a2 : ret
0x00000000000e08ce : ret
0x00000000000e0983 : ret
0x00000000000e0ce9 : ret
0x00000000000e10c1 : ret
0x00000000000e1405 : ret
0x00000000000e1627 : ret
0x00000000000e16c2 : ret
0x00000000000e1913 : ret
0x00000000000e1b72 : ret
0x00000000000e1d6e : ret
0x00000000000e202f : ret
0x00000000000e20a9 : ret
0x00000000000e210d : ret
0x00000000000e2165 : ret
0x00000000000e22f9 : ret
0x00000000000e27a1 : ret
0x00000000000e29bc : ret
0x00000000000e300d : ret
0x00000000000e3388 : ret
0x00000000000e34ff : ret
0x00000000000e3587 : ret
0x00000000000e3590 : ret
0x00000000000e3599 : ret
0x00000000000e35a2 : ret
0x00000000000e3ea3 : ret
0x00000000000e405b : ret
0x00000000000e4134 : ret
0x00000000000e41fe : ret
0x00000000000e421d : ret
0x00000000000e44a7 : ret
0x00000000000e46b1 : ret
0x00000000000e4829 : ret
0x00000000000e4c0a : ret
0x00000000000e4ea7 : ret
0x00000000000e4f80 : ret
0x00000000000e5141 : ret
0x00000000000e5163 : ret
0x00000000000e5555 : ret
0x00000000000e56f2 : ret
0x00000000000e57c0 : ret
0x00000000000e5a64 : ret
0x00000000000e5b31 : ret
0x00000000000e5bc2 : ret
0x00000000000e5c6c : ret
0x00000000000e5cbe : ret
0x00000000000e5d03 : ret
0x00000000000e5d02 : ret
0x00000000000e5ea3 : ret
0x00000000000e5f26 : ret
0x00000000000e62c5 : ret
0x00000000000e6e4f : ret
0x00000000000e71c3 : ret
0x00000000000e7432 : ret
0x00000000000e760c : ret
0x00000000000e7618 : ret
0x00000000000e766f : ret
0x00000000000e7ae6 : ret
0x00000000000e7afd : ret
0x00000000000e7bc2 : ret
0x00000000000e7e28 : ret
0x00000000000e7e55 : ret
0x00000000000e7ea8 : ret
0x00000000000e7f5b : ret
0x00000000000e812d : ret
0x00000000000e822e : ret
0x00000000000e8237 : ret
0x00000000000e8283 : ret
0x00000000000e829e : ret
0x00000000000e82dc : ret
0x00000000000e8353 : ret
0x00000000000e8378 : ret
0x00000000000e83c3 : ret
0x00000000000e8486 : ret
0x00000000000e849c : ret
0x00000000000e84fe : ret
0x00000000000e8515 : ret
0x00000000000e85f4 : ret
0x00000000000e8637 : ret
0x00000000000e8654 : ret
0x00000000000e8689 : ret
0x00000000000e8733 : ret
0x00000000000e87e9 : ret
0x00000000000e8839 : ret
0x00000000000e888e : ret
0x00000000000e88a7 : ret
0x00000000000e88d6 : ret
0x00000000000e8a7a : ret
0x00000000000e8c10 : ret
0x00000000000e90b6 : ret
0x00000000000e9196 : ret
0x00000000000e91b4 : ret
0x00000000000e9212 : ret
0x00000000000e92b7 : ret
0x00000000000e92bf : ret
0x00000000000e94d4 : ret
0x00000000000e9549 : ret
0x00000000000e9575 : ret
0x00000000000e95a5 : ret
0x00000000000e9620 : ret
0x00000000000e971e : ret
0x00000000000e98ba : ret
0x00000000000e9909 : ret
0x00000000000e9b53 : ret
0x00000000000e9eb0 : ret
0x00000000000e9fba : ret
0x00000000000ea089 : ret
0x00000000000ea4bd : ret
0x00000000000ea69c : ret
0x00000000000ea6b7 : ret
0x00000000000ea6d7 : ret
0x00000000000ea6f2 : ret
0x00000000000ea714 : ret
0x00000000000ea735 : ret
0x00000000000ea757 : ret
0x00000000000ea76f : ret
0x00000000000ea780 : ret
0x00000000000ea79f : ret
0x00000000000ea7b0 : ret
0x00000000000ea7cf : ret
0x00000000000ea7e0 : ret
0x00000000000ea7ff : ret
0x00000000000ea810 : ret
0x00000000000ea82f : ret
0x00000000000ea840 : ret
0x00000000000ea85f : ret
0x00000000000ea870 : ret
0x00000000000ea88f : ret
0x00000000000ea8a0 : ret
0x00000000000ea8bf : ret
0x00000000000ea8d0 : ret
0x00000000000ea931 : ret
0x00000000000ea930 : ret
0x00000000000ea94b : ret
0x00000000000ea985 : ret
0x00000000000ea984 : ret
0x00000000000ea9a1 : ret
0x00000000000ea9c6 : ret
0x00000000000ea9c5 : ret
0x00000000000ea9e4 : ret
0x00000000000eaab9 : ret
0x00000000000eaae3 : ret
0x00000000000eab32 : ret
0x00000000000eab5d : ret
0x00000000000eac27 : ret
0x00000000000eadf7 : ret
0x00000000000eb2e7 : ret
0x00000000000eb4d3 : ret
0x00000000000eba79 : ret
0x00000000000ebbbd : ret
0x00000000000ebce3 : ret
0x00000000000ebe87 : ret
0x00000000000ec544 : ret
0x00000000000ec6dc : ret
0x00000000000ec8a9 : ret
0x00000000000ec902 : ret
0x00000000000ecda5 : ret
0x00000000000ecfa6 : ret
0x00000000000ed4f8 : ret
0x00000000000ed5bc : ret
0x00000000000ed909 : ret
0x00000000000edbd6 : ret
0x00000000000edc97 : ret
0x00000000000eddb2 : ret
0x00000000000edf03 : ret
0x00000000000ee2b0 : ret
0x00000000000eeae4 : ret
0x00000000000eef93 : ret
0x00000000000ef299 : ret
0x00000000000ef2c7 : ret
0x00000000000ef6dc : ret
0x00000000000ef924 : ret
0x00000000000ef923 : ret
0x00000000000efb1b : ret
0x00000000000efc75 : ret
0x00000000000efcc4 : ret
0x00000000000efced : ret
0x00000000000efde9 : ret
0x00000000000efe04 : ret
0x00000000000efe72 : ret
0x00000000000f021e : ret
0x00000000000f036f : ret
0x00000000000f037f : ret
0x00000000000f040e : ret
0x00000000000f0455 : ret
0x00000000000f049b : ret
0x00000000000f0540 : ret
0x00000000000f05b5 : ret
0x00000000000f06bc : ret
0x00000000000f06d2 : ret
0x00000000000f07b7 : ret
0x00000000000f08b2 : ret
0x00000000000f09c4 : ret
0x00000000000f0cbd : ret
0x00000000000f0ef8 : ret
0x00000000000f0f07 : ret
0x00000000000f103d : ret
0x00000000000f11b2 : ret
0x00000000000f12f8 : ret
0x00000000000f1516 : ret
0x00000000000f1570 : ret
0x00000000000f1607 : ret
0x00000000000f1636 : ret
0x00000000000f1689 : ret
0x00000000000f1731 : ret
0x00000000000f1776 : ret
0x00000000000f17e3 : ret
0x00000000000f1937 : ret
0x00000000000f1a1b : ret
0x00000000000f1a52 : ret
0x00000000000f1ad0 : ret
0x00000000000f1d37 : ret
0x00000000000f1ea7 : ret
0x00000000000f2481 : ret
0x00000000000f263e : ret
0x00000000000f265e : ret
0x00000000000f2707 : ret
0x00000000000f2780 : ret
0x00000000000f2d7e : ret
0x00000000000f30c4 : ret
0x00000000000f3158 : ret
0x00000000000f327c : ret
0x00000000000f3315 : ret
0x00000000000f340b : ret
0x00000000000f3482 : ret
0x00000000000f34b2 : ret
0x00000000000f34b1 : ret
0x00000000000f34e0 : ret
0x00000000000f38fc : ret
0x00000000000f3bcf : ret
0x00000000000f3cbc : ret
0x00000000000f3eb1 : ret
0x00000000000f40ae : ret
0x00000000000f418c : ret
0x00000000000f41d6 : ret
0x00000000000f4295 : ret
0x00000000000f439a : ret
0x00000000000f4429 : ret
0x00000000000f4492 : ret
0x00000000000f44bc : ret
0x00000000000f44bb : ret
0x00000000000f4866 : ret
0x00000000000f49a7 : ret
0x00000000000f4ce1 : ret
0x00000000000f4e5a : ret
0x00000000000f50b3 : ret
0x00000000000f5a7b : ret
0x00000000000f5aae : ret
0x00000000000f5abf : ret
0x00000000000f5adb : ret
0x00000000000f5b0e : ret
0x00000000000f5b1f : ret
0x00000000000f5b59 : ret
0x00000000000f5b88 : ret
0x00000000000f5bb5 : ret
0x00000000000f5bdb : ret
0x00000000000f5bf2 : ret
0x00000000000f5c1f : ret
0x00000000000f5c2d : ret
0x00000000000f5c5a : ret
0x00000000000f5cb0 : ret
0x00000000000f5cc8 : ret
0x00000000000f5d70 : ret
0x00000000000f5d79 : ret
0x00000000000f5dfe : ret
0x00000000000f5e02 : ret
0x00000000000f5e94 : ret
0x00000000000f5f24 : ret
0x00000000000f5f38 : ret
0x00000000000f5f4d : ret
0x00000000000f5f4c : ret
0x00000000000f5f55 : ret
0x00000000000f5f67 : ret
0x00000000000f5f75 : ret
0x00000000000f5f8f : ret
0x00000000000f5f9f : ret
0x00000000000f6041 : ret
0x00000000000f6392 : ret
0x00000000000f6520 : ret
0x00000000000f65b9 : ret
0x00000000000f6651 : ret
0x00000000000f67e1 : ret
0x00000000000f67fa : ret
0x00000000000f680a : ret
0x00000000000f68c1 : ret
0x00000000000f68db : ret
0x00000000000f68da : ret
0x00000000000f68e8 : ret
0x00000000000f68fa : ret
0x00000000000f6911 : ret
0x00000000000f691a : ret
0x00000000000f6943 : ret
0x00000000000f6a14 : ret
0x00000000000f6a45 : ret
0x00000000000f6a44 : ret
0x00000000000f6a47 : ret
0x00000000000f6a46 : ret
0x00000000000f6a70 : ret
0x00000000000f6af0 : ret
0x00000000000f6b13 : ret
0x00000000000f6b4f : ret
0x00000000000f6b60 : ret
0x00000000000f6b95 : ret
0x00000000000f6bc7 : ret
0x00000000000f6bee : ret
0x00000000000f6bed : ret
0x00000000000f6c01 : ret
0x00000000000f6c1b : ret
0x00000000000f6c3d : ret
0x00000000000f6c3c : ret
0x00000000000f6c51 : ret
0x00000000000f6c6b : ret
0x00000000000f6c8e : ret
0x00000000000f6c8d : ret
0x00000000000f6ca1 : ret
0x00000000000f6cbb : ret
0x00000000000f6ce6 : ret
0x00000000000f6ce5 : ret
0x00000000000f6d01 : ret
0x00000000000f6d1b : ret
0x00000000000f6d4a : ret
0x00000000000f6d49 : ret
0x00000000000f6d61 : ret
0x00000000000f6d7b : ret
0x00000000000f6da3 : ret
0x00000000000f6da2 : ret
0x00000000000f6db9 : ret
0x00000000000f6dd3 : ret
0x00000000000f6def : ret
0x00000000000f6e00 : ret
0x00000000000f6e1f : ret
0x00000000000f6e30 : ret
0x00000000000f6e77 : ret
0x00000000000f6ec2 : ret
0x00000000000f6ed7 : ret
0x00000000000f6eef : ret
0x00000000000f6f00 : ret
0x00000000000f6f1f : ret
0x00000000000f6f30 : ret
0x00000000000f6f53 : ret
0x00000000000f6f82 : ret
0x00000000000f6f81 : ret
0x00000000000f6f99 : ret
0x00000000000f6fb3 : ret
0x00000000000f6fcb : ret
0x00000000000f6fdf : ret
0x00000000000f6ff0 : ret
0x00000000000f700f : ret
0x00000000000f7020 : ret
0x00000000000f7048 : ret
0x00000000000f7078 : ret
0x00000000000f7089 : ret
0x00000000000f713e : ret
0x00000000000f71b7 : ret
0x00000000000f7268 : ret
0x00000000000f7298 : ret
0x00000000000f72a9 : ret
0x00000000000f72c8 : ret
0x00000000000f72f8 : ret
0x00000000000f7309 : ret
0x00000000000f731f : ret
0x00000000000f7330 : ret
0x00000000000f738c : ret
0x00000000000f7497 : ret
0x00000000000f74a7 : ret
0x00000000000f74e9 : ret
0x00000000000f7579 : ret
0x00000000000f764c : ret
0x00000000000f764b : ret
0x00000000000f767b : ret
0x00000000000f7691 : ret
0x00000000000f76f4 : ret
0x00000000000f7728 : ret
0x00000000000f77af : ret
0x00000000000f77c0 : ret
0x00000000000f7840 : ret
0x00000000000f784a : ret
0x00000000000f786a : ret
0x00000000000f78a0 : ret
0x00000000000f78f8 : ret
0x00000000000f7928 : ret
0x00000000000f7939 : ret
0x00000000000f794f : ret
0x00000000000f7960 : ret
0x00000000000f797f : ret
0x00000000000f7990 : ret
0x00000000000f79af : ret
0x00000000000f79c0 : ret
0x00000000000f79df : ret
0x00000000000f79f0 : ret
0x00000000000f7a0f : ret
0x00000000000f7a20 : ret
0x00000000000f7a48 : ret
0x00000000000f7a78 : ret
0x00000000000f7a7d : ret
0x00000000000f7a78 : ret
0x00000000000f7a89 : ret
0x00000000000f7a9f : ret
0x00000000000f7aa4 : ret
0x00000000000f7a9f : ret
0x00000000000f7ab0 : ret
0x00000000000f7acf : ret
0x00000000000f7ad4 : ret
0x00000000000f7acf : ret
0x00000000000f7ae0 : ret
0x00000000000f7b5b : ret
0x00000000000f7bd8 : ret
0x00000000000f7e73 : ret
0x00000000000f7f6f : ret
0x00000000000f7f7a : ret
0x00000000000f7f79 : ret
0x00000000000f7fbc : ret
0x00000000000f8083 : ret
0x00000000000f80be : ret
0x00000000000f80c5 : ret
0x00000000000f818d : ret
0x00000000000f8234 : ret
0x00000000000f829a : ret
0x00000000000f82b5 : ret
0x00000000000f830f : ret
0x00000000000f8320 : ret
0x00000000000f833f : ret
0x00000000000f8350 : ret
0x00000000000f836f : ret
0x00000000000f8380 : ret
0x00000000000f83a2 : ret
0x00000000000f83b3 : ret
0x00000000000f8474 : ret
0x00000000000f85af : ret
0x00000000000f86c9 : ret
0x00000000000f8968 : ret
0x00000000000f897f : ret
0x00000000000f8990 : ret
0x00000000000f89b2 : ret
0x00000000000f89c3 : ret
0x00000000000f89df : ret
0x00000000000f89f0 : ret
0x00000000000f8a0f : ret
0x00000000000f8a20 : ret
0x00000000000f8a3f : ret
0x00000000000f8a50 : ret
0x00000000000f8a72 : ret
0x00000000000f8a83 : ret
0x00000000000f8a9f : ret
0x00000000000f8ab0 : ret
0x00000000000f8acf : ret
0x00000000000f8ae0 : ret
0x00000000000f8aff : ret
0x00000000000f8b10 : ret
0x00000000000f8b51 : ret
0x00000000000f8b50 : ret
0x00000000000f8c41 : ret
0x00000000000f8ca1 : ret
0x00000000000f8d03 : ret
0x00000000000f8d09 : ret
0x00000000000f9038 : ret
0x00000000000f90c0 : ret
0x00000000000f90f2 : ret
0x00000000000f911e : ret
0x00000000000f9172 : ret
0x00000000000f91d0 : ret
0x00000000000f9269 : ret
0x00000000000f93ce : ret
0x00000000000f9487 : ret
0x00000000000f9576 : ret
0x00000000000f9682 : ret
0x00000000000f96b4 : ret
0x00000000000f991a : ret
0x00000000000f9a43 : ret
0x00000000000f9ae3 : ret
0x00000000000f9b6b : ret
0x00000000000f9bc3 : ret
0x00000000000f9e59 : ret
0x00000000000f9ec9 : ret
0x00000000000fa059 : ret
0x00000000000fa188 : ret
0x00000000000fa855 : ret
0x00000000000fa887 : ret
0x00000000000fa89b : ret
0x00000000000fa8dc : ret
0x00000000000faa68 : ret
0x00000000000fab14 : ret
0x00000000000faccc : ret
0x00000000000faef3 : ret
0x00000000000fb024 : ret
0x00000000000fb059 : ret
0x00000000000fb1b8 : ret
0x00000000000fb26d : ret
0x00000000000fb514 : ret
0x00000000000fb554 : ret
0x00000000000fb5ab : ret
0x00000000000fb5c3 : ret
0x00000000000fb678 : ret
0x00000000000fb68c : ret
0x00000000000fb6da : ret
0x00000000000fb6ff : ret
0x00000000000fb710 : ret
0x00000000000fb738 : ret
0x00000000000fb768 : ret
0x00000000000fb779 : ret
0x00000000000fb7cd : ret
0x00000000000fb831 : ret
0x00000000000fb88e : ret
0x00000000000fb8d2 : ret
0x00000000000fba65 : ret
0x00000000000fba73 : ret
0x00000000000fbaa2 : ret
0x00000000000fbab3 : ret
0x00000000000fbadb : ret
0x00000000000fbada : ret
0x00000000000fbaf1 : ret
0x00000000000fbb05 : ret
0x00000000000fbb2f : ret
0x00000000000fbb2e : ret
0x00000000000fbb41 : ret
0x00000000000fbb5b : ret
0x00000000000fbe1b : ret
0x00000000000fc1da : ret
0x00000000000fc1d9 : ret
0x00000000000fc1d8 : ret
0x00000000000fc1f5 : ret
0x00000000000fc21b : ret
0x00000000000fc24e : ret
0x00000000000fc25f : ret
0x00000000000fc282 : ret
0x00000000000fc299 : ret
0x00000000000fc2f1 : ret
0x00000000000fc318 : ret
0x00000000000fc32e : ret
0x00000000000fc332 : ret
0x00000000000fc365 : ret
0x00000000000fc383 : ret
0x00000000000fc3bb : ret
0x00000000000fc3cf : ret
0x00000000000fc3e3 : ret
0x00000000000fc43b : ret
0x00000000000fc45a : ret
0x00000000000fc47a : ret
0x00000000000fc4e4 : ret
0x00000000000fc5a0 : ret
0x00000000000fc5d4 : ret
0x00000000000fc6a5 : ret
0x00000000000fc70b : ret
0x00000000000fc728 : ret
0x00000000000fc751 : ret
0x00000000000fc77d : ret
0x00000000000fc7a6 : ret
0x00000000000fc7c1 : ret
0x00000000000fc808 : ret
0x00000000000fc8a7 : ret
0x00000000000fc8f3 : ret
0x00000000000fc94a : ret
0x00000000000fc96f : ret
0x00000000000fc980 : ret
0x00000000000fc99f : ret
0x00000000000fc9b0 : ret
0x00000000000fc9cf : ret
0x00000000000fc9e0 : ret
0x00000000000fca39 : ret
0x00000000000fca46 : ret
0x00000000000fca81 : ret
0x00000000000fca98 : ret
0x00000000000fca9d : ret
0x00000000000fcab5 : ret
0x00000000000fcae6 : ret
0x00000000000fcb50 : ret
0x00000000000fccf8 : ret
0x00000000000fcd35 : ret
0x00000000000fcd34 : ret
0x00000000000fcd51 : ret
0x00000000000fcd6f : ret
0x00000000000fcd80 : ret
0x00000000000fcdf0 : ret
0x00000000000fce0e : ret
0x00000000000fce36 : ret
0x00000000000fce35 : ret
0x00000000000fce5c : ret
0x00000000000fce73 : ret
0x00000000000fcec6 : ret
0x00000000000fced2 : ret
0x00000000000fcf04 : ret
0x00000000000fcf10 : ret
0x00000000000fcf35 : ret
0x00000000000fcf4f : ret
0x00000000000fcf60 : ret
0x00000000000fcf88 : ret
0x00000000000fcfb8 : ret
0x00000000000fcfc9 : ret
0x00000000000fcfe8 : ret
0x00000000000fd018 : ret
0x00000000000fd029 : ret
0x00000000000fd052 : ret
0x00000000000fd06b : ret
0x00000000000fd0c4 : ret
0x00000000000fd102 : ret
0x00000000000fd11b : ret
0x00000000000fd174 : ret
0x00000000000fd1ad : ret
0x00000000000fd1c1 : ret
0x00000000000fd1fe : ret
0x00000000000fd21d : ret
0x00000000000fd231 : ret
0x00000000000fd26e : ret
0x00000000000fd29e : ret
0x00000000000fd2b1 : ret
0x00000000000fd2f9 : ret
0x00000000000fd310 : ret
0x00000000000fd34e : ret
0x00000000000fd361 : ret
0x00000000000fd393 : ret
0x00000000000fd3a9 : ret
0x00000000000fd3c0 : ret
0x00000000000fd3e1 : ret
0x00000000000fd3e0 : ret
0x00000000000fd432 : ret
0x00000000000fd46f : ret
0x00000000000fd4a9 : ret
0x00000000000fd4df : ret
0x00000000000fd4f0 : ret
0x00000000000fd522 : ret
0x00000000000fd555 : ret
0x00000000000fd57f : ret
0x00000000000fd590 : ret
0x00000000000fd5bb : ret
0x00000000000fd5ee : ret
0x00000000000fd5ff : ret
0x00000000000fd665 : ret
0x00000000000fd6cf : ret
0x00000000000fd70f : ret
0x00000000000fd720 : ret
0x00000000000fd73f : ret
0x00000000000fd750 : ret
0x00000000000fd778 : ret
0x00000000000fd7a8 : ret
0x00000000000fd7b9 : ret
0x00000000000fd7cf : ret
0x00000000000fd7e0 : ret
0x00000000000fd808 : ret
0x00000000000fd838 : ret
0x00000000000fd849 : ret
0x00000000000fd85f : ret
0x00000000000fd870 : ret
0x00000000000fd89f : ret
0x00000000000fd89e : ret
0x00000000000fd8b1 : ret
0x00000000000fd95a : ret
0x00000000000fda25 : ret
0x00000000000fdb2b : ret
0x00000000000fdbb3 : ret
0x00000000000fdbcf : ret
0x00000000000fdbe0 : ret
0x00000000000fdbff : ret
0x00000000000fdc10 : ret
0x00000000000fdc2f : ret
0x00000000000fdc40 : ret
0x00000000000fdc6d : ret
0x00000000000fdc9c : ret
0x00000000000fdc9b : ret
0x00000000000fdc9e : ret
0x00000000000fdcd3 : ret
0x00000000000fdd03 : ret
0x00000000000fdd5d : ret
0x00000000000fdd5c : ret
0x00000000000fdd98 : ret
0x00000000000fddbb : ret
0x00000000000fdddb : ret
0x00000000000fde55 : ret
0x00000000000fde54 : ret
0x00000000000fde73 : ret
0x00000000000fdea8 : ret
0x00000000000fdfa5 : ret
0x00000000000fe106 : ret
0x00000000000fe174 : ret
0x00000000000fe2c7 : ret
0x00000000000fe334 : ret
0x00000000000fe445 : ret
0x00000000000fe444 : ret
0x00000000000fe469 : ret
0x00000000000fe503 : ret
0x00000000000fe571 : ret
0x00000000000fe570 : ret
0x00000000000fe638 : ret
0x00000000000fe657 : ret
0x00000000000fe665 : ret
0x00000000000fe799 : ret
0x00000000000fe7e9 : ret
0x00000000000fe825 : ret
0x00000000000fe9c0 : ret
0x00000000000fea39 : ret
0x00000000000febe4 : ret
0x00000000000febfb : ret
0x00000000000fedc7 : ret
0x00000000000fef78 : ret
0x00000000000fef9b : ret
0x00000000000fefac : ret
0x00000000000fefc0 : ret
0x00000000000fefbf : ret
0x00000000000fefd9 : ret
0x00000000000ff054 : ret
0x00000000000ff053 : ret
0x00000000000ff069 : ret
0x00000000000ff08b : ret
0x00000000000ff0f4 : ret
0x00000000000ff0f3 : ret
0x00000000000ff109 : ret
0x00000000000ff12b : ret
0x00000000000ff148 : ret
0x00000000000ff147 : ret
0x00000000000ff161 : ret
0x00000000000ff17f : ret
0x00000000000ff190 : ret
0x00000000000ff1af : ret
0x00000000000ff1c0 : ret
0x00000000000ff1eb : ret
0x00000000000ff208 : ret
0x00000000000ff22b : ret
0x00000000000ff23f : ret
0x00000000000ff259 : ret
0x00000000000ff258 : ret
0x00000000000ff2ce : ret
0x00000000000ff329 : ret
0x00000000000ff33e : ret
0x00000000000ff43a : ret
0x00000000000ff45a : ret
0x00000000000ff4c2 : ret
0x00000000000ff4dc : ret
0x00000000000ff579 : ret
0x00000000000ff5c2 : ret
0x00000000000ff5d2 : ret
0x00000000000ff5f7 : ret
0x00000000000ff620 : ret
0x00000000000ff66a : ret
0x00000000000ff6b7 : ret
0x00000000000ff6e5 : ret
0x00000000000ff778 : ret
0x00000000000ff79e : ret
0x00000000000ff7ce : ret
0x00000000000ff80d : ret
0x00000000000ff815 : ret
0x00000000000ff8de : ret
0x00000000000ff8f1 : ret
0x00000000000ff962 : ret
0x00000000000ff9d1 : ret
0x00000000000ff9e9 : ret
0x00000000000ffa1e : ret
0x00000000000ffa67 : ret
0x00000000000ffad1 : ret
0x00000000000ffaf4 : ret
0x00000000000ffb38 : ret
0x00000000000ffbeb : ret
0x00000000000ffce8 : ret
0x00000000000ffd55 : ret
0x00000000000ffd6d : ret
0x00000000000ffda0 : ret
0x00000000000ffdf6 : ret
0x00000000000ffe94 : ret
0x00000000000ffec8 : ret
0x00000000001000d5 : ret
0x0000000000100306 : ret
0x0000000000100538 : ret
0x000000000010054a : ret
0x0000000000100599 : ret
0x0000000000100642 : ret
0x000000000010088a : ret
0x0000000000100ad0 : ret
0x0000000000100b31 : ret
0x0000000000100be9 : ret
0x0000000000100c6c : ret
0x0000000000100ea2 : ret
0x00000000001010d8 : ret
0x0000000000101139 : ret
0x0000000000101274 : ret
0x000000000010148b : ret
0x00000000001014b1 : ret
0x00000000001014b0 : ret
0x00000000001014e1 : ret
0x00000000001014f2 : ret
0x0000000000101519 : ret
0x0000000000101588 : ret
0x00000000001015e8 : ret
0x000000000010166b : ret
0x00000000001016cc : ret
0x000000000010174f : ret
0x0000000000101760 : ret
0x000000000010177f : ret
0x0000000000101790 : ret
0x00000000001017b8 : ret
0x00000000001017e8 : ret
0x00000000001017f9 : ret
0x000000000010180f : ret
0x0000000000101820 : ret
0x000000000010183f : ret
0x0000000000101850 : ret
0x0000000000101872 : ret
0x0000000000101883 : ret
0x000000000010189f : ret
0x00000000001018b0 : ret
0x00000000001018cf : ret
0x00000000001018e0 : ret
0x00000000001018ff : ret
0x0000000000101910 : ret
0x000000000010192f : ret
0x0000000000101940 : ret
0x0000000000101996 : ret
0x00000000001019d2 : ret
0x0000000000101a31 : ret
0x0000000000101a4f : ret
0x0000000000101a67 : ret
0x0000000000101b33 : ret
0x0000000000101b91 : ret
0x0000000000101c18 : ret
0x0000000000101c3f : ret
0x0000000000101c7a : ret
0x0000000000101ce0 : ret
0x0000000000101d3d : ret
0x0000000000101df5 : ret
0x0000000000101e34 : ret
0x0000000000101e63 : ret
0x0000000000101f40 : ret
0x0000000000101f74 : ret
0x0000000000101fc9 : ret
0x0000000000101ffe : ret
0x00000000001020b3 : ret
0x0000000000102111 : ret
0x0000000000102194 : ret
0x00000000001021bf : ret
0x00000000001021fc : ret
0x0000000000102260 : ret
0x0000000000102373 : ret
0x00000000001023b6 : ret
0x0000000000102456 : ret
0x00000000001024ce : ret
0x00000000001024f3 : ret
0x000000000010257b : ret
0x00000000001025d9 : ret
0x00000000001025ee : ret
0x0000000000102625 : ret
0x000000000010263e : ret
0x0000000000102673 : ret
0x0000000000102680 : ret
0x00000000001026c0 : ret
0x00000000001026c6 : ret
0x0000000000102703 : ret
0x0000000000102798 : ret
0x0000000000102ea9 : ret
0x0000000000102f96 : ret
0x0000000000102fed : ret
0x000000000010307d : ret
0x0000000000103091 : ret
0x000000000010313a : ret
0x0000000000103150 : ret
0x000000000010315f : ret
0x0000000000103162 : ret
0x00000000001031c6 : ret
0x000000000010320b : ret
0x0000000000103226 : ret
0x00000000001032c2 : ret
0x000000000010332d : ret
0x0000000000103412 : ret
0x0000000000103593 : ret
0x00000000001035e7 : ret
0x0000000000104066 : ret
0x00000000001041af : ret
0x0000000000104939 : ret
0x0000000000104938 : ret
0x00000000001049ac : ret
0x00000000001049ce : ret
0x0000000000104a41 : ret
0x0000000000104a58 : ret
0x0000000000104a5b : ret
0x0000000000104ad0 : ret
0x0000000000104b1f : ret
0x0000000000104b1e : ret
0x0000000000104b6f : ret
0x0000000000104c35 : ret
0x0000000000104e37 : ret
0x0000000000104e9f : ret
0x0000000000104f76 : ret
0x0000000000104fc4 : ret
0x000000000010516e : ret
0x00000000001052db : ret
0x000000000010537c : ret
0x000000000010548f : ret
0x000000000010562f : ret
0x00000000001056c7 : ret
0x00000000001056c6 : ret
0x00000000001056e1 : ret
0x00000000001056fb : ret
0x0000000000105769 : ret
0x0000000000105a1d : ret
0x0000000000105a22 : ret
0x0000000000105a7c : ret
0x0000000000105ba5 : ret
0x0000000000105bfc : ret
0x0000000000105ca8 : ret
0x0000000000105cd5 : ret
0x0000000000105d42 : ret
0x0000000000105db2 : ret
0x0000000000105dde : ret
0x0000000000105e35 : ret
0x0000000000105e73 : ret
0x0000000000105f26 : ret
0x0000000000105f61 : ret
0x0000000000105f77 : ret
0x0000000000105f9d : ret
0x0000000000105fd4 : ret
0x0000000000105ff2 : ret
0x0000000000106003 : ret
0x000000000010601f : ret
0x0000000000106030 : ret
0x000000000010604f : ret
0x0000000000106060 : ret
0x0000000000106082 : ret
0x0000000000106093 : ret
0x00000000001060b2 : ret
0x00000000001060c3 : ret
0x00000000001060df : ret
0x00000000001060f0 : ret
0x0000000000106112 : ret
0x0000000000106123 : ret
0x0000000000106131 : ret
0x000000000010613f : ret
0x0000000000106150 : ret
0x000000000010616f : ret
0x0000000000106180 : ret
0x00000000001061a2 : ret
0x00000000001061b3 : ret
0x00000000001061cf : ret
0x00000000001061e0 : ret
0x0000000000106202 : ret
0x0000000000106213 : ret
0x0000000000106261 : ret
0x000000000010626c : ret
0x0000000000106274 : ret
0x000000000010627f : ret
0x000000000010631a : ret
0x00000000001063e6 : ret
0x0000000000106510 : ret
0x0000000000106fa9 : ret
0x00000000001072dc : ret
0x00000000001072db : ret
0x00000000001072ef : ret
0x0000000000107300 : ret
0x000000000010731f : ret
0x0000000000107330 : ret
0x0000000000107387 : ret
0x0000000000107386 : ret
0x00000000001073a1 : ret
0x00000000001073e8 : ret
0x0000000000107435 : ret
0x000000000010744f : ret
0x0000000000107460 : ret
0x000000000010748f : ret
0x00000000001074a0 : ret
0x00000000001074bf : ret
0x00000000001074d0 : ret
0x00000000001074ef : ret
0x0000000000107500 : ret
0x000000000010751f : ret
0x0000000000107530 : ret
0x0000000000107558 : ret
0x000000000010756f : ret
0x000000000010759a : ret
0x00000000001075c8 : ret
0x00000000001075e1 : ret
0x000000000010764c : ret
0x000000000010767b : ret
0x000000000010767a : ret
0x0000000000107691 : ret
0x00000000001076b5 : ret
0x00000000001076b4 : ret
0x00000000001076d1 : ret
0x00000000001076fe : ret
0x0000000000107728 : ret
0x0000000000107742 : ret
0x0000000000107753 : ret
0x000000000010776f : ret
0x0000000000107780 : ret
0x000000000010779f : ret
0x00000000001077b0 : ret
0x00000000001077cf : ret
0x00000000001077e0 : ret
0x00000000001077f7 : ret
0x0000000000107812 : ret
0x0000000000107823 : ret
0x000000000010783f : ret
0x0000000000107850 : ret
0x000000000010786f : ret
0x0000000000107880 : ret
0x000000000010789f : ret
0x00000000001078b0 : ret
0x00000000001078cf : ret
0x00000000001078e0 : ret
0x00000000001078ff : ret
0x0000000000107910 : ret
0x000000000010792f : ret
0x0000000000107940 : ret
0x000000000010795f : ret
0x0000000000107970 : ret
0x000000000010798f : ret
0x00000000001079a0 : ret
0x00000000001079c2 : ret
0x00000000001079d3 : ret
0x00000000001079fb : ret
0x0000000000107a2e : ret
0x0000000000107a3f : ret
0x0000000000107a4f : ret
0x0000000000107a60 : ret
0x0000000000107a82 : ret
0x0000000000107a87 : ret
0x0000000000107a82 : ret
0x0000000000107a93 : ret
0x0000000000107aaf : ret
0x0000000000107ab4 : ret
0x0000000000107aaf : ret
0x0000000000107ac0 : ret
0x0000000000107adf : ret
0x0000000000107ae4 : ret
0x0000000000107adf : ret
0x0000000000107af0 : ret
0x0000000000107b0f : ret
0x0000000000107b14 : ret
0x0000000000107b0f : ret
0x0000000000107b20 : ret
0x0000000000107b3f : ret
0x0000000000107b44 : ret
0x0000000000107b3f : ret
0x0000000000107b50 : ret
0x0000000000107b6f : ret
0x0000000000107b74 : ret
0x0000000000107b6f : ret
0x0000000000107b80 : ret
0x0000000000107ba2 : ret
0x0000000000107bb3 : ret
0x0000000000107bd2 : ret
0x0000000000107be3 : ret
0x0000000000107bff : ret
0x0000000000107c10 : ret
0x0000000000107c2f : ret
0x0000000000107c40 : ret
0x0000000000107c62 : ret
0x0000000000107c73 : ret
0x0000000000107c92 : ret
0x0000000000107ca3 : ret
0x0000000000107cc2 : ret
0x0000000000107cd3 : ret
0x0000000000107cfb : ret
0x0000000000107d2e : ret
0x0000000000107d3f : ret
0x0000000000107d4f : ret
0x0000000000107d60 : ret
0x0000000000107d8b : ret
0x0000000000107dbe : ret
0x0000000000107dcf : ret
0x0000000000107ddf : ret
0x0000000000107df0 : ret
0x0000000000107e0f : ret
0x0000000000107e20 : ret
0x0000000000107e4b : ret
0x0000000000107e7e : ret
0x0000000000107e8f : ret
0x0000000000107e9f : ret
0x0000000000107eb0 : ret
0x0000000000107ed2 : ret
0x0000000000107ee3 : ret
0x0000000000107eff : ret
0x0000000000107f10 : ret
0x0000000000107f2f : ret
0x0000000000107f40 : ret
0x0000000000107f62 : ret
0x0000000000107f73 : ret
0x0000000000107f98 : ret
0x0000000000107fc8 : ret
0x0000000000107fd9 : ret
0x0000000000107fef : ret
0x0000000000108000 : ret
0x0000000000108022 : ret
0x0000000000108033 : ret
0x0000000000108052 : ret
0x0000000000108063 : ret
0x0000000000108085 : ret
0x00000000001080a8 : ret
0x00000000001080d8 : ret
0x00000000001080e9 : ret
0x00000000001080ff : ret
0x0000000000108110 : ret
0x0000000000108138 : ret
0x0000000000108168 : ret
0x0000000000108179 : ret
0x000000000010818f : ret
0x00000000001081a0 : ret
0x00000000001081bf : ret
0x00000000001081d0 : ret
0x00000000001081f2 : ret
0x0000000000108203 : ret
0x000000000010821f : ret
0x0000000000108230 : ret
0x0000000000108265 : ret
0x0000000000108283 : ret
0x00000000001082e4 : ret
0x000000000010831b : ret
0x000000000010834e : ret
0x000000000010835f : ret
0x0000000000108378 : ret
0x00000000001083a8 : ret
0x00000000001083b9 : ret
0x00000000001083e5 : ret
0x0000000000108403 : ret
0x0000000000108464 : ret
0x0000000000108498 : ret
0x00000000001084c8 : ret
0x00000000001084d9 : ret
0x00000000001084fb : ret
0x000000000010852e : ret
0x000000000010853f : ret
0x0000000000108552 : ret
0x0000000000108563 : ret
0x000000000010857f : ret
0x0000000000108590 : ret
0x00000000001085af : ret
0x00000000001085c0 : ret
0x00000000001085e2 : ret
0x00000000001085f3 : ret
0x000000000010864b : ret
0x000000000010869a : ret
0x0000000000108738 : ret
0x00000000001087f0 : ret
0x0000000000108852 : ret
0x000000000010887f : ret
0x0000000000108891 : ret
0x00000000001088ea : ret
0x0000000000108921 : ret
0x0000000000108939 : ret
0x000000000010899a : ret
0x00000000001089d1 : ret
0x00000000001089e9 : ret
0x0000000000108a40 : ret
0x0000000000108a79 : ret
0x0000000000108a78 : ret
0x0000000000108abf : ret
0x0000000000108ac2 : ret
0x0000000000108b09 : ret
0x0000000000108b3b : ret
0x0000000000108b6e : ret
0x0000000000108b7f : ret
0x0000000000108b9b : ret
0x0000000000108bce : ret
0x0000000000108bdf : ret
0x0000000000108bef : ret
0x0000000000108c00 : ret
0x0000000000108c1f : ret
0x0000000000108c30 : ret
0x0000000000108c4f : ret
0x0000000000108c60 : ret
0x0000000000108c7f : ret
0x0000000000108c90 : ret
0x0000000000108cb2 : ret
0x0000000000108cc3 : ret
0x0000000000108ce2 : ret
0x0000000000108cf3 : ret
0x0000000000108d0f : ret
0x0000000000108d20 : ret
0x0000000000108d3f : ret
0x0000000000108d50 : ret
0x0000000000108d6f : ret
0x0000000000108d80 : ret
0x0000000000108d9f : ret
0x0000000000108db0 : ret
0x0000000000108de7 : ret
0x0000000000109210 : ret
0x000000000010931f : ret
0x000000000010931e : ret
0x0000000000109360 : ret
0x0000000000109459 : ret
0x0000000000109508 : ret
0x0000000000109567 : ret
0x00000000001095b7 : ret
0x000000000010962d : ret
0x000000000010963a : ret
0x000000000010971f : ret
0x00000000001098ad : ret
0x00000000001098fe : ret
0x00000000001099c2 : ret
0x00000000001099d7 : ret
0x0000000000109a0e : ret
0x0000000000109a0d : ret
0x0000000000109ad7 : ret
0x0000000000109af0 : ret
0x0000000000109c10 : ret
0x0000000000109c26 : ret
0x0000000000109d18 : ret
0x0000000000109d17 : ret
0x0000000000109da1 : ret
0x0000000000109dbe : ret
0x0000000000109e4f : ret
0x0000000000109e8a : ret
0x0000000000109ea1 : ret
0x0000000000109f50 : ret
0x0000000000109f66 : ret
0x000000000010a094 : ret
0x000000000010a20d : ret
0x000000000010a287 : ret
0x000000000010a2e5 : ret
0x000000000010a34a : ret
0x000000000010a3aa : ret
0x000000000010a40b : ret
0x000000000010a40a : ret
0x000000000010a481 : ret
0x000000000010a480 : ret
0x000000000010a49f : ret
0x000000000010a511 : ret
0x000000000010a510 : ret
0x000000000010a530 : ret
0x000000000010a5b1 : ret
0x000000000010a5b0 : ret
0x000000000010a5cc : ret
0x000000000010a641 : ret
0x000000000010a640 : ret
0x000000000010a65f : ret
0x000000000010a6d1 : ret
0x000000000010a6d0 : ret
0x000000000010a6e3 : ret
0x000000000010a761 : ret
0x000000000010a760 : ret
0x000000000010a780 : ret
0x000000000010a801 : ret
0x000000000010a800 : ret
0x000000000010a820 : ret
0x000000000010a8a1 : ret
0x000000000010a8a0 : ret
0x000000000010a8c0 : ret
0x000000000010a941 : ret
0x000000000010a940 : ret
0x000000000010a95f : ret
0x000000000010a9d1 : ret
0x000000000010a9d0 : ret
0x000000000010a9f0 : ret
0x000000000010aa6c : ret
0x000000000010aa6b : ret
0x000000000010aa88 : ret
0x000000000010ab01 : ret
0x000000000010ab00 : ret
0x000000000010ab20 : ret
0x000000000010ab8a : ret
0x000000000010ab89 : ret
0x000000000010abe5 : ret
0x000000000010abe4 : ret
0x000000000010ac72 : ret
0x000000000010ac88 : ret
0x000000000010acdd : ret
0x000000000010acdc : ret
0x000000000010ad52 : ret
0x000000000010ad64 : ret
0x000000000010adad : ret
0x000000000010adb3 : ret
0x000000000010adb2 : ret
0x000000000010ae23 : ret
0x000000000010ae22 : ret
0x000000000010ae38 : ret
0x000000000010aea3 : ret
0x000000000010aea2 : ret
0x000000000010aeb9 : ret
0x000000000010af23 : ret
0x000000000010af22 : ret
0x000000000010af35 : ret
0x000000000010afa3 : ret
0x000000000010afa2 : ret
0x000000000010afb8 : ret
0x000000000010b023 : ret
0x000000000010b022 : ret
0x000000000010b033 : ret
0x000000000010b0a3 : ret
0x000000000010b0a2 : ret
0x000000000010b0b9 : ret
0x000000000010b123 : ret
0x000000000010b122 : ret
0x000000000010b139 : ret
0x000000000010b1a3 : ret
0x000000000010b1a2 : ret
0x000000000010b1b9 : ret
0x000000000010b223 : ret
0x000000000010b222 : ret
0x000000000010b238 : ret
0x000000000010b2a3 : ret
0x000000000010b2a2 : ret
0x000000000010b2b9 : ret
0x000000000010b320 : ret
0x000000000010b31f : ret
0x000000000010b339 : ret
0x000000000010b3a3 : ret
0x000000000010b3a2 : ret
0x000000000010b3b9 : ret
0x000000000010b40c : ret
0x000000000010b40b : ret
0x000000000010b459 : ret
0x000000000010b458 : ret
0x000000000010b4da : ret
0x000000000010b4f0 : ret
0x000000000010b54d : ret
0x000000000010b54c : ret
0x000000000010b5b2 : ret
0x000000000010b5c4 : ret
0x000000000010b60d : ret
0x000000000010b613 : ret
0x000000000010b612 : ret
0x000000000010b6db : ret
0x000000000010b810 : ret
0x000000000010b99a : ret
0x000000000010bb8c : ret
0x000000000010bbb2 : ret
0x000000000010bdfe : ret
0x000000000010c059 : ret
0x000000000010c0cd : ret
0x000000000010c189 : ret
0x000000000010c200 : ret
0x000000000010c254 : ret
0x000000000010c253 : ret
0x000000000010c335 : ret
0x000000000010c334 : ret
0x000000000010c46a : ret
0x000000000010c48b : ret
0x000000000010c4aa : ret
0x000000000010c5ae : ret
0x000000000010c704 : ret
0x000000000010c720 : ret
0x000000000010c87e : ret
0x000000000010c881 : ret
0x000000000010c8f2 : ret
0x000000000010c90b : ret
0x000000000010c93b : ret
0x000000000010c9a3 : ret
0x000000000010c9df : ret
0x000000000010cbc3 : ret
0x000000000010cc31 : ret
0x000000000010cc30 : ret
0x000000000010ce89 : ret
0x000000000010cea4 : ret
0x000000000010cfc3 : ret
0x000000000010cfcf : ret
0x000000000010d08b : ret
0x000000000010d1c0 : ret
0x000000000010d359 : ret
0x000000000010d3de : ret
0x000000000010d53c : ret
0x000000000010d562 : ret
0x000000000010d776 : ret
0x000000000010d809 : ret
0x000000000010d909 : ret
0x000000000010d9d4 : ret
0x000000000010d9d3 : ret
0x000000000010dab5 : ret
0x000000000010dab4 : ret
0x000000000010dbea : ret
0x000000000010dc0b : ret
0x000000000010dc2a : ret
0x000000000010dd9e : ret
0x000000000010de7e : ret
0x000000000010df64 : ret
0x000000000010df8d : ret
0x000000000010dfbf : ret
0x000000000010e025 : ret
0x000000000010e03e : ret
0x000000000010e0af : ret
0x000000000010e0e8 : ret
0x000000000010e104 : ret
0x000000000010e2f3 : ret
0x000000000010e383 : ret
0x000000000010e3d1 : ret
0x000000000010e502 : ret
0x000000000010e564 : ret
0x000000000010e56d : ret
0x000000000010e63b : ret
0x000000000010e674 : ret
0x000000000010e6cb : ret
0x000000000010e751 : ret
0x000000000010e7bc : ret
0x000000000010e7e6 : ret
0x000000000010e800 : ret
0x000000000010e9d2 : ret
0x000000000010ea3c : ret
0x000000000010ea67 : ret
0x000000000010eb5e : ret
0x000000000010eb74 : ret
0x000000000010ebc8 : ret
0x000000000010ebe4 : ret
0x000000000010ebfc : ret
0x000000000010ec09 : ret
0x000000000010ec31 : ret
0x000000000010ec38 : ret
0x000000000010ec8d : ret
0x000000000010ecbd : ret
0x000000000010eced : ret
0x000000000010ed17 : ret
0x000000000010efbe : ret
0x000000000010eff9 : ret
0x000000000010f059 : ret
0x000000000010f1c4 : ret
0x000000000010f3ac : ret
0x000000000010f3d9 : ret
0x000000000010f49a : ret
0x000000000010f57a : ret
0x000000000010f5f4 : ret
0x000000000010f6c8 : ret
0x000000000010f714 : ret
0x000000000010f7b2 : ret
0x000000000010fbd6 : ret
0x000000000010fbf3 : ret
0x000000000010fd0a : ret
0x000000000010fe9a : ret
0x000000000010feef : ret
0x000000000010ff97 : ret
0x000000000010ffd6 : ret
0x0000000000110058 : ret
0x000000000011017c : ret
0x0000000000110192 : ret
0x00000000001101ca : ret
0x00000000001101c9 : ret
0x00000000001101d5 : ret
0x0000000000110252 : ret
0x00000000001102af : ret
0x00000000001102dc : ret
0x000000000011079a : ret
0x0000000000110904 : ret
0x00000000001109f2 : ret
0x0000000000110a00 : ret
0x0000000000110a68 : ret
0x0000000000110a83 : ret
0x0000000000110b61 : ret
0x0000000000110b97 : ret
0x0000000000110bda : ret
0x0000000000110c04 : ret
0x0000000000110c0a : ret
0x0000000000110c15 : ret
0x0000000000110cf3 : ret
0x0000000000110d05 : ret
0x0000000000110d04 : ret
0x0000000000110d9f : ret
0x0000000000110e1c : ret
0x0000000000110eaa : ret
0x00000000001110d0 : ret
0x000000000011140a : ret
0x000000000011144e : ret
0x0000000000111526 : ret
0x00000000001116ac : ret
0x000000000011182d : ret
0x0000000000111862 : ret
0x0000000000111898 : ret
0x0000000000111c5a : ret
0x0000000000111e02 : ret
0x0000000000111e22 : ret
0x0000000000111e5a : ret
0x0000000000111eb3 : ret
0x0000000000112045 : ret
0x000000000011207f : ret
0x00000000001120ad : ret
0x00000000001120dd : ret
0x000000000011229d : ret
0x00000000001122c6 : ret
0x0000000000112303 : ret
0x00000000001123dd : ret
0x0000000000112428 : ret
0x0000000000112582 : ret
0x00000000001126b6 : ret
0x0000000000112708 : ret
0x0000000000112707 : ret
0x0000000000112859 : ret
0x00000000001128f6 : ret
0x00000000001129f2 : ret
0x0000000000112b9a : ret
0x0000000000112c9d : ret
0x0000000000112d36 : ret
0x0000000000112e8d : ret
0x0000000000112ee1 : ret
0x0000000000112efe : ret
0x0000000000112f2b : ret
0x0000000000112f2a : ret
0x0000000000112f4a : ret
0x0000000000112f59 : ret
0x0000000000112fb3 : ret
0x0000000000112fd1 : ret
0x0000000000113192 : ret
0x00000000001131c4 : ret
0x00000000001132ee : ret
0x000000000011330a : ret
0x0000000000113335 : ret
0x0000000000113357 : ret
0x0000000000113720 : ret
0x00000000001137c5 : ret
0x0000000000113e64 : ret
0x00000000001142d0 : ret
0x0000000000114432 : ret
0x00000000001144b9 : ret
0x00000000001149d1 : ret
0x00000000001149dc : ret
0x0000000000114a2d : ret
0x0000000000114a33 : ret
0x0000000000114a32 : ret
0x0000000000114a4e : ret
0x0000000000114a4d : ret
0x0000000000114a52 : ret
0x0000000000114a69 : ret
0x0000000000114aaf : ret
0x0000000000114abf : ret
0x0000000000114aec : ret
0x0000000000114b1c : ret
0x0000000000114b4c : ret
0x0000000000114b7c : ret
0x0000000000114bac : ret
0x0000000000114bdc : ret
0x0000000000114c0c : ret
0x0000000000114c3c : ret
0x0000000000114c6c : ret
0x0000000000114c9c : ret
0x0000000000114ccc : ret
0x0000000000114cfc : ret
0x0000000000114d2c : ret
0x0000000000114d5c : ret
0x0000000000114d8c : ret
0x0000000000114dbc : ret
0x0000000000114dec : ret
0x0000000000114e1c : ret
0x0000000000114e4c : ret
0x0000000000114e7c : ret
0x0000000000114edc : ret
0x0000000000114f0c : ret
0x0000000000114f3c : ret
0x0000000000114f6c : ret
0x0000000000114f9c : ret
0x0000000000114fcc : ret
0x0000000000114ffc : ret
0x000000000011502c : ret
0x000000000011505c : ret
0x00000000001150a7 : ret
0x00000000001150cb : ret
0x00000000001150da : ret
0x00000000001150e1 : ret
0x00000000001150fb : ret
0x0000000000115142 : ret
0x000000000011515f : ret
0x0000000000115198 : ret
0x0000000000115197 : ret
0x0000000000115209 : ret
0x000000000011532e : ret
0x00000000001153a7 : ret
0x00000000001153a6 : ret
0x00000000001153e6 : ret
0x000000000011553e : ret
0x000000000011557c : ret
0x000000000011559d : ret
0x00000000001156c1 : ret
0x0000000000115738 : ret
0x000000000011580e : ret
0x0000000000115815 : ret
0x0000000000115833 : ret
0x0000000000115832 : ret
0x0000000000115849 : ret
0x000000000011589b : ret
0x00000000001158bd : ret
0x00000000001158e0 : ret
0x00000000001158df : ret
0x000000000011590b : ret
0x0000000000115923 : ret
0x0000000000115966 : ret
0x0000000000115981 : ret
0x000000000011598d : ret
0x00000000001159be : ret
0x00000000001159d7 : ret
0x0000000000115a49 : ret
0x0000000000115a65 : ret
0x0000000000115aef : ret
0x0000000000115b68 : ret
0x0000000000115b78 : ret
0x0000000000115cf7 : ret
0x0000000000115d38 : ret
0x0000000000115d7e : ret
0x0000000000115de5 : ret
0x0000000000115e69 : ret
0x00000000001160db : ret
0x0000000000116172 : ret
0x0000000000116171 : ret
0x0000000000116201 : ret
0x0000000000116200 : ret
0x0000000000116236 : ret
0x0000000000116277 : ret
0x00000000001162f6 : ret
0x00000000001162f5 : ret
0x0000000000116326 : ret
0x0000000000116367 : ret
0x00000000001163b0 : ret
0x00000000001163ec : ret
0x00000000001163ff : ret
0x0000000000116477 : ret
0x00000000001164a9 : ret
0x000000000011657d : ret
0x00000000001166b4 : ret
0x000000000011676d : ret
0x00000000001167ff : ret
0x0000000000116898 : ret
0x00000000001168bd : ret
0x0000000000116a17 : ret
0x0000000000116a6c : ret
0x0000000000116bee : ret
0x0000000000116c3a : ret
0x0000000000116d54 : ret
0x0000000000116d9d : ret
0x0000000000116ea8 : ret
0x0000000000116ef7 : ret
0x000000000011706f : ret
0x00000000001170c4 : ret
0x0000000000117196 : ret
0x00000000001172fa : ret
0x0000000000117323 : ret
0x0000000000117406 : ret
0x0000000000117489 : ret
0x0000000000117556 : ret
0x0000000000117582 : ret
0x00000000001175a5 : ret
0x00000000001175a4 : ret
0x00000000001175c3 : ret
0x0000000000117655 : ret
0x0000000000117654 : ret
0x0000000000117673 : ret
0x00000000001176a2 : ret
0x0000000000117827 : ret
0x000000000011783c : ret
0x000000000011784d : ret
0x00000000001178f2 : ret
0x0000000000117920 : ret
0x000000000011796d : ret
0x00000000001179c3 : ret
0x0000000000117a71 : ret
0x0000000000117a70 : ret
0x0000000000117b07 : ret
0x0000000000117b77 : ret
0x0000000000117bbf : ret
0x0000000000117cef : ret
0x0000000000117d9b : ret
0x0000000000117dc1 : ret
0x0000000000117f17 : ret
0x0000000000117f6c : ret
0x00000000001180ee : ret
0x000000000011813a : ret
0x0000000000118254 : ret
0x000000000011829d : ret
0x00000000001183a8 : ret
0x00000000001183f7 : ret
0x0000000000118526 : ret
0x00000000001185ac : ret
0x0000000000118676 : ret
0x00000000001186aa : ret
0x00000000001186fb : ret
0x000000000011881a : ret
0x000000000011885a : ret
0x00000000001188f9 : ret
0x0000000000118944 : ret
0x00000000001189b8 : ret
0x0000000000118a0d : ret
0x0000000000118af9 : ret
0x0000000000118bb8 : ret
0x0000000000118ce2 : ret
0x0000000000118f03 : ret
0x0000000000118f9d : ret
0x00000000001190a0 : ret
0x0000000000119130 : ret
0x00000000001191e7 : ret
0x00000000001191f3 : ret
0x00000000001192be : ret
0x00000000001192f1 : ret
0x0000000000119359 : ret
0x0000000000119365 : ret
0x0000000000119394 : ret
0x00000000001193a6 : ret
0x00000000001193bd : ret
0x00000000001193d8 : ret
0x0000000000119404 : ret
0x0000000000119412 : ret
0x0000000000119426 : ret
0x000000000011943b : ret
0x0000000000119459 : ret
0x00000000001194ad : ret
0x0000000000119593 : ret
0x00000000001196e0 : ret
0x00000000001197b9 : ret
0x0000000000119864 : ret
0x0000000000119ae0 : ret
0x0000000000119bed : ret
0x0000000000119e1d : ret
0x000000000011a00f : ret
0x000000000011a124 : ret
0x000000000011a268 : ret
0x000000000011a2f1 : ret
0x000000000011a334 : ret
0x000000000011a4f1 : ret
0x000000000011a628 : ret
0x000000000011a6a9 : ret
0x000000000011a8a8 : ret
0x000000000011a96f : ret
0x000000000011aa37 : ret
0x000000000011aa36 : ret
0x000000000011ab2a : ret
0x000000000011ab29 : ret
0x000000000011ac9a : ret
0x000000000011ae59 : ret
0x000000000011ae9d : ret
0x000000000011af4d : ret
0x000000000011b122 : ret
0x000000000011b238 : ret
0x000000000011b2ff : ret
0x000000000011b3c7 : ret
0x000000000011b3c6 : ret
0x000000000011b469 : ret
0x000000000011b4ba : ret
0x000000000011b4b9 : ret
0x000000000011b619 : ret
0x000000000011b65d : ret
0x000000000011b70d : ret
0x000000000011b8af : ret
0x000000000011ba19 : ret
0x000000000011ba3b : ret
0x000000000011ba5a : ret
0x000000000011bbdb : ret
0x000000000011bc9f : ret
0x000000000011bd64 : ret
0x000000000011bd63 : ret
0x000000000011be4b : ret
0x000000000011be4a : ret
0x000000000011bf80 : ret
0x000000000011c0fa : ret
0x000000000011c11b : ret
0x000000000011c13a : ret
0x000000000011c335 : ret
0x000000000011c4ee : ret
0x000000000011c54a : ret
0x000000000011c5db : ret
0x000000000011c764 : ret
0x000000000011c90d : ret
0x000000000011c96a : ret
0x000000000011c9fb : ret
0x000000000011cb0b : ret
0x000000000011cbcf : ret
0x000000000011cc94 : ret
0x000000000011cc93 : ret
0x000000000011ccc1 : ret
0x000000000011cd7b : ret
0x000000000011cd7a : ret
0x000000000011cde5 : ret
0x000000000011ce45 : ret
0x000000000011ce6b : ret
0x000000000011cf0f : ret
0x000000000011cf34 : ret
0x000000000011cfee : ret
0x000000000011cfed : ret
0x000000000011d0e0 : ret
0x000000000011d12b : ret
0x000000000011d152 : ret
0x000000000011d176 : ret
0x000000000011d21f : ret
0x000000000011d244 : ret
0x000000000011d344 : ret
0x000000000011d35c : ret
0x000000000011d3cb : ret
0x000000000011d3f3 : ret
0x000000000011d6bf : ret
0x000000000011d938 : ret
0x000000000011d9d5 : ret
0x000000000011db28 : ret
0x000000000011dbd7 : ret
0x000000000011dc82 : ret
0x000000000011dca9 : ret
0x000000000011dd02 : ret
0x000000000011dd30 : ret
0x000000000011e05b : ret
0x000000000011e4cf : ret
0x000000000011e7a2 : ret
0x000000000011e7de : ret
0x000000000011e888 : ret
0x000000000011e8ba : ret
0x000000000011e8e2 : ret
0x000000000011e987 : ret
0x000000000011ea47 : ret
0x000000000011eae0 : ret
0x000000000011eaee : ret
0x000000000011eb63 : ret
0x000000000011ebb0 : ret
0x000000000011ed44 : ret
0x000000000011ed7e : ret
0x000000000011f01b : ret
0x000000000011f06c : ret
0x000000000011f11f : ret
0x000000000011f19a : ret
0x000000000011f1d3 : ret
0x000000000011f212 : ret
0x000000000011f2fb : ret
0x000000000011f338 : ret
0x000000000011f39c : ret
0x000000000011f40a : ret
0x000000000011f597 : ret
0x000000000011f933 : ret
0x000000000011fa64 : ret
0x000000000011fb31 : ret
0x000000000011fc9f : ret
0x000000000011fd86 : ret
0x000000000011fe95 : ret
0x00000000001200df : ret
0x00000000001200f0 : ret
0x00000000001201b7 : ret
0x0000000000120330 : ret
0x000000000012037d : ret
0x0000000000120470 : ret
0x00000000001204a6 : ret
0x00000000001204f6 : ret
0x0000000000120549 : ret
0x0000000000120699 : ret
0x0000000000120779 : ret
0x0000000000120839 : ret
0x0000000000120904 : ret
0x0000000000120903 : ret
0x00000000001209e5 : ret
0x00000000001209e4 : ret
0x0000000000120aab : ret
0x0000000000120be0 : ret
0x0000000000120d5a : ret
0x0000000000120d7b : ret
0x0000000000120d9a : ret
0x0000000000120f76 : ret
0x0000000000120fcd : ret
0x0000000000120fd7 : ret
0x000000000012124b : ret
0x00000000001213b2 : ret
0x000000000012142f : ret
0x0000000000121512 : ret
0x0000000000121601 : ret
0x0000000000121697 : ret
0x0000000000121777 : ret
0x0000000000121a05 : ret
0x0000000000121a41 : ret
0x0000000000121a72 : ret
0x0000000000121a92 : ret
0x0000000000121d16 : ret
0x0000000000121d97 : ret
0x0000000000121dd7 : ret
0x0000000000121e15 : ret
0x0000000000121e3e : ret
0x0000000000121e79 : ret
0x00000000001220ad : ret
0x00000000001220d1 : ret
0x000000000012219a : ret
0x000000000012221d : ret
0x0000000000122253 : ret
0x000000000012229b : ret
0x00000000001223a4 : ret
0x00000000001223bb : ret
0x0000000000122479 : ret
0x000000000012248b : ret
0x00000000001224bc : ret
0x0000000000122685 : ret
0x0000000000122b0f : ret
0x0000000000123006 : ret
0x0000000000123029 : ret
0x0000000000123056 : ret
0x0000000000123055 : ret
0x0000000000123054 : ret
0x000000000012316e : ret
0x000000000012320d : ret
0x000000000012336e : ret
0x00000000001233ca : ret
0x00000000001234db : ret
0x00000000001234da : ret
0x00000000001234e5 : ret
0x00000000001235c3 : ret
0x00000000001235c9 : ret
0x00000000001235c8 : ret
0x00000000001235d5 : ret
0x0000000000123628 : ret
0x000000000012366e : ret
0x00000000001236cc : ret
0x000000000012370b : ret
0x00000000001237e8 : ret
0x0000000000123827 : ret
0x0000000000123880 : ret
0x00000000001238b4 : ret
0x00000000001238d2 : ret
0x000000000012390f : ret
0x0000000000123911 : ret
0x0000000000123910 : ret
0x0000000000123917 : ret
0x0000000000123919 : ret
0x0000000000123918 : ret
0x000000000012391f : ret
0x0000000000123925 : ret
0x000000000012392b : ret
0x00000000001239db : ret
0x00000000001239fd : ret
0x0000000000123a48 : ret
0x0000000000123b61 : ret
0x0000000000123b81 : ret
0x0000000000123c15 : ret
0x0000000000123c26 : ret
0x0000000000123c25 : ret
0x0000000000123d12 : ret
0x0000000000123d1a : ret
0x0000000000123d56 : ret
0x0000000000123de9 : ret
0x0000000000123dfa : ret
0x0000000000123e2e : ret
0x0000000000123e96 : ret
0x0000000000123ecf : ret
0x0000000000123eec : ret
0x0000000000123f0a : ret
0x0000000000123f47 : ret
0x0000000000123f7a : ret
0x0000000000123fa6 : ret
0x0000000000123fd9 : ret
0x0000000000123ff1 : ret
0x0000000000123ff9 : ret
0x0000000000123ff8 : ret
0x0000000000124043 : ret
0x000000000012404a : ret
0x000000000012408c : ret
0x0000000000124095 : ret
0x0000000000124119 : ret
0x000000000012413f : ret
0x0000000000124145 : ret
0x0000000000124163 : ret
0x000000000012416d : ret
0x0000000000124194 : ret
0x000000000012419a : ret
0x000000000012435c : ret
0x0000000000124396 : ret
0x00000000001245c1 : ret
0x000000000012463a : ret
0x0000000000124723 : ret
0x0000000000124722 : ret
0x000000000012492c : ret
0x0000000000124a05 : ret
0x0000000000124a04 : ret
0x0000000000124a9c : ret
0x0000000000124ab7 : ret
0x0000000000124d38 : ret
0x0000000000124edc : ret
0x0000000000124f22 : ret
0x0000000000124f72 : ret
0x0000000000125009 : ret
0x0000000000125179 : ret
0x00000000001252d6 : ret
0x000000000012530c : ret
0x000000000012534e : ret
0x0000000000125430 : ret
0x00000000001254e8 : ret
0x00000000001255c9 : ret
0x00000000001256d2 : ret
0x00000000001256e1 : ret
0x0000000000125956 : ret
0x0000000000125df1 : ret
0x0000000000125e01 : ret
0x0000000000125e11 : ret
0x0000000000125e21 : ret
0x0000000000126251 : ret
0x00000000001262f1 : ret
0x000000000012630d : ret
0x0000000000126694 : ret
0x0000000000126693 : ret
0x00000000001266aa : ret
0x00000000001266b1 : ret
0x00000000001266b0 : ret
0x0000000000126750 : ret
0x0000000000126755 : ret
0x000000000012678a : ret
0x0000000000126863 : ret
0x000000000012689b : ret
0x000000000012695c : ret
0x0000000000126974 : ret
0x0000000000126bd8 : ret
0x0000000000126bfb : ret
0x0000000000126d6a : ret
0x0000000000126e09 : ret
0x0000000000126fb3 : ret
0x00000000001270d6 : ret
0x00000000001271a1 : ret
0x0000000000127305 : ret
0x0000000000127324 : ret
0x00000000001274ad : ret
0x00000000001274c6 : ret
0x00000000001275e0 : ret
0x00000000001276c1 : ret
0x0000000000127734 : ret
0x00000000001277cd : ret
0x00000000001277e0 : ret
0x000000000012787d : ret
0x000000000012794f : ret
0x00000000001279b6 : ret
0x0000000000127a5b : ret
0x0000000000127a74 : ret
0x0000000000127aba : ret
0x0000000000127ad9 : ret
0x0000000000127ad8 : ret
0x0000000000127aec : ret
0x0000000000127afa : ret
0x0000000000127aff : ret
0x0000000000127afe : ret
0x0000000000127afa : ret
0x0000000000127b2c : ret
0x0000000000127bdc : ret
0x0000000000127bf0 : ret
0x0000000000127c13 : ret
0x0000000000127f9b : ret
0x0000000000127ff2 : ret
0x00000000001280ae : ret
0x0000000000128344 : ret
0x000000000012835c : ret
0x00000000001283a3 : ret
0x0000000000128416 : ret
0x000000000012866e : ret
0x0000000000128679 : ret
0x0000000000128695 : ret
0x00000000001286b1 : ret
0x00000000001286c9 : ret
0x00000000001286ce : ret
0x00000000001286f0 : ret
0x0000000000128722 : ret
0x000000000012877e : ret
0x00000000001287b7 : ret
0x00000000001287c4 : ret
0x00000000001288cb : ret
0x00000000001289c5 : ret
0x00000000001289fb : ret
0x0000000000128a59 : ret
0x0000000000128a79 : ret
0x0000000000128a92 : ret
0x0000000000128bba : ret
0x0000000000128bec : ret
0x0000000000128c0e : ret
0x0000000000128c67 : ret
0x0000000000128c66 : ret
0x0000000000128d35 : ret
0x0000000000128d92 : ret
0x0000000000128db2 : ret
0x0000000000128e0b : ret
0x0000000000128e16 : ret
0x0000000000128ef4 : ret
0x0000000000128fdd : ret
0x00000000001291e2 : ret
0x00000000001292b7 : ret
0x0000000000129553 : ret
0x000000000012957c : ret
0x0000000000129634 : ret
0x00000000001296bd : ret
0x000000000012971e : ret
0x0000000000129774 : ret
0x0000000000129993 : ret
0x0000000000129aaa : ret
0x0000000000129ac3 : ret
0x0000000000129caa : ret
0x0000000000129db3 : ret
0x0000000000129deb : ret
0x000000000012a0fd : ret
0x000000000012a30f : ret
0x000000000012a361 : ret
0x000000000012a47d : ret
0x000000000012a4e8 : ret
0x000000000012a5ef : ret
0x000000000012a608 : ret
0x000000000012a724 : ret
0x000000000012a7a6 : ret
0x000000000012a7dc : ret
0x000000000012a829 : ret
0x000000000012a860 : ret
0x000000000012a95a : ret
0x000000000012a996 : ret
0x000000000012a9f5 : ret
0x000000000012aab7 : ret
0x000000000012acab : ret
0x000000000012ad69 : ret
0x000000000012afbb : ret
0x000000000012afff : ret
0x000000000012b005 : ret
0x000000000012b02a : ret
0x000000000012b048 : ret
0x000000000012b056 : ret
0x000000000012b065 : ret
0x000000000012b09a : ret
0x000000000012b0e5 : ret
0x000000000012b0f7 : ret
0x000000000012b173 : ret
0x000000000012b1f3 : ret
0x000000000012b278 : ret
0x000000000012b2f8 : ret
0x000000000012b378 : ret
0x000000000012b3f8 : ret
0x000000000012b473 : ret
0x000000000012b4fd : ret
0x000000000012b573 : ret
0x000000000012b5f3 : ret
0x000000000012b67d : ret
0x000000000012b6f8 : ret
0x000000000012b773 : ret
0x000000000012b7a2 : ret
0x000000000012b7b5 : ret
0x000000000012b7c2 : ret
0x000000000012b7d1 : ret
0x000000000012b7d0 : ret
0x000000000012b88f : ret
0x000000000012b891 : ret
0x000000000012b890 : ret
0x000000000012b8c9 : ret
0x000000000012b988 : ret
0x000000000012b9c0 : ret
0x000000000012b9ed : ret
0x000000000012bc68 : ret
0x000000000012beec : ret
0x000000000012bef1 : ret
0x000000000012bef0 : ret
0x000000000012bf01 : ret
0x000000000012bf00 : ret
0x000000000012bf12 : ret
0x000000000012bf21 : ret
0x000000000012bf20 : ret
0x000000000012bf7b : ret
0x000000000012c130 : ret
0x000000000012c261 : ret
0x000000000012c2a7 : ret
0x000000000012c3ee : ret
0x000000000012c591 : ret
0x000000000012c5aa : ret
0x000000000012c5c3 : ret
0x000000000012c67b : ret
0x000000000012c6ce : ret
0x000000000012c82d : ret
0x000000000012c9fc : ret
0x000000000012ca22 : ret
0x000000000012cb0b : ret
0x000000000012cbfd : ret
0x000000000012cc94 : ret
0x000000000012ccbc : ret
0x000000000012cd25 : ret
0x000000000012cd66 : ret
0x000000000012cd9a : ret
0x000000000012cdc9 : ret
0x000000000012cee9 : ret
0x000000000012cf99 : ret
0x000000000012cfdd : ret
0x000000000012d27a : ret
0x000000000012d33a : ret
0x000000000012d6a0 : ret
0x000000000012d6dd : ret
0x000000000012d78d : ret
0x000000000012d7dd : ret
0x000000000012d837 : ret
0x000000000012d85d : ret
0x000000000012d8d4 : ret
0x000000000012d8e2 : ret
0x000000000012d8f5 : ret
0x000000000012d912 : ret
0x000000000012d92e : ret
0x000000000012d966 : ret
0x000000000012d976 : ret
0x000000000012d986 : ret
0x000000000012d996 : ret
0x000000000012d9a6 : ret
0x000000000012d9c2 : ret
0x000000000012da06 : ret
0x000000000012dd62 : ret
0x000000000012ddaa : ret
0x000000000012de57 : ret
0x000000000012e095 : ret
0x000000000012e0a5 : ret
0x000000000012e0b1 : ret
0x000000000012e0b0 : ret
0x000000000012e108 : ret
0x000000000012e150 : ret
0x000000000012e1ad : ret
0x000000000012e1c6 : ret
0x000000000012e225 : ret
0x000000000012e292 : ret
0x000000000012e2ac : ret
0x000000000012e2b2 : ret
0x000000000012e424 : ret
0x000000000012e570 : ret
0x000000000012e5c5 : ret
0x000000000012e614 : ret
0x000000000012e69f : ret
0x000000000012e6d9 : ret
0x000000000012e708 : ret
0x000000000012e729 : ret
0x000000000012e7d3 : ret
0x000000000012e7da : ret
0x000000000012e7f3 : ret
0x000000000012e869 : ret
0x000000000012e880 : ret
0x000000000012e8be : ret
0x000000000012e8f6 : ret
0x000000000012eaf5 : ret
0x000000000012eb5c : ret
0x000000000012eb81 : ret
0x000000000012ebdc : ret
0x000000000012ec01 : ret
0x000000000012ec96 : ret
0x000000000012ed0d : ret
0x000000000012ed46 : ret
0x000000000012ed7f : ret
0x000000000012ed8c : ret
0x000000000012edde : ret
0x000000000012ee16 : ret
0x000000000012ee62 : ret
0x000000000012ef28 : ret
0x000000000012f0dd : ret
0x000000000012f101 : ret
0x000000000012f118 : ret
0x000000000012f134 : ret
0x000000000012f203 : ret
0x000000000012f268 : ret
0x000000000012f2a8 : ret
0x000000000012f2fb : ret
0x000000000012f34f : ret
0x000000000012f3a5 : ret
0x000000000012f447 : ret
0x000000000012f533 : ret
0x000000000012f553 : ret
0x000000000012f5ef : ret
0x000000000012f60d : ret
0x000000000012f669 : ret
0x000000000012f710 : ret
0x000000000012f824 : ret
0x000000000012f9e7 : ret
0x000000000012fa9e : ret
0x000000000012fab3 : ret
0x000000000012fad3 : ret
0x000000000012fae4 : ret
0x000000000012faf0 : ret
0x000000000012fafd : ret
0x000000000012fb18 : ret
0x000000000012fed9 : ret
0x0000000000130345 : ret
0x0000000000130365 : ret
0x000000000013038a : ret
0x00000000001303aa : ret
0x00000000001303e4 : ret
0x0000000000130422 : ret
0x0000000000130442 : ret
0x0000000000130476 : ret
0x000000000013049a : ret
0x00000000001304bd : ret
0x0000000000130500 : ret
0x0000000000130536 : ret
0x0000000000130558 : ret
0x00000000001305d7 : ret
0x00000000001305ff : ret
0x0000000000130626 : ret
0x0000000000130680 : ret
0x00000000001306ce : ret
0x00000000001307a5 : ret
0x00000000001307e2 : ret
0x000000000013083b : ret
0x0000000000130945 : ret
0x0000000000130c66 : ret
0x00000000001314bc : ret
0x00000000001314d0 : ret
0x00000000001316b9 : ret
0x0000000000131700 : ret
0x000000000013184b : ret
0x0000000000131980 : ret
0x0000000000131aff : ret
0x0000000000131bff : ret
0x0000000000131cc4 : ret
0x0000000000131cc3 : ret
0x0000000000131dab : ret
0x0000000000131daa : ret
0x0000000000131eda : ret
0x0000000000131efb : ret
0x0000000000131f1a : ret
0x0000000000132109 : ret
0x000000000013212b : ret
0x000000000013214a : ret
0x0000000000132234 : ret
0x0000000000132261 : ret
0x0000000000132260 : ret
0x00000000001322c0 : ret
0x0000000000132300 : ret
0x000000000013231c : ret
0x0000000000132334 : ret
0x00000000001323b8 : ret
0x00000000001323c9 : ret
0x00000000001323dc : ret
0x00000000001323ec : ret
0x0000000000132402 : ret
0x000000000013241b : ret
0x0000000000132432 : ret
0x0000000000132448 : ret
0x0000000000132462 : ret
0x000000000013246a : ret
0x0000000000132641 : ret
0x0000000000132884 : ret
0x000000000013289b : ret
0x00000000001328c1 : ret
0x0000000000132907 : ret
0x000000000013291d : ret
0x0000000000132a8c : ret
0x0000000000132a8b : ret
0x0000000000132b20 : ret
0x0000000000132c9a : ret
0x0000000000132cc8 : ret
0x0000000000132db5 : ret
0x0000000000132eb2 : ret
0x0000000000132f8d : ret
0x0000000000132fb1 : ret
0x000000000013303b : ret
0x000000000013304a : ret
0x0000000000133069 : ret
0x00000000001330a7 : ret
0x00000000001330da : ret
0x0000000000133201 : ret
0x000000000013322a : ret
0x0000000000133279 : ret
0x000000000013335c : ret
0x0000000000133454 : ret
0x0000000000133484 : ret
0x0000000000133567 : ret
0x0000000000133566 : ret
0x000000000013356f : ret
0x000000000013356e : ret
0x00000000001335c2 : ret
0x000000000013363d : ret
0x0000000000133662 : ret
0x000000000013368c : ret
0x00000000001336eb : ret
0x00000000001336fc : ret
0x0000000000133761 : ret
0x0000000000133771 : ret
0x0000000000133770 : ret
0x00000000001337c8 : ret
0x0000000000133814 : ret
0x00000000001338fe : ret
0x00000000001339cb : ret
0x0000000000133ae6 : ret
0x0000000000133b19 : ret
0x0000000000133b72 : ret
0x0000000000133bc0 : ret
0x0000000000133c6b : ret
0x0000000000133e32 : ret
0x0000000000133e86 : ret
0x0000000000134001 : ret
0x0000000000134000 : ret
0x000000000013411f : ret
0x0000000000134156 : ret
0x000000000013421a : ret
0x000000000013430e : ret
0x00000000001343a2 : ret
0x0000000000134533 : ret
0x0000000000134602 : ret
0x0000000000134667 : ret
0x0000000000134694 : ret
0x00000000001346e0 : ret
0x00000000001347b4 : ret
0x0000000000134854 : ret
0x0000000000134a35 : ret
0x0000000000134ac4 : ret
0x0000000000134e12 : ret
0x0000000000134e52 : ret
0x0000000000134ed1 : ret
0x0000000000134fbb : ret
0x0000000000134fe1 : ret
0x0000000000134fe0 : ret
0x000000000013506d : ret
0x000000000013508b : ret
0x00000000001350a4 : ret
0x00000000001350bc : ret
0x00000000001350c9 : ret
0x00000000001350dc : ret
0x00000000001350ec : ret
0x00000000001350ff : ret
0x0000000000135110 : ret
0x0000000000135127 : ret
0x000000000013513d : ret
0x000000000013514f : ret
0x0000000000135152 : ret
0x000000000013530a : ret
0x0000000000135335 : ret
0x0000000000135461 : ret
0x00000000001354a1 : ret
0x00000000001354b5 : ret
0x0000000000135546 : ret
0x0000000000135545 : ret
0x00000000001355f5 : ret
0x0000000000135689 : ret
0x000000000013570b : ret
0x00000000001357c0 : ret
0x000000000013585b : ret
0x0000000000135881 : ret
0x0000000000135880 : ret
0x00000000001358c4 : ret
0x00000000001358dc : ret
0x00000000001358f4 : ret
0x000000000013590c : ret
0x0000000000135924 : ret
0x000000000013593c : ret
0x0000000000135949 : ret
0x000000000013595c : ret
0x000000000013596c : ret
0x0000000000135985 : ret
0x00000000001359a6 : ret
0x00000000001359c6 : ret
0x00000000001359e4 : ret
0x00000000001359fe : ret
0x0000000000135a02 : ret
0x0000000000135d2f : ret
0x0000000000135ff2 : ret
0x0000000000136299 : ret
0x00000000001363b2 : ret
0x0000000000136559 : ret
0x0000000000136672 : ret
0x0000000000136767 : ret
0x00000000001367db : ret
0x0000000000136a2a : ret
0x0000000000136b6c : ret
0x0000000000136c17 : ret
0x0000000000136c5a : ret
0x0000000000136d66 : ret
0x0000000000136e64 : ret
0x0000000000136eb9 : ret
0x0000000000136f59 : ret
0x0000000000136fb9 : ret
0x0000000000137059 : ret
0x00000000001370dd : ret
0x000000000013721d : ret
0x000000000013735e : ret
0x00000000001373b2 : ret
0x0000000000137496 : ret
0x000000000013758f : ret
0x00000000001375e1 : ret
0x0000000000137679 : ret
0x00000000001376c2 : ret
0x000000000013786c : ret
0x0000000000137881 : ret
0x0000000000137991 : ret
0x0000000000137ad1 : ret
0x0000000000137c0f : ret
0x0000000000137c2f : ret
0x0000000000137cd0 : ret
0x0000000000137cf4 : ret
0x0000000000137d24 : ret
0x0000000000137d59 : ret
0x0000000000137d69 : ret
0x0000000000137d82 : ret
0x0000000000137eb6 : ret
0x00000000001380f4 : ret
0x0000000000138222 : ret
0x0000000000138242 : ret
0x0000000000138272 : ret
0x00000000001382c1 : ret
0x00000000001382e9 : ret
0x00000000001382fb : ret
0x000000000013831d : ret
0x000000000013832b : ret
0x000000000013834f : ret
0x000000000013835b : ret
0x000000000013837f : ret
0x000000000013838b : ret
0x00000000001383ae : ret
0x0000000000138435 : ret
0x000000000013845a : ret
0x0000000000138499 : ret
0x00000000001384ad : ret
0x000000000013851a : ret
0x0000000000138572 : ret
0x000000000013860e : ret
0x000000000013861f : ret
0x00000000001386f7 : ret
0x000000000013876f : ret
0x00000000001387b5 : ret
0x0000000000138805 : ret
0x0000000000138855 : ret
0x000000000013888e : ret
0x00000000001388c2 : ret
0x0000000000138915 : ret
0x000000000013896f : ret
0x0000000000138b4c : ret
0x0000000000138c99 : ret
0x0000000000138cb5 : ret
0x0000000000138d41 : ret
0x0000000000138d7f : ret
0x0000000000138d7e : ret
0x0000000000138e91 : ret
0x0000000000138eb0 : ret
0x0000000000138ecd : ret
0x0000000000138ef3 : ret
0x0000000000138f08 : ret
0x0000000000138f2a : ret
0x0000000000138f35 : ret
0x0000000000139032 : ret
0x00000000001390ee : ret
0x00000000001390f9 : ret
0x000000000013919b : ret
0x00000000001391aa : ret
0x00000000001391c9 : ret
0x0000000000139207 : ret
0x0000000000139221 : ret
0x0000000000139251 : ret
0x0000000000139288 : ret
0x000000000013929d : ret
0x000000000013931c : ret
0x00000000001393e5 : ret
0x0000000000139494 : ret
0x00000000001394df : ret
0x0000000000139582 : ret
0x00000000001395fd : ret
0x000000000013964c : ret
0x0000000000139655 : ret
0x00000000001399a3 : ret
0x00000000001399b8 : ret
0x0000000000139a02 : ret
0x0000000000139a86 : ret
0x0000000000139b32 : ret
0x0000000000139c65 : ret
0x0000000000139d38 : ret
0x0000000000139e2f : ret
0x0000000000139fa0 : ret
0x000000000013a08f : ret
0x000000000013a0cd : ret
0x000000000013a1df : ret
0x000000000013a24c : ret
0x000000000013a34c : ret
0x000000000013a4ce : ret
0x000000000013a4e6 : ret
0x000000000013a50c : ret
0x000000000013a521 : ret
0x000000000013a696 : ret
0x000000000013a6b6 : ret
0x000000000013a70f : ret
0x000000000013a7e6 : ret
0x000000000013a885 : ret
0x000000000013a8a3 : ret
0x000000000013a8a9 : ret
0x000000000013a8e1 : ret
0x000000000013a93d : ret
0x000000000013a948 : ret
0x000000000013a989 : ret
0x000000000013a995 : ret
0x000000000013a9bf : ret
0x000000000013a9e0 : ret
0x000000000013aa01 : ret
0x000000000013aa2f : ret
0x000000000013aa50 : ret
0x000000000013aa70 : ret
0x000000000013aa9a : ret
0x000000000013aadf : ret
0x000000000013ab00 : ret
0x000000000013ab45 : ret
0x000000000013ab8e : ret
0x000000000013ac05 : ret
0x000000000013ac4e : ret
0x000000000013acc5 : ret
0x000000000013ad0e : ret
0x000000000013ad85 : ret
0x000000000013adce : ret
0x000000000013ae3f : ret
0x000000000013ae61 : ret
0x000000000013ae82 : ret
0x000000000013aeaf : ret
0x000000000013aed1 : ret
0x000000000013aef1 : ret
0x000000000013af29 : ret
0x000000000013af38 : ret
0x000000000013afa8 : ret
0x000000000013afb8 : ret
0x000000000013b01f : ret
0x000000000013b046 : ret
0x000000000013b06f : ret
0x000000000013b08f : ret
0x000000000013b0b0 : ret
0x000000000013b0d1 : ret
0x000000000013b115 : ret
0x000000000013b125 : ret
0x000000000013b14a : ret
0x000000000013b188 : ret
0x000000000013b1e7 : ret
0x000000000013b32a : ret
0x000000000013b3d9 : ret
0x000000000013b476 : ret
0x000000000013b4a0 : ret
0x000000000013b4c8 : ret
0x000000000013b4e9 : ret
0x000000000013b5c5 : ret
0x000000000013b610 : ret
0x000000000013b705 : ret
0x000000000013b7b0 : ret
0x000000000013b854 : ret
0x000000000013b870 : ret
0x000000000013b914 : ret
0x000000000013b930 : ret
0x000000000013b9d4 : ret
0x000000000013b9f0 : ret
0x000000000013ba94 : ret
0x000000000013bab0 : ret
0x000000000013bb42 : ret
0x000000000013bb82 : ret
0x000000000013bbcf : ret
0x000000000013bbf1 : ret
0x000000000013bc10 : ret
0x000000000013bc3f : ret
0x000000000013bc61 : ret
0x000000000013bc80 : ret
0x000000000013bcaf : ret
0x000000000013bcd0 : ret
0x000000000013bcf0 : ret
0x000000000013bd1f : ret
0x000000000013bd40 : ret
0x000000000013bd60 : ret
0x000000000013bd71 : ret
0x000000000013bd70 : ret
0x000000000013bd88 : ret
0x000000000013bdb4 : ret
0x000000000013bdb3 : ret
0x000000000013bdba : ret
0x000000000013bdcc : ret
0x000000000013bde9 : ret
0x000000000013bdf2 : ret
0x000000000013be29 : ret
0x000000000013be28 : ret
0x000000000013be58 : ret
0x000000000013be57 : ret
0x000000000013be8a : ret
0x000000000013be89 : ret
0x000000000013bebb : ret
0x000000000013beba : ret
0x000000000013bec9 : ret
0x000000000013befb : ret
0x000000000013bf09 : ret
0x000000000013bf41 : ret
0x000000000013bf68 : ret
0x000000000013bfa3 : ret
0x000000000013bfc1 : ret
0x000000000013bfe8 : ret
0x000000000013c006 : ret
0x000000000013c0a3 : ret
0x000000000013c158 : ret
0x000000000013c163 : ret
0x000000000013c172 : ret
0x000000000013c182 : ret
0x000000000013c199 : ret
0x000000000013c1be : ret
0x000000000013c1ce : ret
0x000000000013c1cd : ret
0x000000000013c1e6 : ret
0x000000000013c220 : ret
0x000000000013c22a : ret
0x000000000013c249 : ret
0x000000000013c2fa : ret
0x000000000013c312 : ret
0x000000000013c322 : ret
0x000000000013c362 : ret
0x000000000013c3a3 : ret
0x000000000013c3ec : ret
0x000000000013c42f : ret
0x000000000013c45a : ret
0x000000000013c471 : ret
0x000000000013c489 : ret
0x000000000013c4b9 : ret
0x000000000013c4c9 : ret
0x000000000013c4f9 : ret
0x000000000013c520 : ret
0x000000000013c53b : ret
0x000000000013c554 : ret
0x000000000013c709 : ret
0x000000000013c708 : ret
0x000000000013c852 : ret
0x000000000013c951 : ret
0x000000000013c99b : ret
0x000000000013cc18 : ret
0x000000000013cc25 : ret
0x000000000013cc90 : ret
0x000000000013cd16 : ret
0x000000000013ce81 : ret
0x000000000013cec8 : ret
0x000000000013cfcf : ret
0x000000000013d008 : ret
0x000000000013d346 : ret
0x000000000013d3b0 : ret
0x000000000013d473 : ret
0x000000000013d51b : ret
0x000000000013d6b3 : ret
0x000000000013d6c1 : ret
0x000000000013d830 : ret
0x000000000013d911 : ret
0x000000000013d9c4 : ret
0x000000000013dc87 : ret
0x000000000013dcb2 : ret
0x000000000013dce4 : ret
0x000000000013dce6 : ret
0x000000000013dce4 : ret
0x000000000013dd18 : ret
0x000000000013dd6d : ret
0x000000000013dd7c : ret
0x000000000013ddd3 : ret
0x000000000013de97 : ret
0x000000000013df25 : ret
0x000000000013e012 : ret
0x000000000013e062 : ret
0x000000000013e243 : ret
0x000000000013e3b1 : ret
0x000000000013e3f3 : ret
0x000000000013e502 : ret
0x000000000013e692 : ret
0x000000000013e837 : ret
0x000000000013e937 : ret
0x000000000013e95b : ret
0x000000000013ef50 : ret
0x000000000013ef9d : ret
0x000000000013efc7 : ret
0x000000000013f00e : ret
0x000000000013f0d5 : ret
0x000000000013f120 : ret
0x000000000013f2b7 : ret
0x000000000013f2c3 : ret
0x000000000013f30a : ret
0x000000000013f31a : ret
0x000000000013f447 : ret
0x000000000013f5af : ret
0x000000000013f5dd : ret
0x000000000013f5f4 : ret
0x000000000013f71e : ret
0x000000000013f87b : ret
0x000000000013f919 : ret
0x000000000013fa75 : ret
0x000000000013fd49 : ret
0x000000000013ff30 : ret
0x0000000000140229 : ret
0x0000000000140291 : ret
0x00000000001402ad : ret
0x00000000001402bf : ret
0x00000000001402c2 : ret
0x00000000001402bf : ret
0x0000000000140327 : ret
0x00000000001403b7 : ret
0x0000000000140490 : ret
0x00000000001404c9 : ret
0x000000000014053d : ret
0x0000000000140554 : ret
0x000000000014057a : ret
0x0000000000140667 : ret
0x0000000000140683 : ret
0x00000000001406a2 : ret
0x00000000001406b3 : ret
0x00000000001406d3 : ret
0x00000000001406f2 : ret
0x0000000000140703 : ret
0x0000000000140723 : ret
0x0000000000140743 : ret
0x00000000001407e5 : ret
0x0000000000140824 : ret
0x000000000014085d : ret
0x00000000001408b3 : ret
0x00000000001408c2 : ret
0x0000000000140b3b : ret
0x0000000000140bb3 : ret
0x0000000000140c4d : ret
0x0000000000140c7b : ret
0x0000000000140c81 : ret
0x0000000000140cab : ret
0x0000000000140ce3 : ret
0x0000000000140d27 : ret
0x0000000000140d80 : ret
0x0000000000140db8 : ret
0x0000000000140e07 : ret
0x0000000000140e67 : ret
0x0000000000140eb1 : ret
0x0000000000140ed1 : ret
0x0000000000140ed0 : ret
0x0000000000140f66 : ret
0x0000000000141007 : ret
0x00000000001410a3 : ret
0x0000000000141145 : ret
0x000000000014117f : ret
0x00000000001411df : ret
0x00000000001412b7 : ret
0x00000000001412da : ret
0x0000000000141377 : ret
0x0000000000141381 : ret
0x0000000000141380 : ret
0x00000000001413ba : ret
0x0000000000141526 : ret
0x0000000000141627 : ret
0x000000000014181b : ret
0x0000000000141998 : ret
0x0000000000141b89 : ret
0x0000000000141c7c : ret
0x0000000000141e59 : ret
0x0000000000141f86 : ret
0x0000000000142282 : ret
0x000000000014265f : ret
0x00000000001426be : ret
0x000000000014280b : ret
0x0000000000142831 : ret
0x00000000001428d2 : ret
0x00000000001428eb : ret
0x0000000000142947 : ret
0x0000000000142971 : ret
0x00000000001429a7 : ret
0x0000000000142aa8 : ret
0x0000000000142b32 : ret
0x0000000000142c43 : ret
0x0000000000142c9d : ret
0x0000000000142cb3 : ret
0x0000000000142ee6 : ret
0x0000000000142f1b : ret
0x0000000000142fe7 : ret
0x00000000001431b8 : ret
0x00000000001432ab : ret
0x00000000001432f4 : ret
0x00000000001432ff : ret
0x000000000014330b : ret
0x000000000014339b : ret
0x00000000001433ca : ret
0x00000000001434fb : ret
0x0000000000143502 : ret
0x0000000000143561 : ret
0x0000000000143560 : ret
0x00000000001435b4 : ret
0x00000000001435fc : ret
0x0000000000143675 : ret
0x0000000000143674 : ret
0x0000000000143691 : ret
0x0000000000143690 : ret
0x00000000001436ae : ret
0x00000000001436ad : ret
0x0000000000143725 : ret
0x0000000000143724 : ret
0x000000000014373d : ret
0x000000000014373c : ret
0x0000000000143757 : ret
0x0000000000143756 : ret
0x00000000001437ae : ret
0x00000000001437d6 : ret
0x00000000001437e7 : ret
0x0000000000143826 : ret
0x00000000001438b5 : ret
0x000000000014390e : ret
0x0000000000143964 : ret
0x0000000000143a34 : ret
0x0000000000143aff : ret
0x0000000000143d47 : ret
0x0000000000143d70 : ret
0x0000000000143e01 : ret
0x0000000000143e0e : ret
0x0000000000143e1a : ret
0x0000000000143e40 : ret
0x0000000000143ea8 : ret
0x0000000000143ea7 : ret
0x0000000000143ec3 : ret
0x0000000000143eef : ret
0x0000000000143eff : ret
0x0000000000143f50 : ret
0x00000000001440c9 : ret
0x0000000000144149 : ret
0x000000000014427e : ret
0x0000000000144323 : ret
0x0000000000144338 : ret
0x0000000000144347 : ret
0x000000000014438e : ret
0x00000000001443a3 : ret
0x00000000001443bc : ret
0x00000000001443ec : ret
0x000000000014441c : ret
0x000000000014444c : ret
0x000000000014447c : ret
0x00000000001444ac : ret
0x000000000014473b : ret
0x0000000000144770 : ret
0x0000000000144788 : ret
0x000000000014484d : ret
0x00000000001448b2 : ret
0x0000000000144922 : ret
0x0000000000144992 : ret
0x0000000000144a02 : ret
0x0000000000144a6d : ret
0x0000000000144ad7 : ret
0x0000000000144b3d : ret
0x0000000000144b9d : ret
0x0000000000144c07 : ret
0x0000000000144c72 : ret
0x0000000000144cdd : ret
0x0000000000144e05 : ret
0x0000000000145a4a : ret
0x0000000000145a6e : ret
0x0000000000145a71 : ret
0x0000000000145a88 : ret
0x0000000000145bfe : ret
0x0000000000146a2f : ret
0x0000000000146a53 : ret
0x0000000000146a56 : ret
0x0000000000146a68 : ret
0x0000000000146cf2 : ret
0x00000000001485c7 : ret
0x00000000001485fb : ret
0x00000000001485fe : ret
0x0000000000148615 : ret
0x00000000001488fb : ret
0x000000000014a58c : ret
0x000000000014a5c0 : ret
0x000000000014a5c3 : ret
0x000000000014a5e5 : ret
0x000000000014a650 : ret
0x000000000014a659 : ret
0x000000000014a670 : ret
0x000000000014a71f : ret
0x000000000014a789 : ret
0x000000000014a792 : ret
0x000000000014a8a5 : ret
0x000000000014a8b3 : ret
0x000000000014a8b2 : ret
0x000000000014a961 : ret
0x000000000014a960 : ret
0x000000000014ab82 : ret
0x000000000014bf97 : ret
0x000000000014bfcb : ret
0x000000000014bfce : ret
0x000000000014bfe5 : ret
0x000000000014c25b : ret
0x000000000014d93c : ret
0x000000000014d970 : ret
0x000000000014d973 : ret
0x000000000014d995 : ret
0x000000000014da78 : ret
0x000000000014dadb : ret
0x000000000014db0f : ret
0x000000000014db24 : ret
0x000000000014db45 : ret
0x000000000014db61 : ret
0x000000000014db77 : ret
0x000000000014db7e : ret
0x000000000014dc57 : ret
0x000000000014dc78 : ret
0x000000000014dd45 : ret
0x000000000014de0f : ret
0x000000000014de8a : ret
0x000000000014df68 : ret
0x000000000014dfcb : ret
0x000000000014dfff : ret
0x000000000014e014 : ret
0x000000000014e035 : ret
0x000000000014e051 : ret
0x000000000014e067 : ret
0x000000000014e06e : ret
0x000000000014e079 : ret
0x000000000014e138 : ret
0x000000000014e158 : ret
0x000000000014e225 : ret
0x000000000014e30b : ret
0x000000000014e36b : ret
0x000000000014e39f : ret
0x000000000014e3b4 : ret
0x000000000014e3d5 : ret
0x000000000014e3f1 : ret
0x000000000014e407 : ret
0x000000000014e40e : ret
0x000000000014e419 : ret
0x000000000014e4d8 : ret
0x000000000014e4f8 : ret
0x000000000014e5c5 : ret
0x000000000014e7e3 : ret
0x000000000014e903 : ret
0x000000000014ea23 : ret
0x000000000014eb43 : ret
0x000000000014ec63 : ret
0x000000000014ed83 : ret
0x000000000014eea3 : ret
0x000000000014efc3 : ret
0x000000000014f0e3 : ret
0x000000000014f203 : ret
0x000000000014f323 : ret
0x000000000014f443 : ret
0x000000000014f563 : ret
0x000000000014f683 : ret
0x000000000014f7a3 : ret
0x000000000014f80e : ret
0x000000000014f811 : ret
0x000000000014f828 : ret
0x000000000014fad3 : ret
0x000000000014fc43 : ret
0x000000000014fdb3 : ret
0x000000000014ff23 : ret
0x0000000000150093 : ret
0x0000000000150203 : ret
0x0000000000150373 : ret
0x00000000001504e3 : ret
0x0000000000150653 : ret
0x00000000001507c3 : ret
0x0000000000150933 : ret
0x0000000000150aa3 : ret
0x0000000000150c13 : ret
0x0000000000150d83 : ret
0x0000000000150ef3 : ret
0x0000000000150f73 : ret
0x0000000000150f76 : ret
0x0000000000150f88 : ret
0x0000000000152576 : ret
0x0000000000152575 : ret
0x00000000001528bc : ret
0x00000000001528fa : ret
0x0000000000152932 : ret
0x0000000000152970 : ret
0x00000000001529a8 : ret
0x00000000001529d0 : ret
0x00000000001529f8 : ret
0x0000000000152a10 : ret
0x0000000000152a28 : ret
0x0000000000152a72 : ret
0x0000000000152aba : ret
0x0000000000152af8 : ret
0x0000000000152b30 : ret
0x0000000000152b6e : ret
0x0000000000152b96 : ret
0x0000000000152bbe : ret
0x0000000000152bd6 : ret
0x0000000000152bee : ret
0x0000000000152bf6 : ret
0x0000000000152c42 : ret
0x0000000000152c92 : ret
0x0000000000152cd8 : ret
0x0000000000152d10 : ret
0x0000000000152d4e : ret
0x0000000000152d76 : ret
0x0000000000152d9e : ret
0x0000000000152db6 : ret
0x0000000000152dce : ret
0x0000000000152dd8 : ret
0x0000000000152e22 : ret
0x0000000000152e72 : ret
0x0000000000152eb8 : ret
0x0000000000152ef0 : ret
0x0000000000152f2e : ret
0x0000000000152f56 : ret
0x0000000000152f7e : ret
0x0000000000152f96 : ret
0x0000000000152fae : ret
0x0000000000152fc0 : ret
0x0000000000153012 : ret
0x000000000015305a : ret
0x0000000000153098 : ret
0x00000000001530d0 : ret
0x000000000015310e : ret
0x0000000000153136 : ret
0x000000000015315e : ret
0x0000000000153176 : ret
0x000000000015318e : ret
0x0000000000153196 : ret
0x00000000001531a9 : ret
0x00000000001531a8 : ret
0x00000000001531cb : ret
0x00000000001531ca : ret
0x00000000001531e4 : ret
0x000000000015322c : ret
0x0000000000153234 : ret
0x0000000000153233 : ret
0x0000000000153251 : ret
0x0000000000153250 : ret
0x000000000015326a : ret
0x00000000001532a6 : ret
0x00000000001532e0 : ret
0x0000000000153318 : ret
0x0000000000153340 : ret
0x0000000000153368 : ret
0x0000000000153380 : ret
0x000000000015339c : ret
0x00000000001533e4 : ret
0x000000000015342c : ret
0x000000000015346a : ret
0x00000000001534a2 : ret
0x00000000001534e0 : ret
0x0000000000153518 : ret
0x0000000000153540 : ret
0x0000000000153568 : ret
0x0000000000153580 : ret
0x000000000015359c : ret
0x00000000001535e4 : ret
0x000000000015362c : ret
0x000000000015366a : ret
0x00000000001536a2 : ret
0x00000000001536e0 : ret
0x0000000000153718 : ret
0x0000000000153740 : ret
0x0000000000153768 : ret
0x0000000000153780 : ret
0x000000000015379c : ret
0x0000000000154f46 : ret
0x0000000000154f45 : ret
0x000000000015528c : ret
0x00000000001552ca : ret
0x0000000000155302 : ret
0x0000000000155340 : ret
0x0000000000155378 : ret
0x00000000001553a0 : ret
0x00000000001553c8 : ret
0x00000000001553e0 : ret
0x00000000001553f8 : ret
0x0000000000155442 : ret
0x000000000015548a : ret
0x00000000001554c8 : ret
0x0000000000155500 : ret
0x000000000015553e : ret
0x0000000000155566 : ret
0x000000000015558e : ret
0x00000000001555a6 : ret
0x00000000001555be : ret
0x00000000001555c6 : ret
0x0000000000155612 : ret
0x0000000000155662 : ret
0x00000000001556a8 : ret
0x00000000001556e0 : ret
0x000000000015571e : ret
0x0000000000155746 : ret
0x000000000015576e : ret
0x0000000000155786 : ret
0x000000000015579e : ret
0x00000000001557a8 : ret
0x00000000001557f2 : ret
0x0000000000155842 : ret
0x0000000000155888 : ret
0x00000000001558c0 : ret
0x00000000001558fe : ret
0x0000000000155926 : ret
0x000000000015594e : ret
0x0000000000155966 : ret
0x000000000015597e : ret
0x0000000000155990 : ret
0x00000000001559e2 : ret
0x0000000000155a2a : ret
0x0000000000155a68 : ret
0x0000000000155aa0 : ret
0x0000000000155ade : ret
0x0000000000155b06 : ret
0x0000000000155b2e : ret
0x0000000000155b46 : ret
0x0000000000155b5e : ret
0x0000000000155b66 : ret
0x0000000000155b79 : ret
0x0000000000155b78 : ret
0x0000000000155b9b : ret
0x0000000000155b9a : ret
0x0000000000155bb4 : ret
0x0000000000155bfc : ret
0x0000000000155c04 : ret
0x0000000000155c03 : ret
0x0000000000155c21 : ret
0x0000000000155c20 : ret
0x0000000000155c3a : ret
0x0000000000155c76 : ret
0x0000000000155cb0 : ret
0x0000000000155ce8 : ret
0x0000000000155d10 : ret
0x0000000000155d38 : ret
0x0000000000155d50 : ret
0x0000000000155d6c : ret
0x0000000000155db4 : ret
0x0000000000155dfc : ret
0x0000000000155e3a : ret
0x0000000000155e72 : ret
0x0000000000155eb0 : ret
0x0000000000155ee8 : ret
0x0000000000155f10 : ret
0x0000000000155f38 : ret
0x0000000000155f50 : ret
0x0000000000155f6c : ret
0x0000000000155fb4 : ret
0x0000000000155ffc : ret
0x000000000015603a : ret
0x0000000000156072 : ret
0x00000000001560b0 : ret
0x00000000001560e8 : ret
0x0000000000156110 : ret
0x0000000000156138 : ret
0x0000000000156150 : ret
0x000000000015616c : ret
0x0000000000157916 : ret
0x0000000000157915 : ret
0x0000000000157c5c : ret
0x0000000000157c9a : ret
0x0000000000157cd2 : ret
0x0000000000157d10 : ret
0x0000000000157d48 : ret
0x0000000000157d70 : ret
0x0000000000157d98 : ret
0x0000000000157db0 : ret
0x0000000000157dc8 : ret
0x0000000000157e12 : ret
0x0000000000157e5a : ret
0x0000000000157e98 : ret
0x0000000000157ed0 : ret
0x0000000000157f0e : ret
0x0000000000157f36 : ret
0x0000000000157f5e : ret
0x0000000000157f76 : ret
0x0000000000157f8e : ret
0x0000000000157f96 : ret
0x0000000000157fe2 : ret
0x0000000000158032 : ret
0x0000000000158078 : ret
0x00000000001580b0 : ret
0x00000000001580ee : ret
0x0000000000158116 : ret
0x000000000015813e : ret
0x0000000000158156 : ret
0x000000000015816e : ret
0x0000000000158178 : ret
0x00000000001581c2 : ret
0x0000000000158212 : ret
0x0000000000158258 : ret
0x0000000000158290 : ret
0x00000000001582ce : ret
0x00000000001582f6 : ret
0x000000000015831e : ret
0x0000000000158336 : ret
0x000000000015834e : ret
0x0000000000158360 : ret
0x00000000001583b2 : ret
0x00000000001583fa : ret
0x0000000000158438 : ret
0x0000000000158470 : ret
0x00000000001584ae : ret
0x00000000001584d6 : ret
0x00000000001584fe : ret
0x0000000000158516 : ret
0x000000000015852e : ret
0x0000000000158536 : ret
0x0000000000158549 : ret
0x0000000000158548 : ret
0x000000000015856b : ret
0x000000000015856a : ret
0x0000000000158584 : ret
0x00000000001585cc : ret
0x00000000001585d4 : ret
0x00000000001585d3 : ret
0x00000000001585f1 : ret
0x00000000001585f0 : ret
0x000000000015860a : ret
0x0000000000158646 : ret
0x0000000000158680 : ret
0x00000000001586b8 : ret
0x00000000001586e0 : ret
0x0000000000158708 : ret
0x0000000000158720 : ret
0x000000000015873c : ret
0x0000000000158784 : ret
0x00000000001587cc : ret
0x000000000015880a : ret
0x0000000000158842 : ret
0x0000000000158880 : ret
0x00000000001588b8 : ret
0x00000000001588e0 : ret
0x0000000000158908 : ret
0x0000000000158920 : ret
0x000000000015893c : ret
0x0000000000158984 : ret
0x00000000001589cc : ret
0x0000000000158a0a : ret
0x0000000000158a42 : ret
0x0000000000158a80 : ret
0x0000000000158ab8 : ret
0x0000000000158ae0 : ret
0x0000000000158b08 : ret
0x0000000000158b20 : ret
0x0000000000158b3c : ret
0x00000000001593c7 : ret
0x000000000015960a : ret
0x000000000015a3c3 : ret
0x000000000015a3c2 : ret
0x000000000015aad0 : ret
0x000000000015ab40 : ret
0x000000000015ab60 : ret
0x000000000015abd0 : ret
0x000000000015abf0 : ret
0x000000000015ac3c : ret
0x000000000015ac3b : ret
0x000000000015ac41 : ret
0x000000000015ac40 : ret
0x000000000015ac60 : ret
0x000000000015ac80 : ret
0x000000000015acf0 : ret
0x000000000015ad0e : ret
0x000000000015ad70 : ret
0x000000000015ad8e : ret
0x000000000015adf0 : ret
0x000000000015ae0e : ret
0x000000000015ae70 : ret
0x000000000015ae8e : ret
0x000000000015aef0 : ret
0x000000000015af08 : ret
0x000000000015af70 : ret
0x000000000015af8c : ret
0x000000000015aff0 : ret
0x000000000015b00c : ret
0x000000000015b070 : ret
0x000000000015b08c : ret
0x000000000015b0f0 : ret
0x000000000015b106 : ret
0x000000000015b170 : ret
0x000000000015b190 : ret
0x000000000015b200 : ret
0x000000000015b218 : ret
0x000000000015b280 : ret
0x000000000015b297 : ret
0x000000000015b2ee : ret
0x000000000015b348 : ret
0x000000000015b35e : ret
0x000000000015b3b8 : ret
0x000000000015b3ce : ret
0x000000000015b428 : ret
0x000000000015b43e : ret
0x000000000015b498 : ret
0x000000000015b4ae : ret
0x000000000015b508 : ret
0x000000000015b51e : ret
0x000000000015b578 : ret
0x000000000015b58e : ret
0x000000000015b5e8 : ret
0x000000000015b5fe : ret
0x000000000015b658 : ret
0x000000000015b666 : ret
0x000000000015b6c8 : ret
0x000000000015b6da : ret
0x000000000015b738 : ret
0x000000000015b74a : ret
0x000000000015b7a8 : ret
0x000000000015b7ba : ret
0x000000000015b818 : ret
0x000000000015b824 : ret
0x000000000015b888 : ret
0x000000000015b89e : ret
0x000000000015b8f8 : ret
0x000000000015b906 : ret
0x000000000015b968 : ret
0x000000000015b975 : ret
0x000000000015ce93 : ret
0x000000000015ce92 : ret
0x000000000015d5a0 : ret
0x000000000015d610 : ret
0x000000000015d630 : ret
0x000000000015d6a0 : ret
0x000000000015d6c0 : ret
0x000000000015d70c : ret
0x000000000015d70b : ret
0x000000000015d711 : ret
0x000000000015d710 : ret
0x000000000015d730 : ret
0x000000000015d750 : ret
0x000000000015d7c0 : ret
0x000000000015d7de : ret
0x000000000015d840 : ret
0x000000000015d85e : ret
0x000000000015d8c0 : ret
0x000000000015d8de : ret
0x000000000015d940 : ret
0x000000000015d95e : ret
0x000000000015d9c0 : ret
0x000000000015d9d8 : ret
0x000000000015da40 : ret
0x000000000015da5c : ret
0x000000000015dac0 : ret
0x000000000015dadc : ret
0x000000000015db40 : ret
0x000000000015db5c : ret
0x000000000015dbc0 : ret
0x000000000015dbd6 : ret
0x000000000015dc40 : ret
0x000000000015dc60 : ret
0x000000000015dcd0 : ret
0x000000000015dce8 : ret
0x000000000015dd50 : ret
0x000000000015dd67 : ret
0x000000000015ddbe : ret
0x000000000015de18 : ret
0x000000000015de2e : ret
0x000000000015de88 : ret
0x000000000015de9e : ret
0x000000000015def8 : ret
0x000000000015df0e : ret
0x000000000015df68 : ret
0x000000000015df7e : ret
0x000000000015dfd8 : ret
0x000000000015dfee : ret
0x000000000015e048 : ret
0x000000000015e05e : ret
0x000000000015e0b8 : ret
0x000000000015e0ce : ret
0x000000000015e128 : ret
0x000000000015e136 : ret
0x000000000015e198 : ret
0x000000000015e1aa : ret
0x000000000015e208 : ret
0x000000000015e21a : ret
0x000000000015e278 : ret
0x000000000015e28a : ret
0x000000000015e2e8 : ret
0x000000000015e2f4 : ret
0x000000000015e358 : ret
0x000000000015e36e : ret
0x000000000015e3c8 : ret
0x000000000015e3d6 : ret
0x000000000015e438 : ret
0x000000000015e445 : ret
0x000000000015f973 : ret
0x000000000015f972 : ret
0x00000000001600c0 : ret
0x0000000000160130 : ret
0x0000000000160150 : ret
0x00000000001601c0 : ret
0x00000000001601e0 : ret
0x000000000016022c : ret
0x000000000016022b : ret
0x0000000000160231 : ret
0x0000000000160230 : ret
0x0000000000160250 : ret
0x0000000000160270 : ret
0x00000000001602e0 : ret
0x00000000001602fe : ret
0x0000000000160360 : ret
0x000000000016037e : ret
0x00000000001603e0 : ret
0x00000000001603fe : ret
0x0000000000160460 : ret
0x000000000016047e : ret
0x00000000001604e0 : ret
0x00000000001604f8 : ret
0x0000000000160560 : ret
0x000000000016057c : ret
0x00000000001605e0 : ret
0x00000000001605fc : ret
0x0000000000160660 : ret
0x000000000016067c : ret
0x00000000001606e0 : ret
0x00000000001606f6 : ret
0x0000000000160760 : ret
0x0000000000160780 : ret
0x00000000001607f0 : ret
0x0000000000160808 : ret
0x0000000000160870 : ret
0x0000000000160887 : ret
0x00000000001608de : ret
0x0000000000160938 : ret
0x000000000016094e : ret
0x00000000001609a8 : ret
0x00000000001609be : ret
0x0000000000160a18 : ret
0x0000000000160a2e : ret
0x0000000000160a88 : ret
0x0000000000160a9e : ret
0x0000000000160af8 : ret
0x0000000000160b0e : ret
0x0000000000160b68 : ret
0x0000000000160b7e : ret
0x0000000000160bd8 : ret
0x0000000000160bee : ret
0x0000000000160c48 : ret
0x0000000000160c56 : ret
0x0000000000160cb8 : ret
0x0000000000160cca : ret
0x0000000000160d28 : ret
0x0000000000160d3a : ret
0x0000000000160d98 : ret
0x0000000000160daa : ret
0x0000000000160e08 : ret
0x0000000000160e14 : ret
0x0000000000160e78 : ret
0x0000000000160e8e : ret
0x0000000000160ee8 : ret
0x0000000000160ef6 : ret
0x0000000000160f58 : ret
0x0000000000160f65 : ret
0x00000000001613d3 : ret
0x00000000001615d3 : ret
0x00000000001617d3 : ret
0x00000000001619d3 : ret
0x0000000000161bd3 : ret
0x0000000000161dd3 : ret
0x0000000000161fd3 : ret
0x00000000001621d3 : ret
0x00000000001623d3 : ret
0x00000000001625d3 : ret
0x00000000001627d3 : ret
0x00000000001629d3 : ret
0x0000000000162bd3 : ret
0x0000000000162dd3 : ret
0x0000000000162fd3 : ret
0x000000000016309b : ret
0x000000000016309e : ret
0x00000000001630b5 : ret
0x0000000000163593 : ret
0x00000000001637d3 : ret
0x0000000000163a13 : ret
0x0000000000163c53 : ret
0x0000000000163e93 : ret
0x00000000001640d3 : ret
0x0000000000164313 : ret
0x0000000000164553 : ret
0x0000000000164793 : ret
0x00000000001649d3 : ret
0x0000000000164c13 : ret
0x0000000000164e53 : ret
0x0000000000165093 : ret
0x00000000001652d3 : ret
0x0000000000165513 : ret
0x00000000001655f0 : ret
0x00000000001655f3 : ret
0x0000000000165615 : ret
0x0000000000165699 : ret
0x00000000001657d1 : ret
0x0000000000165839 : ret
0x0000000000165849 : ret
0x00000000001658a8 : ret
0x0000000000166c59 : ret
0x0000000000166cb1 : ret
0x0000000000166cc7 : ret
0x0000000000166cd9 : ret
0x0000000000166cef : ret
0x0000000000166cf7 : ret
0x0000000000166d0d : ret
0x0000000000166d1f : ret
0x0000000000166d2d : ret
0x0000000000166d3f : ret
0x0000000000166d4f : ret
0x0000000000166d5f : ret
0x0000000000166d6f : ret
0x0000000000166d81 : ret
0x0000000000166da1 : ret
0x0000000000166dc1 : ret
0x0000000000166fe3 : ret
0x0000000000167083 : ret
0x00000000001670f8 : ret
0x0000000000168877 : ret
0x00000000001688df : ret
0x0000000000168ad5 : ret
0x0000000000168af7 : ret
0x0000000000168b1d : ret
0x0000000000168b35 : ret
0x0000000000168b5b : ret
0x0000000000168b7d : ret
0x0000000000168b9b : ret
0x0000000000168bbd : ret
0x0000000000168bdd : ret
0x0000000000168bfd : ret
0x0000000000168c1d : ret
0x0000000000168c3f : ret
0x0000000000168c5f : ret
0x0000000000168c7f : ret
0x0000000000168c80 : ret
0x0000000000168c92 : ret
0x0000000000168ca3 : ret
0x0000000000168cb6 : ret
0x0000000000168cc2 : ret
0x0000000000168cd5 : ret
0x0000000000168ce6 : ret
0x0000000000168cf5 : ret
0x0000000000168d03 : ret
0x0000000000168d16 : ret
0x0000000000168d27 : ret
0x0000000000168d36 : ret
0x0000000000168d46 : ret
0x0000000000168d57 : ret
0x0000000000168d67 : ret
0x0000000000168d77 : ret
0x0000000000168d87 : ret
0x0000000000168eb3 : ret
0x0000000000168f49 : ret
0x0000000000168fe4 : ret
0x0000000000169b01 : ret
0x0000000000169b69 : ret
0x0000000000169b79 : ret
0x0000000000169bd8 : ret
0x000000000016af8a : ret
0x000000000016afe2 : ret
0x000000000016aff7 : ret
0x000000000016b00a : ret
0x000000000016b020 : ret
0x000000000016b038 : ret
0x000000000016b04e : ret
0x000000000016b060 : ret
0x000000000016b07e : ret
0x000000000016b090 : ret
0x000000000016b0b0 : ret
0x000000000016b0d0 : ret
0x000000000016b0f0 : ret
0x000000000016b112 : ret
0x000000000016b132 : ret
0x000000000016b152 : ret
0x000000000016b373 : ret
0x000000000016b413 : ret
0x000000000016b488 : ret
0x000000000016b9b9 : ret
0x000000000016ca39 : ret
0x000000000016cc0f : ret
0x000000000016cc77 : ret
0x000000000016ce7c : ret
0x000000000016ce9f : ret
0x000000000016cec5 : ret
0x000000000016ceed : ret
0x000000000016cf13 : ret
0x000000000016cf45 : ret
0x000000000016cf73 : ret
0x000000000016cfa5 : ret
0x000000000016cfd5 : ret
0x000000000016d005 : ret
0x000000000016d035 : ret
0x000000000016d067 : ret
0x000000000016d097 : ret
0x000000000016d0c7 : ret
0x000000000016d0d0 : ret
0x000000000016d0e2 : ret
0x000000000016d0f3 : ret
0x000000000016d106 : ret
0x000000000016d112 : ret
0x000000000016d125 : ret
0x000000000016d136 : ret
0x000000000016d145 : ret
0x000000000016d153 : ret
0x000000000016d166 : ret
0x000000000016d177 : ret
0x000000000016d186 : ret
0x000000000016d196 : ret
0x000000000016d1a7 : ret
0x000000000016d1b7 : ret
0x000000000016d1c7 : ret
0x000000000016d1d7 : ret
0x000000000016d303 : ret
0x000000000016d3a1 : ret
0x000000000016d44c : ret
0x000000000016de70 : ret
0x000000000016dee8 : ret
0x000000000016df48 : ret
0x000000000016e3b7 : ret
0x000000000016e3d6 : ret
0x000000000016e3e7 : ret
0x000000000016e3f9 : ret
0x000000000016e40f : ret
0x000000000016e421 : ret
0x000000000016e468 : ret
0x000000000016eedf : ret
0x000000000016f009 : ret
0x000000000016f031 : ret
0x000000000016f0bd : ret
0x000000000016f0e4 : ret
0x000000000016f108 : ret
0x000000000016f1a0 : ret
0x000000000016f1d4 : ret
0x000000000016f20b : ret
0x000000000016f293 : ret
0x000000000016f2c4 : ret
0x000000000016f2ee : ret
0x000000000016f30a : ret
0x000000000016f38c : ret
0x000000000016f40f : ret
0x000000000016f48f : ret
0x000000000016f50f : ret
0x000000000016f58f : ret
0x000000000016f617 : ret
0x000000000016f73d : ret
0x000000000016f7cd : ret
0x000000000016f7ef : ret
0x000000000016f7f4 : ret
0x000000000016f7f3 : ret
0x000000000016f7f6 : ret
0x000000000016f860 : ret
0x000000000016f900 : ret
0x000000000016f9a0 : ret
0x000000000016fa11 : ret
0x000000000016fa5b : ret
0x000000000016fa6d : ret
0x000000000017050f : ret
0x0000000000170639 : ret
0x000000000017065f : ret
0x00000000001706da : ret
0x000000000017075f : ret
0x00000000001707eb : ret
0x0000000000170851 : ret
0x0000000000170885 : ret
0x000000000017088f : ret
0x0000000000170890 : ret
0x0000000000170893 : ret
0x0000000000170923 : ret
0x000000000017096d : ret
0x000000000017099b : ret
0x00000000001709f4 : ret
0x0000000000170a3a : ret
0x0000000000170a80 : ret
0x0000000000170ad3 : ret
0x0000000000170ae3 : ret
0x0000000000170af4 : ret
0x0000000000170b04 : ret
0x0000000000170b14 : ret
0x0000000000170b24 : ret
0x0000000000170b34 : ret
0x0000000000170b44 : ret
0x0000000000170b54 : ret
0x0000000000170b64 : ret
0x0000000000170b74 : ret
0x0000000000170b84 : ret
0x0000000000170b94 : ret
0x0000000000170ba4 : ret
0x0000000000170bb4 : ret
0x0000000000171dd1 : ret
0x0000000000171dea : ret
0x0000000000171dfa : ret
0x0000000000171e0a : ret
0x0000000000171e1a : ret
0x0000000000171e2a : ret
0x0000000000171e3a : ret
0x0000000000171e4a : ret
0x0000000000171e85 : ret
0x00000000001720fc : ret
0x00000000001721a9 : ret
0x0000000000172264 : ret
0x00000000001722fd : ret
0x000000000017231a : ret
0x0000000000172322 : ret
0x0000000000172803 : ret
0x000000000017281c : ret
0x0000000000172831 : ret
0x000000000017284c : ret
0x000000000017292a : ret
0x0000000000172939 : ret
0x0000000000172940 : ret
0x0000000000172952 : ret
0x00000000001729ef : ret
0x0000000000172a1c : ret
0x0000000000172a38 : ret
0x0000000000172a49 : ret
0x0000000000172a5e : ret
0x0000000000172a6e : ret
0x0000000000172a7c : ret
0x0000000000172a87 : ret
0x0000000000172aec : ret
0x0000000000172b03 : ret
0x0000000000172b7f : ret
0x0000000000172f13 : ret
0x0000000000173469 : ret
0x00000000001734cd : ret
0x0000000000173526 : ret
0x000000000017359d : ret
0x0000000000173991 : ret
0x0000000000173d3e : ret
0x0000000000173d61 : ret
0x0000000000173d60 : ret
0x0000000000173da1 : ret
0x0000000000173da0 : ret
0x0000000000173df6 : ret
0x0000000000173f62 : ret
0x0000000000173fc1 : ret
0x0000000000174011 : ret
0x00000000001740f3 : ret
0x0000000000174148 : ret
0x000000000017424b : ret
0x0000000000174281 : ret
0x0000000000174280 : ret
0x00000000001742eb : ret
0x00000000001742ea : ret
0x0000000000174328 : ret
0x0000000000174341 : ret
0x0000000000174340 : ret
0x0000000000174362 : ret
0x0000000000174382 : ret
0x00000000001743a1 : ret
0x00000000001743b0 : ret
0x00000000001743ff : ret
0x000000000017447c : ret
0x000000000017449b : ret
0x000000000017449a : ret
0x000000000017457d : ret
0x000000000017457c : ret
0x00000000001745ad : ret
0x00000000001745ac : ret
0x00000000001745bd : ret
0x00000000001745d8 : ret
0x0000000000174685 : ret
0x0000000000174684 : ret
0x0000000000174775 : ret
0x00000000001747f4 : ret
0x0000000000174841 : ret
0x0000000000174840 : ret
0x0000000000174871 : ret
0x0000000000174870 : ret
0x00000000001748a1 : ret
0x00000000001748a0 : ret
0x00000000001748d1 : ret
0x00000000001748d0 : ret
0x0000000000174901 : ret
0x0000000000174900 : ret
0x0000000000174cc6 : ret
0x0000000000174ce0 : ret
0x00000000001750f3 : ret
0x00000000001750f2 : ret
0x0000000000175144 : ret
0x0000000000175151 : ret
0x000000000017519f : ret
0x000000000017521a : ret
0x0000000000175240 : ret
0x00000000001752d7 : ret
0x00000000001752f1 : ret
0x00000000001765ec : ret
0x00000000001769ec : ret
0x0000000000176bec : ret
0x0000000000176fec : ret
0x000000000017c5c4 : ret
0x000000000017c69c : ret
0x000000000017cab8 : ret
0x000000000017cc0c : ret
0x000000000017d00c : ret
0x000000000017d40c : ret
0x000000000017e240 : ret
0x000000000017e730 : ret
0x000000000017f238 : ret
0x000000000017f9d0 : ret
0x0000000000181b88 : ret
0x0000000000181d43 : ret
0x00000000001823fa : ret
0x00000000001823fd : ret
0x0000000000182a27 : ret
0x0000000000182a63 : ret
0x0000000000182c07 : ret
0x0000000000182e0c : ret
0x0000000000182f52 : ret
0x00000000001832b2 : ret
0x00000000001833fa : ret
0x000000000018345e : ret
0x000000000018348f : ret
0x0000000000183ca7 : ret
0x0000000000183e2b : ret
0x0000000000183f8c : ret
0x00000000001840e8 : ret
0x0000000000184c35 : ret
0x00000000001850b9 : ret
0x00000000001850ba : ret
0x000000000018540d : ret
0x0000000000185527 : ret
0x0000000000185546 : ret
0x00000000001855f2 : ret
0x00000000001856b3 : ret
0x0000000000185a55 : ret
0x0000000000185b14 : ret
0x0000000000185c8c : ret
0x0000000000185e3c : ret
0x0000000000187b4d : ret
0x0000000000188a70 : ret
0x0000000000189019 : ret
0x000000000018901d : ret
0x0000000000189025 : ret
0x000000000018902d : ret
0x0000000000189031 : ret
0x000000000018906d : ret
0x0000000000189099 : ret
0x00000000001890b1 : ret
0x000000000018919c : ret
0x00000000001892c0 : ret
0x0000000000189f00 : ret
0x0000000000189f04 : ret
0x000000000018a001 : ret
0x000000000018a4fa : ret
0x0000000000195399 : ret
0x0000000000195398 : ret
0x000000000019784d : ret
0x0000000000197855 : ret
0x000000000019785d : ret
0x000000000019a115 : ret
0x000000000019a11d : ret
0x000000000019a125 : ret
0x000000000019a12d : ret
0x000000000019a135 : ret
0x000000000019a13d : ret
0x000000000019a145 : ret
0x000000000019a14d : ret
0x000000000019a155 : ret
0x000000000019a15d : ret
0x000000000019a165 : ret
0x000000000019b661 : ret
0x000000000019b669 : ret
0x000000000019b668 : ret
0x000000000019be83 : ret
0x000000000019be82 : ret
0x000000000019d06c : ret
0x000000000019d113 : ret
0x000000000019d121 : ret
0x000000000019dba0 : ret
0x000000000019dba6 : ret
0x000000000019dba0 : ret
0x000000000019e266 : ret
0x000000000019e265 : ret
0x000000000019e5ab : ret
0x000000000019e5b3 : ret
0x000000000019e5ab : ret
0x000000000019e5d3 : ret
0x000000000019e5db : ret
0x000000000019e5d3 : ret
0x000000000019e8c1 : ret
0x000000000019e8c0 : ret
0x000000000019fbb7 : ret
0x000000000019fce9 : ret
0x000000000019fcf9 : ret
0x000000000019fe21 : ret
0x000000000019fe89 : ret
0x00000000001a0063 : ret
0x00000000001a02f7 : ret
0x00000000001a0302 : ret
0x00000000001a030b : ret
0x00000000001a0302 : ret
0x00000000001a0689 : ret
0x00000000001a0699 : ret
0x00000000001a077a : ret
0x00000000001a0779 : ret
0x00000000001a0c14 : ret
0x00000000001a0c13 : ret
0x00000000001a0cb4 : ret
0x00000000001a0cb3 : ret
0x00000000001a0ee8 : ret
0x00000000001a0eee : ret
0x00000000001a0eed : ret
0x00000000001a0ee8 : ret
0x00000000001a1449 : ret
0x00000000001a1464 : ret
0x00000000001a1471 : ret
0x00000000001a1470 : ret
0x00000000001a15ea : ret
0x00000000001a15e9 : ret
0x00000000001a1bef : ret
0x00000000001a1bee : ret
0x00000000001a1bf8 : ret
0x00000000001a1bef : ret
0x00000000001a1db0 : ret
0x00000000001a1dbd : ret
0x00000000001a1dbc : ret
0x00000000001a2013 : ret
0x00000000001a2023 : ret
0x00000000001a2630 : ret
0x00000000001a263a : ret
0x00000000001a2641 : ret
0x00000000001a263a : ret
0x00000000001a2649 : ret
0x00000000001a2641 : ret
0x00000000001a2668 : ret
0x00000000001a2672 : ret
0x00000000001a2679 : ret
0x00000000001a2672 : ret
0x00000000001a2742 : ret
0x00000000001a2890 : ret
0x00000000001a28e8 : ret
0x00000000001a28e7 : ret
0x00000000001a2908 : ret
0x00000000001a2907 : ret
0x00000000001a2b12 : ret
0x00000000001a2b11 : ret
0x00000000001a2b3c : ret
0x00000000001a2b56 : ret
0x00000000001a2b55 : ret
0x00000000001a2b81 : ret
0x00000000001a2b80 : ret
0x00000000001a2c47 : ret
0x00000000001a2c46 : ret
0x00000000001a2c59 : ret
0x00000000001a2c58 : ret
0x00000000001a2d24 : ret
0x00000000001a2d23 : ret
0x00000000001a2d32 : ret
0x00000000001a2d31 : ret
0x00000000001a2d40 : ret
0x00000000001a2d3f : ret
0x00000000001a2d4f : ret
0x00000000001a2d4e : ret
0x00000000001a2dc8 : ret
0x00000000001a2dc7 : ret
0x00000000001a3017 : ret
0x00000000001a381a : ret
0x00000000001a3819 : ret
0x00000000001a3c23 : ret
0x00000000001a3c33 : ret
0x00000000001a3f6f : ret
0x00000000001a3f6e : ret
0x00000000001a3fed : ret
0x00000000001a3fec : ret
0x00000000001a3ffc : ret
0x00000000001a3ffb : ret
0x00000000001a4052 : ret
0x00000000001a4179 : ret
0x00000000001a41be : ret
0x00000000001a41bd : ret
0x00000000001a4207 : ret
0x00000000001a4206 : ret
0x00000000001a421b : ret
0x00000000001a421a : ret
0x00000000001a4228 : ret
0x00000000001a425b : ret
0x00000000001a426c : ret
0x00000000001a427c : ret
0x00000000001a4302 : ret
0x00000000001a4301 : ret
0x00000000001a4352 : ret
0x00000000001a4351 : ret
0x00000000001a4502 : ret
0x00000000001a4554 : ret
0x00000000001a4574 : ret
0x00000000001a499f : ret
0x00000000001a4b89 : ret
0x00000000001a4b88 : ret
0x00000000001a4fb8 : ret
0x00000000001a4fb7 : ret
0x00000000001a4fc5 : ret
0x00000000001a4fc4 : ret
0x00000000001a50aa : ret
0x00000000001a50a9 : ret
0x00000000001a50c8 : ret
0x00000000001a50e4 : ret
0x00000000001a5186 : ret
0x00000000001a5185 : ret
0x00000000001a52e2 : ret
0x00000000001a52e1 : ret
0x00000000001a5300 : ret
0x00000000001a5345 : ret
0x00000000001a535c : ret
0x00000000001a53a7 : ret
0x00000000001a53b0 : ret
0x00000000001a53af : ret
0x00000000001a53a7 : ret
0x00000000001a5c59 : ret
0x00000000001a5c6b : ret
0x00000000001a5c6a : ret
0x00000000001a5e99 : ret
0x00000000001a5e9f : ret
0x00000000001a5e99 : ret
0x00000000001a5ee7 : ret
0x00000000001a5f9f : ret
0x00000000001a5f9e : ret
0x00000000001a60bd : ret
0x00000000001a60bc : ret
0x00000000001a60cb : ret
0x00000000001a60ca : ret
0x00000000001a60d9 : ret
0x00000000001a60d8 : ret
0x00000000001a631b : ret
0x00000000001a631a : ret
0x00000000001a67b4 : ret
0x00000000001a6a12 : ret
0x00000000001a6cca : ret
0x00000000001a6f89 : ret
0x00000000001a6f88 : ret
0x00000000001a6fa6 : ret
0x00000000001a6fbe : ret
0x00000000001a6fd9 : ret
0x00000000001a6fd8 : ret
0x00000000001a6ff6 : ret
0x00000000001a71e1 : ret
0x00000000001a71f6 : ret
0x00000000001a72b9 : ret
0x00000000001a7468 : ret
0x00000000001a7467 : ret
0x00000000001a7485 : ret
0x00000000001a7708 : ret
0x00000000001a7707 : ret
0x00000000001a7711 : ret
0x00000000001a7710 : ret
0x00000000001a7708 : ret
0x00000000001a7e09 : ret
0x00000000001a7e0e : ret
0x00000000001a7e0d : ret
0x00000000001a7e25 : ret
0x00000000001a7e24 : ret
0x00000000001a7e44 : ret
0x00000000001a7e43 : ret
0x00000000001a7e5d : ret
0x00000000001a7e8f : ret
0x00000000001a7e8e : ret
0x00000000001a7eb9 : ret
0x00000000001a7eb8 : ret
0x00000000001a7ed5 : ret
0x00000000001a80ec : ret
0x00000000001a82c0 : ret
0x00000000001a82bf : ret
0x00000000001a832c : ret
0x00000000001a832b : ret
0x00000000001a8346 : ret
0x00000000001a8345 : ret
0x00000000001a835e : ret
0x00000000001a8cdf : ret
0x00000000001a8da9 : ret
0x00000000001a8de4 : ret
0x00000000001a8de3 : ret
0x00000000001a8e24 : ret
0x00000000001a8e23 : ret
0x00000000001a8e63 : ret
0x00000000001a92fb : ret
0x00000000001a92fa : ret
0x00000000001a9309 : ret
0x00000000001a9308 : ret
0x00000000001a9315 : ret
0x00000000001a9802 : ret
0x00000000001a9801 : ret
0x00000000001a981e : ret
0x00000000001a981d : ret
0x00000000001a9837 : ret
0x00000000001a9904 : ret
0x00000000001a9bb8 : ret
0x00000000001a9bb7 : ret
0x00000000001a9e0d : ret
0x00000000001a9e0c : ret
0x00000000001a9e1a : ret
0x00000000001a9e19 : ret
0x00000000001a9e55 : ret
0x00000000001a9e54 : ret
0x00000000001a9e62 : ret
0x00000000001a9e61 : ret
0x00000000001a9ec8 : ret
0x00000000001a9ece : ret
0x00000000001a9ec8 : ret
0x00000000001aa19e : ret
0x00000000001aa19d : ret
0x00000000001aa1bd : ret
0x00000000001aa1bc : ret
0x00000000001aa849 : ret
0x00000000001aa857 : ret
0x00000000001aa87f : ret
0x00000000001aac27 : ret
0x00000000001aac26 : ret
0x00000000001aac59 : ret
0x00000000001aac58 : ret
0x00000000001aacc6 : ret
0x00000000001aacc5 : ret
0x00000000001aae01 : ret
0x00000000001aae00 : ret
0x00000000001aaf57 : ret
0x00000000001aaf56 : ret
0x00000000001ab8b1 : ret
0x00000000001ab9ea : ret
0x00000000001ab9f7 : ret
0x00000000001ab9f6 : ret
0x00000000001abb11 : ret
0x00000000001abbc9 : ret
0x00000000001abbc8 : ret
0x00000000001abbe5 : ret
0x00000000001abc01 : ret
0x00000000001abc1c : ret
0x00000000001abc37 : ret
0x00000000001abc51 : ret
0x00000000001abd2e : ret
0x00000000001abd49 : ret
0x00000000001abd48 : ret
0x00000000001ac0fa : ret
0x00000000001ac10a : ret
0x00000000001ac303 : ret
0x00000000001ac874 : ret
0x00000000001aca03 : ret
0x00000000001aca11 : ret
0x00000000001aca10 : ret
0x00000000001aca28 : ret
0x00000000001aca85 : ret
0x00000000001aca84 : ret
0x00000000001acc31 : ret
0x00000000001ad102 : ret
0x00000000001ad101 : ret
0x00000000001ad52b : ret
0x00000000001ad52a : ret
0x00000000001ae381 : ret
0x00000000001ae397 : ret
0x00000000001ae4a1 : ret
0x00000000001ae5ae : ret
0x00000000001ae5ad : ret
0x00000000001ae5c4 : ret
0x00000000001ae5c3 : ret
0x00000000001ae5da : ret
0x00000000001ae5d9 : ret
0x00000000001ae790 : ret
0x00000000001ae7de : ret
0x00000000001ae7dd : ret
0x00000000001ae977 : ret
0x00000000001ae976 : ret
0x00000000001aec76 : ret
0x00000000001aec75 : ret
0x00000000001aecb6 : ret
0x00000000001aecb5 : ret
0x00000000001afab8 : ret
0x00000000001afab7 : ret
0x00000000001afad7 : ret
0x00000000001afad6 : ret
0x00000000001afaf5 : ret
0x00000000001afd07 : ret
0x00000000001afea2 : ret
0x00000000001afeb0 : ret
0x00000000001afeaf : ret
0x00000000001aff98 : ret
0x00000000001aff97 : ret
0x00000000001b0037 : ret
0x00000000001b0036 : ret
0x00000000001b0054 : ret
0x00000000001b0053 : ret
0x00000000001b0097 : ret
0x00000000001b06d2 : ret
0x00000000001b06d1 : ret
0x00000000001b0898 : ret
0x00000000001b0897 : ret
0x00000000001b0e43 : ret
0x00000000001b0e42 : ret
0x00000000001b0ebb : ret
0x00000000001b0eba : ret
0x00000000001b1025 : ret
0x00000000001b1024 : ret
0x00000000001b106b : ret
0x00000000001b106a : ret
0x00000000001b10ae : ret
0x00000000001b10ad : ret
0x00000000001b2264 : ret
0x00000000001b2263 : ret
0x00000000001b2271 : ret
0x00000000001b2270 : ret
0x00000000001b2662 : ret
0x00000000001b2692 : ret
0x00000000001b2858 : ret
0x00000000001b2dde : ret
0x00000000001b2eb3 : ret
0x00000000001b2eb2 : ret
0x00000000001b2f67 : ret
0x00000000001b2f66 : ret
0x00000000001b30a9 : ret
0x00000000001b30a8 : ret
0x00000000001b360d : ret
0x00000000001b360c : ret
0x00000000001b3621 : ret
0x00000000001b3b7d : ret
0x00000000001b3b7c : ret
0x00000000001b3b91 : ret
0x00000000001b55dc : ret
0x00000000001b55db : ret
0x00000000001b5691 : ret
0x00000000001b56d1 : ret
0x00000000001b56f9 : ret
0x00000000001b595e : ret
0x00000000001b595d : ret
0x00000000001b5973 : ret
0x00000000001b5bb2 : ret
0x00000000001b5bb1 : ret
0x00000000001b5bf0 : ret
0x00000000001b60dd : ret
0x00000000001b60dc : ret
0x00000000001b6278 : ret
0x00000000001b6277 : ret
0x00000000001b632a : ret
0x00000000001b6329 : ret
0x00000000001b69c8 : ret
0x00000000001b69ce : ret
0x00000000001b69cd : ret
0x00000000001b69c8 : ret
0x00000000001b6a05 : ret
0x00000000001b6a04 : ret
0x00000000001b782b : ret
0x00000000001b782a : ret
0x00000000001b7838 : ret
0x00000000001b7837 : ret
0x00000000001b7ac3 : ret
0x00000000001b7e55 : ret
0x00000000001b7ebd : ret
0x00000000001b7ef5 : ret
0x00000000001b87ec : ret
0x00000000001b87eb : ret
0x00000000001b8bb3 : ret
0x00000000001b8bb2 : ret
0x00000000001b8dbf : ret
0x00000000001b8dbe : ret
0x00000000001b9079 : ret
0x00000000001b90c9 : ret
0x00000000001b90f2 : ret
0x00000000001b90f1 : ret
0x00000000001b9c67 : ret
0x00000000001b9c66 : ret
0x00000000001ba33f : ret
0x00000000001ba33e : ret
0x00000000001ba35c : ret
0x00000000001ba35b : ret
0x00000000001ba6ec : ret
0x00000000001ba702 : ret
0x00000000001ba701 : ret
0x00000000001ba715 : ret
0x00000000001ba714 : ret
0x00000000001ba723 : ret
0x00000000001ba722 : ret
0x00000000001ba731 : ret
0x00000000001ba730 : ret
0x00000000001babb2 : ret
0x00000000001babb1 : ret
0x00000000001babe2 : ret
0x00000000001babe1 : ret
0x00000000001bad2f : ret
0x00000000001bad59 : ret
0x00000000001bad58 : ret
0x00000000001bad94 : ret
0x00000000001bafef : ret
0x00000000001bafee : ret
0x00000000001bb26b : ret
0x00000000001bb26a : ret
0x00000000001bb278 : ret
0x00000000001bb5ef : ret
0x00000000001bb5ee : ret
0x00000000001bb60b : ret
0x00000000001bb623 : ret
0x00000000001bb6b9 : ret
0x00000000001bb6b8 : ret
0x00000000001bb6d5 : ret
0x00000000001bb869 : ret
0x00000000001bb87c : ret
0x00000000001bb890 : ret
0x00000000001bbe04 : ret
0x00000000001bbe03 : ret
0x00000000001bbe12 : ret
0x00000000001bbe11 : ret
0x00000000001bbf16 : ret
0x00000000001bbf15 : ret
0x00000000001bc489 : ret
0x00000000001bc4b9 : ret
0x00000000001bc583 : ret
0x00000000001bc5eb : ret
0x00000000001bcd70 : ret
0x00000000001bcf54 : ret
0x00000000001bd0a0 : ret
0x00000000001bd484 : ret
0x00000000001bd938 : ret
0x00000000001bde70 : ret
0x00000000001bebd0 : ret
0x00000000001beeb8 : ret
0x00000000001bf96c : ret
0x000000000003b58a : ret
0x000000000003ba5a : ret
0x00000000000867f2 : ret
0x000000000009727e : ret
0x00000000000b94e9 : ret
0x00000000000e5ea3 : ret
0x00000000000f5aae : ret
0x0000000000189099 : ret
0x0000000000197845 : ret 0
0x00000000000202fc : ret 0
0x0000000000020400 : ret 0
0x0000000000021871 : ret 0
0x000000000002195a : ret 0
0x0000000000021979 : ret 0
0x00000000000240ca : ret 0
0x00000000000269b6 : ret 0
0x0000000000026a21 : ret 0
0x0000000000026d61 : ret 0
0x000000000002812a : ret 0
0x0000000000033f52 : ret 0
0x000000000003c0fa : ret 0
0x000000000003d416 : ret 0
0x000000000004070e : ret 0
0x0000000000041ce5 : ret 0
0x00000000000435e5 : ret 0
0x000000000005a395 : ret 0
0x000000000005cd85 : ret 0
0x0000000000065d61 : ret 0
0x000000000006c08a : ret 0
0x0000000000073e9a : ret 0
0x000000000007abaa : ret 0
0x00000000000898df : ret 0
0x00000000000997d3 : ret 0
0x0000000000099dfb : ret 0
0x000000000009bdf8 : ret 0
0x000000000009d4f3 : ret 0
0x000000000009d4ff : ret 0
0x000000000009d9d4 : ret 0
0x000000000009d9e0 : ret 0
0x000000000009e40e : ret 0
0x000000000009e41a : ret 0
0x00000000000b30f3 : ret 0
0x00000000000b37ba : ret 0
0x00000000000cdf92 : ret 0
0x00000000000d57cf : ret 0
0x00000000000d624c : ret 0
0x00000000000d7bea : ret 0
0x00000000000da935 : ret 0
0x00000000000e0755 : ret 0
0x00000000000e45e6 : ret 0
0x00000000000e4cc8 : ret 0
0x00000000000e5ea6 : ret 0
0x00000000000f92e4 : ret 0
0x00000000000f9447 : ret 0
0x0000000000101b42 : ret 0
0x0000000000102cad : ret 0
0x00000000001060d1 : ret 0
0x0000000000110ffb : ret 0
0x000000000011d05a : ret 0
0x000000000012bf3e : ret 0
0x000000000012bfb3 : ret 0
0x000000000013cfd6 : ret 0
0x0000000000170792 : ret 0
0x000000000017298a : ret 0
0x00000000001765e8 : ret 0
0x00000000001769e8 : ret 0
0x0000000000176be8 : ret 0
0x0000000000176fe8 : ret 0
0x000000000017c3b4 : ret 0
0x0000000000180404 : ret 0
0x0000000000181b84 : ret 0
0x0000000000197825 : ret 0
0x000000000019782d : ret 0
0x0000000000197825 : ret 0
0x0000000000197835 : ret 0
0x000000000019783d : ret 0
0x0000000000197835 : ret 0
0x0000000000197845 : ret 0
0x00000000001a7d3d : ret 0
0x00000000001a7d55 : ret 0
0x00000000001a7d6d : ret 0
0x00000000001a7d85 : ret 0
0x00000000001a7d84 : ret 0
0x00000000001a7d9d : ret 0
0x00000000001a7d9c : ret 0
0x00000000001a7db5 : ret 0
0x00000000001a7dcd : ret 0
0x00000000001a7de5 : ret 0
0x00000000001ab4a4 : ret 0
0x00000000001bcbb0 : ret 0
0x00000000001a7d6d : ret 0
0x000000000000a641 : ret 0x10
0x0000000000081a25 : ret 0x10
0x0000000000081ac5 : ret 0x10
0x0000000000081ac4 : ret 0x10
0x00000000000a76ca : ret 0x10
0x00000000000a93de : ret 0x10
0x00000000000bc58d : ret 0x10
0x000000000017d560 : ret 0x10
0x00000000000007bf : ret 0x102
0x000000000006cddf : ret 0x107
0x00000000000842b2 : ret 0x10d6
0x000000000000bac9 : ret 0x11
0x00000000000a603d : ret 0x11
0x00000000000821a2 : ret 0x110
0x00000000000e6f77 : ret 0x110f
0x000000000004840c : ret 0x114d
0x0000000000049fec : ret 0x114d
0x00000000000e0dfc : ret 0x1175
0x00000000000d8fe6 : ret 0x1176
0x00000000000d9056 : ret 0x1176
0x00000000000242a8 : ret 0x1189
0x0000000000024c56 : ret 0x1189
0x0000000000025668 : ret 0x1189
0x0000000000027b78 : ret 0x1189
0x000000000002844b : ret 0x1189
0x0000000000028a38 : ret 0x1189
0x0000000000029343 : ret 0x1189
0x000000000006c932 : ret 0x11ad
0x0000000000107a19 : ret 0x11e8
0x0000000000107d19 : ret 0x11e8
0x0000000000108519 : ret 0x11e8
0x00000000000b3cb4 : ret 0x11eb
0x0000000000006639 : ret 0x12
0x00000000000ff9cc : ret 0x1274
0x00000000000331b3 : ret 0x1274
0x00000000000ff9cc : ret 0x1274
0x000000000005c412 : ret 0x12a6
0x00000000000091b9 : ret 0x13
0x0000000000050b4f : ret 0x13
0x00000000000a160a : ret 0x13
0x00000000000991ca : ret 0x1374
0x00000000001178ca : ret 0x1376
0x000000000004a6ba : ret 0x13b7
0x0000000000051f17 : ret 0x13e8
0x000000000005a6dc : ret 0x144
0x00000000000c5603 : ret 0x144
0x00000000000c5602 : ret 0x144
0x00000000000c5bca : ret 0x144
0x00000000000c5bc9 : ret 0x144
0x0000000000115692 : ret 0x144
0x00000000001234c9 : ret 0x1472
0x000000000009f169 : ret 0x147c
0x00000000000493f2 : ret 0x148
0x000000000006349b : ret 0x148
0x00000000000898f9 : ret 0x148
0x0000000000089913 : ret 0x148
0x000000000008992d : ret 0x148
0x0000000000089947 : ret 0x148
0x00000000000d53a8 : ret 0x148
0x00000000000d7b31 : ret 0x148
0x00000000000d9747 : ret 0x148
0x00000000000e3a35 : ret 0x148
0x000000000012330f : ret 0x148
0x0000000000123f5e : ret 0x148
0x000000000013f2e8 : ret 0x148
0x000000000014dc20 : ret 0x148
0x000000000014e101 : ret 0x148
0x000000000014e4a1 : ret 0x148
0x0000000000171d98 : ret 0x148
0x00000000001727e8 : ret 0x148
0x0000000000044be7 : ret 0x1480
0x00000000000d6f5b : ret 0x148b
0x000000000007bfe2 : ret 0x149
0x00000000000a349d : ret 0x149
0x00000000000a361d : ret 0x149
0x00000000000a379d : ret 0x149
0x00000000000a391d : ret 0x149
0x00000000000a3a9d : ret 0x149
0x00000000000a3c1d : ret 0x149
0x00000000000a3d9d : ret 0x149
0x00000000000a3f1d : ret 0x149
0x00000000000a409d : ret 0x149
0x00000000000a421d : ret 0x149
0x00000000000a439d : ret 0x149
0x00000000000a451d : ret 0x149
0x00000000000a469d : ret 0x149
0x00000000000a481d : ret 0x149
0x00000000000a499d : ret 0x149
0x000000000016726d : ret 0x149
0x00000000001673ed : ret 0x149
0x000000000016756d : ret 0x149
0x00000000001676ed : ret 0x149
0x000000000016786d : ret 0x149
0x00000000001679ed : ret 0x149
0x0000000000167b6d : ret 0x149
0x0000000000167ced : ret 0x149
0x0000000000167e6d : ret 0x149
0x0000000000167fed : ret 0x149
0x000000000016816d : ret 0x149
0x00000000001682ed : ret 0x149
0x000000000016846d : ret 0x149
0x00000000001685ed : ret 0x149
0x000000000016876d : ret 0x149
0x000000000016b5fd : ret 0x149
0x000000000016b77d : ret 0x149
0x000000000016b8fd : ret 0x149
0x000000000016ba7d : ret 0x149
0x000000000016bbfd : ret 0x149
0x000000000016bd7d : ret 0x149
0x000000000016befd : ret 0x149
0x000000000016c07d : ret 0x149
0x000000000016c1fd : ret 0x149
0x000000000016c37d : ret 0x149
0x000000000016c4fd : ret 0x149
0x000000000016c67d : ret 0x149
0x000000000016c7fd : ret 0x149
0x000000000016c97d : ret 0x149
0x000000000016cafd : ret 0x149
0x000000000002b502 : ret 0x14a2
0x000000000003763d : ret 0x14c
0x0000000000037bc7 : ret 0x14c
0x000000000003820f : ret 0x14c
0x0000000000038bbe : ret 0x14c
0x00000000000800e2 : ret 0x14c
0x00000000000b862f : ret 0x14c
0x00000000000a00dc : ret 0x14d
0x00000000000a082f : ret 0x14d
0x00000000000a0f7c : ret 0x14d
0x00000000000d311c : ret 0x14eb
0x0000000000031bdf : ret 0x15
0x0000000000040e3a : ret 0x1538
0x0000000000034c00 : ret 0x1575
0x00000000000ed5a1 : ret 0x1589
0x000000000000e460 : ret 0x16
0x0000000000108687 : ret 0x1674
0x0000000000117717 : ret 0x1676
0x00000000000244d2 : ret 0x1683
0x0000000000018809 : ret 0x17
0x000000000008bbca : ret 0x17
0x0000000000021aba : ret 0x171a
0x00000000000fcd26 : ret 0x1777
0x00000000000cc313 : ret 0x17e8
0x00000000000f7913 : ret 0x17e8
0x00000000000a0019 : ret 0x180f
0x00000000000a076c : ret 0x180f
0x00000000000a0eb9 : ret 0x180f
0x0000000000136085 : ret 0x1872
0x000000000002c4a6 : ret 0x1874
0x000000000008eb85 : ret 0x1876
0x000000000001c060 : ret 0x18c7
0x000000000001e670 : ret 0x18c7
0x000000000001a080 : ret 0x18d0
0x000000000007d9c5 : ret 0x18eb
0x00000000001a3631 : ret 0x18f
0x000000000001b3b8 : ret 0x18f8
0x00000000000bd314 : ret 0x190
0x00000000000bd5cc : ret 0x190
0x00000000000bd927 : ret 0x190
0x00000000000587ca : ret 0x197
0x000000000008e825 : ret 0x1974
0x000000000005ec5e : ret 0x1a
0x000000000009edca : ret 0x1a74
0x000000000003bf12 : ret 0x1a75
0x000000000003f1d2 : ret 0x1a75
0x0000000000042122 : ret 0x1a75
0x00000000000ae4f2 : ret 0x1a75
0x00000000000b0e52 : ret 0x1a75
0x00000000000b35e2 : ret 0x1a75
0x000000000018563a : ret 0x1ad4
0x00000000000d519a : ret 0x1aeb
0x0000000000183dcd : ret 0x1b49
0x0000000000183dcc : ret 0x1b49
0x0000000000108aa2 : ret 0x1b72
0x000000000009512a : ret 0x1b8
0x00000000000d1649 : ret 0x1b8
0x00000000000df744 : ret 0x1b8
0x0000000000001bf5 : ret 0x1bb7
0x00000000000be4db : ret 0x1be
0x0000000000128052 : ret 0x1be
0x0000000000128077 : ret 0x1be
0x000000000013f9a7 : ret 0x1be
0x000000000014003d : ret 0x1be
0x000000000014062d : ret 0x1be
0x000000000008408f : ret 0x1bf
0x000000000000349f : ret 0x1bf9
0x000000000000349e : ret 0x1bf9
0x00000000000fce21 : ret 0x1c77
0x000000000017f230 : ret 0x1d4
0x000000000017f9c8 : ret 0x1d5
0x000000000008e726 : ret 0x1d74
0x00000000000021d9 : ret 0x1dd4
0x00000000000021d8 : ret 0x1dd4
0x00000000000c0604 : ret 0x1e74
0x00000000000c0746 : ret 0x1e74
0x0000000000024c2b : ret 0x1e76
0x00000000000268e2 : ret 0x1f0f
0x000000000004707b : ret 0x1f0f
0x0000000000057154 : ret 0x1f0f
0x000000000008885b : ret 0x1f0f
0x0000000000096af3 : ret 0x1f0f
0x00000000000bf1ec : ret 0x1f0f
0x00000000000c79b4 : ret 0x1f0f
0x00000000000d2da8 : ret 0x1f0f
0x00000000000d6f30 : ret 0x1f0f
0x00000000000dbbd8 : ret 0x1f0f
0x00000000001121bc : ret 0x1f0f
0x000000000011221c : ret 0x1f0f
0x00000000001186a2 : ret 0x1f0f
0x00000000000ac773 : ret 0x1f74
0x0000000000084d2e : ret 0x1f76
0x00000000000c23b4 : ret 0x1fbd
0x000000000002d952 : ret 0x200
0x00000000000b16b5 : ret 0x2041
0x00000000000b1e75 : ret 0x2041
0x00000000000899ad : ret 0x2074
0x00000000000d5d89 : ret 0x20be
0x000000000005cb3b : ret 0x21
0x0000000000034778 : ret 0x2148
0x00000000000347ae : ret 0x2148
0x000000000008993b : ret 0x2275
0x00000000000aa847 : ret 0x2276
0x0000000000089a68 : ret 0x2288
0x000000000008b268 : ret 0x2288
0x000000000008f958 : ret 0x2288
0x0000000000003ff0 : ret 0x23
0x000000000003fbac : ret 0x23
0x000000000016f9f2 : ret 0x2373
0x0000000000170832 : ret 0x2373
0x00000000000368a2 : ret 0x237f
0x00000000000025e7 : ret 0x23cb
0x000000000017e238 : ret 0x24
0x00000000000027d8 : ret 0x244f
0x00000000000cfc9c : ret 0x2476
0x000000000007aa6e : ret 0x2501
0x000000000007ad53 : ret 0x2501
0x000000000007bcfc : ret 0x2501
0x000000000009ec48 : ret 0x2574
0x000000000008425d : ret 0x2575
0x000000000008596d : ret 0x2575
0x00000000000e2444 : ret 0x2575
0x0000000000023dc8 : ret 0x2576
0x00000000000b9b92 : ret 0x2576
0x0000000000005ec8 : ret 0x26
0x000000000015a912 : ret 0x2698
0x000000000008ba06 : ret 0x2774
0x000000000009eb08 : ret 0x2774
0x00000000000fd003 : ret 0x27e8
0x000000000000054f : ret 0x2800
0x00000000000a17a5 : ret 0x280f
0x00000000000a18e5 : ret 0x280f
0x00000000000a1a25 : ret 0x280f
0x00000000000a1b65 : ret 0x280f
0x00000000000a1ca5 : ret 0x280f
0x00000000000a1de5 : ret 0x280f
0x00000000000a1f35 : ret 0x280f
0x00000000000a2085 : ret 0x280f
0x00000000000a21c5 : ret 0x280f
0x00000000000a2305 : ret 0x280f
0x00000000000a2445 : ret 0x280f
0x00000000000a2585 : ret 0x280f
0x00000000000a26c5 : ret 0x280f
0x00000000000a2805 : ret 0x280f
0x00000000000a2945 : ret 0x280f
0x00000000001526c6 : ret 0x280f
0x00000000001526c5 : ret 0x280f
0x0000000000155096 : ret 0x280f
0x0000000000155095 : ret 0x280f
0x0000000000157a66 : ret 0x280f
0x0000000000157a65 : ret 0x280f
0x00000000001659d5 : ret 0x280f
0x0000000000165b15 : ret 0x280f
0x0000000000165c55 : ret 0x280f
0x0000000000165d95 : ret 0x280f
0x0000000000165ed5 : ret 0x280f
0x0000000000166015 : ret 0x280f
0x0000000000166165 : ret 0x280f
0x00000000001662b5 : ret 0x280f
0x00000000001663f5 : ret 0x280f
0x0000000000166535 : ret 0x280f
0x0000000000166675 : ret 0x280f
0x00000000001667b5 : ret 0x280f
0x00000000001668f5 : ret 0x280f
0x0000000000166a35 : ret 0x280f
0x0000000000166b75 : ret 0x280f
0x0000000000169d05 : ret 0x280f
0x0000000000169e45 : ret 0x280f
0x0000000000169f85 : ret 0x280f
0x000000000016a0c5 : ret 0x280f
0x000000000016a205 : ret 0x280f
0x000000000016a345 : ret 0x280f
0x000000000016a495 : ret 0x280f
0x000000000016a5e5 : ret 0x280f
0x000000000016a725 : ret 0x280f
0x000000000016a865 : ret 0x280f
0x000000000016a9a5 : ret 0x280f
0x000000000016aae5 : ret 0x280f
0x000000000016ac25 : ret 0x280f
0x000000000016ad65 : ret 0x280f
0x000000000016aea5 : ret 0x280f
0x000000000016e095 : ret 0x280f
0x000000000016e1d5 : ret 0x280f
0x000000000016e315 : ret 0x280f
0x000000000014254a : ret 0x281d
0x0000000000127850 : ret 0x2875
0x0000000000024273 : ret 0x2876
0x000000000008eb75 : ret 0x2876
0x00000000000c020a : ret 0x28f5
0x00000000000c0248 : ret 0x28f5
0x00000000000c2b6e : ret 0x28f5
0x0000000000109365 : ret 0x28f5
0x0000000000127bc4 : ret 0x29
0x00000000000b2fb1 : ret 0x2941
0x00000000000c2873 : ret 0x2941
0x00000000000c28ac : ret 0x2941
0x00000000000556a3 : ret 0x2944
0x00000000000afc5b : ret 0x2944
0x00000000000b2415 : ret 0x2944
0x00000000000b4d8f : ret 0x2944
0x0000000000047468 : ret 0x2948
0x000000000007407d : ret 0x2948
0x00000000000beecb : ret 0x2948
0x00000000000c1507 : ret 0x2948
0x00000000000d8f9d : ret 0x2948
0x000000000010e5d3 : ret 0x2948
0x000000000010e6b7 : ret 0x2948
0x000000000012efca : ret 0x2948
0x00000000000b07ba : ret 0x2949
0x00000000000b5c7e : ret 0x2949
0x000000000009b2cf : ret 0x294c
0x00000000000b05c6 : ret 0x294c
0x00000000000b2d8e : ret 0x294c
0x00000000000b5a6e : ret 0x294c
0x00000000000eacba : ret 0x294c
0x000000000010e91a : ret 0x294c
0x000000000014dcc1 : ret 0x294c
0x000000000014e1a1 : ret 0x294c
0x000000000014e541 : ret 0x294c
0x0000000000078cdf : ret 0x294d
0x0000000000078cde : ret 0x294d
0x000000000009a939 : ret 0x294d
0x0000000000048b64 : ret 0x2973
0x00000000000b795a : ret 0x2973
0x00000000000aaf44 : ret 0x2975
0x00000000000779aa : ret 0x2976
0x00000000000ea964 : ret 0x2977
0x0000000000060591 : ret 0x29e9
0x000000000011c172 : ret 0x2a
0x000000000011c171 : ret 0x2a
0x000000000011c18b : ret 0x2a
0x000000000011c191 : ret 0x2a
0x000000000011c18b : ret 0x2a
0x000000000011c227 : ret 0x2a
0x000000000011c232 : ret 0x2a
0x000000000011c23b : ret 0x2a
0x000000000011c25c : ret 0x2a
0x000000000011c25b : ret 0x2a
0x00000000001288fa : ret 0x2a03
0x0000000000001b19 : ret 0x2a63
0x0000000000084c3b : ret 0x2a75
0x0000000000085fdb : ret 0x2a75
0x00000000000867cb : ret 0x2a75
0x0000000000086abb : ret 0x2a75
0x000000000011f6a2 : ret 0x2a8f
0x000000000011a172 : ret 0x2ae0
0x0000000000107ba7 : ret 0x2b
0x0000000000107bd7 : ret 0x2b
0x0000000000107c04 : ret 0x2b
0x0000000000107c34 : ret 0x2b
0x0000000000107c33 : ret 0x2b
0x0000000000107c67 : ret 0x2b
0x000000000010d4f1 : ret 0x2b
0x000000000010d4f0 : ret 0x2b
0x0000000000046198 : ret 0x2b48
0x0000000000073d1f : ret 0x2b48
0x00000000000ba58e : ret 0x2b48
0x000000000002322e : ret 0x2b49
0x000000000010f6b3 : ret 0x2b49
0x0000000000112442 : ret 0x2b49
0x00000000001124f9 : ret 0x2b49
0x0000000000121302 : ret 0x2b74
0x0000000000134cf2 : ret 0x2b74
0x000000000006ad97 : ret 0x2b76
0x00000000000aaba2 : ret 0x2b77
0x000000000012f88b : ret 0x2b8
0x000000000010cfa6 : ret 0x2ba6
0x000000000010a13a : ret 0x2bd2
0x000000000010a002 : ret 0x2bd3
0x00000000000f7b9a : ret 0x2c
0x0000000000127849 : ret 0x2c3c
0x0000000000127a2d : ret 0x2c3c
0x0000000000127a4f : ret 0x2c3c
0x0000000000101179 : ret 0x2c85
0x00000000000f5ab2 : ret 0x2ce3
0x0000000000034df9 : ret 0x2e0f
0x000000000012f9c5 : ret 0x2e66
0x00000000000caaa9 : ret 0x2f
0x00000000000caab4 : ret 0x2f
0x00000000000caabd : ret 0x2f
0x00000000000ff96c : ret 0x2f3c
0x00000000000886de : ret 0x2f74
0x00000000000cb781 : ret 0x2fb6
0x00000000000cb352 : ret 0x2fba
0x00000000000e2dca : ret 0x2fe9
0x0000000000010e90 : ret 0x30
0x00000000000bd1e6 : ret 0x30
0x000000000003aca8 : ret 0x3039
0x000000000003af77 : ret 0x3039
0x000000000003af88 : ret 0x3039
0x000000000003afa2 : ret 0x3039
0x0000000000001b88 : ret 0x306a
0x00000000000ba33a : ret 0x307e
0x00000000000bde9a : ret 0x308b
0x00000000000e200b : ret 0x30f
0x000000000000d7b8 : ret 0x31
0x00000000000600be : ret 0x31
0x000000000002310d : ret 0x3101
0x00000000000d0265 : ret 0x3101
0x00000000000f1ded : ret 0x3101
0x0000000000126bd2 : ret 0x3108
0x0000000000047fd9 : ret 0x3145
0x0000000000047fd8 : ret 0x3145
0x00000000000d46e3 : ret 0x3145
0x00000000000ecfac : ret 0x3145
0x00000000000f3526 : ret 0x3145
0x000000000013d450 : ret 0x3145
0x000000000013d44f : ret 0x3145
0x000000000013e254 : ret 0x3145
0x000000000012f958 : ret 0x314c
0x00000000000f5af9 : ret 0x31e8
0x000000000017e728 : ret 0x33
0x00000000000f6d32 : ret 0x3375
0x00000000000f003d : ret 0x33eb
0x0000000000080412 : ret 0x3463
0x000000000009f149 : ret 0x347c
0x00000000000310a5 : ret 0x348
0x0000000000045f0d : ret 0x348
0x000000000005b843 : ret 0x348
0x000000000005ebee : ret 0x348
0x000000000005f94d : ret 0x348
0x000000000005f9dd : ret 0x348
0x00000000000607ed : ret 0x348
0x0000000000060901 : ret 0x348
0x00000000000609c6 : ret 0x348
0x0000000000060bad : ret 0x348
0x0000000000060c9a : ret 0x348
0x0000000000060d71 : ret 0x348
0x000000000006138f : ret 0x348
0x0000000000061656 : ret 0x348
0x000000000006182e : ret 0x348
0x0000000000061942 : ret 0x348
0x0000000000062228 : ret 0x348
0x00000000000624ef : ret 0x348
0x0000000000062915 : ret 0x348
0x0000000000062a21 : ret 0x348
0x0000000000062b55 : ret 0x348
0x0000000000062c5d : ret 0x348
0x00000000000662e8 : ret 0x348
0x0000000000066303 : ret 0x348
0x000000000006766a : ret 0x348
0x00000000000677d7 : ret 0x348
0x000000000006789d : ret 0x348
0x000000000006792e : ret 0x348
0x00000000000679e9 : ret 0x348
0x00000000000680ae : ret 0x348
0x00000000000681ab : ret 0x348
0x00000000000690df : ret 0x348
0x00000000000691bb : ret 0x348
0x00000000000692f8 : ret 0x348
0x0000000000069528 : ret 0x348
0x00000000000697b7 : ret 0x348
0x000000000006984e : ret 0x348
0x0000000000069c7a : ret 0x348
0x0000000000069d7a : ret 0x348
0x000000000006a281 : ret 0x348
0x0000000000077633 : ret 0x348
0x000000000007cd80 : ret 0x348
0x00000000000891d9 : ret 0x348
0x000000000008928e : ret 0x348
0x00000000000db50d : ret 0x348
0x00000000001434dc : ret 0x348
0x000000000002944d : ret 0x349
0x00000000000dc002 : ret 0x349
0x00000000000f0d4f : ret 0x349
0x00000000000662ba : ret 0x34c
0x000000000006655d : ret 0x34c
0x000000000006d48b : ret 0x35
0x000000000006d71a : ret 0x3559
0x00000000000886e8 : ret 0x3574
0x00000000000f6cd0 : ret 0x3575
0x000000000003bf68 : ret 0x357e
0x000000000003f228 : ret 0x357e
0x0000000000068db2 : ret 0x35b0
0x00000000000d9885 : ret 0x35e8
0x0000000000057c07 : ret 0x36
0x00000000000e7e81 : ret 0x3673
0x0000000000047bc4 : ret 0x37
0x0000000000054e2a : ret 0x3718
0x0000000000039979 : ret 0x38
0x0000000000039984 : ret 0x38
0x000000000003998d : ret 0x38
0x0000000000039a0e : ret 0x38
0x0000000000184f1a : ret 0x3827
0x00000000000bbcfe : ret 0x3840
0x00000000000bc04d : ret 0x3840
0x000000000007371f : ret 0x3841
0x0000000000102eaf : ret 0x3845
0x000000000013f415 : ret 0x3875
0x000000000008eb65 : ret 0x3876
0x000000000003a73a : ret 0x387a
0x000000000007b52b : ret 0x389
0x000000000007b52a : ret 0x389
0x00000000001835a6 : ret 0x38ae
0x000000000006e516 : ret 0x38b
0x0000000000076f96 : ret 0x38b
0x00000000000e40f4 : ret 0x38b
0x000000000005ed1d : ret 0x38e9
0x00000000000663be : ret 0x3901
0x00000000000682ce : ret 0x3901
0x00000000000682e6 : ret 0x3901
0x00000000000686b6 : ret 0x3901
0x0000000000123ec4 : ret 0x3901
0x0000000000138412 : ret 0x3901
0x00000000000d9b98 : ret 0x3902
0x00000000000dff28 : ret 0x3902
0x000000000012264b : ret 0x3904
0x0000000000122e47 : ret 0x3904
0x000000000009eb66 : ret 0x3941
0x000000000009ec1f : ret 0x3941
0x00000000000e5e28 : ret 0x3941
0x00000000000e5e27 : ret 0x3941
0x00000000000e4787 : ret 0x3944
0x000000000010216a : ret 0x3944
0x00000000001026af : ret 0x3944
0x00000000001026ae : ret 0x3944
0x000000000012e9a9 : ret 0x3944
0x00000000000dddf7 : ret 0x3945
0x0000000000124d88 : ret 0x3945
0x0000000000037381 : ret 0x3948
0x0000000000037381 : ret 0x3948
0x00000000000378f0 : ret 0x3948
0x00000000000378f0 : ret 0x3948
0x000000000003cb7c : ret 0x3948
0x000000000003fe6c : ret 0x3948
0x0000000000042d59 : ret 0x3948
0x0000000000046995 : ret 0x3948
0x0000000000048d20 : ret 0x3948
0x0000000000048d20 : ret 0x3948
0x00000000000491a2 : ret 0x3948
0x00000000000491a2 : ret 0x3948
0x0000000000049538 : ret 0x3948
0x0000000000049538 : ret 0x3948
0x000000000004987a : ret 0x3948
0x000000000004987a : ret 0x3948
0x000000000006bd6d : ret 0x3948
0x000000000008e723 : ret 0x3948
0x000000000008e822 : ret 0x3948
0x000000000009941a : ret 0x3948
0x0000000000099bcb : ret 0x3948
0x0000000000099bcb : ret 0x3948
0x000000000010a22b : ret 0x3948
0x000000000010e5d6 : ret 0x3948
0x000000000010e94b : ret 0x3948
0x0000000000113d8b : ret 0x3948
0x000000000002772a : ret 0x3949
0x000000000002c868 : ret 0x3949
0x000000000002c867 : ret 0x3949
0x0000000000037ece : ret 0x3949
0x0000000000037ece : ret 0x3949
0x0000000000049bcc : ret 0x3949
0x0000000000049bcc : ret 0x3949
0x00000000000834ea : ret 0x3949
0x00000000000e7db2 : ret 0x3949
0x00000000000f6a0a : ret 0x3949
0x00000000000f6a09 : ret 0x3949
0x0000000000111917 : ret 0x3949
0x0000000000111966 : ret 0x3949
0x00000000001119b5 : ret 0x3949
0x0000000000111a04 : ret 0x3949
0x0000000000111a04 : ret 0x3949
0x0000000000117bf5 : ret 0x3949
0x0000000000127c99 : ret 0x3949
0x000000000002a296 : ret 0x394c
0x00000000000362cd : ret 0x394c
0x00000000000365bd : ret 0x394c
0x00000000000af003 : ret 0x394c
0x00000000000b1884 : ret 0x394c
0x00000000000b40f6 : ret 0x394c
0x000000000012200a : ret 0x394c
0x000000000003413d : ret 0x394d
0x00000000000341f1 : ret 0x394d
0x000000000003ca91 : ret 0x394d
0x000000000003fd81 : ret 0x394d
0x0000000000042c79 : ret 0x394d
0x00000000000300fa : ret 0x3995
0x00000000000537c2 : ret 0x39e9
0x00000000000537c1 : ret 0x39e9
0x000000000013483a : ret 0x3a
0x00000000000aa152 : ret 0x3a01
0x00000000000aa202 : ret 0x3a01
0x00000000000aa4c2 : ret 0x3a01
0x0000000000023016 : ret 0x3a28
0x000000000016f9db : ret 0x3a73
0x000000000017081b : ret 0x3a73
0x00000000000e3fc0 : ret 0x3ae9
0x00000000000d3211 : ret 0x3b01
0x000000000010ff2e : ret 0x3b01
0x0000000000115a33 : ret 0x3b01
0x00000000000dbd67 : ret 0x3b42
0x00000000000dbedf : ret 0x3b42
0x00000000000dbdb7 : ret 0x3b43
0x00000000000dbf2f : ret 0x3b43
0x000000000013d733 : ret 0x3b48
0x0000000000134d62 : ret 0x3b74
0x00000000000bf815 : ret 0x3b8
0x0000000000121df1 : ret 0x3b8
0x00000000000bc6aa : ret 0x3bba
0x00000000000bc6a9 : ret 0x3bba
0x0000000000110604 : ret 0x3bf
0x00000000000d028e : ret 0x3c01
0x00000000000fea52 : ret 0x3c01
0x00000000000feab2 : ret 0x3c01
0x00000000000feb12 : ret 0x3c01
0x00000000000feb72 : ret 0x3c01
0x0000000000089921 : ret 0x3c75
0x00000000000f149f : ret 0x3c76
0x000000000003953e : ret 0x3ce8
0x00000000000d8246 : ret 0x3d01
0x0000000000034840 : ret 0x3d75
0x0000000000042180 : ret 0x3d7e
0x000000000002293e : ret 0x3d83
0x000000000003a9c4 : ret 0x3d83
0x00000000000e85a8 : ret 0x3d83
0x000000000010cf86 : ret 0x3d83
0x0000000000120178 : ret 0x3d83
0x0000000000136d19 : ret 0x3d83
0x0000000000136e11 : ret 0x3d83
0x0000000000136f08 : ret 0x3d83
0x0000000000137008 : ret 0x3d83
0x0000000000137163 : ret 0x3d83
0x00000000001372a3 : ret 0x3d83
0x0000000000137449 : ret 0x3d83
0x000000000013753d : ret 0x3d83
0x0000000000140fca : ret 0x3d83
0x0000000000141065 : ret 0x3d83
0x000000000014127a : ret 0x3d83
0x000000000014133a : ret 0x3d83
0x0000000000046ef7 : ret 0x3dbe
0x00000000000bf2c2 : ret 0x3e9
0x0000000000070efb : ret 0x3f7
0x00000000000f5359 : ret 0x3f76
0x00000000000d927a : ret 0x4001
0x00000000000e3a9f : ret 0x4001
0x00000000000ec115 : ret 0x4002
0x000000000007f432 : ret 0x4007
0x0000000000083c80 : ret 0x4007
0x00000000000009f5 : ret 0x4021
0x00000000000009f4 : ret 0x4021
0x000000000005399b : ret 0x4050
0x00000000000acbb9 : ret 0x408d
0x0000000000022d30 : ret 0x4101
0x0000000000022d85 : ret 0x4101
0x000000000002b9ac : ret 0x4101
0x00000000000333d2 : ret 0x4101
0x00000000000463df : ret 0x4101
0x00000000000465ee : ret 0x4101
0x00000000000468ef : ret 0x4101
0x0000000000046aaf : ret 0x4101
0x0000000000046b0f : ret 0x4101
0x0000000000046d6e : ret 0x4101
0x000000000004945f : ret 0x4101
0x0000000000094fa4 : ret 0x4101
0x0000000000094fc5 : ret 0x4101
0x00000000000ae46d : ret 0x4101
0x00000000000b0dcd : ret 0x4101
0x00000000000b355d : ret 0x4101
0x00000000000b839a : ret 0x4101
0x00000000000d5dcd : ret 0x4101
0x00000000000dc350 : ret 0x4101
0x00000000000dd9d6 : ret 0x4101
0x00000000000e0cf9 : ret 0x4101
0x000000000012635c : ret 0x4101
0x00000000000b8595 : ret 0x4102
0x00000000000b90b0 : ret 0x4102
0x00000000000b94ec : ret 0x4102
0x0000000000123f02 : ret 0x4102
0x00000000000de332 : ret 0x4104
0x0000000000119608 : ret 0x4104
0x0000000000122535 : ret 0x4104
0x000000000004d6a9 : ret 0x4108
0x000000000004db69 : ret 0x4108
0x000000000004e649 : ret 0x4108
0x000000000004e699 : ret 0x4108
0x000000000004e7a4 : ret 0x4108
0x000000000004e820 : ret 0x4108
0x000000000004e8a7 : ret 0x4108
0x000000000004e902 : ret 0x4108
0x000000000004e976 : ret 0x4108
0x000000000004ea00 : ret 0x4108
0x000000000004f3d1 : ret 0x4108
0x000000000004f52a : ret 0x4108
0x000000000004f913 : ret 0x4108
0x000000000004fa4d : ret 0x4108
0x000000000004fd02 : ret 0x4108
0x000000000004fe0e : ret 0x4108
0x0000000000058ed1 : ret 0x4108
0x000000000005919c : ret 0x4108
0x0000000000059346 : ret 0x4108
0x000000000005a172 : ret 0x4108
0x000000000005a891 : ret 0x4108
0x000000000005ad7f : ret 0x4108
0x000000000005adf3 : ret 0x4108
0x000000000005ae7c : ret 0x4108
0x000000000005af6b : ret 0x4108
0x000000000005b015 : ret 0x4108
0x000000000005b096 : ret 0x4108
0x000000000005b0c5 : ret 0x4108
0x000000000005b1f2 : ret 0x4108
0x000000000005b277 : ret 0x4108
0x000000000005b322 : ret 0x4108
0x000000000005b4d5 : ret 0x4108
0x00000000000e97c5 : ret 0x4108
0x000000000004f20c : ret 0x4110
0x000000000004f236 : ret 0x4110
0x000000000005ad0e : ret 0x4110
0x000000000005ad38 : ret 0x4110
0x0000000000082bdc : ret 0x4117
0x00000000000ee1d8 : ret 0x4118
0x000000000009ee13 : ret 0x4153
0x000000000012c7b3 : ret 0x415f
0x0000000000023b8e : ret 0x41c3
0x0000000000023b8d : ret 0x41c3
0x000000000009b317 : ret 0x4201
0x00000000000b7f2b : ret 0x4201
0x00000000000e3cba : ret 0x4201
0x0000000000126737 : ret 0x4201
0x000000000012de95 : ret 0x4203
0x00000000000bc5f4 : ret 0x4240
0x00000000000bc646 : ret 0x4240
0x000000000009f75a : ret 0x4266
0x000000000009f769 : ret 0x4266
0x00000000000dab96 : ret 0x428b
0x00000000000bd41c : ret 0x428d
0x00000000000bd6d8 : ret 0x428d
0x00000000001144fb : ret 0x428d
0x00000000000d1faa : ret 0x42a
0x000000000009a97a : ret 0x4301
0x000000000002a853 : ret 0x4389
0x000000000002a852 : ret 0x4389
0x0000000000071cc3 : ret 0x4389
0x0000000000071cc2 : ret 0x4389
0x0000000000122157 : ret 0x4389
0x0000000000074d83 : ret 0x4401
0x000000000009a611 : ret 0x4401
0x00000000000b7794 : ret 0x4401
0x00000000000b7804 : ret 0x4401
0x00000000000bee22 : ret 0x4401
0x00000000000e5984 : ret 0x4401
0x0000000000126700 : ret 0x4401
0x00000000000e17f5 : ret 0x4404
0x00000000001226bd : ret 0x4404
0x000000000013e4f2 : ret 0x4404
0x00000000000c2854 : ret 0x4407
0x00000000000ccdf5 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x000000000004dc71 : ret 0x440f
0x000000000005a2c6 : ret 0x440f
0x0000000000072857 : ret 0x4410
0x0000000000000456 : ret 0x4412
0x00000000000d8dd4 : ret 0x4422
0x00000000000d8eb1 : ret 0x4422
0x000000000010f596 : ret 0x4428
0x00000000001133c8 : ret 0x4430
0x00000000000e1826 : ret 0x4489
0x00000000000e9025 : ret 0x4489
0x000000000013b882 : ret 0x4489
0x000000000013b942 : ret 0x4489
0x000000000013ba02 : ret 0x4489
0x000000000013bac2 : ret 0x4489
0x0000000000034ea0 : ret 0x448b
0x00000000000e0a81 : ret 0x448b
0x00000000000e3e70 : ret 0x448b
0x00000000000fc8e2 : ret 0x448b
0x000000000013996a : ret 0x448b
0x000000000003ce72 : ret 0x44c6
0x0000000000040169 : ret 0x44c6
0x0000000000043066 : ret 0x44c6
0x00000000000e5da2 : ret 0x44c7
0x00000000000fa409 : ret 0x44c7
0x000000000005d3da : ret 0x45
0x00000000000e3cdb : ret 0x4501
0x000000000006c712 : ret 0x4502
0x000000000006c89e : ret 0x4502
0x00000000000662db : ret 0x4504
0x000000000006657e : ret 0x4504
0x0000000000117b97 : ret 0x4510
0x00000000000b856e : ret 0x4574
0x0000000000036b2e : ret 0x4577
0x00000000000e032f : ret 0x45c6
0x000000000011fd1b : ret 0x45e9
0x000000000006e678 : ret 0x45f6
0x00000000000aaf27 : ret 0x4675
0x0000000000029d97 : ret 0x4676
0x0000000000113206 : ret 0x46e9
0x00000000000b8507 : ret 0x4703
0x000000000009ab5f : ret 0x470e
0x000000000009ebc4 : ret 0x474
0x00000000001840a4 : ret 0x474c
0x00000000001840a3 : ret 0x474c
0x00000000000f72e3 : ret 0x47e8
0x00000000000256f6 : ret 0x4801
0x0000000000096ea8 : ret 0x4801
0x0000000000096ed0 : ret 0x4801
0x0000000000021908 : ret 0x4801
0x0000000000023ff8 : ret 0x4801
0x00000000000256f6 : ret 0x4801
0x0000000000025c47 : ret 0x4801
0x0000000000025c5e : ret 0x4801
0x0000000000027b67 : ret 0x4801
0x00000000000283ac : ret 0x4801
0x0000000000028a27 : ret 0x4801
0x0000000000029299 : ret 0x4801
0x00000000000292ad : ret 0x4801
0x000000000002b155 : ret 0x4801
0x000000000002c5cf : ret 0x4801
0x0000000000037e4c : ret 0x4801
0x0000000000038dc1 : ret 0x4801
0x0000000000038df0 : ret 0x4801
0x0000000000038e64 : ret 0x4801
0x000000000003902a : ret 0x4801
0x00000000000394ea : ret 0x4801
0x000000000003a17b : ret 0x4801
0x000000000003b502 : ret 0x4801
0x000000000003b776 : ret 0x4801
0x000000000003b9d2 : ret 0x4801
0x000000000003bc16 : ret 0x4801
0x000000000006c23a : ret 0x4801
0x000000000006d107 : ret 0x4801
0x0000000000074f19 : ret 0x4801
0x000000000007b767 : ret 0x4801
0x000000000007ee4a : ret 0x4801
0x0000000000087296 : ret 0x4801
0x000000000008dc6d : ret 0x4801
0x0000000000094a05 : ret 0x4801
0x0000000000094aa9 : ret 0x4801
0x0000000000094cbe : ret 0x4801
0x0000000000094d81 : ret 0x4801
0x00000000000950ad : ret 0x4801
0x0000000000095e35 : ret 0x4801
0x00000000000960b5 : ret 0x4801
0x000000000009649f : ret 0x4801
0x0000000000096ea8 : ret 0x4801
0x0000000000096ed0 : ret 0x4801
0x0000000000099109 : ret 0x4801
0x000000000009931e : ret 0x4801
0x0000000000099391 : ret 0x4801
0x00000000000993e2 : ret 0x4801
0x0000000000099a70 : ret 0x4801
0x000000000009a40e : ret 0x4801
0x000000000009a482 : ret 0x4801
0x000000000009a4cd : ret 0x4801
0x000000000009a56c : ret 0x4801
0x000000000009b6f7 : ret 0x4801
0x000000000009c265 : ret 0x4801
0x000000000009c76e : ret 0x4801
0x000000000009d07e : ret 0x4801
0x000000000009de76 : ret 0x4801
0x000000000009e77c : ret 0x4801
0x000000000009f7f6 : ret 0x4801
0x00000000000af3b1 : ret 0x4801
0x00000000000aff1d : ret 0x4801
0x00000000000b1ce1 : ret 0x4801
0x00000000000b285d : ret 0x4801
0x00000000000b44b7 : ret 0x4801
0x00000000000b684f : ret 0x4801
0x00000000000b69cf : ret 0x4801
0x00000000000b6add : ret 0x4801
0x00000000000b6b85 : ret 0x4801
0x00000000000b6c9c : ret 0x4801
0x00000000000b6ced : ret 0x4801
0x00000000000b6e1b : ret 0x4801
0x00000000000b6e6d : ret 0x4801
0x00000000000b7bbc : ret 0x4801
0x00000000000b7fb9 : ret 0x4801
0x00000000000b80ce : ret 0x4801
0x00000000000b8144 : ret 0x4801
0x00000000000b818d : ret 0x4801
0x00000000000b8308 : ret 0x4801
0x00000000000b8ccc : ret 0x4801
0x00000000000b8d26 : ret 0x4801
0x00000000000b9c29 : ret 0x4801
0x00000000000b9cb0 : ret 0x4801
0x00000000000b9d87 : ret 0x4801
0x00000000000b9dd0 : ret 0x4801
0x00000000000c90d4 : ret 0x4801
0x00000000000c92f7 : ret 0x4801
0x00000000000ca62a : ret 0x4801
0x00000000000d02cb : ret 0x4801
0x00000000000d3802 : ret 0x4801
0x00000000000d52a6 : ret 0x4801
0x00000000000d6b77 : ret 0x4801
0x00000000000d6bbe : ret 0x4801
0x00000000000d758d : ret 0x4801
0x00000000000d7acb : ret 0x4801
0x00000000000d89ba : ret 0x4801
0x00000000000d960e : ret 0x4801
0x00000000000dbfc4 : ret 0x4801
0x00000000000dd592 : ret 0x4801
0x00000000000df151 : ret 0x4801
0x00000000000e16b5 : ret 0x4801
0x00000000000e1a89 : ret 0x4801
0x00000000000e2fc5 : ret 0x4801
0x00000000000e6f6f : ret 0x4801
0x00000000000ed291 : ret 0x4801
0x00000000000eed8d : ret 0x4801
0x00000000000f90d9 : ret 0x4801
0x000000000010b052 : ret 0x4801
0x000000000010b3ca : ret 0x4801
0x000000000010df0a : ret 0x4801
0x000000000010f487 : ret 0x4801
0x000000000010f78e : ret 0x4801
0x000000000010f7a2 : ret 0x4801
0x0000000000113a81 : ret 0x4801
0x00000000001151ef : ret 0x4801
0x000000000011d0b2 : ret 0x4801
0x0000000000120017 : ret 0x4801
0x00000000001283f2 : ret 0x4801
0x0000000000133cd0 : ret 0x4801
0x0000000000133ef0 : ret 0x4801
0x0000000000138db1 : ret 0x4801
0x0000000000094911 : ret 0x4802
0x0000000000094b31 : ret 0x4802
0x00000000000b8747 : ret 0x4802
0x00000000000b92a4 : ret 0x4802
0x000000000010ae52 : ret 0x4802
0x000000000006e681 : ret 0x4803
0x00000000000949ed : ret 0x4803
0x0000000000094c9e : ret 0x4803
0x000000000010afd2 : ret 0x4803
0x000000000002656d : ret 0x4804
0x0000000000031494 : ret 0x4804
0x0000000000072649 : ret 0x4804
0x00000000000949d5 : ret 0x4804
0x0000000000094c7e : ret 0x4804
0x00000000000ada7c : ret 0x4804
0x00000000000b8a7a : ret 0x4804
0x00000000000b8c82 : ret 0x4804
0x00000000000b8cfe : ret 0x4804
0x00000000000d93f4 : ret 0x4804
0x00000000000e58e2 : ret 0x4804
0x000000000010b352 : ret 0x4804
0x000000000011f394 : ret 0x4804
0x000000000011f393 : ret 0x4804
0x0000000000134ad8 : ret 0x4804
0x0000000000134c30 : ret 0x4804
0x0000000000134d30 : ret 0x4804
0x0000000000134db0 : ret 0x4804
0x0000000000134f00 : ret 0x4804
0x0000000000134f59 : ret 0x4804
0x00000000000949bd : ret 0x4805
0x0000000000094c5e : ret 0x4805
0x000000000010b252 : ret 0x4805
0x00000000000949a5 : ret 0x4806
0x000000000010b152 : ret 0x4806
0x0000000000108a8b : ret 0x4807
0x000000000010b0d2 : ret 0x4807
0x0000000000126faf : ret 0x4808
0x00000000000899f3 : ret 0x4808
0x0000000000089a14 : ret 0x4808
0x0000000000089a35 : ret 0x4808
0x000000000008b1f3 : ret 0x4808
0x000000000008b214 : ret 0x4808
0x000000000008b235 : ret 0x4808
0x000000000008f8e3 : ret 0x4808
0x000000000008f904 : ret 0x4808
0x000000000008f925 : ret 0x4808
0x00000000000dd559 : ret 0x4808
0x00000000000dd8cf : ret 0x4808
0x00000000000dedcb : ret 0x4808
0x00000000000ffa5a : ret 0x4808
0x000000000010aed2 : ret 0x4808
0x0000000000126faf : ret 0x4808
0x000000000012e905 : ret 0x4808
0x000000000012ee25 : ret 0x4808
0x000000000013c615 : ret 0x4808
0x000000000002c4b4 : ret 0x4809
0x000000000010af52 : ret 0x4809
0x000000000010b1d2 : ret 0x480a
0x000000000010add2 : ret 0x480b
0x00000000000bb6a2 : ret 0x480e
0x00000000000bb78e : ret 0x480e
0x0000000000051184 : ret 0x480f
0x000000000009a91f : ret 0x480f
0x00000000000d09f9 : ret 0x480f
0x00000000000ebc95 : ret 0x480f
0x00000000000ec364 : ret 0x480f
0x00000000000ec467 : ret 0x480f
0x00000000000ec5ec : ret 0x480f
0x0000000000048d94 : ret 0x4810
0x000000000004920f : ret 0x4810
0x00000000000498e8 : ret 0x4810
0x0000000000049e66 : ret 0x4810
0x00000000000813c9 : ret 0x4810
0x000000000008438a : ret 0x4810
0x00000000000843a4 : ret 0x4810
0x000000000009eec6 : ret 0x4810
0x00000000000a5c99 : ret 0x4810
0x00000000000a6349 : ret 0x4810
0x00000000000a6479 : ret 0x4810
0x00000000000a7299 : ret 0x4810
0x00000000000a79d9 : ret 0x4810
0x00000000000a7b19 : ret 0x4810
0x00000000000a8d79 : ret 0x4810
0x00000000000a96f9 : ret 0x4810
0x00000000000a97e9 : ret 0x4810
0x00000000000b7930 : ret 0x4810
0x00000000000b973e : ret 0x4810
0x00000000000ceed2 : ret 0x4810
0x00000000000d3806 : ret 0x4810
0x00000000000d3918 : ret 0x4810
0x00000000000e0d01 : ret 0x4810
0x00000000001749f2 : ret 0x4810
0x0000000000174a5a : ret 0x4810
0x0000000000174aba : ret 0x4810
0x0000000000174b12 : ret 0x4810
0x0000000000174b62 : ret 0x4810
0x0000000000174bb2 : ret 0x4810
0x0000000000174c02 : ret 0x4810
0x0000000000174c52 : ret 0x4810
0x0000000000174c92 : ret 0x4810
0x0000000000174e52 : ret 0x4810
0x0000000000174ea2 : ret 0x4810
0x0000000000174eea : ret 0x4810
0x0000000000174f32 : ret 0x4810
0x0000000000175002 : ret 0x4810
0x000000000001f91e : ret 0x4811
0x0000000000029c60 : ret 0x4811
0x00000000000351e7 : ret 0x4811
0x000000000006df15 : ret 0x4811
0x00000000000ca18c : ret 0x4811
0x00000000000ca1a5 : ret 0x4811
0x00000000000ca42c : ret 0x4811
0x00000000000ca445 : ret 0x4811
0x00000000000cb69c : ret 0x4811
0x00000000000cb6b5 : ret 0x4811
0x00000000000cb93c : ret 0x4811
0x00000000000cb955 : ret 0x4811
0x000000000010c4dc : ret 0x4811
0x000000000010c4f5 : ret 0x4811
0x000000000010dc5c : ret 0x4811
0x000000000010dc75 : ret 0x4811
0x000000000011a3a9 : ret 0x4811
0x000000000011a3c2 : ret 0x4811
0x000000000011a3e9 : ret 0x4811
0x000000000011a769 : ret 0x4811
0x000000000011a782 : ret 0x4811
0x000000000011a7a9 : ret 0x4811
0x000000000011ba8c : ret 0x4811
0x000000000011baa5 : ret 0x4811
0x000000000011c16c : ret 0x4811
0x000000000011c185 : ret 0x4811
0x000000000011c58c : ret 0x4811
0x000000000011c5a5 : ret 0x4811
0x000000000011c9ac : ret 0x4811
0x000000000011c9c5 : ret 0x4811
0x000000000011faf8 : ret 0x4811
0x0000000000120618 : ret 0x4811
0x0000000000120dcc : ret 0x4811
0x0000000000120de5 : ret 0x4811
0x0000000000131f4c : ret 0x4811
0x0000000000131f65 : ret 0x4811
0x000000000013217c : ret 0x4811
0x0000000000132195 : ret 0x4811
0x0000000000137661 : ret 0x4812
0x0000000000137975 : ret 0x4812
0x0000000000108f7d : ret 0x4814
0x000000000004b632 : ret 0x481e
0x0000000000056a0a : ret 0x481e
0x00000000000d1a3f : ret 0x481e
0x00000000000d1b59 : ret 0x481e
0x00000000000d381e : ret 0x481e
0x00000000000d3930 : ret 0x481e
0x000000000004b652 : ret 0x4820
0x000000000004f586 : ret 0x4820
0x000000000004f7b8 : ret 0x4820
0x000000000004fb5d : ret 0x4820
0x000000000005432c : ret 0x482d
0x0000000000125c3e : ret 0x482e
0x000000000002146f : ret 0x4830
0x00000000000c3933 : ret 0x4830
0x0000000000110c80 : ret 0x4830
0x0000000000066165 : ret 0x4840
0x000000000009ef9d : ret 0x4840
0x000000000009f032 : ret 0x4840
0x000000000009f666 : ret 0x4840
0x00000000000f70f9 : ret 0x4840
0x000000000016e911 : ret 0x4840
0x000000000016e98f : ret 0x4840
0x000000000016ee21 : ret 0x4840
0x000000000016ee9b : ret 0x4840
0x000000000016ff41 : ret 0x4840
0x000000000016ffbf : ret 0x4840
0x0000000000170451 : ret 0x4840
0x00000000001704cb : ret 0x4840
0x00000000000cc46c : ret 0x4864
0x00000000000dff86 : ret 0x4864
0x00000000000dffb9 : ret 0x4864
0x0000000000113078 : ret 0x4864
0x000000000012aa96 : ret 0x4864
0x00000000001156cd : ret 0x4874
0x00000000001177c5 : ret 0x4875
0x0000000000110ef8 : ret 0x48b
0x0000000000133bd4 : ret 0x48bf
0x000000000008b758 : ret 0x48c3
0x000000000008b9d1 : ret 0x48c3
0x000000000003aba0 : ret 0x48d
0x00000000000bbabd : ret 0x48d
0x00000000000bbc29 : ret 0x48d
0x00000000000bbe27 : ret 0x48d
0x00000000000bd40e : ret 0x48d
0x00000000000bd6c2 : ret 0x48d
0x0000000000100379 : ret 0x48d
0x0000000000100901 : ret 0x48d
0x0000000000100f19 : ret 0x48d
0x0000000000135aca : ret 0x48d
0x0000000000185866 : ret 0x48f
0x0000000000022cfa : ret 0x4901
0x0000000000022d52 : ret 0x4901
0x0000000000023de9 : ret 0x4901
0x0000000000024297 : ret 0x4901
0x00000000000247a7 : ret 0x4901
0x0000000000024c45 : ret 0x4901
0x0000000000025657 : ret 0x4901
0x00000000000269f0 : ret 0x4901
0x000000000002843a : ret 0x4901
0x0000000000029332 : ret 0x4901
0x000000000002be7f : ret 0x4901
0x000000000002f512 : ret 0x4901
0x000000000002fff6 : ret 0x4901
0x00000000000894ea : ret 0x4901
0x000000000008e4e7 : ret 0x4901
0x000000000009d39a : ret 0x4901
0x00000000000d1afa : ret 0x4901
0x00000000000d38d2 : ret 0x4901
0x00000000000d6558 : ret 0x4901
0x000000000003437c : ret 0x4903
0x0000000000029019 : ret 0x4904
0x000000000002648c : ret 0x4906
0x0000000000094c3e : ret 0x4906
0x000000000004f8a9 : ret 0x4908
0x000000000004fc1a : ret 0x4908
0x0000000000059ad3 : ret 0x4908
0x0000000000059f1f : ret 0x4908
0x00000000000ac724 : ret 0x4908
0x00000000000e7740 : ret 0x4908
0x00000000000bf359 : ret 0x4909
0x000000000012fae0 : ret 0x4910
0x00000000000495ac : ret 0x4910
0x0000000000049c40 : ret 0x4910
0x000000000012fae0 : ret 0x4910
0x0000000000144e82 : ret 0x4910
0x0000000000144f52 : ret 0x4910
0x0000000000145018 : ret 0x4910
0x00000000001450e2 : ret 0x4910
0x00000000001451b2 : ret 0x4910
0x0000000000145282 : ret 0x4910
0x0000000000145352 : ret 0x4910
0x0000000000145422 : ret 0x4910
0x00000000001454f2 : ret 0x4910
0x00000000001455c2 : ret 0x4910
0x0000000000145692 : ret 0x4910
0x0000000000145762 : ret 0x4910
0x0000000000145832 : ret 0x4910
0x0000000000145902 : ret 0x4910
0x00000000001459ce : ret 0x4910
0x0000000000145c8c : ret 0x4910
0x0000000000145d7c : ret 0x4910
0x0000000000145e6c : ret 0x4910
0x0000000000145f5c : ret 0x4910
0x000000000014604c : ret 0x4910
0x000000000014613c : ret 0x4910
0x000000000014622c : ret 0x4910
0x000000000014631c : ret 0x4910
0x000000000014640c : ret 0x4910
0x00000000001464fc : ret 0x4910
0x00000000001465ec : ret 0x4910
0x00000000001466dc : ret 0x4910
0x00000000001467cc : ret 0x4910
0x00000000001468bc : ret 0x4910
0x00000000001469a8 : ret 0x4910
0x0000000000146dfc : ret 0x4910
0x0000000000146f9c : ret 0x4910
0x0000000000147134 : ret 0x4910
0x00000000001472dc : ret 0x4910
0x000000000014747c : ret 0x4910
0x000000000014761c : ret 0x4910
0x00000000001477bc : ret 0x4910
0x000000000014795c : ret 0x4910
0x0000000000147afc : ret 0x4910
0x0000000000147c9c : ret 0x4910
0x0000000000147e3c : ret 0x4910
0x0000000000147fdc : ret 0x4910
0x000000000014817c : ret 0x4910
0x000000000014831c : ret 0x4910
0x00000000001484bc : ret 0x4910
0x0000000000148a26 : ret 0x4910
0x0000000000148c06 : ret 0x4910
0x0000000000148dd8 : ret 0x4910
0x0000000000148fb6 : ret 0x4910
0x0000000000149196 : ret 0x4910
0x0000000000149376 : ret 0x4910
0x0000000000149556 : ret 0x4910
0x0000000000149736 : ret 0x4910
0x0000000000149916 : ret 0x4910
0x0000000000149af6 : ret 0x4910
0x0000000000149cd6 : ret 0x4910
0x0000000000149eb6 : ret 0x4910
0x000000000014a096 : ret 0x4910
0x000000000014a276 : ret 0x4910
0x000000000014a456 : ret 0x4910
0x000000000014ac53 : ret 0x4910
0x000000000014ada3 : ret 0x4910
0x000000000014aef1 : ret 0x4910
0x000000000014b043 : ret 0x4910
0x000000000014b193 : ret 0x4910
0x000000000014b2e3 : ret 0x4910
0x000000000014b433 : ret 0x4910
0x000000000014b583 : ret 0x4910
0x000000000014b6d3 : ret 0x4910
0x000000000014b823 : ret 0x4910
0x000000000014b973 : ret 0x4910
0x000000000014bac3 : ret 0x4910
0x000000000014bc13 : ret 0x4910
0x000000000014bd63 : ret 0x4910
0x000000000014beb3 : ret 0x4910
0x000000000014c34d : ret 0x4910
0x000000000014c4cd : ret 0x4910
0x000000000014c645 : ret 0x4910
0x000000000014c7cd : ret 0x4910
0x000000000014c94d : ret 0x4910
0x000000000014cacd : ret 0x4910
0x000000000014cc4d : ret 0x4910
0x000000000014cdcd : ret 0x4910
0x000000000014cf4d : ret 0x4910
0x000000000014d0cd : ret 0x4910
0x000000000014d24d : ret 0x4910
0x000000000014d3cd : ret 0x4910
0x000000000014d54d : ret 0x4910
0x000000000014d6cd : ret 0x4910
0x000000000014d84d : ret 0x4910
0x000000000008739e : ret 0x4920
0x00000000000862e8 : ret 0x4930
0x00000000000c7859 : ret 0x4948
0x00000000000c78a8 : ret 0x4948
0x00000000000038f3 : ret 0x49ec
0x00000000000eace0 : ret 0x4a08
0x00000000000d906c : ret 0x4a74
0x00000000000b8a30 : ret 0x4ae9
0x000000000013cbc9 : ret 0x4ae9
0x0000000000032d55 : ret 0x4c01
0x0000000000072a2a : ret 0x4c01
0x00000000000b853e : ret 0x4c01
0x00000000000bee51 : ret 0x4c01
0x00000000000d5323 : ret 0x4c01
0x00000000000d5385 : ret 0x4c01
0x0000000000109072 : ret 0x4c01
0x0000000000094b81 : ret 0x4c02
0x0000000000094e24 : ret 0x4c02
0x0000000000123d07 : ret 0x4c02
0x00000000000d7c42 : ret 0x4c04
0x00000000000d7c82 : ret 0x4c04
0x00000000000d7cd2 : ret 0x4c04
0x00000000000d7d2a : ret 0x4c04
0x00000000000d7da2 : ret 0x4c04
0x00000000000d7df2 : ret 0x4c04
0x00000000000d7e62 : ret 0x4c04
0x00000000000d7ea2 : ret 0x4c04
0x00000000000d9452 : ret 0x4c04
0x000000000011010a : ret 0x4c04
0x00000000000539a6 : ret 0x4c05
0x0000000000061c84 : ret 0x4c08
0x0000000000062168 : ret 0x4c08
0x00000000000d888b : ret 0x4c20
0x000000000004acf6 : ret 0x4c40
0x00000000000503de : ret 0x4c40
0x00000000000d9938 : ret 0x4c6
0x00000000000c07c5 : ret 0x4c80
0x00000000000c07c4 : ret 0x4c80
0x0000000000053400 : ret 0x4c8b
0x00000000000533ff : ret 0x4c8b
0x00000000000415b5 : ret 0x4d01
0x000000000004441f : ret 0x4d01
0x0000000000023ca1 : ret 0x4d02
0x0000000000109199 : ret 0x4d02
0x00000000000a6062 : ret 0x4d10
0x00000000000a76ef : ret 0x4d10
0x00000000000a9403 : ret 0x4d10
0x0000000000110132 : ret 0x4d30
0x0000000000022800 : ret 0x4d74
0x00000000001852c7 : ret 0x4e27
0x00000000000755d0 : ret 0x4e8b
0x00000000000beb69 : ret 0x4eb
0x000000000010e89c : ret 0x4ee8
0x0000000000021938 : ret 0x4ee9
0x000000000000b328 : ret 0x4f
0x0000000000029d8e : ret 0x4f72
0x00000000000369d4 : ret 0x4f77
0x00000000001bc4a9 : ret 0x503
0x00000000000d7a75 : ret 0x5089
0x000000000016f9c4 : ret 0x5173
0x0000000000170804 : ret 0x5173
0x00000000000fd5d9 : ret 0x51e8
0x000000000002c2b3 : ret 0x527e
0x000000000000318e : ret 0x52c0
0x0000000000008658 : ret 0x53
0x000000000006d008 : ret 0x5389
0x000000000012e8eb : ret 0x53ff
0x000000000012e8eb : ret 0x53ff
0x000000000012ee0b : ret 0x53ff
0x000000000012ee0b : ret 0x53ff
0x00000000000edc9c : ret 0x5408
0x00000000000bbdcb : ret 0x5438
0x000000000009f129 : ret 0x547c
0x000000000004a1f6 : ret 0x5488
0x000000000002a11a : ret 0x5489
0x0000000000035de6 : ret 0x5489
0x000000000004a188 : ret 0x5489
0x000000000018352c : ret 0x5508
0x000000000003295f : ret 0x5525
0x000000000000245e : ret 0x5576
0x0000000000123488 : ret 0x5576
0x00000000000d6f2a : ret 0x5589
0x000000000000b538 : ret 0x56
0x0000000000089907 : ret 0x5675
0x000000000011d802 : ret 0x56e9
0x0000000000087802 : ret 0x575
0x00000000001175d2 : ret 0x577
0x00000000001175e2 : ret 0x577
0x0000000000134efa : ret 0x57c
0x00000000001017d3 : ret 0x57e8
0x00000000000cf893 : ret 0x57e9
0x00000000001857f8 : ret 0x5803
0x00000000001857f7 : ret 0x5803
0x00000000000396fb : ret 0x589
0x0000000000183200 : ret 0x591c
0x00000000001831ff : ret 0x591c
0x00000000000d9071 : ret 0x5974
0x000000000011fc63 : ret 0x5978
0x0000000000003269 : ret 0x5a51
0x0000000000123f33 : ret 0x5a74
0x0000000000183f67 : ret 0x5ae4
0x00000000000e7ac9 : ret 0x5ba
0x00000000000e8466 : ret 0x5ba
0x00000000001251a1 : ret 0x5ba
0x0000000000002f9f : ret 0x5bdb
0x00000000001116a0 : ret 0x5bf
0x00000000000aeefa : ret 0x5c4
0x0000000000026d01 : ret 0x5c77
0x0000000000003055 : ret 0x5cbe
0x00000000000e9ced : ret 0x5ee9
0x00000000000004b9 : ret 0x6080
0x0000000000002725 : ret 0x617e
0x0000000000185c92 : ret 0x62c1
0x0000000000054d53 : ret 0x6348
0x00000000000b2819 : ret 0x6348
0x00000000000bbe7a : ret 0x6348
0x00000000000d7685 : ret 0x6348
0x00000000000d7a19 : ret 0x6348
0x00000000000d7a3c : ret 0x6348
0x0000000000077662 : ret 0x6349
0x00000000000e908a : ret 0x6349
0x00000000000d8fa0 : ret 0x634d
0x00000000000aaf0a : ret 0x6375
0x000000000008d8df : ret 0x63be
0x00000000001268da : ret 0x646
0x000000000009f119 : ret 0x647c
0x0000000000069a45 : ret 0x65e8
0x0000000000130eb9 : ret 0x6600
0x00000000000e922a : ret 0x6601
0x0000000000117ad8 : ret 0x6601
0x000000000003d251 : ret 0x6610
0x0000000000040549 : ret 0x6610
0x0000000000043420 : ret 0x6610
0x000000000009f1ca : ret 0x6610
0x00000000000af243 : ret 0x6610
0x00000000000b1ac3 : ret 0x6610
0x00000000000b4343 : ret 0x6610
0x000000000008eaf2 : ret 0x6620
0x0000000000002827 : ret 0x6642
0x00000000000230ea : ret 0x669
0x000000000008b7a5 : ret 0x66c3
0x000000000008b802 : ret 0x66c3
0x000000000008b965 : ret 0x66c3
0x000000000008b9e2 : ret 0x66c3
0x000000000008e64f : ret 0x66c3
0x000000000008e64e : ret 0x66c3
0x00000000000f6a6f : ret 0x66c3
0x00000000000f6a6e : ret 0x66c3
0x0000000000105fd3 : ret 0x66c3
0x0000000000105fd2 : ret 0x66c3
0x00000000000f9616 : ret 0x674
0x000000000018321f : ret 0x67b2
0x00000000001080c3 : ret 0x67e8
0x00000000000bc5f1 : ret 0x6948
0x00000000000bc643 : ret 0x6948
0x00000000000f4219 : ret 0x69e9
0x00000000001068da : ret 0x69f
0x0000000000118ced : ret 0x6ae9
0x00000000000c28af : ret 0x6b45
0x00000000000ce18f : ret 0x6b8
0x0000000000003ce2 : ret 0x6bba
0x0000000000003ce1 : ret 0x6bba
0x000000000010fd92 : ret 0x6bf
0x00000000000ac6d1 : ret 0x6c74
0x0000000000194333 : ret 0x6e1f
0x00000000001946bb : ret 0x6e1f
0x0000000000185e21 : ret 0x6f9
0x000000000002face : ret 0x6fe9
0x0000000000118f09 : ret 0x6fe9
0x00000000001195ce : ret 0x708d
0x00000000000f54f9 : ret 0x71e8
0x0000000000108bb9 : ret 0x71e8
0x00000000001148c8 : ret 0x71e9
0x000000000014dd0e : ret 0x7280
0x000000000014dddc : ret 0x7280
0x000000000014de54 : ret 0x7280
0x000000000014e1ee : ret 0x7280
0x000000000014e58e : ret 0x7280
0x000000000007ba51 : ret 0x7401
0x000000000008f2fe : ret 0x7401
0x000000000008f3b7 : ret 0x7401
0x000000000009447a : ret 0x7401
0x00000000000d732b : ret 0x7401
0x000000000012c740 : ret 0x7401
0x000000000012c918 : ret 0x7401
0x00000000001369ec : ret 0x7401
0x000000000013b587 : ret 0x7401
0x000000000013b76e : ret 0x7401
0x0000000000084e33 : ret 0x7402
0x000000000008f3c7 : ret 0x7402
0x000000000009448a : ret 0x7402
0x00000000000d72d2 : ret 0x7402
0x0000000000081ef5 : ret 0x7404
0x000000000008f3da : ret 0x7404
0x00000000000944a1 : ret 0x7404
0x00000000001016d1 : ret 0x7404
0x0000000000072b69 : ret 0x7408
0x0000000000073053 : ret 0x7408
0x00000000000748a3 : ret 0x7408
0x000000000008f3eb : ret 0x7408
0x00000000000944b2 : ret 0x7408
0x00000000000e45eb : ret 0x7408
0x000000000006dba1 : ret 0x7420
0x000000000006e94a : ret 0x7420
0x0000000000070841 : ret 0x7420
0x0000000000070991 : ret 0x7420
0x0000000000078271 : ret 0x7420
0x00000000000e45fa : ret 0x7420
0x00000000000e5179 : ret 0x7420
0x00000000000e6872 : ret 0x7420
0x0000000000117411 : ret 0x7420
0x0000000000117561 : ret 0x7420
0x0000000000118531 : ret 0x7420
0x0000000000118681 : ret 0x7420
0x0000000000051562 : ret 0x7450
0x00000000000c5fe5 : ret 0x748d
0x00000000000c7238 : ret 0x748d
0x00000000000aa9ff : ret 0x74e9
0x00000000000a1297 : ret 0x7501
0x00000000000a2eb7 : ret 0x7501
0x0000000000170979 : ret 0x7501
0x0000000000171da5 : ret 0x7501
0x0000000000171da5 : ret 0x7501
0x00000000000a129c : ret 0x7502
0x00000000000a129c : ret 0x7502
0x00000000000a2ebc : ret 0x7502
0x00000000000a2ebc : ret 0x7502
0x00000000001216ca : ret 0x7502
0x0000000000170986 : ret 0x7502
0x0000000000171daa : ret 0x7502
0x0000000000061ba6 : ret 0x7504
0x000000000008f2f9 : ret 0x7504
0x000000000008f2f9 : ret 0x7504
0x000000000009f9d1 : ret 0x7504
0x00000000000a12a1 : ret 0x7504
0x00000000000a2ec1 : ret 0x7504
0x00000000000c86a1 : ret 0x7504
0x00000000000d16c4 : ret 0x7504
0x00000000000d16e1 : ret 0x7504
0x0000000000170993 : ret 0x7504
0x0000000000171daf : ret 0x7504
0x0000000000072b11 : ret 0x7508
0x00000000000a12a6 : ret 0x7508
0x00000000000a2ec6 : ret 0x7508
0x00000000001100e5 : ret 0x7508
0x0000000000171db4 : ret 0x7508
0x000000000017094b : ret 0x7510
0x0000000000171db9 : ret 0x7510
0x000000000008f2f4 : ret 0x7518
0x000000000009f9cc : ret 0x7518
0x0000000000170958 : ret 0x7520
0x0000000000171dbe : ret 0x7520
0x00000000000d8e68 : ret 0x7540
0x00000000000f71f5 : ret 0x7540
0x00000000000f7225 : ret 0x7540
0x0000000000170965 : ret 0x7540
0x0000000000171dc3 : ret 0x7540
0x00000000000d6647 : ret 0x7580
0x00000000000e1ce5 : ret 0x75e8
0x000000000016e8b2 : ret 0x7677
0x000000000016edc2 : ret 0x7677
0x000000000016fee2 : ret 0x7677
0x00000000001703f2 : ret 0x7677
0x0000000000023222 : ret 0x774
0x0000000000070106 : ret 0x774
0x000000000004878a : ret 0x777
0x00000000000cc2b3 : ret 0x77e8
0x0000000000107fb3 : ret 0x77e8
0x00000000001084b3 : ret 0x77e8
0x000000000011d7e1 : ret 0x77e9
0x0000000000002eec : ret 0x793b
0x00000000000cda89 : ret 0x7974
0x000000000011f70c : ret 0x7a8d
0x000000000011f7f8 : ret 0x7a8d
0x0000000000023dfa : ret 0x7b8
0x00000000000247b8 : ret 0x7b8
0x0000000000034d85 : ret 0x7c7
0x000000000008ea82 : ret 0x7e20
0x00000000000fd823 : ret 0x7e8
0x0000000000089eec : ret 0x7f10
0x000000000008a02c : ret 0x7f10
0x000000000008a16c : ret 0x7f10
0x000000000008a2ac : ret 0x7f10
0x000000000008a3ec : ret 0x7f10
0x000000000008a52c : ret 0x7f10
0x000000000008a66c : ret 0x7f10
0x000000000008a7ac : ret 0x7f10
0x000000000008a8ec : ret 0x7f10
0x000000000008aa2c : ret 0x7f10
0x000000000008ab6c : ret 0x7f10
0x000000000008acac : ret 0x7f10
0x000000000008adec : ret 0x7f10
0x000000000008af2c : ret 0x7f10
0x000000000008b06c : ret 0x7f10
0x000000000008bdc6 : ret 0x7f10
0x000000000008bf46 : ret 0x7f10
0x000000000008c0c6 : ret 0x7f10
0x000000000008c246 : ret 0x7f10
0x000000000008c3c6 : ret 0x7f10
0x000000000008c546 : ret 0x7f10
0x000000000008c6c6 : ret 0x7f10
0x000000000008c846 : ret 0x7f10
0x000000000008c9c6 : ret 0x7f10
0x000000000008cb46 : ret 0x7f10
0x000000000008ccc6 : ret 0x7f10
0x000000000008ce46 : ret 0x7f10
0x000000000008cfc6 : ret 0x7f10
0x000000000008d146 : ret 0x7f10
0x000000000008d2c6 : ret 0x7f10
0x0000000000144e62 : ret 0x7f10
0x0000000000144e86 : ret 0x7f10
0x0000000000144f32 : ret 0x7f10
0x0000000000144f56 : ret 0x7f10
0x0000000000144ff8 : ret 0x7f10
0x000000000014501c : ret 0x7f10
0x00000000001450c2 : ret 0x7f10
0x00000000001450e6 : ret 0x7f10
0x0000000000145192 : ret 0x7f10
0x00000000001451b6 : ret 0x7f10
0x0000000000145262 : ret 0x7f10
0x0000000000145286 : ret 0x7f10
0x0000000000145332 : ret 0x7f10
0x0000000000145356 : ret 0x7f10
0x0000000000145402 : ret 0x7f10
0x0000000000145426 : ret 0x7f10
0x00000000001454d2 : ret 0x7f10
0x00000000001454f6 : ret 0x7f10
0x00000000001455a2 : ret 0x7f10
0x00000000001455c6 : ret 0x7f10
0x0000000000145672 : ret 0x7f10
0x0000000000145696 : ret 0x7f10
0x0000000000145742 : ret 0x7f10
0x0000000000145766 : ret 0x7f10
0x0000000000145812 : ret 0x7f10
0x0000000000145836 : ret 0x7f10
0x00000000001458e2 : ret 0x7f10
0x0000000000145906 : ret 0x7f10
0x00000000001459b2 : ret 0x7f10
0x00000000001459d2 : ret 0x7f10
0x0000000000145c62 : ret 0x7f10
0x0000000000145c90 : ret 0x7f10
0x0000000000145d52 : ret 0x7f10
0x0000000000145d80 : ret 0x7f10
0x0000000000145e42 : ret 0x7f10
0x0000000000145e70 : ret 0x7f10
0x0000000000145f32 : ret 0x7f10
0x0000000000145f60 : ret 0x7f10
0x0000000000146022 : ret 0x7f10
0x0000000000146050 : ret 0x7f10
0x0000000000146112 : ret 0x7f10
0x0000000000146140 : ret 0x7f10
0x0000000000146202 : ret 0x7f10
0x0000000000146230 : ret 0x7f10
0x00000000001462f2 : ret 0x7f10
0x0000000000146320 : ret 0x7f10
0x00000000001463e2 : ret 0x7f10
0x0000000000146410 : ret 0x7f10
0x00000000001464d2 : ret 0x7f10
0x0000000000146500 : ret 0x7f10
0x00000000001465c2 : ret 0x7f10
0x00000000001465f0 : ret 0x7f10
0x00000000001466b2 : ret 0x7f10
0x00000000001466e0 : ret 0x7f10
0x00000000001467a2 : ret 0x7f10
0x00000000001467d0 : ret 0x7f10
0x0000000000146892 : ret 0x7f10
0x00000000001468c0 : ret 0x7f10
0x0000000000146982 : ret 0x7f10
0x00000000001469ac : ret 0x7f10
0x0000000000146e00 : ret 0x7f10
0x0000000000146fa0 : ret 0x7f10
0x0000000000147138 : ret 0x7f10
0x00000000001472e0 : ret 0x7f10
0x0000000000147480 : ret 0x7f10
0x0000000000147620 : ret 0x7f10
0x00000000001477c0 : ret 0x7f10
0x0000000000147960 : ret 0x7f10
0x0000000000147b00 : ret 0x7f10
0x0000000000147ca0 : ret 0x7f10
0x0000000000147e40 : ret 0x7f10
0x0000000000147fe0 : ret 0x7f10
0x0000000000148180 : ret 0x7f10
0x0000000000148320 : ret 0x7f10
0x00000000001484c0 : ret 0x7f10
0x000000000014ac57 : ret 0x7f10
0x000000000014ada7 : ret 0x7f10
0x000000000014aef5 : ret 0x7f10
0x000000000014b047 : ret 0x7f10
0x000000000014b197 : ret 0x7f10
0x000000000014b2e7 : ret 0x7f10
0x000000000014b437 : ret 0x7f10
0x000000000014b587 : ret 0x7f10
0x000000000014b6d7 : ret 0x7f10
0x000000000014b827 : ret 0x7f10
0x000000000014b977 : ret 0x7f10
0x000000000014bac7 : ret 0x7f10
0x000000000014bc17 : ret 0x7f10
0x000000000014bd67 : ret 0x7f10
0x000000000014beb7 : ret 0x7f10
0x000000000014c351 : ret 0x7f10
0x000000000014c4d1 : ret 0x7f10
0x000000000014c649 : ret 0x7f10
0x000000000014c7d1 : ret 0x7f10
0x000000000014c951 : ret 0x7f10
0x000000000014cad1 : ret 0x7f10
0x000000000014cc51 : ret 0x7f10
0x000000000014cdd1 : ret 0x7f10
0x000000000014cf51 : ret 0x7f10
0x000000000014d0d1 : ret 0x7f10
0x000000000014d251 : ret 0x7f10
0x000000000014d3d1 : ret 0x7f10
0x000000000014d551 : ret 0x7f10
0x000000000014d6d1 : ret 0x7f10
0x000000000014d851 : ret 0x7f10
0x000000000014e762 : ret 0x7f10
0x000000000014e7a0 : ret 0x7f10
0x000000000014e882 : ret 0x7f10
0x000000000014e8c0 : ret 0x7f10
0x000000000014e9a2 : ret 0x7f10
0x000000000014e9e0 : ret 0x7f10
0x000000000014eac2 : ret 0x7f10
0x000000000014eb00 : ret 0x7f10
0x000000000014ebe2 : ret 0x7f10
0x000000000014ec20 : ret 0x7f10
0x000000000014ed02 : ret 0x7f10
0x000000000014ed40 : ret 0x7f10
0x000000000014ee22 : ret 0x7f10
0x000000000014ee60 : ret 0x7f10
0x000000000014ef42 : ret 0x7f10
0x000000000014ef80 : ret 0x7f10
0x000000000014f062 : ret 0x7f10
0x000000000014f0a0 : ret 0x7f10
0x000000000014f182 : ret 0x7f10
0x000000000014f1c0 : ret 0x7f10
0x000000000014f2a2 : ret 0x7f10
0x000000000014f2e0 : ret 0x7f10
0x000000000014f3c2 : ret 0x7f10
0x000000000014f400 : ret 0x7f10
0x000000000014f4e2 : ret 0x7f10
0x000000000014f520 : ret 0x7f10
0x000000000014f602 : ret 0x7f10
0x000000000014f640 : ret 0x7f10
0x000000000014f722 : ret 0x7f10
0x000000000014f760 : ret 0x7f10
0x000000000014fa7e : ret 0x7f10
0x000000000014fbee : ret 0x7f10
0x000000000014fd5e : ret 0x7f10
0x000000000014fece : ret 0x7f10
0x000000000015003e : ret 0x7f10
0x00000000001501ae : ret 0x7f10
0x000000000015031e : ret 0x7f10
0x000000000015048e : ret 0x7f10
0x00000000001505fe : ret 0x7f10
0x000000000015076e : ret 0x7f10
0x00000000001508de : ret 0x7f10
0x0000000000150a4e : ret 0x7f10
0x0000000000150bbe : ret 0x7f10
0x0000000000150d2e : ret 0x7f10
0x0000000000150e9e : ret 0x7f10
0x0000000000059904 : ret 0x7f3c
0x000000000015903e : ret 0x80
0x00000000001590bf : ret 0x80
0x000000000015917b : ret 0x80
0x0000000000159238 : ret 0x80
0x00000000001592fb : ret 0x80
0x00000000001593b8 : ret 0x80
0x000000000015947b : ret 0x80
0x0000000000159538 : ret 0x80
0x00000000001595fb : ret 0x80
0x00000000001596b8 : ret 0x80
0x000000000015977b : ret 0x80
0x0000000000159838 : ret 0x80
0x00000000001598fb : ret 0x80
0x00000000001599b8 : ret 0x80
0x0000000000159a7b : ret 0x80
0x0000000000159b38 : ret 0x80
0x0000000000159bfb : ret 0x80
0x0000000000159cb8 : ret 0x80
0x0000000000159d7b : ret 0x80
0x0000000000159e38 : ret 0x80
0x0000000000159efb : ret 0x80
0x0000000000159fb8 : ret 0x80
0x000000000015a07b : ret 0x80
0x000000000015a138 : ret 0x80
0x000000000015a1fc : ret 0x80
0x000000000015a2b8 : ret 0x80
0x000000000015a37b : ret 0x80
0x000000000015a438 : ret 0x80
0x000000000015a4fb : ret 0x80
0x000000000015a5b8 : ret 0x80
0x000000000015a67b : ret 0x80
0x000000000015a738 : ret 0x80
0x000000000015a839 : ret 0x80
0x000000000015a8cf : ret 0x80
0x000000000015a9cd : ret 0x80
0x000000000015aa62 : ret 0x80
0x000000000015bb0e : ret 0x80
0x000000000015bb8f : ret 0x80
0x000000000015bc4b : ret 0x80
0x000000000015bd08 : ret 0x80
0x000000000015bdcb : ret 0x80
0x000000000015be88 : ret 0x80
0x000000000015bf4b : ret 0x80
0x000000000015c008 : ret 0x80
0x000000000015c0cb : ret 0x80
0x000000000015c188 : ret 0x80
0x000000000015c24b : ret 0x80
0x000000000015c308 : ret 0x80
0x000000000015c3cb : ret 0x80
0x000000000015c488 : ret 0x80
0x000000000015c54b : ret 0x80
0x000000000015c608 : ret 0x80
0x000000000015c6cb : ret 0x80
0x000000000015c788 : ret 0x80
0x000000000015c84b : ret 0x80
0x000000000015c908 : ret 0x80
0x000000000015c9cb : ret 0x80
0x000000000015ca88 : ret 0x80
0x000000000015cb4b : ret 0x80
0x000000000015cc08 : ret 0x80
0x000000000015cccc : ret 0x80
0x000000000015cd88 : ret 0x80
0x000000000015ce4b : ret 0x80
0x000000000015cf08 : ret 0x80
0x000000000015cfcb : ret 0x80
0x000000000015d088 : ret 0x80
0x000000000015d14b : ret 0x80
0x000000000015d208 : ret 0x80
0x000000000015d309 : ret 0x80
0x000000000015d39f : ret 0x80
0x000000000015d49d : ret 0x80
0x000000000015d532 : ret 0x80
0x000000000015e5ee : ret 0x80
0x000000000015e66f : ret 0x80
0x000000000015e72b : ret 0x80
0x000000000015e7e8 : ret 0x80
0x000000000015e8ab : ret 0x80
0x000000000015e968 : ret 0x80
0x000000000015ea2b : ret 0x80
0x000000000015eae8 : ret 0x80
0x000000000015ebab : ret 0x80
0x000000000015ec68 : ret 0x80
0x000000000015ed2b : ret 0x80
0x000000000015ede8 : ret 0x80
0x000000000015eeab : ret 0x80
0x000000000015ef68 : ret 0x80
0x000000000015f02b : ret 0x80
0x000000000015f0e8 : ret 0x80
0x000000000015f1ab : ret 0x80
0x000000000015f268 : ret 0x80
0x000000000015f32b : ret 0x80
0x000000000015f3e8 : ret 0x80
0x000000000015f4ab : ret 0x80
0x000000000015f568 : ret 0x80
0x000000000015f62b : ret 0x80
0x000000000015f6e8 : ret 0x80
0x000000000015f7ac : ret 0x80
0x000000000015f868 : ret 0x80
0x000000000015f92b : ret 0x80
0x000000000015f9e8 : ret 0x80
0x000000000015faab : ret 0x80
0x000000000015fb68 : ret 0x80
0x000000000015fc2b : ret 0x80
0x000000000015fce8 : ret 0x80
0x000000000015fdfd : ret 0x80
0x000000000015fe93 : ret 0x80
0x000000000015ffb1 : ret 0x80
0x0000000000160046 : ret 0x80
0x000000000008b0c9 : ret 0x8000
0x000000000008d329 : ret 0x8000
0x0000000000091bb9 : ret 0x8000
0x0000000000094299 : ret 0x8000
0x000000000014f7a9 : ret 0x8000
0x0000000000150ef9 : ret 0x8000
0x0000000000162fd9 : ret 0x8000
0x0000000000165519 : ret 0x8000
0x00000000000343bc : ret 0x8001
0x000000000006f2c4 : ret 0x8001
0x0000000000077cd2 : ret 0x8001
0x00000000000beb6e : ret 0x8001
0x00000000000bf552 : ret 0x8010
0x00000000000cfc49 : ret 0x8040
0x00000000000cfc49 : ret 0x8040
0x00000000000e0faf : ret 0x8041
0x000000000012ac06 : ret 0x8041
0x00000000000a649d : ret 0x8072
0x00000000000a7b3d : ret 0x8072
0x00000000000a980d : ret 0x8072
0x000000000011e1b6 : ret 0x8080
0x000000000013777d : ret 0x8080
0x0000000000137a04 : ret 0x8080
0x00000000000038b0 : ret 0x80fc
0x00000000000d7edd : ret 0x8141
0x000000000012f905 : ret 0x8141
0x0000000000045d16 : ret 0x8148
0x000000000006280a : ret 0x8148
0x000000000003508f : ret 0x8166
0x00000000000533c1 : ret 0x8166
0x00000000000d72b6 : ret 0x8166
0x00000000000e45dc : ret 0x8166
0x00000000000e4b3a : ret 0x8166
0x00000000000e4c9c : ret 0x8166
0x0000000000107da9 : ret 0x81e8
0x00000000000e16b9 : ret 0x820f
0x000000000008024c : ret 0x820f
0x00000000000a64b7 : ret 0x820f
0x00000000000a6fb2 : ret 0x820f
0x00000000000a7b57 : ret 0x820f
0x00000000000a87c2 : ret 0x820f
0x00000000000a9827 : ret 0x820f
0x00000000000aa042 : ret 0x820f
0x00000000000e16b9 : ret 0x820f
0x00000000000f1275 : ret 0x820f
0x000000000012bc06 : ret 0x828d
0x00000000000817df : ret 0x82e9
0x0000000000076cd1 : ret 0x82eb
0x00000000000d5b9b : ret 0x82eb
0x0000000000031275 : ret 0x8301
0x00000000000afc92 : ret 0x8301
0x00000000000b244a : ret 0x8301
0x00000000000b4dc2 : ret 0x8301
0x00000000000cf26a : ret 0x8301
0x00000000000d0553 : ret 0x8301
0x00000000000d9009 : ret 0x8301
0x00000000000d90d6 : ret 0x8301
0x00000000000e7826 : ret 0x8301
0x000000000010902b : ret 0x8301
0x000000000012297b : ret 0x8301
0x0000000000130fee : ret 0x8302
0x0000000000121c09 : ret 0x8303
0x0000000000124ca1 : ret 0x8303
0x0000000000124d07 : ret 0x8303
0x000000000012dc04 : ret 0x8303
0x00000000000d8d4a : ret 0x8304
0x00000000000d9812 : ret 0x8304
0x0000000000099ab5 : ret 0x8305
0x0000000000099aad : ret 0x8306
0x000000000005e0cb : ret 0x8308
0x000000000005ef41 : ret 0x8308
0x0000000000060287 : ret 0x8308
0x0000000000062559 : ret 0x8308
0x00000000000659d4 : ret 0x8308
0x0000000000065be2 : ret 0x8308
0x0000000000066fb7 : ret 0x8308
0x00000000000670c2 : ret 0x8308
0x00000000000671e1 : ret 0x8308
0x0000000000069248 : ret 0x8308
0x0000000000069926 : ret 0x8308
0x000000000006999d : ret 0x8308
0x0000000000055c34 : ret 0x830f
0x000000000005bf63 : ret 0x830f
0x000000000006577b : ret 0x830f
0x000000000006876c : ret 0x830f
0x000000000006bf08 : ret 0x830f
0x0000000000098098 : ret 0x830f
0x00000000000980cb : ret 0x830f
0x000000000009fbce : ret 0x830f
0x00000000000a0321 : ret 0x830f
0x00000000000a0a6e : ret 0x830f
0x00000000000f9e64 : ret 0x830f
0x00000000001000a9 : ret 0x830f
0x0000000000100613 : ret 0x830f
0x0000000000100c40 : ret 0x830f
0x0000000000142e3a : ret 0x830f
0x000000000016e480 : ret 0x830f
0x000000000016e4c5 : ret 0x830f
0x000000000016e4da : ret 0x830f
0x000000000016e4ef : ret 0x830f
0x000000000016e504 : ret 0x830f
0x000000000016e51f : ret 0x830f
0x000000000016e534 : ret 0x830f
0x000000000016e594 : ret 0x830f
0x000000000016e5a9 : ret 0x830f
0x000000000016e5be : ret 0x830f
0x000000000016e5d3 : ret 0x830f
0x000000000016e5e8 : ret 0x830f
0x000000000016e5fd : ret 0x830f
0x000000000016e612 : ret 0x830f
0x000000000016e627 : ret 0x830f
0x000000000016e658 : ret 0x830f
0x000000000016e66d : ret 0x830f
0x000000000016e6ab : ret 0x830f
0x000000000016e6c0 : ret 0x830f
0x000000000016e6d5 : ret 0x830f
0x000000000016e6ea : ret 0x830f
0x000000000016e6ff : ret 0x830f
0x000000000016e714 : ret 0x830f
0x000000000016e729 : ret 0x830f
0x000000000016e73e : ret 0x830f
0x000000000016e759 : ret 0x830f
0x000000000016e774 : ret 0x830f
0x000000000016e78f : ret 0x830f
0x000000000016e7aa : ret 0x830f
0x000000000016e7c5 : ret 0x830f
0x000000000016e7e0 : ret 0x830f
0x000000000016e7fb : ret 0x830f
0x000000000016e816 : ret 0x830f
0x000000000016e854 : ret 0x830f
0x000000000016e869 : ret 0x830f
0x000000000016e9cd : ret 0x830f
0x000000000016e9e2 : ret 0x830f
0x000000000016e9f7 : ret 0x830f
0x000000000016ea0c : ret 0x830f
0x000000000016ea27 : ret 0x830f
0x000000000016ea3c : ret 0x830f
0x000000000016ea9d : ret 0x830f
0x000000000016eab2 : ret 0x830f
0x000000000016eac7 : ret 0x830f
0x000000000016eadc : ret 0x830f
0x000000000016eaf1 : ret 0x830f
0x000000000016eb06 : ret 0x830f
0x000000000016eb1b : ret 0x830f
0x000000000016eb30 : ret 0x830f
0x000000000016eb61 : ret 0x830f
0x000000000016eb76 : ret 0x830f
0x000000000016ebc3 : ret 0x830f
0x000000000016ebd8 : ret 0x830f
0x000000000016ebed : ret 0x830f
0x000000000016ec02 : ret 0x830f
0x000000000016ec17 : ret 0x830f
0x000000000016ec2c : ret 0x830f
0x000000000016ec41 : ret 0x830f
0x000000000016ec56 : ret 0x830f
0x000000000016ec71 : ret 0x830f
0x000000000016ec8c : ret 0x830f
0x000000000016eca7 : ret 0x830f
0x000000000016ecc2 : ret 0x830f
0x000000000016ecdd : ret 0x830f
0x000000000016ecf8 : ret 0x830f
0x000000000016ed13 : ret 0x830f
0x000000000016ed2e : ret 0x830f
0x000000000016ed6c : ret 0x830f
0x000000000016ed81 : ret 0x830f
0x000000000016eecc : ret 0x830f
0x000000000016f054 : ret 0x830f
0x000000000016f06f : ret 0x830f
0x000000000016f08a : ret 0x830f
0x000000000016f124 : ret 0x830f
0x000000000016f13f : ret 0x830f
0x000000000016f15a : ret 0x830f
0x000000000016f224 : ret 0x830f
0x000000000016f23f : ret 0x830f
0x000000000016f25a : ret 0x830f
0x000000000016f324 : ret 0x830f
0x000000000016f33f : ret 0x830f
0x000000000016f35a : ret 0x830f
0x000000000016f375 : ret 0x830f
0x000000000016f3a4 : ret 0x830f
0x000000000016f3bf : ret 0x830f
0x000000000016f3da : ret 0x830f
0x000000000016f3f5 : ret 0x830f
0x000000000016f424 : ret 0x830f
0x000000000016f43f : ret 0x830f
0x000000000016f45a : ret 0x830f
0x000000000016f475 : ret 0x830f
0x000000000016f4a4 : ret 0x830f
0x000000000016f4bf : ret 0x830f
0x000000000016f4da : ret 0x830f
0x000000000016f4f5 : ret 0x830f
0x000000000016f524 : ret 0x830f
0x000000000016f53f : ret 0x830f
0x000000000016f55a : ret 0x830f
0x000000000016f575 : ret 0x830f
0x000000000016f5a4 : ret 0x830f
0x000000000016f5bf : ret 0x830f
0x000000000016f5da : ret 0x830f
0x000000000016f5f5 : ret 0x830f
0x000000000016f634 : ret 0x830f
0x000000000016f64f : ret 0x830f
0x000000000016f66a : ret 0x830f
0x000000000016f685 : ret 0x830f
0x000000000016f6c4 : ret 0x830f
0x000000000016f6df : ret 0x830f
0x000000000016f6fa : ret 0x830f
0x000000000016f715 : ret 0x830f
0x000000000016f754 : ret 0x830f
0x000000000016f76f : ret 0x830f
0x000000000016f78a : ret 0x830f
0x000000000016f7a5 : ret 0x830f
0x000000000016f7e4 : ret 0x830f
0x000000000016f7ff : ret 0x830f
0x000000000016f81a : ret 0x830f
0x000000000016f835 : ret 0x830f
0x000000000016f884 : ret 0x830f
0x000000000016f89f : ret 0x830f
0x000000000016f8ba : ret 0x830f
0x000000000016f8d5 : ret 0x830f
0x000000000016f924 : ret 0x830f
0x000000000016f93f : ret 0x830f
0x000000000016f95a : ret 0x830f
0x000000000016f975 : ret 0x830f
0x000000000016fab0 : ret 0x830f
0x000000000016faf5 : ret 0x830f
0x000000000016fb0a : ret 0x830f
0x000000000016fb1f : ret 0x830f
0x000000000016fb34 : ret 0x830f
0x000000000016fb4f : ret 0x830f
0x000000000016fb64 : ret 0x830f
0x000000000016fbc4 : ret 0x830f
0x000000000016fbd9 : ret 0x830f
0x000000000016fbee : ret 0x830f
0x000000000016fc03 : ret 0x830f
0x000000000016fc18 : ret 0x830f
0x000000000016fc2d : ret 0x830f
0x000000000016fc42 : ret 0x830f
0x000000000016fc57 : ret 0x830f
0x000000000016fc88 : ret 0x830f
0x000000000016fc9d : ret 0x830f
0x000000000016fcdb : ret 0x830f
0x000000000016fcf0 : ret 0x830f
0x000000000016fd05 : ret 0x830f
0x000000000016fd1a : ret 0x830f
0x000000000016fd2f : ret 0x830f
0x000000000016fd44 : ret 0x830f
0x000000000016fd59 : ret 0x830f
0x000000000016fd6e : ret 0x830f
0x000000000016fd89 : ret 0x830f
0x000000000016fda4 : ret 0x830f
0x000000000016fdbf : ret 0x830f
0x000000000016fdda : ret 0x830f
0x000000000016fdf5 : ret 0x830f
0x000000000016fe10 : ret 0x830f
0x000000000016fe2b : ret 0x830f
0x000000000016fe46 : ret 0x830f
0x000000000016fe84 : ret 0x830f
0x000000000016fe99 : ret 0x830f
0x000000000016fffd : ret 0x830f
0x0000000000170012 : ret 0x830f
0x0000000000170027 : ret 0x830f
0x000000000017003c : ret 0x830f
0x0000000000170057 : ret 0x830f
0x000000000017006c : ret 0x830f
0x00000000001700cd : ret 0x830f
0x00000000001700e2 : ret 0x830f
0x00000000001700f7 : ret 0x830f
0x000000000017010c : ret 0x830f
0x0000000000170121 : ret 0x830f
0x0000000000170136 : ret 0x830f
0x000000000017014b : ret 0x830f
0x0000000000170160 : ret 0x830f
0x0000000000170191 : ret 0x830f
0x00000000001701a6 : ret 0x830f
0x00000000001701f3 : ret 0x830f
0x0000000000170208 : ret 0x830f
0x000000000017021d : ret 0x830f
0x0000000000170232 : ret 0x830f
0x0000000000170247 : ret 0x830f
0x000000000017025c : ret 0x830f
0x0000000000170271 : ret 0x830f
0x0000000000170286 : ret 0x830f
0x00000000001702a1 : ret 0x830f
0x00000000001702bc : ret 0x830f
0x00000000001702d7 : ret 0x830f
0x00000000001702f2 : ret 0x830f
0x000000000017030d : ret 0x830f
0x0000000000170328 : ret 0x830f
0x0000000000170343 : ret 0x830f
0x000000000017035e : ret 0x830f
0x000000000017039c : ret 0x830f
0x00000000001703b1 : ret 0x830f
0x00000000001704fc : ret 0x830f
0x0000000000170674 : ret 0x830f
0x000000000017068f : ret 0x830f
0x00000000001706aa : ret 0x830f
0x00000000001706c5 : ret 0x830f
0x00000000001706f4 : ret 0x830f
0x000000000017070f : ret 0x830f
0x000000000017072a : ret 0x830f
0x0000000000170745 : ret 0x830f
0x0000000000170774 : ret 0x830f
0x000000000017078f : ret 0x830f
0x00000000001707aa : ret 0x830f
0x00000000001707c5 : ret 0x830f
0x000000000012fd12 : ret 0x8320
0x00000000000df15f : ret 0x833b
0x00000000000df15e : ret 0x833b
0x0000000000046daa : ret 0x8341
0x00000000000b577b : ret 0x8341
0x00000000000c2851 : ret 0x8341
0x00000000000d5b19 : ret 0x8341
0x00000000000d77a0 : ret 0x8341
0x00000000000d7e2d : ret 0x8341
0x00000000000d9b18 : ret 0x8341
0x00000000000e94f2 : ret 0x8341
0x00000000000ebeec : ret 0x8341
0x000000000003a61d : ret 0x8348
0x00000000000878d5 : ret 0x8348
0x00000000000878d4 : ret 0x8348
0x00000000000bc404 : ret 0x8348
0x00000000000bc403 : ret 0x8348
0x00000000000bc4e4 : ret 0x8348
0x00000000000bc4e3 : ret 0x8348
0x00000000000f7722 : ret 0x8348
0x00000000000f7721 : ret 0x8348
0x0000000000115978 : ret 0x8348
0x0000000000140858 : ret 0x8348
0x0000000000140857 : ret 0x8348
0x0000000000142f16 : ret 0x8348
0x0000000000142f15 : ret 0x8348
0x0000000000021300 : ret 0x8348
0x0000000000021364 : ret 0x8348
0x000000000002188b : ret 0x8348
0x0000000000023db9 : ret 0x8348
0x0000000000023f31 : ret 0x8348
0x0000000000024264 : ret 0x8348
0x000000000002477c : ret 0x8348
0x0000000000024c1c : ret 0x8348
0x0000000000024f0c : ret 0x8348
0x0000000000025629 : ret 0x8348
0x0000000000026ec6 : ret 0x8348
0x000000000002792c : ret 0x8348
0x0000000000027b3a : ret 0x8348
0x0000000000028411 : ret 0x8348
0x00000000000287ec : ret 0x8348
0x00000000000289f8 : ret 0x8348
0x0000000000029309 : ret 0x8348
0x000000000002fa42 : ret 0x8348
0x000000000002fa62 : ret 0x8348
0x000000000003887d : ret 0x8348
0x000000000003a61d : ret 0x8348
0x000000000003cfc5 : ret 0x8348
0x000000000003cfe3 : ret 0x8348
0x000000000003d006 : ret 0x8348
0x000000000003d029 : ret 0x8348
0x000000000003d04c : ret 0x8348
0x000000000003d06f : ret 0x8348
0x000000000003d092 : ret 0x8348
0x000000000003d0b5 : ret 0x8348
0x000000000003d0d8 : ret 0x8348
0x000000000003d0fb : ret 0x8348
0x000000000003d11e : ret 0x8348
0x000000000003d141 : ret 0x8348
0x000000000003d164 : ret 0x8348
0x000000000003d183 : ret 0x8348
0x000000000003d1a2 : ret 0x8348
0x000000000003d1c1 : ret 0x8348
0x00000000000402bd : ret 0x8348
0x00000000000402db : ret 0x8348
0x00000000000402fe : ret 0x8348
0x0000000000040321 : ret 0x8348
0x0000000000040344 : ret 0x8348
0x0000000000040367 : ret 0x8348
0x000000000004038a : ret 0x8348
0x00000000000403ad : ret 0x8348
0x00000000000403d0 : ret 0x8348
0x00000000000403f3 : ret 0x8348
0x0000000000040416 : ret 0x8348
0x0000000000040439 : ret 0x8348
0x000000000004045c : ret 0x8348
0x000000000004047b : ret 0x8348
0x000000000004049a : ret 0x8348
0x00000000000404b9 : ret 0x8348
0x0000000000043194 : ret 0x8348
0x00000000000431b2 : ret 0x8348
0x00000000000431d5 : ret 0x8348
0x00000000000431f8 : ret 0x8348
0x000000000004321b : ret 0x8348
0x000000000004323e : ret 0x8348
0x0000000000043261 : ret 0x8348
0x0000000000043284 : ret 0x8348
0x00000000000432a7 : ret 0x8348
0x00000000000432ca : ret 0x8348
0x00000000000432ed : ret 0x8348
0x0000000000043310 : ret 0x8348
0x0000000000043333 : ret 0x8348
0x0000000000043352 : ret 0x8348
0x0000000000043371 : ret 0x8348
0x0000000000043390 : ret 0x8348
0x0000000000049da7 : ret 0x8348
0x000000000006cd07 : ret 0x8348
0x000000000007dfd8 : ret 0x8348
0x00000000000818a6 : ret 0x8348
0x00000000000826b1 : ret 0x8348
0x0000000000082ec4 : ret 0x8348
0x0000000000083035 : ret 0x8348
0x0000000000083bc0 : ret 0x8348
0x0000000000084741 : ret 0x8348
0x0000000000085aa8 : ret 0x8348
0x00000000000878d5 : ret 0x8348
0x00000000000878d4 : ret 0x8348
0x000000000008e681 : ret 0x8348
0x000000000008e780 : ret 0x8348
0x0000000000096e34 : ret 0x8348
0x000000000009bb77 : ret 0x8348
0x000000000009d5db : ret 0x8348
0x000000000009dabb : ret 0x8348
0x000000000009daba : ret 0x8348
0x00000000000b2e32 : ret 0x8348
0x00000000000bc404 : ret 0x8348
0x00000000000bc403 : ret 0x8348
0x00000000000bc4e4 : ret 0x8348
0x00000000000bc4e3 : ret 0x8348
0x00000000000d95d2 : ret 0x8348
0x00000000000e9297 : ret 0x8348
0x00000000000efcae : ret 0x8348
0x00000000000f0072 : ret 0x8348
0x00000000000f7722 : ret 0x8348
0x00000000000f7721 : ret 0x8348
0x00000000000f9084 : ret 0x8348
0x00000000000fe8a5 : ret 0x8348
0x00000000000ff2d9 : ret 0x8348
0x0000000000115978 : ret 0x8348
0x0000000000115977 : ret 0x8348
0x000000000011da7d : ret 0x8348
0x0000000000121b63 : ret 0x8348
0x0000000000122033 : ret 0x8348
0x0000000000122333 : ret 0x8348
0x000000000012eb2d : ret 0x8348
0x0000000000139c3a : ret 0x8348
0x0000000000140858 : ret 0x8348
0x0000000000140857 : ret 0x8348
0x0000000000142f16 : ret 0x8348
0x0000000000142f15 : ret 0x8348
0x0000000000170d57 : ret 0x8348
0x0000000000170e61 : ret 0x8348
0x0000000000170f71 : ret 0x8348
0x0000000000171081 : ret 0x8348
0x0000000000171191 : ret 0x8348
0x00000000001712a1 : ret 0x8348
0x00000000001713b1 : ret 0x8348
0x00000000001714c1 : ret 0x8348
0x00000000001715d1 : ret 0x8348
0x00000000001716e1 : ret 0x8348
0x00000000001717f1 : ret 0x8348
0x0000000000171901 : ret 0x8348
0x0000000000171a11 : ret 0x8348
0x0000000000171b21 : ret 0x8348
0x0000000000171c31 : ret 0x8348
0x0000000000171d41 : ret 0x8348
0x0000000000172467 : ret 0x8348
0x0000000000172571 : ret 0x8348
0x0000000000172681 : ret 0x8348
0x0000000000172791 : ret 0x8348
0x000000000003d6e4 : ret 0x8349
0x00000000000409e4 : ret 0x8349
0x0000000000043854 : ret 0x8349
0x000000000009955b : ret 0x8349
0x0000000000099b74 : ret 0x8349
0x0000000000099b73 : ret 0x8349
0x000000000009e4f6 : ret 0x8349
0x000000000009e4f5 : ret 0x8349
0x00000000000b0902 : ret 0x8349
0x000000000010f00f : ret 0x8349
0x000000000010f00e : ret 0x8349
0x000000000006f353 : ret 0x8389
0x0000000000074cf0 : ret 0x840
0x000000000011184e : ret 0x840
0x000000000011187c : ret 0x840
0x00000000000ceb8e : ret 0x8401
0x00000000000cecf4 : ret 0x8401
0x00000000000cfa09 : ret 0x8401
0x00000000000cfc01 : ret 0x8401
0x000000000010de68 : ret 0x8408
0x000000000002006c : ret 0x840f
0x0000000000037389 : ret 0x840f
0x00000000000378f8 : ret 0x840f
0x0000000000037ed6 : ret 0x840f
0x00000000000383aa : ret 0x840f
0x0000000000038889 : ret 0x840f
0x000000000003f7c4 : ret 0x840f
0x0000000000045749 : ret 0x840f
0x0000000000048d28 : ret 0x840f
0x00000000000491aa : ret 0x840f
0x0000000000049540 : ret 0x840f
0x0000000000049882 : ret 0x840f
0x0000000000049bd4 : ret 0x840f
0x000000000005a0e9 : ret 0x840f
0x000000000005c592 : ret 0x840f
0x000000000005c613 : ret 0x840f
0x000000000005da94 : ret 0x840f
0x000000000005e8a2 : ret 0x840f
0x00000000000640c0 : ret 0x840f
0x000000000006585f : ret 0x840f
0x0000000000068422 : ret 0x840f
0x000000000007d9d9 : ret 0x840f
0x000000000007dac0 : ret 0x840f
0x000000000007dc5a : ret 0x840f
0x0000000000081400 : ret 0x840f
0x000000000008231f : ret 0x840f
0x0000000000084189 : ret 0x840f
0x0000000000084b49 : ret 0x840f
0x0000000000085136 : ret 0x840f
0x0000000000085162 : ret 0x840f
0x000000000008589d : ret 0x840f
0x0000000000085ee2 : ret 0x840f
0x00000000000866d2 : ret 0x840f
0x00000000000869ae : ret 0x840f
0x0000000000087722 : ret 0x840f
0x0000000000099bd3 : ret 0x840f
0x000000000009f9af : ret 0x840f
0x00000000000aead4 : ret 0x840f
0x00000000000b1e78 : ret 0x840f
0x00000000000bbf95 : ret 0x840f
0x00000000000d367d : ret 0x840f
0x00000000000d45ff : ret 0x840f
0x00000000000d7da6 : ret 0x840f
0x00000000000d8ffc : ret 0x840f
0x00000000000da520 : ret 0x840f
0x00000000000da6e4 : ret 0x840f
0x00000000000f9d2e : ret 0x840f
0x000000000011033d : ret 0x840f
0x000000000011555b : ret 0x840f
0x0000000000122696 : ret 0x840f
0x0000000000126d4a : ret 0x840f
0x0000000000127a34 : ret 0x840f
0x00000000001298fc : ret 0x840f
0x0000000000129c20 : ret 0x840f
0x0000000000134a02 : ret 0x840f
0x0000000000138a94 : ret 0x840f
0x00000000001400b6 : ret 0x840f
0x0000000000144632 : ret 0x840f
0x00000000000e91bd : ret 0x844
0x00000000000977a8 : ret 0x8440
0x00000000000aa966 : ret 0x8444
0x00000000000973d7 : ret 0x8445
0x00000000000975af : ret 0x8445
0x00000000000e0b2b : ret 0x8445
0x00000000000fa3e0 : ret 0x8445
0x00000000000e0720 : ret 0x8488
0x0000000000054d45 : ret 0x8504
0x00000000000aae11 : ret 0x8504
0x00000000000b710f : ret 0x8504
0x000000000006ce96 : ret 0x8508
0x000000000006cfe5 : ret 0x8508
0x000000000002191c : ret 0x850f
0x000000000004df55 : ret 0x850f
0x000000000004e51b : ret 0x850f
0x000000000004ebb8 : ret 0x850f
0x00000000000529bb : ret 0x850f
0x00000000000793f2 : ret 0x850f
0x0000000000097c9d : ret 0x850f
0x0000000000097f4d : ret 0x850f
0x00000000000aae58 : ret 0x850f
0x00000000000aae7d : ret 0x850f
0x00000000000bdc86 : ret 0x850f
0x00000000000be6b2 : ret 0x850f
0x00000000000bf2fc : ret 0x850f
0x00000000000d4f64 : ret 0x850f
0x00000000000e20b4 : ret 0x850f
0x00000000000eeb44 : ret 0x850f
0x00000000000f20ed : ret 0x850f
0x000000000010d396 : ret 0x850f
0x000000000011b15e : ret 0x850f
0x0000000000123c40 : ret 0x850f
0x000000000012fb4e : ret 0x850f
0x000000000012fd83 : ret 0x850f
0x0000000000139d68 : ret 0x850f
0x0000000000139fc3 : ret 0x850f
0x000000000014149a : ret 0x850f
0x0000000000142413 : ret 0x850f
0x0000000000144204 : ret 0x850f
0x00000000000456b1 : ret 0x8539
0x00000000000456b0 : ret 0x8539
0x00000000000f1b9d : ret 0x8545
0x000000000011d75d : ret 0x8545
0x0000000000020130 : ret 0x8548
0x000000000002012f : ret 0x8548
0x0000000000020152 : ret 0x8548
0x000000000002f342 : ret 0x8548
0x00000000000383a2 : ret 0x8548
0x000000000006c422 : ret 0x8548
0x000000000007f502 : ret 0x8548
0x000000000007fe22 : ret 0x8548
0x0000000000084284 : ret 0x8548
0x0000000000084c67 : ret 0x8548
0x0000000000085994 : ret 0x8548
0x0000000000086007 : ret 0x8548
0x00000000000867f7 : ret 0x8548
0x0000000000086ae7 : ret 0x8548
0x00000000000c4f21 : ret 0x8548
0x00000000000c7382 : ret 0x8548
0x00000000000de862 : ret 0x8548
0x0000000000115cd9 : ret 0x8548
0x0000000000117b31 : ret 0x8548
0x000000000002c2c5 : ret 0x854d
0x0000000000047657 : ret 0x854d
0x000000000004767e : ret 0x854d
0x00000000000e20ac : ret 0x854d
0x0000000000139d60 : ret 0x854d
0x0000000000139fbb : ret 0x854d
0x00000000000eb308 : ret 0x8589
0x00000000000eb4c4 : ret 0x8589
0x00000000000522bc : ret 0x858b
0x000000000005fb8b : ret 0x858b
0x00000000000d01bd : ret 0x858b
0x000000000004ea24 : ret 0x85c7
0x00000000000240f0 : ret 0x860f
0x000000000002411d : ret 0x860f
0x0000000000024147 : ret 0x860f
0x0000000000024ac2 : ret 0x860f
0x0000000000024ae7 : ret 0x860f
0x0000000000024b0b : ret 0x860f
0x000000000002bdc1 : ret 0x860f
0x000000000004e535 : ret 0x860f
0x0000000000061d05 : ret 0x860f
0x00000000000784fb : ret 0x860f
0x0000000000083e42 : ret 0x860f
0x0000000000084921 : ret 0x860f
0x0000000000085cb1 : ret 0x860f
0x000000000008e8ef : ret 0x860f
0x00000000000d8eb7 : ret 0x860f
0x00000000000eff3d : ret 0x860f
0x00000000000f0e68 : ret 0x860f
0x00000000000f13c7 : ret 0x860f
0x00000000000f15b9 : ret 0x860f
0x00000000000f27b1 : ret 0x860f
0x00000000000f3fc4 : ret 0x860f
0x00000000000f527b : ret 0x860f
0x00000000000355b6 : ret 0x870f
0x000000000003692f : ret 0x870f
0x0000000000036a91 : ret 0x870f
0x0000000000045f28 : ret 0x870f
0x00000000000467e0 : ret 0x870f
0x00000000000488bf : ret 0x870f
0x000000000004ddc4 : ret 0x870f
0x000000000004ebd9 : ret 0x870f
0x000000000004f3b3 : ret 0x870f
0x000000000004f487 : ret 0x870f
0x00000000000593bb : ret 0x870f
0x00000000000be34f : ret 0x870f
0x00000000000d6399 : ret 0x870f
0x00000000000d8dda : ret 0x870f
0x00000000000fd914 : ret 0x870f
0x0000000000182b3e : ret 0x871e
0x000000000003d6d7 : ret 0x875
0x00000000000409d7 : ret 0x875
0x0000000000043847 : ret 0x875
0x000000000005990b : ret 0x875
0x000000000008eb95 : ret 0x876
0x000000000003ce6d : ret 0x87e
0x0000000000040164 : ret 0x87e
0x0000000000043061 : ret 0x87e
0x00000000000fcfa3 : ret 0x87e8
0x000000000002bc4a : ret 0x87e9
0x00000000000f2e23 : ret 0x87e9
0x0000000000106e4a : ret 0x880
0x000000000008938a : ret 0x8801
0x000000000009f9e2 : ret 0x8802
0x000000000012de86 : ret 0x8802
0x0000000000024e31 : ret 0x8804
0x0000000000057621 : ret 0x880f
0x0000000000098ce0 : ret 0x880f
0x00000000000b7640 : ret 0x880f
0x0000000000139797 : ret 0x880f
0x0000000000025949 : ret 0x8840
0x00000000000286a0 : ret 0x8840
0x000000000002959a : ret 0x8840
0x00000000000025b4 : ret 0x88ad
0x00000000000025b3 : ret 0x88ad
0x0000000000024202 : ret 0x8901
0x00000000000242ba : ret 0x8901
0x0000000000024442 : ret 0x8901
0x000000000002507a : ret 0x8901
0x0000000000025172 : ret 0x8901
0x00000000000251a2 : ret 0x8901
0x0000000000026922 : ret 0x8901
0x000000000002ba6f : ret 0x8901
0x0000000000051d4f : ret 0x8901
0x0000000000067b88 : ret 0x8901
0x0000000000130d8d : ret 0x8901
0x00000000001339d6 : ret 0x8901
0x000000000005c89b : ret 0x8908
0x000000000005ca15 : ret 0x8908
0x000000000005cc03 : ret 0x8908
0x000000000005cdb9 : ret 0x8908
0x000000000005cfb4 : ret 0x8908
0x000000000005d572 : ret 0x8908
0x000000000005e105 : ret 0x8908
0x000000000005ed62 : ret 0x8908
0x000000000005ef7b : ret 0x8908
0x000000000005fa4a : ret 0x8908
0x000000000005fbb3 : ret 0x8908
0x000000000005fd77 : ret 0x8908
0x000000000006082c : ret 0x8908
0x0000000000060bf5 : ret 0x8908
0x0000000000060cd2 : ret 0x8908
0x00000000000616fb : ret 0x8908
0x0000000000061870 : ret 0x8908
0x0000000000062767 : ret 0x8908
0x0000000000062954 : ret 0x8908
0x0000000000062b97 : ret 0x8908
0x00000000000641fd : ret 0x8908
0x0000000000064442 : ret 0x8908
0x00000000000645d3 : ret 0x8908
0x0000000000064862 : ret 0x8908
0x00000000000649df : ret 0x8908
0x0000000000064da7 : ret 0x8908
0x0000000000065a0c : ret 0x8908
0x0000000000065c1c : ret 0x8908
0x0000000000065f2f : ret 0x8908
0x0000000000065fb1 : ret 0x8908
0x0000000000066786 : ret 0x8908
0x00000000000668e6 : ret 0x8908
0x0000000000066c97 : ret 0x8908
0x0000000000066d6c : ret 0x8908
0x000000000006700d : ret 0x8908
0x00000000000670fc : ret 0x8908
0x0000000000067139 : ret 0x8908
0x000000000006721b : ret 0x8908
0x0000000000067308 : ret 0x8908
0x0000000000069117 : ret 0x8908
0x00000000000e6ca2 : ret 0x8908
0x000000000010a435 : ret 0x8940
0x000000000010a4c5 : ret 0x8940
0x000000000010a565 : ret 0x8940
0x000000000010a5f5 : ret 0x8940
0x000000000010a685 : ret 0x8940
0x000000000010a715 : ret 0x8940
0x000000000010a7b5 : ret 0x8940
0x000000000010a855 : ret 0x8940
0x000000000010a8f5 : ret 0x8940
0x000000000010a985 : ret 0x8940
0x000000000010aab5 : ret 0x8940
0x000000000010ab4d : ret 0x8940
0x000000000004b161 : ret 0x8941
0x000000000002a21f : ret 0x8941
0x000000000004b161 : ret 0x8941
0x00000000000bb2ca : ret 0x8941
0x00000000000c1551 : ret 0x8941
0x00000000000c1550 : ret 0x8941
0x00000000000e0bbb : ret 0x8941
0x0000000000101ce4 : ret 0x8941
0x0000000000102264 : ret 0x8941
0x0000000000142b61 : ret 0x8941
0x0000000000142b60 : ret 0x8941
0x00000000000b9785 : ret 0x8942
0x00000000000b997c : ret 0x8942
0x0000000000076b9c : ret 0x8944
0x0000000000083f4f : ret 0x8944
0x00000000000c2401 : ret 0x8944
0x00000000000c2419 : ret 0x8944
0x00000000000c276f : ret 0x8944
0x00000000000e5add : ret 0x8944
0x00000000000ecaef : ret 0x8944
0x0000000000105850 : ret 0x8944
0x0000000000110bea : ret 0x8944
0x0000000000050ebe : ret 0x8945
0x0000000000074d6b : ret 0x8945
0x00000000000b9ba6 : ret 0x8946
0x0000000000026dc1 : ret 0x8948
0x00000000000ff575 : ret 0x8948
0x00000000000ff574 : ret 0x8948
0x0000000000021613 : ret 0x8948
0x0000000000023436 : ret 0x8948
0x0000000000026dc1 : ret 0x8948
0x000000000002c040 : ret 0x8948
0x0000000000030300 : ret 0x8948
0x000000000003265f : ret 0x8948
0x00000000000343df : ret 0x8948
0x000000000003581b : ret 0x8948
0x0000000000036470 : ret 0x8948
0x0000000000036760 : ret 0x8948
0x000000000003e1ae : ret 0x8948
0x0000000000041427 : ret 0x8948
0x00000000000441bf : ret 0x8948
0x00000000000442c0 : ret 0x8948
0x0000000000046fc0 : ret 0x8948
0x0000000000046fbf : ret 0x8948
0x0000000000048824 : ret 0x8948
0x00000000000490b3 : ret 0x8948
0x00000000000495f3 : ret 0x8948
0x0000000000049c87 : ret 0x8948
0x000000000004a1cd : ret 0x8948
0x000000000004dc2e : ret 0x8948
0x000000000005132c : ret 0x8948
0x00000000000517bf : ret 0x8948
0x00000000000517be : ret 0x8948
0x0000000000057af5 : ret 0x8948
0x0000000000057af5 : ret 0x8948
0x0000000000057b31 : ret 0x8948
0x000000000006bc63 : ret 0x8948
0x000000000006bd9f : ret 0x8948
0x0000000000076b92 : ret 0x8948
0x0000000000078a33 : ret 0x8948
0x0000000000078a32 : ret 0x8948
0x0000000000078b3f : ret 0x8948
0x0000000000078b3e : ret 0x8948
0x00000000000794e9 : ret 0x8948
0x00000000000794e8 : ret 0x8948
0x00000000000795ef : ret 0x8948
0x00000000000795ee : ret 0x8948
0x00000000000796a8 : ret 0x8948
0x00000000000796a7 : ret 0x8948
0x0000000000079d2c : ret 0x8948
0x000000000007a601 : ret 0x8948
0x000000000007a855 : ret 0x8948
0x000000000007d7c0 : ret 0x8948
0x000000000007d99a : ret 0x8948
0x000000000007e120 : ret 0x8948
0x000000000007e27c : ret 0x8948
0x000000000007f5e9 : ret 0x8948
0x000000000007f6d2 : ret 0x8948
0x000000000007fa4d : ret 0x8948
0x0000000000080325 : ret 0x8948
0x0000000000080c01 : ret 0x8948
0x0000000000081183 : ret 0x8948
0x0000000000081681 : ret 0x8948
0x00000000000819f7 : ret 0x8948
0x00000000000825fd : ret 0x8948
0x0000000000083455 : ret 0x8948
0x0000000000083db6 : ret 0x8948
0x0000000000084640 : ret 0x8948
0x00000000000849b0 : ret 0x8948
0x00000000000851f0 : ret 0x8948
0x0000000000085d28 : ret 0x8948
0x00000000000872a9 : ret 0x8948
0x00000000000896c8 : ret 0x8948
0x000000000008e257 : ret 0x8948
0x0000000000098d9d : ret 0x8948
0x00000000000ac9cc : ret 0x8948
0x00000000000aca50 : ret 0x8948
0x00000000000aca70 : ret 0x8948
0x00000000000afd67 : ret 0x8948
0x00000000000b269e : ret 0x8948
0x00000000000b4ea9 : ret 0x8948
0x00000000000bb2f9 : ret 0x8948
0x00000000000bb46e : ret 0x8948
0x00000000000bbaef : ret 0x8948
0x00000000000bc2bd : ret 0x8948
0x00000000000bc572 : ret 0x8948
0x00000000000bd7a5 : ret 0x8948
0x00000000000bff52 : ret 0x8948
0x00000000000c058f : ret 0x8948
0x00000000000c08a1 : ret 0x8948
0x00000000000c1110 : ret 0x8948
0x00000000000c1190 : ret 0x8948
0x00000000000c1212 : ret 0x8948
0x00000000000c1302 : ret 0x8948
0x00000000000c133b : ret 0x8948
0x00000000000c13cc : ret 0x8948
0x00000000000c1448 : ret 0x8948
0x00000000000c1c24 : ret 0x8948
0x00000000000c1ee8 : ret 0x8948
0x00000000000c214a : ret 0x8948
0x00000000000c218a : ret 0x8948
0x00000000000c21b7 : ret 0x8948
0x00000000000c391e : ret 0x8948
0x00000000000c4aba : ret 0x8948
0x00000000000c95b5 : ret 0x8948
0x00000000000cfd6c : ret 0x8948
0x00000000000d34b1 : ret 0x8948
0x00000000000d4850 : ret 0x8948
0x00000000000d5098 : ret 0x8948
0x00000000000df08b : ret 0x8948
0x00000000000e0e8d : ret 0x8948
0x00000000000e205a : ret 0x8948
0x00000000000e303d : ret 0x8948
0x00000000000e363d : ret 0x8948
0x00000000000e37af : ret 0x8948
0x00000000000e57ec : ret 0x8948
0x00000000000e5aff : ret 0x8948
0x00000000000e6d45 : ret 0x8948
0x00000000000e8273 : ret 0x8948
0x00000000000e928f : ret 0x8948
0x00000000000eb933 : ret 0x8948
0x00000000000ee3d1 : ret 0x8948
0x00000000000f280a : ret 0x8948
0x00000000000f65c1 : ret 0x8948
0x00000000000f7c53 : ret 0x8948
0x00000000000fe5fb : ret 0x8948
0x00000000000ff575 : ret 0x8948
0x00000000000ff574 : ret 0x8948
0x00000000000ffa77 : ret 0x8948
0x000000000010050d : ret 0x8948
0x0000000000100a8d : ret 0x8948
0x00000000001010ad : ret 0x8948
0x000000000010e638 : ret 0x8948
0x000000000011111b : ret 0x8948
0x0000000000111568 : ret 0x8948
0x000000000011329b : ret 0x8948
0x0000000000115ae6 : ret 0x8948
0x0000000000115ae5 : ret 0x8948
0x0000000000115c22 : ret 0x8948
0x0000000000115c21 : ret 0x8948
0x000000000011ee6c : ret 0x8948
0x000000000011ee6c : ret 0x8948
0x00000000001297c3 : ret 0x8948
0x000000000012e656 : ret 0x8948
0x000000000012f0e3 : ret 0x8948
0x000000000012fa4b : ret 0x8948
0x0000000000130248 : ret 0x8948
0x0000000000130e3b : ret 0x8948
0x000000000013ab58 : ret 0x8948
0x000000000013ac18 : ret 0x8948
0x000000000013acd8 : ret 0x8948
0x000000000013ad98 : ret 0x8948
0x000000000013d6ff : ret 0x8948
0x0000000000144709 : ret 0x8948
0x0000000000024ffe : ret 0x8949
0x0000000000024ffd : ret 0x8949
0x000000000003c347 : ret 0x8949
0x000000000003c967 : ret 0x8949
0x000000000003cf8a : ret 0x8949
0x000000000003f607 : ret 0x8949
0x000000000003fc49 : ret 0x8949
0x0000000000040282 : ret 0x8949
0x000000000004254f : ret 0x8949
0x0000000000042b49 : ret 0x8949
0x0000000000043159 : ret 0x8949
0x000000000004698f : ret 0x8949
0x000000000004698f : ret 0x8949
0x0000000000048e18 : ret 0x8949
0x0000000000048f19 : ret 0x8949
0x0000000000049516 : ret 0x8949
0x0000000000049bab : ret 0x8949
0x000000000006c7df : ret 0x8949
0x000000000006cf3f : ret 0x8949
0x00000000000741e2 : ret 0x8949
0x0000000000078bda : ret 0x8949
0x0000000000096c62 : ret 0x8949
0x0000000000096e89 : ret 0x8949
0x00000000000ae917 : ret 0x8949
0x00000000000b126f : ret 0x8949
0x00000000000b3a07 : ret 0x8949
0x00000000000b88ad : ret 0x8949
0x00000000000bcd43 : ret 0x8949
0x00000000000d64b1 : ret 0x8949
0x00000000000d699b : ret 0x8949
0x00000000000de2f2 : ret 0x8949
0x00000000000e2af6 : ret 0x8949
0x00000000000e31b5 : ret 0x8949
0x00000000000ec9b5 : ret 0x8949
0x00000000001057f8 : ret 0x8949
0x00000000001216e8 : ret 0x8949
0x00000000001216e7 : ret 0x8949
0x00000000001230e9 : ret 0x8949
0x000000000012f98d : ret 0x8949
0x0000000000030cca : ret 0x894c
0x0000000000039696 : ret 0x894c
0x000000000004842e : ret 0x894c
0x000000000004a00e : ret 0x894c
0x000000000004b7cd : ret 0x894c
0x0000000000050799 : ret 0x894c
0x0000000000051eed : ret 0x894c
0x0000000000051f62 : ret 0x894c
0x00000000000574e7 : ret 0x894c
0x000000000006045f : ret 0x894c
0x0000000000061c8b : ret 0x894c
0x000000000006216f : ret 0x894c
0x0000000000073aa4 : ret 0x894c
0x0000000000073b0c : ret 0x894c
0x0000000000076af9 : ret 0x894c
0x00000000000776c2 : ret 0x894c
0x000000000007fba9 : ret 0x894c
0x0000000000080b3c : ret 0x894c
0x0000000000080cc3 : ret 0x894c
0x0000000000080d88 : ret 0x894c
0x000000000008290c : ret 0x894c
0x0000000000082a7b : ret 0x894c
0x0000000000083704 : ret 0x894c
0x000000000008e552 : ret 0x894c
0x000000000008f52d : ret 0x894c
0x000000000008f52c : ret 0x894c
0x00000000000945fd : ret 0x894c
0x00000000000945fc : ret 0x894c
0x00000000000970b3 : ret 0x894c
0x000000000009f4e6 : ret 0x894c
0x00000000000af124 : ret 0x894c
0x00000000000b081b : ret 0x894c
0x00000000000b0897 : ret 0x894c
0x00000000000b19a4 : ret 0x894c
0x00000000000b3063 : ret 0x894c
0x00000000000b4224 : ret 0x894c
0x00000000000b5ce8 : ret 0x894c
0x00000000000b5d8e : ret 0x894c
0x00000000000b9dbb : ret 0x894c
0x00000000000c32f2 : ret 0x894c
0x00000000000c45ee : ret 0x894c
0x00000000000c6e75 : ret 0x894c
0x00000000000c7dcb : ret 0x894c
0x00000000000ccf22 : ret 0x894c
0x00000000000cdff6 : ret 0x894c
0x00000000000cf7b5 : ret 0x894c
0x00000000000d3502 : ret 0x894c
0x00000000000d6505 : ret 0x894c
0x00000000000eb650 : ret 0x894c
0x00000000000ebf65 : ret 0x894c
0x00000000000f96c0 : ret 0x894c
0x00000000000f9962 : ret 0x894c
0x00000000000f9965 : ret 0x894c
0x000000000010fe4f : ret 0x894c
0x0000000000111f76 : ret 0x894c
0x00000000001125fb : ret 0x894c
0x00000000001126ae : ret 0x894c
0x0000000000112700 : ret 0x894c
0x0000000000112866 : ret 0x894c
0x0000000000112963 : ret 0x894c
0x0000000000112a65 : ret 0x894c
0x000000000012d4b6 : ret 0x894c
0x000000000012e361 : ret 0x894c
0x000000000012ea54 : ret 0x894c
0x000000000012f083 : ret 0x894c
0x000000000012f1f1 : ret 0x894c
0x0000000000140034 : ret 0x894c
0x00000000001533cb : ret 0x894c
0x00000000001533ca : ret 0x894c
0x0000000000153451 : ret 0x894c
0x0000000000153450 : ret 0x894c
0x0000000000155d9b : ret 0x894c
0x0000000000155d9a : ret 0x894c
0x0000000000155e21 : ret 0x894c
0x0000000000155e20 : ret 0x894c
0x000000000015876b : ret 0x894c
0x000000000015876a : ret 0x894c
0x00000000001587f1 : ret 0x894c
0x00000000001587f0 : ret 0x894c
0x00000000000cdff6 : ret 0x894c
0x0000000000022d0f : ret 0x894d
0x000000000003beda : ret 0x894d
0x000000000003bfde : ret 0x894d
0x000000000003d4db : ret 0x894d
0x000000000003f19a : ret 0x894d
0x000000000003f29e : ret 0x894d
0x00000000000407d3 : ret 0x894d
0x00000000000420ea : ret 0x894d
0x00000000000421fe : ret 0x894d
0x00000000000436aa : ret 0x894d
0x000000000007595a : ret 0x894d
0x0000000000075a4a : ret 0x894d
0x00000000000b9583 : ret 0x894d
0x00000000000b9c6e : ret 0x894d
0x00000000001014ce : ret 0x894d
0x00000000001073d1 : ret 0x894d
0x000000000010e62c : ret 0x894d
0x000000000010e6ba : ret 0x894d
0x000000000011761c : ret 0x894d
0x00000000000490ab : ret 0x894e
0x000000000003b360 : ret 0x8966
0x000000000008e6fa : ret 0x8a04
0x000000000008e7f9 : ret 0x8a04
0x0000000000002553 : ret 0x8a4c
0x000000000006562f : ret 0x8ae9
0x000000000006c962 : ret 0x8b04
0x00000000000ac607 : ret 0x8b04
0x00000000000d2f6a : ret 0x8b04
0x000000000002da3e : ret 0x8b05
0x000000000002da89 : ret 0x8b05
0x000000000010aca3 : ret 0x8b05
0x000000000010ad83 : ret 0x8b05
0x000000000010b513 : ret 0x8b05
0x000000000010b5e3 : ret 0x8b05
0x00000000000d88a0 : ret 0x8b10
0x000000000018536e : ret 0x8b36
0x000000000002c53a : ret 0x8b41
0x000000000002c859 : ret 0x8b41
0x000000000002c858 : ret 0x8b41
0x0000000000130cbf : ret 0x8b41
0x000000000013cff7 : ret 0x8b41
0x000000000013d8c8 : ret 0x8b41
0x000000000013eae7 : ret 0x8b41
0x00000000000f0823 : ret 0x8b44
0x00000000001301b7 : ret 0x8b44
0x00000000000d70a0 : ret 0x8b47
0x0000000000035d75 : ret 0x8b48
0x0000000000035d74 : ret 0x8b48
0x000000000004d918 : ret 0x8b48
0x0000000000052ba2 : ret 0x8b48
0x000000000005905e : ret 0x8b48
0x000000000005943b : ret 0x8b48
0x000000000005d6af : ret 0x8b48
0x000000000006f0cb : ret 0x8b48
0x0000000000078f68 : ret 0x8b48
0x000000000007c83f : ret 0x8b48
0x00000000000958e6 : ret 0x8b48
0x0000000000097b07 : ret 0x8b48
0x0000000000099b37 : ret 0x8b48
0x00000000000b6514 : ret 0x8b48
0x00000000000b6b28 : ret 0x8b48
0x00000000000b6bd0 : ret 0x8b48
0x00000000000b6d38 : ret 0x8b48
0x00000000000b6eb8 : ret 0x8b48
0x00000000000b6f72 : ret 0x8b48
0x00000000000b7577 : ret 0x8b48
0x00000000000b7c09 : ret 0x8b48
0x00000000000b81d9 : ret 0x8b48
0x00000000000b8c5b : ret 0x8b48
0x00000000000cdd28 : ret 0x8b48
0x00000000000ce86f : ret 0x8b48
0x00000000000d523f : ret 0x8b48
0x00000000000daa59 : ret 0x8b48
0x00000000000deac0 : ret 0x8b48
0x00000000000e0db2 : ret 0x8b48
0x00000000000ebb1b : ret 0x8b48
0x00000000000f146b : ret 0x8b48
0x00000000000f2ff2 : ret 0x8b48
0x00000000000f42f3 : ret 0x8b48
0x00000000000f447e : ret 0x8b48
0x00000000000f970a : ret 0x8b48
0x00000000000f9709 : ret 0x8b48
0x0000000000105c03 : ret 0x8b48
0x00000000001095df : ret 0x8b48
0x000000000010f58a : ret 0x8b48
0x0000000000112417 : ret 0x8b48
0x0000000000119d41 : ret 0x8b48
0x0000000000123cf8 : ret 0x8b48
0x000000000012e8c6 : ret 0x8b48
0x000000000012ede6 : ret 0x8b48
0x0000000000135df9 : ret 0x8b48
0x0000000000139b37 : ret 0x8b48
0x0000000000139c24 : ret 0x8b48
0x000000000013fc6a : ret 0x8b48
0x0000000000140622 : ret 0x8b48
0x0000000000172ba7 : ret 0x8b48
0x00000000000744d6 : ret 0x8b49
0x00000000000dbc40 : ret 0x8b49
0x00000000000dec7c : ret 0x8b49
0x00000000000e80a2 : ret 0x8b49
0x00000000000e8533 : ret 0x8b49
0x0000000000111fe1 : ret 0x8b49
0x000000000004902e : ret 0x8b4a
0x000000000004908d : ret 0x8b4a
0x000000000002a27d : ret 0x8b4c
0x000000000004ea91 : ret 0x8b4c
0x000000000004ed94 : ret 0x8b4c
0x000000000004ede7 : ret 0x8b4c
0x000000000005aef9 : ret 0x8b4c
0x00000000000ba57f : ret 0x8b4c
0x00000000000c9523 : ret 0x8b4c
0x00000000000da7d1 : ret 0x8b4c
0x00000000000e3d0f : ret 0x8b4c
0x0000000000128f10 : ret 0x8b4c
0x0000000000128f0f : ret 0x8b4c
0x00000000001533a9 : ret 0x8b4c
0x00000000001533a8 : ret 0x8b4c
0x0000000000153434 : ret 0x8b4c
0x0000000000153433 : ret 0x8b4c
0x0000000000155d79 : ret 0x8b4c
0x0000000000155d78 : ret 0x8b4c
0x0000000000155e04 : ret 0x8b4c
0x0000000000155e03 : ret 0x8b4c
0x0000000000158749 : ret 0x8b4c
0x0000000000158748 : ret 0x8b4c
0x00000000001587d4 : ret 0x8b4c
0x00000000001587d3 : ret 0x8b4c
0x000000000006e418 : ret 0x8b64
0x00000000000fa658 : ret 0x8b64
0x00000000000adcdc : ret 0x8b8
0x00000000000c1a48 : ret 0x8c0f
0x00000000000e7c0b : ret 0x8c0f
0x00000000000037b6 : ret 0x8cba
0x000000000005bd95 : ret 0x8d01
0x000000000005bf05 : ret 0x8d01
0x000000000009b049 : ret 0x8d01
0x00000000000b7704 : ret 0x8d01
0x00000000000d30f7 : ret 0x8d01
0x00000000000d3496 : ret 0x8d01
0x00000000000d482d : ret 0x8d01
0x00000000000d5076 : ret 0x8d01
0x000000000004ac1d : ret 0x8d04
0x000000000005032d : ret 0x8d04
0x000000000006bcc7 : ret 0x8d04
0x00000000001118dd : ret 0x8d04
0x000000000011192c : ret 0x8d04
0x000000000011197b : ret 0x8d04
0x00000000001119ca : ret 0x8d04
0x0000000000111a1c : ret 0x8d04
0x0000000000111a67 : ret 0x8d04
0x0000000000111ab2 : ret 0x8d04
0x0000000000111afd : ret 0x8d04
0x0000000000111b48 : ret 0x8d04
0x000000000011e154 : ret 0x8d04
0x000000000011ee2a : ret 0x8d04
0x000000000011f6d3 : ret 0x8d04
0x000000000011f7bf : ret 0x8d04
0x0000000000127c60 : ret 0x8d04
0x0000000000127cc7 : ret 0x8d04
0x0000000000127d27 : ret 0x8d04
0x0000000000127d87 : ret 0x8d04
0x0000000000127de7 : ret 0x8d04
0x0000000000127e47 : ret 0x8d04
0x0000000000127ea7 : ret 0x8d04
0x0000000000130d3f : ret 0x8d04
0x0000000000133c9a : ret 0x8d04
0x0000000000133ebb : ret 0x8d04
0x000000000013762b : ret 0x8d04
0x00000000001377be : ret 0x8d04
0x000000000013793d : ret 0x8d04
0x0000000000137a46 : ret 0x8d04
0x0000000000051fef : ret 0x8d0f
0x00000000000db246 : ret 0x8d0f
0x00000000000db3a2 : ret 0x8d0f
0x00000000000e906b : ret 0x8d0f
0x00000000000c4201 : ret 0x8d41
0x00000000000c4e75 : ret 0x8d41
0x00000000001194ef : ret 0x8d44
0x0000000000119540 : ret 0x8d45
0x0000000000020778 : ret 0x8d48
0x0000000000022e3c : ret 0x8d48
0x000000000002307b : ret 0x8d48
0x000000000002f38a : ret 0x8d48
0x000000000003989c : ret 0x8d48
0x000000000003c990 : ret 0x8d48
0x000000000003cea1 : ret 0x8d48
0x000000000003fc72 : ret 0x8d48
0x0000000000040198 : ret 0x8d48
0x0000000000042b6f : ret 0x8d48
0x0000000000043095 : ret 0x8d48
0x00000000000475e0 : ret 0x8d48
0x0000000000049e6d : ret 0x8d48
0x000000000004d597 : ret 0x8d48
0x000000000004da23 : ret 0x8d48
0x000000000004da7a : ret 0x8d48
0x000000000004dadb : ret 0x8d48
0x000000000004e5fa : ret 0x8d48
0x000000000004e728 : ret 0x8d48
0x000000000004e75d : ret 0x8d48
0x000000000004f610 : ret 0x8d48
0x000000000004f682 : ret 0x8d48
0x000000000004f98f : ret 0x8d48
0x000000000004f9ed : ret 0x8d48
0x000000000004faa4 : ret 0x8d48
0x000000000004fc4e : ret 0x8d48
0x000000000004fca5 : ret 0x8d48
0x000000000004fd43 : ret 0x8d48
0x0000000000051d7a : ret 0x8d48
0x0000000000051d79 : ret 0x8d48
0x0000000000078b11 : ret 0x8d48
0x0000000000078b10 : ret 0x8d48
0x00000000000795c1 : ret 0x8d48
0x00000000000795c0 : ret 0x8d48
0x000000000007f088 : ret 0x8d48
0x000000000007f480 : ret 0x8d48
0x00000000000a171c : ret 0x8d48
0x00000000000a1745 : ret 0x8d48
0x00000000000a176e : ret 0x8d48
0x00000000000a185c : ret 0x8d48
0x00000000000a1885 : ret 0x8d48
0x00000000000a18ae : ret 0x8d48
0x00000000000a199c : ret 0x8d48
0x00000000000a19c5 : ret 0x8d48
0x00000000000a19ee : ret 0x8d48
0x00000000000a1adc : ret 0x8d48
0x00000000000a1b05 : ret 0x8d48
0x00000000000a1b2e : ret 0x8d48
0x00000000000a1c1c : ret 0x8d48
0x00000000000a1c45 : ret 0x8d48
0x00000000000a1c6e : ret 0x8d48
0x00000000000a1d5c : ret 0x8d48
0x00000000000a1d85 : ret 0x8d48
0x00000000000a1dae : ret 0x8d48
0x00000000000a1eac : ret 0x8d48
0x00000000000a1ed5 : ret 0x8d48
0x00000000000a1efe : ret 0x8d48
0x00000000000a1ffc : ret 0x8d48
0x00000000000a2025 : ret 0x8d48
0x00000000000a204e : ret 0x8d48
0x00000000000a213c : ret 0x8d48
0x00000000000a2165 : ret 0x8d48
0x00000000000a218e : ret 0x8d48
0x00000000000a227c : ret 0x8d48
0x00000000000a22a5 : ret 0x8d48
0x00000000000a22ce : ret 0x8d48
0x00000000000a23bc : ret 0x8d48
0x00000000000a23e5 : ret 0x8d48
0x00000000000a240e : ret 0x8d48
0x00000000000a24fc : ret 0x8d48
0x00000000000a2525 : ret 0x8d48
0x00000000000a254e : ret 0x8d48
0x00000000000a263c : ret 0x8d48
0x00000000000a2665 : ret 0x8d48
0x00000000000a268e : ret 0x8d48
0x00000000000a277c : ret 0x8d48
0x00000000000a27a5 : ret 0x8d48
0x00000000000a27ce : ret 0x8d48
0x00000000000a28bc : ret 0x8d48
0x00000000000a28e5 : ret 0x8d48
0x00000000000a290e : ret 0x8d48
0x00000000000a33f6 : ret 0x8d48
0x00000000000a3429 : ret 0x8d48
0x00000000000a345c : ret 0x8d48
0x00000000000a3576 : ret 0x8d48
0x00000000000a35a9 : ret 0x8d48
0x00000000000a35dc : ret 0x8d48
0x00000000000a36f6 : ret 0x8d48
0x00000000000a3729 : ret 0x8d48
0x00000000000a375c : ret 0x8d48
0x00000000000a3876 : ret 0x8d48
0x00000000000a38a9 : ret 0x8d48
0x00000000000a38dc : ret 0x8d48
0x00000000000a39f6 : ret 0x8d48
0x00000000000a3a29 : ret 0x8d48
0x00000000000a3a5c : ret 0x8d48
0x00000000000a3b76 : ret 0x8d48
0x00000000000a3ba9 : ret 0x8d48
0x00000000000a3bdc : ret 0x8d48
0x00000000000a3cf6 : ret 0x8d48
0x00000000000a3d29 : ret 0x8d48
0x00000000000a3d5c : ret 0x8d48
0x00000000000a3e76 : ret 0x8d48
0x00000000000a3ea9 : ret 0x8d48
0x00000000000a3edc : ret 0x8d48
0x00000000000a3ff6 : ret 0x8d48
0x00000000000a4029 : ret 0x8d48
0x00000000000a405c : ret 0x8d48
0x00000000000a4176 : ret 0x8d48
0x00000000000a41a9 : ret 0x8d48
0x00000000000a41dc : ret 0x8d48
0x00000000000a42f6 : ret 0x8d48
0x00000000000a4329 : ret 0x8d48
0x00000000000a435c : ret 0x8d48
0x00000000000a4476 : ret 0x8d48
0x00000000000a44a9 : ret 0x8d48
0x00000000000a44dc : ret 0x8d48
0x00000000000a45f6 : ret 0x8d48
0x00000000000a4629 : ret 0x8d48
0x00000000000a465c : ret 0x8d48
0x00000000000a4776 : ret 0x8d48
0x00000000000a47a9 : ret 0x8d48
0x00000000000a47dc : ret 0x8d48
0x00000000000a48f6 : ret 0x8d48
0x00000000000a4929 : ret 0x8d48
0x00000000000a495c : ret 0x8d48
0x00000000000aee2d : ret 0x8d48
0x00000000000af1eb : ret 0x8d48
0x00000000000b1757 : ret 0x8d48
0x00000000000b1a6b : ret 0x8d48
0x00000000000b3f0d : ret 0x8d48
0x00000000000b42eb : ret 0x8d48
0x00000000000bb32f : ret 0x8d48
0x00000000000bb386 : ret 0x8d48
0x00000000000bb392 : ret 0x8d48
0x00000000000bb5e3 : ret 0x8d48
0x00000000000bb5ff : ret 0x8d48
0x00000000000bb9e6 : ret 0x8d48
0x00000000000bba12 : ret 0x8d48
0x00000000000bbc5a : ret 0x8d48
0x00000000000bd5f5 : ret 0x8d48
0x00000000000be06a : ret 0x8d48
0x00000000000be069 : ret 0x8d48
0x00000000000bf1f8 : ret 0x8d48
0x00000000000c29b6 : ret 0x8d48
0x00000000000c3ac6 : ret 0x8d48
0x00000000000c57e6 : ret 0x8d48
0x00000000000c7070 : ret 0x8d48
0x00000000000c97e9 : ret 0x8d48
0x00000000000c9959 : ret 0x8d48
0x00000000000cafb9 : ret 0x8d48
0x00000000000cb139 : ret 0x8d48
0x00000000000cfdec : ret 0x8d48
0x00000000000d73cf : ret 0x8d48
0x00000000000dba21 : ret 0x8d48
0x00000000000dba82 : ret 0x8d48
0x00000000000dddb9 : ret 0x8d48
0x00000000000e6278 : ret 0x8d48
0x00000000000edcdc : ret 0x8d48
0x00000000000f12dc : ret 0x8d48
0x00000000000f2621 : ret 0x8d48
0x00000000000f37f6 : ret 0x8d48
0x00000000000fcbd3 : ret 0x8d48
0x00000000000fcc8c : ret 0x8d48
0x000000000010a136 : ret 0x8d48
0x000000000010a135 : ret 0x8d48
0x000000000010a136 : ret 0x8d48
0x000000000010a135 : ret 0x8d48
0x000000000010b759 : ret 0x8d48
0x000000000010b8d9 : ret 0x8d48
0x000000000010d109 : ret 0x8d48
0x000000000010d291 : ret 0x8d48
0x000000000011b049 : ret 0x8d48
0x000000000011b7f9 : ret 0x8d48
0x000000000011bec9 : ret 0x8d48
0x0000000000120b29 : ret 0x8d48
0x000000000012f9b5 : ret 0x8d48
0x00000000001318c9 : ret 0x8d48
0x0000000000131a49 : ret 0x8d48
0x0000000000133be4 : ret 0x8d48
0x0000000000133be3 : ret 0x8d48
0x0000000000134d89 : ret 0x8d48
0x0000000000142d1d : ret 0x8d48
0x000000000016594c : ret 0x8d48
0x0000000000165975 : ret 0x8d48
0x000000000016599e : ret 0x8d48
0x0000000000165a8c : ret 0x8d48
0x0000000000165ab5 : ret 0x8d48
0x0000000000165ade : ret 0x8d48
0x0000000000165bcc : ret 0x8d48
0x0000000000165bf5 : ret 0x8d48
0x0000000000165c1e : ret 0x8d48
0x0000000000165d0c : ret 0x8d48
0x0000000000165d35 : ret 0x8d48
0x0000000000165d5e : ret 0x8d48
0x0000000000165e4c : ret 0x8d48
0x0000000000165e75 : ret 0x8d48
0x0000000000165e9e : ret 0x8d48
0x0000000000165f8c : ret 0x8d48
0x0000000000165fb5 : ret 0x8d48
0x0000000000165fde : ret 0x8d48
0x00000000001660dc : ret 0x8d48
0x0000000000166105 : ret 0x8d48
0x000000000016612e : ret 0x8d48
0x000000000016622c : ret 0x8d48
0x0000000000166255 : ret 0x8d48
0x000000000016627e : ret 0x8d48
0x000000000016636c : ret 0x8d48
0x0000000000166395 : ret 0x8d48
0x00000000001663be : ret 0x8d48
0x00000000001664ac : ret 0x8d48
0x00000000001664d5 : ret 0x8d48
0x00000000001664fe : ret 0x8d48
0x00000000001665ec : ret 0x8d48
0x0000000000166615 : ret 0x8d48
0x000000000016663e : ret 0x8d48
0x000000000016672c : ret 0x8d48
0x0000000000166755 : ret 0x8d48
0x000000000016677e : ret 0x8d48
0x000000000016686c : ret 0x8d48
0x0000000000166895 : ret 0x8d48
0x00000000001668be : ret 0x8d48
0x00000000001669ac : ret 0x8d48
0x00000000001669d5 : ret 0x8d48
0x00000000001669fe : ret 0x8d48
0x0000000000166aec : ret 0x8d48
0x0000000000166b15 : ret 0x8d48
0x0000000000166b3e : ret 0x8d48
0x00000000001671c6 : ret 0x8d48
0x00000000001671f9 : ret 0x8d48
0x000000000016722c : ret 0x8d48
0x0000000000167346 : ret 0x8d48
0x0000000000167379 : ret 0x8d48
0x00000000001673ac : ret 0x8d48
0x00000000001674c6 : ret 0x8d48
0x00000000001674f9 : ret 0x8d48
0x000000000016752c : ret 0x8d48
0x0000000000167646 : ret 0x8d48
0x0000000000167679 : ret 0x8d48
0x00000000001676ac : ret 0x8d48
0x00000000001677c6 : ret 0x8d48
0x00000000001677f9 : ret 0x8d48
0x000000000016782c : ret 0x8d48
0x0000000000167946 : ret 0x8d48
0x0000000000167979 : ret 0x8d48
0x00000000001679ac : ret 0x8d48
0x0000000000167ac6 : ret 0x8d48
0x0000000000167af9 : ret 0x8d48
0x0000000000167b2c : ret 0x8d48
0x0000000000167c46 : ret 0x8d48
0x0000000000167c79 : ret 0x8d48
0x0000000000167cac : ret 0x8d48
0x0000000000167dc6 : ret 0x8d48
0x0000000000167df9 : ret 0x8d48
0x0000000000167e2c : ret 0x8d48
0x0000000000167f46 : ret 0x8d48
0x0000000000167f79 : ret 0x8d48
0x0000000000167fac : ret 0x8d48
0x00000000001680c6 : ret 0x8d48
0x00000000001680f9 : ret 0x8d48
0x000000000016812c : ret 0x8d48
0x0000000000168246 : ret 0x8d48
0x0000000000168279 : ret 0x8d48
0x00000000001682ac : ret 0x8d48
0x00000000001683c6 : ret 0x8d48
0x00000000001683f9 : ret 0x8d48
0x000000000016842c : ret 0x8d48
0x0000000000168546 : ret 0x8d48
0x0000000000168579 : ret 0x8d48
0x00000000001685ac : ret 0x8d48
0x00000000001686c6 : ret 0x8d48
0x00000000001686f9 : ret 0x8d48
0x000000000016872c : ret 0x8d48
0x0000000000169c7c : ret 0x8d48
0x0000000000169ca5 : ret 0x8d48
0x0000000000169cce : ret 0x8d48
0x0000000000169dbc : ret 0x8d48
0x0000000000169de5 : ret 0x8d48
0x0000000000169e0e : ret 0x8d48
0x0000000000169efc : ret 0x8d48
0x0000000000169f25 : ret 0x8d48
0x0000000000169f4e : ret 0x8d48
0x000000000016a03c : ret 0x8d48
0x000000000016a065 : ret 0x8d48
0x000000000016a08e : ret 0x8d48
0x000000000016a17c : ret 0x8d48
0x000000000016a1a5 : ret 0x8d48
0x000000000016a1ce : ret 0x8d48
0x000000000016a2bc : ret 0x8d48
0x000000000016a2e5 : ret 0x8d48
0x000000000016a30e : ret 0x8d48
0x000000000016a40c : ret 0x8d48
0x000000000016a435 : ret 0x8d48
0x000000000016a45e : ret 0x8d48
0x000000000016a55c : ret 0x8d48
0x000000000016a585 : ret 0x8d48
0x000000000016a5ae : ret 0x8d48
0x000000000016a69c : ret 0x8d48
0x000000000016a6c5 : ret 0x8d48
0x000000000016a6ee : ret 0x8d48
0x000000000016a7dc : ret 0x8d48
0x000000000016a805 : ret 0x8d48
0x000000000016a82e : ret 0x8d48
0x000000000016a91c : ret 0x8d48
0x000000000016a945 : ret 0x8d48
0x000000000016a96e : ret 0x8d48
0x000000000016aa5c : ret 0x8d48
0x000000000016aa85 : ret 0x8d48
0x000000000016aaae : ret 0x8d48
0x000000000016ab9c : ret 0x8d48
0x000000000016abc5 : ret 0x8d48
0x000000000016abee : ret 0x8d48
0x000000000016acdc : ret 0x8d48
0x000000000016ad05 : ret 0x8d48
0x000000000016ad2e : ret 0x8d48
0x000000000016ae1c : ret 0x8d48
0x000000000016ae45 : ret 0x8d48
0x000000000016ae6e : ret 0x8d48
0x000000000016b556 : ret 0x8d48
0x000000000016b589 : ret 0x8d48
0x000000000016b5bc : ret 0x8d48
0x000000000016b6d6 : ret 0x8d48
0x000000000016b709 : ret 0x8d48
0x000000000016b73c : ret 0x8d48
0x000000000016b856 : ret 0x8d48
0x000000000016b889 : ret 0x8d48
0x000000000016b8bc : ret 0x8d48
0x000000000016b9d6 : ret 0x8d48
0x000000000016ba09 : ret 0x8d48
0x000000000016ba3c : ret 0x8d48
0x000000000016bb56 : ret 0x8d48
0x000000000016bb89 : ret 0x8d48
0x000000000016bbbc : ret 0x8d48
0x000000000016bcd6 : ret 0x8d48
0x000000000016bd09 : ret 0x8d48
0x000000000016bd3c : ret 0x8d48
0x000000000016be56 : ret 0x8d48
0x000000000016be89 : ret 0x8d48
0x000000000016bebc : ret 0x8d48
0x000000000016bfd6 : ret 0x8d48
0x000000000016c009 : ret 0x8d48
0x000000000016c03c : ret 0x8d48
0x000000000016c156 : ret 0x8d48
0x000000000016c189 : ret 0x8d48
0x000000000016c1bc : ret 0x8d48
0x000000000016c2d6 : ret 0x8d48
0x000000000016c309 : ret 0x8d48
0x000000000016c33c : ret 0x8d48
0x000000000016c456 : ret 0x8d48
0x000000000016c489 : ret 0x8d48
0x000000000016c4bc : ret 0x8d48
0x000000000016c5d6 : ret 0x8d48
0x000000000016c609 : ret 0x8d48
0x000000000016c63c : ret 0x8d48
0x000000000016c756 : ret 0x8d48
0x000000000016c789 : ret 0x8d48
0x000000000016c7bc : ret 0x8d48
0x000000000016c8d6 : ret 0x8d48
0x000000000016c909 : ret 0x8d48
0x000000000016c93c : ret 0x8d48
0x000000000016ca56 : ret 0x8d48
0x000000000016ca89 : ret 0x8d48
0x000000000016cabc : ret 0x8d48
0x000000000016e00c : ret 0x8d48
0x000000000016e035 : ret 0x8d48
0x000000000016e05e : ret 0x8d48
0x000000000016e14c : ret 0x8d48
0x000000000016e175 : ret 0x8d48
0x000000000016e19e : ret 0x8d48
0x000000000016e28c : ret 0x8d48
0x000000000016e2b5 : ret 0x8d48
0x000000000016e2de : ret 0x8d48
0x00000000000c9959 : ret 0x8d48
0x0000000000030319 : ret 0x8d49
0x0000000000030318 : ret 0x8d49
0x000000000003abf3 : ret 0x8d49
0x000000000003d1e0 : ret 0x8d49
0x00000000000404d8 : ret 0x8d49
0x00000000000433af : ret 0x8d49
0x00000000000469c8 : ret 0x8d49
0x0000000000049ab9 : ret 0x8d49
0x00000000000b86d0 : ret 0x8d49
0x00000000000d023b : ret 0x8d49
0x00000000000f147d : ret 0x8d49
0x00000000000f147c : ret 0x8d49
0x00000000000f8f2a : ret 0x8d49
0x0000000000048529 : ret 0x8d4a
0x0000000000095ee8 : ret 0x8d4a
0x0000000000095ee7 : ret 0x8d4a
0x00000000000483c5 : ret 0x8d4c
0x0000000000049fa5 : ret 0x8d4c
0x000000000006afca : ret 0x8d4c
0x000000000006c6b8 : ret 0x8d4c
0x0000000000072d32 : ret 0x8d4c
0x0000000000076791 : ret 0x8d4c
0x000000000007fa58 : ret 0x8d4c
0x0000000000083a08 : ret 0x8d4c
0x0000000000083cd0 : ret 0x8d4c
0x000000000009ba14 : ret 0x8d4c
0x00000000000dd29b : ret 0x8d4c
0x00000000000e91a2 : ret 0x8d4c
0x00000000001189d3 : ret 0x8d4c
0x0000000000142b9a : ret 0x8d4c
0x0000000000142b99 : ret 0x8d4c
0x00000000000a32f2 : ret 0x8d4d
0x00000000001670b4 : ret 0x8d4d
0x000000000016b444 : ret 0x8d4d
0x0000000000082c3c : ret 0x8d4e
0x00000000000958fa : ret 0x8d4e
0x000000000013ee9b : ret 0x8d8b
0x000000000002854c : ret 0x8e0f
0x0000000000029444 : ret 0x8e0f
0x0000000000029444 : ret 0x8e0f
0x0000000000074021 : ret 0x8e0f
0x00000000000bf2d7 : ret 0x8e0f
0x00000000000f0974 : ret 0x8e0f
0x00000000001383d5 : ret 0x8e0f
0x00000000000fc601 : ret 0x8e75
0x000000000006afe2 : ret 0x8e8
0x00000000000b14fd : ret 0x8eb
0x00000000000e07c9 : ret 0x8f0f
0x00000000000f0d27 : ret 0x8f0f
0x0000000000105286 : ret 0x8f7
0x00000000000711f8 : ret 0x8feb
0x00000000000fe4fd : ret 0x8feb
0x000000000019f948 : ret 0x900e
0x00000000000d7d0d : ret 0x9066
0x00000000000f45ed : ret 0x9066
0x000000000002d90d : ret 0x90c3
0x000000000002d90c : ret 0x90c3
0x0000000000089b05 : ret 0x90c3
0x0000000000089b04 : ret 0x90c3
0x0000000000089c23 : ret 0x90c3
0x0000000000089c22 : ret 0x90c3
0x00000000000ea9e3 : ret 0x90c3
0x00000000000ea9e2 : ret 0x90c3
0x00000000000fb88d : ret 0x90c3
0x00000000000fb88c : ret 0x90c3
0x000000000011580d : ret 0x90c3
0x000000000011580c : ret 0x90c3
0x00000000001402f5 : ret 0x90f3
0x00000000000f5a99 : ret 0x91e8
0x00000000000780ec : ret 0x91eb
0x0000000000052008 : ret 0x92e8
0x00000000001195f5 : ret 0x930f
0x0000000000087a3e : ret 0x93be
0x0000000000126d43 : ret 0x93c
0x0000000000061b92 : ret 0x940f
0x000000000003dad7 : ret 0x941
0x0000000000040dc7 : ret 0x941
0x00000000000afbfa : ret 0x941
0x00000000000b4d2b : ret 0x941
0x00000000000db0df : ret 0x947c
0x000000000012fb27 : ret 0x948
0x000000000008d5c8 : ret 0x94c
0x00000000000dcbfa : ret 0x94d
0x000000000004c391 : ret 0x9522
0x000000000004e1be : ret 0x9522
0x0000000000114659 : ret 0x952b
0x0000000000030b18 : ret 0x953d
0x0000000000184193 : ret 0x9576
0x0000000000071389 : ret 0x95eb
0x00000000000e0ff7 : ret 0x95eb
0x00000000000f878f : ret 0x95f
0x00000000000f8b2f : ret 0x970f
0x00000000000f8b47 : ret 0x970f
0x0000000000003798 : ret 0x975
0x00000000000817f9 : ret 0x976
0x00000000000fd793 : ret 0x97e8
0x0000000000108393 : ret 0x97e8
0x00000000000e3f5c : ret 0x9848
0x0000000000089955 : ret 0x9874
0x0000000000075be4 : ret 0x98eb
0x0000000000076534 : ret 0x98eb
0x000000000002a0da : ret 0x9a
0x0000000000042208 : ret 0x9a74
0x000000000013e067 : ret 0x9ae9
0x00000000000d0443 : ret 0x9aeb
0x00000000000b8b77 : ret 0x9be9
0x000000000006af23 : ret 0x9ce9
0x00000000000c8f41 : ret 0x9ce9
0x00000000000cac41 : ret 0x9ce9
0x000000000010bbd1 : ret 0x9ce9
0x000000000010d581 : ret 0x9ce9
0x000000000006820a : ret 0x9d
0x00000000000a6480 : ret 0x9d72
0x00000000000a7b20 : ret 0x9d72
0x00000000000a97f0 : ret 0x9d72
0x00000000000ae5c8 : ret 0x9e74
0x00000000000b0f30 : ret 0x9e74
0x00000000000b36b8 : ret 0x9e74
0x0000000000022f83 : ret 0x9e9
0x0000000000073f38 : ret 0x9e9
0x00000000000aebdc : ret 0x9eb
0x000000000010f780 : ret 0x9eb
0x0000000000044e11 : ret 0x9f74
0x00000000000b63e2 : ret 0x9f74
0x0000000000005991 : ret 0xa
0x0000000000010f41 : ret 0xa
0x00000000000eed41 : ret 0xa
0x00000000000f4b6a : ret 0xa
0x000000000017cd60 : ret 0xa
0x00000000001bc71a : ret 0xa
0x00000000001bc725 : ret 0xa
0x00000000001bc724 : ret 0xa
0x00000000001ab5ec : ret 0xa02
0x000000000006f64a : ret 0xa1
0x00000000000e8449 : ret 0xa1e8
0x000000000003bfe8 : ret 0xa274
0x000000000003f2a8 : ret 0xa274
0x00000000000e99e9 : ret 0xa4b
0x0000000000183e83 : ret 0xa514
0x00000000000eaf3d : ret 0xa6e9
0x00000000000eaf3c : ret 0xa6e9
0x000000000012ac0f : ret 0xa74
0x000000000006d3ba : ret 0xa7c
0x00000000000f7283 : ret 0xa7e8
0x00000000000ba732 : ret 0xa8e9
0x0000000000184307 : ret 0xac65
0x0000000000184306 : ret 0xac65
0x00000000000b617e : ret 0xace8
0x0000000000184cc4 : ret 0xacfc
0x00000000000f63cd : ret 0xade9
0x00000000000d980d : ret 0xaeb
0x000000000012dcbc : ret 0xaee8
0x00000000000aa9ea : ret 0xaf0f
0x00000000000aa9ea : ret 0xaf0f
0x0000000000020cce : ret 0xaf72
0x0000000000086d61 : ret 0xafe9
0x00000000001bc6c2 : ret 0xb
0x00000000001bc6cd : ret 0xb
0x00000000001bc6cc : ret 0xb
0x00000000000821df : ret 0xb48b
0x00000000000821f8 : ret 0xb48b
0x000000000004b1ad : ret 0xb589
0x000000000002f459 : ret 0xb60f
0x000000000002f4d1 : ret 0xb60f
0x000000000003d326 : ret 0xb60f
0x000000000003d346 : ret 0xb60f
0x000000000003d366 : ret 0xb60f
0x000000000003d386 : ret 0xb60f
0x000000000003d3a6 : ret 0xb60f
0x000000000003d3c6 : ret 0xb60f
0x000000000003d3e6 : ret 0xb60f
0x000000000003d406 : ret 0xb60f
0x000000000003d426 : ret 0xb60f
0x000000000003d446 : ret 0xb60f
0x000000000003d466 : ret 0xb60f
0x000000000003d482 : ret 0xb60f
0x000000000003d49e : ret 0xb60f
0x000000000003d4ba : ret 0xb60f
0x000000000004061e : ret 0xb60f
0x000000000004063e : ret 0xb60f
0x000000000004065e : ret 0xb60f
0x000000000004067e : ret 0xb60f
0x000000000004069e : ret 0xb60f
0x00000000000406be : ret 0xb60f
0x00000000000406de : ret 0xb60f
0x00000000000406fe : ret 0xb60f
0x000000000004071e : ret 0xb60f
0x000000000004073e : ret 0xb60f
0x000000000004075e : ret 0xb60f
0x000000000004077a : ret 0xb60f
0x0000000000040796 : ret 0xb60f
0x00000000000407b2 : ret 0xb60f
0x00000000000434f5 : ret 0xb60f
0x0000000000043515 : ret 0xb60f
0x0000000000043535 : ret 0xb60f
0x0000000000043555 : ret 0xb60f
0x0000000000043575 : ret 0xb60f
0x0000000000043595 : ret 0xb60f
0x00000000000435b5 : ret 0xb60f
0x00000000000435d5 : ret 0xb60f
0x00000000000435f5 : ret 0xb60f
0x0000000000043615 : ret 0xb60f
0x0000000000043635 : ret 0xb60f
0x0000000000043651 : ret 0xb60f
0x000000000004366d : ret 0xb60f
0x0000000000043689 : ret 0xb60f
0x000000000004767b : ret 0xb60f
0x000000000004fd8e : ret 0xb60f
0x000000000009896a : ret 0xb60f
0x00000000000b72af : ret 0xb60f
0x00000000000bc15c : ret 0xb60f
0x00000000000bcea4 : ret 0xb60f
0x00000000000bd790 : ret 0xb60f
0x00000000000d0406 : ret 0xb60f
0x00000000000d39ed : ret 0xb60f
0x00000000000e0731 : ret 0xb60f
0x00000000000e32ed : ret 0xb60f
0x00000000000e3853 : ret 0xb60f
0x000000000012550e : ret 0xb60f
0x0000000000125531 : ret 0xb60f
0x0000000000142ea2 : ret 0xb60f
0x00000000000fe058 : ret 0xb6e9
0x00000000000bd435 : ret 0xb70f
0x00000000000bd434 : ret 0xb70f
0x0000000000110cb2 : ret 0xb70f
0x0000000000127878 : ret 0xb74
0x0000000000127a56 : ret 0xb74
0x00000000000f90cd : ret 0xb74
0x0000000000127878 : ret 0xb74
0x0000000000127a56 : ret 0xb74
0x0000000000077d0c : ret 0xb76
0x00000000000c06ee : ret 0xb77d
0x0000000000034b83 : ret 0xb8
0x00000000000c354c : ret 0xb8
0x00000000000c55fb : ret 0xb8
0x00000000000ce0c0 : ret 0xb8
0x0000000000108ab5 : ret 0xb8
0x0000000000126a7d : ret 0xb8
0x00000000000347b1 : ret 0xb848
0x00000000000593ae : ret 0xb848
0x000000000002c305 : ret 0xb87f
0x00000000000607c8 : ret 0xb908
0x00000000000608d8 : ret 0xb908
0x00000000000609f2 : ret 0xb908
0x0000000000060b88 : ret 0xb908
0x0000000000060cea : ret 0xb908
0x0000000000060da3 : ret 0xb908
0x00000000000613ba : ret 0xb908
0x0000000000061682 : ret 0xb908
0x0000000000062252 : ret 0xb908
0x0000000000062512 : ret 0xb908
0x00000000000628f0 : ret 0xb908
0x00000000000629f8 : ret 0xb908
0x0000000000062b30 : ret 0xb908
0x0000000000062c38 : ret 0xb908
0x0000000000067692 : ret 0xb908
0x0000000000067802 : ret 0xb908
0x00000000000678c2 : ret 0xb908
0x0000000000067952 : ret 0xb908
0x0000000000067a12 : ret 0xb908
0x00000000000680d2 : ret 0xb908
0x00000000000681ca : ret 0xb908
0x0000000000069134 : ret 0xb908
0x00000000000691ed : ret 0xb908
0x0000000000069322 : ret 0xb908
0x0000000000069552 : ret 0xb908
0x00000000000697e2 : ret 0xb908
0x0000000000069872 : ret 0xb908
0x0000000000069ca2 : ret 0xb908
0x0000000000069da2 : ret 0xb908
0x000000000006a2aa : ret 0xb908
0x00000000001841ce : ret 0xb9b9
0x0000000000003189 : ret 0xba88
0x0000000000003189 : ret 0xba88
0x00000000000d3a5b : ret 0xba9
0x00000000000c98d3 : ret 0xbb
0x00000000000c9a4f : ret 0xbb
0x00000000000cb0af : ret 0xbb
0x00000000000cb223 : ret 0xbb
0x000000000010b84f : ret 0xbb
0x000000000010b9f3 : ret 0xbb
0x000000000010d1ff : ret 0xbb
0x000000000011b8e3 : ret 0xbb
0x000000000011bfbf : ret 0xbb
0x0000000000120c1f : ret 0xbb
0x00000000001319bf : ret 0xbb
0x0000000000131b33 : ret 0xbb
0x000000000006c81d : ret 0xbb41
0x000000000005dfff : ret 0xbbe9
0x00000000000488b2 : ret 0xbc41
0x0000000000105ed8 : ret 0xbc41
0x0000000000002480 : ret 0xbd07
0x000000000012959f : ret 0xbd74
0x000000000004b19a : ret 0xbd89
0x00000000000d2136 : ret 0xbd89
0x00000000000824fd : ret 0xbde8
0x0000000000061808 : ret 0xbe08
0x0000000000061918 : ret 0xbe08
0x00000000000c2836 : ret 0xbe0f
0x00000000000ff29e : ret 0xbe0f
0x0000000000183f24 : ret 0xbe57
0x000000000012dcac : ret 0xbee8
0x0000000000053498 : ret 0xbf07
0x0000000000060051 : ret 0xbf08
0x0000000000062621 : ret 0xbf08
0x0000000000062721 : ret 0xbf08
0x0000000000063351 : ret 0xbf08
0x000000000007db9e : ret 0xbfe9
0x0000000000134dc8 : ret 0xbfeb
0x0000000000005fd9 : ret 0xc
0x0000000000007821 : ret 0xc
0x0000000000009831 : ret 0xc
0x000000000000bbd1 : ret 0xc
0x000000000000ea81 : ret 0xc
0x000000000008af89 : ret 0xc000
0x000000000008d1a9 : ret 0xc000
0x00000000000919a9 : ret 0xc000
0x0000000000094049 : ret 0xc000
0x000000000014f689 : ret 0xc000
0x0000000000150d89 : ret 0xc000
0x0000000000162dd9 : ret 0xc000
0x00000000001652d9 : ret 0xc000
0x000000000004242e : ret 0xc001
0x00000000000b114e : ret 0xc001
0x00000000000423e2 : ret 0xc002
0x00000000000b1102 : ret 0xc002
0x00000000001234d7 : ret 0xc019
0x000000000006c072 : ret 0xc031
0x000000000006c0a1 : ret 0xc031
0x000000000006d76b : ret 0xc031
0x0000000000079333 : ret 0xc031
0x000000000008b375 : ret 0xc031
0x000000000008b3cc : ret 0xc031
0x000000000008e5ee : ret 0xc031
0x0000000000095758 : ret 0xc031
0x00000000000aee3a : ret 0xc031
0x00000000000b1764 : ret 0xc031
0x00000000000b3f1a : ret 0xc031
0x00000000000be07c : ret 0xc031
0x00000000000bfc3e : ret 0xc031
0x00000000000dbb72 : ret 0xc031
0x00000000000e2f41 : ret 0xc031
0x000000000010eba7 : ret 0xc031
0x00000000001288ea : ret 0xc031
0x000000000012e8f0 : ret 0xc031
0x000000000012ecbd : ret 0xc031
0x000000000012ee10 : ret 0xc031
0x0000000000142af9 : ret 0xc031
0x00000000000ddb6a : ret 0xc041
0x00000000000ddbd9 : ret 0xc041
0x000000000012bbea : ret 0xc069
0x0000000000047d6c : ret 0xc083
0x000000000008f82a : ret 0xc083
0x000000000008f829 : ret 0xc083
0x000000000008f83c : ret 0xc083
0x000000000008f83b : ret 0xc083
0x00000000000dc1ec : ret 0xc083
0x00000000000e09f2 : ret 0xc083
0x00000000000ff9c5 : ret 0xc084
0x0000000000101ca8 : ret 0xc084
0x0000000000101ca7 : ret 0xc084
0x0000000000102228 : ret 0xc084
0x0000000000102227 : ret 0xc084
0x000000000010de55 : ret 0xc084
0x000000000010de54 : ret 0xc084
0x000000000008d595 : ret 0xc085
0x000000000008e940 : ret 0xc085
0x000000000008e9aa : ret 0xc085
0x000000000008ea48 : ret 0xc085
0x000000000008eaa6 : ret 0xc085
0x00000000000965f0 : ret 0xc085
0x0000000000096650 : ret 0xc085
0x00000000000966da : ret 0xc085
0x000000000009eefb : ret 0xc085
0x000000000009ef5c : ret 0xc085
0x000000000009efec : ret 0xc085
0x000000000009f019 : ret 0xc085
0x000000000009f05b : ret 0xc085
0x000000000011fa06 : ret 0xc085
0x00000000000dddac : ret 0xc141
0x00000000000dddac : ret 0xc141
0x0000000000034a17 : ret 0xc148
0x0000000000039f36 : ret 0xc148
0x000000000003db19 : ret 0xc148
0x0000000000040e09 : ret 0xc148
0x0000000000043cd1 : ret 0xc148
0x0000000000044ded : ret 0xc148
0x0000000000047ff0 : ret 0xc148
0x00000000000531da : ret 0xc148
0x00000000000570e2 : ret 0xc148
0x0000000000057df2 : ret 0xc148
0x000000000006d20f : ret 0xc148
0x0000000000089a71 : ret 0xc148
0x0000000000089bf1 : ret 0xc148
0x000000000008b271 : ret 0xc148
0x000000000008d66d : ret 0xc148
0x000000000008d68e : ret 0xc148
0x000000000008f961 : ret 0xc148
0x00000000000968a1 : ret 0xc148
0x000000000009f601 : ret 0xc148
0x00000000000afc39 : ret 0xc148
0x00000000000b23f3 : ret 0xc148
0x00000000000b4d6d : ret 0xc148
0x00000000000b63be : ret 0xc148
0x00000000000d7211 : ret 0xc148
0x00000000000dd043 : ret 0xc148
0x00000000000e4268 : ret 0xc148
0x00000000000e4c66 : ret 0xc148
0x00000000000e5737 : ret 0xc148
0x00000000001096e0 : ret 0xc148
0x0000000000109ea8 : ret 0xc148
0x0000000000109fa3 : ret 0xc148
0x000000000010a212 : ret 0xc148
0x0000000000123692 : ret 0xc148
0x0000000000123a25 : ret 0xc148
0x0000000000141493 : ret 0xc148
0x0000000000142d7b : ret 0xc148
0x0000000000142d84 : ret 0xc148
0x0000000000142d7b : ret 0xc148
0x000000000004a538 : ret 0xc149
0x000000000004a5a2 : ret 0xc149
0x0000000000095c23 : ret 0xc149
0x00000000000b9677 : ret 0xc149
0x00000000000da9cc : ret 0xc149
0x00000000000dae06 : ret 0xc149
0x000000000012f8f7 : ret 0xc149
0x000000000012ff40 : ret 0xc149
0x000000000013011d : ret 0xc149
0x0000000000136098 : ret 0xc173
0x00000000000358bd : ret 0xc189
0x000000000003594c : ret 0xc189
0x000000000013bda9 : ret 0xc189
0x0000000000107e69 : ret 0xc1e8
0x0000000000047542 : ret 0xc221
0x000000000003aba6 : ret 0xc229
0x000000000003ad40 : ret 0xc269
0x00000000000bd945 : ret 0xc269
0x00000000000c3fe1 : ret 0xc26b
0x00000000000c69de : ret 0xc26b
0x0000000000083f8b : ret 0xc275
0x00000000000f5c3a : ret 0xc283
0x00000000000f5cf2 : ret 0xc283
0x00000000000f5d8d : ret 0xc283
0x0000000000035d67 : ret 0xc289
0x0000000000035d66 : ret 0xc289
0x000000000016f894 : ret 0xc2b2
0x000000000016f893 : ret 0xc2b2
0x000000000011d7b0 : ret 0xc2e9
0x000000000003a6f8 : ret 0xc35b
0x000000000003a6f7 : ret 0xc35b
0x000000000003a7c5 : ret 0xc35b
0x000000000003a7c4 : ret 0xc35b
0x00000000000aac11 : ret 0xc35b
0x000000000003a6f8 : ret 0xc35b
0x000000000003a6f7 : ret 0xc35b
0x000000000003a7c5 : ret 0xc35b
0x000000000003a7c4 : ret 0xc35b
0x00000000000aac11 : ret 0xc35b
0x0000000000083f8d : ret 0xc3f3
0x000000000008f19f : ret 0xc3f3
0x000000000008f19e : ret 0xc3f3
0x00000000000b64f1 : ret 0xc3f3
0x00000000000b64f0 : ret 0xc3f3
0x00000000001162f4 : ret 0xc3f3
0x00000000001162f3 : ret 0xc3f3
0x000000000008f19f : ret 0xc3f3
0x000000000008f19e : ret 0xc3f3
0x00000000000b64f1 : ret 0xc3f3
0x00000000000b64f0 : ret 0xc3f3
0x00000000001162f4 : ret 0xc3f3
0x00000000001162f3 : ret 0xc3f3
0x00000000000f9680 : ret 0xc3f6
0x00000000000f967f : ret 0xc3f6
0x00000000000f9680 : ret 0xc3f6
0x00000000000f967f : ret 0xc3f6
0x0000000000181d42 : ret 0xc4c3
0x0000000000183ad8 : ret 0xc4ff
0x000000000004f5aa : ret 0xc54
0x000000000014dda8 : ret 0xc580
0x00000000000e5995 : ret 0xc5e8
0x000000000010e65a : ret 0xc601
0x0000000000122994 : ret 0xc602
0x00000000000e4efe : ret 0xc683
0x0000000000056263 : ret 0xc689
0x00000000000d78a3 : ret 0xc689
0x00000000000d78a2 : ret 0xc689
0x000000000009f4a4 : ret 0xc6e8
0x0000000000087841 : ret 0xc6eb
0x000000000012f806 : ret 0xc707
0x00000000000f960a : ret 0xc72
0x0000000000037291 : ret 0xc748
0x00000000000a1641 : ret 0xc748
0x00000000000cddd1 : ret 0xc748
0x00000000000ce800 : ret 0xc748
0x0000000000165870 : ret 0xc748
0x0000000000169ba0 : ret 0xc748
0x000000000016df0f : ret 0xc748
0x00000000000442b6 : ret 0xc749
0x00000000000aaf61 : ret 0xc75
0x000000000009d24f : ret 0xc76
0x00000000000d8feb : ret 0xc76
0x00000000000d905b : ret 0xc76
0x00000000000c0ee6 : ret 0xc78
0x0000000000082490 : ret 0xc789
0x00000000000f7063 : ret 0xc7e8
0x00000000000f7a63 : ret 0xc7e8
0x00000000000f349d : ret 0xc7e9
0x00000000000334a8 : ret 0xc801
0x0000000000098791 : ret 0xc829
0x0000000000071cb4 : ret 0xc883
0x000000000007b51c : ret 0xc883
0x0000000000025b9c : ret 0xc985
0x0000000000025b9b : ret 0xc985
0x00000000000899c6 : ret 0xc9ff
0x000000000008b1c1 : ret 0xc9ff
0x000000000008f8b1 : ret 0xc9ff
0x00000000000debc2 : ret 0xca39
0x00000000000dec0f : ret 0xca39
0x00000000000df243 : ret 0xca39
0x000000000014a82f : ret 0xca39
0x00000000000eaf07 : ret 0xca83
0x00000000001212ed : ret 0xca83
0x00000000000b3160 : ret 0xcae8
0x000000000005cb8d : ret 0xcb73
0x00000000000d321d : ret 0xcb75
0x00000000000f5c69 : ret 0xcb8
0x00000000000f5db9 : ret 0xcb8
0x000000000018356a : ret 0xcca7
0x000000000012c04a : ret 0xcd
0x000000000018564d : ret 0xcd11
0x00000000000a6450 : ret 0xcd72
0x00000000000a7af0 : ret 0xcd72
0x00000000000a97c0 : ret 0xcd72
0x0000000000101dbc : ret 0xcdbb
0x000000000002c79d : ret 0xcde8
0x0000000000083931 : ret 0xce31
0x0000000000031ff8 : ret 0xce80
0x000000000011719a : ret 0xce80
0x000000000005c46d : ret 0xce83
0x000000000007ef9b : ret 0xcf31
0x00000000000b0a86 : ret 0xd
0x00000000000b0aa5 : ret 0xd
0x00000000000b0ac4 : ret 0xd
0x00000000000b0acb : ret 0xd
0x00000000000b0aed : ret 0xd
0x00000000000b0aec : ret 0xd
0x00000000000b0b1d : ret 0xd
0x00000000000e1cac : ret 0xd
0x000000000017d160 : ret 0xd
0x00000000000d2b0e : ret 0xd008
0x00000000000d9c60 : ret 0xd009
0x00000000000da0ee : ret 0xd009
0x00000000000bbf63 : ret 0xd021
0x00000000000cd8a2 : ret 0xd029
0x0000000000105b21 : ret 0xd029
0x0000000000119124 : ret 0xd029
0x000000000014dc1c : ret 0xd073
0x000000000014e0fd : ret 0xd073
0x000000000014e49d : ret 0xd073
0x0000000000046dbf : ret 0xd084
0x000000000003296e : ret 0xd089
0x0000000000034b53 : ret 0xd089
0x0000000000034f00 : ret 0xd089
0x00000000000459ba : ret 0xd089
0x000000000005401e : ret 0xd089
0x0000000000054793 : ret 0xd089
0x0000000000075514 : ret 0xd089
0x00000000000bbacc : ret 0xd089
0x00000000000bbc3d : ret 0xd089
0x00000000000bbe36 : ret 0xd089
0x00000000000c416a : ret 0xd089
0x00000000000c4576 : ret 0xd089
0x00000000000c67c1 : ret 0xd089
0x000000000014a6a4 : ret 0xd089
0x000000000014a7c8 : ret 0xd089
0x000000000014a8e8 : ret 0xd089
0x00000000000b58ed : ret 0xd0f7
0x00000000000b58ec : ret 0xd0f7
0x0000000000110bc4 : ret 0xd0f7
0x00000000000ee7d1 : ret 0xd101
0x00000000000eeaf1 : ret 0xd101
0x00000000000fea34 : ret 0xd108
0x0000000000072495 : ret 0xd108
0x00000000000b7883 : ret 0xd108
0x00000000000fea34 : ret 0xd108
0x00000000000fea90 : ret 0xd108
0x00000000000feaef : ret 0xd108
0x00000000000feb4d : ret 0xd108
0x000000000005fc5d : ret 0xd129
0x0000000000062ef7 : ret 0xd129
0x0000000000062fe5 : ret 0xd129
0x00000000000c6731 : ret 0xd129
0x00000000000d85fa : ret 0xd138
0x000000000011f2ec : ret 0xd138
0x00000000000dbe62 : ret 0xd139
0x00000000000dbeeb : ret 0xd139
0x00000000000dbf37 : ret 0xd139
0x00000000000dde9e : ret 0xd139
0x00000000000de0b9 : ret 0xd139
0x00000000000de8a2 : ret 0xd139
0x00000000000deead : ret 0xd139
0x00000000000dddb3 : ret 0xd141
0x000000000012f929 : ret 0xd148
0x0000000000108b59 : ret 0xd1e8
0x0000000000033e55 : ret 0xd231
0x000000000002086d : ret 0xd284
0x000000000009594f : ret 0xd284
0x000000000009ee20 : ret 0xd308
0x0000000000061a97 : ret 0xd309
0x0000000000061b95 : ret 0xd309
0x0000000000061f73 : ret 0xd329
0x0000000000086216 : ret 0xd341
0x000000000003c3db : ret 0xd348
0x000000000003f6ab : ret 0xd348
0x000000000004261b : ret 0xd348
0x00000000000ae9bb : ret 0xd348
0x00000000000b133b : ret 0xd348
0x00000000000b3a9b : ret 0xd348
0x00000000000b0b57 : ret 0xd3e8
0x0000000000036942 : ret 0xd521
0x00000000000369e3 : ret 0xd521
0x0000000000036aa4 : ret 0xd521
0x0000000000036b3d : ret 0xd521
0x000000000000089a : ret 0xd5a4
0x00000000000528e2 : ret 0xd5e9
0x00000000000e0bb3 : ret 0xd609
0x000000000005febd : ret 0xd629
0x0000000000062f6e : ret 0xd629
0x00000000000c2462 : ret 0xd629
0x00000000000c2482 : ret 0xd629
0x00000000000c27bd : ret 0xd629
0x00000000000c27dd : ret 0xd629
0x00000000000c3c7e : ret 0xd629
0x00000000000dbaba : ret 0xd639
0x00000000001087ae : ret 0xd6e9
0x00000000000ba5dd : ret 0xd721
0x00000000000ddf61 : ret 0xd739
0x0000000000105e06 : ret 0xd74
0x0000000000127c29 : ret 0xd74
0x00000000000b9529 : ret 0xd76
0x00000000000fb753 : ret 0xd7e8
0x0000000000108153 : ret 0xd7e8
0x00000000000c3554 : ret 0xd801
0x00000000000c3553 : ret 0xd801
0x00000000000aa9ef : ret 0xd889
0x00000000001850e5 : ret 0xd8f
0x00000000000204df : ret 0xd975
0x00000000001152e4 : ret 0xd975
0x00000000000d767d : ret 0xd9eb
0x00000000001230c0 : ret 0xda21
0x00000000001232f0 : ret 0xda21
0x00000000000de8f0 : ret 0xda39
0x00000000001153a3 : ret 0xda75
0x0000000000034eb1 : ret 0xdaf7
0x0000000000045c40 : ret 0xdaf7
0x000000000006d825 : ret 0xdaf7
0x000000000006ffbd : ret 0xdaf7
0x0000000000075f81 : ret 0xdaf7
0x0000000000076e71 : ret 0xdaf7
0x00000000000f7670 : ret 0xdaf7
0x00000000000f7718 : ret 0xdaf7
0x00000000000fb87e : ret 0xdaf7
0x00000000000fdb1c : ret 0xdaf7
0x0000000000115800 : ret 0xdaf7
0x00000000000f0cb2 : ret 0xdb31
0x000000000002539b : ret 0xdb85
0x000000000002539a : ret 0xdb85
0x00000000000bb0f1 : ret 0xdc00
0x00000000000e26b1 : ret 0xdc74
0x00000000001851c6 : ret 0xdcd9
0x00000000001851c5 : ret 0xdcd9
0x00000000000887ce : ret 0xdce8
0x00000000000c84a0 : ret 0xdd72
0x00000000000e0d13 : ret 0xddeb
0x0000000000184142 : ret 0xde5d
0x0000000000074615 : ret 0xde74
0x000000000013a797 : ret 0xde77
0x0000000000045ced : ret 0xde8
0x0000000000182ed1 : ret 0xde9e
0x0000000000182ed0 : ret 0xde9e
0x000000000010f475 : ret 0xdeb
0x000000000008ae49 : ret 0xe000
0x000000000008d029 : ret 0xe000
0x0000000000091799 : ret 0xe000
0x0000000000093df9 : ret 0xe000
0x000000000014f569 : ret 0xe000
0x0000000000150c19 : ret 0xe000
0x0000000000162bd9 : ret 0xe000
0x0000000000165099 : ret 0xe000
0x000000000019c915 : ret 0xe01
0x00000000000b340a : ret 0xe05
0x0000000000170909 : ret 0xe074
0x0000000000023ded : ret 0xe077
0x00000000001247e6 : ret 0xe083
0x00000000001a9cf9 : ret 0xe0a
0x0000000000061cda : ret 0xe0e8
0x000000000012ddba : ret 0xe0ff
0x000000000012ddba : ret 0xe0ff
0x00000000000e287c : ret 0xe174
0x0000000000028555 : ret 0xe183
0x0000000000030389 : ret 0xe1e8
0x000000000002429b : ret 0xe277
0x0000000000024c49 : ret 0xe277
0x0000000000020628 : ret 0xe281
0x0000000000033bbc : ret 0xe281
0x0000000000034dba : ret 0xe281
0x0000000000034f59 : ret 0xe281
0x000000000006d273 : ret 0xe281
0x000000000006d3d7 : ret 0xe281
0x00000000000bc3bd : ret 0xe281
0x00000000000bc49d : ret 0xe281
0x0000000000130143 : ret 0xe281
0x0000000000130176 : ret 0xe281
0x0000000000027352 : ret 0xe283
0x0000000000027360 : ret 0xe283
0x000000000002736e : ret 0xe283
0x000000000004abf8 : ret 0xe283
0x0000000000050308 : ret 0xe283
0x000000000005c18c : ret 0xe283
0x000000000006d5a8 : ret 0xe283
0x0000000000076607 : ret 0xe283
0x000000000007eae5 : ret 0xe283
0x000000000008181c : ret 0xe283
0x00000000000aa939 : ret 0xe283
0x00000000000ba715 : ret 0xe283
0x00000000000c05d8 : ret 0xe283
0x00000000000c071a : ret 0xe283
0x00000000000c1587 : ret 0xe283
0x00000000000c1614 : ret 0xe283
0x00000000000c16dc : ret 0xe283
0x00000000000c174c : ret 0xe283
0x00000000000c1a85 : ret 0xe283
0x00000000000c1afc : ret 0xe283
0x00000000000c1d4c : ret 0xe283
0x00000000000c1ddc : ret 0xe283
0x00000000000c2d05 : ret 0xe283
0x00000000000c2e9d : ret 0xe283
0x00000000000c2f30 : ret 0xe283
0x00000000000c2fef : ret 0xe283
0x00000000000c89b2 : ret 0xe283
0x00000000000d3f23 : ret 0xe283
0x00000000000d3f39 : ret 0xe283
0x00000000000dfdba : ret 0xe283
0x00000000000e0c02 : ret 0xe283
0x00000000000e40c5 : ret 0xe283
0x00000000000e411a : ret 0xe283
0x00000000000e7332 : ret 0xe283
0x00000000000f9cf6 : ret 0xe283
0x00000000000fa3b6 : ret 0xe283
0x00000000000210b9 : ret 0xe2ff
0x000000000006bc8a : ret 0xe2ff
0x000000000006c400 : ret 0xe2ff
0x00000000000c0ef3 : ret 0xe2ff
0x00000000000c1063 : ret 0xe2ff
0x00000000000c325e : ret 0xe2ff
0x00000000000d9c1d : ret 0xe2ff
0x00000000000e2000 : ret 0xe2ff
0x00000000000f213b : ret 0xe2ff
0x00000000000210b9 : ret 0xe2ff
0x000000000006bc8a : ret 0xe2ff
0x000000000006c400 : ret 0xe2ff
0x00000000000c0ef3 : ret 0xe2ff
0x00000000000c1063 : ret 0xe2ff
0x00000000000c325e : ret 0xe2ff
0x00000000000d9c1d : ret 0xe2ff
0x00000000000e2000 : ret 0xe2ff
0x00000000000f213b : ret 0xe2ff
0x000000000004b173 : ret 0xe383
0x0000000000095d26 : ret 0xe3e9
0x00000000000e2469 : ret 0xe474
0x000000000011ead6 : ret 0xe4e8
0x0000000000096b70 : ret 0xe575
0x00000000000ac168 : ret 0xe575
0x000000000007d9b7 : ret 0xe675
0x0000000000050583 : ret 0xe680
0x0000000000052fc7 : ret 0xe680
0x0000000000054f40 : ret 0xe680
0x00000000001852e6 : ret 0xe71f
0x00000000000d90b6 : ret 0xe775
0x00000000000d3678 : ret 0xe777
0x000000000006f1c2 : ret 0xe8
0x00000000000fb174 : ret 0xe801
0x000000000011e18e : ret 0xe801
0x000000000011ee72 : ret 0xe801
0x000000000011f738 : ret 0xe801
0x000000000011f824 : ret 0xe801
0x00000000000d959b : ret 0xe875
0x0000000000116465 : ret 0xe875
0x0000000000051e85 : ret 0xe87f
0x0000000000051eb5 : ret 0xe87f
0x000000000005258d : ret 0xe87f
0x000000000006c20b : ret 0xe883
0x000000000006c858 : ret 0xe883
0x000000000006ccf4 : ret 0xe883
0x000000000006cf2c : ret 0xe883
0x00000000000ad2b2 : ret 0xe883
0x00000000000ad84c : ret 0xe883
0x00000000000bd4a8 : ret 0xe883
0x00000000000bd82a : ret 0xe883
0x00000000000f1f61 : ret 0xe883
0x0000000000101b74 : ret 0xe883
0x00000000001020f4 : ret 0xe883
0x0000000000111e0a : ret 0xe883
0x000000000012aa83 : ret 0xe883
0x000000000012ab81 : ret 0xe883
0x00000000001338d5 : ret 0xe883
0x00000000000cd78f : ret 0xe8b8
0x0000000000020497 : ret 0xe8c1
0x00000000000bbf90 : ret 0xe8c1
0x00000000000bbf90 : ret 0xe8c1
0x00000000001062e6 : ret 0xe8c1
0x000000000010637b : ret 0xe8c1
0x000000000010644b : ret 0xe8c1
0x000000000010651e : ret 0xe8c1
0x00000000001065a6 : ret 0xe8c1
0x0000000000106757 : ret 0xe8c1
0x0000000000106803 : ret 0xe8c1
0x000000000010695a : ret 0xe8c1
0x0000000000106afa : ret 0xe8c1
0x0000000000106ba6 : ret 0xe8c1
0x0000000000106e97 : ret 0xe8c1
0x0000000000106f25 : ret 0xe8c1
0x0000000000106ff8 : ret 0xe8c1
0x00000000001070cf : ret 0xe8c1
0x0000000000107194 : ret 0xe8c1
0x000000000010724e : ret 0xe8c1
0x000000000002ba92 : ret 0xe901
0x000000000008de83 : ret 0xe901
0x000000000008de9d : ret 0xe901
0x000000000008e3e3 : ret 0xe901
0x000000000008e3fb : ret 0xe901
0x000000000009600b : ret 0xe901
0x0000000000096023 : ret 0xe901
0x00000000000963e3 : ret 0xe901
0x00000000000963fb : ret 0xe901
0x000000000002fb2e : ret 0xe902
0x00000000000d02f4 : ret 0xe902
0x0000000000026ec9 : ret 0xe904
0x00000000000bb651 : ret 0xe907
0x0000000000089a56 : ret 0xe908
0x000000000008b256 : ret 0xe908
0x000000000008f946 : ret 0xe908
0x0000000000146e66 : ret 0xe910
0x0000000000147006 : ret 0xe910
0x000000000014719e : ret 0xe910
0x0000000000147346 : ret 0xe910
0x00000000001474e6 : ret 0xe910
0x0000000000147686 : ret 0xe910
0x0000000000147826 : ret 0xe910
0x00000000001479c6 : ret 0xe910
0x0000000000147b66 : ret 0xe910
0x0000000000147d06 : ret 0xe910
0x0000000000147ea6 : ret 0xe910
0x0000000000148046 : ret 0xe910
0x00000000001481e6 : ret 0xe910
0x0000000000148386 : ret 0xe910
0x0000000000148526 : ret 0xe910
0x0000000000148a9e : ret 0xe910
0x0000000000148c7e : ret 0xe910
0x0000000000148e50 : ret 0xe910
0x000000000014902e : ret 0xe910
0x000000000014920e : ret 0xe910
0x00000000001493ee : ret 0xe910
0x00000000001495ce : ret 0xe910
0x00000000001497ae : ret 0xe910
0x000000000014998e : ret 0xe910
0x0000000000149b6e : ret 0xe910
0x0000000000149d4e : ret 0xe910
0x0000000000149f2e : ret 0xe910
0x000000000014a10e : ret 0xe910
0x000000000014a2ee : ret 0xe910
0x000000000014a4ce : ret 0xe910
0x000000000014aca4 : ret 0xe910
0x000000000014adf4 : ret 0xe910
0x000000000014af42 : ret 0xe910
0x000000000014b094 : ret 0xe910
0x000000000014b1e4 : ret 0xe910
0x000000000014b334 : ret 0xe910
0x000000000014b484 : ret 0xe910
0x000000000014b5d4 : ret 0xe910
0x000000000014b724 : ret 0xe910
0x000000000014b874 : ret 0xe910
0x000000000014b9c4 : ret 0xe910
0x000000000014bb14 : ret 0xe910
0x000000000014bc64 : ret 0xe910
0x000000000014bdb4 : ret 0xe910
0x000000000014bf00 : ret 0xe910
0x000000000014c3a8 : ret 0xe910
0x000000000014c528 : ret 0xe910
0x000000000014c6a0 : ret 0xe910
0x000000000014c828 : ret 0xe910
0x000000000014c9a8 : ret 0xe910
0x000000000014cb28 : ret 0xe910
0x000000000014cca8 : ret 0xe910
0x000000000014ce28 : ret 0xe910
0x000000000014cfa8 : ret 0xe910
0x000000000014d128 : ret 0xe910
0x000000000014d2a8 : ret 0xe910
0x000000000014d428 : ret 0xe910
0x000000000014d5a8 : ret 0xe910
0x000000000014d728 : ret 0xe910
0x000000000014d8a4 : ret 0xe910
0x000000000004b70d : ret 0xe920
0x0000000000086393 : ret 0xe96e
0x0000000000183647 : ret 0xe970
0x000000000003bf2c : ret 0xe974
0x000000000003f1ec : ret 0xe974
0x000000000004213c : ret 0xe974
0x00000000000ae50c : ret 0xe974
0x00000000000b0e6c : ret 0xe974
0x00000000000b35fc : ret 0xe974
0x0000000000110c84 : ret 0xe975
0x000000000008653c : ret 0xe977
0x000000000002acaa : ret 0xea
0x000000000004607b : ret 0xea75
0x00000000000aab9a : ret 0xea81
0x000000000004b18a : ret 0xeac0
0x0000000000050507 : ret 0xeac0
0x00000000000c108a : ret 0xeac0
0x00000000000c1277 : ret 0xeac0
0x00000000000d6e92 : ret 0xeac1
0x00000000000d6ed4 : ret 0xeac1
0x00000000000dba14 : ret 0xeac1
0x00000000000dba78 : ret 0xeac1
0x00000000000dba78 : ret 0xeac1
0x00000000000de6c5 : ret 0xeac1
0x00000000000e51d4 : ret 0xeac1
0x000000000012e9e8 : ret 0xeac1
0x000000000012f0a9 : ret 0xeac1
0x000000000012f217 : ret 0xeac1
0x000000000009d4d4 : ret 0xeb01
0x00000000000d02df : ret 0xeb01
0x0000000000123f81 : ret 0xeb01
0x00000000000d778a : ret 0xeb04
0x0000000000144ea6 : ret 0xeb10
0x0000000000144f76 : ret 0xeb10
0x000000000014503c : ret 0xeb10
0x0000000000145106 : ret 0xeb10
0x00000000001451d6 : ret 0xeb10
0x00000000001452a6 : ret 0xeb10
0x0000000000145376 : ret 0xeb10
0x0000000000145446 : ret 0xeb10
0x0000000000145516 : ret 0xeb10
0x00000000001455e6 : ret 0xeb10
0x00000000001456b6 : ret 0xeb10
0x0000000000145786 : ret 0xeb10
0x0000000000145856 : ret 0xeb10
0x0000000000145926 : ret 0xeb10
0x00000000001459ee : ret 0xeb10
0x0000000000145cba : ret 0xeb10
0x0000000000145daa : ret 0xeb10
0x0000000000145e9a : ret 0xeb10
0x0000000000145f8a : ret 0xeb10
0x000000000014607a : ret 0xeb10
0x000000000014616a : ret 0xeb10
0x000000000014625a : ret 0xeb10
0x000000000014634a : ret 0xeb10
0x000000000014643a : ret 0xeb10
0x000000000014652a : ret 0xeb10
0x000000000014661a : ret 0xeb10
0x000000000014670a : ret 0xeb10
0x00000000001467fa : ret 0xeb10
0x00000000001468ea : ret 0xeb10
0x00000000001469d2 : ret 0xeb10
0x00000000000ca1f2 : ret 0xeb11
0x00000000000ca492 : ret 0xeb11
0x00000000000cb702 : ret 0xeb11
0x00000000000cb9a2 : ret 0xeb11
0x000000000010c522 : ret 0xeb11
0x000000000010dca2 : ret 0xeb11
0x000000000011bad2 : ret 0xeb11
0x000000000011c1b2 : ret 0xeb11
0x000000000011c5f2 : ret 0xeb11
0x000000000011ca12 : ret 0xeb11
0x0000000000120e12 : ret 0xeb11
0x0000000000131f92 : ret 0xeb11
0x00000000001321c2 : ret 0xeb11
0x000000000008635f : ret 0xeb5b
0x00000000000394fa : ret 0xeb72
0x0000000000185df8 : ret 0xec2
0x00000000000b8dd5 : ret 0xec77
0x00000000000d79d1 : ret 0xec7f
0x0000000000119648 : ret 0xed75
0x0000000000028098 : ret 0xed85
0x0000000000028097 : ret 0xed85
0x0000000000028f68 : ret 0xed85
0x0000000000028f67 : ret 0xed85
0x000000000003e05a : ret 0xed85
0x00000000000412ea : ret 0xed85
0x00000000000e0df7 : ret 0xee72
0x0000000000022c8f : ret 0xee75
0x0000000000022d07 : ret 0xee75
0x0000000000185a9a : ret 0xef32
0x0000000000072a2e : ret 0xef75
0x000000000007eaae : ret 0xef75
0x00000000000d3219 : ret 0xef7c
0x0000000000005919 : ret 0xf
0x00000000000078f9 : ret 0xf
0x0000000000009c51 : ret 0xf
0x000000000014ffae : ret 0xf
0x000000000008ad09 : ret 0xf000
0x000000000008cea9 : ret 0xf000
0x0000000000091589 : ret 0xf000
0x0000000000093ba9 : ret 0xf000
0x000000000014f449 : ret 0xf000
0x0000000000150aa9 : ret 0xf000
0x00000000001629d9 : ret 0xf000
0x0000000000164e59 : ret 0xf000
0x0000000000025941 : ret 0xf01
0x0000000000028698 : ret 0xf01
0x0000000000029592 : ret 0xf01
0x000000000002f40a : ret 0xf01
0x000000000003421a : ret 0xf01
0x0000000000054c6f : ret 0xf01
0x000000000005cb5d : ret 0xf01
0x000000000008050c : ret 0xf01
0x0000000000080741 : ret 0xf01
0x0000000000080946 : ret 0xf01
0x00000000000809dd : ret 0xf01
0x0000000000080a34 : ret 0xf01
0x0000000000080aac : ret 0xf01
0x0000000000081f5c : ret 0xf01
0x000000000008352c : ret 0xf01
0x00000000000835da : ret 0xf01
0x00000000000bc742 : ret 0xf01
0x00000000000bfc43 : ret 0xf01
0x00000000000c0052 : ret 0xf01
0x00000000000c007b : ret 0xf01
0x00000000000cf087 : ret 0xf01
0x00000000000cfc52 : ret 0xf01
0x00000000000d4d5d : ret 0xf01
0x00000000000ed22e : ret 0xf01
0x00000000000f8d19 : ret 0xf01
0x00000000000fe85a : ret 0xf01
0x00000000000fe8da : ret 0xf01
0x00000000000fe95a : ret 0xf01
0x00000000001215bc : ret 0xf01
0x000000000012162a : ret 0xf01
0x000000000012516f : ret 0xf01
0x0000000000126db6 : ret 0xf01
0x0000000000129426 : ret 0xf01
0x000000000012ac22 : ret 0xf01
0x000000000012516f : ret 0xf01
0x0000000000061bc1 : ret 0xf02
0x0000000000080516 : ret 0xf02
0x00000000000809e7 : ret 0xf02
0x0000000000080a3e : ret 0xf02
0x00000000000817ef : ret 0xf02
0x00000000000835e4 : ret 0xf02
0x000000000008f305 : ret 0xf02
0x00000000000f8c19 : ret 0xf02
0x00000000000f8d79 : ret 0xf02
0x0000000000110111 : ret 0xf02
0x00000000000dc102 : ret 0xf039
0x00000000000dc101 : ret 0xf039
0x000000000006ce2d : ret 0xf04
0x0000000000081e68 : ret 0xf04
0x0000000000081f09 : ret 0xf04
0x0000000000122987 : ret 0xf04
0x000000000012de75 : ret 0xf04
0x000000000013bea8 : ret 0xf04
0x000000000009f9c3 : ret 0xf077
0x000000000001fe5a : ret 0xf08
0x0000000000054221 : ret 0xf08
0x000000000005678e : ret 0xf08
0x00000000000576d0 : ret 0xf08
0x00000000000e4b53 : ret 0xf08
0x000000000011956f : ret 0xf089
0x000000000012067a : ret 0xf0d5
0x000000000009a02b : ret 0xf0e
0x000000000002fb37 : ret 0xf0e9
0x00000000000ec6fe : ret 0xf0e9
0x0000000000081570 : ret 0xf0f
0x00000000000582ea : ret 0xf10
0x0000000000089ea2 : ret 0xf10
0x0000000000089fe2 : ret 0xf10
0x000000000008a122 : ret 0xf10
0x000000000008a262 : ret 0xf10
0x000000000008a3a2 : ret 0xf10
0x000000000008a4e2 : ret 0xf10
0x000000000008a622 : ret 0xf10
0x000000000008a762 : ret 0xf10
0x000000000008a8a2 : ret 0xf10
0x000000000008a9e2 : ret 0xf10
0x000000000008ab22 : ret 0xf10
0x000000000008ac62 : ret 0xf10
0x000000000008ada2 : ret 0xf10
0x000000000008aee2 : ret 0xf10
0x000000000008b022 : ret 0xf10
0x000000000008bd72 : ret 0xf10
0x000000000008bef2 : ret 0xf10
0x000000000008c072 : ret 0xf10
0x000000000008c1f2 : ret 0xf10
0x000000000008c372 : ret 0xf10
0x000000000008c4f2 : ret 0xf10
0x000000000008c672 : ret 0xf10
0x000000000008c7f2 : ret 0xf10
0x000000000008c972 : ret 0xf10
0x000000000008caf2 : ret 0xf10
0x000000000008cc72 : ret 0xf10
0x000000000008cdf2 : ret 0xf10
0x000000000008cf72 : ret 0xf10
0x000000000008d0f2 : ret 0xf10
0x000000000008d272 : ret 0xf10
0x000000000008fda2 : ret 0xf10
0x000000000008fe32 : ret 0xf10
0x000000000008ffb2 : ret 0xf10
0x0000000000090042 : ret 0xf10
0x00000000000901c2 : ret 0xf10
0x0000000000090252 : ret 0xf10
0x00000000000903d2 : ret 0xf10
0x0000000000090462 : ret 0xf10
0x00000000000905e2 : ret 0xf10
0x0000000000090672 : ret 0xf10
0x00000000000907f2 : ret 0xf10
0x0000000000090882 : ret 0xf10
0x0000000000090a02 : ret 0xf10
0x0000000000090a92 : ret 0xf10
0x0000000000090c12 : ret 0xf10
0x0000000000090ca2 : ret 0xf10
0x0000000000090e22 : ret 0xf10
0x0000000000090eb2 : ret 0xf10
0x0000000000091032 : ret 0xf10
0x00000000000910c2 : ret 0xf10
0x0000000000091242 : ret 0xf10
0x00000000000912d2 : ret 0xf10
0x0000000000091452 : ret 0xf10
0x00000000000914e2 : ret 0xf10
0x0000000000091662 : ret 0xf10
0x00000000000916f2 : ret 0xf10
0x0000000000091872 : ret 0xf10
0x0000000000091902 : ret 0xf10
0x0000000000091a82 : ret 0xf10
0x0000000000091b12 : ret 0xf10
0x00000000000920f2 : ret 0xf10
0x000000000009218c : ret 0xf10
0x0000000000092342 : ret 0xf10
0x00000000000923dc : ret 0xf10
0x0000000000092592 : ret 0xf10
0x000000000009262c : ret 0xf10
0x00000000000927e2 : ret 0xf10
0x000000000009287c : ret 0xf10
0x0000000000092a32 : ret 0xf10
0x0000000000092acc : ret 0xf10
0x0000000000092c82 : ret 0xf10
0x0000000000092d1c : ret 0xf10
0x0000000000092ed2 : ret 0xf10
0x0000000000092f6c : ret 0xf10
0x0000000000093122 : ret 0xf10
0x00000000000931bc : ret 0xf10
0x0000000000093372 : ret 0xf10
0x000000000009340c : ret 0xf10
0x00000000000935c2 : ret 0xf10
0x000000000009365c : ret 0xf10
0x0000000000093812 : ret 0xf10
0x00000000000938ac : ret 0xf10
0x0000000000093a62 : ret 0xf10
0x0000000000093afc : ret 0xf10
0x0000000000093cb2 : ret 0xf10
0x0000000000093d4c : ret 0xf10
0x0000000000093f02 : ret 0xf10
0x0000000000093f9c : ret 0xf10
0x0000000000094152 : ret 0xf10
0x00000000000941ec : ret 0xf10
0x00000000000a12ab : ret 0xf10
0x00000000000a2ecb : ret 0xf10
0x00000000000e757d : ret 0xf10
0x0000000000110346 : ret 0xf10
0x0000000000146d92 : ret 0xf10
0x0000000000146f32 : ret 0xf10
0x00000000001470ca : ret 0xf10
0x0000000000147272 : ret 0xf10
0x0000000000147412 : ret 0xf10
0x00000000001475b2 : ret 0xf10
0x0000000000147752 : ret 0xf10
0x00000000001478f2 : ret 0xf10
0x0000000000147a92 : ret 0xf10
0x0000000000147c32 : ret 0xf10
0x0000000000147dd2 : ret 0xf10
0x0000000000147f72 : ret 0xf10
0x0000000000148112 : ret 0xf10
0x00000000001482b2 : ret 0xf10
0x0000000000148452 : ret 0xf10
0x00000000001489b2 : ret 0xf10
0x0000000000148a2a : ret 0xf10
0x0000000000148b92 : ret 0xf10
0x0000000000148c0a : ret 0xf10
0x0000000000148d64 : ret 0xf10
0x0000000000148ddc : ret 0xf10
0x0000000000148f42 : ret 0xf10
0x0000000000148fba : ret 0xf10
0x0000000000149122 : ret 0xf10
0x000000000014919a : ret 0xf10
0x0000000000149302 : ret 0xf10
0x000000000014937a : ret 0xf10
0x00000000001494e2 : ret 0xf10
0x000000000014955a : ret 0xf10
0x00000000001496c2 : ret 0xf10
0x000000000014973a : ret 0xf10
0x00000000001498a2 : ret 0xf10
0x000000000014991a : ret 0xf10
0x0000000000149a82 : ret 0xf10
0x0000000000149afa : ret 0xf10
0x0000000000149c62 : ret 0xf10
0x0000000000149cda : ret 0xf10
0x0000000000149e42 : ret 0xf10
0x0000000000149eba : ret 0xf10
0x000000000014a022 : ret 0xf10
0x000000000014a09a : ret 0xf10
0x000000000014a202 : ret 0xf10
0x000000000014a27a : ret 0xf10
0x000000000014a3e2 : ret 0xf10
0x000000000014a45a : ret 0xf10
0x000000000014ac02 : ret 0xf10
0x000000000014ad52 : ret 0xf10
0x000000000014aea0 : ret 0xf10
0x000000000014aff2 : ret 0xf10
0x000000000014b142 : ret 0xf10
0x000000000014b292 : ret 0xf10
0x000000000014b3e2 : ret 0xf10
0x000000000014b532 : ret 0xf10
0x000000000014b682 : ret 0xf10
0x000000000014b7d2 : ret 0xf10
0x000000000014b922 : ret 0xf10
0x000000000014ba72 : ret 0xf10
0x000000000014bbc2 : ret 0xf10
0x000000000014bd12 : ret 0xf10
0x000000000014be62 : ret 0xf10
0x000000000014c2f2 : ret 0xf10
0x000000000014c472 : ret 0xf10
0x000000000014c5ea : ret 0xf10
0x000000000014c772 : ret 0xf10
0x000000000014c8f2 : ret 0xf10
0x000000000014ca72 : ret 0xf10
0x000000000014cbf2 : ret 0xf10
0x000000000014cd72 : ret 0xf10
0x000000000014cef2 : ret 0xf10
0x000000000014d072 : ret 0xf10
0x000000000014d1f2 : ret 0xf10
0x000000000014d372 : ret 0xf10
0x000000000014d4f2 : ret 0xf10
0x000000000014d672 : ret 0xf10
0x000000000014d7f2 : ret 0xf10
0x000000000014fa32 : ret 0xf10
0x000000000014fba2 : ret 0xf10
0x000000000014fd12 : ret 0xf10
0x000000000014fe82 : ret 0xf10
0x000000000014fff2 : ret 0xf10
0x0000000000150162 : ret 0xf10
0x00000000001502d2 : ret 0xf10
0x0000000000150442 : ret 0xf10
0x00000000001505b2 : ret 0xf10
0x0000000000150722 : ret 0xf10
0x0000000000150892 : ret 0xf10
0x0000000000150a02 : ret 0xf10
0x0000000000150b72 : ret 0xf10
0x0000000000150ce2 : ret 0xf10
0x0000000000150e52 : ret 0xf10
0x00000000001612b2 : ret 0xf10
0x000000000016133a : ret 0xf10
0x00000000001614b2 : ret 0xf10
0x000000000016153a : ret 0xf10
0x00000000001616b2 : ret 0xf10
0x000000000016173a : ret 0xf10
0x00000000001618b2 : ret 0xf10
0x000000000016193a : ret 0xf10
0x0000000000161ab2 : ret 0xf10
0x0000000000161b3a : ret 0xf10
0x0000000000161cb2 : ret 0xf10
0x0000000000161d3a : ret 0xf10
0x0000000000161eb2 : ret 0xf10
0x0000000000161f3a : ret 0xf10
0x00000000001620b2 : ret 0xf10
0x000000000016213a : ret 0xf10
0x00000000001622b2 : ret 0xf10
0x000000000016233a : ret 0xf10
0x00000000001624b2 : ret 0xf10
0x000000000016253a : ret 0xf10
0x00000000001626b2 : ret 0xf10
0x000000000016273a : ret 0xf10
0x00000000001628b2 : ret 0xf10
0x000000000016293a : ret 0xf10
0x0000000000162ab2 : ret 0xf10
0x0000000000162b3a : ret 0xf10
0x0000000000162cb2 : ret 0xf10
0x0000000000162d3a : ret 0xf10
0x0000000000162eb2 : ret 0xf10
0x0000000000162f3a : ret 0xf10
0x0000000000163462 : ret 0xf10
0x00000000001634f4 : ret 0xf10
0x00000000001636a2 : ret 0xf10
0x0000000000163734 : ret 0xf10
0x00000000001638e2 : ret 0xf10
0x0000000000163974 : ret 0xf10
0x0000000000163b22 : ret 0xf10
0x0000000000163bb4 : ret 0xf10
0x0000000000163d62 : ret 0xf10
0x0000000000163df4 : ret 0xf10
0x0000000000163fa2 : ret 0xf10
0x0000000000164034 : ret 0xf10
0x00000000001641e2 : ret 0xf10
0x0000000000164274 : ret 0xf10
0x0000000000164422 : ret 0xf10
0x00000000001644b4 : ret 0xf10
0x0000000000164662 : ret 0xf10
0x00000000001646f4 : ret 0xf10
0x00000000001648a2 : ret 0xf10
0x0000000000164934 : ret 0xf10
0x0000000000164ae2 : ret 0xf10
0x0000000000164b74 : ret 0xf10
0x0000000000164d22 : ret 0xf10
0x0000000000164db4 : ret 0xf10
0x0000000000164f62 : ret 0xf10
0x0000000000164ff4 : ret 0xf10
0x00000000001651a2 : ret 0xf10
0x0000000000165234 : ret 0xf10
0x00000000001653e2 : ret 0xf10
0x0000000000165474 : ret 0xf10
0x000000000009f22c : ret 0xf188
0x0000000000020341 : ret 0xf189
0x00000000000fc239 : ret 0xf1e8
0x0000000000108339 : ret 0xf1e8
0x000000000006ee5c : ret 0xf20
0x00000000000a12b4 : ret 0xf20
0x00000000000a2ed4 : ret 0xf20
0x000000000011703e : ret 0xf20
0x000000000008b3f9 : ret 0xf201
0x000000000006c375 : ret 0xf229
0x000000000006cab5 : ret 0xf229
0x0000000000188318 : ret 0xf229
0x000000000002c1b8 : ret 0xf2e8
0x0000000000037614 : ret 0xf301
0x00000000000381ef : ret 0xf301
0x00000000000386c3 : ret 0xf301
0x0000000000038ba0 : ret 0xf301
0x00000000001393ca : ret 0xf315
0x000000000012390e : ret 0xf3c3
0x000000000012390d : ret 0xf3c3
0x00000000000e14e2 : ret 0xf3e3
0x00000000000567ca : ret 0xf40
0x00000000000a12bd : ret 0xf40
0x00000000000a2edd : ret 0xf40
0x00000000000e42f3 : ret 0xf40
0x0000000000129a69 : ret 0xf40
0x0000000000129d79 : ret 0xf40
0x0000000000140a71 : ret 0xf40
0x000000000014a63e : ret 0xf40
0x000000000014a77a : ret 0xf40
0x000000000009a6fe : ret 0xf41
0x000000000009eb48 : ret 0xf41
0x000000000009ebf4 : ret 0xf41
0x000000000009ec88 : ret 0xf41
0x00000000000cf825 : ret 0xf41
0x00000000000d95a2 : ret 0xf41
0x00000000000deafb : ret 0xf44
0x00000000000e3ed0 : ret 0xf44
0x00000000000dc585 : ret 0xf45
0x000000000003cbc6 : ret 0xf48
0x000000000003d938 : ret 0xf48
0x000000000003feb6 : ret 0xf48
0x0000000000040c30 : ret 0xf48
0x0000000000042d9d : ret 0xf48
0x0000000000043af4 : ret 0xf48
0x00000000000724ba : ret 0xf48
0x000000000008d5df : ret 0xf48
0x000000000009f2ec : ret 0xf48
0x00000000000af03e : ret 0xf48
0x00000000000af9fd : ret 0xf48
0x00000000000b18c0 : ret 0xf48
0x00000000000b2325 : ret 0xf48
0x00000000000b4137 : ret 0xf48
0x00000000000b4b10 : ret 0xf48
0x00000000000b78a8 : ret 0xf48
0x0000000000105e29 : ret 0xf48
0x00000000001096fe : ret 0xf48
0x00000000000f113a : ret 0xf48b
0x00000000000e337a : ret 0xf4a8
0x0000000000052ef7 : ret 0xf4c
0x0000000000052ef6 : ret 0xf4c
0x0000000000053f6e : ret 0xf4c
0x0000000000053f6d : ret 0xf4c
0x0000000000100aaa : ret 0xf4c6
0x00000000000ccfe2 : ret 0xf528
0x00000000000ccfe2 : ret 0xf528
0x00000000000d7256 : ret 0xf53
0x0000000000097275 : ret 0xf5e8
0x00000000000c15c8 : ret 0xf601
0x00000000000c178d : ret 0xf601
0x00000000000c1b41 : ret 0xf601
0x00000000000c1d8d : ret 0xf601
0x00000000000c1e1d : ret 0xf601
0x00000000000c2ede : ret 0xf601
0x00000000000c2f71 : ret 0xf601
0x000000000010ba1a : ret 0xf61e
0x0000000000049aa2 : ret 0xf631
0x0000000000049aa1 : ret 0xf631
0x00000000000c89bf : ret 0xf631
0x00000000000ea922 : ret 0xf631
0x0000000000111ef6 : ret 0xf631
0x0000000000143e99 : ret 0xf631
0x000000000011962b : ret 0xf641
0x000000000011959b : ret 0xf643
0x0000000000034abb : ret 0xf66
0x0000000000089ca9 : ret 0xf66
0x000000000008b775 : ret 0xf66
0x000000000008b7d3 : ret 0xf66
0x000000000008b897 : ret 0xf66
0x000000000008b91f : ret 0xf66
0x000000000008b993 : ret 0xf66
0x000000000008ba58 : ret 0xf66
0x000000000008bab3 : ret 0xf66
0x000000000008d539 : ret 0xf66
0x000000000008d57b : ret 0xf66
0x0000000000096949 : ret 0xf66
0x000000000009f6e6 : ret 0xf66
0x000000000009f6ea : ret 0xf66
0x00000000000a1584 : ret 0xf66
0x00000000000a15fc : ret 0xf66
0x00000000000a16fb : ret 0xf66
0x00000000000a183b : ret 0xf66
0x00000000000a197b : ret 0xf66
0x00000000000a1abb : ret 0xf66
0x00000000000a1bfb : ret 0xf66
0x00000000000a1d3b : ret 0xf66
0x00000000000a1e8b : ret 0xf66
0x00000000000a1fdb : ret 0xf66
0x00000000000a211b : ret 0xf66
0x00000000000a225b : ret 0xf66
0x00000000000a239b : ret 0xf66
0x00000000000a24db : ret 0xf66
0x00000000000a261b : ret 0xf66
0x00000000000a275b : ret 0xf66
0x00000000000a289b : ret 0xf66
0x00000000000a31f9 : ret 0xf66
0x00000000000a3299 : ret 0xf66
0x00000000000a33cb : ret 0xf66
0x00000000000a354b : ret 0xf66
0x00000000000a36cb : ret 0xf66
0x00000000000a384b : ret 0xf66
0x00000000000a39cb : ret 0xf66
0x00000000000a3b4b : ret 0xf66
0x00000000000a3ccb : ret 0xf66
0x00000000000a3e4b : ret 0xf66
0x00000000000a3fcb : ret 0xf66
0x00000000000a414b : ret 0xf66
0x00000000000a42cb : ret 0xf66
0x00000000000a444b : ret 0xf66
0x00000000000a45cb : ret 0xf66
0x00000000000a474b : ret 0xf66
0x00000000000a48cb : ret 0xf66
0x00000000000a5a4c : ret 0xf66
0x00000000000a5ac8 : ret 0xf66
0x00000000000a609f : ret 0xf66
0x00000000000a6143 : ret 0xf66
0x00000000000a704c : ret 0xf66
0x00000000000a70c8 : ret 0xf66
0x00000000000a772f : ret 0xf66
0x00000000000a77d3 : ret 0xf66
0x00000000000a8b2c : ret 0xf66
0x00000000000a8ba8 : ret 0xf66
0x00000000000a943f : ret 0xf66
0x00000000000a94e3 : ret 0xf66
0x00000000000aa2a4 : ret 0xf66
0x00000000000ab286 : ret 0xf66
0x00000000000ab2a8 : ret 0xf66
0x00000000000ab2ca : ret 0xf66
0x00000000000ab607 : ret 0xf66
0x00000000000ab637 : ret 0xf66
0x00000000000ab658 : ret 0xf66
0x00000000000ab687 : ret 0xf66
0x00000000000ab6a8 : ret 0xf66
0x00000000000ab6ca : ret 0xf66
0x00000000000af26c : ret 0xf66
0x00000000000b1aec : ret 0xf66
0x00000000000b436c : ret 0xf66
0x00000000000df3e6 : ret 0xf66
0x00000000000eaa49 : ret 0xf66
0x0000000000105de9 : ret 0xf66
0x0000000000109e39 : ret 0xf66
0x00000000001156b8 : ret 0xf66
0x000000000015a543 : ret 0xf66
0x000000000015a542 : ret 0xf66
0x000000000015d013 : ret 0xf66
0x000000000015d012 : ret 0xf66
0x000000000015faf3 : ret 0xf66
0x000000000015faf2 : ret 0xf66
0x00000000001657b3 : ret 0xf66
0x000000000016582b : ret 0xf66
0x000000000016592b : ret 0xf66
0x0000000000165a6b : ret 0xf66
0x0000000000165bab : ret 0xf66
0x0000000000165ceb : ret 0xf66
0x0000000000165e2b : ret 0xf66
0x0000000000165f6b : ret 0xf66
0x00000000001660bb : ret 0xf66
0x000000000016620b : ret 0xf66
0x000000000016634b : ret 0xf66
0x000000000016648b : ret 0xf66
0x00000000001665cb : ret 0xf66
0x000000000016670b : ret 0xf66
0x000000000016684b : ret 0xf66
0x000000000016698b : ret 0xf66
0x0000000000166acb : ret 0xf66
0x0000000000166fbb : ret 0xf66
0x000000000016705b : ret 0xf66
0x000000000016719b : ret 0xf66
0x000000000016731b : ret 0xf66
0x000000000016749b : ret 0xf66
0x000000000016761b : ret 0xf66
0x000000000016779b : ret 0xf66
0x000000000016791b : ret 0xf66
0x0000000000167a9b : ret 0xf66
0x0000000000167c1b : ret 0xf66
0x0000000000167d9b : ret 0xf66
0x0000000000167f1b : ret 0xf66
0x000000000016809b : ret 0xf66
0x000000000016821b : ret 0xf66
0x000000000016839b : ret 0xf66
0x000000000016851b : ret 0xf66
0x000000000016869b : ret 0xf66
0x0000000000169ae3 : ret 0xf66
0x0000000000169b5b : ret 0xf66
0x0000000000169c5b : ret 0xf66
0x0000000000169d9b : ret 0xf66
0x0000000000169edb : ret 0xf66
0x000000000016a01b : ret 0xf66
0x000000000016a15b : ret 0xf66
0x000000000016a29b : ret 0xf66
0x000000000016a3eb : ret 0xf66
0x000000000016a53b : ret 0xf66
0x000000000016a67b : ret 0xf66
0x000000000016a7bb : ret 0xf66
0x000000000016a8fb : ret 0xf66
0x000000000016aa3b : ret 0xf66
0x000000000016ab7b : ret 0xf66
0x000000000016acbb : ret 0xf66
0x000000000016adfb : ret 0xf66
0x000000000016b34b : ret 0xf66
0x000000000016b3eb : ret 0xf66
0x000000000016b52b : ret 0xf66
0x000000000016b6ab : ret 0xf66
0x000000000016b82b : ret 0xf66
0x000000000016b9ab : ret 0xf66
0x000000000016bb2b : ret 0xf66
0x000000000016bcab : ret 0xf66
0x000000000016be2b : ret 0xf66
0x000000000016bfab : ret 0xf66
0x000000000016c12b : ret 0xf66
0x000000000016c2ab : ret 0xf66
0x000000000016c42b : ret 0xf66
0x000000000016c5ab : ret 0xf66
0x000000000016c72b : ret 0xf66
0x000000000016c8ab : ret 0xf66
0x000000000016ca2b : ret 0xf66
0x000000000016de52 : ret 0xf66
0x000000000016deca : ret 0xf66
0x000000000016dfeb : ret 0xf66
0x000000000016e12b : ret 0xf66
0x000000000016e26b : ret 0xf66
0x000000000018a988 : ret 0xf678
0x00000000000ff2b4 : ret 0xf683
0x00000000000aa7bc : ret 0xf685
0x000000000010536a : ret 0xf6b7
0x0000000000035d5d : ret 0xf701
0x00000000000821c3 : ret 0xf710
0x0000000000049b15 : ret 0xf74
0x0000000000047645 : ret 0xf741
0x000000000011d943 : ret 0xf741
0x000000000008f6ec : ret 0xf748
0x00000000000947bc : ret 0xf748
0x00000000000951f8 : ret 0xf748
0x0000000000095640 : ret 0xf748
0x00000000000bce10 : ret 0xf748
0x0000000000048774 : ret 0xf749
0x0000000000096050 : ret 0xf749
0x000000000009604f : ret 0xf749
0x00000000000dcc0d : ret 0xf749
0x0000000000100cea : ret 0xf775
0x00000000000ff94a : ret 0xf788
0x00000000000bd0aa : ret 0xf7c6
0x0000000000113d38 : ret 0xf7e
0x0000000000052bd3 : ret 0xf7e9
0x00000000000dff5c : ret 0xf80
0x000000000014dcce : ret 0xf80
0x000000000014de12 : ret 0xf80
0x000000000014e1ae : ret 0xf80
0x000000000014e54e : ret 0xf80
0x000000000008abc9 : ret 0xf800
0x000000000008cd29 : ret 0xf800
0x0000000000091379 : ret 0xf800
0x0000000000093959 : ret 0xf800
0x000000000009d4e7 : ret 0xf800
0x000000000009d9c8 : ret 0xf800
0x000000000009e402 : ret 0xf800
0x000000000014f329 : ret 0xf800
0x0000000000150939 : ret 0xf800
0x00000000001627d9 : ret 0xf800
0x0000000000164c19 : ret 0xf800
0x0000000000182db0 : ret 0xf869
0x00000000000aed85 : ret 0xf883
0x00000000000b16ae : ret 0xf883
0x00000000000b3e65 : ret 0xf883
0x000000000013b211 : ret 0xf883
0x00000000000c5f55 : ret 0xf889
0x00000000000c2229 : ret 0xf8c1
0x000000000002100d : ret 0xf8e9
0x0000000000127870 : ret 0xf980
0x0000000000063814 : ret 0xf983
0x00000000000ad59f : ret 0xf983
0x00000000000d2afd : ret 0xf983
0x00000000000c416f : ret 0xfa29
0x000000000007b9e2 : ret 0xfa3e
0x00000000000523c0 : ret 0xfa80
0x000000000003dee2 : ret 0xfa81
0x00000000000b501a : ret 0xfa81
0x0000000000029a79 : ret 0xfa83
0x00000000000d79a4 : ret 0xfa83
0x0000000000073ce2 : ret 0xfabb
0x0000000000032982 : ret 0xfac1
0x00000000000dba7d : ret 0xfad1
0x00000000000733b0 : ret 0xfae8
0x0000000000141d4a : ret 0xfb58
0x0000000000127c21 : ret 0xfb80
0x00000000000d9bee : ret 0xfb83
0x0000000000123c38 : ret 0xfb83
0x000000000008aa89 : ret 0xfc00
0x000000000008cba9 : ret 0xfc00
0x0000000000091169 : ret 0xfc00
0x0000000000093709 : ret 0xfc00
0x000000000014f209 : ret 0xfc00
0x00000000001507c9 : ret 0xfc00
0x00000000001625d9 : ret 0xfc00
0x00000000001649d9 : ret 0xfc00
0x000000000003f4d6 : ret 0xfc01
0x00000000000ae7e6 : ret 0xfc01
0x000000000003f48a : ret 0xfc02
0x00000000000ae79a : ret 0xfc02
0x00000000000ffe21 : ret 0xfc07
0x00000000001011c7 : ret 0xfc07
0x000000000005c8da : ret 0xfc2f
0x000000000008b419 : ret 0xfc3
0x000000000008b419 : ret 0xfc3
0x000000000008d7ba : ret 0xfc3
0x000000000008d7b9 : ret 0xfc3
0x00000000000cbf81 : ret 0xfc3
0x00000000000cbf80 : ret 0xfc3
0x00000000000cd9b2 : ret 0xfc3
0x00000000000cd9b1 : ret 0xfc3
0x00000000000cdae2 : ret 0xfc3
0x00000000000cdae1 : ret 0xfc3
0x00000000000f767a : ret 0xfc3
0x00000000000f7679 : ret 0xfc3
0x00000000001238b3 : ret 0xfc3
0x00000000001238b2 : ret 0xfc3
0x00000000001238d1 : ret 0xfc3
0x00000000001238d0 : ret 0xfc3
0x0000000000195a3c : ret 0xfc53
0x0000000000195a34 : ret 0xfc54
0x0000000000195a2c : ret 0xfc55
0x0000000000195a24 : ret 0xfc56
0x0000000000195a1c : ret 0xfc57
0x0000000000195828 : ret 0xfc5f
0x0000000000057fda : ret 0xfc78
0x0000000000195d14 : ret 0xfc87
0x0000000000196414 : ret 0xfca4
0x000000000019624c : ret 0xfca7
0x000000000004b3e2 : ret 0xfd44
0x00000000000aa8c8 : ret 0xfd83
0x000000000002f3e0 : ret 0xfdf
0x000000000008a949 : ret 0xfe00
0x000000000008ca29 : ret 0xfe00
0x0000000000090f59 : ret 0xfe00
0x00000000000934b9 : ret 0xfe00
0x000000000014f0e9 : ret 0xfe00
0x0000000000150659 : ret 0xfe00
0x00000000001623d9 : ret 0xfe00
0x0000000000164799 : ret 0xfe00
0x00000000000aa8e9 : ret 0xfe83
0x0000000000121328 : ret 0xfe9
0x0000000000121327 : ret 0xfe9
0x0000000000044b7a : ret 0xfe90
0x0000000000033ee2 : ret 0xfeb9
0x000000000014dbee : ret 0xfec5
0x000000000014e0cf : ret 0xfec5
0x000000000014e46f : ret 0xfec5
0x000000000008a809 : ret 0xff00
0x000000000008c8a9 : ret 0xff00
0x0000000000090d49 : ret 0xff00
0x0000000000093269 : ret 0xff00
0x000000000014efc9 : ret 0xff00
0x00000000001504e9 : ret 0xff00
0x00000000001621d9 : ret 0xff00
0x0000000000164559 : ret 0xff00
0x00000000001242ea : ret 0xff0d
0x0000000000044d4f : ret 0xff2
0x00000000000b6320 : ret 0xff2
0x000000000015abb1 : ret 0xff2
0x000000000015abb0 : ret 0xff2
0x000000000015d681 : ret 0xff2
0x000000000015d680 : ret 0xff2
0x00000000001601a1 : ret 0xff2
0x00000000001601a0 : ret 0xff2
0x00000000000b7450 : ret 0xff25
0x00000000000da626 : ret 0xff25
0x00000000000da729 : ret 0xff25
0x000000000009f68a : ret 0xff3
0x000000000009f697 : ret 0xff3
0x00000000000a5c10 : ret 0xff3
0x00000000000a62c2 : ret 0xff3
0x00000000000a7210 : ret 0xff3
0x00000000000a7957 : ret 0xff3
0x00000000000a8cf0 : ret 0xff3
0x00000000000a9665 : ret 0xff3
0x00000000000aa264 : ret 0xff3
0x000000000015abac : ret 0xff3
0x000000000015abab : ret 0xff3
0x000000000015d67c : ret 0xff3
0x000000000015d67b : ret 0xff3
0x000000000016019c : ret 0xff3
0x000000000016019b : ret 0xff3
0x000000000016f88f : ret 0xff3
0x0000000000089165 : ret 0xff31
0x00000000000f670a : ret 0xff31
0x00000000001013b1 : ret 0xff31
0x000000000010148e : ret 0xff31
0x000000000010515d : ret 0xff31
0x00000000001092a8 : ret 0xff31
0x000000000011e2c3 : ret 0xff31
0x000000000011e2e8 : ret 0xff31
0x000000000011e721 : ret 0xff31
0x0000000000134cd2 : ret 0xff31
0x0000000000134f92 : ret 0xff31
0x0000000000139b62 : ret 0xff31
0x000000000013a1c9 : ret 0xff31
0x000000000009e8cd : ret 0xff41
0x000000000009e996 : ret 0xff41
0x000000000009e8cd : ret 0xff41
0x000000000009e996 : ret 0xff41
0x000000000002b3e2 : ret 0xff44
0x0000000000089904 : ret 0xff48
0x000000000008991e : ret 0xff48
0x0000000000089938 : ret 0xff48
0x0000000000089952 : ret 0xff48
0x000000000008e71d : ret 0xff48
0x000000000008e720 : ret 0xff48
0x000000000008e81c : ret 0xff48
0x000000000008e81f : ret 0xff48
0x000000000007fc4a : ret 0xff78
0x000000000008a6c9 : ret 0xff80
0x000000000008c729 : ret 0xff80
0x0000000000090b39 : ret 0xff80
0x0000000000093019 : ret 0xff80
0x000000000014eea9 : ret 0xff80
0x0000000000150379 : ret 0xff80
0x0000000000161fd9 : ret 0xff80
0x0000000000164319 : ret 0xff80
0x000000000003c216 : ret 0xff81
0x00000000000b38d6 : ret 0xff81
0x00000000001266d0 : ret 0xff81
0x00000000001266cf : ret 0xff81
0x000000000003c1ca : ret 0xff82
0x00000000000b388a : ret 0xff82
0x0000000000063832 : ret 0xff83
0x00000000001238ee : ret 0xff83
0x00000000001238ed : ret 0xff83
0x00000000001238fe : ret 0xff83
0x00000000001238fd : ret 0xff83
0x000000000008288a : ret 0xffae
0x0000000000069de9 : ret 0xffaf
0x000000000001f96b : ret 0xffb8
0x000000000001f9ae : ret 0xffb8
0x000000000006022a : ret 0xffb8
0x000000000007460e : ret 0xffb8
0x000000000007460e : ret 0xffb8
0x000000000007a3e3 : ret 0xffb8
0x00000000000fcb2d : ret 0xffb8
0x000000000012e83d : ret 0xffb8
0x0000000000142ac7 : ret 0xffb8
0x0000000000042317 : ret 0xffbf
0x0000000000067736 : ret 0xffbf
0x00000000000b1037 : ret 0xffbf
0x000000000008a589 : ret 0xffc0
0x000000000008c5a9 : ret 0xffc0
0x000000000008f6ef : ret 0xffc0
0x0000000000090929 : ret 0xffc0
0x0000000000092dc9 : ret 0xffc0
0x00000000000947bf : ret 0xffc0
0x000000000014ed89 : ret 0xffc0
0x0000000000150209 : ret 0xffc0
0x0000000000161dd9 : ret 0xffc0
0x00000000001640d9 : ret 0xffc0
0x000000000009c00c : ret 0xffd0
0x000000000009e7e9 : ret 0xffd3
0x000000000009c2fc : ret 0xffd7
0x0000000000087681 : ret 0xffdf
0x000000000008a449 : ret 0xffe0
0x000000000008c429 : ret 0xffe0
0x0000000000090719 : ret 0xffe0
0x0000000000092b79 : ret 0xffe0
0x000000000014ec69 : ret 0xffe0
0x0000000000150099 : ret 0xffe0
0x0000000000161bd9 : ret 0xffe0
0x0000000000163e99 : ret 0xffe0
0x0000000000057afa : ret 0xffe1
0x0000000000066b2d : ret 0xffe5
0x0000000000020fda : ret 0xffe8
0x0000000000103f5a : ret 0xffe8
0x0000000000021005 : ret 0xffe9
0x0000000000103e5a : ret 0xffe9
0x00000000001735f6 : ret 0xffea
0x0000000000173608 : ret 0xffea
0x0000000000173658 : ret 0xffea
0x0000000000173657 : ret 0xffea
0x0000000000040f87 : ret 0xffec
0x00000000000c7333 : ret 0xffec
0x000000000014369f : ret 0xffed
0x00000000001335b8 : ret 0xffee
0x00000000001335c5 : ret 0xffee
0x0000000000133677 : ret 0xffee
0x0000000000133676 : ret 0xffee
0x000000000013367f : ret 0xffee
0x000000000013367e : ret 0xffee
0x00000000001419e4 : ret 0xffee
0x000000000003b58c : ret 0xffef
0x000000000003ba5c : ret 0xffef
0x00000000000c1557 : ret 0xffef
0x00000000000c1d42 : ret 0xffef
0x00000000000c4a9b : ret 0xffef
0x000000000008a309 : ret 0xfff0
0x000000000008c2a9 : ret 0xfff0
0x0000000000090509 : ret 0xfff0
0x0000000000092929 : ret 0xfff0
0x000000000014eb49 : ret 0xfff0
0x000000000014ff29 : ret 0xfff0
0x00000000001619d9 : ret 0xfff0
0x0000000000163c59 : ret 0xfff0
0x0000000000031d08 : ret 0xfff1
0x00000000000f55c2 : ret 0xfff1
0x00000000001123cd : ret 0xfff1
0x00000000000f35c5 : ret 0xfff2
0x00000000000f3614 : ret 0xfff2
0x00000000000f3662 : ret 0xfff2
0x00000000000f3661 : ret 0xfff2
0x00000000000f3fdf : ret 0xfff2
0x00000000000c47d7 : ret 0xfff3
0x00000000000e3568 : ret 0xfff3
0x00000000000e35ab : ret 0xfff3
0x00000000000e35b4 : ret 0xfff3
0x00000000000e35bc : ret 0xfff3
0x00000000000b071e : ret 0xfff4
0x00000000000b5ea8 : ret 0xfff4
0x00000000000ed474 : ret 0xfff4
0x000000000009e6b5 : ret 0xfff5
0x00000000000c0a40 : ret 0xfff5
0x00000000001b21d9 : ret 0xfff5
0x00000000000ef64e : ret 0xfff6
0x00000000001998d9 : ret 0xfff6
0x00000000000b194c : ret 0xfff7
0x000000000004ec76 : ret 0xfff8
0x000000000008a1c9 : ret 0xfff8
0x000000000008c129 : ret 0xfff8
0x000000000008f505 : ret 0xfff8
0x00000000000902f9 : ret 0xfff8
0x00000000000926d9 : ret 0xfff8
0x00000000000945d5 : ret 0xfff8
0x00000000000a9f83 : ret 0xfff8
0x00000000000db8c2 : ret 0xfff8
0x000000000014ea29 : ret 0xfff8
0x000000000014fdb9 : ret 0xfff8
0x00000000001617d9 : ret 0xfff8
0x0000000000163a19 : ret 0xfff8
0x00000000000346c6 : ret 0xfff9
0x00000000000804dd : ret 0xfff9
0x00000000000c260e : ret 0xfff9
0x000000000019ae21 : ret 0xfff9
0x000000000019ae29 : ret 0xfff9
0x000000000005115a : ret 0xfffa
0x0000000000113918 : ret 0xfffa
0x00000000001271fa : ret 0xfffa
0x000000000013ed1f : ret 0xfffa
0x000000000019b659 : ret 0xfffa
0x000000000002b0b3 : ret 0xfffb
0x00000000000cf510 : ret 0xfffb
0x00000000000fc042 : ret 0xfffb
0x00000000001042cf : ret 0xfffb
0x0000000000105b3a : ret 0xfffb
0x0000000000195359 : ret 0xfffb
0x0000000000195359 : ret 0xfffb
0x00000000000343c6 : ret 0xfffc
0x0000000000034607 : ret 0xfffc
0x000000000004b62a : ret 0xfffc
0x000000000008a089 : ret 0xfffc
0x000000000008bfa9 : ret 0xfffc
0x00000000000900e9 : ret 0xfffc
0x0000000000092489 : ret 0xfffc
0x00000000000bda2f : ret 0xfffc
0x00000000000bf4af : ret 0xfffc
0x00000000000d284e : ret 0xfffc
0x0000000000100ef0 : ret 0xfffc
0x000000000014e909 : ret 0xfffc
0x000000000014fc49 : ret 0xfffc
0x00000000001615d9 : ret 0xfffc
0x00000000001637d9 : ret 0xfffc
0x000000000005fac0 : ret 0xfffd
0x00000000000b9bf3 : ret 0xfffd
0x00000000000ccfe7 : ret 0xfffd
0x00000000000d1391 : ret 0xfffd
0x00000000000dc072 : ret 0xfffd
0x00000000000e3972 : ret 0xfffd
0x00000000000f0c35 : ret 0xfffd
0x00000000000f8134 : ret 0xfffd
0x000000000010c928 : ret 0xfffd
0x00000000001218a6 : ret 0xfffd
0x0000000000127566 : ret 0xfffd
0x0000000000187cdd : ret 0xfffd
0x000000000019b9d9 : ret 0xfffd
0x000000000019b9e1 : ret 0xfffd
0x00000000000325e8 : ret 0xfffe
0x00000000000335df : ret 0xfffe
0x0000000000033638 : ret 0xfffe
0x0000000000033637 : ret 0xfffe
0x000000000003367c : ret 0xfffe
0x000000000005c0c9 : ret 0xfffe
0x000000000005c4fc : ret 0xfffe
0x000000000005df22 : ret 0xfffe
0x000000000007a8a7 : ret 0xfffe
0x0000000000084ce3 : ret 0xfffe
0x0000000000089f49 : ret 0xfffe
0x000000000008be29 : ret 0xfffe
0x000000000008fed9 : ret 0xfffe
0x0000000000092239 : ret 0xfffe
0x0000000000097281 : ret 0xfffe
0x000000000009f485 : ret 0xfffe
0x00000000000b6d4d : ret 0xfffe
0x00000000000de4aa : ret 0xfffe
0x00000000000dfeea : ret 0xfffe
0x00000000000e5722 : ret 0xfffe
0x00000000001003e7 : ret 0xfffe
0x00000000001157c1 : ret 0xfffe
0x00000000001198a1 : ret 0xfffe
0x000000000011acda : ret 0xfffe
0x0000000000128210 : ret 0xfffe
0x000000000014e7e9 : ret 0xfffe
0x000000000014fad9 : ret 0xfffe
0x00000000001613d9 : ret 0xfffe
0x0000000000163599 : ret 0xfffe
0x000000000002d905 : ret 0xffff
0x000000000007417a : ret 0xffff
0x000000000002365b : ret 0xffff
0x000000000002365a : ret 0xffff
0x000000000002d905 : ret 0xffff
0x000000000002d905 : ret 0xffff
0x000000000003c935 : ret 0xffff
0x000000000005f813 : ret 0xffff
0x0000000000060854 : ret 0xffff
0x0000000000060853 : ret 0xffff
0x000000000006749a : ret 0xffff
0x0000000000069615 : ret 0xffff
0x0000000000069614 : ret 0xffff
0x0000000000069f5d : ret 0xffff
0x00000000000701a8 : ret 0xffff
0x0000000000073edf : ret 0xffff
0x000000000007417a : ret 0xffff
0x0000000000080fe3 : ret 0xffff
0x0000000000081045 : ret 0xffff
0x0000000000081064 : ret 0xffff
0x0000000000085895 : ret 0xffff
0x0000000000085965 : ret 0xffff
0x00000000000869a6 : ret 0xffff
0x00000000000ad5cc : ret 0xffff
0x00000000000b3eb2 : ret 0xffff
0x00000000000bb855 : ret 0xffff
0x00000000000bf717 : ret 0xffff
0x00000000000ca1e2 : ret 0xffff
0x00000000000ca482 : ret 0xffff
0x00000000000cb6f2 : ret 0xffff
0x00000000000cb992 : ret 0xffff
0x00000000000cd9a1 : ret 0xffff
0x00000000000cdad1 : ret 0xffff
0x00000000000ce0ff : ret 0xffff
0x00000000000f4039 : ret 0xffff
0x00000000000f6435 : ret 0xffff
0x00000000000f6462 : ret 0xffff
0x00000000000fd285 : ret 0xffff
0x00000000000fd335 : ret 0xffff
0x00000000000fda56 : ret 0xffff
0x0000000000100dbc : ret 0xffff
0x0000000000105fae : ret 0xffff
0x000000000010c512 : ret 0xffff
0x000000000010dc92 : ret 0xffff
0x000000000011a3d9 : ret 0xffff
0x000000000011a799 : ret 0xffff
0x000000000011bac2 : ret 0xffff
0x000000000011c1a2 : ret 0xffff
0x000000000011c5e2 : ret 0xffff
0x000000000011ca02 : ret 0xffff
0x000000000011fae2 : ret 0xffff
0x00000000001205fd : ret 0xffff
0x0000000000120e02 : ret 0xffff
0x000000000012a51d : ret 0xffff
0x000000000012a61e : ret 0xffff
0x000000000012aa29 : ret 0xffff
0x0000000000131f82 : ret 0xffff
0x00000000001321b2 : ret 0xffff
0x0000000000133030 : ret 0xffff
0x0000000000140bd4 : ret 0xffff
0x000000000001f6bc : ret 1
0x00000000000362da : ret 1
0x00000000000365ca : ret 1
0x000000000005f113 : ret 1
0x000000000006ce3a : ret 1
0x000000000008ec15 : ret 1
0x000000000009a9bc : ret 1
0x00000000000a88aa : ret 1
0x00000000000c49f9 : ret 1
0x00000000000d0424 : ret 1
0x00000000000f870a : ret 1
0x000000000010e798 : ret 1
0x0000000000130a8a : ret 1
0x000000000013c93a : ret 1
0x000000000013fea4 : ret 1
0x0000000000170692 : ret 1
0x000000000017409a : ret 1
0x0000000000180604 : ret 1
0x000000000018abd1 : ret 1
0x000000000019a0d5 : ret 1
0x000000000019a0dd : ret 1
0x000000000019a0dc : ret 1
0x000000000019a0e5 : ret 1
0x000000000019a0ed : ret 1
0x000000000019a0f5 : ret 1
0x000000000019a0ed : ret 1
0x000000000019a0fd : ret 1
0x000000000019a105 : ret 1
0x000000000019a10d : ret 1
0x000000000019d9dc : ret 1
0x00000000001b7d55 : ret 1
0x00000000001b7d85 : ret 1
0x00000000001b7d84 : ret 1
0x00000000001b7ded : ret 1
0x00000000001bf398 : ret 1
0x000000000004b519 : ret 2
0x000000000008ec3b : ret 2
0x0000000000096fdd : ret 2
0x000000000009e0d3 : ret 2
0x00000000000b75d8 : ret 2
0x00000000000bf5ac : ret 2
0x00000000000cee31 : ret 2
0x00000000000d7f8e : ret 2
0x0000000000111a0a : ret 2
0x000000000016cbba : ret 2
0x0000000000171f4c : ret 2
0x0000000000180804 : ret 2
0x00000000001abca4 : ret 2
0x00000000001bcd38 : ret 2
0x00000000000011c8 : ret 3
0x0000000000024ab6 : ret 3
0x000000000004f2b2 : ret 3
0x0000000000055132 : ret 3
0x0000000000063696 : ret 3
0x00000000000636b7 : ret 3
0x000000000009854d : ret 3
0x000000000009e020 : ret 3
0x00000000000bbdd6 : ret 3
0x00000000000f7b92 : ret 3
0x0000000000159547 : ret 3
0x000000000015978a : ret 3
0x000000000016f652 : ret 3
0x0000000000180a04 : ret 3
0x00000000001bf018 : ret 3
0x0000000000007608 : ret 4
0x0000000000080940 : ret 4
0x000000000008ec59 : ret 4
0x00000000000c8dc9 : ret 4
0x000000000014658e : ret 4
0x0000000000180c04 : ret 4
0x00000000001bd20c : ret 4
0x0000000000001570 : ret 5
0x000000000002aed0 : ret 5
0x0000000000042827 : ret 5
0x00000000000a686a : ret 5
0x00000000000c4a09 : ret 5
0x00000000000d404a : ret 5
0x00000000000f846a : ret 5
0x0000000000180e04 : ret 5
0x00000000001bd78c : ret 5
0x000000000000dda0 : ret 6
0x00000000000230b5 : ret 6
0x0000000000046422 : ret 6
0x00000000000b44e6 : ret 6
0x0000000000119d5a : ret 6
0x0000000000166f4a : ret 6
0x000000000016b2da : ret 6
0x000000000017c908 : ret 6
0x0000000000181004 : ret 6
0x00000000001bf308 : ret 6
0x00000000000ab4aa : ret 7
0x000000000014624a : ret 7
0x0000000000181204 : ret 7
0x00000000001bd63c : ret 7
0x0000000000001a8c : ret 8
0x0000000000088e20 : ret 8
0x000000000008ec75 : ret 8
0x00000000000a4eca : ret 8
0x00000000000a7d7a : ret 8
0x00000000000ab39a : ret 8
0x0000000000181404 : ret 8
0x00000000001bf694 : ret 8
0x00000000001713ba : ret 9
0x0000000000181604 : ret 9
0x0000000000092c2f : retf 0x850f ; call qword ptr [rsi]
0x0000000000189200 : retf 0xf451 ; call rsp
0x0000000000189065 : retf ; inc dword ptr [rdx - 0x24] ; jmp rcx
0x0000000000102d7e : retf ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102d8c ; call rbx
0x0000000000102d63 : retf ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d62 : retf ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d8c : retf ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102d70 : retf ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102d7e ; call rbx
0x00000000001436a3 : retf ; nop dword ptr [rax] ; call qword ptr [rax]
0x00000000000aa215 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000aacde : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000ff80c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000009ec6c : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000009f0cd : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000acd6d : rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000ada9b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000072e8c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000007c897 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008eced : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000003a6c7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000110bfd : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x000000000009f662 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000bd832 : rol byte ptr [rax + 0x49000151], 1 ; ret
0x00000000000bd8d1 : rol byte ptr [rax + 0x49000151], 1 ; ret
0x000000000008ba02 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000001390 : rol byte ptr [rax + rax], 0 ; ret
0x0000000000180c00 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000024bc0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000024c70 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000024de8 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000006632c : rol byte ptr [rax + rcx*2], 1 ; ret
0x0000000000124139 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x000000000003d320 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d340 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d360 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d380 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d3a0 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d3c0 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d3e0 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d400 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d420 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d440 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d460 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d47c : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d498 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003d4b4 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040618 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040638 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040658 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040678 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040698 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000406b8 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000406d8 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000406f8 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040718 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040738 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040758 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040774 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040790 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000407ac : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000434ef : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004350f : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004352f : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004354f : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004356f : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004358f : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000435af : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000435cf : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000435ef : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004360f : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004362f : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000004364b : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000043667 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000043683 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000ac94d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000016e7bd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecd5 : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fded : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170305 : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a7b75 : rol byte ptr [rax], 0 ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001977cd : rol byte ptr [rax], 0 ; mov ah, 0xc4 ; in eax, dx ; call rsp
0x00000000000bc608 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000bc66b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006b62f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x000000000006b939 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000ba92f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000bac39 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000105487 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112e85 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7f40 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c7fbc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003569c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000000356e4 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000008d80b : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x00000000000966d2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000005d9e1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000036269 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x000000000011d757 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011d93d : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x0000000000195c68 : rol byte ptr [rbp - 0x7aaf0004], 0xfc ; jmp rax
0x000000000004846b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000119129 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000105a1b : rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000d71e7 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x000000000010a6dc : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000010b02c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000073058 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000007cc88 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000002df31 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000d16d5 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x000000000005df0f : rol byte ptr [rbx - 0x7af00008], cl ; ret
0x00000000000abf92 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000122b06 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000012dc01 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x0000000000188050 : rol byte ptr [rbx], 1 ; push rax ; add esi, edx ; call qword ptr [rax]
0x00000000000aab91 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000011d759 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8545
0x000000000011d93f : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x0000000000097323 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000974c3 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000009eb62 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000b862b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x14c
0x000000000009ec1b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000d6565 : rol byte ptr [rcx + rbp - 0x20], 1 ; ret
0x000000000002975b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000297ff : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000029ac3 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000ac04e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0xac020 ; ret
0x0000000000123df2 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000001031d7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000c284e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8341
0x00000000000dba1e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8d48
0x00000000000c23ad : rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x0000000000195c8c : rol byte ptr [rcx - 0x7e990004], 1 ; cld ; call rsi
0x000000000008b3f2 : rol byte ptr [rcx - 0x80], cl ; stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000abf72 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e812a : rol byte ptr [rcx], 0x39 ; ret
0x000000000013e4ff : rol byte ptr [rcx], 0x39 ; ret
0x00000000000d9598 : rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000e5e22 : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0x3941
0x0000000000048082 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x48081 ; xor eax, eax ; ret
0x00000000000aa99b : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x00000000001099bd : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000d9277 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x000000000002b152 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000e2fc2 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000006ee57 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000117039 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000004606a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000102167 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x00000000000aa9fb : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000aa9e6 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000aa9e6 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000188008 : rol byte ptr [rcx], 0xf2 ; jmp rax
0x00000000001335bc : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; mov rbx, rax ; call 0x1f8a9
0x000000000014dc1e : rol byte ptr [rcx], 1 ; ret 0x148
0x000000000014e0ff : rol byte ptr [rcx], 1 ; ret 0x148
0x000000000014e49f : rol byte ptr [rcx], 1 ; ret 0x148
0x000000000019c912 : rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000001bc718 : rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bc6c0 : rol byte ptr [rcx], cl ; ret 0xb
0x00000000000f6a3c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000010aaad : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000abfd2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000188090 : rol byte ptr [rdx + rsi*8], 0xff ; rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x0000000000188094 : rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x0000000000195e80 : rol byte ptr [rdx - 0x7daf0004], 0xfc ; jmp rax
0x00000000000abf82 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000218e6 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000018802c : rol byte ptr [rdx], 0xf2 ; jmp rax
0x0000000000107415 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cd227 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000000bf6ef : rol byte ptr [rip + 0x16e], 1 ; ret
0x000000000010a97d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x000000000002e50e : rol byte ptr [rip + 0x788d4800], cl ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000000abfc2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d7a71 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000181d40 : rol cl, 0xc2 ; ret
0x0000000000181d40 : rol cl, 0xc2 ; ret
0x0000000000195364 : rol dh, 0xfb ; call qword ptr [rax]
0x000000000011d0d7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000195358 : rol dl, 1 ; sti ; jmp qword ptr [rax]
0x00000000000abf1c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000110bd1 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000019780d : rol dword ptr [rax], 0 ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001a7c7d : rol dword ptr [rax], 0 ; and bl, 0xef ; call rsp
0x00000000001a7c7c : rol dword ptr [rax], 0 ; and bl, 0xef ; call rsp
0x000000000006bcf8 : rol dword ptr [rax], 1 ; ret
0x000000000006bcf7 : rol dword ptr [rax], 1 ; ret
0x000000000009f0c7 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000001f9be : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00000000000c612b : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x00000000000c628c : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x00000000000c6450 : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x00000000000c685f : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x0000000000066328 : rol dword ptr [rcx + rcx*2], -0x7d ; rol byte ptr [rax + rcx*2], 1 ; ret
0x0000000000022d7b : rol dword ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000111f71 : rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a7e69 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000123f9e : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x000000000010d103 : rol dword ptr [rsi - 0x76b7ffd5], 1 ; ret 0x8d48
0x0000000000111f70 : rol dword ptr fs:[rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000360c5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008b459 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000137778 : rol ecx, 1 ; jmp 0xffffffff80d66e94
0x00000000001379ff : rol ecx, 1 ; jmp 0xffffffff80d6711b
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000008b458 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000360c4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001a1680 : ror al, 1 ; in al, dx ; call rsp
0x00000000001193a2 : ror ax, 8 ; ret
0x0000000000035f64 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000360c6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008eb62 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8eba9 ; add rax, rdi ; ret
0x000000000008b8b7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000008ba7c : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000008bad3 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000a128e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000a2eae : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000007442a : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000023db6 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000024261 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000024c19 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000013bdad : ror byte ptr [rax + 0x39], 0xca ; je 0x13bdc7 ; ret
0x00000000000fce2f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfce67 ; ret
0x0000000000114aa8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000f6a3e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000f6ccd : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x0000000000048f16 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000049513 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000049ba8 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000001149c8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000d3fe0 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000e0089 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000046f15 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000bc400 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000bc4e0 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000bc400 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000bc4e0 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000115ae2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000115c1e : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000128f0c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000097967 : ror byte ptr [rax + 0xf], 1 ; ret
0x0000000000047fd5 : ror byte ptr [rax + 0xf], 1 ; ret 0x3145
0x000000000002c864 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002c855 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000049a9e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000009f213 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x000000000009f256 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x00000000000965ac : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008d459 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008eb32 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000096722 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000009f028 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000009f0d2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000009f1b0 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000123f73 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000076b99 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000af121 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000b19a1 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000b4221 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000b81d6 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000042205 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000ae5c5 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000000b0f2d : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000000b36b5 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000003bfe5 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x000000000003f2a5 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x000000000003bf29 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000003f1e9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000042139 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000ae509 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000b0e69 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000b35f9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000008b8b4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000008ba79 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000008bad0 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000df850 : ror byte ptr [rax + 9], 0x14 ; ret
0x000000000017d008 : ror byte ptr [rax + rax], 0 ; ret
0x000000000008ece5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000aa84c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f35a8
0x000000000002d902 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000001096f6 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000005715a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000c0202 : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000bb5f8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000cdbb8 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000cdc10 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008eb22 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000096712 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008eb52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000096742 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000009f0f2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000009f102 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008eb42 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000096732 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000009f0e2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000009f262 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000008217b : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000008249a : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000000cf38d : ror byte ptr [rax - 0x75], 0x54 ; ret
0x000000000010a431 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010a4c1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010a561 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010a5f1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010a681 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010a711 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010a7b1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010a851 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010a8f1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010a981 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010aab1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010ab49 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000c6108 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00000000000c6269 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00000000000c642d : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00000000000c683c : ror byte ptr [rax - 0x75], 0x7c ; ret
0x000000000007ba0a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000048db3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000009ed49 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000012e2a9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12e24b ; xor eax, eax ; pop rbx ; ret
0x0000000000097964 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x0000000000132dc8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x0000000000138f48 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x0000000000139668 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000001159d2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000013a789 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x000000000008810c : ror byte ptr [rax - 0x77], 1 ; ret
0x00000000000bb9b2 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000014003a : ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x000000000014062a : ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x000000000003b35d : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000078f65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000bf1f5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000052005 : ror byte ptr [rax - 0x77], 1 ; ret 0x92e8
0x000000000012f926 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x0000000000020625 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000033bb9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000bc3ba : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000bc49a : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000872a2 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000001323f9 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000132429 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000132459 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000001350f6 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000013511e : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000135146 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000013597c : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000001359bd : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000001359f5 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000007db6d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007a391 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a6 ; ret
0x00000000001024eb : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000000773e2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00000000000954d1 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003adac : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007374f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012e6ff : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013b321 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001370d6 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000137216 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136e5e : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136ec5 ; ret
0x00000000000f8960 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003a08d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003b1df : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003b23e : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007c8d1 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008308e : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000101e2d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001023af : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000112f43 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012b9e6 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012d6d6 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012e21e : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012f662 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001303dd : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000453b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000e88ce : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ff805 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013035d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000130382 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001303a2 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c4b1 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c4f1 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000143670 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000143738 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000013380d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000137588 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b84d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b90d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b9cd : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013ba8d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000142c3c : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013c35a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c39b : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000122216 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000009f162 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f142 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f122 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000f6e6e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f6eb9 : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000082c35 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2917454
0x00000000000c3195 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000e0cf6 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000004f583 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000004fb5a : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000000fdb15 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x0000000000075f7a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000076e6a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000046180 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000c3120 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000d52a3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d960b : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a6476 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000a7b16 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000a97e6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000026489 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000bee4e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000077ccf : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002593e : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000028695 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000002958f : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007818a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781cd : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011791a : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000000aff1a : ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000b285a : ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000008d7b4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000008d7b4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000b856b : ror byte ptr [rbp + 0x39], cl ; ret 0x4574
0x00000000000ad077 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000f0cb6 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x00000000000f6d2f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x0000000000024c28 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc5 : ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x0000000000024270 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000ac9b7 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00000000000aeb63 : ror byte ptr [rcx + 0xf082444], 0x84 ; ret
0x000000000012a31b : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x0000000000034f34 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000094f36 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000003522e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x000000000012304e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000d6ece : ror byte ptr [rcx - 0x76bb79ec], 1 ; ret 0xeac1
0x00000000000aa844 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2276
0x0000000000094f78 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000a605f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a76ec : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a9400 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000099aaa : ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000ac950 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000bb250 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x000000000010756c : ror byte ptr [rcx], 0xf8 ; ret
0x000000000008f529 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000000945f9 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000105fd0 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000101ca5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x0000000000102225 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000ea9e0 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000bd432 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000003a6f5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000003a7c2 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000003a6f5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000003a7c2 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000004745f : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000bd9ed : ror byte ptr [rdi], 0x84 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007573c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000970aa : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000885e6 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000b22bd : ror byte ptr [rdi], 0x84 ; ret
0x00000000000b7e28 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000c6350 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000126860 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000126898 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000133276 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000f4b67 : ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000e396f : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000c49f6 : ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000096fda : ror byte ptr [rdi], 0x84 ; ret 2
0x0000000000063693 : ror byte ptr [rdi], 0x84 ; ret 3
0x000000000002aecd : ror byte ptr [rdi], 0x84 ; ret 5
0x00000000000d4047 : ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000110be2 : ror byte ptr [rdi], 0x84 ; sbb eax, 0x89000001 ; ret 0x8944
0x000000000007638c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001657fa : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000169b2a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000084ab5 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009f08c : ror byte ptr [rdi], 0x85 ; jge 0x9f09a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000086641 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a4cc1 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000005cd99 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000a32d6 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000e8686 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000111c57 : ror byte ptr [rdi], 0x85 ; ret
0x000000000011a331 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000140226 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000165836 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000169b66 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1607 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000600bb : ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000db8bf : ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x0000000000113915 : ror byte ptr [rdi], 0x85 ; ret 0xfffa
0x000000000011989e : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000122298 : ror byte ptr [rdi], 0x88 ; ret
0x00000000000f8707 : ror byte ptr [rdi], 0x88 ; ret 1
0x00000000001003e4 : ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00000000000bbdd3 : ror byte ptr [rdi], 0x89 ; ret 3
0x00000000000cd89f : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000105b1e : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000119121 : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000884fd : ror byte ptr [rdi], 0x94 ; ret
0x00000000000ed59e : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00000000000e2dc7 : ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000bbcfb : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x0000000000136d16 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000136e0e : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000136f05 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000137005 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000137160 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000001372a0 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000137446 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x000000000013753a : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000bbdc8 : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x0000000000059901 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000000817dc : ror byte ptr [rdi], 0x94 ; ret 0x82e9
0x00000000000e0b28 : ror byte ptr [rdi], 0x94 ; ret 0x8445
0x0000000000020775 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000061a94 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000006ffba : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010fbd3 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000d9b15 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x00000000000ba72f : ror byte ptr [rdi], 0x95 ; ret 0xa8e9
0x00000000000ba5da : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x0000000000045c3d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000006d822 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000ad2af : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000ad849 : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000ad59c : ror byte ptr [rdi], 0x95 ; ret 0xf983
0x00000000000d9beb : ror byte ptr [rdi], 0x95 ; ret 0xfb83
0x000000000007371c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00000000000cdbb5 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000cdc0d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000ea9dd : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b34b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ac17c : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000ea9bf : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000109a07 : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f8b4a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000033bce : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33bb8 ; ret
0x00000000000e5e25 : ror byte ptr [rdi], 1 ; ret 0x3941
0x00000000000dc0ff : ror byte ptr [rdi], 1 ; ret 0xf039
0x000000000007f529 : ror byte ptr [rdi], 1 ; test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c18fb : ror byte ptr [rdi], 1 ; test ch, dh ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009731d : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000974bd : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000009f1ad : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000007550c : ror byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00000000000bc04a : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x0000000000098967 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000b72ac : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000bc159 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000b7880 : ror byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd108
0x0000000000010af1 : ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a6480 : ror byte ptr [rsi - 0x12], 1 ; call qword ptr [rdx]
0x00000000001953b8 : ror ch, 0xfb ; call qword ptr [rax]
0x00000000001953ac : ror cl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000099b2f : ror dword ptr [r9 + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x0000000000074143 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000000c31dc : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000cd3b1 : ror dword ptr [rax + 0x63], cl ; ret
0x000000000014a785 : ror dword ptr [rax + 1], -8 ; ret
0x000000000014a649 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014a89e : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x000000000013f307 : ror dword ptr [rax + 1], cl ; ret
0x000000000013f5ac : ror dword ptr [rax + 1], cl ; ret
0x000000000010a224 : ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x00000000000de85e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000dabac : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000049da3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000009ed35 : ror dword ptr [rax - 0x77], 0xa ; ret
0x0000000000105e2d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000105e2c : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000dcbf7 : ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x0000000000142d81 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000052bd0 : ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x000000000014dc72 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e152 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e4f2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000071bfd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x71bf7 ; ret
0x000000000007af3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7af37 ; ret
0x000000000003a178 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000001151ec : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000032752 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000004b64f : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000c15c5 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c178a : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c1b3e : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c1d8a : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c1e1a : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c2edb : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000c2f6e : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000e571f : ror dword ptr [rax], -0x17 ; ret 0xfffe
0x000000000012fd80 : ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x000000000009b080 : ror dword ptr [rbx - 0x73], 0x14 ; cmovs ebp, dword ptr [rcx] ; ret
0x0000000000099b30 : ror dword ptr [rcx + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x00000000000dcbf4 : ror dword ptr [rcx + 0x21], 1 ; ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x000000000002c2c2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x0000000000094a95 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00000000000e7614 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00000000000e928b : ror dword ptr [rcx - 0x75], 0x2c ; ret 0x8948
0x00000000000e9293 : ror dword ptr [rcx - 0x77], 0x1c ; ret 0x8348
0x0000000000170907 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000009a6f3 : ror dword ptr [rdi - 0x73], 0x44 ; movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000009f025 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000003c3d8 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x000000000003f6a8 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x0000000000042618 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00000000000ae9b8 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00000000000b1338 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00000000000b3a98 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00000000000e3fbd : ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00000000000d85f7 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000011f2e9 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000016f028 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f734 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f506 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000170630 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f486 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000016f7c4 : ror dword ptr [rdi], -0x7b ; je 0x16f7d4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f2bb : ror dword ptr [rdi], -0x7b ; jno 0x16f2d0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f383 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011acd7 : ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000016f000 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f8b2c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x00000000000f8b44 : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000009ee17 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000826ae : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000123c35 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000001193a3 : ror eax, 8 ; ret
0x0000000000071bfc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x71bf8 ; ret
0x000000000007af3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7af38 ; ret
0x000000000019731d : sahf ; add byte ptr [rax], al ; add al, 0x9a ; jmp 0x197329
0x0000000000071385 : sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71325
0x00000000001b59a5 : sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x0000000000095a5f : sahf ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000196445 : sahf ; cld ; call qword ptr [rdx]
0x00000000001965c5 : sahf ; cld ; call rax
0x0000000000196585 : sahf ; cld ; jmp rax
0x00000000000025e2 : sahf ; jl 0x2577 ; loop 0x25c2 ; ret 0x23cb
0x00000000000025e1 : sahf ; jl 0x2578 ; loop 0x25c3 ; ret 0x23cb
0x000000000014b5ce : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000195750 : sahf ; pop rbx ; cld ; jmp qword ptr [rax]
0x00000000000e91b3 : sahf ; ret
0x00000000000493f1 : sahf ; ret 0x148
0x00000000000c23b3 : sahf ; ret 0x1fbd
0x0000000000107bd6 : sahf ; ret 0x2b
0x00000000001835a5 : sahf ; ret 0x38ae
0x000000000003887c : sahf ; ret 0x8348
0x00000000000e91bc : sahf ; ret 0x844
0x00000000000bbf8f : sahf ; ret 0xe8c1
0x00000000000bbf8f : sahf ; ret 0xe8c1
0x000000000000245b : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000084122 : sahf ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004baae : sahf ; xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bf6ed : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000d7231 : sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000136d5e : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001373a9 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010ec02 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34e : sal bh, 0xd8 ; pop rbx ; ret
0x000000000006b31b : sal bh, 0xd8 ; ret
0x000000000007305e : sal bh, 0xd8 ; ret
0x0000000000077fce : sal bh, 0xd8 ; ret
0x000000000007cc8e : sal bh, 0xd8 ; ret
0x00000000000ac17f : sal bh, 0xd8 ; ret
0x00000000000ea9c2 : sal bh, 0xd8 ; ret
0x00000000001076fb : sal bh, 0xd8 ; ret
0x0000000000107725 : sal bh, 0xd8 ; ret
0x0000000000109a0a : sal bh, 0xd8 ; ret
0x00000000000aacf2 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x000000000008b0c7 : sal bh, 1 ; ret 0x8000
0x000000000008d327 : sal bh, 1 ; ret 0x8000
0x0000000000091bb7 : sal bh, 1 ; ret 0x8000
0x0000000000094297 : sal bh, 1 ; ret 0x8000
0x000000000014f7a7 : sal bh, 1 ; ret 0x8000
0x0000000000150ef7 : sal bh, 1 ; ret 0x8000
0x0000000000162fd7 : sal bh, 1 ; ret 0x8000
0x0000000000165517 : sal bh, 1 ; ret 0x8000
0x000000000008af87 : sal bh, 1 ; ret 0xc000
0x000000000008d1a7 : sal bh, 1 ; ret 0xc000
0x00000000000919a7 : sal bh, 1 ; ret 0xc000
0x0000000000094047 : sal bh, 1 ; ret 0xc000
0x000000000014f687 : sal bh, 1 ; ret 0xc000
0x0000000000150d87 : sal bh, 1 ; ret 0xc000
0x0000000000162dd7 : sal bh, 1 ; ret 0xc000
0x00000000001652d7 : sal bh, 1 ; ret 0xc000
0x000000000008ae47 : sal bh, 1 ; ret 0xe000
0x000000000008d027 : sal bh, 1 ; ret 0xe000
0x0000000000091797 : sal bh, 1 ; ret 0xe000
0x0000000000093df7 : sal bh, 1 ; ret 0xe000
0x000000000014f567 : sal bh, 1 ; ret 0xe000
0x0000000000150c17 : sal bh, 1 ; ret 0xe000
0x0000000000162bd7 : sal bh, 1 ; ret 0xe000
0x0000000000165097 : sal bh, 1 ; ret 0xe000
0x000000000008ad07 : sal bh, 1 ; ret 0xf000
0x000000000008cea7 : sal bh, 1 ; ret 0xf000
0x0000000000091587 : sal bh, 1 ; ret 0xf000
0x0000000000093ba7 : sal bh, 1 ; ret 0xf000
0x000000000014f447 : sal bh, 1 ; ret 0xf000
0x0000000000150aa7 : sal bh, 1 ; ret 0xf000
0x00000000001629d7 : sal bh, 1 ; ret 0xf000
0x0000000000164e57 : sal bh, 1 ; ret 0xf000
0x000000000008abc7 : sal bh, 1 ; ret 0xf800
0x000000000008cd27 : sal bh, 1 ; ret 0xf800
0x0000000000091377 : sal bh, 1 ; ret 0xf800
0x0000000000093957 : sal bh, 1 ; ret 0xf800
0x000000000014f327 : sal bh, 1 ; ret 0xf800
0x0000000000150937 : sal bh, 1 ; ret 0xf800
0x00000000001627d7 : sal bh, 1 ; ret 0xf800
0x0000000000164c17 : sal bh, 1 ; ret 0xf800
0x000000000008aa87 : sal bh, 1 ; ret 0xfc00
0x000000000008cba7 : sal bh, 1 ; ret 0xfc00
0x0000000000091167 : sal bh, 1 ; ret 0xfc00
0x0000000000093707 : sal bh, 1 ; ret 0xfc00
0x000000000014f207 : sal bh, 1 ; ret 0xfc00
0x00000000001507c7 : sal bh, 1 ; ret 0xfc00
0x00000000001625d7 : sal bh, 1 ; ret 0xfc00
0x00000000001649d7 : sal bh, 1 ; ret 0xfc00
0x000000000008a947 : sal bh, 1 ; ret 0xfe00
0x000000000008ca27 : sal bh, 1 ; ret 0xfe00
0x0000000000090f57 : sal bh, 1 ; ret 0xfe00
0x00000000000934b7 : sal bh, 1 ; ret 0xfe00
0x000000000014f0e7 : sal bh, 1 ; ret 0xfe00
0x0000000000150657 : sal bh, 1 ; ret 0xfe00
0x00000000001623d7 : sal bh, 1 ; ret 0xfe00
0x0000000000164797 : sal bh, 1 ; ret 0xfe00
0x000000000008a807 : sal bh, 1 ; ret 0xff00
0x000000000008c8a7 : sal bh, 1 ; ret 0xff00
0x0000000000090d47 : sal bh, 1 ; ret 0xff00
0x0000000000093267 : sal bh, 1 ; ret 0xff00
0x000000000014efc7 : sal bh, 1 ; ret 0xff00
0x00000000001504e7 : sal bh, 1 ; ret 0xff00
0x00000000001621d7 : sal bh, 1 ; ret 0xff00
0x0000000000164557 : sal bh, 1 ; ret 0xff00
0x000000000008a6c7 : sal bh, 1 ; ret 0xff80
0x000000000008c727 : sal bh, 1 ; ret 0xff80
0x0000000000090b37 : sal bh, 1 ; ret 0xff80
0x0000000000093017 : sal bh, 1 ; ret 0xff80
0x000000000014eea7 : sal bh, 1 ; ret 0xff80
0x0000000000150377 : sal bh, 1 ; ret 0xff80
0x0000000000161fd7 : sal bh, 1 ; ret 0xff80
0x0000000000164317 : sal bh, 1 ; ret 0xff80
0x000000000008a587 : sal bh, 1 ; ret 0xffc0
0x000000000008c5a7 : sal bh, 1 ; ret 0xffc0
0x0000000000090927 : sal bh, 1 ; ret 0xffc0
0x0000000000092dc7 : sal bh, 1 ; ret 0xffc0
0x000000000014ed87 : sal bh, 1 ; ret 0xffc0
0x0000000000150207 : sal bh, 1 ; ret 0xffc0
0x0000000000161dd7 : sal bh, 1 ; ret 0xffc0
0x00000000001640d7 : sal bh, 1 ; ret 0xffc0
0x000000000008a447 : sal bh, 1 ; ret 0xffe0
0x000000000008c427 : sal bh, 1 ; ret 0xffe0
0x0000000000090717 : sal bh, 1 ; ret 0xffe0
0x0000000000092b77 : sal bh, 1 ; ret 0xffe0
0x000000000014ec67 : sal bh, 1 ; ret 0xffe0
0x0000000000150097 : sal bh, 1 ; ret 0xffe0
0x0000000000161bd7 : sal bh, 1 ; ret 0xffe0
0x0000000000163e97 : sal bh, 1 ; ret 0xffe0
0x000000000008a307 : sal bh, 1 ; ret 0xfff0
0x000000000008c2a7 : sal bh, 1 ; ret 0xfff0
0x0000000000090507 : sal bh, 1 ; ret 0xfff0
0x0000000000092927 : sal bh, 1 ; ret 0xfff0
0x000000000014eb47 : sal bh, 1 ; ret 0xfff0
0x000000000014ff27 : sal bh, 1 ; ret 0xfff0
0x00000000001619d7 : sal bh, 1 ; ret 0xfff0
0x0000000000163c57 : sal bh, 1 ; ret 0xfff0
0x000000000008a1c7 : sal bh, 1 ; ret 0xfff8
0x000000000008c127 : sal bh, 1 ; ret 0xfff8
0x00000000000902f7 : sal bh, 1 ; ret 0xfff8
0x00000000000926d7 : sal bh, 1 ; ret 0xfff8
0x000000000014ea27 : sal bh, 1 ; ret 0xfff8
0x000000000014fdb7 : sal bh, 1 ; ret 0xfff8
0x00000000001617d7 : sal bh, 1 ; ret 0xfff8
0x0000000000163a17 : sal bh, 1 ; ret 0xfff8
0x000000000008a087 : sal bh, 1 ; ret 0xfffc
0x000000000008bfa7 : sal bh, 1 ; ret 0xfffc
0x00000000000900e7 : sal bh, 1 ; ret 0xfffc
0x0000000000092487 : sal bh, 1 ; ret 0xfffc
0x000000000014e907 : sal bh, 1 ; ret 0xfffc
0x000000000014fc47 : sal bh, 1 ; ret 0xfffc
0x00000000001615d7 : sal bh, 1 ; ret 0xfffc
0x00000000001637d7 : sal bh, 1 ; ret 0xfffc
0x0000000000089f47 : sal bh, 1 ; ret 0xfffe
0x000000000008be27 : sal bh, 1 ; ret 0xfffe
0x000000000008fed7 : sal bh, 1 ; ret 0xfffe
0x0000000000092237 : sal bh, 1 ; ret 0xfffe
0x000000000014e7e7 : sal bh, 1 ; ret 0xfffe
0x000000000014fad7 : sal bh, 1 ; ret 0xfffe
0x00000000001613d7 : sal bh, 1 ; ret 0xfffe
0x0000000000163597 : sal bh, 1 ; ret 0xfffe
0x00000000000504c4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000123e27 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000188e7d : sal bl, 1 ; jmp rcx
0x0000000000045a28 : sal bl, 1 ; ret
0x00000000000484cb : sal bl, 1 ; ret
0x0000000000048b83 : sal bl, 1 ; ret
0x00000000000ada8f : sal bl, 1 ; ret
0x00000000000f8b4f : sal bl, 1 ; ret
0x00000000000fcd33 : sal bl, 1 ; ret
0x00000000000896c3 : sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000ac71f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000000cf261 : sal byte ptr [rax + rcx + 0xf], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000d054a : sal byte ptr [rax + rcx + 0xf], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000001369e5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x000000000008eb18 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x0000000000053995 : sal byte ptr [rbp + 0xc], 0x31 ; div dh ; ret 0x4050
0x000000000013c481 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x000000000013c4c1 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x000000000008d830 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000006acc0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000005155e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000114ab7 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035307 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x0000000000174497 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000012e1a4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000115194 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000007a394 : sal byte ptr [rbp + 9], cl ; ret
0x000000000012c223 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001342f7 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000134517 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012de41 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000134104 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000001382b9 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000014a780 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000001386f0 : sal byte ptr [rbp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000001150a1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000007c845 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000009eae5 : sal byte ptr [rbp - 0x10], cl ; ret
0x0000000000048086 : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000001153de : sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000895d0 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00000000000aa380 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000071c00 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000007af40 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000009edda : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000138f26 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000009f80b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000d15ff : sal byte ptr [rbp - 0x21], cl ; ret
0x000000000009eb83 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x0000000000033bd3 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000001235bb : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000ac622 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000008d80d : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x000000000008873e : sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x0000000000115536 : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000008967a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000adacb : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000012b042 : sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x000000000012cc8c : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ff252 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000000fef73 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000012d832 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x0000000000113d34 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00000000000ffa55 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000001382e2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000006dcdf : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000012de7e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000006f61a : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000009ee0e : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x0000000000105dd9 : sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000008b7fc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000008b9dc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000008b7fc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000008b9dc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000114aa6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000facc5 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x61 ; ret
0x00000000000f6ad1 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000001035e2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000123f2e : sal byte ptr [rdi + rcx*2 + 0x41], 0x38 ; ret 0x5a74
0x000000000008b9cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000008b9cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000123483 : sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00000000000a1293 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x00000000000a2eb3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000089a63 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000008b263 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000008f953 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000009f1ab : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000001b0d10 : sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001149cc : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x000000000013dd77 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x0000000000132e2a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x132e48 ; call rax
0x0000000000138faa : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138fc8 ; call rax
0x00000000001396c3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1396e1 ; call rax
0x000000000013500e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x135084 ; call rax
0x0000000000135a2e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x135a94 ; call rax
0x00000000000f0d46 : sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc298555a
0x0000000000112b91 : sal byte ptr [rsi + rdx*8 + 0x49], 0x8b ; and al, 0x38 ; jmp 0x112b67
0x000000000008b521 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000122990 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x0000000000108de2 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000195578 : sal ch, 1 ; sti ; jmp qword ptr [rax]
0x0000000000195530 : sal dl, 0xfb ; call qword ptr [rax]
0x0000000000034e0a : sal dword ptr [rbp + 0xb], 0x48 ; add esp, 0x28 ; ret
0x0000000000034acf : sal dword ptr [rbp + 0xe], 0x48 ; add esp, 0x28 ; ret
0x000000000004876f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000013bec4 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000013bf04 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000ac602 : sal dword ptr [rbx + rdx + 0x48], -0x7d ; ret 0x8b04
0x000000000013bdab : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x13bdc9 ; ret
0x000000000009ed47 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x0000000000123e25 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000007ba08 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000019520c : sal dword ptr [rdi - 0x27e70003], -5 ; jmp rax
0x00000000001951e8 : sal dword ptr [rdi - 0x483e0003], -3 ; call qword ptr [rax]
0x00000000001951c8 : sal dword ptr [rdi - 0x483e0003], -3 ; jmp qword ptr [rax]
0x0000000000195118 : sal dword ptr [rdi - 0x483e0003], -3 ; jmp rcx
0x0000000000195138 : sal dword ptr [rdi - 0x483e0003], -3 ; jmp rcx
0x000000000009ebd9 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9ebd8 ; ret
0x000000000014dc75 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e155 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014e4f5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000188e41 : sal ebx, cl ; jmp rcx
0x00000000001ae611 : sal esp, 1 ; jmp rcx
0x0000000000170946 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000019a4dd : salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x0000000000132dcb : salc ; add rdi, 0x10 ; jmp rcx
0x0000000000138f4b : salc ; add rdi, 0x10 ; jmp rcx
0x000000000013966b : salc ; add rdi, 0x10 ; jmp rcx
0x0000000000150fb6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000153989 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000156369 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000174141 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000113329 : salc ; call rax
0x00000000000aa5ea : salc ; clc ; ret
0x0000000000172a5b : salc ; clc ; ret
0x000000000019b751 : salc ; cli ; call rsp
0x0000000000110c00 : salc ; cmovne eax, ecx ; ret
0x0000000000123f3f : salc ; ja 0x123f2c ; mov eax, 0xffffffff ; ret
0x00000000000038ed : salc ; jb 0x396f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004821e : salc ; jne 0x48215 ; xor eax, eax ; ret
0x0000000000073020 : salc ; mov eax, 0xffffffff ; ja 0x73039 ; ret
0x0000000000001bf0 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000112b93 : salc ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b65
0x00000000000ac739 : salc ; mov rax, rdi ; ret
0x00000000000e1291 : salc ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00000000000c52d1 : salc ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000022e4 : salc ; ret
0x00000000000025e6 : salc ; ret 0x23cb
0x0000000000195331 : salc ; sti ; jmp qword ptr [rax]
0x00000000000368ae : salc ; xlatb ; cmp byte ptr [rax], al ; ret
0x0000000000187f74 : sar ah, 0xf1 ; jmp rax
0x0000000000187fc4 : sar bh, 0xf1 ; push rax ; push rcx ; jmp qword ptr [rax]
0x0000000000061b8c : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000005ebe8 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000005f947 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000005f9d7 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000120f70 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000195389 : sar bl, cl ; jmp rax
0x0000000000133b10 : sar byte ptr [rax + 0x3d], 0x31 ; test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0x0000000000121dd3 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x0000000000121a01 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x0000000000140ca2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a84b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000000cdbcf : sar byte ptr [rax + 1], cl ; ret
0x0000000000085817 : sar byte ptr [rax + 6], 0xf3 ; ret
0x0000000000075adc : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000026ec1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000001073e3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x00000000001a49b0 : sar byte ptr [rdi - 0x13], 1 ; jmp qword ptr [rbx]
0x00000000000d72fd : sar byte ptr [rdx], 0xe ; je 0xd729c ; pop rbx ; ret
0x0000000000002b85 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x0000000000103b0c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000cd1fc : sar byte ptr [rsi + 9], 1 ; ret
0x0000000000183f3f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000183f3e : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000183f3d : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001a7950 : sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rdi]
0x00000000001960a0 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x1960aa ; call rax
0x0000000000187f94 : sar ch, 0xf1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x0000000000195584 : sar cl, 0xfb ; call qword ptr [rax]
0x000000000019aea9 : sar cl, 1 ; call rsp
0x0000000000187fac : sar dh, 0xf1 ; jmp rax
0x00000000000d9805 : sar dword ptr [rax + 1], 0x4c ; mov edx, eax ; jmp 0xd9822
0x000000000009fae3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9faee ; ret
0x00000000000a0236 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0xa0241 ; ret
0x00000000000a0983 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0xa098e ; ret
0x00000000000fea8b : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000feb48 : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000ff451 : sar dword ptr [rbx + 0x2c], cl ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000e7e26 : sar dword ptr [rcx], 1 ; ret
0x000000000001f969 : sar dword ptr [rcx], 1 ; ret 0xffb8
0x00000000000d3217 : sar dword ptr [rcx], cl ; ret 0xef7c
0x0000000000041925 : sar dword ptr [rdx + 1], -0x77 ; ret
0x00000000000fea2f : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000feaea : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000034f03 : sar eax, 0x10 ; ret
0x0000000000034b69 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000140664 : sar eax, 0x1f ; ret
0x0000000000034ebb : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003478d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000003af5 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000fe5f2 : sar eax, 1 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000072d6c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000075660 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000734f9 : sar eax, 2 ; ret
0x0000000000073637 : sar eax, 2 ; ret
0x00000000000773ba : sar eax, 2 ; ret
0x00000000000774ca : sar eax, 2 ; ret
0x000000000011909d : sar eax, 6 ; ret
0x0000000000195395 : sar ebx, -1 ; ret
0x0000000000195355 : sar ebx, -1 ; rol dl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000195385 : sar ebx, 1 ; call qword ptr [rax - 0x1f00042e]
0x0000000000195384 : sar ebx, 1 ; call qword ptr [rax - 0x1f00042e]
0x000000000019538d : sar ebx, cl ; jmp qword ptr [rax]
0x0000000000183ca3 : sar ecx, 1 ; jnp 0x183c64 ; ret
0x000000000003a634 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003a647 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000003a667 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000008ece7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000072d6b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000003478c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000734f8 : sar rax, 2 ; ret
0x0000000000073636 : sar rax, 2 ; ret
0x00000000000773b9 : sar rax, 2 ; ret
0x00000000000774c9 : sar rax, 2 ; ret
0x000000000011909c : sar rax, 6 ; ret
0x000000000008ece6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000034ab4 : sbb ah, bh ; adc eax, 0x540f6600 ; ret 0xf66
0x00000000000f6909 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x000000000011332e : sbb al, 0x20 ; je 0x113396 ; xor eax, eax ; pop rbx ; ret
0x000000000011332d : sbb al, 0x20 ; je 0x113397 ; xor eax, eax ; pop rbx ; ret
0x0000000000136d0d : sbb al, 0x41 ; call qword ptr [rdx]
0x000000000013743d : sbb al, 0x41 ; call qword ptr [rdx]
0x0000000000002f9c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x000000000010f778 : sbb al, 0x45 ; cmp byte ptr [rax], cl ; je 0x10f7a4 ; mov rdx, r8 ; jmp 0x10f794
0x00000000001b0a54 : sbb al, 0x4f ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0d54 : sbb al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1e54 : sbb al, 0x63 ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b2b54 : sbb al, 0x70 ; add dword ptr [rax], eax ; call 0x271b247c
0x00000000000ffd53 : sbb al, 0x83 ; ret
0x000000000006999b : sbb al, 0x83 ; ret 0x8308
0x0000000000068ac8 : sbb al, 0x89 ; ret
0x00000000001b6654 : sbb al, 0xab ; add dword ptr [rax], eax ; call 0xffffffffd21b5d93
0x00000000000d59e3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001a7d54 : sbb al, 0xc2 ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x000000000012e650 : sbb al, 0xce ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000102988 : sbb al, 0xcf ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000dec75 : sbb al, 0xe9 ; adc eax, 0x1fffffe ; ret 0x8b49
0x00000000000dec74 : sbb al, 0xe9 ; adc eax, 0x1fffffe ; ret 0x8b49
0x00000000001af869 : sbb al, 0xf5 ; call qword ptr [rdx]
0x0000000000195735 : sbb al, 0xfc ; jmp rax
0x00000000001ad80d : sbb al, 1 ; add al, dl ; stc ; call qword ptr [rax]
0x00000000001ad82d : sbb al, 1 ; add byte ptr [rax - 0x79], ah ; hlt ; call qword ptr [rax]
0x0000000000195210 : sbb al, bl ; sti ; jmp rax
0x0000000000123d00 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000004b9a2 : sbb al, byte ptr [rbx - 0x4a743] ; call qword ptr [rax]
0x00000000000ac72c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000005aa9a : sbb al, byte ptr [rcx - 0x7d] ; ret
0x000000000005af86 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x000000000019854d : sbb al, byte ptr [rcx] ; add byte ptr [rsp + rbx*2 - 0xf], dl ; call rsp
0x0000000000076ca7 : sbb al, ch ; ret
0x00000000001956f1 : sbb bh, ah ; jmp qword ptr [rax]
0x00000000000d599a : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001a6bb9 : sbb bh, dl ; call qword ptr [rax]
0x0000000000194e81 : sbb bl, bh ; jmp rax
0x0000000000194e7d : sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000182a25 : sbb bl, byte ptr [rsi] ; ret
0x0000000000033e51 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000076b8e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000001435af : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000013be21 : sbb byte ptr [r8 + 1], r15b ; ret
0x000000000013be50 : sbb byte ptr [r8 + 1], r15b ; ret
0x000000000013be82 : sbb byte ptr [r8 + 1], r15b ; ret
0x0000000000113297 : sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00000000000c9b92 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000172b7b : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000013c1c6 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000064133 : sbb byte ptr [r8], al ; add dh, dh ; ret
0x00000000000a9e64 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e86 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000741da : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000076b8f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000007eed3 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000d6396 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000001435b0 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000007d397 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x00000000001178c3 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3b21b
0x000000000013be22 : sbb byte ptr [rax + 1], bh ; ret
0x000000000013be51 : sbb byte ptr [rax + 1], bh ; ret
0x000000000013be83 : sbb byte ptr [rax + 1], bh ; ret
0x000000000013beb4 : sbb byte ptr [rax + 1], bh ; ret
0x000000000013d82d : sbb byte ptr [rax + 1], cl ; ret
0x0000000000113298 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000c92b2 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000024368 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d03 : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000dd5fa : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000dd6af : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007b161 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f4397 : sbb byte ptr [rax - 0x77], cl ; ret
0x000000000010f577 : sbb byte ptr [rax - 0x77], cl ; ret
0x000000000013d6b0 : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f003a : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x00000000000891d6 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000008928b : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000073f31 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x0000000000073f30 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00000000000b22ba : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000078b09 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000795b9 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000c9b93 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000dcd9b : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000001287b4 : sbb byte ptr [rax - 0x7d], cl ; ret
0x0000000000172b7c : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000f90d6 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009490e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000084387 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000009490d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000001b0b18 : sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000cae69 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000120771 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000137d7a : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007d87f : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000001bc6c7 : sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bc71f : sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x000000000007b9af : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013c1c7 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000019d415 : sbb byte ptr [rax], al ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rdx]
0x000000000019d385 : sbb byte ptr [rax], al ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x0000000000064134 : sbb byte ptr [rax], al ; add dh, dh ; ret
0x00000000000773e6 : sbb byte ptr [rax], al ; setne al ; ret
0x000000000000245c : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a9e65 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e87 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000019d384 : sbb byte ptr [rax], r8b ; add byte ptr [rax], bh ; or ebp, ecx ; call qword ptr [rsi]
0x000000000013e958 : sbb byte ptr [rbp + 0x39], cl ; ret
0x000000000012c7fa : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000137e61 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x000000000019dbb8 : sbb byte ptr [rbp - 0x17], dl ; jmp rdx
0x0000000000021859 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00000000000f6e72 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f6ebd : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000128a54 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000076b04 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d1b7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009f44d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ba3b5 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ba435 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000c9898 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000c9a09 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000cb069 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000cb1e8 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000cba81 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000cbadf : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000cc1db : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000fc2ea : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000fd0bd : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000fd16d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000105cce : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001088e3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000108a39 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000010b809 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000010b993 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000010d1b9 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000011a008 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000011b8a8 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000011bf79 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000120bd9 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000131979 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000131af8 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000014296a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000076ba7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000094d61 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000094d60 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012cb04 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x000000000003b177 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000745f9 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000074635 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000079aa2 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cae0a : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cc276 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001178ef : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000012cd97 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013375e : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000133811 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013758c : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000137d66 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013ab42 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013ac02 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013acc2 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013ad82 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013af26 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013afa5 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b851 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b911 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013b9d1 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013ba91 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000141f83 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000142c40 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000194f10 : sbb byte ptr [rbx + rdi*8 - 1], 0xd0 ; pop rbp ; sti ; jmp qword ptr [rax]
0x000000000007c887 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001b0d58 : sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x000000000009eb5f : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x0000000000072bdb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000013cfcc : sbb byte ptr [rcx + 0x63], cl ; ret
0x00000000000ec10e : sbb byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x0000000000081a66 : sbb byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; call rdi
0x00000000000ceef6 : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000ad3b0 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad668 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x0000000000038382 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000000750c3 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000ad918 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000779c5 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000082f13 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x000000000009e8fe : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00000000000744d3 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x00000000000741db : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000000b9b5c : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ac721 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000001956ec : sbb byte ptr [rcx], 0xfc ; call rax
0x00000000000f0034 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf007c
0x00000000000fcbd1 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fcc8a : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000d4f62 : sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000075117 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000009f464 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000efde0 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000117918 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000001af9d8 : sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000006b318 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000107722 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013ab88 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013ac48 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013ad08 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013adc8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013c35e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c39f : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000033e52 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000012e358 : sbb byte ptr [rdi], cl ; test cl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000019e408 : sbb byte ptr [rdx - 0x17], bh ; jmp qword ptr [rcx]
0x0000000000002057 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x000000000017435c : sbb byte ptr [rip + 0x1740025], ah ; ret
0x00000000001899bc : sbb byte ptr [rip + 0x518fff5], al ; cmc ; call rax
0x00000000001899c8 : sbb byte ptr [rip + 0x518fff5], al ; cmc ; jmp rax
0x0000000000189a40 : sbb byte ptr [rip + 0x580fff5], al ; cmc ; call rax
0x00000000001099d2 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000001099d1 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000004b78c : sbb byte ptr [rsi], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a6d08 : sbb ch, bl ; out dx, al ; jmp qword ptr [rsi]
0x0000000000140ecd : sbb ch, byte ptr [rax] ; add bl, dh ; ret
0x00000000001a2c91 : sbb ch, ch ; call rdx
0x00000000000d4f5f : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001b2ac9 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2af9 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b29 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b59 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b89 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2bb9 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000f65be : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000129423 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000001108fd : sbb cl, byte ptr [rcx - 0x75] ; and byte ptr [r8 + 0x39], r9b ; ret
0x00000000000a68bf : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014584d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001479bd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014543d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000144f49 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145759 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b96a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b18a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014b57a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad9a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014851d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147cfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001451cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001474dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014550d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145829 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014af39 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001458f9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014803d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014781d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146ffd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001481dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001456ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144e9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000014529d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014b42a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac4a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd5a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014577d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000144f6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014733d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014500f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014536d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000147473 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148173 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147c93 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b32b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bc5b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001484b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001477b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001472d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147fd3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b47b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ac9b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145033 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001100e3 : sbb dh, dh ; ret 0x7508
0x00000000001ace08 : sbb dl, bl ; jmp qword ptr [rcx]
0x0000000000148c78 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d5973 : sbb dword ptr [rax + 1], edi ; ret
0x000000000002e514 : sbb dword ptr [rax - 0x77], ecx ; ret
0x0000000000105de6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x00000000001403b4 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x0000000000148c01 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148c79 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cd9d5 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00000000000aad2e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x0000000000116273 : sbb dword ptr [rbx + rax], edi ; ret
0x00000000001852dd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000123efa : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000a7fde : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001cb7 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce9 ; ret
0x000000000016cc0c : sbb eax, -1 ; ret
0x000000000016cc74 : sbb eax, -1 ; ret
0x000000000016ce79 : sbb eax, -1 ; ret
0x000000000016ce9c : sbb eax, -1 ; ret
0x000000000016cec2 : sbb eax, -1 ; ret
0x000000000016ceea : sbb eax, -1 ; ret
0x000000000016cf10 : sbb eax, -1 ; ret
0x000000000016cf42 : sbb eax, -1 ; ret
0x000000000016cf70 : sbb eax, -1 ; ret
0x000000000016cfa2 : sbb eax, -1 ; ret
0x000000000016cfd2 : sbb eax, -1 ; ret
0x000000000016d002 : sbb eax, -1 ; ret
0x000000000016d032 : sbb eax, -1 ; ret
0x000000000016d064 : sbb eax, -1 ; ret
0x000000000016d094 : sbb eax, -1 ; ret
0x000000000016d0c4 : sbb eax, -1 ; ret
0x000000000016d39e : sbb eax, -1 ; ret
0x000000000016d449 : sbb eax, -1 ; ret
0x0000000000172317 : sbb eax, -1 ; ret
0x0000000000115b64 : sbb eax, 0 ; leave ; ret
0x0000000000047062 : sbb eax, 0x1476d4 ; mov rax, rbx ; pop rbx ; ret
0x00000000001956f9 : sbb eax, 0x1ec0fffc ; cld ; call qword ptr [rax]
0x0000000000174320 : sbb eax, 0x25241b ; jne 0x174310 ; pop rbx ; ret
0x0000000000109561 : sbb eax, 0x2bacda ; pop rbx ; ret
0x0000000000194ecd : sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x00000000000a6949 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x0000000000113322 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000a809d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000001ad84d : sbb eax, 0x66a00001 ; stc ; call qword ptr [rax]
0x0000000000039955 : sbb eax, 0x854d0005 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000105e6a : sbb eax, 0x888cc ; mov rax, rbx ; pop rbx ; ret
0x0000000000110be5 : sbb eax, 0x89000001 ; ret 0x8944
0x0000000000127c1b : sbb eax, 0xf2cfb80 ; xchg eax, ebp ; ret 0xfb80
0x000000000012786a : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x0000000000148a21 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148a99 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000043e33 : sbb eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x0000000000133060 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000001391c0 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000d71e6 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x000000000004846a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000d7230 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x00000000001234d8 : sbb eax, eax ; ret
0x0000000000172315 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000000d5d23 : sbb ebp, ecx ; ret
0x00000000000bbaa7 : sbb ebx, 0x89000001 ; ret
0x0000000000181e45 : sbb ebx, ebp ; jmp qword ptr [rdi]
0x0000000000181e41 : sbb ebx, ebp ; ljmp ptr [rcx] ; sbb ebx, ebp ; jmp qword ptr [rdi]
0x0000000000102d8b : sbb ebx, ecx ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000194e85 : sbb ebx, edi ; call rax
0x00000000000fef75 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x0000000000054d50 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000012cc91 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000023acb : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000125954 : sbb edi, dword ptr [rcx] ; ret
0x0000000000199c49 : sbb edi, esi ; call rsp
0x0000000000195731 : sbb edi, esp ; call qword ptr [rax - 0x1f0003e4]
0x0000000000195730 : sbb edi, esp ; call qword ptr [rax - 0x1f0003e4]
0x000000000019b079 : sbb edx, edi ; jmp rsp
0x000000000019b078 : sbb edx, edi ; jmp rsp
0x00000000001aadc9 : sbb edx, esi ; jmp qword ptr [rcx]
0x00000000000025df : sbb esi, dword ptr [rdx] ; sahf ; jl 0x257a ; loop 0x25c5 ; ret 0x23cb
0x00000000001158de : sbb esi, ebx ; ret
0x00000000001a90e9 : sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000000dc5e4 : sbb esi, esi ; ret
0x0000000000174321 : sbb esp, dword ptr [0x5be17500] ; ret
0x00000000001956ed : sbb esp, edi ; call rax
0x000000000016cc0b : sbb rax, -1 ; ret
0x000000000016cc73 : sbb rax, -1 ; ret
0x000000000016ce78 : sbb rax, -1 ; ret
0x000000000016ce9b : sbb rax, -1 ; ret
0x000000000016cec1 : sbb rax, -1 ; ret
0x000000000016cee9 : sbb rax, -1 ; ret
0x000000000016cf0f : sbb rax, -1 ; ret
0x000000000016cf41 : sbb rax, -1 ; ret
0x000000000016cf6f : sbb rax, -1 ; ret
0x000000000016cfa1 : sbb rax, -1 ; ret
0x000000000016cfd1 : sbb rax, -1 ; ret
0x000000000016d001 : sbb rax, -1 ; ret
0x000000000016d031 : sbb rax, -1 ; ret
0x000000000016d063 : sbb rax, -1 ; ret
0x000000000016d093 : sbb rax, -1 ; ret
0x000000000016d0c3 : sbb rax, -1 ; ret
0x000000000016d39d : sbb rax, -1 ; ret
0x000000000016d448 : sbb rax, -1 ; ret
0x00000000001469a2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d4d57 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000001a697d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a697c : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a69ad : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; mov dh, ch ; jmp rbx
0x000000000008e3dd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014b9be : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000013366e : scasb al, byte ptr [rdi] ; cdq ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffee
0x000000000018a8a8 : scasb al, byte ptr [rdi] ; jns 0x18a8a4 ; jmp qword ptr [rdx]
0x000000000018a8b0 : scasb al, byte ptr [rdi] ; jns 0x18a8ac ; jmp qword ptr [rdx]
0x000000000018a94c : scasb al, byte ptr [rdi] ; jns 0x18a948 ; jmp qword ptr [rdx]
0x0000000000111115 : scasb al, byte ptr [rdi] ; loope 0x111125 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000ad5c6 : scasb al, byte ptr [rdi] ; push -0x38b6ffcf ; ret 0xffff
0x0000000000182638 : scasb al, byte ptr [rdi] ; push rsi ; in al, dx ; call rax
0x0000000000002f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000018871c : scasb al, byte ptr [rdi] ; test ebx, esi ; jmp rax
0x000000000014babd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a6af5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; js 0x1a6aff ; stc ; call qword ptr [rax]
0x00000000001a6b25 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x000000000007b5d9 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x000000000008de7d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000197729 : scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x0000000000104916 : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x104924 ; call rbx
0x0000000000104908 : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001048fa : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104908 ; call rbx
0x0000000000117713 : scasd eax, dword ptr [rdi] ; jmp 0x76d3b065
0x00000000001178c6 : scasd eax, dword ptr [rdi] ; jmp 0x76d3b218
0x0000000000188b1d : scasd eax, dword ptr [rdi] ; jmp rcx
0x000000000011938f : scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x000000000009d4ee : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000037300 : scasd eax, dword ptr [rdi] ; ret
0x000000000007407c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000aa9fe : scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000872a8 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000aa9e9 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000aa9e9 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000037290 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x0000000000033e54 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000001096fd : scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000001735f5 : scasd eax, dword ptr [rdi] ; ret 0xffea
0x000000000010a223 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000138ec4 : scasd eax, dword ptr [rdi] ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138ed9 ; ret
0x0000000000002bcf : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd1 ; ret
0x00000000000025ac : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000088740 : scasd eax, dword ptr [rdi] ; xor eax, eax ; pop rbx ; ret
0x0000000000109a05 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000f8b48 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000114aac : setae al ; ret
0x000000000003041d : setae byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c75b8 : setbe al ; movzx eax, al ; pop rbx ; ret
0x000000000010a6e0 : setbe al ; ret
0x000000000010b030 : setbe al ; ret
0x000000000012aff8 : sete al ; add rsp, 8 ; ret
0x000000000013aa94 : sete al ; movzx eax, al ; ret
0x000000000013bb3c : sete al ; movzx eax, al ; ret
0x000000000013bb7c : sete al ; movzx eax, al ; ret
0x000000000002df35 : sete al ; ret
0x000000000003626c : sete al ; ret
0x0000000000077415 : sete al ; ret
0x0000000000077425 : sete al ; ret
0x00000000000acd6b : sete al ; ret
0x00000000000d16d9 : sete al ; ret
0x0000000000114a66 : sete al ; ret
0x0000000000052ef0 : setg byte ptr [rbx] ; add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000000d5b99 : setg dl ; jmp 0xd5b22
0x00000000000ac17a : setl al ; movzx eax, al ; neg eax ; ret
0x00000000000ac179 : setl al ; movzx eax, al ; neg eax ; ret
0x0000000000136e5c : setne al ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000ea9db : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x000000000006b349 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000ea9bd : setne al ; movzx eax, al ; neg eax ; ret
0x0000000000102574 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000035f26 : setne al ; movzx eax, al ; ret
0x0000000000036108 : setne al ; movzx eax, al ; ret
0x000000000007305c : setne al ; neg eax ; ret
0x000000000007cc8c : setne al ; neg eax ; ret
0x00000000000773e8 : setne al ; ret
0x00000000000aebda : setne dl ; jmp 0xaebea
0x00000000000b14fb : setne dl ; jmp 0xb150a
0x00000000000b3cb2 : setne dl ; jmp 0xb3cca
0x0000000000096005 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ee1d2 : sgdt ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026553 : sgdt ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000195744 : shl byte ptr [rcx], 1 ; cld ; jmp qword ptr [rax]
0x00000000000aa29f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000034853 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000034878 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000034a66 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000170903 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000089ca5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x0000000000096945 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000016f9bb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001707fb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016f9d2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000170812 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000008d566 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008d577 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000009efe8 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000016f8b1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001ad810 : shl byte ptr [rsi - 7], 1 ; call qword ptr [rax]
0x000000000017e230 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000194fe8 : shl dword ptr [rbp + rdi*8 - 0x25aae01], 1 ; call rcx
0x0000000000194ff0 : shl dword ptr [rbp - 0x59ae0003], 1 ; std ; jmp rcx
0x0000000000194fe0 : shl dword ptr [rbx - 0x5bae0003], 1 ; std ; call rcx
0x0000000000194fd8 : shl dword ptr [rcx - 0x5d2e0003], 1 ; std ; call rcx
0x0000000000183e28 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000016f936 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa0fb : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x00000000000aa1bf : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000008d562 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000016f9ed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000017082d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f9d6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000170816 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f9bf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001707ff : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016e47b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f04f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f06a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f085 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f11f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f13a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f155 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f21f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f23a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f255 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f31f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f33a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f355 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f370 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f39f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3ba : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3d5 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f3f0 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f41f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f43a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f455 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f470 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f49f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4ba : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4d5 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f4f0 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f51f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f53a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f555 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f570 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f59f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5ba : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5d5 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f5f0 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f62f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f64a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f665 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f680 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f6bf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f6da : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f6f5 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f710 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f74f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f76a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f785 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f7a0 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f7df : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f7fa : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f815 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f830 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f87f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f89a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f8b5 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f8d0 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f91f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f93a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f955 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f970 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016faab : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017066f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017068a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706a5 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706c0 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001706ef : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017070a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170725 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170740 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017076f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017078a : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001707a5 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001707c0 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f951 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e93c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000008e9a6 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000008eaa2 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000965ec : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009664c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009eef7 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009ef58 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009f057 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009f228 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x000000000016f811 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000045a24 : shl eax, 0x1e ; or eax, edx ; ret
0x000000000012415a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000036083 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000048a2c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000489b7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048986 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000094a91 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000208f0 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000003a688 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00000000000e500b : shl edx, 2 ; xor esi, esi ; call 0x8f249
0x00000000000e3563 : shl esi, 2 ; call 0x1f7f5
0x0000000000123feb : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012418c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000048a2b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000489b6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048985 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000036082 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000208ef : shl rdi, 4 ; add rdi, rbp ; call rax
0x00000000000208ee : shl rdi, 4 ; add rdi, rbp ; call rax
0x00000000000e3562 : shl rsi, 2 ; call 0x1f7f6
0x000000000012418b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000187e48 : shr ah, 0xf1 ; call rax
0x0000000000187e4c : shr ah, 1 ; int1 ; jmp rax
0x00000000000facc9 : shr al, 0x61 ; ret
0x0000000000112705 : shr al, 0x65 ; ret
0x00000000001126b3 : shr al, 0xb7 ; ret
0x0000000000187dac : shr al, 0xf1 ; jmp rax
0x0000000000114a26 : shr ax, 0xe ; and eax, 1 ; ret
0x0000000000143e11 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000c84bf : shr bl, cl ; ret
0x0000000000047a2e : shr bl, cl ; stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x000000000018b098 : shr byte ptr [rax], 0xfa ; push rax ; sub dl, bh ; jmp rax
0x00000000000bd5ee : shr byte ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c222f : shr byte ptr [rcx - 0x40], 1 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000196378 : shr byte ptr [rcx - 0x56af0004], 0xfc ; jmp rax
0x000000000009f80f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000000b9f4f : shr byte ptr [rcx], 1 ; ret
0x0000000000194eac : shr byte ptr [rcx], 1 ; sti ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000029ae8 : shr byte ptr [rcx], cl ; ret
0x000000000008eceb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000f8b4d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000001b0ad0 : shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000187e74 : shr ch, 0xf1 ; jmp rax
0x0000000000186c79 : shr ch, cl ; jmp qword ptr [rax]
0x0000000000186c75 : shr ch, cl ; ljmp ptr [rbx - 0x2e] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000187dcc : shr cl, 0xf1 ; jmp rax
0x0000000000044ac0 : shr cl, cl ; ret
0x0000000000187ebc : shr dh, 0xf1 ; call rax
0x0000000000187ec0 : shr dh, 1 ; int1 ; jmp rax
0x0000000000195524 : shr dh, 1 ; sti ; jmp qword ptr [rax]
0x0000000000187dec : shr dl, 0xf1 ; jmp rax
0x0000000000187dec : shr dl, 0xf1 ; jmp rax
0x000000000019500c : shr dword ptr [rcx - 0x55b10003], 1 ; std ; jmp rsi
0x00000000000c7080 : shr dword ptr [rcx], 1 ; ret
0x00000000001a9470 : shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x0000000000119438 : shr eax, 0x18 ; ret
0x0000000000034b91 : shr eax, 0x1f ; ret
0x0000000000034bae : shr eax, 0x1f ; ret
0x0000000000034f1b : shr eax, 0x1f ; ret
0x000000000013c457 : shr eax, 0x1f ; ret
0x000000000017087c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x17088f ; xor eax, eax ; ret
0x00000000000347c0 : shr eax, 0x3f ; ret
0x00000000000347e6 : shr eax, 0x3f ; ret
0x0000000000107568 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000aac1a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000114a27 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000d72e5 : shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x0000000000077f02 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000124160 : shr eax, 4 ; ret
0x0000000000077f12 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000aabf9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000035f3f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000010a47b : shr eax, cl ; and eax, 1 ; ret
0x000000000010a50b : shr eax, cl ; and eax, 1 ; ret
0x000000000010a5ab : shr eax, cl ; and eax, 1 ; ret
0x000000000010a63b : shr eax, cl ; and eax, 1 ; ret
0x000000000010a6cb : shr eax, cl ; and eax, 1 ; ret
0x000000000010a75b : shr eax, cl ; and eax, 1 ; ret
0x000000000010a7fb : shr eax, cl ; and eax, 1 ; ret
0x000000000010a89b : shr eax, cl ; and eax, 1 ; ret
0x000000000010a93b : shr eax, cl ; and eax, 1 ; ret
0x000000000010a9cb : shr eax, cl ; and eax, 1 ; ret
0x000000000010aa66 : shr eax, cl ; and eax, 1 ; ret
0x000000000010aafb : shr eax, cl ; and eax, 1 ; ret
0x000000000010acd7 : shr eax, cl ; and eax, 1 ; ret
0x000000000010ae1d : shr eax, cl ; and eax, 1 ; ret
0x000000000010ae9d : shr eax, cl ; and eax, 1 ; ret
0x000000000010af1d : shr eax, cl ; and eax, 1 ; ret
0x000000000010af9d : shr eax, cl ; and eax, 1 ; ret
0x000000000010b01d : shr eax, cl ; and eax, 1 ; ret
0x000000000010b09d : shr eax, cl ; and eax, 1 ; ret
0x000000000010b11d : shr eax, cl ; and eax, 1 ; ret
0x000000000010b19d : shr eax, cl ; and eax, 1 ; ret
0x000000000010b21d : shr eax, cl ; and eax, 1 ; ret
0x000000000010b29d : shr eax, cl ; and eax, 1 ; ret
0x000000000010b31a : shr eax, cl ; and eax, 1 ; ret
0x000000000010b39d : shr eax, cl ; and eax, 1 ; ret
0x000000000010b547 : shr eax, cl ; and eax, 1 ; ret
0x0000000000142fe1 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000035f97 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f5b82 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f5df8 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000048b3c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048ac1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a90 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000ca7b6 : shr ecx, cl ; ret
0x00000000000ca7b6 : shr ecx, cl ; ret
0x0000000000072e73 : shr edx, 2 ; sub eax, edx ; ret
0x0000000000072e88 : shr edx, 2 ; sub eax, edx ; ret
0x000000000013c6fa : shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000000759b0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x0000000000075aa0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002da79 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da90 ; ret
0x0000000000048b3b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048ac0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a8f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000347bf : shr rax, 0x3f ; ret
0x00000000000347e5 : shr rax, 0x3f ; ret
0x0000000000107567 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000012415f : shr rax, 4 ; ret
0x0000000000072e72 : shr rdx, 2 ; sub eax, edx ; ret
0x0000000000072e87 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000013c6f9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000009ea91 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ea01 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009970e : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009bd2c : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000107553 : sldt word ptr [rax] ; or eax, edi ; ret
0x000000000017d409 : sldt word ptr [rax] ; ret
0x00000000000e0ff1 : stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe0f95
0x000000000011e2e2 : stc ; adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012e35b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000123c31 : stc ; add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x000000000012786c : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000001a6afa : stc ; call qword ptr [rax]
0x00000000001ad812 : stc ; call qword ptr [rax]
0x00000000001ad811 : stc ; call qword ptr [rax]
0x00000000001ad852 : stc ; call qword ptr [rax]
0x00000000001ad851 : stc ; call qword ptr [rax]
0x000000000019ade2 : stc ; call qword ptr [rdi + rbx + 2]
0x00000000000ad91e : stc ; call rbx
0x00000000000ba569 : stc ; call rbx
0x000000000019aa22 : stc ; call rsp
0x000000000019ab12 : stc ; call rsp
0x000000000019aba2 : stc ; call rsp
0x000000000019aba1 : stc ; call rsp
0x000000000019aba0 : stc ; call rsp
0x000000000019acd2 : stc ; call rsp
0x000000000019acea : stc ; call rsp
0x000000000019adda : stc ; call rsp
0x000000000019adea : stc ; call rsp
0x000000000019ae6a : stc ; call rsp
0x000000000019aeaa : stc ; call rsp
0x000000000010de51 : stc ; cmp cl, byte ptr [rdi] ; ret 0xc084
0x000000000012ac02 : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000f90bc : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000fa883 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000088376 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f3522 : stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000f4b63 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000f4b62 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000f4b61 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000896bf : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000f8f22 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000f9602 : stc ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x000000000019ae62 : stc ; inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x000000000019acca : stc ; inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x000000000000366f : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001aa589 : stc ; int1 ; call rsi
0x000000000014aa72 : stc ; je 0x14aa3e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014c102 : stc ; je 0x14c0ce ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001b2aca : stc ; jmp qword ptr [rsi]
0x00000000001b2afa : stc ; jmp qword ptr [rsi]
0x00000000001b2b2a : stc ; jmp qword ptr [rsi]
0x00000000001b2b5a : stc ; jmp qword ptr [rsi]
0x00000000001b2b8a : stc ; jmp qword ptr [rsi]
0x00000000001b2bba : stc ; jmp qword ptr [rsi]
0x000000000003329d : stc ; jmp rcx
0x000000000019aa42 : stc ; jmp rsp
0x000000000019ab3a : stc ; jmp rsp
0x000000000019afca : stc ; jmp rsp
0x0000000000183ca4 : stc ; jnp 0x183c63 ; ret
0x000000000019aea2 : stc ; lcall ptr [rsp - 0x2f0bfffe] ; stc ; call rsp
0x000000000019ace2 : stc ; ljmp ptr [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x0000000000153798 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000156168 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158b38 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015af88 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015da58 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160578 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000010b8d3 : stc ; mov esp, 0x8948002b ; ret 0x8d48
0x0000000000127af2 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127af1 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e97b : stc ; mov rax, rdi ; ret
0x000000000009e97a : stc ; mov rax, rdi ; ret
0x000000000019aa3a : stc ; push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x0000000000048b7d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000019ab0a : stc ; push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x00000000000aa5e9 : stc ; salc ; clc ; ret
0x0000000000172a5a : stc ; salc ; clc ; ret
0x000000000010a47a : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a50a : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a5aa : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a63a : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a6ca : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a75a : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a7fa : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a89a : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a93a : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010a9ca : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010aa65 : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010aafa : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010ae1c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010ae9c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010af1c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010af9c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b01c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b09c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b11c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b19c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b21c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b29c : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b319 : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000010b39c : stc ; shr eax, cl ; and eax, 1 ; ret
0x0000000000195585 : stc ; sti ; call qword ptr [rax]
0x0000000000140913 : stc ; sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000009ffe4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0737 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0e84 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000008b3f5 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x0000000000046075 : std ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000cd98e : std ; add byte ptr [rax], al ; jne 0xcd961 ; ret
0x00000000000e7e52 : std ; add byte ptr [rcx], bh ; ret
0x00000000000e7e51 : std ; add byte ptr [rcx], bh ; ret
0x00000000001950b6 : std ; call qword ptr [rax + 0x20fffda6]
0x0000000000194fca : std ; call qword ptr [rax]
0x00000000001951ee : std ; call qword ptr [rax]
0x0000000000195002 : std ; call qword ptr [rcx + 0x31fffda8]
0x000000000019cfca : std ; call qword ptr [rcx]
0x0000000000194fb2 : std ; call qword ptr [rdx]
0x0000000000194fb2 : std ; call qword ptr [rdx]
0x0000000000194fb2 : std ; call qword ptr [rdx]
0x0000000000195046 : std ; call qword ptr [rsi]
0x0000000000194fd6 : std ; call rcx
0x0000000000194fda : std ; call rcx
0x0000000000194fd6 : std ; call rcx
0x0000000000194fde : std ; call rcx
0x0000000000194fda : std ; call rcx
0x0000000000194fd6 : std ; call rcx
0x0000000000194fe6 : std ; call rcx
0x0000000000194fde : std ; call rcx
0x0000000000194fee : std ; call rcx
0x000000000019500a : std ; call rcx
0x000000000019b9aa : std ; call rsp
0x000000000019bab2 : std ; call rsp
0x00000000000f6431 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f645e : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000012e839 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000076a47 : std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000076a46 : std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000019500e : std ; dec dword ptr [rsi - 0x56] ; std ; jmp rsi
0x000000000019b9a2 : std ; dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x000000000003505d : std ; fstp st(1) ; ret
0x00000000001af3a9 : std ; hlt ; jmp qword ptr [rcx]
0x00000000001af3c1 : std ; hlt ; jmp qword ptr [rcx]
0x000000000007676f : std ; imul edi, ebp, 0x89c085ff ; ret
0x0000000000197971 : std ; in eax, dx ; call rsp
0x00000000001950c2 : std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x00000000001950b2 : std ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x000000000019b9da : std ; inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00000000001951ea : std ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951e6 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951c6 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x0000000000195116 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x0000000000195136 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x00000000001951ca : std ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x000000000019511a : std ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x000000000019513a : std ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x000000000019520a : std ; inc ecx ; mov bh, 0xfd ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000187f99 : std ; int1 ; call qword ptr [rax]
0x0000000000187f7d : std ; int1 ; jmp qword ptr [rax]
0x0000000000187f95 : std ; int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x0000000000194fc6 : std ; jmp qword ptr [rax]
0x000000000019508e : std ; jmp qword ptr [rax]
0x00000000001950ba : std ; jmp qword ptr [rax]
0x00000000001951ce : std ; jmp qword ptr [rax]
0x0000000000194fc6 : std ; jmp qword ptr [rax]
0x000000000019ccd2 : std ; jmp qword ptr [rdi]
0x000000000019c202 : std ; jmp qword ptr [rdx]
0x00000000001950c6 : std ; jmp rax
0x0000000000194ff6 : std ; jmp rcx
0x000000000019511e : std ; jmp rcx
0x000000000019513e : std ; jmp rcx
0x0000000000194fb6 : std ; jmp rdx
0x0000000000194fba : std ; jmp rdx
0x0000000000194fb6 : std ; jmp rdx
0x0000000000195012 : std ; jmp rsi
0x000000000019503e : std ; jmp rsi
0x00000000001a4d82 : std ; jmp rsp
0x000000000019520e : std ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000187cda : std ; lcall ptr [rax] ; ret 0xfffd
0x0000000000152fbb : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000015598b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000015835b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000015b18b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000015dc5b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000016077b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000001950be : std ; push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; jmp rax
0x0000000000195042 : std ; push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x0000000000100eef : std ; ret 0xfffc
0x00000000000aebd9 : std ; setne dl ; jmp 0xaebeb
0x00000000000b14fa : std ; setne dl ; jmp 0xb150b
0x00000000000b3cb1 : std ; setne dl ; jmp 0xb3ccb
0x0000000000051341 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000005137a : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000515fe : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000084112 : std ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000001035e0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000005a6d8 : sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x0000000000194f52 : sti ; call qword ptr [rax + 0x10fffb74]
0x0000000000194f5a : sti ; call qword ptr [rax + 0x10fffb77]
0x0000000000194f62 : sti ; call qword ptr [rax + 0x10fffb7a]
0x0000000000194f6a : sti ; call qword ptr [rax + 0x10fffb7d]
0x0000000000194f72 : sti ; call qword ptr [rax + 0x10fffb80]
0x0000000000194f7a : sti ; call qword ptr [rax + 0x10fffb83]
0x0000000000194f82 : sti ; call qword ptr [rax + 0x10fffb86]
0x0000000000195566 : sti ; call qword ptr [rax - 0x1f000410]
0x0000000000195512 : sti ; call qword ptr [rax - 0x1f000417]
0x0000000000195386 : sti ; call qword ptr [rax - 0x1f00042e]
0x000000000019539a : sti ; call qword ptr [rax - 0x1f00043c]
0x0000000000194f42 : sti ; call qword ptr [rax - 0x1f000493]
0x0000000000081059 : sti ; call qword ptr [rax]
0x0000000000194e36 : sti ; call qword ptr [rax]
0x0000000000194e76 : sti ; call qword ptr [rax]
0x0000000000194e92 : sti ; call qword ptr [rax]
0x0000000000194eb2 : sti ; call qword ptr [rax]
0x0000000000194ed2 : sti ; call qword ptr [rax]
0x0000000000194f22 : sti ; call qword ptr [rax]
0x0000000000194f4e : sti ; call qword ptr [rax]
0x0000000000194f56 : sti ; call qword ptr [rax]
0x0000000000194f5e : sti ; call qword ptr [rax]
0x0000000000194f66 : sti ; call qword ptr [rax]
0x0000000000194f6e : sti ; call qword ptr [rax]
0x0000000000194f76 : sti ; call qword ptr [rax]
0x0000000000194f7e : sti ; call qword ptr [rax]
0x0000000000194f76 : sti ; call qword ptr [rax]
0x0000000000194f86 : sti ; call qword ptr [rax]
0x000000000019522e : sti ; call qword ptr [rax]
0x0000000000195282 : sti ; call qword ptr [rax]
0x0000000000195286 : sti ; call qword ptr [rax]
0x000000000019528a : sti ; call qword ptr [rax]
0x00000000001952b6 : sti ; call qword ptr [rax]
0x000000000019531e : sti ; call qword ptr [rax]
0x0000000000195366 : sti ; call qword ptr [rax]
0x00000000001953ba : sti ; call qword ptr [rax]
0x0000000000195532 : sti ; call qword ptr [rax]
0x0000000000195531 : sti ; call qword ptr [rax]
0x0000000000195586 : sti ; call qword ptr [rax]
0x00000000001a7b7a : sti ; call qword ptr [rax]
0x00000000001a7baa : sti ; call qword ptr [rax]
0x00000000001952b6 : sti ; call qword ptr [rax]
0x0000000000194e12 : sti ; call rax
0x0000000000194e26 : sti ; call rax
0x0000000000194e86 : sti ; call rax
0x0000000000194eaa : sti ; call rax
0x0000000000194f12 : sti ; call rax
0x0000000000195232 : sti ; call rax
0x000000000019526e : sti ; call rax
0x00000000001952be : sti ; call rax
0x00000000001952d6 : sti ; call rax
0x000000000019533a : sti ; call rax
0x0000000000195356 : sti ; call rax
0x00000000001953aa : sti ; call rax
0x0000000000195522 : sti ; call rax
0x0000000000195576 : sti ; call rax
0x00000000001b5fda : sti ; call rcx
0x00000000001bc1ba : sti ; call rcx
0x00000000001b64aa : sti ; call rsi
0x000000000019b89a : sti ; call rsp
0x000000000019b899 : sti ; call rsp
0x000000000019b8ca : sti ; call rsp
0x00000000000bea6e : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cdec0 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006dcdb : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f616 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000007f42e : sti ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x000000000006d361 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000019522a : sti ; inc dword ptr [rax + 0x10fffbe5] ; fdivr st(3) ; call rax
0x0000000000194eea : sti ; inc dword ptr [rax + 0x47] ; sti ; jmp qword ptr [rax]
0x0000000000194ee9 : sti ; inc dword ptr [rax + 0x47] ; sti ; jmp qword ptr [rax]
0x0000000000194f3e : sti ; inc dword ptr [rax + 0x6c] ; sti ; call qword ptr [rax - 0x1f000493]
0x0000000000195472 : sti ; inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x0000000000194e32 : sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000195562 : sti ; inc dword ptr [rax - 0x11] ; sti ; call qword ptr [rax - 0x1f000410]
0x000000000019526a : sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195266 : sti ; inc dword ptr [rax - 0x1d] ; sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195296 : sti ; inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x0000000000195316 : sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000195572 : sti ; inc dword ptr [rax - 0x2f00040c] ; cmc ; sti ; jmp qword ptr [rax]
0x000000000019551e : sti ; inc dword ptr [rax - 0x2f000413] ; out dx, al ; sti ; jmp qword ptr [rax]
0x00000000001953a6 : sti ; inc dword ptr [rax - 0x2f000438] ; leave ; sti ; jmp qword ptr [rax]
0x0000000000195352 : sti ; inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000195352 : sti ; inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000194f0e : sti ; inc dword ptr [rax - 0x2f0004a4] ; pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000195382 : sti ; inc dword ptr [rax - 0x2f] ; sti ; call qword ptr [rax - 0x1f00042e]
0x0000000000195396 : sti ; inc dword ptr [rax - 0x3d] ; sti ; call qword ptr [rax - 0x1f00043c]
0x0000000000195226 : sti ; inc dword ptr [rax - 0x7f00041d] ; in eax, 0xfb ; call qword ptr [rax]
0x0000000000194e22 : sti ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000195492 : sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x0000000000194e8a : sti ; inc dword ptr [rax] ; or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x0000000000194e7a : sti ; inc dword ptr [rax] ; sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000194eca : sti ; inc dword ptr [rax] ; sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x0000000000194ef2 : sti ; inc dword ptr [rax] ; sti ; jmp rax
0x0000000000194ef1 : sti ; inc dword ptr [rax] ; sti ; jmp rax
0x0000000000195582 : sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x000000000019552e : sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000018a4f8 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000194e72 : sti ; jmp qword ptr [rax]
0x0000000000194eee : sti ; jmp qword ptr [rax]
0x0000000000194eed : sti ; jmp qword ptr [rax]
0x0000000000194eec : sti ; jmp qword ptr [rax]
0x0000000000194f16 : sti ; jmp qword ptr [rax]
0x000000000019529a : sti ; jmp qword ptr [rax]
0x0000000000195302 : sti ; jmp qword ptr [rax]
0x0000000000195306 : sti ; jmp qword ptr [rax]
0x000000000019530a : sti ; jmp qword ptr [rax]
0x000000000019531a : sti ; jmp qword ptr [rax]
0x0000000000195332 : sti ; jmp qword ptr [rax]
0x000000000019535a : sti ; jmp qword ptr [rax]
0x000000000019538e : sti ; jmp qword ptr [rax]
0x00000000001953ae : sti ; jmp qword ptr [rax]
0x0000000000195526 : sti ; jmp qword ptr [rax]
0x000000000019557a : sti ; jmp qword ptr [rax]
0x000000000019529a : sti ; jmp qword ptr [rax]
0x0000000000194e72 : sti ; jmp qword ptr [rax]
0x00000000001bafaa : sti ; jmp qword ptr [rdx]
0x00000000001bb0aa : sti ; jmp qword ptr [rdx]
0x00000000001bb182 : sti ; jmp qword ptr [rdx]
0x00000000001bb342 : sti ; jmp qword ptr [rdx]
0x00000000001bb42a : sti ; jmp qword ptr [rdx]
0x000000000018c5f2 : sti ; jmp rax
0x0000000000194e3a : sti ; jmp rax
0x0000000000194e82 : sti ; jmp rax
0x0000000000194ef6 : sti ; jmp rax
0x0000000000194ef5 : sti ; jmp rax
0x0000000000194f46 : sti ; jmp rax
0x0000000000195212 : sti ; jmp rax
0x00000000001952a2 : sti ; jmp rax
0x00000000001952a6 : sti ; jmp rax
0x00000000001952aa : sti ; jmp rax
0x0000000000195322 : sti ; jmp rax
0x0000000000195326 : sti ; jmp rax
0x0000000000195322 : sti ; jmp rax
0x000000000019532a : sti ; jmp rax
0x0000000000195322 : sti ; jmp rax
0x000000000019538a : sti ; jmp rax
0x000000000019539e : sti ; jmp rax
0x0000000000195516 : sti ; jmp rax
0x000000000019556a : sti ; jmp rax
0x00000000000d6f8b : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000d6fce : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001953ce : sti ; ljmp ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x0000000000153398 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155d68 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000158738 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b088 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015db58 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000160678 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e95d : sti ; mov rax, rdi ; ret
0x000000000009e95c : sti ; mov rax, rdi ; ret
0x00000000000e8c09 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x000000000011cfea : sti ; or dword ptr [rdi], ecx ; ret
0x0000000000194e8e : sti ; push qword ptr [rax + 0x1e] ; sti ; call qword ptr [rax]
0x0000000000194eae : sti ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000194f4a : sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x0000000000194e2e : sti ; push qword ptr [rax + 6] ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000195312 : sti ; push qword ptr [rax - 0x28] ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001952ae : sti ; push qword ptr [rax - 0x29] ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x000000000019532e : sti ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019552a : sti ; push qword ptr [rax - 0xf] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000019557e : sti ; push qword ptr [rax - 8] ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000194e6e : sti ; push qword ptr [rax] ; adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000001954f2 : sti ; push qword ptr [rax] ; add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000194e1e : sti ; push qword ptr [rax] ; add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000194ece : sti ; push qword ptr [rax] ; cmp bh, bl ; call qword ptr [rax]
0x00000000001952b2 : sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000194ea6 : sti ; push qword ptr [rax] ; sub bl, bh ; call rax
0x0000000000194ea5 : sti ; push qword ptr [rax] ; sub bl, bh ; call rax
0x00000000001952ce : sti ; push qword ptr [rax] ; xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x00000000001952ba : sti ; push rax ; fdiv st(3), st(0) ; call rax
0x00000000001952d2 : sti ; push rax ; fdivr st(3) ; call rax
0x0000000000195336 : sti ; push rax ; fsincos ; call rax
0x0000000000195392 : sti ; push rax ; sar ebx, -1 ; ret
0x0000000000194e7e : sti ; push rax ; sbb bl, bh ; jmp rax
0x0000000000183e2a : sti ; ret
0x0000000000183e29 : sti ; ret
0x0000000000042316 : sti ; ret 0xffbf
0x00000000000b1036 : sti ; ret 0xffbf
0x000000000019afc9 : sti ; stc ; jmp rsp
0x000000000019afc8 : sti ; stc ; jmp rsp
0x0000000000127c1d : sti ; sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x000000000002c377 : sti ; test rax, rax ; je 0x2c385 ; call rax
0x00000000000b05bf : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd9ade
0x00000000000b5a67 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccdef86
0x0000000000102830 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000002314 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x00000000000f006c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000123622 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001974dd : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x197539 ; in eax, dx ; jmp rsp
0x0000000000188b29 : stosb byte ptr [rdi], al ; call qword ptr [rax]
0x0000000000188b28 : stosb byte ptr [rdi], al ; call qword ptr [rax]
0x0000000000188ae9 : stosb byte ptr [rdi], al ; call rsp
0x0000000000188ae8 : stosb byte ptr [rdi], al ; call rsp
0x00000000001961b9 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi + 0x26fffca9]
0x00000000001962f5 : stosb byte ptr [rdi], al ; cld ; call rsp
0x00000000001962f4 : stosb byte ptr [rdi], al ; cld ; call rsp
0x00000000001962f1 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000196175 : stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x0000000000184304 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001a0b99 : stosb byte ptr [rdi], al ; jmp 0x1a0b9d
0x00000000001044fa : stosb byte ptr [rdi], al ; mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000047a30 : stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x000000000011e71b : stosb byte ptr [rdi], al ; or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000ac882 : stosb byte ptr [rdi], al ; pop rdx ; or al, 0 ; ret
0x0000000000002317 : stosb byte ptr [rdi], al ; ret
0x000000000000366e : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000195011 : stosb byte ptr [rdi], al ; std ; jmp rsi
0x0000000000195010 : stosb byte ptr [rdi], al ; std ; jmp rsi
0x0000000000083b72 : stosb byte ptr [rdi], al ; sysenter
0x00000000001a6675 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; js 0x1a66f0 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6725 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jae 0x1a671f ; jmp qword ptr [rdx]
0x00000000001b6655 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; call 0xffffffffd21b5d92
0x0000000000196171 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000196369 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x000000000019622d : stosd dword ptr [rdi], eax ; cld ; call rdx
0x000000000019622c : stosd dword ptr [rdi], eax ; cld ; call rdx
0x0000000000196229 : stosd dword ptr [rdi], eax ; cld ; inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x00000000001961ad : stosd dword ptr [rdi], eax ; cld ; jmp rsi
0x0000000000123e2a : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000035f9c : stosd dword ptr [rdi], eax ; ret
0x00000000000f5b87 : stosd dword ptr [rdi], eax ; ret
0x00000000000f5dfd : stosd dword ptr [rdi], eax ; ret
0x000000000018540c : stosd dword ptr [rdi], eax ; ret
0x0000000000185c8b : stosd dword ptr [rdi], eax ; ret
0x00000000001048f9 : stosd dword ptr [rdi], eax ; scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104909 ; call rbx
0x0000000000123e29 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9b : stosq qword ptr [rdi], rax ; ret
0x00000000000f5b86 : stosq qword ptr [rdi], rax ; ret
0x00000000000f5dfc : stosq qword ptr [rdi], rax ; ret
0x00000000001857f1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001956b5 : sub ah, bh ; call qword ptr [rax]
0x00000000001955d1 : sub ah, bh ; call rax
0x0000000000195591 : sub ah, bh ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x00000000001955b1 : sub ah, bh ; push rax ; sub esp, edi ; call rax
0x0000000000186a28 : sub ah, byte ptr [rbx - 0x13] ; push qword ptr [rsi + rbp*2 - 0x13] ; jmp rdi
0x00000000001aef98 : sub ah, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000021973 : sub al, 0 ; add byte ptr [rax], al ; call 0x2dc46
0x0000000000101fc3 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000fdf9f : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fe463 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000ffa61 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000ffaee : sub al, 0 ; add rsp, 8 ; ret
0x0000000000101a2b : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fe32b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8c64] ; ret
0x00000000000fe16b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8e24] ; ret
0x00000000000ff337 : sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001025e5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000fe4f9 : sub al, 0 ; mov rdx, rax ; jmp 0xfe493
0x0000000000101f6f : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000ff8d6 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff5bc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001019cc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101f39 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe172 : sub al, 0 ; ret
0x00000000000fe332 : sub al, 0 ; ret
0x00000000001014ae : sub al, 0 ; ret
0x00000000001882c8 : sub al, 0x29 ; bnd call qword ptr [rdi] ; sub dh, dl ; call qword ptr [rax]
0x000000000019e564 : sub al, 0x2a ; add byte ptr [rax], al ; pop rax ; jl 0x19e55b ; jmp qword ptr [rsi]
0x00000000000abc02 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000abc01 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000d6bcc : sub al, 0x44 ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d6bcb : sub al, 0x44 ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000001b0964 : sub al, 0x4e ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000195a10 : sub al, 0x51 ; cld ; call rdx
0x00000000001b1164 : sub al, 0x56 ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a64 : sub al, 0x6f ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000abc05 : sub al, 0x75 ; pop rax ; ret
0x00000000000abc04 : sub al, 0x75 ; pop rax ; ret
0x00000000000d7ac9 : sub al, 0x83 ; ret 0x4801
0x00000000000bbcf9 : sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000016f003 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009dac6 : sub al, 0xf ; mov dh, 0x45 ; ret
0x000000000009bb82 : sub al, 0xf ; mov dh, 0x55 ; ret
0x000000000009d5e6 : sub al, 0xf ; mov dh, 0x55 ; ret
0x0000000000127c1e : sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x0000000000101b6f : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x0000000000101b6e : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000001020ef : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000001020ee : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000000adf8e : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019bc64 : sub al, 1 ; add byte ptr [rax], al ; call 0x1119a4c0
0x00000000001ae80d : sub al, 1 ; add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x000000000019afdd : sub al, 2 ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x00000000001bc064 : sub al, 5 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x000000000019e5bd : sub al, byte ptr [rax] ; add al, al ; jg 0x19e5b2 ; jmp rsp
0x000000000019e595 : sub al, byte ptr [rax] ; add al, bh ; jl 0x19e58a ; jmp rsp
0x0000000000033ea2 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000120693 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000011feb6 : sub al, byte ptr [rax] ; call rax
0x0000000000120715 : sub al, byte ptr [rax] ; call rax
0x0000000000120fd5 : sub al, byte ptr [rax] ; ret
0x0000000000120fd4 : sub al, byte ptr [rax] ; ret
0x000000000012833e : sub al, byte ptr [rax] ; test eax, eax ; je 0x12834e ; ret
0x000000000005c6b9 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x0000000000035302 : sub al, byte ptr [rcx + rdi] ; test eax, eax ; jne 0x35319 ; ret
0x00000000001ae60d : sub al, byte ptr [rcx] ; add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x000000000004c4e5 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e35b1 : sub al, ch ; int1 ; ret 0xfff3
0x00000000000fa057 : sub al, ch ; ret
0x0000000000135687 : sub al, ch ; ret
0x0000000000033635 : sub al, ch ; ret 0xfffe
0x0000000000100eed : sub al, ch ; std ; ret 0xfffc
0x000000000005a7b4 : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000195659 : sub bh, ah ; call rax
0x00000000001aeda8 : sub bh, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000195595 : sub bh, ah ; jmp rax
0x00000000001956b9 : sub bh, ah ; push rax ; sub edi, esp ; jmp rax
0x000000000007206c : sub bh, bh ; loopne 0x72009 ; mov eax, 0xffffffff ; ret
0x00000000001a7d71 : sub bh, dl ; call qword ptr [rdi]
0x0000000000194ea9 : sub bl, bh ; call rax
0x00000000000abbf6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000076b95 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000741de : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000013c191 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c241 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000142d77 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000013bec1 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000013bf01 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000f5c37 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000076b96 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000001216e4 : sub byte ptr [rax + 0xf], cl ; ret 0x8949
0x000000000013591e : sub byte ptr [rax + 1], bh ; ret
0x000000000013bdc6 : sub byte ptr [rax + 1], bh ; ret
0x000000000013c152 : sub byte ptr [rax + 1], bh ; ret
0x00000000000741df : sub byte ptr [rax + 1], cl ; ret 0x8949
0x000000000013c192 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013c242 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000084fb4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000132588 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000135257 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000032a2f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000001116a9 : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000112425 : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f9e61 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x00000000000896c5 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f8f27 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000073f35 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x0000000000073f34 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000006d20c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000142d78 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000713f8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000713f7 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000e2dc4 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000eef90 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000022e1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x000000000002aca4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xea
0x000000000019e405 : sub byte ptr [rax], al ; add byte ptr [rax], bl ; jp 0x19e3fa ; jmp qword ptr [rcx]
0x00000000001382f5 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138325 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138355 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138385 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140d7a : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140915 : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000140914 : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000140f28 : sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000001953d0 : sub byte ptr [rax], al ; cld ; push rax ; add esp, edi ; call rax
0x0000000000138ec5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138ed8 ; ret
0x0000000000140ece : sub byte ptr [rax], al ; ret
0x000000000013dd74 : sub byte ptr [rax], al ; test eax, eax ; je 0x13dd88 ; xor eax, eax ; ret
0x0000000000140ea8 : sub byte ptr [rax], al ; test eax, eax ; jne 0x140ec1 ; xor eax, eax ; pop rbx ; ret
0x00000000001443b4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1443c8 ; xor eax, eax ; ret
0x00000000001443e4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1443f8 ; xor eax, eax ; ret
0x0000000000144414 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144428 ; xor eax, eax ; ret
0x0000000000144444 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144458 ; xor eax, eax ; ret
0x0000000000144474 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144488 ; xor eax, eax ; ret
0x00000000001444a4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1444b8 ; xor eax, eax ; ret
0x00000000000022e2 : sub byte ptr [rax], dl ; salc ; ret
0x0000000000140d79 : sub byte ptr [rax], r8b ; add rsp, 8 ; ret
0x0000000000140f27 : sub byte ptr [rax], r8b ; call qword ptr [rax]
0x00000000000abbfa : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000abbf9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001b0838 : sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000000206bf : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000022687 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000022700 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000033b8d : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007544f : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007c71f : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007e220 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008453f : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000845d4 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000845ea : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000850a6 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f0368 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f0407 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f044e : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013079e : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013b499 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013b4c1 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013b4e2 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000044c97 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000044d17 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000044dc5 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000006ac4b : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000007abb1 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000007ae60 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000007bc66 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000007be30 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b62e8 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b6396 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b6438 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000012221a : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000001373af : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000001434f3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000001434f2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000001b3c08 : sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000000abbf7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000819a9 : sub byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x000000000013c217 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008162a : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000d9367 : sub byte ptr [rcx - 0x17bfdbbc], cl ; call rax
0x0000000000033500 : sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x000000000002a27a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00000000000e3ec9 : sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x000000000013bec2 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000013bf02 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000850e0 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000012e7ec : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001b0a58 : sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000000aed82 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x00000000000b16ab : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x00000000000b3e62 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x000000000004c66f : sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000004c73c : sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001ac2fa : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00000000001a8e5a : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x00000000001b0938 : sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000189a50 : sub byte ptr [rsi], al ; cmc ; call qword ptr [rcx]
0x00000000001af918 : sub byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000002c0c : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000195520 : sub ch, 0xfb ; call rax
0x00000000001afd19 : sub ch, dh ; jmp qword ptr [rbx]
0x0000000000034b32 : sub cl, al ; add rsp, 0x28 ; ret
0x0000000000034e61 : sub cl, al ; add rsp, 0x28 ; ret
0x0000000000034ace : sub cl, al ; jne 0x34ae8 ; add rsp, 0x28 ; ret
0x0000000000034e09 : sub cl, al ; jne 0x34e20 ; add rsp, 0x28 ; ret
0x0000000000034931 : sub cl, al ; ret
0x0000000000034956 : sub cl, al ; ret
0x0000000000034984 : sub cl, al ; ret
0x0000000000034cbe : sub cl, al ; ret
0x0000000000034ce3 : sub cl, al ; ret
0x0000000000034d10 : sub cl, al ; ret
0x00000000001aa588 : sub cl, bh ; int1 ; call rsi
0x00000000000d17ed : sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000099565 : sub cl, byte ptr [rdi] ; mov dh, 0x55 ; ret
0x00000000000662c8 : sub cl, byte ptr [rdi] ; test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007a8a5 : sub cl, ch ; ret 0xfffe
0x000000000010e74c : sub dh, al ; add byte ptr [rax], ah ; jmp 0x10e71a
0x000000000004bcd0 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000104c2d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac9e4 : sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000001af438 : sub dh, bh ; hlt ; jmp rdi
0x00000000001882cd : sub dh, dl ; call qword ptr [rax]
0x00000000001aeb38 : sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000018b0a1 : sub dl, bh ; call qword ptr [rax]
0x000000000018b09d : sub dl, bh ; jmp rax
0x000000000018b099 : sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x000000000019f701 : sub dl, ch ; jmp rax
0x0000000000188309 : sub dl, dh ; call rdi
0x000000000011b7f3 : sub dword ptr [rax - 0x76b7ffd6], esp ; ret 0x8d48
0x0000000000064324 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000012c5bd : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000128775 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128789 ; ret
0x000000000013821c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012ddb5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000012ddb5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001289f5 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012b8c6 : sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000012b985 : sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000012b9bd : sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000012c5a4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12c5b6 ; ret
0x0000000000188ae4 : sub dword ptr [rbx - 0x55b6000d], edi ; call rsp
0x0000000000168af3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x0000000000181e44 : sub dword ptr [rcx], ebx ; jmp 0x181e4a
0x000000000014366e : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000001515e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1515fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151737 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15174d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151887 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15189d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001519d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1519ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151b3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151c8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151ddd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151f2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152067 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15207d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001521b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1521cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152307 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15231d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152457 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15246d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001525a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1525bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001526f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15270d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152847 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15285d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153fcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154107 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15411d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154257 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15426d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1543bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15450d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154647 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15465d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154797 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1547ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1548fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154a4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154b9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154ced ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154e3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154f8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001550c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1550dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000155217 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15522d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156987 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15699d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ad7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156aed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156c3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156d8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ec7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156edd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157017 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15702d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157167 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15717d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1572cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157407 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15741d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157557 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15756d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001576a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1576bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15780d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157947 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15795d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157a97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x157aad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157be7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x157bfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151543 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151693 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517e3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151933 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a83 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151bd3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151d23 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151e71 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151fc3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152113 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152263 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001523b3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152503 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152653 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001527a3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f13 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154063 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001541b3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154303 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154453 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001545a3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001546f3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154841 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154993 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ae3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154c33 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154d83 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ed3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155023 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155173 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568e3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a33 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b83 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156cd3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e23 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f73 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570c3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157211 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157363 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001574b3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157603 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157753 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001578a3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001579f3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157b43 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015153f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015168f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001517df : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015192f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151a7f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151bcf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151d1f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151e6d : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000151fbf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015210f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015225f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001523af : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001524ff : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015264f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015279f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153f0f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015405f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001541af : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001542ff : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015444f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015459f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001546ef : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015483d : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015498f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154adf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154c2f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154d7f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154ecf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015501f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015516f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001568df : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156a2f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156b7f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156ccf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156e1f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156f6f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001570bf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015720d : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015735f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001574af : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001575ff : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015774f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015789f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001579ef : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157b3f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000066500 : sub dword ptr [rdi], ecx ; test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1de4 : sub dword ptr [rdi], ecx ; test dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001515ed : sub dword ptr [rdi], esp ; jmp r9
0x000000000015173d : sub dword ptr [rdi], esp ; jmp r9
0x000000000015188d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001519dd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000151b2d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000151c7d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000151dcd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000151f1d : sub dword ptr [rdi], esp ; jmp r9
0x000000000015206d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001521bd : sub dword ptr [rdi], esp ; jmp r9
0x000000000015230d : sub dword ptr [rdi], esp ; jmp r9
0x000000000015245d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001525ad : sub dword ptr [rdi], esp ; jmp r9
0x00000000001526fd : sub dword ptr [rdi], esp ; jmp r9
0x000000000015284d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000153fbd : sub dword ptr [rdi], esp ; jmp r9
0x000000000015410d : sub dword ptr [rdi], esp ; jmp r9
0x000000000015425d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001543ad : sub dword ptr [rdi], esp ; jmp r9
0x00000000001544fd : sub dword ptr [rdi], esp ; jmp r9
0x000000000015464d : sub dword ptr [rdi], esp ; jmp r9
0x000000000015479d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001548ed : sub dword ptr [rdi], esp ; jmp r9
0x0000000000154a3d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000154b8d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000154cdd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000154e2d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000154f7d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001550cd : sub dword ptr [rdi], esp ; jmp r9
0x000000000015521d : sub dword ptr [rdi], esp ; jmp r9
0x000000000015698d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000156add : sub dword ptr [rdi], esp ; jmp r9
0x0000000000156c2d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000156d7d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000156ecd : sub dword ptr [rdi], esp ; jmp r9
0x000000000015701d : sub dword ptr [rdi], esp ; jmp r9
0x000000000015716d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001572bd : sub dword ptr [rdi], esp ; jmp r9
0x000000000015740d : sub dword ptr [rdi], esp ; jmp r9
0x000000000015755d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001576ad : sub dword ptr [rdi], esp ; jmp r9
0x00000000001577fd : sub dword ptr [rdi], esp ; jmp r9
0x000000000015794d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000157a9d : sub dword ptr [rdi], esp ; jmp r9
0x0000000000157bed : sub dword ptr [rdi], esp ; jmp r9
0x0000000000170659 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f7e6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000138316 : sub eax, -0x80 ; add rsp, 8 ; ret
0x00000000000850b9 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013bf9a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7af5 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000e8495 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x00000000000822d2 : sub eax, 0x39480108 ; ret
0x000000000012b022 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ea695 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000034ba9 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x0000000000056841 : sub eax, 0x83000000 ; ret
0x00000000000989bd : sub eax, 0x854dffff ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bc6bb : sub eax, 0x88d0000 ; rol byte ptr [rcx], cl ; ret 0xb
0x00000000001336e4 : sub eax, 0x8948f631 ; out 0x89, eax ; ret
0x00000000000ed46d : sub eax, 0x9cdee ; call 0x39767
0x000000000013748e : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ce094 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000009751a : sub eax, 1 ; jne 0x97517 ; pop rbx ; pop rbp ; ret
0x000000000002a6e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004846f : sub eax, 1 ; ret
0x00000000000aa4d4 : sub eax, 1 ; ret
0x000000000011539e : sub eax, dword ptr [r8] ; cmp rdx, rax ; jne 0x115389 ; ret
0x0000000000109633 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000109626 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000115202 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000109718 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000011539f : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x115388 ; ret
0x00000000001095b2 : sub eax, dword ptr [rax] ; je 0x1095bd ; pop rbp ; ret
0x000000000010a345 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000109c1d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000115aec : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000109564 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000114ae4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114af8 ; xor eax, eax ; ret
0x0000000000114b14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b28 ; xor eax, eax ; ret
0x0000000000114b44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b58 ; xor eax, eax ; ret
0x0000000000114b74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b88 ; xor eax, eax ; ret
0x0000000000114ba4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114bb8 ; xor eax, eax ; ret
0x0000000000114bd4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114be8 ; xor eax, eax ; ret
0x0000000000114c04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c18 ; xor eax, eax ; ret
0x0000000000114c34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c48 ; xor eax, eax ; ret
0x0000000000114c64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c78 ; xor eax, eax ; ret
0x0000000000114c94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ca8 ; xor eax, eax ; ret
0x0000000000114cc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114cd8 ; xor eax, eax ; ret
0x0000000000114cf4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d08 ; xor eax, eax ; ret
0x0000000000114d24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d38 ; xor eax, eax ; ret
0x0000000000114d54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d68 ; xor eax, eax ; ret
0x0000000000114d84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d98 ; xor eax, eax ; ret
0x0000000000114db4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114dc8 ; xor eax, eax ; ret
0x0000000000114de4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114df8 ; xor eax, eax ; ret
0x0000000000114e14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e28 ; xor eax, eax ; ret
0x0000000000114e44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e58 ; xor eax, eax ; ret
0x0000000000114e74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e88 ; xor eax, eax ; ret
0x0000000000114ed4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ee8 ; xor eax, eax ; ret
0x0000000000114f04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f18 ; xor eax, eax ; ret
0x0000000000114f34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f48 ; xor eax, eax ; ret
0x0000000000114f64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f78 ; xor eax, eax ; ret
0x0000000000114f94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114fa8 ; xor eax, eax ; ret
0x0000000000114fc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114fd8 ; xor eax, eax ; ret
0x0000000000114ff4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x115008 ; xor eax, eax ; ret
0x0000000000115024 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x115038 ; xor eax, eax ; ret
0x0000000000115054 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x115068 ; xor eax, eax ; ret
0x0000000000115575 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x115587 ; ret
0x000000000002e69f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004bc80 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000aadc1 : sub eax, dword ptr [rcx + r8*4] ; je 0xaada7 ; ret
0x00000000000aadc2 : sub eax, dword ptr [rcx + rax*4] ; je 0xaada6 ; ret
0x000000000019b9d5 : sub eax, dword ptr [rcx] ; add ah, ah ; ret 0xfffd
0x000000000007d0be : sub eax, dword ptr [rdi + 0x18] ; ret
0x00000000000774d5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x000000000013bd85 : sub eax, dword ptr [rdi + 0x20] ; ret
0x00000000000773c5 : sub eax, dword ptr [rdi + 0x38] ; ret
0x000000000011953c : sub eax, dword ptr [rdi + rcx - 0x42] ; ret 0x8d45
0x00000000000734f5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000aad7a : sub eax, dword ptr [rdx + rcx*4] ; je 0xaad66 ; ret
0x000000000019afc5 : sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x000000000007c863 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000115aeb : sub eax, dword ptr es:[rax] ; pop rbp ; ret
0x0000000000110bfc : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014a64e : sub eax, eax ; ret
0x000000000014a66e : sub eax, eax ; ret
0x000000000007b6dd : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad15b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007c019 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000004a13d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008b12c : sub eax, ecx ; ret
0x000000000008b146 : sub eax, ecx ; ret
0x000000000008d3a1 : sub eax, ecx ; ret
0x000000000008d3b6 : sub eax, ecx ; ret
0x0000000000091c79 : sub eax, ecx ; ret
0x0000000000091c93 : sub eax, ecx ; ret
0x000000000009436e : sub eax, ecx ; ret
0x0000000000094393 : sub eax, ecx ; ret
0x000000000009f810 : sub eax, ecx ; ret
0x0000000000145a6c : sub eax, ecx ; ret
0x0000000000145a86 : sub eax, ecx ; ret
0x0000000000146a51 : sub eax, ecx ; ret
0x0000000000146a66 : sub eax, ecx ; ret
0x00000000001485f9 : sub eax, ecx ; ret
0x0000000000148613 : sub eax, ecx ; ret
0x000000000014a5be : sub eax, ecx ; ret
0x000000000014a5e3 : sub eax, ecx ; ret
0x000000000014bfc9 : sub eax, ecx ; ret
0x000000000014bfe3 : sub eax, ecx ; ret
0x000000000014d96e : sub eax, ecx ; ret
0x000000000014d993 : sub eax, ecx ; ret
0x000000000014f80c : sub eax, ecx ; ret
0x000000000014f826 : sub eax, ecx ; ret
0x0000000000150f71 : sub eax, ecx ; ret
0x0000000000150f86 : sub eax, ecx ; ret
0x0000000000163099 : sub eax, ecx ; ret
0x00000000001630b3 : sub eax, ecx ; ret
0x00000000001655ee : sub eax, ecx ; ret
0x0000000000165613 : sub eax, ecx ; ret
0x000000000016e466 : sub eax, ecx ; ret
0x000000000016f19e : sub eax, ecx ; ret
0x000000000016f209 : sub eax, ecx ; ret
0x000000000016f308 : sub eax, ecx ; ret
0x000000000016f615 : sub eax, ecx ; ret
0x000000000016fa59 : sub eax, ecx ; ret
0x000000000016fa6b : sub eax, ecx ; ret
0x000000000008b8b9 : sub eax, edi ; ret
0x000000000008ba7e : sub eax, edi ; ret
0x000000000008bad5 : sub eax, edi ; ret
0x0000000000110c08 : sub eax, edi ; ret
0x0000000000110b8f : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x000000000003a639 : sub eax, edx ; ret
0x000000000003a64e : sub eax, edx ; ret
0x000000000003a66e : sub eax, edx ; ret
0x0000000000072e76 : sub eax, edx ; ret
0x0000000000072e8b : sub eax, edx ; ret
0x000000000007915e : sub eax, edx ; ret
0x000000000007c88b : sub eax, edx ; ret
0x000000000007c896 : sub eax, edx ; ret
0x000000000008b344 : sub eax, edx ; ret
0x000000000008db44 : sub eax, edx ; ret
0x000000000008ecc6 : sub eax, edx ; ret
0x000000000008ecec : sub eax, edx ; ret
0x000000000009f5b7 : sub eax, edx ; ret
0x000000000009f725 : sub eax, edx ; ret
0x000000000009f7eb : sub eax, edx ; ret
0x00000000000f8b4e : sub eax, edx ; ret
0x00000000000fcd32 : sub eax, edx ; ret
0x0000000000144e03 : sub eax, edx ; ret
0x0000000000145a48 : sub eax, edx ; ret
0x0000000000145bfc : sub eax, edx ; ret
0x0000000000146a2d : sub eax, edx ; ret
0x0000000000146cf0 : sub eax, edx ; ret
0x00000000001485c5 : sub eax, edx ; ret
0x00000000001488f9 : sub eax, edx ; ret
0x000000000014a58a : sub eax, edx ; ret
0x000000000014a8a3 : sub eax, edx ; ret
0x000000000014ab80 : sub eax, edx ; ret
0x000000000014bf95 : sub eax, edx ; ret
0x000000000014c259 : sub eax, edx ; ret
0x000000000014d93a : sub eax, edx ; ret
0x000000000016f0bb : sub eax, edx ; ret
0x000000000016f106 : sub eax, edx ; ret
0x0000000000171dcf : sub eax, edx ; ret
0x0000000000171de8 : sub eax, edx ; ret
0x0000000000171df8 : sub eax, edx ; ret
0x0000000000171e08 : sub eax, edx ; ret
0x0000000000171e07 : sub eax, edx ; ret
0x0000000000171e18 : sub eax, edx ; ret
0x0000000000171e17 : sub eax, edx ; ret
0x0000000000171e28 : sub eax, edx ; ret
0x0000000000171e38 : sub eax, edx ; ret
0x0000000000171e48 : sub eax, edx ; ret
0x0000000000171e83 : sub eax, edx ; ret
0x0000000000034b8f : sub eax, edx ; shr eax, 0x1f ; ret
0x00000000000347bd : sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000347e3 : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000172ae7 : sub eax, edx ; vzeroupper ; ret
0x0000000000172afe : sub eax, edx ; vzeroupper ; ret
0x000000000007b7fa : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078fb8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079066 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000110bfb : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000018409e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000006df3b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000182b35 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000b9e1c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194ead : sub ebx, edi ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000035f94 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000049125 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000049805 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000115cf4 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a6601 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000aaf8c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000009eb06 : sub edi, dword ptr [rcx] ; ret 0x2774
0x0000000000194eb1 : sub edi, ebx ; call qword ptr [rax]
0x0000000000195639 : sub edi, esp ; call qword ptr [rax]
0x0000000000195619 : sub edi, esp ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x00000000001956bd : sub edi, esp ; jmp rax
0x000000000007c890 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007c885 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000013a1c3 : sub edx, dword ptr [rbp + 5] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000008eb64 : sub edx, eax ; jbe 0x8eba7 ; add rax, rdi ; ret
0x000000000008eb74 : sub edx, eax ; jbe 0x8eba9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb84 : sub edx, eax ; jbe 0x8eba9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008eb94 : sub edx, eax ; jbe 0x8eba9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000d311b : sub edx, eax ; jmp 0xd3134
0x0000000000034eff : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000034ebe : sub edx, ecx ; not eax ; and eax, edx ; ret
0x00000000001a7d59 : sub edx, edi ; jmp qword ptr [rdi]
0x000000000019b159 : sub edx, edi ; jmp rsp
0x00000000001882c9 : sub edx, esi ; call qword ptr [rdi]
0x000000000018830d : sub edx, esi ; call rax
0x00000000001ab209 : sub edx, esi ; jmp qword ptr [rdi]
0x0000000000188295 : sub edx, esi ; jmp rax
0x0000000000074012 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000078774 : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000097382 : sub esi, 1 ; jne 0x97380 ; xor eax, eax ; pop rbx ; ret
0x000000000009742a : sub esi, 1 ; jne 0x97427 ; xor eax, eax ; ret
0x0000000000123c0e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000142c3a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a5f11 : sub esi, ebp ; jmp qword ptr [rdi]
0x00000000000fce34 : sub esi, ebx ; ret
0x00000000001ab289 : sub esi, edx ; jmp rcx
0x00000000000f6e70 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6ebb : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128a52 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c30e : sub esp, -0x80 ; pop rbx ; ret
0x0000000000088e18 : sub esp, 0x80 ; call 0x115088
0x00000000000c8dc1 : sub esp, 0x80 ; call 0x115088
0x000000000012bf39 : sub esp, 8 ; call 0x138235
0x000000000009f480 : sub esp, 8 ; call 0x8b725
0x00000000001955b5 : sub esp, edi ; call rax
0x0000000000195635 : sub esp, edi ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x0000000000195655 : sub esp, edi ; push rax ; sub bh, ah ; call rax
0x00000000000d311a : sub r10, rax ; jmp 0xd3135
0x000000000010e74b : sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e71b
0x0000000000114ae3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114af9 ; xor eax, eax ; ret
0x0000000000114b13 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114b29 ; xor eax, eax ; ret
0x000000000007c018 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000115201 : sub r8d, dword ptr [r8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000114f33 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114f49 ; xor eax, eax ; ret
0x0000000000114f63 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114f79 ; xor eax, eax ; ret
0x0000000000114f93 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114fa9 ; xor eax, eax ; ret
0x0000000000114fc3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114fd9 ; xor eax, eax ; ret
0x0000000000114ff3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x115009 ; xor eax, eax ; ret
0x0000000000115023 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x115039 ; xor eax, eax ; ret
0x0000000000115053 : sub r8d, dword ptr [rax] ; test eax, eax ; jne 0x115069 ; xor eax, eax ; ret
0x0000000000138315 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000822d1 : sub rax, 0x39480108 ; ret
0x0000000000097519 : sub rax, 1 ; jne 0x97518 ; pop rbx ; pop rbp ; ret
0x00000000000aa4d3 : sub rax, 1 ; ret
0x0000000000114b43 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114b59 ; xor eax, eax ; ret
0x0000000000114b73 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114b89 ; xor eax, eax ; ret
0x0000000000114ba3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114bb9 ; xor eax, eax ; ret
0x0000000000114bd3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114be9 ; xor eax, eax ; ret
0x0000000000114c03 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114c19 ; xor eax, eax ; ret
0x0000000000114d53 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114d69 ; xor eax, eax ; ret
0x0000000000114d83 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114d99 ; xor eax, eax ; ret
0x0000000000114db3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114dc9 ; xor eax, eax ; ret
0x0000000000114de3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114df9 ; xor eax, eax ; ret
0x0000000000114e13 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114e29 ; xor eax, eax ; ret
0x0000000000114c33 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114c49 ; xor eax, eax ; ret
0x0000000000114c63 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114c79 ; xor eax, eax ; ret
0x0000000000114c93 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114ca9 ; xor eax, eax ; ret
0x0000000000114cc3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114cd9 ; xor eax, eax ; ret
0x0000000000114cf3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114d09 ; xor eax, eax ; ret
0x0000000000114d23 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114d39 ; xor eax, eax ; ret
0x0000000000114e43 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114e59 ; xor eax, eax ; ret
0x0000000000114e73 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114e89 ; xor eax, eax ; ret
0x0000000000114ed3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114ee9 ; xor eax, eax ; ret
0x0000000000114f03 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114f19 ; xor eax, eax ; ret
0x000000000007d0bd : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000774d4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000013bd84 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773c4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000773c3 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000773c2 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000734f4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000014a64d : sub rax, r8 ; ret
0x000000000014a66d : sub rax, r8 ; ret
0x00000000000ad15a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000008b8b8 : sub rax, rdi ; ret
0x000000000008ba7d : sub rax, rdi ; ret
0x000000000008bad4 : sub rax, rdi ; ret
0x000000000003a64d : sub rax, rdx ; ret
0x000000000003a66d : sub rax, rdx ; ret
0x000000000007915d : sub rax, rdx ; ret
0x000000000008b343 : sub rax, rdx ; ret
0x000000000008db43 : sub rax, rdx ; ret
0x000000000014a8a2 : sub rax, rdx ; ret
0x00000000000347bc : sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000347e2 : sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000172ae6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000172afd : sub rax, rdx ; vzeroupper ; ret
0x00000000000aaf8b : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008eb63 : sub rdx, rax ; jbe 0x8eba8 ; add rax, rdi ; ret
0x0000000000074011 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000074010 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000078773 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000078772 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000097381 : sub rsi, 1 ; jne 0x97381 ; xor eax, eax ; pop rbx ; ret
0x0000000000097429 : sub rsi, 1 ; jne 0x97428 ; xor eax, eax ; ret
0x00000000000f6e6f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6eba : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128a51 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c30d : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000088e17 : sub rsp, 0x80 ; call 0x115089
0x00000000000c8dc0 : sub rsp, 0x80 ; call 0x115089
0x000000000012bf38 : sub rsp, 8 ; call 0x138236
0x000000000012bf37 : sub rsp, 8 ; call 0x138237
0x000000000009f47f : sub rsp, 8 ; call 0x8b726
0x00000000001956b4 : sub spl, dil ; call qword ptr [rax]
0x0000000000034890 : subps xmm0, xmm1 ; ret
0x0000000000034c25 : subps xmm0, xmm1 ; ret
0x000000000003488f : subsd xmm0, xmm1 ; ret
0x0000000000034c24 : subss xmm0, xmm1 ; ret
0x0000000000125171 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000fdb27 : syscall ; mov eax, edx ; ret
0x00000000000f690d : syscall ; neg eax ; ret
0x00000000001150c7 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000bc375 : syscall ; ret
0x00000000000cd235 : syscall ; ret
0x00000000000cd245 : syscall ; ret
0x00000000000cd255 : syscall ; ret
0x00000000000cd265 : syscall ; ret
0x00000000000cd275 : syscall ; ret
0x00000000000cd485 : syscall ; ret
0x00000000000f6ed5 : syscall ; ret
0x00000000001077f5 : syscall ; ret
0x0000000000122198 : syscall ; ret
0x00000000001073df : syscall ; test rax, rax ; jl 0x10742e ; je 0x1073f2 ; ret
0x0000000000082f24 : sysenter
0x0000000000083b35 : sysenter
0x0000000000083b60 : sysenter
0x0000000000083b6a : sysenter
0x0000000000083b73 : sysenter
0x000000000008436f : sysenter
0x00000000000843d0 : sysenter
0x000000000008441f : sysenter
0x0000000000195c79 : test ah, bh ; call qword ptr [rax + 0x20fffc83]
0x0000000000195e71 : test ah, bh ; call qword ptr [rax]
0x0000000000195d35 : test ah, bh ; call rdx
0x0000000000195d31 : test ah, bh ; inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x0000000000195cb5 : test ah, bh ; jmp rsi
0x00000000000bd9ef : test ah, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a6385 : test al, 0 ; add al, bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6384 : test al, 0 ; add al, bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a63fd : test al, 0 ; add byte ptr [rax + 0x4d], dl ; out dx, al ; call qword ptr [rax]
0x0000000000138377 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000132412 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000136b66 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000136c11 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002cb70 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000036cff : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000003cda : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001a3728 : test al, 0x3c ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3c98 : test al, 0x46 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000d9b48 : test al, 0x48 ; add eax, edx ; jmp rax
0x00000000001bbf78 : test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000001b1168 : test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x000000000009d398 : test al, 0x83 ; ret 0x4901
0x000000000018c19c : test al, 0x89 ; cli ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x00000000000d581c : test al, 0x89 ; ret
0x00000000001ad9a8 : test al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x00000000001bb0a8 : test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001833f7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000001ade98 : test al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x0000000000189064 : test al, 0xcb ; inc dword ptr [rdx - 0x24] ; jmp rcx
0x00000000000ccfe0 : test al, 0xe8 ; ret 0xf528
0x00000000000ccfe0 : test al, 0xe8 ; ret 0xf528
0x0000000000023658 : test al, 0xe8 ; ret 0xffff
0x0000000000105b1b : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000ecfa3 : test al, 0xf ; xchg eax, esp ; ret
0x00000000000ac549 : test al, 0xf0 ; jne 0xac5a8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac576 : test al, 0xf0 ; jne 0xac5a8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac58c : test al, 0xf0 ; jne 0xac5a8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac548 : test al, 0xf0 ; jne 0xac5a9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001ae1f9 : test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae211 : test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae241 : test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae259 : test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae271 : test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001961c9 : test al, 0xfc ; call rsi
0x00000000001961c8 : test al, 0xfc ; call rsi
0x00000000001961c5 : test al, 0xfc ; inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000195045 : test al, 0xfd ; call qword ptr [rsi]
0x00000000001950c5 : test al, 0xfd ; jmp rax
0x00000000001950c4 : test al, 0xfd ; jmp rax
0x00000000000f7676 : test al, 2 ; cmove eax, edx ; ret
0x00000000000f7676 : test al, 2 ; cmove eax, edx ; ret
0x0000000000074153 : test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000d7c7b : test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000066502 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009eb82 : test al, al ; jne 0x9eb65 ; ret
0x000000000009ecc0 : test al, al ; jne 0x9eca6 ; xor eax, eax ; ret
0x000000000009f80a : test al, al ; jne 0x9f7f8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000019b798 : test al, bl ; cli ; jmp rsp
0x00000000000bd86b : test al, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x000000000007f414 : test bh, ah ; add al, 0 ; add dh, dh ; ret
0x0000000000111447 : test bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001256cc : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000006f0c4 : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000019a0e8 : test bl, ah ; idiv edi ; xchg eax, esp ; ret 1
0x000000000019a13c : test bl, al ; add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x000000000002def6 : test byte ptr [rax + 0x200], bh ; ret
0x000000000002df16 : test byte ptr [rax + 0x200], bh ; ret
0x00000000001255c3 : test byte ptr [rax + 0x39000003], al ; ret
0x00000000000cdcda : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000ce749 : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000001322e5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000135055 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000003340d : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00000000000c525f : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x00000000001358a5 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x0000000000068469 : test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000012fb46 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000019a4e0 : test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000000f6ad3 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x0000000000102ea1 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000001035e4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000047059 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x000000000012a50e : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x000000000013c0b9 : test byte ptr [rax - 0x77], 0xef ; call r12
0x000000000019ab38 : test byte ptr [rax - 7], bl ; jmp rsp
0x00000000001ab205 : test byte ptr [rax], 0 ; call 0x281aa43c
0x00000000001ab145 : test byte ptr [rax], 0 ; clc ; and esi, edx ; jmp qword ptr [rcx]
0x000000000013e00b : test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e3635 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011033f : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000077eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001439ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x0000000000170ada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000168c8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000016d0da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a5d2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a8e0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a98da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a850a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000168cba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000016d10a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000a6d1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a852a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a6d2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000a853a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000d723a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000168cfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000016d14a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000a6d6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000a857a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007cb3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000009ecca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a586a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a813a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001179ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000168c9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000016d0ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a6d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a851a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000007a61a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000020589 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000758ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cafa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000088f0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000009eb8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a69ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ac78a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012b7ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012befa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012bf1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012e0aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000014137a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000014355a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016d0ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006acca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000fba6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007b6ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007cada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007cb1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aa4fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aab5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d6c5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d8e4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012b7ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012bf0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013c16a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013c17a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014a8aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017294a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f17a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000aaf9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000abf5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000ac5ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000017091a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000007f52b : test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019b19c : test byte ptr [rax], bh ; add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x00000000000963dc : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001af3bc : test byte ptr [rax], bh ; add dword ptr [rax], eax ; loopne 0x1af3c6 ; hlt ; jmp qword ptr [rcx]
0x0000000000097b29 : test byte ptr [rax], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001982c4 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; in al, 0xfa ; out dx, eax ; call rsp
0x00000000000963f4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a58bc : test byte ptr [rbp + 0x1400000], bl ; out dx, al ; call qword ptr [rsi]
0x0000000000113d32 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x000000000006e536 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000076fb6 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x000000000019762c : test byte ptr [rbp - 0x6b4c0000], dh ; in eax, dx ; jmp rsp
0x00000000000b7c17 : test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x000000000007550e : test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x000000000013e4f9 : test byte ptr [rbp - 0x7c000002], dh ; rol byte ptr [rcx], 0x39 ; ret
0x00000000000663b8 : test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x000000000007d776 : test byte ptr [rbp - 0xa000000], ch ; ret
0x000000000007e23f : test byte ptr [rbp - 0xa000000], dl ; ret
0x000000000011332c : test byte ptr [rbx + 0x1c], 0x20 ; je 0x113398 ; xor eax, eax ; pop rbx ; ret
0x00000000000f3fd8 : test byte ptr [rbx + 1], dh ; add byte ptr [rax], al ; call 0x20280
0x00000000000f0cac : test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x0000000000058397 : test byte ptr [rbx - 0x7c00001b], bh ; ret
0x0000000000084bde : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000842df : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008676e : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001a06bc : test byte ptr [rbx], cl ; add byte ptr [rax + 0x26], al ; jmp 0x1a06ca
0x00000000000975ab : test byte ptr [rcx + 0xf], 0x95 ; ret 0x8445
0x000000000011718f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000879cf : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000378b2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000003dad1 : test byte ptr [rcx + rcx*4 - 0x11], 0xf ; xchg eax, ebp ; ret 0x941
0x0000000000040dc1 : test byte ptr [rcx + rcx*4 - 0x11], 0xf ; xchg eax, ebp ; ret 0x941
0x00000000000ba563 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x0000000000133b14 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0x00000000000affb3 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000b5178 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000050302 : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000102832 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000000d9b92 : test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00000000000c76ea : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000084607 : test byte ptr [rcx - 0xa000000], dl ; ret
0x000000000019b440 : test byte ptr [rcx - 6], ah ; call rsp
0x0000000000145036 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000022c7b : test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122e40 : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000d1806 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x000000000005749b : test byte ptr [rdi - 0x7600000c], dh ; ret
0x000000000004764e : test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000013840c : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009d9da : test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009d4ed : test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x00000000001215b3 : test byte ptr [rdi], 0x84 ; mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000b6dfc : test byte ptr [rdi], 0x84 ; ret
0x00000000000c4395 : test byte ptr [rdi], 0x84 ; ret
0x00000000000d7562 : test byte ptr [rdi], 0x84 ; ret
0x000000000017398e : test byte ptr [rdi], 0x84 ; ret
0x0000000000102caa : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000024ab3 : test byte ptr [rdi], 0x85 ; ret 3
0x00000000000ecfa9 : test byte ptr [rdi], 0x95 ; ret 0x3145
0x000000000005feba : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000062f6b : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000077412 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077422 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000a66a8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000009601c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000096004 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ee1d1 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026552 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000002de84 : test byte ptr [rdx + 0x200], al ; ret
0x000000000002deb4 : test byte ptr [rdx + 0x200], al ; ret
0x00000000001b05bc : test byte ptr [rdx + 1], cl ; add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019afdc : test byte ptr [rdx + rax], ch ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000007d9be : test byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e7
0x00000000000c47d1 : test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x000000000019ae64 : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x00000000000662ca : test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001acdbc : test byte ptr [rdx], dl ; add dword ptr [rax], eax ; rcr cl, 1 ; jmp qword ptr [rcx]
0x00000000001341cc : test byte ptr [rip + 0x48ffffff], dl ; mov edi, ebp ; call rax
0x0000000000110be4 : test byte ptr [rip - 0x76ffffff], bl ; ret 0x8944
0x00000000000f0efe : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000008b95d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000008b95d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000000809d6 : test byte ptr [rsi + rax - 0x9bf0000], cl ; ret 0xf01
0x0000000000195c9c : test byte ptr [rsi - 0x79790004], 0xfc ; call qword ptr [rsi]
0x000000000009d4f9 : test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x0000000000032e75 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008b79d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008b79d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000343b5 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001af9bc : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000002b95d : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019accc : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x000000000012252e : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00000000000aabe2 : test ch, 0xf0 ; je 0xaabdb ; movzx eax, cl ; pop rbx ; ret
0x000000000019a6ac : test ch, ah ; add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x0000000000046074 : test ch, bh ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000001a4cb1 : test ch, ch ; call qword ptr [rdx]
0x00000000000c18fd : test ch, dh ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012e35a : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000dc5ca : test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000012668b : test cl, cl ; jne 0x1265dc ; ret
0x000000000009eb28 : test cl, cl ; jne 0x9eb1d ; ret
0x000000000009ec67 : test cl, cl ; jne 0x9ec5e ; xor eax, eax ; ret
0x00000000000aa15f : test cl, cl ; jne 0xaa154 ; ret
0x00000000000aa20f : test cl, cl ; jne 0xaa204 ; ret
0x00000000000aa4cf : test cl, cl ; jne 0xaa4c8 ; sub rax, 1 ; ret
0x000000000019ae68 : test cl, cl ; stc ; call rsp
0x00000000000aac0a : test dh, 0xf0 ; je 0xaabd9 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aac0a : test dh, 0xf0 ; je 0xaabdb ; movzx eax, dl ; pop rbx ; ret
0x00000000000f1de6 : test dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001215b5 : test dh, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000012e348 : test dh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000009ed20 : test dh, dh ; jne 0x9ed17 ; mov qword ptr [rdx], rcx ; ret
0x0000000000023b85 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000170964 : test dl, 0x40 ; jne 0x170929 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170992 : test dl, 4 ; jne 0x170929 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000008093f : test dl, al ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000835d3 : test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000033bd2 : test dl, dl ; jne 0x33bb4 ; ret
0x000000000009eae4 : test dl, dl ; jne 0x9eadd ; ret
0x00000000000aa37f : test dl, dl ; jne 0xaa378 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000d15fe : test dl, dl ; jne 0xd15e6 ; ret
0x000000000008f7f9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000000a69db : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000a7eeb : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a7deb : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000c00b0 : test dword ptr [rax + rax], ecx ; add rax, rdi ; jmp rax
0x000000000006960e : test dword ptr [rax - 0x16000005], edi ; ret 0xffff
0x000000000005c8d4 : test dword ptr [rax - 0x17000007], ebx ; ret 0xfc2f
0x000000000005cd93 : test dword ptr [rax - 0x7a000007], edi ; ror byte ptr [rdi], 0x85 ; ret
0x000000000006f0c5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x0000000000197fad : test dword ptr [rax], 0xef1f4400 ; jmp rsp
0x00000000001ab285 : test dword ptr [rax], 0xf22bf800 ; jmp rcx
0x00000000000d7799 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x0000000000085e53 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000055b89 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000085547 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000006589a : test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000085546 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000947cf : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000009f08e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000001b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000abb10 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000ac438 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000168bd8 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000168bb8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000168ad0 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000a7fe0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000016f2e7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f736 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b83 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000e45f4 : test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000009eff8 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000007e600 : test dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000003b4fb : test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008eada : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000008f510 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00000000001688da : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016f2bd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a65c2 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016f1cd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f0dd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000abb57 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000172817 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000abb27 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000168c7a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000037b7e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000005d532 : test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000000f2132 : test dword ptr [rcx], ecx ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000817f2 : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000008f6fa : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00000000000a6727 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a6707 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000035f23 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x00000000000945e5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000036106 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000000a68c1 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000a7cc9 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x0000000000170632 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f002 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000010364d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000003b9cb : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000168b97 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000000ac4dd : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001721a2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a66e5 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000a66c5 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000a65dd : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000948ce : test dword ptr [rsi - 0xc000005], esp ; ret
0x00000000000d7783 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x000000000016f508 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000057fd1 : test dword ptr [rsp + rsi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x00000000000cd3d3 : test eax, 0x39fffffe ; ret
0x0000000000138353 : test eax, 0x480028bb ; add esp, 8 ; ret
0x0000000000117bb7 : test eax, 0x48f88948 ; add esp, 8 ; ret
0x00000000001974b5 : test eax, 0x4d440000 ; in eax, dx ; jmp rsp
0x00000000001a6445 : test eax, 0x4e380000 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a647d : test eax, 0x4ed00000 ; out dx, al ; call qword ptr [rdx]
0x00000000001a647c : test eax, 0x4ed00000 ; out dx, al ; call qword ptr [rdx]
0x00000000001850e0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000159036 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015bb06 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015e5e6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000034c58 : test eax, 0x7fffff ; je 0x34c51 ; ret
0x00000000000659cf : test eax, 0x83000000 ; ret 0x8308
0x00000000000608fc : test eax, 0x89000007 ; ret 0x348
0x000000000008958c : test eax, 0x89480033 ; add al, 0x24 ; call qword ptr [rdx]
0x000000000019617d : test eax, 0xa940fffc ; cld ; call rax
0x0000000000196379 : test eax, 0xa950fffc ; cld ; jmp rax
0x0000000000196239 : test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x0000000000196238 : test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x000000000019500d : test eax, 0xaa4efffd ; std ; jmp rsi
0x0000000000188c85 : test eax, 0xbbfdfff3 ; jmp rax
0x000000000018a4f6 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000001b64a5 : test eax, 0xe1f80001 ; sti ; call rsi
0x0000000000105fcf : test eax, eax ; cmove eax, edx ; ret
0x0000000000105fcf : test eax, eax ; cmove eax, edx ; ret
0x000000000003a6f4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000003a7c1 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000003a6f4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000003a7c1 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000010541c : test eax, eax ; je 0x1054c0 ; call rax
0x0000000000105593 : test eax, eax ; je 0x105698 ; call rax
0x0000000000115578 : test eax, eax ; je 0x115584 ; ret
0x0000000000115870 : test eax, eax ; je 0x1158a4 ; call rax
0x000000000011769a : test eax, eax ; je 0x1176b0 ; add rsp, 8 ; ret
0x000000000011faa5 : test eax, eax ; je 0x11fab5 ; mov rdi, rbx ; call rax
0x000000000011fd9d : test eax, eax ; je 0x11fdad ; mov rdi, rbx ; call rax
0x0000000000128340 : test eax, eax ; je 0x12834c ; ret
0x000000000012b041 : test eax, eax ; je 0x12b02f ; xor eax, eax ; pop rbx ; ret
0x000000000012b881 : test eax, eax ; je 0x12b891 ; mov rdi, rsp ; call rax
0x000000000012b96c : test eax, eax ; je 0x12b97c ; mov rdi, rsp ; call rax
0x000000000012c222 : test eax, eax ; je 0x12c232 ; mov rdi, rbp ; call rax
0x000000000012c5a6 : test eax, eax ; je 0x12c5b4 ; ret
0x000000000012d2b3 : test eax, eax ; je 0x12d2c3 ; mov rdi, r14 ; call rax
0x000000000012d831 : test eax, eax ; je 0x12d846 ; xor eax, eax ; ret
0x0000000000132c48 : test eax, eax ; je 0x132c58 ; mov rdi, r12 ; call rax
0x0000000000132e29 : test eax, eax ; je 0x132e3b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000134103 : test eax, eax ; je 0x134113 ; mov rdi, r13 ; call rax
0x00000000001342f6 : test eax, eax ; je 0x134306 ; mov rdi, rbp ; call rax
0x0000000000134516 : test eax, eax ; je 0x134526 ; mov rdi, rbp ; call rax
0x000000000013500d : test eax, eax ; je 0x13501f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001356b9 : test eax, eax ; je 0x1356c9 ; mov rdi, r12 ; call rax
0x0000000000135a2d : test eax, eax ; je 0x135a3f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001382b8 : test eax, eax ; je 0x13824a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000013823d : test eax, eax ; je 0x13824d ; pop rbx ; ret
0x00000000001386ef : test eax, eax ; je 0x138708 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000138fa9 : test eax, eax ; je 0x138fbb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001396c2 : test eax, eax ; je 0x1396d4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013dd76 : test eax, eax ; je 0x13dd86 ; xor eax, eax ; ret
0x0000000000145a43 : test eax, eax ; je 0x145a4f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146a28 : test eax, eax ; je 0x146a34 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000173f7c : test eax, eax ; je 0x173f8b ; call rax
0x000000000002b023 : test eax, eax ; je 0x2b02d ; call rax
0x000000000002c379 : test eax, eax ; je 0x2c383 ; call rax
0x000000000007848d : test eax, eax ; je 0x7849d ; pop rbx ; ret
0x000000000007e072 : test eax, eax ; je 0x7e07c ; call rax
0x0000000000085569 : test eax, eax ; je 0x85573 ; call rax
0x000000000008b520 : test eax, eax ; je 0x8b538 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c758e : test eax, eax ; je 0xc75b0 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cc39f : test eax, eax ; je 0xcc3a9 ; call rax
0x00000000000cc581 : test eax, eax ; je 0xcc58e ; call rax
0x00000000000fd3dc : test eax, eax ; je 0xfd3e7 ; ret
0x00000000000ff251 : test eax, eax ; je 0xff260 ; mov qword ptr [rax], rdx ; ret
0x00000000001073e2 : test eax, eax ; jl 0x10742b ; je 0x1073ef ; ret
0x0000000000114ab6 : test eax, eax ; jne 0x114ac9 ; mov eax, 1 ; ret
0x0000000000114ae6 : test eax, eax ; jne 0x114af6 ; xor eax, eax ; ret
0x0000000000114b16 : test eax, eax ; jne 0x114b26 ; xor eax, eax ; ret
0x0000000000114b46 : test eax, eax ; jne 0x114b56 ; xor eax, eax ; ret
0x0000000000114b76 : test eax, eax ; jne 0x114b86 ; xor eax, eax ; ret
0x0000000000114ba6 : test eax, eax ; jne 0x114bb6 ; xor eax, eax ; ret
0x0000000000114bd6 : test eax, eax ; jne 0x114be6 ; xor eax, eax ; ret
0x0000000000114c06 : test eax, eax ; jne 0x114c16 ; xor eax, eax ; ret
0x0000000000114c36 : test eax, eax ; jne 0x114c46 ; xor eax, eax ; ret
0x0000000000114c66 : test eax, eax ; jne 0x114c76 ; xor eax, eax ; ret
0x0000000000114c96 : test eax, eax ; jne 0x114ca6 ; xor eax, eax ; ret
0x0000000000114cc6 : test eax, eax ; jne 0x114cd6 ; xor eax, eax ; ret
0x0000000000114cf6 : test eax, eax ; jne 0x114d06 ; xor eax, eax ; ret
0x0000000000114d26 : test eax, eax ; jne 0x114d36 ; xor eax, eax ; ret
0x0000000000114d56 : test eax, eax ; jne 0x114d66 ; xor eax, eax ; ret
0x0000000000114d86 : test eax, eax ; jne 0x114d96 ; xor eax, eax ; ret
0x0000000000114db6 : test eax, eax ; jne 0x114dc6 ; xor eax, eax ; ret
0x0000000000114de6 : test eax, eax ; jne 0x114df6 ; xor eax, eax ; ret
0x0000000000114e16 : test eax, eax ; jne 0x114e26 ; xor eax, eax ; ret
0x0000000000114e46 : test eax, eax ; jne 0x114e56 ; xor eax, eax ; ret
0x0000000000114e76 : test eax, eax ; jne 0x114e86 ; xor eax, eax ; ret
0x0000000000114ed6 : test eax, eax ; jne 0x114ee6 ; xor eax, eax ; ret
0x0000000000114f06 : test eax, eax ; jne 0x114f16 ; xor eax, eax ; ret
0x0000000000114f36 : test eax, eax ; jne 0x114f46 ; xor eax, eax ; ret
0x0000000000114f66 : test eax, eax ; jne 0x114f76 ; xor eax, eax ; ret
0x0000000000114f96 : test eax, eax ; jne 0x114fa6 ; xor eax, eax ; ret
0x0000000000114fc6 : test eax, eax ; jne 0x114fd6 ; xor eax, eax ; ret
0x0000000000114ff6 : test eax, eax ; jne 0x115006 ; xor eax, eax ; ret
0x0000000000115026 : test eax, eax ; jne 0x115036 ; xor eax, eax ; ret
0x0000000000115056 : test eax, eax ; jne 0x115066 ; xor eax, eax ; ret
0x00000000001150a0 : test eax, eax ; jne 0x11509b ; pop rdx ; pop r10 ; ret
0x0000000000115193 : test eax, eax ; jne 0x1151a5 ; ret
0x0000000000115535 : test eax, eax ; jne 0x1154d9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000012877a : test eax, eax ; jne 0x128784 ; ret
0x0000000000133046 : test eax, eax ; jne 0x133054 ; ret
0x0000000000138f25 : test eax, eax ; jne 0x138f15 ; pop rbx ; ret
0x00000000001391a6 : test eax, eax ; jne 0x1391b4 ; ret
0x0000000000140eaa : test eax, eax ; jne 0x140ebf ; xor eax, eax ; pop rbx ; ret
0x00000000001443b6 : test eax, eax ; jne 0x1443c6 ; xor eax, eax ; ret
0x00000000001443e6 : test eax, eax ; jne 0x1443f6 ; xor eax, eax ; ret
0x0000000000144416 : test eax, eax ; jne 0x144426 ; xor eax, eax ; ret
0x0000000000144446 : test eax, eax ; jne 0x144456 ; xor eax, eax ; ret
0x0000000000144476 : test eax, eax ; jne 0x144486 ; xor eax, eax ; ret
0x00000000001444a6 : test eax, eax ; jne 0x1444b6 ; xor eax, eax ; ret
0x0000000000174496 : test eax, eax ; jne 0x1744a5 ; ret
0x0000000000035306 : test eax, eax ; jne 0x35315 ; ret
0x000000000006acbf : test eax, eax ; jne 0x6acd8 ; mov rax, rbx ; pop rbx ; ret
0x000000000007c844 : test eax, eax ; jne 0x7c83d ; ret
0x000000000007d8d5 : test eax, eax ; jne 0x7d90a ; xor edi, edi ; call qword ptr [r15]
0x00000000000895cf : test eax, eax ; jne 0x895c5 ; ret
0x000000000008d80c : test eax, eax ; jne 0x8d7d6 ; add rsp, 8 ; ret
0x000000000008d82f : test eax, eax ; jne 0x8d848 ; add rsp, 8 ; ret
0x000000000008eb17 : test eax, eax ; jne 0x8eb77 ; xor rax, rax ; ret
0x000000000009f0c8 : test eax, eax ; jne 0x9f146 ; xor eax, eax ; ret
0x00000000000ac621 : test eax, eax ; jne 0xac5f5 ; ret
0x00000000000ac6da : test eax, eax ; jne 0xac6d6 ; xor eax, eax ; ret
0x00000000000fe0ff : test eax, eax ; jne 0xfe0d7 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe2c0 : test eax, eax ; jne 0xfe297 ; xor eax, eax ; pop rbx ; ret
0x0000000000075adb : test eax, eax ; js 0x75aed ; ret
0x0000000000085816 : test eax, eax ; js 0x85825 ; ret
0x00000000000ac04d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0xac021 ; ret
0x000000000012aff6 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00000000000835dd : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000086643 : test eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001983d1 : test eax, esi ; jmp rsp
0x00000000000aebd5 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xaebef
0x00000000000b14f6 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb150f
0x00000000000b3cad : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3ccf
0x00000000001b13b1 : test ebp, esi ; jmp rax
0x000000000008ea40 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000007815e : test ebx, ebx ; jne 0x78178 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac736 : test ebx, ebx ; jne 0xac718 ; mov rax, rdi ; ret
0x0000000000174574 : test ebx, ebx ; mov rdx, rbx ; jne 0x174571 ; pop rbx ; ret
0x0000000000194f81 : test ebx, edi ; call qword ptr [rax + 0x10fffb86]
0x000000000018871d : test ebx, esi ; jmp rax
0x0000000000022d7a : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000170952 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000002b394 : test ecx, ecx ; je 0x2b39e ; call rcx
0x000000000006b458 : test ecx, ecx ; je 0x6b465 ; ret
0x00000000000ac60b : test ecx, ecx ; jne 0xac605 ; ret
0x00000000000ada89 : test ecx, ecx ; jne 0xada48 ; mov rax, rdx ; ret
0x00000000000aae13 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xaae0f ; ret
0x00000000000878a0 : test edi, edi ; je 0x878b9 ; mov eax, 0x16 ; ret
0x000000000011fd81 : test edi, edi ; jne 0x11fd75 ; pop rbx ; ret
0x000000000017427b : test edi, edi ; jne 0x17426f ; pop rbx ; ret
0x0000000000119432 : test edi, edi ; js 0x119449 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000e45e5 : test edx, eax ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x000000000012de40 : test edx, edx ; je 0x12de50 ; mov rdi, rbp ; call rdx
0x0000000000173e64 : test edx, edx ; je 0x173e6e ; call rdx
0x000000000007781a : test edx, edx ; je 0x77831 ; mov eax, 0xffffffff ; ret
0x0000000000077b9a : test edx, edx ; je 0x77bb1 ; mov eax, 0xffffffff ; ret
0x000000000008b752 : test edx, edx ; je 0x8b760 ; bsf eax, edx ; ret
0x000000000008b752 : test edx, edx ; je 0x8b761 ; bsf eax, edx ; ret
0x000000000008b7fb : test edx, edx ; je 0x8b817 ; bsf rax, rdx ; ret
0x000000000008b7fb : test edx, edx ; je 0x8b818 ; bsf rax, rdx ; ret
0x000000000008b9ca : test edx, edx ; je 0x8b9f7 ; bsf rax, rdx ; ret
0x000000000008b9db : test edx, edx ; je 0x8b9f7 ; bsf rax, rdx ; ret
0x000000000008b9ca : test edx, edx ; je 0x8b9f8 ; bsf rax, rdx ; ret
0x000000000008b9db : test edx, edx ; je 0x8b9f8 ; bsf rax, rdx ; ret
0x00000000000cc4f0 : test edx, edx ; je 0xcc4fd ; call rdx
0x00000000001153dd : test edx, edx ; jne 0x1153d9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000013c480 : test edx, edx ; jne 0x13c499 ; mov eax, 1 ; ret
0x000000000013c4c0 : test edx, edx ; jne 0x13c4d9 ; mov eax, 1 ; ret
0x0000000000071bff : test edx, edx ; jne 0x71bf5 ; ret
0x000000000007a393 : test edx, edx ; jne 0x7a3a4 ; ret
0x000000000007af3f : test edx, edx ; jne 0x7af35 ; ret
0x0000000000089679 : test edx, edx ; jne 0x89675 ; ret
0x00000000000adaca : test edx, edx ; jne 0xadac5 ; ret
0x000000000002048e : test edx, edx ; jns 0x20382 ; jmp 0x20463
0x00000000000ac94f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xac94f ; ret
0x00000000000bb24f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xbb250 ; ret
0x000000000003626a : test edx, edx ; sete al ; ret
0x00000000000acd69 : test edx, edx ; sete al ; ret
0x0000000000114a64 : test edx, edx ; sete al ; ret
0x0000000000170945 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000008b8c1 : test esi, esi ; jne 0x8b8d0 ; xor rax, rax ; ret
0x0000000000096aee : test esi, esi ; jne 0x96b01 ; jmp 0x96abb
0x0000000000084ab7 : test esp, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000017095f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000195d29 : test esp, edi ; jmp qword ptr [rdx]
0x0000000000195c6d : test esp, edi ; jmp rax
0x00000000001ab284 : test qword ptr [rax], -0xdd40800 ; jmp rcx
0x0000000000036105 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000ac735 : test r11d, r11d ; jne 0xac719 ; mov rax, rdi ; ret
0x000000000009eb81 : test r8b, r8b ; jne 0x9eb66 ; ret
0x000000000009ecbf : test r8b, r8b ; jne 0x9eca7 ; xor eax, eax ; ret
0x0000000000145a42 : test r8d, r8d ; je 0x145a50 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146a27 : test r8d, r8d ; je 0x146a35 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000ac620 : test r8d, r8d ; jne 0xac5f6 ; ret
0x00000000000ada88 : test r9d, r9d ; jne 0xada49 ; mov rax, rdx ; ret
0x000000000010541b : test rax, rax ; je 0x1054c1 ; call rax
0x0000000000105592 : test rax, rax ; je 0x105699 ; call rax
0x0000000000115577 : test rax, rax ; je 0x115585 ; ret
0x000000000011586f : test rax, rax ; je 0x1158a5 ; call rax
0x0000000000117699 : test rax, rax ; je 0x1176b1 ; add rsp, 8 ; ret
0x000000000011faa4 : test rax, rax ; je 0x11fab6 ; mov rdi, rbx ; call rax
0x000000000011fd9c : test rax, rax ; je 0x11fdae ; mov rdi, rbx ; call rax
0x000000000012b040 : test rax, rax ; je 0x12b030 ; xor eax, eax ; pop rbx ; ret
0x000000000012b880 : test rax, rax ; je 0x12b892 ; mov rdi, rsp ; call rax
0x000000000012b96b : test rax, rax ; je 0x12b97d ; mov rdi, rsp ; call rax
0x000000000012c221 : test rax, rax ; je 0x12c233 ; mov rdi, rbp ; call rax
0x000000000012d2b2 : test rax, rax ; je 0x12d2c4 ; mov rdi, r14 ; call rax
0x0000000000132c47 : test rax, rax ; je 0x132c59 ; mov rdi, r12 ; call rax
0x0000000000132e28 : test rax, rax ; je 0x132e3c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000134102 : test rax, rax ; je 0x134114 ; mov rdi, r13 ; call rax
0x00000000001342f5 : test rax, rax ; je 0x134307 ; mov rdi, rbp ; call rax
0x0000000000134515 : test rax, rax ; je 0x134527 ; mov rdi, rbp ; call rax
0x000000000013500c : test rax, rax ; je 0x135020 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001356b8 : test rax, rax ; je 0x1356ca ; mov rdi, r12 ; call rax
0x0000000000135a2c : test rax, rax ; je 0x135a40 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013823c : test rax, rax ; je 0x13824e ; pop rbx ; ret
0x0000000000138fa8 : test rax, rax ; je 0x138fbc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001396c1 : test rax, rax ; je 0x1396d5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000173f7b : test rax, rax ; je 0x173f8c ; call rax
0x000000000002b022 : test rax, rax ; je 0x2b02e ; call rax
0x000000000002c378 : test rax, rax ; je 0x2c384 ; call rax
0x000000000007848c : test rax, rax ; je 0x7849e ; pop rbx ; ret
0x000000000007e071 : test rax, rax ; je 0x7e07d ; call rax
0x0000000000085568 : test rax, rax ; je 0x85574 ; call rax
0x000000000008b51f : test rax, rax ; je 0x8b539 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc39e : test rax, rax ; je 0xcc3aa ; call rax
0x00000000000cc580 : test rax, rax ; je 0xcc58f ; call rax
0x00000000000fd3db : test rax, rax ; je 0xfd3e8 ; ret
0x00000000000ff250 : test rax, rax ; je 0xff261 ; mov qword ptr [rax], rdx ; ret
0x00000000001073e1 : test rax, rax ; jl 0x10742c ; je 0x1073f0 ; ret
0x0000000000138f24 : test rax, rax ; jne 0x138f16 ; pop rbx ; ret
0x000000000007c843 : test rax, rax ; jne 0x7c83e ; ret
0x000000000007d8d4 : test rax, rax ; jne 0x7d90b ; xor edi, edi ; call qword ptr [r15]
0x00000000000895ce : test rax, rax ; jne 0x895c6 ; ret
0x00000000000fe0fe : test rax, rax ; jne 0xfe0d8 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe2bf : test rax, rax ; jne 0xfe298 ; xor eax, eax ; pop rbx ; ret
0x000000000007815d : test rbx, rbx ; jne 0x78179 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b393 : test rcx, rcx ; je 0x2b39f ; call rcx
0x000000000011fd80 : test rdi, rdi ; jne 0x11fd76 ; pop rbx ; ret
0x000000000011fd7f : test rdi, rdi ; jne 0x11fd77 ; pop rbx ; ret
0x000000000017427a : test rdi, rdi ; jne 0x174270 ; pop rbx ; ret
0x000000000012de3f : test rdx, rdx ; je 0x12de51 ; mov rdi, rbp ; call rdx
0x0000000000173e63 : test rdx, rdx ; je 0x173e6f ; call rdx
0x000000000008b7fa : test rdx, rdx ; je 0x8b818 ; bsf rax, rdx ; ret
0x000000000008b7fa : test rdx, rdx ; je 0x8b819 ; bsf rax, rdx ; ret
0x000000000008b9c9 : test rdx, rdx ; je 0x8b9f8 ; bsf rax, rdx ; ret
0x000000000008b9da : test rdx, rdx ; je 0x8b9f8 ; bsf rax, rdx ; ret
0x000000000008b9c9 : test rdx, rdx ; je 0x8b9f9 ; bsf rax, rdx ; ret
0x000000000008b9da : test rdx, rdx ; je 0x8b9f9 ; bsf rax, rdx ; ret
0x00000000000cc4ef : test rdx, rdx ; je 0xcc4fe ; call rdx
0x0000000000071bfe : test rdx, rdx ; jne 0x71bf6 ; ret
0x000000000007a392 : test rdx, rdx ; jne 0x7a3a5 ; ret
0x000000000007af3e : test rdx, rdx ; jne 0x7af36 ; ret
0x0000000000089678 : test rdx, rdx ; jne 0x89676 ; ret
0x000000000008b8c0 : test rsi, rsi ; jne 0x8b8d1 ; xor rax, rax ; ret
0x0000000000096aed : test rsi, rsi ; jne 0x96b02 ; jmp 0x96abc
0x000000000009ed1f : test sil, sil ; jne 0x9ed18 ; mov qword ptr [rdx], rcx ; ret
0x0000000000195d34 : test spl, dil ; call rdx
0x0000000000002b82 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000079945 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000007a78f : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000009fb7a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a02cd : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a0a1a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000014de0a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x000000000014de85 : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x000000000014dd40 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x000000000014e220 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x000000000014e5c0 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x000000000014db09 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014db1e : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014dff9 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e00e : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e399 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e3ae : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000000aa5d5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000172a40 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014dc4f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x000000000014e130 : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x000000000014e4d0 : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x000000000014da73 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014df63 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014e306 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014dad6 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014dfc6 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014e366 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000000aa5d9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000001729ea : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000172a17 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000172a33 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000172a44 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009fb66 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000000a02b9 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000000a0a06 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009fb4d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000000a02a0 : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000000a09ed : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000000aa5cb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aa5cf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aa5e4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000172a55 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000000aa5e8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000172a59 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000009fe83 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a05d6 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a0d23 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009fd1c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a046f : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a0bbc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009fb1e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000000a0271 : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000000a09be : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000009fae2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a0235 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a0982 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009ffe5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0738 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0e85 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000aa788 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000000aa6eb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000000aa58a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000aa5ab : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000aa5be : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000aa693 : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000014aa71 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014c101 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000329d5 : vpsubsb xmm8, xmm15, xmmword ptr [rbp + rcx*4 + 5] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000991c4 : vpsubusw xmm8, xmm14, xmmword ptr [r13 - 0x77] ; ret 0x1374
0x0000000000172ae9 : vzeroupper ; ret
0x0000000000172b00 : vzeroupper ; ret
0x00000000001972a5 : wait ; add byte ptr [rax], al ; cmp ebp, ebx ; jmp rsp
0x00000000001adef9 : wait ; hlt ; jmp qword ptr [rcx]
0x00000000001adf29 : wait ; hlt ; jmp qword ptr [rcx]
0x00000000001adf41 : wait ; hlt ; jmp qword ptr [rcx]
0x000000000004d3d1 : wait ; imul esi, dword ptr [rdi], 0 ; call rax
0x000000000002cdd1 : wait ; jbe 0x2cde0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010a344 : wait ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007cc18 : wait ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cc17 : wait ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a9d9d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9d9c : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9e1f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e1e : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9f21 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bd4 : xabort -0xd ; ret
0x0000000000002bd0 : xbegin 0xfffffffff8c6efd0 ; ret
0x0000000000195d25 : xchg ah, bh ; call qword ptr [rdx + 0x22fffc85]
0x0000000000195ca1 : xchg ah, bh ; call qword ptr [rsi]
0x0000000000195e61 : xchg ah, bh ; call rax
0x0000000000195e5d : xchg ah, bh ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195de1 : xchg ah, bh ; jmp rsp
0x000000000014584f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000188f0c : xchg ah, bl ; jmp qword ptr [rcx]
0x0000000000146073 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001479bf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014543f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000146163 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f83 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f4b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014575b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b96c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b18c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014b57c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad9c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d89d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018a000 : xchg bl, al ; cmc ; call rdx
0x0000000000194f85 : xchg bl, bh ; call qword ptr [rax]
0x000000000014c3a1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014d5a1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cca1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cfa1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c699 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001469cb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000014851f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147cff : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001451cf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001474df : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014550f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000146523 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000d02dc : xchg byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000e8127 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x000000000014582b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014af3b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000be4d3 : xchg byte ptr [rax], dh ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece6e2d
0x00000000001458fb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014803f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145cb3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000014781f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146fff : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001481df : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001456af : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146703 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145e93 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000144e9f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001a71f1 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x000000000010d104 : xchg byte ptr [rbx], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000002ebba : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00000000001468e3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014529f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014b42c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac4c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd5c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014577f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001467f3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f6f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014733f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145011 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146135 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146225 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146045 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014536f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000001957b4 : xchg byte ptr [rsi - 4], bl ; call qword ptr [rsi]
0x000000000014c946 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147475 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148175 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d546 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d846 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf46 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cc46 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000147c95 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b32d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c63e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bc5d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455df : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145da3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000149ccf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149aef : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a4c7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001493e7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2e7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001484b5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001477b5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001472d5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147fd5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b47d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000025b1 : xchg dh, ch ; ret 0x88ad
0x000000000014ac9d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145035 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000104acb : xchg dl, bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000104b6a : xchg dl, bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000145f55 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d75 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e65 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145c85 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000b9ba3 : xchg dword ptr [rax + 0x39], ecx ; ret 0x8946
0x00000000000d3fe4 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000e008d : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000002f50f : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000002691b : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000624e9 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x00000000000ac61f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000005ef3b : xchg dword ptr [rbp - 0x7cfffff0], ebp ; ret 0x8308
0x000000000005744d : xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000681a5 : xchg dword ptr [rbx - 0x76fffff6], ebp ; ret 0x348
0x0000000000182dac : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000008638c : xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00000000000f67f1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000608fb : xchg dword ptr [rcx - 0x76fffff9], ebp ; ret 0x348
0x00000000000659ce : xchg dword ptr [rcx - 0x7d000000], ebp ; ret 0x8308
0x0000000000067897 : xchg dword ptr [rdi - 0x77000000], edi ; ret 0x348
0x000000000011509e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x11509d ; pop rdx ; pop r10 ; ret
0x00000000000f261b : xchg dword ptr [rdx - 0x76000002], ebp ; ret 0x8d48
0x0000000000060d6b : xchg dword ptr [rsi - 0x77000000], ebp ; ret 0x348
0x00000000000671db : xchg dword ptr [rsi - 0x7d000000], edx ; ret 0x8308
0x0000000000182f4b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000149028 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000072a26 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007638f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007e240 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000074f12 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000001add41 : xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001a9ac9 : xchg eax, ebp ; int1 ; call qword ptr [rax]
0x00000000001a9ae1 : xchg eax, ebp ; int1 ; call qword ptr [rax]
0x000000000007bf3e : xchg eax, ebp ; nop ; mov rax, -1 ; ret
0x000000000011ce62 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000002e197 : xchg eax, ebp ; pop rbp ; cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000020d3 : xchg eax, ebp ; ret
0x0000000000003675 : xchg eax, ebp ; ret
0x0000000000003bae : xchg eax, ebp ; ret
0x00000000000812c7 : xchg eax, ebp ; ret
0x0000000000097326 : xchg eax, ebp ; ret
0x00000000000973cf : xchg eax, ebp ; ret
0x00000000000974c6 : xchg eax, ebp ; ret
0x00000000000ee2af : xchg eax, ebp ; ret
0x00000000000f0cbc : xchg eax, ebp ; ret
0x00000000000f0f06 : xchg eax, ebp ; ret
0x000000000010fbd5 : xchg eax, ebp ; ret
0x0000000000110ea9 : xchg eax, ebp ; ret
0x00000000001a4573 : xchg eax, ebp ; ret
0x00000000000b3cb3 : xchg eax, ebp ; ret 0x11eb
0x00000000000b1e74 : xchg eax, ebp ; ret 0x2041
0x00000000000b05c5 : xchg eax, ebp ; ret 0x294c
0x00000000000b5a6d : xchg eax, ebp ; ret 0x294c
0x0000000000127848 : xchg eax, ebp ; ret 0x2c3c
0x0000000000127a2c : xchg eax, ebp ; ret 0x2c3c
0x0000000000127a4e : xchg eax, ebp ; ret 0x2c3c
0x00000000000ff96b : xchg eax, ebp ; ret 0x2f3c
0x00000000000ecfab : xchg eax, ebp ; ret 0x3145
0x00000000000bc04c : xchg eax, ebp ; ret 0x3840
0x000000000009eb65 : xchg eax, ebp ; ret 0x3941
0x000000000006d007 : xchg eax, ebp ; ret 0x5389
0x0000000000035de5 : xchg eax, ebp ; ret 0x5489
0x000000000012ac05 : xchg eax, ebp ; ret 0x8041
0x00000000000d9b17 : xchg eax, ebp ; ret 0x8341
0x00000000000826b0 : xchg eax, ebp ; ret 0x8348
0x00000000000975ae : xchg eax, ebp ; ret 0x8445
0x00000000000e071f : xchg eax, ebp ; ret 0x8488
0x0000000000047656 : xchg eax, ebp ; ret 0x854d
0x00000000000ba57e : xchg eax, ebp ; ret 0x8b4c
0x00000000000b14fc : xchg eax, ebp ; ret 0x8eb
0x000000000003dad6 : xchg eax, ebp ; ret 0x941
0x0000000000040dc6 : xchg eax, ebp ; ret 0x941
0x00000000000afbf9 : xchg eax, ebp ; ret 0x941
0x00000000000b4d2a : xchg eax, ebp ; ret 0x941
0x0000000000030b17 : xchg eax, ebp ; ret 0x953d
0x00000000000aebdb : xchg eax, ebp ; ret 0x9eb
0x00000000000ba731 : xchg eax, ebp ; ret 0xa8e9
0x0000000000098969 : xchg eax, ebp ; ret 0xb60f
0x00000000000b72ae : xchg eax, ebp ; ret 0xb60f
0x00000000000bc15b : xchg eax, ebp ; ret 0xb60f
0x00000000000bcea3 : xchg eax, ebp ; ret 0xb60f
0x00000000000ff9c4 : xchg eax, ebp ; ret 0xc084
0x0000000000047541 : xchg eax, ebp ; ret 0xc221
0x000000000003c3da : xchg eax, ebp ; ret 0xd348
0x000000000003f6aa : xchg eax, ebp ; ret 0xd348
0x000000000004261a : xchg eax, ebp ; ret 0xd348
0x00000000000ae9ba : xchg eax, ebp ; ret 0xd348
0x00000000000b133a : xchg eax, ebp ; ret 0xd348
0x00000000000b3a9a : xchg eax, ebp ; ret 0xd348
0x0000000000036941 : xchg eax, ebp ; ret 0xd521
0x00000000000369e2 : xchg eax, ebp ; ret 0xd521
0x0000000000036aa3 : xchg eax, ebp ; ret 0xd521
0x0000000000036b3c : xchg eax, ebp ; ret 0xd521
0x00000000000ba5dc : xchg eax, ebp ; ret 0xd721
0x0000000000045c3f : xchg eax, ebp ; ret 0xdaf7
0x000000000006d824 : xchg eax, ebp ; ret 0xdaf7
0x00000000000fdb1b : xchg eax, ebp ; ret 0xdaf7
0x00000000001247e5 : xchg eax, ebp ; ret 0xe083
0x00000000000ad2b1 : xchg eax, ebp ; ret 0xe883
0x00000000000ad84b : xchg eax, ebp ; ret 0xe883
0x00000000000bce0f : xchg eax, ebp ; ret 0xf748
0x000000000012786f : xchg eax, ebp ; ret 0xf980
0x00000000000ad59e : xchg eax, ebp ; ret 0xf983
0x0000000000127c20 : xchg eax, ebp ; ret 0xfb80
0x00000000000d9bed : xchg eax, ebp ; ret 0xfb83
0x0000000000136e5d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136ec6 ; ret
0x00000000000ff804 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013035c : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000130381 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001303a1 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ea9dc : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b34a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ea9be : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000136d5d : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007305d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000007cc8d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000061b8b : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000001bb341 : xchg eax, ebp ; sti ; jmp qword ptr [rdx]
0x0000000000002b81 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000081f56 : xchg eax, ebx ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000007b702 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000081567 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000016e450 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016e55f : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016e690 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016e88c : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016e923 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016e9a1 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016ea67 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016eb99 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016eda4 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016ee33 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016eead : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016fa8e : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016fb8f : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016fcc0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016febc : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016ff53 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000016ffd1 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000170097 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000001701c9 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000001703d4 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000170463 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000001704dd : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003959 : xchg eax, ebx ; and cl, ah ; ret
0x0000000000003958 : xchg eax, ebx ; and cl, ah ; ret
0x0000000000189fe9 : xchg eax, ebx ; cmc ; jmp qword ptr [rcx]
0x00000000001adb01 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adba1 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adba0 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adbb9 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adc01 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adc19 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000000a5bec : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c44 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c61 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5c86 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5ca8 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5cbe : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5cea : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5d1f : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6301 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a632a : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6358 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a642a : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a71ec : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7244 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7261 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7286 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72a8 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72be : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a72ea : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a731f : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7991 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79ba : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a79e8 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7aca : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8ccc : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d24 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d41 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d66 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d88 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8d9e : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8dca : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a8dff : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9637 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96a4 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96c1 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a96e6 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9708 : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a971e : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a974a : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a977f : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a979a : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001510f2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001511b7 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001512a6 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151310 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001513cf : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001514c0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015156c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015160a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001516bc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015175a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015180c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001518aa : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015195c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001519fa : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151aac : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151b4a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151bfc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151c9a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151d4c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151dea : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151ea1 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151f3a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000151fec : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015208a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015213c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001521da : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015228c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015232a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001523dc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015247a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015252c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001525ca : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015267c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015271a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001527cc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015286a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153873 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015394d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153ac2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153b87 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153c76 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153ce0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153d9f : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153e90 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153f3c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153fda : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015408c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015412a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001541dc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015427a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015432c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001543ca : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015447c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015451a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001545cc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015466a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015471c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001547ba : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154871 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015490a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001549bc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154a5a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154b0c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154baa : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154c5c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154cfa : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154dac : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154e4a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154efc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154f9a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015504c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001550ea : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015519c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015523a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156243 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015631d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156492 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156557 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156646 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001566b0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015676f : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156860 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015690c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001569aa : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156a5c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156afa : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156bac : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156c4a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156cfc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156d9a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156e4c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156eea : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156f9c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015703a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001570ec : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015718a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157241 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001572da : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015738c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015742a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001574dc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015757a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015762c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001576ca : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015777c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015781a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001578cc : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015796a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157a1c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157aba : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157b6c : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000157c0a : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158c2b : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158cf6 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158de1 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158e9e : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ee1 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000158ef4 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159053 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001590d4 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159190 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015924d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159310 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001593cd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159490 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015954d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159610 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001596cd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159790 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015984d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159910 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001599cd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159a90 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159b4d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159c10 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159ccd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159d90 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159e4d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159f10 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000159fcd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a090 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a14d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a211 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a2cd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a390 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a44d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a510 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a5cd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a690 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a74d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a8e4 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015aa77 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9b4 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b9c7 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bb23 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bba4 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bc60 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bd1d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bde0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015be9d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bf60 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c01d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c0e0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c19d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c260 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c31d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c3e0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c49d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c560 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c61d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c6e0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c79d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c860 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c91d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c9e0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ca9d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cb60 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cc1d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cce1 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cd9d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ce60 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cf1d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015cfe0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d09d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d160 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d21d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d3b4 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015d547 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e485 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e4a7 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e603 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e684 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e740 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e7fd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e8c0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015e97d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ea40 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eafd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ebc0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ec7d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ed40 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015edfd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015eec0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015ef7d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f040 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f0fd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f1c0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f27d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f340 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f3fd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f4c0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f57d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f640 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f6fd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f7c1 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f87d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f940 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015f9fd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fac0 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fb7d : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fc40 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fcfd : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015fea8 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000016005b : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000198219 : xchg eax, ebx ; out dx, eax ; call rsp
0x000000000009a6fa : xchg eax, ebx ; ret
0x000000000009c98f : xchg eax, ebx ; ret
0x000000000009ce26 : xchg eax, ebx ; ret
0x00000000000b9193 : xchg eax, ebx ; ret
0x00000000000b965e : xchg eax, ebx ; ret
0x00000000000b9a88 : xchg eax, ebx ; ret
0x00000000000b862e : xchg eax, ebx ; ret 0x14c
0x0000000000037380 : xchg eax, ebx ; ret 0x3948
0x0000000000037380 : xchg eax, ebx ; ret 0x3948
0x00000000000378ef : xchg eax, ebx ; ret 0x3948
0x00000000000378ef : xchg eax, ebx ; ret 0x3948
0x0000000000048d1f : xchg eax, ebx ; ret 0x3948
0x0000000000048d1f : xchg eax, ebx ; ret 0x3948
0x00000000000491a1 : xchg eax, ebx ; ret 0x3948
0x00000000000491a1 : xchg eax, ebx ; ret 0x3948
0x0000000000049537 : xchg eax, ebx ; ret 0x3948
0x0000000000049537 : xchg eax, ebx ; ret 0x3948
0x0000000000049879 : xchg eax, ebx ; ret 0x3948
0x0000000000049879 : xchg eax, ebx ; ret 0x3948
0x0000000000099bca : xchg eax, ebx ; ret 0x3948
0x0000000000099bca : xchg eax, ebx ; ret 0x3948
0x0000000000037ecd : xchg eax, ebx ; ret 0x3949
0x0000000000037ecd : xchg eax, ebx ; ret 0x3949
0x0000000000049bcb : xchg eax, ebx ; ret 0x3949
0x0000000000049bcb : xchg eax, ebx ; ret 0x3949
0x00000000000e7db1 : xchg eax, ebx ; ret 0x3949
0x0000000000074cef : xchg eax, ebx ; ret 0x840
0x00000000000383a1 : xchg eax, ebx ; ret 0x8548
0x0000000000072494 : xchg eax, ebx ; ret 0xd108
0x00000000000b7882 : xchg eax, ebx ; ret 0xd108
0x00000000001a7b79 : xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000006c41c : xchg eax, ebx ; xor eax, 0x48b4800 ; ret 0x8548
0x000000000012e2ae : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x0000000000084608 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000063e48 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x000000000006cbbe : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x00000000000e1295 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x00000000001a9229 : xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001ada11 : xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001ada29 : xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x0000000000198e81 : xchg eax, ecx ; hlt ; jmp rsp
0x000000000008783b : xchg eax, ecx ; mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00000000001485c1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014a586 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014bf91 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014d936 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000065d5b : xchg eax, ecx ; mov rdi, r15 ; call 0x71fd6
0x00000000001981e9 : xchg eax, ecx ; out dx, eax ; jmp rsp
0x0000000000107ae3 : xchg eax, ecx ; ret
0x00000000001b5bef : xchg eax, ecx ; ret
0x00000000000f3613 : xchg eax, ecx ; ret 0xfff2
0x0000000000146cef : xchg eax, ecx ; sub eax, edx ; ret
0x00000000001488f8 : xchg eax, ecx ; sub eax, edx ; ret
0x000000000014ab7f : xchg eax, ecx ; sub eax, edx ; ret
0x000000000014c258 : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000809e1 : xchg eax, edi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000024aad : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000001a531d : xchg eax, edi ; add byte ptr [rax], al ; mov al, 0xd8 ; in eax, dx ; call qword ptr [rsi]
0x00000000000f68bc : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000ff335 : xchg eax, edi ; jge 0xff36d ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000139965 : xchg eax, edi ; jmp 0xffffffffc29d996c
0x0000000000115538 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000045f27 : xchg eax, edi ; ret 0x870f
0x00000000000467df : xchg eax, edi ; ret 0x870f
0x00000000000b0aa4 : xchg eax, edi ; ret 0xd
0x00000000000d2b0d : xchg eax, edi ; ret 0xd008
0x00000000000f3fde : xchg eax, edi ; ret 0xfff2
0x00000000000cd89e : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000105b1d : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000119120 : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000109a06 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f8b49 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000d85f6 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000011f2e8 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00000000001bb0a9 : xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001bb181 : xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001833f8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000009563a : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000061ba1 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000001a4d7d : xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x00000000001a4d7c : xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000007daba : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000006da0e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001adae9 : xchg eax, edx ; hlt ; jmp qword ptr [rcx]
0x00000000001888c0 : xchg eax, edx ; ja 0x1888bd ; call qword ptr [rdx - 0x1b000c89]
0x00000000001888c4 : xchg eax, edx ; ja 0x1888bd ; jmp rsp
0x0000000000184cbd : xchg eax, edx ; jae 0x184c9a ; push rsi ; pop rdx ; je 0x184c8f ; ret 0xacfc
0x0000000000195f1c : xchg eax, edx ; jge 0x195f1e ; call qword ptr [rdx]
0x0000000000195f24 : xchg eax, edx ; jl 0x195f26 ; call qword ptr [rdx]
0x00000000001888c9 : xchg eax, edx ; jmp rsp
0x0000000000195f2c : xchg eax, edx ; jnp 0x195f2e ; call qword ptr [rdx]
0x0000000000195f3c : xchg eax, edx ; jns 0x195f3e ; call qword ptr [rdx]
0x0000000000195f34 : xchg eax, edx ; jp 0x195f36 ; call qword ptr [rdx]
0x0000000000196220 : xchg eax, edx ; lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rdx]
0x00000000000780ea : xchg eax, edx ; mov edx, eax ; jmp 0x78082
0x000000000019583c : xchg eax, edx ; pop rbp ; cld ; jmp qword ptr [rdx]
0x0000000000195a4c : xchg eax, edx ; push rcx ; cld ; jmp qword ptr [rdx]
0x000000000003cfc4 : xchg eax, edx ; ret 0x8348
0x00000000000402bc : xchg eax, edx ; ret 0x8348
0x0000000000043193 : xchg eax, edx ; ret 0x8348
0x00000000000f8b2e : xchg eax, edx ; ret 0x970f
0x00000000000f8b46 : xchg eax, edx ; ret 0x970f
0x000000000003d325 : xchg eax, edx ; ret 0xb60f
0x000000000003d345 : xchg eax, edx ; ret 0xb60f
0x000000000003d365 : xchg eax, edx ; ret 0xb60f
0x000000000003d385 : xchg eax, edx ; ret 0xb60f
0x000000000003d3a5 : xchg eax, edx ; ret 0xb60f
0x000000000003d3c5 : xchg eax, edx ; ret 0xb60f
0x000000000003d3e5 : xchg eax, edx ; ret 0xb60f
0x000000000003d405 : xchg eax, edx ; ret 0xb60f
0x000000000003d425 : xchg eax, edx ; ret 0xb60f
0x000000000003d445 : xchg eax, edx ; ret 0xb60f
0x000000000003d465 : xchg eax, edx ; ret 0xb60f
0x000000000003d481 : xchg eax, edx ; ret 0xb60f
0x000000000003d49d : xchg eax, edx ; ret 0xb60f
0x000000000003d4b9 : xchg eax, edx ; ret 0xb60f
0x000000000004061d : xchg eax, edx ; ret 0xb60f
0x000000000004063d : xchg eax, edx ; ret 0xb60f
0x000000000004065d : xchg eax, edx ; ret 0xb60f
0x000000000004067d : xchg eax, edx ; ret 0xb60f
0x000000000004069d : xchg eax, edx ; ret 0xb60f
0x00000000000406bd : xchg eax, edx ; ret 0xb60f
0x00000000000406dd : xchg eax, edx ; ret 0xb60f
0x00000000000406fd : xchg eax, edx ; ret 0xb60f
0x000000000004071d : xchg eax, edx ; ret 0xb60f
0x000000000004073d : xchg eax, edx ; ret 0xb60f
0x000000000004075d : xchg eax, edx ; ret 0xb60f
0x0000000000040779 : xchg eax, edx ; ret 0xb60f
0x0000000000040795 : xchg eax, edx ; ret 0xb60f
0x00000000000407b1 : xchg eax, edx ; ret 0xb60f
0x00000000000434f4 : xchg eax, edx ; ret 0xb60f
0x0000000000043514 : xchg eax, edx ; ret 0xb60f
0x0000000000043534 : xchg eax, edx ; ret 0xb60f
0x0000000000043554 : xchg eax, edx ; ret 0xb60f
0x0000000000043574 : xchg eax, edx ; ret 0xb60f
0x0000000000043594 : xchg eax, edx ; ret 0xb60f
0x00000000000435b4 : xchg eax, edx ; ret 0xb60f
0x00000000000435d4 : xchg eax, edx ; ret 0xb60f
0x00000000000435f4 : xchg eax, edx ; ret 0xb60f
0x0000000000043614 : xchg eax, edx ; ret 0xb60f
0x0000000000043634 : xchg eax, edx ; ret 0xb60f
0x0000000000043650 : xchg eax, edx ; ret 0xb60f
0x000000000004366c : xchg eax, edx ; ret 0xb60f
0x0000000000043688 : xchg eax, edx ; ret 0xb60f
0x00000000000cd8a1 : xchg eax, edx ; ret 0xd029
0x0000000000105b20 : xchg eax, edx ; ret 0xd029
0x0000000000119123 : xchg eax, edx ; ret 0xd029
0x00000000000d85f9 : xchg eax, edx ; ret 0xd138
0x000000000011f2eb : xchg eax, edx ; ret 0xd138
0x000000000014a63d : xchg eax, edx ; ret 0xf40
0x000000000014a779 : xchg eax, edx ; ret 0xf40
0x0000000000182daf : xchg eax, edx ; ret 0xf869
0x0000000000145a47 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000146a2c : xchg eax, edx ; sub eax, edx ; ret
0x0000000000195d28 : xchg eax, edx ; test esp, edi ; jmp qword ptr [rdx]
0x000000000007e54c : xchg eax, esi ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x000000000016e750 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec68 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd80 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170298 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001971ad : xchg eax, esi ; add byte ptr [rax], al ; adc al, 0x14 ; jmp 0x1971b9
0x000000000015a833 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015d303 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000015fdf7 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000025ae : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000000025ad : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000000abc96 : xchg eax, esi ; cmc ; add byte ptr [rax], al ; ret
0x0000000000189ff1 : xchg eax, esi ; cmc ; jmp qword ptr [rbx]
0x000000000016e80d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ed25 : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fe3d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170355 : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e76b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ec83 : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd9b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001702b3 : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000196684 : xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x00000000000d7333 : xchg eax, esi ; pop rbx ; ret
0x0000000000033506 : xchg eax, esi ; ret
0x000000000011cde4 : xchg eax, esi ; ret
0x00000000000362cc : xchg eax, esi ; ret 0x394c
0x00000000000365bc : xchg eax, esi ; ret 0x394c
0x000000000008b374 : xchg eax, esi ; ret 0xc031
0x000000000008b3cb : xchg eax, esi ; ret 0xc031
0x000000000018564c : xchg eax, esi ; ret 0xcd11
0x0000000000123c37 : xchg eax, esi ; ret 0xfb83
0x000000000016e7bc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ecd4 : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fdec : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170304 : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000bea6d : xchg eax, esi ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000019cccc : xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19ccd7 ; jmp qword ptr [rdi]
0x000000000019a3f0 : xchg eax, esp ; adc edi, eax ; call rsp
0x00000000000e07c4 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000001b0acc : xchg eax, esp ; add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000e5cb6 : xchg eax, esp ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b525c : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e07c2 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000071867 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000117d93 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000019a904 : xchg eax, esp ; cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x0000000000198a6c : xchg eax, esp ; cmp eax, 0x32640001 ; jmp rsp
0x0000000000197631 : xchg eax, esp ; in eax, dx ; jmp rsp
0x0000000000196940 : xchg eax, esp ; jae 0x19692f ; jmp rsp
0x0000000000198628 : xchg eax, esp ; je 0x19861f ; jmp rsp
0x0000000000198ac8 : xchg eax, esp ; jmp rsp
0x0000000000197664 : xchg eax, esp ; mov bh, 0 ; add byte ptr [rsp + rbx*4], dl ; in eax, dx ; call rsp
0x00000000001a73cc : xchg eax, esp ; mov eax, 0x1900000 ; out dx, eax ; jmp rsi
0x0000000000196aac : xchg eax, esp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196aa3 ; jmp rsp
0x00000000000d7301 : xchg eax, esp ; pop rbx ; ret
0x00000000001b0dcc : xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e4c ; cmc ; jmp qword ptr [rcx]
0x000000000018585f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1857f0 ; ret 0x48f
0x000000000004727e : xchg eax, esp ; ret
0x0000000000051344 : xchg eax, esp ; ret
0x000000000005137d : xchg eax, esp ; ret
0x0000000000051601 : xchg eax, esp ; ret
0x0000000000061a41 : xchg eax, esp ; ret
0x00000000000884ff : xchg eax, esp ; ret
0x000000000009731f : xchg eax, esp ; ret
0x00000000000974bf : xchg eax, esp ; ret
0x00000000000975a7 : xchg eax, esp ; ret
0x000000000009ee19 : xchg eax, esp ; ret
0x00000000000aa905 : xchg eax, esp ; ret
0x00000000000e22f8 : xchg eax, esp ; ret
0x00000000000ebce2 : xchg eax, esp ; ret
0x00000000000ec6db : xchg eax, esp ; ret
0x00000000000ec901 : xchg eax, esp ; ret
0x00000000000ecfa5 : xchg eax, esp ; ret
0x000000000013dce3 : xchg eax, esp ; ret
0x000000000013dce3 : xchg eax, esp ; ret
0x00000000001833f9 : xchg eax, esp ; ret
0x00000000001a7dcc : xchg eax, esp ; ret 0
0x00000000000ed5a0 : xchg eax, esp ; ret 0x1589
0x00000000000b16b4 : xchg eax, esp ; ret 0x2041
0x00000000000b2d8d : xchg eax, esp ; ret 0x294c
0x00000000000e2dc9 : xchg eax, esp ; ret 0x2fe9
0x00000000000bbcfd : xchg eax, esp ; ret 0x3840
0x000000000009ec1e : xchg eax, esp ; ret 0x3941
0x0000000000124d87 : xchg eax, esp ; ret 0x3945
0x00000000000e3fbf : xchg eax, esp ; ret 0x3ae9
0x0000000000136d18 : xchg eax, esp ; ret 0x3d83
0x0000000000136e10 : xchg eax, esp ; ret 0x3d83
0x0000000000136f07 : xchg eax, esp ; ret 0x3d83
0x0000000000137007 : xchg eax, esp ; ret 0x3d83
0x0000000000137162 : xchg eax, esp ; ret 0x3d83
0x00000000001372a2 : xchg eax, esp ; ret 0x3d83
0x0000000000137448 : xchg eax, esp ; ret 0x3d83
0x000000000013753c : xchg eax, esp ; ret 0x3d83
0x00000000000d8dd3 : xchg eax, esp ; ret 0x4422
0x00000000000d8eb0 : xchg eax, esp ; ret 0x4422
0x00000000000edc9b : xchg eax, esp ; ret 0x5408
0x00000000000bbdca : xchg eax, esp ; ret 0x5438
0x0000000000059903 : xchg eax, esp ; ret 0x7f3c
0x00000000000817de : xchg eax, esp ; ret 0x82e9
0x0000000000046da9 : xchg eax, esp ; ret 0x8341
0x00000000000d5b18 : xchg eax, esp ; ret 0x8341
0x00000000000ebeeb : xchg eax, esp ; ret 0x8341
0x0000000000026ec5 : xchg eax, esp ; ret 0x8348
0x000000000011184d : xchg eax, esp ; ret 0x840
0x000000000011187b : xchg eax, esp ; ret 0x840
0x00000000000977a7 : xchg eax, esp ; ret 0x8440
0x00000000000aa965 : xchg eax, esp ; ret 0x8444
0x00000000000973d6 : xchg eax, esp ; ret 0x8445
0x00000000000e0b2a : xchg eax, esp ; ret 0x8445
0x00000000000fa3df : xchg eax, esp ; ret 0x8445
0x000000000011d75c : xchg eax, esp ; ret 0x8545
0x00000000000e20ab : xchg eax, esp ; ret 0x854d
0x0000000000139d5f : xchg eax, esp ; ret 0x854d
0x0000000000139fba : xchg eax, esp ; ret 0x854d
0x00000000000e0bba : xchg eax, esp ; ret 0x8941
0x00000000000e2af5 : xchg eax, esp ; ret 0x8949
0x0000000000020777 : xchg eax, esp ; ret 0x8d48
0x00000000000c29b5 : xchg eax, esp ; ret 0x8d48
0x0000000000126d42 : xchg eax, esp ; ret 0x93c
0x000000000004c390 : xchg eax, esp ; ret 0x9522
0x000000000004e1bd : xchg eax, esp ; ret 0x9522
0x00000000000e3f5b : xchg eax, esp ; ret 0x9848
0x000000000002f458 : xchg eax, esp ; ret 0xb60f
0x000000000002f4d0 : xchg eax, esp ; ret 0xb60f
0x00000000000d39ec : xchg eax, esp ; ret 0xb60f
0x00000000000e32ec : xchg eax, esp ; ret 0xb60f
0x00000000000e3852 : xchg eax, esp ; ret 0xb60f
0x00000000000dbb71 : xchg eax, esp ; ret 0xc031
0x000000000011fa05 : xchg eax, esp ; ret 0xc085
0x00000000000e4efd : xchg eax, esp ; ret 0xc683
0x00000000000d9c5f : xchg eax, esp ; ret 0xd009
0x00000000000da0ed : xchg eax, esp ; ret 0xd009
0x00000000000bbf62 : xchg eax, esp ; ret 0xd021
0x0000000000046dbe : xchg eax, esp ; ret 0xd084
0x00000000000fea33 : xchg eax, esp ; ret 0xd108
0x00000000000fea33 : xchg eax, esp ; ret 0xd108
0x00000000000fea8f : xchg eax, esp ; ret 0xd108
0x00000000000feaee : xchg eax, esp ; ret 0xd108
0x00000000000feb4c : xchg eax, esp ; ret 0xd108
0x000000000002086c : xchg eax, esp ; ret 0xd284
0x000000000009ee1f : xchg eax, esp ; ret 0xd308
0x0000000000061a96 : xchg eax, esp ; ret 0xd309
0x0000000000061b94 : xchg eax, esp ; ret 0xd309
0x00000000000e0bb2 : xchg eax, esp ; ret 0xd609
0x000000000006ffbc : xchg eax, esp ; ret 0xdaf7
0x0000000000075f80 : xchg eax, esp ; ret 0xdaf7
0x0000000000076e70 : xchg eax, esp ; ret 0xdaf7
0x00000000000ec6fd : xchg eax, esp ; ret 0xf0e9
0x000000000008b3f8 : xchg eax, esp ; ret 0xf201
0x00000000000e3ecf : xchg eax, esp ; ret 0xf44
0x000000000011d942 : xchg eax, esp ; ret 0xf741
0x00000000000aed84 : xchg eax, esp ; ret 0xf883
0x00000000000b16ad : xchg eax, esp ; ret 0xf883
0x00000000000b3e64 : xchg eax, esp ; ret 0xf883
0x00000000000d2afc : xchg eax, esp ; ret 0xf983
0x00000000000523bf : xchg eax, esp ; ret 0xfa80
0x00000000000aa8c7 : xchg eax, esp ; ret 0xfd83
0x00000000000aa8e8 : xchg eax, esp ; ret 0xfe83
0x000000000019a0ec : xchg eax, esp ; ret 1
0x000000000019a0ec : xchg eax, esp ; ret 1
0x00000000000acd6c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000954d0 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f895f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000453b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000e88cd : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c4b0 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c4f0 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c359 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c39a : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000fea8a : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000feb47 : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000fea2e : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000feae9 : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000197728 : xchg eax, esp ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x00000000001bb429 : xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x0000000000140d78 : xchg eax, esp ; sub byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000019afc4 : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x0000000000113dce : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000008767a : xchg ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000001b1449 : xchg ebp, esi ; jmp rax
0x00000000001bc1b9 : xchg ebx, edi ; call rcx
0x00000000001ac6c9 : xchg ebx, esi ; call qword ptr [rsi]
0x000000000011d16d : xchg ebx, esi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000018879d : xchg ebx, esi ; lcall ptr [rsi + rdi*2 - 0xd] ; jmp rdi
0x000000000019acd1 : xchg ecx, edi ; call rsp
0x0000000000101b2c : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007f0c4 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x00000000001020ac : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000105ed1 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x0000000000047d65 : xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x0000000000195c59 : xchg esp, edi ; call qword ptr [rax]
0x0000000000195e55 : xchg esp, edi ; jmp qword ptr [rax]
0x0000000000195d19 : xchg esp, edi ; jmp rdx
0x00000000000cdfef : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001ad7f1 : xchg esp, esi ; call qword ptr [rax]
0x00000000001ad831 : xchg esp, esi ; call qword ptr [rax]
0x00000000001ad7a9 : xchg esp, esi ; call qword ptr [rsi]
0x00000000001895a9 : xchg esp, esi ; inc dword ptr [rax] ; mov ah, dh ; jmp rdx
0x0000000000104b69 : xchg r10b, dil ; dec dword ptr [rax + 0x39] ; ret
0x0000000000074f11 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000001ada28 : xchg rax, rcx ; hlt ; jmp qword ptr [rsi]
0x0000000000195e60 : xchg spl, dil ; call rax
0x00000000000befe5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a931d : xlatb ; add byte ptr [rax], al ; xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x0000000000180259 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000150fb9 : xlatb ; add r9, r11 ; jmp r9
0x000000000015398c : xlatb ; add r9, r11 ; jmp r9
0x000000000015636c : xlatb ; add r9, r11 ; jmp r9
0x00000000000368be : xlatb ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000368af : xlatb ; cmp byte ptr [rax], al ; ret
0x00000000000fce32 : xlatb ; ja 0xfce64 ; ret
0x00000000001151a9 : xlatb ; jmp rax
0x0000000000183e23 : xlatb ; jo 0x183e9f ; mov ebp, 0xfb67d10d ; ret
0x000000000004a772 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a758 ; mov rax, rsi ; ret
0x0000000000123f76 : xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000001891a4 : xlatb ; push rax ; hlt ; jmp rcx
0x00000000001892c8 : xlatb ; push rbx ; hlt ; jmp rcx
0x0000000000089bf9 : xlatb ; ret
0x0000000000089c56 : xlatb ; ret
0x0000000000089c6f : xlatb ; ret
0x000000000008d496 : xlatb ; ret
0x000000000008e954 : xlatb ; ret
0x000000000008e9be : xlatb ; ret
0x000000000008e9d3 : xlatb ; ret
0x000000000008ea61 : xlatb ; ret
0x000000000008eaba : xlatb ; ret
0x0000000000096604 : xlatb ; ret
0x0000000000096664 : xlatb ; ret
0x0000000000096679 : xlatb ; ret
0x00000000000966ef : xlatb ; ret
0x00000000000968a9 : xlatb ; ret
0x00000000000968f6 : xlatb ; ret
0x000000000009690f : xlatb ; ret
0x000000000009ef0f : xlatb ; ret
0x000000000009ef70 : xlatb ; ret
0x000000000009ef84 : xlatb ; ret
0x000000000009efff : xlatb ; ret
0x000000000009f06f : xlatb ; ret
0x00000000000a1677 : xlatb ; ret
0x00000000000a3327 : xlatb ; ret
0x00000000000ac3c3 : xlatb ; ret
0x00000000001658a7 : xlatb ; ret
0x00000000001670f7 : xlatb ; ret
0x0000000000169bd7 : xlatb ; ret
0x000000000016b487 : xlatb ; ret
0x000000000016df47 : xlatb ; ret
0x00000000001852c6 : xlatb ; ret 0x4e27
0x0000000000003268 : xlatb ; ret 0x5a51
0x000000000008d5c7 : xlatb ; ret 0x94c
0x000000000008e93f : xlatb ; ret 0xc085
0x000000000008e9a9 : xlatb ; ret 0xc085
0x000000000008ea47 : xlatb ; ret 0xc085
0x000000000008eaa5 : xlatb ; ret 0xc085
0x00000000000965ef : xlatb ; ret 0xc085
0x000000000009664f : xlatb ; ret 0xc085
0x00000000000966d9 : xlatb ; ret 0xc085
0x000000000009eefa : xlatb ; ret 0xc085
0x000000000009ef5b : xlatb ; ret 0xc085
0x000000000009efeb : xlatb ; ret 0xc085
0x000000000009f018 : xlatb ; ret 0xc085
0x000000000009f05a : xlatb ; ret 0xc085
0x0000000000089bf0 : xlatb ; ret 0xc148
0x00000000000968a0 : xlatb ; ret 0xc148
0x000000000009f600 : xlatb ; ret 0xc148
0x000000000009f22b : xlatb ; ret 0xf188
0x000000000008b774 : xlatb ; ret 0xf66
0x000000000008b7d2 : xlatb ; ret 0xf66
0x000000000008b896 : xlatb ; ret 0xf66
0x000000000008b91e : xlatb ; ret 0xf66
0x000000000008b992 : xlatb ; ret 0xf66
0x000000000008ba57 : xlatb ; ret 0xf66
0x000000000008bab2 : xlatb ; ret 0xf66
0x00000000000966d1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000009f0c6 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000a605e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a76eb : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a93ff : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000170906 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000009f024 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008b0c6 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008d326 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000091bb6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000094296 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000014f7a6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000150ef6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000162fd6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000165516 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008af86 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008d1a6 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000000919a6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000094046 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000014f686 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000150d86 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000162dd6 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000001652d6 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008ae46 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008d026 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000091796 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000093df6 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000014f566 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000150c16 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000162bd6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000165096 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008ad06 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008cea6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000091586 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000093ba6 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000014f446 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000150aa6 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000001629d6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000164e56 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008abc6 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000008cd26 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000091376 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000093956 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000014f326 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000150936 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000001627d6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000164c16 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000008aa86 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000008cba6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000091166 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000093706 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000014f206 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000001507c6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000001625d6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000001649d6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000008a946 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000008ca26 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000090f56 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000000934b6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000014f0e6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000150656 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000001623d6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000164796 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000008a806 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000008c8a6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000090d46 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000093266 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000014efc6 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000001504e6 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000001621d6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000164556 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000008a6c6 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000008c726 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000090b36 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000093016 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000014eea6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000150376 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000161fd6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000164316 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000008a586 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000008c5a6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000090926 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000092dc6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000014ed86 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000150206 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000161dd6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000001640d6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000008a446 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000008c426 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000090716 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000092b76 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000014ec66 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000150096 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000161bd6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000163e96 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000008a306 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000008c2a6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000090506 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000092926 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000014eb46 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000014ff26 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000001619d6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000163c56 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000008a1c6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000008c126 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000000902f6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000000926d6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000014ea26 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000014fdb6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000001617d6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000163a16 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000008a086 : xlatb ; sal bh, 1 ; ret 0xfffc
0x000000000008bfa6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000000900e6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000092486 : xlatb ; sal bh, 1 ; ret 0xfffc
0x000000000014e906 : xlatb ; sal bh, 1 ; ret 0xfffc
0x000000000014fc46 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000001615d6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000001637d6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000089f46 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000008be26 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000008fed6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000092236 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000014e7e6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000014fad6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00000000001613d6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000163596 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000170902 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008d565 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008d576 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000001952b1 : xlatb ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x00000000001952d1 : xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x000000000018830c : xlatb ; sub edx, esi ; call rax
0x0000000000035f68 : xlatb ; xor eax, eax ; ret
0x0000000000195574 : xor ah, 0xfb ; call rax
0x00000000000a5858 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a57ee : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000025e0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2579 ; loop 0x25c4 ; ret 0x23cb
0x0000000000115aea : xor ah, byte ptr [rsi] ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000187e0c : xor ah, ch ; int1 ; jmp rax
0x000000000013cd11 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000d7b0 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000007cc19 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000840aa : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000084124 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000084123 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cba6 : xor al, 0 ; add dword ptr [rip + 0x349bb5], 1 ; ret
0x000000000007ef50 : xor al, 0 ; jne 0x7ef68 ; jmp 0x7ef82
0x0000000000083b61 : xor al, 0 ; jne 0x83b78 ; jmp 0x83b92
0x000000000008194e : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000081864 : xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007cb15 : xor al, 0 ; ret
0x0000000000081a89 : xor al, 0 ; xor edi, edi ; call qword ptr [rax]
0x0000000000182daa : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000019a4a8 : xor al, 0x21 ; clc ; jmp rsp
0x0000000000096aeb : xor al, 0x24 ; test rsi, rsi ; jne 0x96b04 ; jmp 0x96abe
0x00000000000de4a2 : xor al, 0x2b ; call 0x94478
0x000000000019f26c : xor al, 0x37 ; add byte ptr [rax], al ; add cl, 0xe9 ; call qword ptr [rdx]
0x0000000000002051 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000009f14b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000019b2e0 : xor al, 0x53 ; cli ; call rsp
0x0000000000187bcc : xor al, 0x6e ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x000000000019b9a8 : xor al, 0x77 ; std ; call rsp
0x00000000000aac91 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00000000000e5982 : xor al, 0x83 ; ret 0x4401
0x000000000019acd0 : xor al, 0x87 ; stc ; call rsp
0x00000000000e9023 : xor al, 0x89 ; ret 0x4489
0x00000000000e9022 : xor al, 0x89 ; ret 0x4489
0x000000000003295d : xor al, 0x89 ; ret 0x5525
0x00000000000aac59 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x00000000000c52d4 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00000000001322e8 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x0000000000135058 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00000000000c5262 : xor al, 0xb2 ; add rdx, rsi ; jmp rdx
0x00000000001b716c : xor al, 0xb6 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000000d7675 : xor al, 0xb6 ; cmp r8d, esi ; jge 0xd7658 ; mov edx, eax ; jmp 0xd7661
0x000000000006ca9f : xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x0000000000033410 : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0x000000000019add8 : xor al, 0xb7 ; stc ; call rsp
0x000000000019a0d4 : xor al, 0xc2 ; add dword ptr [rax], eax ; and al, 0xe3 ; idiv edi ; ret 1
0x0000000000183f8a : xor al, 0xd8 ; ret
0x00000000001a946c : xor al, 0xd9 ; add byte ptr [rax], al ; shr dword ptr [rsi], 1 ; int1 ; jmp qword ptr [rax]
0x000000000019a8d0 : xor al, 0xd9 ; clc ; call rsp
0x000000000019bab0 : xor al, 0xdf ; std ; call rsp
0x0000000000186d5c : xor al, 0xe4 ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000b44e4 : xor al, 0xe9 ; ret 6
0x00000000001a6231 : xor al, 0xee ; jmp qword ptr [rcx]
0x00000000001aac6c : xor al, 0xf1 ; add byte ptr [rax], al ; nop ; adc al, 0xf2 ; call qword ptr [rdx]
0x0000000000195c11 : xor al, 0xfc ; call qword ptr [rax + 0x10fffc35]
0x000000000019566d : xor al, 0xfc ; call qword ptr [rax]
0x000000000019566d : xor al, 0xfc ; call qword ptr [rax]
0x000000000019568d : xor al, 0xfc ; call rax
0x000000000019568c : xor al, 0xfc ; call rax
0x00000000001aefad : xor al, 1 ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aefc5 : xor al, 1 ; add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aef65 : xor al, 1 ; add byte ptr [rax - 0x15], cl ; hlt ; jmp rdx
0x00000000000abb28 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000001aef95 : xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000004baaf : xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000080fdd : xor al, 2 ; add byte ptr [rax], al ; call 0x7d286
0x000000000019b0f5 : xor al, 2 ; add byte ptr [rdx], dl ; cli ; call rsp
0x000000000019afe0 : xor al, 3 ; cli ; call rsp
0x000000000010756b : xor al, al ; or eax, edi ; ret
0x00000000001aed45 : xor al, byte ptr [rcx] ; add al, cl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001aedf5 : xor al, byte ptr [rcx] ; add byte ptr [rax - 0x19], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aeda5 : xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out 0xf4, eax ; jmp qword ptr [rcx]
0x00000000000be4d2 : xor al, byte ptr [rsi - 0x76b7ffd0] ; jmp 0xffffffffbece6e2e
0x000000000011151b : xor al, ch ; call rax
0x00000000001122c3 : xor al, ch ; push rdi ; ret
0x0000000000105368 : xor al, ch ; ret 0xf6b7
0x00000000000fb5a8 : xor ax, ax ; ret
0x0000000000195689 : xor bh, ah ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x00000000001aea30 : xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000195280 : xor bh, bl ; sti ; call qword ptr [rax]
0x00000000001952d0 : xor bh, dl ; sti ; push rax ; fdivr st(3) ; call rax
0x0000000000111eaa : xor bl, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001aebf0 : xor bl, ah ; hlt ; call qword ptr [rsi]
0x000000000008eb9c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000196440 : xor bl, byte ptr [rdi - 0x615d0004] ; cld ; call qword ptr [rdx]
0x0000000000128f08 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000abc1c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008ea5d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000000966eb : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000047bb7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x47c2d ; xor eax, eax ; ret
0x000000000012e8c2 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x000000000012ede2 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x0000000000110c81 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x00000000000c45eb : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000f5cef : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000089b01 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000089c1f : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000009f126 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000012b9b7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d381 ; pop rbx ; ret
0x000000000012b97f : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d3b9 ; pop rbx ; ret
0x000000000012b8c0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d478 ; pop rbx ; ret
0x00000000000a8737 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000047f48 : xor byte ptr [rax - 0x75], cl ; jbe 0x47fc4 ; xor eax, eax ; ret
0x00000000000be444 : xor byte ptr [rax - 0x75], cl ; je 0xbe475 ; cmp byte ptr [rcx + 1], cl ; ret
0x0000000000047bb8 : xor byte ptr [rax - 0x75], cl ; jg 0x47c2c ; xor eax, eax ; ret
0x0000000000047f47 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47fc5 ; xor eax, eax ; ret
0x0000000000089a2f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000008b22f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000008f91f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000013c2ea : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000b05c0 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd9add
0x00000000000b5a68 : xor byte ptr [rax - 0x77], cl ; call 0x4ccdef85
0x00000000000c8b09 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000ad55d : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000135bb8 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000076ba3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000306c1 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000dd3b7 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000001204f3 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000cfc46 : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00000000000e0fac : xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x00000000000e0fab : xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000012e8c3 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000012ede3 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d720e : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000072b62 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000128f09 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000332f5 : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001b0b30 : xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000143520 : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x0000000000143551 : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000746ad : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000020b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008d858 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000002084e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000020b49 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002272e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000229be : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002ae15 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002ae5a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b137 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b2ff : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b41f : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b452 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002b477 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d17f : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d1f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d588 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d79f : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d7cc : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d877 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d897 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002dbfc : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002e29f : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002e377 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002e4f3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002e5d7 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002f2e7 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002f30a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002f602 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002f981 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002fb8b : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000300e3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003010e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030130 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030159 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000301b7 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000301e2 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030278 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000302a3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003047f : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000304aa : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000305ba : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000305f8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030717 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003073f : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000308ca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000308e9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000326a0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000326ff : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003a012 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000045107 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000004776b : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000477ae : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000477da : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000050025 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000058ba8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000005b7d9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000005be83 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000063b36 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000006f1f5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000006f21c : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000006f54d : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007ac85 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007af15 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007be27 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007c249 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000007c716 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000008d806 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000008d9cd : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000008da26 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000008da56 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ba06f : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ba09d : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c767f : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7ac4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7af7 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7c57 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7c87 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7e31 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7e62 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c96a0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cc66d : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cd30d : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cd37d : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cd5db : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cd65b : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ef5de : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000f3179 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000f364b : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fd1f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fd264 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fd2ef : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fd39f : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000fe4ce : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000010547e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001054aa : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000010561a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000010564a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000114ec5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000115b9e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000129097 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000012a1af : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000012b9ae : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000138296 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000014450a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000039fca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000039ff2 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000003a364 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000003a422 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000035323 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000c765f : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114ad0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114b00 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114b30 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114b60 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114b90 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114bc0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114bf0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114c20 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114c50 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114c80 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114cb0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114ce0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114d10 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114d40 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114d70 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114da0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114dd0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114e00 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114e30 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114e60 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114e90 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114ef0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114f20 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114f50 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114f80 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114fb0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000114fe0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000115010 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000115040 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000115070 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000012837e : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001443d0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000144400 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000144430 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000144460 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000144490 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001444c0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001744b0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000003a5f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f6d4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000aacb5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011586b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x1158a9 ; call rax
0x000000000004d399 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000058b65 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000bd08a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb7e1 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001954f4 : xor byte ptr [rax], al ; cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000072aaa : xor byte ptr [rax], al ; je 0x72ab4 ; ret
0x00000000000beb61 : xor byte ptr [rax], al ; lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbeb78
0x00000000001955b0 : xor byte ptr [rax], ch ; cld ; push rax ; sub esp, edi ; call rax
0x0000000000194ea8 : xor byte ptr [rax], ch ; sti ; call rax
0x00000000000a9fb7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000abc20 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000abc1f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000007bc60 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000017398b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000008557c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd65c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fd6c6 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000121a3c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000121e10 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a533f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00000000000e901e : xor byte ptr [rbx + r9*4 + 0x46], r8b ; xor al, 0x89 ; ret 0x4489
0x00000000000e901f : xor byte ptr [rbx + rcx*4 + 0x46], al ; xor al, 0x89 ; ret 0x4489
0x000000000008f75b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000009482b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007bfce : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000012b88d : xor byte ptr [rbx - 0x3d], bl ; ret
0x00000000001b3bf0 : xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000194e20 : xor byte ptr [rbx], al ; sti ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000000abc1d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000195638 : xor byte ptr [rbx], ch ; cld ; call qword ptr [rax]
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000001a9320 : xor byte ptr [rcx + rsi*8], ah ; jmp rcx
0x0000000000194fc4 : xor byte ptr [rcx - 0x5ddf0003], ah ; std ; call qword ptr [rax]
0x000000000003ce9e : xor byte ptr [rcx - 0x77], al ; ret 0x8d48
0x0000000000051377 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000515fb : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010f79f : xor byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000e0fee : xor byte ptr [rcx - 0x80], al ; stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe0f98
0x00000000000fc3cc : xor byte ptr [rcx], 0xc0 ; ret
0x0000000000143521 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x0000000000143552 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00000000000746ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000784b7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006dcb9 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001aec05 : xor byte ptr [rcx], al ; add byte ptr [rax], bh ; jrcxz 0x1aec05 ; jmp qword ptr [rcx]
0x00000000001aebed : xor byte ptr [rcx], al ; add byte ptr [rax], dh ; jrcxz 0x1aebed ; call qword ptr [rsi]
0x00000000000668fa : xor byte ptr [rcx], dh ; imul cl ; ret
0x0000000000121a6b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000121e37 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010a6da : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000010b02a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000001b7170 : xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000000840a8 : xor byte ptr [rdi], ah ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001af9f0 : xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000101b71 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000001020f1 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x0000000000071cc0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000051342 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000005137b : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000515ff : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000fa3dd : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x000000000008b3f6 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x0000000000095cfc : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000001123c5 : xor byte ptr [rdx + 5], bh ; call 0x2e628
0x00000000001a5c57 : xor byte ptr [rdx], al ; ret
0x00000000001a7e07 : xor byte ptr [rdx], al ; ret
0x00000000001aa87d : xor byte ptr [rdx], al ; ret
0x00000000001a9cf7 : xor byte ptr [rdx], al ; ret 0xe0a
0x0000000000194ed0 : xor byte ptr [rdx], bh ; sti ; call qword ptr [rax]
0x00000000001a2c90 : xor byte ptr [rdx], bl ; in eax, dx ; call rdx
0x0000000000194e70 : xor byte ptr [rip + 0x1620fffb], dl ; sti ; call qword ptr [rax]
0x00000000001955cc : xor byte ptr [rip + 0x2810fffc], 0xfc ; call rax
0x000000000016e4ff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e5ce : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e6e5 : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ea07 : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ead7 : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ebfd : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fb2f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fbfe : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016fd15 : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170037 : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170107 : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017022d : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008d52c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008ea5e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000966ec : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000000ac88 : xor byte ptr [rsi + 7], dh ; add byte ptr [rax], al ; ret
0x00000000001a6230 : xor byte ptr [rsi + rbp*8], dh ; jmp qword ptr [rcx]
0x0000000000038fea : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000001b40a0 : xor byte ptr [rsi - 0xa], dl ; call qword ptr [rcx]
0x000000000019566c : xor byte ptr [rsp + rdi*8], 0xff ; adc byte ptr [rdi], ah ; cld ; call rax
0x00000000001954dc : xor byte ptr [rsp + rdi*8], al ; jmp qword ptr [rax]
0x0000000000198051 : xor ch, bh ; call rsp
0x00000000000e56f0 : xor ch, byte ptr [rcx] ; ret
0x00000000000a9d48 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a9d5e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d80 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9d9e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9dbe : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9de4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9e00 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9e20 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e40 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9e66 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e88 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ea6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9ec6 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ee2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9f02 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9f22 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f42 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9f68 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9fb8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9c8e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cac : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9ccc : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9cee : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9d0e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9d2e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9bc4 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9bd6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9bec : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c04 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9c1a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a9c4a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9c56 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a9c6c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9bb0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001952b4 : xor cl, bl ; sti ; call qword ptr [rax]
0x00000000000961eb : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000096233 : xor cl, byte ptr [rax + 0x39] ; ret
0x00000000000c45e6 : xor cl, byte ptr [rax - 0x75] ; jl 0xc4617 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000013232f : xor cl, byte ptr [rax - 0x77] ; jp 0x132341 ; ret
0x000000000013509f : xor cl, byte ptr [rax - 0x77] ; jp 0x1350b1 ; ret
0x00000000001350b7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1350c9 ; ret
0x00000000001358ef : xor cl, byte ptr [rax - 0x77] ; jp 0x135901 ; ret
0x0000000000135907 : xor cl, byte ptr [rax - 0x77] ; jp 0x135919 ; ret
0x0000000000135937 : xor cl, byte ptr [rax - 0x77] ; jp 0x135949 ; ret
0x00000000000e773d : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x0000000000130d3c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000013793a : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000010de61 : xor cl, byte ptr [rdi] ; mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x0000000000103772 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000110a81 : xor cl, ch ; ret
0x00000000000a56d0 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a590b : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a59be : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a9501 : xor cl, dh ; jmp qword ptr [rcx]
0x0000000000198a71 : xor dh, bl ; jmp rsp
0x0000000000198a70 : xor dh, bl ; jmp rsp
0x0000000000128674 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000128690 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000001286ac : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000001286c4 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x000000000012f804 : xor dh, dh ; ret 0xc707
0x0000000000195688 : xor dil, spl ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x00000000001af1a0 : xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000001ace20 : xor dl, bl ; jmp qword ptr [rcx]
0x000000000002d8ff : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000872a5 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000ac87b : xor dword ptr [rax + rax], ecx ; ret
0x00000000000ac87a : xor dword ptr [rax + rax], ecx ; ret
0x0000000000052bcd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x000000000009ed1e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000d18ee : xor dword ptr [rax - 0x7d], ecx ; ret
0x000000000019ecb5 : xor dword ptr [rax], eax ; add al, bh ; mov bh, 0xe9 ; call qword ptr [rdx]
0x00000000000cac3b : xor dword ptr [rbx - 0x76b7ffd1], ebp ; ret 0x9ce9
0x000000000009cbe9 : xor dword ptr [rcx - 0x7d], ecx ; ret
0x000000000019b075 : xor dword ptr [rdx], eax ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000103c13 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000004e618 : xor eax, 0x1304 ; add rax, rsi ; jmp rax
0x00000000000450e0 : xor eax, 0x1cb ; call rax
0x00000000000fc1d3 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000001890c0 : xor eax, 0x23fff3db ; fcomi st(3) ; call qword ptr [rcx]
0x00000000001955cd : xor eax, 0x2810fffc ; cld ; call rax
0x000000000006f21b : xor eax, 0x30 ; call rax
0x0000000000063b68 : xor eax, 0x360403 ; call rax
0x000000000005be5a : xor eax, 0x368111 ; call rax
0x000000000005b804 : xor eax, 0x368767 ; call rax
0x0000000000195bd5 : xor eax, 0x3690fffc ; cld ; call qword ptr [rax]
0x000000000005004c : xor eax, 0x373f1f ; call rax
0x000000000004d3d0 : xor eax, 0x376b9b ; call rax
0x0000000000078181 : xor eax, 0x39480000 ; ret
0x00000000000419ca : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b000a : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006c41d : xor eax, 0x48b4800 ; ret 0x8548
0x0000000000102d6f : xor eax, 0x49fff1cb ; mov edi, dword ptr [rbp] ; call rbx
0x00000000001bc713 : xor eax, 0x78d0000 ; rol byte ptr [rcx], cl ; ret 0xa
0x0000000000002479 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x00000000000582e5 : xor eax, 0xf6ffffee ; ret 0xf10
0x000000000007c74b : xor eax, 0xffffe1e0 ; call rax
0x000000000007c2fb : xor eax, 0xffffe630 ; call rax
0x000000000007bf0b : xor eax, 0xffffea20 ; call rax
0x000000000007aeab : xor eax, 0xfffffa80 ; call rax
0x000000000007ac3b : xor eax, 0xfffffcf0 ; call rax
0x000000000006f514 : xor eax, 0xfffffd37 ; call rax
0x000000000002084b : xor eax, dword ptr [0x30] ; call rax
0x0000000000020b46 : xor eax, dword ptr [0x30] ; call rax
0x000000000002272b : xor eax, dword ptr [0x30] ; call rax
0x00000000000229bb : xor eax, dword ptr [0x30] ; call rax
0x000000000002ae12 : xor eax, dword ptr [0x30] ; call rax
0x000000000002ae57 : xor eax, dword ptr [0x30] ; call rax
0x000000000002b134 : xor eax, dword ptr [0x30] ; call rax
0x000000000002b2fc : xor eax, dword ptr [0x30] ; call rax
0x000000000002b41c : xor eax, dword ptr [0x30] ; call rax
0x000000000002b44f : xor eax, dword ptr [0x30] ; call rax
0x000000000002b474 : xor eax, dword ptr [0x30] ; call rax
0x000000000002d17c : xor eax, dword ptr [0x30] ; call rax
0x000000000002d1f1 : xor eax, dword ptr [0x30] ; call rax
0x000000000002d585 : xor eax, dword ptr [0x30] ; call rax
0x000000000002d79c : xor eax, dword ptr [0x30] ; call rax
0x000000000002d7c9 : xor eax, dword ptr [0x30] ; call rax
0x000000000002d874 : xor eax, dword ptr [0x30] ; call rax
0x000000000002d894 : xor eax, dword ptr [0x30] ; call rax
0x000000000002dbf9 : xor eax, dword ptr [0x30] ; call rax
0x000000000002e29c : xor eax, dword ptr [0x30] ; call rax
0x000000000002e374 : xor eax, dword ptr [0x30] ; call rax
0x000000000002e4f0 : xor eax, dword ptr [0x30] ; call rax
0x000000000002e5d4 : xor eax, dword ptr [0x30] ; call rax
0x000000000002f2e4 : xor eax, dword ptr [0x30] ; call rax
0x000000000002f307 : xor eax, dword ptr [0x30] ; call rax
0x000000000002f5ff : xor eax, dword ptr [0x30] ; call rax
0x000000000002f97e : xor eax, dword ptr [0x30] ; call rax
0x000000000002fb88 : xor eax, dword ptr [0x30] ; call rax
0x00000000000300e0 : xor eax, dword ptr [0x30] ; call rax
0x000000000003010b : xor eax, dword ptr [0x30] ; call rax
0x000000000003012d : xor eax, dword ptr [0x30] ; call rax
0x0000000000030156 : xor eax, dword ptr [0x30] ; call rax
0x00000000000301b4 : xor eax, dword ptr [0x30] ; call rax
0x00000000000301df : xor eax, dword ptr [0x30] ; call rax
0x0000000000030275 : xor eax, dword ptr [0x30] ; call rax
0x00000000000302a0 : xor eax, dword ptr [0x30] ; call rax
0x000000000003047c : xor eax, dword ptr [0x30] ; call rax
0x00000000000304a7 : xor eax, dword ptr [0x30] ; call rax
0x00000000000305b7 : xor eax, dword ptr [0x30] ; call rax
0x00000000000305f5 : xor eax, dword ptr [0x30] ; call rax
0x0000000000030714 : xor eax, dword ptr [0x30] ; call rax
0x000000000003073c : xor eax, dword ptr [0x30] ; call rax
0x00000000000308c7 : xor eax, dword ptr [0x30] ; call rax
0x00000000000308e6 : xor eax, dword ptr [0x30] ; call rax
0x000000000003269d : xor eax, dword ptr [0x30] ; call rax
0x00000000000326fc : xor eax, dword ptr [0x30] ; call rax
0x000000000003a00f : xor eax, dword ptr [0x30] ; call rax
0x0000000000045104 : xor eax, dword ptr [0x30] ; call rax
0x0000000000047768 : xor eax, dword ptr [0x30] ; call rax
0x00000000000477ab : xor eax, dword ptr [0x30] ; call rax
0x00000000000477d7 : xor eax, dword ptr [0x30] ; call rax
0x0000000000050022 : xor eax, dword ptr [0x30] ; call rax
0x0000000000058ba5 : xor eax, dword ptr [0x30] ; call rax
0x000000000005b7d6 : xor eax, dword ptr [0x30] ; call rax
0x000000000005be80 : xor eax, dword ptr [0x30] ; call rax
0x0000000000063b33 : xor eax, dword ptr [0x30] ; call rax
0x000000000006f1f2 : xor eax, dword ptr [0x30] ; call rax
0x000000000006f54a : xor eax, dword ptr [0x30] ; call rax
0x000000000007ac82 : xor eax, dword ptr [0x30] ; call rax
0x000000000007af12 : xor eax, dword ptr [0x30] ; call rax
0x000000000007be24 : xor eax, dword ptr [0x30] ; call rax
0x000000000007c246 : xor eax, dword ptr [0x30] ; call rax
0x000000000007c713 : xor eax, dword ptr [0x30] ; call rax
0x000000000008d803 : xor eax, dword ptr [0x30] ; call rax
0x000000000008d9ca : xor eax, dword ptr [0x30] ; call rax
0x000000000008da23 : xor eax, dword ptr [0x30] ; call rax
0x000000000008da53 : xor eax, dword ptr [0x30] ; call rax
0x00000000000ba06c : xor eax, dword ptr [0x30] ; call rax
0x00000000000ba09a : xor eax, dword ptr [0x30] ; call rax
0x00000000000c767c : xor eax, dword ptr [0x30] ; call rax
0x00000000000c7ac1 : xor eax, dword ptr [0x30] ; call rax
0x00000000000c7af4 : xor eax, dword ptr [0x30] ; call rax
0x00000000000c7c54 : xor eax, dword ptr [0x30] ; call rax
0x00000000000c7c84 : xor eax, dword ptr [0x30] ; call rax
0x00000000000c7e2e : xor eax, dword ptr [0x30] ; call rax
0x00000000000c7e5f : xor eax, dword ptr [0x30] ; call rax
0x00000000000c969d : xor eax, dword ptr [0x30] ; call rax
0x00000000000cc66a : xor eax, dword ptr [0x30] ; call rax
0x00000000000cd30a : xor eax, dword ptr [0x30] ; call rax
0x00000000000cd37a : xor eax, dword ptr [0x30] ; call rax
0x00000000000cd5d8 : xor eax, dword ptr [0x30] ; call rax
0x00000000000cd658 : xor eax, dword ptr [0x30] ; call rax
0x00000000000ef5db : xor eax, dword ptr [0x30] ; call rax
0x00000000000f3176 : xor eax, dword ptr [0x30] ; call rax
0x00000000000f3648 : xor eax, dword ptr [0x30] ; call rax
0x00000000000fd1f1 : xor eax, dword ptr [0x30] ; call rax
0x00000000000fd261 : xor eax, dword ptr [0x30] ; call rax
0x00000000000fd2ec : xor eax, dword ptr [0x30] ; call rax
0x00000000000fd39c : xor eax, dword ptr [0x30] ; call rax
0x00000000000fe4cb : xor eax, dword ptr [0x30] ; call rax
0x000000000010547b : xor eax, dword ptr [0x30] ; call rax
0x00000000001054a7 : xor eax, dword ptr [0x30] ; call rax
0x0000000000105617 : xor eax, dword ptr [0x30] ; call rax
0x0000000000105647 : xor eax, dword ptr [0x30] ; call rax
0x0000000000114ec2 : xor eax, dword ptr [0x30] ; call rax
0x0000000000115b9b : xor eax, dword ptr [0x30] ; call rax
0x000000000012b9ab : xor eax, dword ptr [0x30] ; call rax
0x0000000000138293 : xor eax, dword ptr [0x30] ; call rax
0x0000000000144507 : xor eax, dword ptr [0x30] ; call rax
0x0000000000035320 : xor eax, dword ptr [0x30] ; jmp rax
0x00000000000c765c : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114acd : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114afd : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114b2d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114b5d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114b8d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114bbd : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114bed : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114c1d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114c4d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114c7d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114cad : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114cdd : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114d0d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114d3d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114d6d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114d9d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114dcd : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114dfd : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114e2d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114e5d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114e8d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114eed : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114f1d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114f4d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114f7d : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114fad : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000114fdd : xor eax, dword ptr [0x30] ; jmp rax
0x000000000011500d : xor eax, dword ptr [0x30] ; jmp rax
0x000000000011503d : xor eax, dword ptr [0x30] ; jmp rax
0x000000000011506d : xor eax, dword ptr [0x30] ; jmp rax
0x000000000012837b : xor eax, dword ptr [0x30] ; jmp rax
0x00000000001443cd : xor eax, dword ptr [0x30] ; jmp rax
0x00000000001443fd : xor eax, dword ptr [0x30] ; jmp rax
0x000000000014442d : xor eax, dword ptr [0x30] ; jmp rax
0x000000000014445d : xor eax, dword ptr [0x30] ; jmp rax
0x000000000014448d : xor eax, dword ptr [0x30] ; jmp rax
0x00000000001444bd : xor eax, dword ptr [0x30] ; jmp rax
0x00000000001744ad : xor eax, dword ptr [0x30] ; jmp rax
0x000000000004d396 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x0000000000058b62 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x0000000000088482 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000088708 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000885f1 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008e73c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00000000000886a4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008d7da : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000084113 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000008921d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000892d5 : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008958d : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000085814 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x85827 ; ret
0x00000000001aeefd : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aee85 : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000000c78b0 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013380c : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137587 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000142c3b : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bf782 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000136f52 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000137052 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000122215 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011eae8 : xor eax, eax ; add rsp, 0x28 ; ret
0x00000000001370d5 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000137215 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000143e08 : xor eax, eax ; add rsp, 0x38 ; ret
0x000000000014366f : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000143737 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000003a08c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b1de : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b23d : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c8d0 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000101e2c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001023ae : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112f42 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b9e5 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d6d5 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb80e : xor eax, eax ; add rsp, 8 ; ret
0x00000000000e7ae0 : xor eax, eax ; add rsp, 8 ; ret
0x00000000000ff772 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002df30 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x000000000013b491 : xor eax, eax ; call r8
0x0000000000075297 : xor eax, eax ; call rbx
0x000000000013b4db : xor eax, eax ; call rcx
0x000000000013c2f0 : xor eax, eax ; call rdx
0x000000000003a6c6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a6d8 ; pop rbx ; ret
0x00000000000d72fc : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd729d ; pop rbx ; ret
0x000000000010a6db : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x000000000010b02b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000d16d4 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000001024ea : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x102501 ; pop rbx ; ret
0x00000000000fce2e : xor eax, eax ; cmp rdi, rdx ; ja 0xfce68 ; ret
0x000000000013bdac : xor eax, eax ; cmp rdx, rcx ; je 0x13bdc8 ; ret
0x0000000000114aa7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000adfd2 : xor eax, eax ; jmp 0xaddb9
0x00000000000ae3e1 : xor eax, eax ; jmp 0xae219
0x000000000012e140 : xor eax, eax ; jmp rcx
0x0000000000115b75 : xor eax, eax ; leave ; ret
0x0000000000115b74 : xor eax, eax ; leave ; ret
0x0000000000124138 : xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x000000000012304d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000fc360 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000fc3b6 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000003ac82 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000009ed48 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000001159d1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000012a31a : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000013a788 : xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x00000000000d5196 : xor eax, eax ; mov rdx, r8 ; jmp 0xd51bb
0x0000000000132dc7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000138f47 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000139667 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003b370 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000006e7e9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de376 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e0df : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000123165 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ed83 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133683 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139643 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb75 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000943e7 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000d6f8e : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000d6fd1 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e8481 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fc455 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fc475 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010314b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000012e1a8 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000137ccb : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000cd407 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000115a41 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000012bf62 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012e0f8 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012d74f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000022b4f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000039df4 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a584 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dd61 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e2a4 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000075118 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077962 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000850e1 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f302 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f465 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d7144 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000efde1 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb684 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fefa4 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010ad5c : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b5bc : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117834 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137ac9 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a1d7 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bb568 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003a26d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a2c1 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006df80 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074b82 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077cbe : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086a7a : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008981c : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7cb0 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7bbc : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efce7 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000faeed : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff434 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001192b8 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d33e : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d3c5 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121a6c : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e38 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ccb6 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012da00 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e723 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ec90 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001338f8 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001338f7 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000133b6c : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ac54 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000077d54 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007c905 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008b4ac : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008b504 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000abd34 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000bb722 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c80c7 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c8237 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c89ed : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cc265 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000da2d4 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f5bee : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010ea38 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000112efa : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000112fcd : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011f334 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012cbf9 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012cd62 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d69c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d789 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d7d9 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d859 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e104 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e14c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f609 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013041e : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001304b9 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130554 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001305d3 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013067c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013a944 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013af34 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013afb4 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b184 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b86c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b92c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b9ec : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013baac : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000033ee6 : xor eax, eax ; pop rbx ; ret
0x0000000000035232 : xor eax, eax ; pop rbx ; ret
0x0000000000035231 : xor eax, eax ; pop rbx ; ret
0x0000000000035230 : xor eax, eax ; pop rbx ; ret
0x0000000000036475 : xor eax, eax ; pop rbx ; ret
0x0000000000036765 : xor eax, eax ; pop rbx ; ret
0x0000000000039ee5 : xor eax, eax ; pop rbx ; ret
0x000000000003a7a6 : xor eax, eax ; pop rbx ; ret
0x000000000003a800 : xor eax, eax ; pop rbx ; ret
0x0000000000048037 : xor eax, eax ; pop rbx ; ret
0x00000000000481ce : xor eax, eax ; pop rbx ; ret
0x000000000006acd0 : xor eax, eax ; pop rbx ; ret
0x000000000006ad37 : xor eax, eax ; pop rbx ; ret
0x0000000000072bde : xor eax, eax ; pop rbx ; ret
0x0000000000075666 : xor eax, eax ; pop rbx ; ret
0x00000000000762e1 : xor eax, eax ; pop rbx ; ret
0x000000000007789b : xor eax, eax ; pop rbx ; ret
0x0000000000077c0b : xor eax, eax ; pop rbx ; ret
0x00000000000783c4 : xor eax, eax ; pop rbx ; ret
0x00000000000789bc : xor eax, eax ; pop rbx ; ret
0x000000000007b1a8 : xor eax, eax ; pop rbx ; ret
0x0000000000082f38 : xor eax, eax ; pop rbx ; ret
0x00000000000844e7 : xor eax, eax ; pop rbx ; ret
0x0000000000086529 : xor eax, eax ; pop rbx ; ret
0x0000000000088741 : xor eax, eax ; pop rbx ; ret
0x0000000000097387 : xor eax, eax ; pop rbx ; ret
0x00000000000aabd0 : xor eax, eax ; pop rbx ; ret
0x00000000000b9ff4 : xor eax, eax ; pop rbx ; ret
0x00000000000ba014 : xor eax, eax ; pop rbx ; ret
0x00000000000d72f0 : xor eax, eax ; pop rbx ; ret
0x00000000000daf63 : xor eax, eax ; pop rbx ; ret
0x00000000000daf79 : xor eax, eax ; pop rbx ; ret
0x00000000000f7847 : xor eax, eax ; pop rbx ; ret
0x00000000000fba70 : xor eax, eax ; pop rbx ; ret
0x00000000000fe103 : xor eax, eax ; pop rbx ; ret
0x00000000000fe2c4 : xor eax, eax ; pop rbx ; ret
0x00000000000fe500 : xor eax, eax ; pop rbx ; ret
0x0000000000113332 : xor eax, eax ; pop rbx ; ret
0x000000000011ce68 : xor eax, eax ; pop rbx ; ret
0x000000000012b045 : xor eax, eax ; pop rbx ; ret
0x000000000012e2af : xor eax, eax ; pop rbx ; ret
0x0000000000140821 : xor eax, eax ; pop rbx ; ret
0x0000000000140eae : xor eax, eax ; pop rbx ; ret
0x0000000000144344 : xor eax, eax ; pop rbx ; ret
0x0000000000123e26 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000001fb7b : xor eax, eax ; ret
0x0000000000035f46 : xor eax, eax ; ret
0x0000000000035f69 : xor eax, eax ; ret
0x0000000000036088 : xor eax, eax ; ret
0x00000000000360ca : xor eax, eax ; ret
0x0000000000036270 : xor eax, eax ; ret
0x000000000003655d : xor eax, eax ; ret
0x000000000003684d : xor eax, eax ; ret
0x0000000000039f08 : xor eax, eax ; ret
0x000000000003ac07 : xor eax, eax ; ret
0x000000000003ac9a : xor eax, eax ; ret
0x000000000003b299 : xor eax, eax ; ret
0x000000000003b2e3 : xor eax, eax ; ret
0x000000000003b32a : xor eax, eax ; ret
0x0000000000045a30 : xor eax, eax ; ret
0x0000000000047b29 : xor eax, eax ; ret
0x0000000000047b29 : xor eax, eax ; ret
0x0000000000047bbd : xor eax, eax ; ret
0x0000000000047f4d : xor eax, eax ; ret
0x0000000000048089 : xor eax, eax ; ret
0x0000000000048221 : xor eax, eax ; ret
0x0000000000048478 : xor eax, eax ; ret
0x000000000006acd8 : xor eax, eax ; ret
0x000000000006b472 : xor eax, eax ; ret
0x000000000006b47c : xor eax, eax ; ret
0x000000000006de78 : xor eax, eax ; ret
0x00000000000709c0 : xor eax, eax ; ret
0x0000000000072ef3 : xor eax, eax ; ret
0x0000000000074e58 : xor eax, eax ; ret
0x0000000000074f60 : xor eax, eax ; ret
0x000000000007783d : xor eax, eax ; ret
0x0000000000077bbd : xor eax, eax ; ret
0x00000000000782a0 : xor eax, eax ; ret
0x000000000007a370 : xor eax, eax ; ret
0x000000000007b6f0 : xor eax, eax ; ret
0x000000000007bc00 : xor eax, eax ; ret
0x000000000007cae0 : xor eax, eax ; ret
0x000000000007cb20 : xor eax, eax ; ret
0x000000000007d270 : xor eax, eax ; ret
0x000000000007df40 : xor eax, eax ; ret
0x0000000000082d8e : xor eax, eax ; ret
0x0000000000082f2e : xor eax, eax ; ret
0x00000000000885f7 : xor eax, eax ; ret
0x000000000008b12f : xor eax, eax ; ret
0x000000000008b420 : xor eax, eax ; ret
0x000000000008b8c6 : xor eax, eax ; ret
0x000000000008d3a4 : xor eax, eax ; ret
0x000000000008d610 : xor eax, eax ; ret
0x000000000008eae0 : xor eax, eax ; ret
0x000000000008eb1c : xor eax, eax ; ret
0x000000000008eba1 : xor eax, eax ; ret
0x000000000008ecf0 : xor eax, eax ; ret
0x0000000000091c7c : xor eax, eax ; ret
0x0000000000094371 : xor eax, eax ; ret
0x0000000000096541 : xor eax, eax ; ret
0x0000000000096751 : xor eax, eax ; ret
0x000000000009742f : xor eax, eax ; ret
0x00000000000978cd : xor eax, eax ; ret
0x000000000009eaf2 : xor eax, eax ; ret
0x000000000009eb32 : xor eax, eax ; ret
0x000000000009eb92 : xor eax, eax ; ret
0x000000000009ebe2 : xor eax, eax ; ret
0x000000000009ec33 : xor eax, eax ; ret
0x000000000009ec6b : xor eax, eax ; ret
0x000000000009ecc4 : xor eax, eax ; ret
0x000000000009f093 : xor eax, eax ; ret
0x000000000009f0cc : xor eax, eax ; ret
0x000000000009f181 : xor eax, eax ; ret
0x00000000000aa164 : xor eax, eax ; ret
0x00000000000aa214 : xor eax, eax ; ret
0x00000000000aa500 : xor eax, eax ; ret
0x00000000000aa9a3 : xor eax, eax ; ret
0x00000000000aab60 : xor eax, eax ; ret
0x00000000000aad34 : xor eax, eax ; ret
0x00000000000aad88 : xor eax, eax ; ret
0x00000000000aadd0 : xor eax, eax ; ret
0x00000000000aafa1 : xor eax, eax ; ret
0x00000000000abaf4 : xor eax, eax ; ret
0x00000000000abc71 : xor eax, eax ; ret
0x00000000000abf61 : xor eax, eax ; ret
0x00000000000ac16b : xor eax, eax ; ret
0x00000000000ac5d1 : xor eax, eax ; ret
0x00000000000ac627 : xor eax, eax ; ret
0x00000000000ac6de : xor eax, eax ; ret
0x00000000000ac6dd : xor eax, eax ; ret
0x00000000000ada9a : xor eax, eax ; ret
0x00000000000b65da : xor eax, eax ; ret
0x00000000000b9e25 : xor eax, eax ; ret
0x00000000000b9e90 : xor eax, eax ; ret
0x00000000000b9ef9 : xor eax, eax ; ret
0x00000000000b9f60 : xor eax, eax ; ret
0x00000000000bb746 : xor eax, eax ; ret
0x00000000000bb82e : xor eax, eax ; ret
0x00000000000bdf96 : xor eax, eax ; ret
0x00000000000c75c0 : xor eax, eax ; ret
0x00000000000c80de : xor eax, eax ; ret
0x00000000000c824e : xor eax, eax ; ret
0x00000000000cdba2 : xor eax, eax ; ret
0x00000000000cea30 : xor eax, eax ; ret
0x00000000000d1768 : xor eax, eax ; ret
0x00000000000d5914 : xor eax, eax ; ret
0x00000000000d6c60 : xor eax, eax ; ret
0x00000000000d8e50 : xor eax, eax ; ret
0x00000000000d9b54 : xor eax, eax ; ret
0x00000000000e849a : xor eax, eax ; ret
0x00000000000e8499 : xor eax, eax ; ret
0x00000000000ea92e : xor eax, eax ; ret
0x00000000000f5e00 : xor eax, eax ; ret
0x00000000000f5e92 : xor eax, eax ; ret
0x00000000000f5f36 : xor eax, eax ; ret
0x00000000000f5f53 : xor eax, eax ; ret
0x00000000000f5f65 : xor eax, eax ; ret
0x00000000000f5f73 : xor eax, eax ; ret
0x00000000000f67df : xor eax, eax ; ret
0x00000000000f67f8 : xor eax, eax ; ret
0x00000000000f6808 : xor eax, eax ; ret
0x00000000000f68e6 : xor eax, eax ; ret
0x00000000000f68f8 : xor eax, eax ; ret
0x00000000000f6918 : xor eax, eax ; ret
0x00000000000fb5a9 : xor eax, eax ; ret
0x00000000000fb70e : xor eax, eax ; ret
0x00000000000fc330 : xor eax, eax ; ret
0x00000000000fc3cd : xor eax, eax ; ret
0x00000000000fce5a : xor eax, eax ; ret
0x0000000000103160 : xor eax, eax ; ret
0x0000000000104a59 : xor eax, eax ; ret
0x000000000010625f : xor eax, eax ; ret
0x0000000000108ac0 : xor eax, eax ; ret
0x00000000001149cf : xor eax, eax ; ret
0x0000000000114a30 : xor eax, eax ; ret
0x0000000000114a50 : xor eax, eax ; ret
0x0000000000114aea : xor eax, eax ; ret
0x0000000000114b1a : xor eax, eax ; ret
0x0000000000114b4a : xor eax, eax ; ret
0x0000000000114b7a : xor eax, eax ; ret
0x0000000000114baa : xor eax, eax ; ret
0x0000000000114bda : xor eax, eax ; ret
0x0000000000114c0a : xor eax, eax ; ret
0x0000000000114c3a : xor eax, eax ; ret
0x0000000000114c6a : xor eax, eax ; ret
0x0000000000114c9a : xor eax, eax ; ret
0x0000000000114cca : xor eax, eax ; ret
0x0000000000114cfa : xor eax, eax ; ret
0x0000000000114d2a : xor eax, eax ; ret
0x0000000000114d5a : xor eax, eax ; ret
0x0000000000114d8a : xor eax, eax ; ret
0x0000000000114dba : xor eax, eax ; ret
0x0000000000114dea : xor eax, eax ; ret
0x0000000000114e1a : xor eax, eax ; ret
0x0000000000114e4a : xor eax, eax ; ret
0x0000000000114e7a : xor eax, eax ; ret
0x0000000000114eda : xor eax, eax ; ret
0x0000000000114f0a : xor eax, eax ; ret
0x0000000000114f3a : xor eax, eax ; ret
0x0000000000114f6a : xor eax, eax ; ret
0x0000000000114f9a : xor eax, eax ; ret
0x0000000000114fca : xor eax, eax ; ret
0x0000000000114ffa : xor eax, eax ; ret
0x000000000011502a : xor eax, eax ; ret
0x000000000011505a : xor eax, eax ; ret
0x0000000000115813 : xor eax, eax ; ret
0x0000000000117580 : xor eax, eax ; ret
0x00000000001186a8 : xor eax, eax ; ret
0x0000000000119363 : xor eax, eax ; ret
0x0000000000119362 : xor eax, eax ; ret
0x00000000001233c8 : xor eax, eax ; ret
0x00000000001235c1 : xor eax, eax ; ret
0x0000000000124048 : xor eax, eax ; ret
0x0000000000124198 : xor eax, eax ; ret
0x00000000001266a8 : xor eax, eax ; ret
0x0000000000128a90 : xor eax, eax ; ret
0x000000000012b7a0 : xor eax, eax ; ret
0x000000000012b7c0 : xor eax, eax ; ret
0x000000000012bf10 : xor eax, eax ; ret
0x000000000012d835 : xor eax, eax ; ret
0x000000000012dd60 : xor eax, eax ; ret
0x000000000012e7d8 : xor eax, eax ; ret
0x0000000000132468 : xor eax, eax ; ret
0x00000000001337c6 : xor eax, eax ; ret
0x0000000000135150 : xor eax, eax ; ret
0x0000000000135a00 : xor eax, eax ; ret
0x000000000013bdb8 : xor eax, eax ; ret
0x000000000013bdf0 : xor eax, eax ; ret
0x000000000013bec7 : xor eax, eax ; ret
0x000000000013bf07 : xor eax, eax ; ret
0x000000000013c170 : xor eax, eax ; ret
0x000000000013c180 : xor eax, eax ; ret
0x000000000013c228 : xor eax, eax ; ret
0x000000000013c320 : xor eax, eax ; ret
0x000000000013dd7a : xor eax, eax ; ret
0x0000000000143500 : xor eax, eax ; ret
0x0000000000143e18 : xor eax, eax ; ret
0x0000000000143e3e : xor eax, eax ; ret
0x0000000000143ea5 : xor eax, eax ; ret
0x00000000001443ba : xor eax, eax ; ret
0x00000000001443ea : xor eax, eax ; ret
0x000000000014441a : xor eax, eax ; ret
0x000000000014444a : xor eax, eax ; ret
0x000000000014447a : xor eax, eax ; ret
0x00000000001444aa : xor eax, eax ; ret
0x0000000000145a6f : xor eax, eax ; ret
0x0000000000146a54 : xor eax, eax ; ret
0x00000000001485fc : xor eax, eax ; ret
0x000000000014a5c1 : xor eax, eax ; ret
0x000000000014a790 : xor eax, eax ; ret
0x000000000014a8b0 : xor eax, eax ; ret
0x000000000014bfcc : xor eax, eax ; ret
0x000000000014d971 : xor eax, eax ; ret
0x000000000014f80f : xor eax, eax ; ret
0x0000000000150f74 : xor eax, eax ; ret
0x000000000016309c : xor eax, eax ; ret
0x00000000001655f1 : xor eax, eax ; ret
0x000000000016f007 : xor eax, eax ; ret
0x000000000016f02f : xor eax, eax ; ret
0x000000000016f0e2 : xor eax, eax ; ret
0x000000000016f1d2 : xor eax, eax ; ret
0x000000000016f291 : xor eax, eax ; ret
0x000000000016f2c2 : xor eax, eax ; ret
0x000000000016f2ec : xor eax, eax ; ret
0x000000000016f38a : xor eax, eax ; ret
0x000000000016f40d : xor eax, eax ; ret
0x000000000016f48d : xor eax, eax ; ret
0x000000000016f50d : xor eax, eax ; ret
0x000000000016f58d : xor eax, eax ; ret
0x000000000016f73b : xor eax, eax ; ret
0x000000000016f7cb : xor eax, eax ; ret
0x000000000016f85e : xor eax, eax ; ret
0x000000000016f8fe : xor eax, eax ; ret
0x000000000016f99e : xor eax, eax ; ret
0x000000000016fa0f : xor eax, eax ; ret
0x0000000000170637 : xor eax, eax ; ret
0x000000000017065d : xor eax, eax ; ret
0x00000000001706d8 : xor eax, eax ; ret
0x000000000017075d : xor eax, eax ; ret
0x00000000001707e9 : xor eax, eax ; ret
0x000000000017084f : xor eax, eax ; ret
0x0000000000170883 : xor eax, eax ; ret
0x0000000000170891 : xor eax, eax ; ret
0x0000000000170921 : xor eax, eax ; ret
0x00000000001720fa : xor eax, eax ; ret
0x00000000001721a7 : xor eax, eax ; ret
0x0000000000172262 : xor eax, eax ; ret
0x00000000001722fb : xor eax, eax ; ret
0x0000000000172320 : xor eax, eax ; ret
0x0000000000172928 : xor eax, eax ; ret
0x0000000000172950 : xor eax, eax ; ret
0x000000000009f80e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000077410 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077420 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000aac08 : xor eax, eax ; test dh, 0xf0 ; je 0xaabdb ; movzx eax, dl ; pop rbx ; ret
0x0000000000036268 : xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000000acd67 : xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000114a62 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007a390 : xor eax, eax ; test rdx, rdx ; jne 0x7a3a7 ; ret
0x000000000003afbe : xor eax, ecx ; ret
0x000000000003a637 : xor eax, edx ; sub eax, edx ; ret
0x000000000003a64b : xor eax, edx ; sub rax, rdx ; ret
0x000000000003a66b : xor eax, edx ; sub rax, rdx ; ret
0x0000000000189fdd : xor ebp, 0xf58ec0ff ; call rsi
0x000000000011acd1 : xor ebp, dword ptr [rbx - 0x76b7ffd6] ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000018874d : xor ebx, 0xffffffff ; out 0x88, al ; jmp rsi
0x00000000000bcc23 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008851a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c849d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000025041 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00000000000f3279 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000096ea5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000096ecd : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000096ea5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000096ecd : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008926c : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x000000000002c4b2 : xor ecx, eax ; ret 0x4809
0x0000000000029a73 : xor ecx, ecx ; call r15
0x0000000000034a70 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000ad074 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000129094 : xor edi, dword ptr [0x30] ; call rax
0x000000000012a1ac : xor edi, dword ptr [0x30] ; call rax
0x000000000007d8d9 : xor edi, edi ; call qword ptr [r15]
0x0000000000081955 : xor edi, edi ; call qword ptr [rax]
0x0000000000081a8b : xor edi, edi ; call qword ptr [rax]
0x00000000000c7595 : xor edi, edi ; call rax
0x000000000007d8aa : xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000195bd1 : xor edi, esp ; call qword ptr [rax]
0x00000000001ad131 : xor edi, esp ; jmp qword ptr [rax]
0x00000000001ad149 : xor edi, esp ; jmp qword ptr [rax]
0x00000000001ad161 : xor edi, esp ; jmp qword ptr [rax]
0x0000000000039fc7 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000039fef : xor edx, dword ptr [0x30] ; call rdx
0x000000000003a361 : xor edx, dword ptr [0x30] ; call rdx
0x000000000003a41f : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000218e3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000bfe31 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000504c3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x0000000000078189 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781cc : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117919 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00000000000c84be : xor edx, edx ; jmp 0xc8488
0x00000000000ad076 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000009eddd : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee5c : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee72 : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007ba09 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007db6c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000008d7b3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000008d7b3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000010c9d7 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f6ad0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000001035e1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000018a809 : xor esi, 0xf67ce2ff ; jmp rax
0x00000000000e500e : xor esi, esi ; call 0x8f246
0x000000000004d39d : xor esi, esi ; call rax
0x0000000000058b69 : xor esi, esi ; call rax
0x00000000000f6ad2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x0000000000102831 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000001035e3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000103608 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000103b35 : xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000010362d : xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001038ab : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000103b5a : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000103dd8 : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000103651 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103776 : xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001038cf : xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001039f4 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103b7e : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103ca3 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103dfc : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103f21 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103671 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001036ea : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103796 : xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010380f : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001038ef : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103968 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103a14 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103a8d : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103b9e : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103c17 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103cc3 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103d3c : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103e1c : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103e95 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103f41 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000103fba : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000e8c0e : xor esi, esi ; ret
0x0000000000065b89 : xor esp, esp ; jmp 0x63704
0x0000000000065b88 : xor r12d, r12d ; jmp 0x63705
0x00000000001aee84 : xor r8, qword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000075296 : xor r8d, r8d ; call rbx
0x0000000000110a80 : xor r9b, bpl ; ret
0x0000000000029a72 : xor r9d, r9d ; call r15
0x00000000000fc1d2 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002084a : xor rax, qword ptr [0x30] ; call rax
0x0000000000020b45 : xor rax, qword ptr [0x30] ; call rax
0x000000000002272a : xor rax, qword ptr [0x30] ; call rax
0x00000000000229ba : xor rax, qword ptr [0x30] ; call rax
0x000000000002ae11 : xor rax, qword ptr [0x30] ; call rax
0x000000000002ae56 : xor rax, qword ptr [0x30] ; call rax
0x000000000002b133 : xor rax, qword ptr [0x30] ; call rax
0x000000000002b2fb : xor rax, qword ptr [0x30] ; call rax
0x000000000002b41b : xor rax, qword ptr [0x30] ; call rax
0x000000000002b44e : xor rax, qword ptr [0x30] ; call rax
0x000000000002b473 : xor rax, qword ptr [0x30] ; call rax
0x000000000002d17b : xor rax, qword ptr [0x30] ; call rax
0x000000000002d1f0 : xor rax, qword ptr [0x30] ; call rax
0x000000000002d584 : xor rax, qword ptr [0x30] ; call rax
0x000000000002d79b : xor rax, qword ptr [0x30] ; call rax
0x000000000002d7c8 : xor rax, qword ptr [0x30] ; call rax
0x000000000002d873 : xor rax, qword ptr [0x30] ; call rax
0x000000000002d893 : xor rax, qword ptr [0x30] ; call rax
0x000000000002dbf8 : xor rax, qword ptr [0x30] ; call rax
0x000000000002e29b : xor rax, qword ptr [0x30] ; call rax
0x000000000002e373 : xor rax, qword ptr [0x30] ; call rax
0x000000000002e4ef : xor rax, qword ptr [0x30] ; call rax
0x000000000002e5d3 : xor rax, qword ptr [0x30] ; call rax
0x000000000002f2e3 : xor rax, qword ptr [0x30] ; call rax
0x000000000002f306 : xor rax, qword ptr [0x30] ; call rax
0x000000000002f5fe : xor rax, qword ptr [0x30] ; call rax
0x000000000002f97d : xor rax, qword ptr [0x30] ; call rax
0x000000000002fb87 : xor rax, qword ptr [0x30] ; call rax
0x00000000000300df : xor rax, qword ptr [0x30] ; call rax
0x000000000003010a : xor rax, qword ptr [0x30] ; call rax
0x000000000003012c : xor rax, qword ptr [0x30] ; call rax
0x0000000000030155 : xor rax, qword ptr [0x30] ; call rax
0x00000000000301b3 : xor rax, qword ptr [0x30] ; call rax
0x00000000000301de : xor rax, qword ptr [0x30] ; call rax
0x0000000000030274 : xor rax, qword ptr [0x30] ; call rax
0x000000000003029f : xor rax, qword ptr [0x30] ; call rax
0x000000000003047b : xor rax, qword ptr [0x30] ; call rax
0x00000000000304a6 : xor rax, qword ptr [0x30] ; call rax
0x00000000000305b6 : xor rax, qword ptr [0x30] ; call rax
0x00000000000305f4 : xor rax, qword ptr [0x30] ; call rax
0x0000000000030713 : xor rax, qword ptr [0x30] ; call rax
0x000000000003073b : xor rax, qword ptr [0x30] ; call rax
0x00000000000308c6 : xor rax, qword ptr [0x30] ; call rax
0x00000000000308e5 : xor rax, qword ptr [0x30] ; call rax
0x000000000003269c : xor rax, qword ptr [0x30] ; call rax
0x00000000000326fb : xor rax, qword ptr [0x30] ; call rax
0x000000000003a00e : xor rax, qword ptr [0x30] ; call rax
0x0000000000045103 : xor rax, qword ptr [0x30] ; call rax
0x0000000000047767 : xor rax, qword ptr [0x30] ; call rax
0x00000000000477aa : xor rax, qword ptr [0x30] ; call rax
0x00000000000477d6 : xor rax, qword ptr [0x30] ; call rax
0x0000000000050021 : xor rax, qword ptr [0x30] ; call rax
0x0000000000058ba4 : xor rax, qword ptr [0x30] ; call rax
0x000000000005b7d5 : xor rax, qword ptr [0x30] ; call rax
0x000000000005be7f : xor rax, qword ptr [0x30] ; call rax
0x0000000000063b32 : xor rax, qword ptr [0x30] ; call rax
0x000000000006f1f1 : xor rax, qword ptr [0x30] ; call rax
0x000000000006f549 : xor rax, qword ptr [0x30] ; call rax
0x000000000007ac81 : xor rax, qword ptr [0x30] ; call rax
0x000000000007af11 : xor rax, qword ptr [0x30] ; call rax
0x000000000007be23 : xor rax, qword ptr [0x30] ; call rax
0x000000000007c245 : xor rax, qword ptr [0x30] ; call rax
0x000000000007c712 : xor rax, qword ptr [0x30] ; call rax
0x000000000008d802 : xor rax, qword ptr [0x30] ; call rax
0x000000000008d9c9 : xor rax, qword ptr [0x30] ; call rax
0x000000000008da22 : xor rax, qword ptr [0x30] ; call rax
0x000000000008da52 : xor rax, qword ptr [0x30] ; call rax
0x00000000000ba06b : xor rax, qword ptr [0x30] ; call rax
0x00000000000ba099 : xor rax, qword ptr [0x30] ; call rax
0x00000000000c767b : xor rax, qword ptr [0x30] ; call rax
0x00000000000c7ac0 : xor rax, qword ptr [0x30] ; call rax
0x00000000000c7af3 : xor rax, qword ptr [0x30] ; call rax
0x00000000000c7c53 : xor rax, qword ptr [0x30] ; call rax
0x00000000000c7c83 : xor rax, qword ptr [0x30] ; call rax
0x00000000000c7e2d : xor rax, qword ptr [0x30] ; call rax
0x00000000000c7e5e : xor rax, qword ptr [0x30] ; call rax
0x00000000000c969c : xor rax, qword ptr [0x30] ; call rax
0x00000000000cc669 : xor rax, qword ptr [0x30] ; call rax
0x00000000000cd309 : xor rax, qword ptr [0x30] ; call rax
0x00000000000cd379 : xor rax, qword ptr [0x30] ; call rax
0x00000000000cd5d7 : xor rax, qword ptr [0x30] ; call rax
0x00000000000cd657 : xor rax, qword ptr [0x30] ; call rax
0x00000000000ef5da : xor rax, qword ptr [0x30] ; call rax
0x00000000000f3175 : xor rax, qword ptr [0x30] ; call rax
0x00000000000f3647 : xor rax, qword ptr [0x30] ; call rax
0x00000000000fd1f0 : xor rax, qword ptr [0x30] ; call rax
0x00000000000fd260 : xor rax, qword ptr [0x30] ; call rax
0x00000000000fd2eb : xor rax, qword ptr [0x30] ; call rax
0x00000000000fd39b : xor rax, qword ptr [0x30] ; call rax
0x00000000000fe4ca : xor rax, qword ptr [0x30] ; call rax
0x000000000010547a : xor rax, qword ptr [0x30] ; call rax
0x00000000001054a6 : xor rax, qword ptr [0x30] ; call rax
0x0000000000105616 : xor rax, qword ptr [0x30] ; call rax
0x0000000000105646 : xor rax, qword ptr [0x30] ; call rax
0x0000000000114ec1 : xor rax, qword ptr [0x30] ; call rax
0x0000000000115b9a : xor rax, qword ptr [0x30] ; call rax
0x000000000012b9aa : xor rax, qword ptr [0x30] ; call rax
0x0000000000138292 : xor rax, qword ptr [0x30] ; call rax
0x0000000000144506 : xor rax, qword ptr [0x30] ; call rax
0x000000000003531f : xor rax, qword ptr [0x30] ; jmp rax
0x00000000000c765b : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114acc : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114afc : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114b2c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114b5c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114b8c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114bbc : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114bec : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114c1c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114c4c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114c7c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114cac : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114cdc : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114d0c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114d3c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114d6c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114d9c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114dcc : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114dfc : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114e2c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114e5c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114e8c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114eec : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114f1c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114f4c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114f7c : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114fac : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114fdc : xor rax, qword ptr [0x30] ; jmp rax
0x000000000011500c : xor rax, qword ptr [0x30] ; jmp rax
0x000000000011503c : xor rax, qword ptr [0x30] ; jmp rax
0x000000000011506c : xor rax, qword ptr [0x30] ; jmp rax
0x000000000012837a : xor rax, qword ptr [0x30] ; jmp rax
0x00000000001443cc : xor rax, qword ptr [0x30] ; jmp rax
0x00000000001443fc : xor rax, qword ptr [0x30] ; jmp rax
0x000000000014442c : xor rax, qword ptr [0x30] ; jmp rax
0x000000000014445c : xor rax, qword ptr [0x30] ; jmp rax
0x000000000014448c : xor rax, qword ptr [0x30] ; jmp rax
0x00000000001444bc : xor rax, qword ptr [0x30] ; jmp rax
0x00000000001744ac : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000020849 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000020b44 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000022729 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000229b9 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002ae10 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002ae55 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002b132 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002b2fa : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002b41a : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002b44d : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002b472 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002d17a : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002d1ef : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002d583 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002d79a : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002d7c7 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002d872 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002d892 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002dbf7 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002e29a : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002e372 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002e4ee : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002e5d2 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002f2e2 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002f305 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002f5fd : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002f97c : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002fb86 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000300de : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000030109 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003012b : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000030154 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000301b2 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000301dd : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000030273 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003029e : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003047a : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000304a5 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000305b5 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000305f3 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000030712 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003073a : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000308c5 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000308e4 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003269b : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000326fa : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003a00d : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000045102 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000047766 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000477a9 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000477d5 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000050020 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000058ba3 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000005b7d4 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000005be7e : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000063b31 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000006f1f0 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000006f548 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000007ac80 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000007af10 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000007be22 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000007c244 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000007c711 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000008d801 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000008d9c8 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000008da21 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000008da51 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000ba06a : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000ba098 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c767a : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c7abf : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c7af2 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c7c52 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c7c82 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c7e2c : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c7e5d : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c969b : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000cc668 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000cd308 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000cd378 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000cd5d6 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000cd656 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000ef5d9 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000f3174 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000f3646 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000fd1ef : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000fd25f : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000fd2ea : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000fd39a : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000fe4c9 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000105479 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001054a5 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000105615 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000105645 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000114ec0 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000115b99 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000012b9a9 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000138291 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000144505 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003531e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000c765a : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114acb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114afb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114b2b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114b5b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114b8b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114bbb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114beb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114c1b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114c4b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114c7b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114cab : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114cdb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114d0b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114d3b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114d6b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114d9b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114dcb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114dfb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114e2b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114e5b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114e8b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114eeb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114f1b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114f4b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114f7b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114fab : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000114fdb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000011500b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000011503b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000011506b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000128379 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000001443cb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000001443fb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000014442b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000014445b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000014448b : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000001444bb : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000001744ab : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000008b8c5 : xor rax, rax ; ret
0x000000000008eadf : xor rax, rax ; ret
0x000000000008eb1b : xor rax, rax ; ret
0x000000000008eba0 : xor rax, rax ; ret
0x0000000000096750 : xor rax, rax ; ret
0x000000000009f180 : xor rax, rax ; ret
0x00000000000aafa0 : xor rax, rax ; ret
0x00000000000abc70 : xor rax, rax ; ret
0x00000000000abf60 : xor rax, rax ; ret
0x00000000000ac5d0 : xor rax, rax ; ret
0x0000000000170920 : xor rax, rax ; ret
0x000000000003a64a : xor rax, rdx ; sub rax, rdx ; ret
0x000000000003a66a : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000129093 : xor rdi, qword ptr [0x30] ; call rax
0x000000000012a1ab : xor rdi, qword ptr [0x30] ; call rax
0x0000000000129092 : xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000012a1aa : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000039fc6 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000039fee : xor rdx, qword ptr [0x30] ; call rdx
0x000000000003a360 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000003a41e : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000039fc5 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x0000000000039fed : xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000003a35f : xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000003a41d : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 73222
