0x000000000019b0f8 : adc al, 0x22 ; cli ; call rsp
0x00000000000fd42a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000fd429 : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x000000000007ef0a : adc al, 0x41 ; pop rsp ; ret
0x0000000000020825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000019ab10 : adc al, 0x52 ; stc ; call rsp
0x000000000019b310 : adc al, 0x56 ; cli ; jmp rsp
0x0000000000198c18 : adc al, 0x6d ; call rsp
0x0000000000198e80 : adc al, 0x91 ; hlt ; jmp rsp
0x0000000000197668 : adc al, 0x9c ; in eax, dx ; call rsp
0x000000000019b660 : adc al, 0xc3 ; cli ; jmp rsp
0x0000000000197840 : adc al, 0xcc ; in eax, dx ; jmp rsp
0x00000000001971b1 : adc al, 0xeb ; call rsp
0x00000000001978f8 : adc al, 0xf0 ; in eax, dx ; call rsp
0x0000000000198ed9 : adc al, 0xf5 ; call rsp
0x0000000000199309 : adc al, 0xf6 ; call rsp
0x0000000000195f28 : adc bh, byte ptr [rsp + rdi*8 - 1] ; xchg eax, edx ; jnp 0x195f32 ; call qword ptr [rdx]
0x00000000000ba324 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba323 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000086a79 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ccb5 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012e722 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c7886 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000145da1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000003afea : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x000000000003b017 : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000195bfc : adc byte ptr [rsp + rdi*8 - 1], al ; nop ; cld ; call qword ptr [rax]
0x0000000000195b78 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x00000000000bb8fa : adc byte ptr [rsp - 0x10], al ; ret
0x000000000004a18f : adc byte ptr [rsp - 4], al ; ret
0x000000000004a1d5 : adc byte ptr [rsp - 8], al ; ret
0x000000000003b172 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010c9d6 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000140d77 : adc eax, 0x284694 ; add rsp, 8 ; ret
0x00000000000ffa5e : adc eax, 0x2c768d ; add rsp, 8 ; ret
0x000000000008958a : adc eax, 0x33a9c9 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000000886a1 : adc eax, 0x33e172 ; add rsp, 0x18 ; ret
0x000000000019b9a5 : adc eax, 0x77340001 ; std ; call rsp
0x000000000019a3f1 : adc edi, eax ; call rsp
0x0000000000199af9 : adc edi, esi ; jmp rsp
0x0000000000199af8 : adc edi, r14d ; jmp rsp
0x0000000000199b49 : adc esi, edi ; call rsp
0x0000000000198f2f : add ah, ah ; and ch, dh ; jmp rsp
0x000000000019b19f : add ah, ah ; cli ; jmp rsp
0x00000000001982c7 : add ah, ah ; cli ; out dx, eax ; call rsp
0x000000000019aa3f : add ah, ah ; cmp edi, ecx ; jmp rsp
0x00000000001969cf : add ah, ah ; ja 0x1969c0 ; call rsp
0x000000000019b34f : add ah, ah ; push rdi ; cli ; jmp rsp
0x0000000000198217 : add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x0000000000196ddf : add ah, al ; add ebp, edx ; jmp rsp
0x000000000019b4a7 : add ah, al ; jg 0x19b4a9 ; call rsp
0x000000000019ace7 : add ah, al ; mov bh, cl ; call rsp
0x000000000019985f : add ah, al ; mov bl, 0xf6 ; jmp rsp
0x000000000019928f : add ah, al ; or al, 0xf6 ; call rsp
0x000000000019b3ff : add ah, al ; pop rbp ; cli ; call rsp
0x00000000001983cf : add ah, al ; test eax, esi ; jmp rsp
0x000000000019aea7 : add ah, dh ; sar cl, 1 ; call rsp
0x0000000000199c47 : add ah, dh ; sbb edi, esi ; call rsp
0x00000000001970ff : add ah, dl ; in eax, 0xea ; jmp rsp
0x0000000000197e17 : add ah, dl ; jo 0x197e0d ; jmp rsp
0x0000000000197cc7 : add ah, dl ; pop rax ; out dx, al ; call rsp
0x000000000019b74f : add ah, dl ; salc ; cli ; call rsp
0x000000000019796f : add ah, dl ; std ; in eax, dx ; call rsp
0x000000000013a97a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000cc271 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000133759 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f693d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000f693c : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000010a3a4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a405 : add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000198a20 : add al, 0x24 ; jmp rsp
0x000000000019b158 : add al, 0x29 ; cli ; jmp rsp
0x0000000000198050 : add al, 0x32 ; out dx, eax ; call rsp
0x00000000000ad120 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000ad11f : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000003512d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x0000000000197da8 : add al, 0x66 ; out dx, al ; call rsp
0x0000000000197520 : add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000197df8 : add al, 0x6c ; out dx, al ; call rsp
0x00000000000f6ae7 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000108849 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000001986a0 : add al, 0xa7 ; int1 ; jmp rsp
0x00000000000c7983 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000198215 : add al, 1 ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x000000000019e5bf : add al, al ; jg 0x19e5b0 ; jmp rsp
0x000000000019e597 : add al, bh ; jl 0x19e588 ; jmp rsp
0x000000000019b30d : add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000019b455 : add al, byte ptr [r8] ; and al, 0x66 ; cli ; call rsp
0x000000000019b0f6 : add al, byte ptr [rax] ; adc al, 0x22 ; cli ; call rsp
0x000000000019ab0e : add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x000000000019b30e : add al, byte ptr [rax] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000019b65e : add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b156 : add al, byte ptr [rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000013a97c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000e7603 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000055930 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x0000000000055a55 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x0000000000055ae5 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000019b456 : add al, byte ptr [rax] ; and al, 0x66 ; cli ; call rsp
0x000000000019aea6 : add al, byte ptr [rax] ; hlt ; sar cl, 1 ; call rsp
0x000000000019b19e : add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x000000000019aa3e : add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x000000000019b34e : add al, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b1fe : add al, byte ptr [rax] ; je 0x19b245 ; cli ; jmp rsp
0x000000000019b6de : add al, byte ptr [rax] ; je 0x19b6b0 ; cli ; jmp rsp
0x000000000019b076 : add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019ab9e : add al, byte ptr [rax] ; stc ; call rsp
0x000000000019afc6 : add al, byte ptr [rax] ; sti ; stc ; jmp rsp
0x000000000019ab36 : add al, byte ptr [rax] ; test byte ptr [rax - 7], bl ; jmp rsp
0x000000000019b43e : add al, byte ptr [rax] ; test byte ptr [rcx - 6], ah ; call rsp
0x000000000019b43d : add al, byte ptr [rax] ; test byte ptr [rcx - 6], ah ; call rsp
0x000000000019ae66 : add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x000000000019b2de : add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019b2dd : add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019acce : add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x000000000019add6 : add al, byte ptr [rax] ; xor al, 0xb7 ; stc ; call rsp
0x000000000019afde : add al, byte ptr [rax] ; xor al, 3 ; cli ; call rsp
0x00000000001ae789 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x000000000019b155 : add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x00000000001a9967 : add al, cl ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001a4d81 : add bh, ch ; jmp rsp
0x0000000000036e8d : add byte ptr [r8], r8b ; add rsp, 8 ; ret
0x00000000001975c7 : add byte ptr [rax + rax*4 - 0x13], ah ; jmp rsp
0x000000000019780f : add byte ptr [rax + rcx*8], ah ; in eax, dx ; jmp rsp
0x00000000001978f7 : add byte ptr [rax + rsi*8], dl ; in eax, dx ; call rsp
0x00000000000848e7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x000000000011646f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x0000000000117aff : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x0000000000117afe : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000012cac3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000019b52f : add byte ptr [rax - 6], ah ; call rsp
0x0000000000197666 : add byte ptr [rax], al ; adc al, 0x9c ; in eax, dx ; call rsp
0x000000000019783e : add byte ptr [rax], al ; adc al, 0xcc ; in eax, dx ; jmp rsp
0x00000000001978f6 : add byte ptr [rax], al ; adc al, 0xf0 ; in eax, dx ; call rsp
0x000000000019804e : add byte ptr [rax], al ; add al, 0x32 ; out dx, eax ; call rsp
0x0000000000197da6 : add byte ptr [rax], al ; add al, 0x66 ; out dx, al ; call rsp
0x000000000019751e : add byte ptr [rax], al ; add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000197df6 : add byte ptr [rax], al ; add al, 0x6c ; out dx, al ; call rsp
0x00000000001ae787 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000000fe43c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ffac9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000173dee : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000174243 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000017f40c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000054d9c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000782f1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000088485 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000891f7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000892ac : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000096ce3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000efcbe : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001192eb : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012e1c0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000cd416 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000115a5c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000047a0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006e136 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000070abc : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006f7d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000001015df : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000116a0e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000116a63 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000117f0e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000117f63 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000003a26a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000003a2be : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006df7d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000077cbb : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000089819 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d33b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d3c2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012d9fd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ec8d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f5f47 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000012eb55 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ebd5 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014439c : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014433e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000359da : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000035a2d : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000353a8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00000000000361ae : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000013af21 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013afa0 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f5f89 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000f5f99 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000f6b8f : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000f6bc1 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000fc777 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000020b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007abac : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ae5b : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034b20 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000034e53 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000119353 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000012f81d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000209ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000035697 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000045cf1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000006a915 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000006bb55 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000071530 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000000bae55 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000001166ab : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000001167f6 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000117ce6 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000001188f0 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000118af0 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008d85a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e6b8 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bdb69 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c883d : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cf4a9 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f44b3 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c25 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106312 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f2f3 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f92b : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013046e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013061e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013ddcb : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001752e9 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035178 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000036e8e : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003a957 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fdea2 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fe43e : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fe651 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff798 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff7c8 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ffacb : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000101485 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000109318 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001191e1 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000011fe8f : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001249fe : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138349 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138379 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140f60 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014113f : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000141621 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000173df0 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000174245 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001745d2 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000017467e : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000197d1e : add byte ptr [rax], al ; and al, 0x62 ; out dx, al ; call rsp
0x000000000019780e : add byte ptr [rax], al ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001a7c7e : add byte ptr [rax], al ; and bl, 0xef ; call rsp
0x000000000017f40e : add byte ptr [rax], al ; call rsp
0x000000000019e596 : add byte ptr [rax], al ; clc ; jl 0x19e589 ; jmp rsp
0x00000000001972a6 : add byte ptr [rax], al ; cmp ebp, ebx ; jmp rsp
0x0000000000196be6 : add byte ptr [rax], al ; in eax, 0xe9 ; call rsp
0x00000000001974b6 : add byte ptr [rax], al ; in eax, dx ; jmp rsp
0x00000000001974de : add byte ptr [rax], al ; je 0x197538 ; in eax, dx ; jmp rsp
0x000000000012cb81 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cf68 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000001a6be2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b0fe2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fe9 ; jmp qword ptr [rbx]
0x000000000019762e : add byte ptr [rax], al ; mov ah, 0x94 ; in eax, dx ; jmp rsp
0x00000000001977ce : add byte ptr [rax], al ; mov ah, 0xc4 ; in eax, dx ; call rsp
0x00000000001a4d7e : add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x00000000000c9dd0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000cb2e0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010c180 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010d900 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011a966 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011b2f6 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011bc96 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011cbc6 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000120830 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000131bf6 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010cfbb : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000140fff : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000001412af : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x000000000014136f : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x000000000003362f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x0000000000033673 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x00000000000fde4d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000014109a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000143696 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8b1
0x000000000013a97e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000034e5e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000197eae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x000000000019697e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x196971 ; jmp rsp
0x0000000000196aae : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196aa1 ; jmp rsp
0x00000000001979e6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x00000000001a167a : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x0000000000197cee : add byte ptr [rax], al ; pop rsi ; out dx, al ; jmp rsp
0x00000000001a3c92 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed46a800 ; jmp qword ptr [rsi]
0x00000000001b9592 : add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001a0b92 : add byte ptr [rax], al ; pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; stosb byte ptr [rdi], al ; jmp 0x1a0ba4
0x00000000001b1192 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x000000000019e592 : add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add al, bh ; jl 0x19e58d ; jmp rsp
0x00000000001aef92 : add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001159ce : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001b078a : add byte ptr [rax], al ; push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x000000000019684e : add byte ptr [rax], al ; push rsp ; and ecx, ebp ; call rsp
0x00000000001af44f : add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001bb8ef : add byte ptr [rax], al ; push rsp ; clc ; call qword ptr [rax]
0x00000000001bb58a : add byte ptr [rax], al ; push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a248a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xecf52000 ; call qword ptr [rsi]
0x00000000001a2c8a : add byte ptr [rax], al ; push rsp ; jno 0x1a2c98 ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x0000000000196b96 : add byte ptr [rax], al ; push rsp ; loope 0x196b89 ; call rsp
0x00000000001a758a : add byte ptr [rax], al ; push rsp ; mov edx, 0x73200000 ; out dx, eax ; call rax
0x00000000001b298a : add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b0b8a : add byte ptr [rax], al ; push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b91 ; jmp qword ptr [rcx]
0x00000000001a7c7a : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; and bl, 0xef ; call rsp
0x00000000001a167e : add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x00000000001a4d7a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x0000000000196682 : add byte ptr [rax], al ; xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x000000000019693e : add byte ptr [rax], al ; xchg eax, esp ; jae 0x196931 ; jmp rsp
0x0000000000197726 : add byte ptr [rax], al ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x000000000011eae6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000143e06 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000bb80c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000e7ade : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000001bb927 : add byte ptr [rax], bh ; push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001a6be7 : add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x0000000000143e05 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000001437a7 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000014366c : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000112d2d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000203df : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054cce : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000097920 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bc9dc : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000da3ed : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de456 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012ed3e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054d9e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000011d0da : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b71 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000782f3 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000088487 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000891f9 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000892ae : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000096ce5 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000efcc0 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000101f70 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001192ed : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012e1c2 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000143734 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001991bf : add byte ptr [rbp + rax - 0xa], dl ; call rsp
0x0000000000199487 : add byte ptr [rbp + rbx*2 - 0xa], dh ; call rsp
0x00000000001974b7 : add byte ptr [rbp + rcx*2 - 0x13], al ; jmp rsp
0x000000000019703f : add byte ptr [rbp + rcx*2 - 0x16], ah ; call rsp
0x000000000019a2cf : add byte ptr [rbp + rdi*8 - 9], al ; jmp rsp
0x0000000000199f2f : add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000196be7 : add byte ptr [rbp - 0x17], al ; call rsp
0x000000000019ab9f : add byte ptr [rbp - 7], ah ; call rsp
0x000000000019a687 : add byte ptr [rbp - 8], dl ; jmp rsp
0x00000000000cd418 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000115a5e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000019b65f : add byte ptr [rbx + rax*8], dl ; cli ; jmp rsp
0x000000000019afdf : add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000019751f : add byte ptr [rbx + rbp*2], al ; in eax, dx ; jmp rsp
0x000000000019a907 : add byte ptr [rbx + rbx*8], ah ; clc ; call rsp
0x00000000001972a7 : add byte ptr [rbx + rdi - 0x15], ah ; jmp rsp
0x00000000001977af : add byte ptr [rbx + rdi*4 - 0x13], al ; call rsp
0x0000000000196d9f : add byte ptr [rbx + rdi*8 - 0x17], al ; jmp rsp
0x000000000019afc7 : add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x000000000019b2df : add byte ptr [rbx + rdx*2], dh ; cli ; call rsp
0x000000000019b8c7 : add byte ptr [rbx + rsi*2], ah ; sti ; call rsp
0x000000000019847f : add byte ptr [rbx + rsi*8 - 0x10], dl ; jmp rsp
0x00000000000e7605 : add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000047a10 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006e138 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000070abe : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000199f67 : add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000005b773 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f749e : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000010ce80 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006f7d9 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000001015e1 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000701e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000070200 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000116a10 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000116a65 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000117f10 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000117f65 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000019a6af : add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x000000000019b157 : add byte ptr [rcx + rbp], al ; cli ; jmp rsp
0x000000000019b077 : add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x000000000019a8cf : add byte ptr [rcx + rbx*8], dh ; clc ; call rsp
0x000000000019a5e7 : add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000000c9dd1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000cb2e1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000010c181 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000010d901 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000011a967 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000011b2f7 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000011bc97 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x000000000011cbc7 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x0000000000120831 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x0000000000131bf7 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c9e9b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000cb3ab : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000010c24b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000010d9cb : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000011aa2e : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000011b3be : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000011bd5b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000011cc8b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000001208fb : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x0000000000131cbb : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000013809d : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c9d1 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d518 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012d626 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000019b6df : add byte ptr [rcx + rcx*8 - 6], dh ; jmp rsp
0x0000000000199af7 : add byte ptr [rcx + rdx - 9], al ; jmp rsp
0x00000000001974df : add byte ptr [rcx + rdx*2 - 0x13], dh ; jmp rsp
0x0000000000196687 : add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x0000000000198e7f : add byte ptr [rcx + rdx*4], dl ; hlt ; jmp rsp
0x000000000019684f : add byte ptr [rcx - 0x17], dl ; call rsp
0x0000000000196b97 : add byte ptr [rcx - 0x17], dl ; call rsp
0x0000000000088483 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000019a4a7 : add byte ptr [rcx], dh ; clc ; jmp rsp
0x0000000000137ac8 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb567 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000003a2c0 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006df7f : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000077cbd : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008981b : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d7caf : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001192b7 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d33d : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d3c4 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012d9ff : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ec8f : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000019accf : add byte ptr [rdi + rax*4], dh ; stc ; call rsp
0x0000000000197faf : add byte ptr [rdi + rbx - 0x11], al ; jmp rsp
0x000000000019baaf : add byte ptr [rdi + rbx*8], dh ; std ; call rsp
0x000000000019a37f : add byte ptr [rdi + rcx - 8], ah ; jmp rsp
0x000000000019b63f : add byte ptr [rdi + rdi*4 - 6], al ; jmp rsp
0x000000000019b9a7 : add byte ptr [rdi + rsi*2], dh ; std ; call rsp
0x000000000019add7 : add byte ptr [rdi + rsi*4], dh ; stc ; call rsp
0x00000000001999af : add byte ptr [rdi + rsi*8 - 0xa], al ; call rsp
0x000000000019869f : add byte ptr [rdi], al ; int1 ; jmp rsp
0x0000000000034bc7 : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000034df6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x0000000000034e5f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x0000000000198fd7 : add byte ptr [rdx + rax*2 - 0xb], ah ; jmp rsp
0x000000000019e593 : add byte ptr [rdx + rbp], bl ; add al, bh ; jl 0x19e58c ; jmp rsp
0x0000000000199257 : add byte ptr [rdx + rcx - 0xa], al ; jmp rsp
0x0000000000196a7f : add byte ptr [rdx + rdi*2 - 0x17], dh ; jmp rsp
0x000000000019ab0f : add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x0000000000198a6f : add byte ptr [rdx + rsi - 0xd], ah ; jmp rsp
0x000000000019804f : add byte ptr [rdx + rsi], al ; out dx, eax ; call rsp
0x00000000001989f7 : add byte ptr [rdx - 0xd], dl ; jmp rsp
0x0000000000197d1f : add byte ptr [rdx], ah ; out dx, al ; call rsp
0x000000000019aa3d : add byte ptr [rdx], al ; add ah, ah ; cmp edi, ecx ; jmp rsp
0x0000000000128356 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000019b0f7 : add byte ptr [rdx], dl ; cli ; call rsp
0x0000000000034ab7 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x0000000000034b2f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x0000000000197cef : add byte ptr [rsi + rbx*2 - 0x12], al ; jmp rsp
0x000000000019b1ff : add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x000000000019b30f : add byte ptr [rsi + rdx*2], dl ; cli ; jmp rsp
0x0000000000199657 : add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x0000000000021a2d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019a157 : add byte ptr [rsi - 9], al ; jmp rsp
0x000000000019b457 : add byte ptr [rsi], ah ; cli ; call rsp
0x0000000000197da7 : add byte ptr [rsi], al ; out dx, al ; call rsp
0x00000000001b1f9b : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x00000000000f5f49 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000199007 : add byte ptr [rsp + rax*2 - 0xb], dh ; jmp rsp
0x00000000001972f7 : add byte ptr [rsp + rax*2], ah ; jmp 0x1972ff
0x00000000001bf00f : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001bbf73 : add byte ptr [rsp + rax], bh ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000001bbf43 : add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x0000000000197df7 : add byte ptr [rsp + rbp*2], al ; out dx, al ; call rsp
0x00000000001ad7eb : add byte ptr [rsp + rbx - 0x786fffff], dh ; hlt ; call qword ptr [rax]
0x000000000019854f : add byte ptr [rsp + rbx*2 - 0xf], dl ; call rsp
0x0000000000197667 : add byte ptr [rsp + rbx*4], dl ; in eax, dx ; call rsp
0x00000000001011c3 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001b07bb : add byte ptr [rsp + rcx*2 + 0x6cc00001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b07d3 : add byte ptr [rsp + rcx*2 + 0x6cd80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b07eb : add byte ptr [rsp + rcx*2 + 0x6cf00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0773 : add byte ptr [rsp + rcx*2], bh ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x000000000019783f : add byte ptr [rsp + rcx*8], dl ; in eax, dx ; jmp rsp
0x00000000001a7783 : add byte ptr [rsp + rdi*4], cl ; add al, bl ; frndint ; call qword ptr [rax]
0x0000000000195c78 : add byte ptr [rsp + rdi*8 - 0x37c6f01], al ; jmp qword ptr [rax]
0x000000000019570c : add byte ptr [rsp + rdi*8], ah ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019cfc3 : add byte ptr [rsp + rdx + 0x6f580000], cl ; std ; call qword ptr [rcx]
0x0000000000199307 : add byte ptr [rsp + rdx - 0xa], dh ; call rsp
0x0000000000198ed7 : add byte ptr [rsp + rdx - 0xb], dh ; call rsp
0x00000000001b0fe3 : add byte ptr [rsp + rdx*2 + 0x78480001], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001971af : add byte ptr [rsp + rdx], dl ; jmp 0x1971b7
0x00000000001aef93 : add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aefab : add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aefc3 : add byte ptr [rsp + rsi - 0x13a7ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001bafa3 : add byte ptr [rsp + rsi*8 + 1], ch ; add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x000000000019938f : add byte ptr [rsp - 0xa], al ; call rsp
0x00000000001b5fd3 : add byte ptr [rsp - 0xe67ffff], bl ; sti ; call rcx
0x000000000019a107 : add byte ptr [rsp - 9], ah ; push rsp ; ret 1
0x0000000000198a1f : add byte ptr [rsp], al ; jmp rsp
0x000000000009dac4 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x000000000009bb80 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009d5e4 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009dac3 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x000000000009dac2 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x0000000000198fd5 : add dword ptr [eax], eax ; cmc ; jmp rsp
0x0000000000198ac5 : add dword ptr [r8], eax ; xchg eax, esp ; jmp rsp
0x00000000000d7a6e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000198c16 : add dword ptr [rax], eax ; adc al, 0x6d ; call rsp
0x0000000000198e7e : add dword ptr [rax], eax ; adc al, 0x91 ; hlt ; jmp rsp
0x0000000000199af6 : add dword ptr [rax], eax ; adc edi, r14d ; jmp rsp
0x0000000000198a1e : add dword ptr [rax], eax ; add al, 0x24 ; jmp rsp
0x000000000019869e : add dword ptr [rax], eax ; add al, 0xa7 ; int1 ; jmp rsp
0x000000000017f40a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000012eb53 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ebd3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014439a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fdea0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fe64f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff796 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff7c6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014161f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001745d0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ffded : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000559c5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000019a6ae : add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x000000000019b8c6 : add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019a906 : add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x000000000019a126 : add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000019938e : add dword ptr [rax], eax ; and al, 0xf6 ; call rsp
0x000000000019a5e6 : add dword ptr [rax], eax ; clc ; jmp rsp
0x0000000000198fd6 : add dword ptr [rax], eax ; cmc ; jmp rsp
0x00000000001999ae : add dword ptr [rax], eax ; div esi ; call rsp
0x0000000000199c46 : add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x0000000000198f2e : add dword ptr [rax], eax ; in al, 0x20 ; cmc ; jmp rsp
0x000000000019815e : add dword ptr [rax], eax ; in al, 0x80 ; out dx, eax ; jmp rsp
0x0000000000198216 : add dword ptr [rax], eax ; in al, 0x93 ; out dx, eax ; call rsp
0x000000000019a106 : add dword ptr [rax], eax ; in al, 0xf7 ; push rsp ; ret 1
0x00000000001982c6 : add dword ptr [rax], eax ; in al, 0xfa ; out dx, eax ; call rsp
0x0000000000198d86 : add dword ptr [rax], eax ; in al, 7 ; hlt ; call rsp
0x0000000000199656 : add dword ptr [rax], eax ; jbe 0x199656 ; jmp rsp
0x0000000000198ed6 : add dword ptr [rax], eax ; je 0x198ef3 ; cmc ; call rsp
0x0000000000199006 : add dword ptr [rax], eax ; je 0x199053 ; cmc ; jmp rsp
0x000000000019b896 : add dword ptr [rax], eax ; mov ah, 0x40 ; sti ; call rsp
0x00000000001981e6 : add dword ptr [rax], eax ; mov ah, 0x91 ; out dx, eax ; jmp rsp
0x0000000000198dbe : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x0000000000198f86 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x00000000001984de : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x0000000000199256 : add dword ptr [rax], eax ; or r14b, sil ; jmp rsp
0x000000000019a156 : add dword ptr [rax], eax ; out 0xf7, al ; jmp rsp
0x00000000001989f6 : add dword ptr [rax], eax ; push rsp ; and dh, bl ; jmp rsp
0x000000000019a686 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x000000000019854e : add dword ptr [rax], eax ; push rsp ; pop rsp ; int1 ; call rsp
0x000000000019b796 : add dword ptr [rax], eax ; test al, bl ; cli ; jmp rsp
0x000000000019a4de : add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x000000000019a3ee : add dword ptr [rax], eax ; xchg eax, esp ; adc edi, eax ; call rsp
0x0000000000198626 : add dword ptr [rax], eax ; xchg eax, esp ; je 0x198621 ; jmp rsp
0x0000000000198ac6 : add dword ptr [rax], eax ; xchg eax, esp ; jmp rsp
0x000000000019a4a6 : add dword ptr [rax], eax ; xor al, 0x21 ; clc ; jmp rsp
0x000000000019b9a6 : add dword ptr [rax], eax ; xor al, 0x77 ; std ; call rsp
0x000000000019a8ce : add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x000000000019baae : add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x0000000000198a6e : add dword ptr [rax], eax ; xor dh, bl ; jmp rsp
0x00000000000aa99c : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x0000000000105d39 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105da9 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000199485 : add dword ptr [rcx], 0xf65d7400 ; call rsp
0x00000000001afe9e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000099b6e : add dword ptr [rsp + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8349
0x00000000000d732c : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xd7343 ; je 0xd72d3 ; pop rbx ; ret
0x0000000000198f2d : add dword ptr fs:[rax], eax ; in al, 0x20 ; cmc ; jmp rsp
0x0000000000138382 : add eax, 0x28bb11 ; add rsp, 8 ; ret
0x0000000000138352 : add eax, 0x28bba9 ; add rsp, 8 ; ret
0x00000000001382f2 : add eax, 0x28bc91 ; add rsp, 8 ; ret
0x0000000000138322 : add eax, 0x28bcb9 ; add rsp, 8 ; ret
0x000000000012c5ba : add eax, 0x29c7fd ; add rsp, 8 ; ret
0x0000000000120690 : add eax, 0x2a51cb ; add rsp, 8 ; ret
0x0000000000101fc0 : add eax, 0x2c525b ; add rsp, 0x18 ; ret
0x0000000000101a28 : add eax, 0x2c57a3 ; add rsp, 8 ; ret
0x00000000000fe460 : add eax, 0x2c733b ; add rsp, 8 ; ret
0x00000000000ffaeb : add eax, 0x2c7600 ; add rsp, 8 ; ret
0x00000000000fdf9c : add eax, 0x2c8ff7 ; add rsp, 8 ; ret
0x00000000000bb7de : add eax, 0x30b1dd ; add rsp, 8 ; ret
0x000000000008d7d7 : add eax, 0x3390ac ; add rsp, 8 ; ret
0x000000000003b0e2 : add eax, 0x38e36f ; add rsp, 8 ; ret
0x000000000019b8c5 : add eax, 0x73240001 ; sti ; call rsp
0x0000000000138346 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000138376 : add eax, 0xa8 ; add rsp, 8 ; ret
0x000000000012f81b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000109316 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000143dfa : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014371e : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000001afe9a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000196de1 : add ebp, edx ; jmp rsp
0x000000000019afe1 : add edi, edx ; call rsp
0x00000000000bb885 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000198c15 : add qword ptr [r8], rax ; adc al, 0x6d ; call rsp
0x000000000019b34d : add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x0000000000143df9 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014371d : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000088503 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000008851c : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013c3e5 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000013c428 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006f8c5 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006f8c4 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000003adad : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000480d8 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048278 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006aad0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ab42 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f664 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073750 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085f42 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086a0e : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8332 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc0e3 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc8eb : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcb48 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010198e : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115979 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000119e15 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e700 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bf9b : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bfb9 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bfe0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583d : add rsp, 0x10 ; pop rbx ; ret
0x00000000000ba008 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000c7889 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000c78b2 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000c7985 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000cc046 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000da1c9 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc803 : add rsp, 0x10 ; pop rbx ; ret
0x000000000012e69a : add rsp, 0x10 ; pop rbx ; ret
0x000000000012e6d4 : add rsp, 0x10 ; pop rbx ; ret
0x000000000012eb57 : add rsp, 0x10 ; pop rbx ; ret
0x000000000012ebd7 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000136a25 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000136d61 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000137491 : add rsp, 0x10 ; pop rbx ; ret
0x000000000013a9ba : add rsp, 0x10 ; pop rbx ; ret
0x000000000013a9fc : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aa2a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aa6b : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aada : add rsp, 0x10 ; pop rbx ; ret
0x000000000013ae3a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013ae7d : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aeaa : add rsp, 0x10 ; pop rbx ; ret
0x000000000013aeec : add rsp, 0x10 ; pop rbx ; ret
0x000000000013b01a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013b06a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013b08a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013b0cc : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bbca : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc0b : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc0a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc3a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc7b : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc7a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bcaa : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bceb : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bcea : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd1a : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd5b : add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd5a : add rsp, 0x10 ; pop rbx ; ret
0x000000000014117a : add rsp, 0x10 ; pop rbx ; ret
0x00000000001411da : add rsp, 0x10 ; pop rbx ; ret
0x000000000014439e : add rsp, 0x10 ; pop rbx ; ret
0x00000000000b9ff0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000ba010 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000144340 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e73e : add rsp, 0x100 ; ret
0x000000000008e839 : add rsp, 0x100 ; ret
0x000000000006ad22 : add rsp, 0x1000 ; pop rbx ; ret
0x00000000000359dc : add rsp, 0x108 ; ret
0x0000000000035a2f : add rsp, 0x108 ; ret
0x00000000000f82ad : add rsp, 0x120 ; pop rbx ; ret
0x0000000000035d8a : add rsp, 0x140 ; pop rbx ; ret
0x00000000000353aa : add rsp, 0x148 ; ret
0x00000000000361b0 : add rsp, 0x148 ; ret
0x00000000001201af : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fd42c : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000006b315 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000010771f : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013ab85 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ac45 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ad05 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013adc5 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013c35b : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000013c39c : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003b174 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000745f6 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074632 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000079a9f : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cae07 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cc273 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001178ec : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012cd94 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013375b : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013380e : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137589 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137d63 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ab3f : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abff : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013acbf : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad7f : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013af23 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013afa2 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b84e : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b90e : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b9ce : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ba8e : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000141f80 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000142c3d : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4f : add rsp, 0x18 ; ret
0x000000000003afee : add rsp, 0x18 ; ret
0x000000000003b01b : add rsp, 0x18 ; ret
0x000000000003b03d : add rsp, 0x18 ; ret
0x000000000003b06a : add rsp, 0x18 ; ret
0x000000000003b08d : add rsp, 0x18 ; ret
0x000000000003b0ba : add rsp, 0x18 ; ret
0x000000000006b2e9 : add rsp, 0x18 ; ret
0x000000000006de3a : add rsp, 0x18 ; ret
0x00000000000886a6 : add rsp, 0x18 ; ret
0x00000000000bb88a : add rsp, 0x18 ; ret
0x00000000000bf683 : add rsp, 0x18 ; ret
0x00000000000c50a6 : add rsp, 0x18 ; ret
0x00000000000c7566 : add rsp, 0x18 ; ret
0x00000000000c9dd5 : add rsp, 0x18 ; ret
0x00000000000cb2e5 : add rsp, 0x18 ; ret
0x00000000000e8633 : add rsp, 0x18 ; ret
0x00000000000e8650 : add rsp, 0x18 ; ret
0x00000000000ea6b3 : add rsp, 0x18 ; ret
0x00000000000ea6d3 : add rsp, 0x18 ; ret
0x00000000000ea6ee : add rsp, 0x18 ; ret
0x00000000000ea710 : add rsp, 0x18 ; ret
0x00000000000ea731 : add rsp, 0x18 ; ret
0x00000000000ea753 : add rsp, 0x18 ; ret
0x00000000000f5f8b : add rsp, 0x18 ; ret
0x00000000000f5f9b : add rsp, 0x18 ; ret
0x00000000000f693f : add rsp, 0x18 ; ret
0x00000000000f6aec : add rsp, 0x18 ; ret
0x00000000000f6b0f : add rsp, 0x18 ; ret
0x00000000000f6b91 : add rsp, 0x18 ; ret
0x00000000000f6bc3 : add rsp, 0x18 ; ret
0x00000000000fc74d : add rsp, 0x18 ; ret
0x00000000000fc779 : add rsp, 0x18 ; ret
0x00000000000fdd94 : add rsp, 0x18 ; ret
0x0000000000101fc5 : add rsp, 0x18 ; ret
0x00000000001024ca : add rsp, 0x18 ; ret
0x000000000010884e : add rsp, 0x18 ; ret
0x000000000010c185 : add rsp, 0x18 ; ret
0x000000000010d905 : add rsp, 0x18 ; ret
0x000000000011a96b : add rsp, 0x18 ; ret
0x000000000011b2fb : add rsp, 0x18 ; ret
0x000000000011bc9b : add rsp, 0x18 ; ret
0x000000000011cbcb : add rsp, 0x18 ; ret
0x000000000011e79e : add rsp, 0x18 ; ret
0x000000000011ebac : add rsp, 0x18 ; ret
0x000000000011f11b : add rsp, 0x18 ; ret
0x0000000000120835 : add rsp, 0x18 ; ret
0x0000000000131bfb : add rsp, 0x18 ; ret
0x0000000000138eef : add rsp, 0x18 ; ret
0x0000000000140d23 : add rsp, 0x18 ; ret
0x0000000000143eeb : add rsp, 0x18 ; ret
0x0000000000143efb : add rsp, 0x18 ; ret
0x00000000000cc261 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012cd5e : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013af30 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013afb0 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b868 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b928 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b9e8 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013baa8 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004a802 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088bbf : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9624 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb7c5 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb829 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b322 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc7 : add rsp, 0x20 ; pop rbx ; ret
0x000000000007b52e : add rsp, 0x20 ; pop rbx ; ret
0x00000000000bf784 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000d6ce4 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f7865 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000136f54 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000137054 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f7843 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8d : add rsp, 0x28 ; jmp rax
0x0000000000044c94 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044d14 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044dc2 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006ac48 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007abae : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ae5d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007bc63 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007be2d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b62e5 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6393 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6435 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000122217 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001373ac : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad2 : add rsp, 0x28 ; ret
0x0000000000034b22 : add rsp, 0x28 ; ret
0x0000000000034b34 : add rsp, 0x28 ; ret
0x0000000000034e0d : add rsp, 0x28 ; ret
0x0000000000034e55 : add rsp, 0x28 ; ret
0x0000000000034e63 : add rsp, 0x28 ; ret
0x000000000003a781 : add rsp, 0x28 ; ret
0x000000000003a851 : add rsp, 0x28 ; ret
0x00000000000bc405 : add rsp, 0x28 ; ret
0x00000000000bc4e5 : add rsp, 0x28 ; ret
0x0000000000118816 : add rsp, 0x28 ; ret
0x0000000000118856 : add rsp, 0x28 ; ret
0x0000000000119355 : add rsp, 0x28 ; ret
0x000000000011eadc : add rsp, 0x28 ; ret
0x000000000011eaea : add rsp, 0x28 ; ret
0x000000000011eb5f : add rsp, 0x28 ; ret
0x0000000000143d43 : add rsp, 0x28 ; ret
0x000000000006ac50 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fc704 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000000fc721 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000121a39 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121e0d : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b88a : add rsp, 0x30 ; pop rbx ; ret
0x000000000012f81f : add rsp, 0x30 ; pop rbx ; ret
0x00000000000ce097 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ce0a7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001370d7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000137217 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c96a6 : add rsp, 0x38 ; ret
0x00000000000cd313 : add rsp, 0x38 ; ret
0x00000000000cd383 : add rsp, 0x38 ; ret
0x00000000000cd5e1 : add rsp, 0x38 ; ret
0x00000000000cd661 : add rsp, 0x38 ; ret
0x00000000000fd1fa : add rsp, 0x38 ; ret
0x00000000000fd26a : add rsp, 0x38 ; ret
0x00000000000fd2f5 : add rsp, 0x38 ; ret
0x00000000000fd3a5 : add rsp, 0x38 ; ret
0x000000000010a3a6 : add rsp, 0x38 ; ret
0x000000000013a985 : add rsp, 0x38 ; ret
0x00000000001437aa : add rsp, 0x38 ; ret
0x00000000001437d2 : add rsp, 0x38 ; ret
0x00000000001437e3 : add rsp, 0x38 ; ret
0x0000000000143dfd : add rsp, 0x38 ; ret
0x0000000000143e0a : add rsp, 0x38 ; ret
0x0000000000035e0b : add rsp, 0x40 ; pop rbx ; ret
0x00000000000bb8cb : add rsp, 0x40 ; pop rbx ; ret
0x000000000010a407 : add rsp, 0x40 ; ret
0x0000000000105167 : add rsp, 0x408 ; ret
0x000000000004a67b : add rsp, 0x440 ; pop rbx ; ret
0x000000000004a693 : add rsp, 0x440 ; pop rbx ; ret
0x00000000000f8961 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000125173 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9f81 : add rsp, 0x48 ; ret
0x00000000000cb491 : add rsp, 0x48 ; ret
0x00000000000fdd59 : add rsp, 0x48 ; ret
0x000000000010c331 : add rsp, 0x48 ; ret
0x000000000010dab1 : add rsp, 0x48 ; ret
0x000000000011ab26 : add rsp, 0x48 ; ret
0x000000000011b4b6 : add rsp, 0x48 ; ret
0x000000000011be47 : add rsp, 0x48 ; ret
0x000000000011cd77 : add rsp, 0x48 ; ret
0x00000000001209e1 : add rsp, 0x48 ; ret
0x0000000000131da7 : add rsp, 0x48 ; ret
0x0000000000143671 : add rsp, 0x48 ; ret
0x000000000014368d : add rsp, 0x48 ; ret
0x00000000001436aa : add rsp, 0x48 ; ret
0x0000000000143721 : add rsp, 0x48 ; ret
0x0000000000143739 : add rsp, 0x48 ; ret
0x0000000000143753 : add rsp, 0x48 ; ret
0x00000000000acb0b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fca3e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fca79 : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fcade : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7136 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f71af : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f76ef : add rsp, 0x60 ; pop rbx ; ret
0x00000000000f76ee : add rsp, 0x60 ; pop rbx ; ret
0x00000000000f7723 : add rsp, 0x60 ; pop rbx ; ret
0x000000000013876b : add rsp, 0x68 ; ret
0x00000000001387b1 : add rsp, 0x68 ; ret
0x0000000000138801 : add rsp, 0x68 ; ret
0x0000000000138851 : add rsp, 0x68 ; ret
0x000000000013888a : add rsp, 0x68 ; ret
0x00000000001388be : add rsp, 0x68 ; ret
0x0000000000138911 : add rsp, 0x68 ; ret
0x000000000013896b : add rsp, 0x68 ; ret
0x0000000000136e5f : add rsp, 0x70 ; pop rbx ; ret
0x0000000000105d3c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105dac : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000007599f : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000075a8f : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000045382 : add rsp, 0x80 ; pop rbx ; ret
0x000000000007664a : add rsp, 0x80 ; pop rbx ; ret
0x00000000000c879a : add rsp, 0x80 ; pop rbx ; ret
0x000000000006b4b8 : add rsp, 0x80 ; ret
0x000000000006f293 : add rsp, 0x80 ; ret
0x00000000000758b6 : add rsp, 0x80 ; ret
0x000000000007a9c6 : add rsp, 0x80 ; ret
0x000000000007cbf3 : add rsp, 0x80 ; ret
0x000000000008400d : add rsp, 0x80 ; ret
0x00000000000ffdef : add rsp, 0x80 ; ret
0x00000000001750eb : add rsp, 0x80 ; ret
0x00000000000358d2 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000036c5b : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000036cab : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000142828 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b98 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000035bea : add rsp, 0x90 ; pop rbx ; ret
0x0000000000108b01 : add rsp, 0x90 ; pop rbx ; ret
0x00000000001288c3 : add rsp, 0x90 ; pop rbx ; ret
0x00000000001289bd : add rsp, 0x90 ; pop rbx ; ret
0x0000000000036950 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036967 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036ab2 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036ac7 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000007950c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000796c8 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000079786 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c8082 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c81ef : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c89c9 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000fccef : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209ae : add rsp, 0x98 ; ret
0x0000000000142edf : add rsp, 0x98 ; ret
0x0000000000136b63 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000136c0e : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfc : add rsp, 0xa8 ; ret
0x00000000000c7f3d : add rsp, 0xd0 ; pop rbx ; ret
0x00000000000c7fb9 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000035699 : add rsp, 0xd0 ; ret
0x00000000000356e1 : add rsp, 0xd0 ; ret
0x0000000000104f6d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000104fbb : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf3 : add rsp, 0xd8 ; ret
0x0000000000046ead : add rsp, 0xd8 ; ret
0x00000000000557f7 : add rsp, 0xd8 ; ret
0x0000000000055899 : add rsp, 0xd8 ; ret
0x0000000000055932 : add rsp, 0xd8 ; ret
0x00000000000559c7 : add rsp, 0xd8 ; ret
0x0000000000055a57 : add rsp, 0xd8 ; ret
0x0000000000055ae7 : add rsp, 0xd8 ; ret
0x000000000006a7d7 : add rsp, 0xd8 ; ret
0x000000000006a87b : add rsp, 0xd8 ; ret
0x000000000006a917 : add rsp, 0xd8 ; ret
0x000000000006bb57 : add rsp, 0xd8 ; ret
0x00000000000714a7 : add rsp, 0xd8 ; ret
0x0000000000071532 : add rsp, 0xd8 ; ret
0x00000000000715f9 : add rsp, 0xd8 ; ret
0x00000000000716ab : add rsp, 0xd8 ; ret
0x0000000000071747 : add rsp, 0xd8 ; ret
0x00000000000719a7 : add rsp, 0xd8 ; ret
0x0000000000076dd7 : add rsp, 0xd8 ; ret
0x00000000000bae57 : add rsp, 0xd8 ; ret
0x0000000000100be2 : add rsp, 0xd8 ; ret
0x00000000001166ad : add rsp, 0xd8 ; ret
0x00000000001167f8 : add rsp, 0xd8 ; ret
0x0000000000117ce8 : add rsp, 0xd8 ; ret
0x00000000001188f2 : add rsp, 0xd8 ; ret
0x0000000000118af2 : add rsp, 0xd8 ; ret
0x0000000000133062 : add rsp, 8 ; add eax, 2 ; ret
0x00000000001391c2 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008d85c : add rsp, 8 ; jmp rax
0x00000000000500de : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000050162 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000501b6 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000070337 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007038c : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000749b2 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000133033 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000139193 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021217 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c43 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e3bb : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006e407 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006ff5b : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006ffc9 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000070f04 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000070f4f : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008536f : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000f5b51 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012f347 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012f39d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006d9e0 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006da0f : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000baa7d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116ea0 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000116eef : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001183a0 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001183ef : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009ed7c : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000077d37 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000094e93 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000096c0b : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000096c22 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ff6dc : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db27 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe33 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003a1cf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859be : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a90b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000013b170 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000001076f5 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f5e6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000130439 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000130491 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001304f7 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001305f6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013a8d8 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013b10c : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b5 : add rsp, 8 ; movzx eax, al ; ret
0x00000000000e88cf : add rsp, 8 ; movzx eax, al ; ret
0x00000000000ff806 : add rsp, 8 ; movzx eax, al ; ret
0x000000000013035e : add rsp, 8 ; movzx eax, al ; ret
0x0000000000130383 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001303a3 : add rsp, 8 ; movzx eax, al ; ret
0x000000000013c4b2 : add rsp, 8 ; movzx eax, al ; ret
0x000000000013c4f2 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001275d9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000012e878 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fbf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000008429d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000021a30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000021aa9 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002e6a2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a08e : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a61e : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b1e0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b23f : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006dde6 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e6ba : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072dbd : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007912c : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079835 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a610 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c794 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c8d2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007df88 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008308f : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000841ef : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085903 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000089082 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d902 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000094e79 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac2c2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba326 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb6f2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bd08c : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bdb6b : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c883f : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cf4ab : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d71f3 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d71f2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d71f1 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ef91d : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f44b5 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c27 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c54 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000101e2e : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001023b0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106314 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001072d5 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ec32 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ec87 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ecb7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ece7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112d30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112f44 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115895 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001158b7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f2f5 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f396 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f92d : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012403d : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001287be : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b9e7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d6d7 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e21f : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e863 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f663 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001303de : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130470 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130620 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013ddcd : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000140ca5 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000174142 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017514b : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001752eb : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079157 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035132 : add rsp, 8 ; ret
0x000000000003517a : add rsp, 8 ; ret
0x0000000000036e90 : add rsp, 8 ; ret
0x000000000003a959 : add rsp, 8 ; ret
0x000000000003af69 : add rsp, 8 ; ret
0x000000000003b0e7 : add rsp, 8 ; ret
0x000000000007d727 : add rsp, 8 ; ret
0x00000000000878d6 : add rsp, 8 ; ret
0x000000000008d7dc : add rsp, 8 ; ret
0x000000000008d810 : add rsp, 8 ; ret
0x000000000008d833 : add rsp, 8 ; ret
0x00000000000bb7e3 : add rsp, 8 ; ret
0x00000000000bb810 : add rsp, 8 ; ret
0x00000000000bfe1e : add rsp, 8 ; ret
0x00000000000c9767 : add rsp, 8 ; ret
0x00000000000c9e9f : add rsp, 8 ; ret
0x00000000000caf37 : add rsp, 8 ; ret
0x00000000000cb3af : add rsp, 8 ; ret
0x00000000000e7ae2 : add rsp, 8 ; ret
0x00000000000fdea4 : add rsp, 8 ; ret
0x00000000000fdfa1 : add rsp, 8 ; ret
0x00000000000fe440 : add rsp, 8 ; ret
0x00000000000fe465 : add rsp, 8 ; ret
0x00000000000fe653 : add rsp, 8 ; ret
0x00000000000ff774 : add rsp, 8 ; ret
0x00000000000ff79a : add rsp, 8 ; ret
0x00000000000ff7ca : add rsp, 8 ; ret
0x00000000000ffa63 : add rsp, 8 ; ret
0x00000000000ffacd : add rsp, 8 ; ret
0x00000000000ffaf0 : add rsp, 8 ; ret
0x0000000000101487 : add rsp, 8 ; ret
0x0000000000101a2d : add rsp, 8 ; ret
0x000000000010931a : add rsp, 8 ; ret
0x000000000010b6d7 : add rsp, 8 ; ret
0x000000000010c24f : add rsp, 8 ; ret
0x000000000010cfbf : add rsp, 8 ; ret
0x000000000010d087 : add rsp, 8 ; ret
0x000000000010d9cf : add rsp, 8 ; ret
0x0000000000116473 : add rsp, 8 ; ret
0x0000000000116579 : add rsp, 8 ; ret
0x000000000011769e : add rsp, 8 ; ret
0x0000000000117969 : add rsp, 8 ; ret
0x0000000000117b03 : add rsp, 8 ; ret
0x0000000000117bbb : add rsp, 8 ; ret
0x00000000001191e3 : add rsp, 8 ; ret
0x000000000011a8a4 : add rsp, 8 ; ret
0x000000000011aa32 : add rsp, 8 ; ret
0x000000000011b234 : add rsp, 8 ; ret
0x000000000011b3c2 : add rsp, 8 ; ret
0x000000000011bbd7 : add rsp, 8 ; ret
0x000000000011bd5f : add rsp, 8 ; ret
0x000000000011cb07 : add rsp, 8 ; ret
0x000000000011cc8f : add rsp, 8 ; ret
0x000000000011fe91 : add rsp, 8 ; ret
0x0000000000120695 : add rsp, 8 ; ret
0x00000000001208ff : add rsp, 8 ; ret
0x0000000000120aa7 : add rsp, 8 ; ret
0x0000000000124a00 : add rsp, 8 ; ret
0x0000000000128358 : add rsp, 8 ; ret
0x000000000012affb : add rsp, 8 ; ret
0x000000000012c5bf : add rsp, 8 ; ret
0x0000000000131847 : add rsp, 8 ; ret
0x0000000000131cbf : add rsp, 8 ; ret
0x00000000001382e5 : add rsp, 8 ; ret
0x00000000001382f7 : add rsp, 8 ; ret
0x0000000000138319 : add rsp, 8 ; ret
0x0000000000138327 : add rsp, 8 ; ret
0x000000000013834b : add rsp, 8 ; ret
0x0000000000138357 : add rsp, 8 ; ret
0x000000000013837b : add rsp, 8 ; ret
0x0000000000138387 : add rsp, 8 ; ret
0x000000000013c46d : add rsp, 8 ; ret
0x0000000000140859 : add rsp, 8 ; ret
0x0000000000140d7c : add rsp, 8 ; ret
0x0000000000140f62 : add rsp, 8 ; ret
0x0000000000141003 : add rsp, 8 ; ret
0x000000000014109f : add rsp, 8 ; ret
0x0000000000141141 : add rsp, 8 ; ret
0x00000000001412b3 : add rsp, 8 ; ret
0x0000000000141373 : add rsp, 8 ; ret
0x0000000000141623 : add rsp, 8 ; ret
0x00000000001429a3 : add rsp, 8 ; ret
0x0000000000142f17 : add rsp, 8 ; ret
0x0000000000173df2 : add rsp, 8 ; ret
0x0000000000174247 : add rsp, 8 ; ret
0x0000000000174478 : add rsp, 8 ; ret
0x00000000001745d4 : add rsp, 8 ; ret
0x0000000000174680 : add rsp, 8 ; ret
0x0000000000140660 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000013c453 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d50 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007c901 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008b4a8 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008b500 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000abd30 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000bb71e : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000da2d0 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f5bea : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010ea34 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000112ef6 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000112fc9 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011f330 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012cbf5 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d698 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d785 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d7d5 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d855 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e100 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e148 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f605 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013041a : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001304b5 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130550 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001305cf : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130678 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013a940 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b180 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ea92a : add rsp, 8 ; xor eax, eax ; ret
0x0000000000143ea1 : add rsp, 8 ; xor eax, eax ; ret
0x0000000000198f85 : add word ptr [rax], ax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x0000000000198dc1 : and ah, dh ; call rsp
0x0000000000096ce1 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000034f37 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x0000000000034f36 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000000f35bc : and al, 0x10 ; mov qword ptr [rsp + 8], r13 ; call 0x1f8b1
0x0000000000102e31 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000010edde : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000008429b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000012c7f9 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000137e60 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000137e5f : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000081a65 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000081a64 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x00000000000c92b1 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000001437a5 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000012bfaa : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x138239
0x0000000000025110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfe : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002406e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x0000000000024a3e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000819a8 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000000819a7 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000028ab7 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e4e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000023ef1 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000013c2e9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000143689 : and al, 0x38 ; jne 0x143670 ; add rsp, 0x48 ; ret
0x0000000000143688 : and al, 0x38 ; jne 0x143671 ; add rsp, 0x48 ; ret
0x00000000000fdd55 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000335d6 : and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x0000000000025f31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024802 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000026caa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000282ac : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000029184 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b55 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028045 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028f15 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000012a515 : and al, 0x41 ; call rsp
0x0000000000026865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000bbdad : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bc267 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x0000000000197d20 : and al, 0x62 ; out dx, al ; call rsp
0x000000000019b458 : and al, 0x66 ; cli ; call rsp
0x000000000019a6b0 : and al, 0x69 ; clc ; call rsp
0x000000000019b8c8 : and al, 0x73 ; sti ; call rsp
0x000000000003583b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003583a : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cc044 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cc043 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc801 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc800 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003ab4d : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000003ab4c : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000006b2e7 : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000006b2e6 : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000006b2e5 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000f6aea : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000f6ae9 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000fc74b : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000fc74a : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000010884c : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000010884b : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000001437d0 : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000001437cf : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000197810 : and al, 0xc8 ; in eax, dx ; jmp rsp
0x000000000019a908 : and al, 0xdb ; clc ; call rsp
0x000000000019a128 : and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000004a218 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a217 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035027 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035026 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035005 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035004 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000350c7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000350c6 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bb8f6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000198a21 : and al, 0xf3 ; jmp rsp
0x0000000000199391 : and al, 0xf6 ; call rsp
0x0000000000199390 : and al, 0xf6 ; call rsp
0x000000000019a4e1 : and al, 0xf8 ; jmp rsp
0x000000000004a1d1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a18b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000351a7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000019aea5 : and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x00000000000ba006 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ba005 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000141178 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000141177 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001411d8 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001411d7 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003afec : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003afeb : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b019 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b018 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b03b : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b03a : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b068 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b067 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b08b : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b08a : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b0b8 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b0b7 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000006de38 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000006de37 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000001024c8 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000001024c7 : and al, 8 ; add rsp, 0x18 ; ret
0x0000000000140d21 : and al, 8 ; add rsp, 0x18 ; ret
0x0000000000140d20 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000013b4af : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b4ae : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000034b1e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000034e51 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035176 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019869d : and al, byte ptr [rcx] ; add byte ptr [rdi], al ; int1 ; jmp rsp
0x0000000000089a6a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000008b26a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000008f95a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000002f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000019b0f9 : and bh, dl ; call rsp
0x00000000001a7c80 : and bl, 0xef ; call rsp
0x000000000006e0d9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000133b6b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fea2c : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000feae7 : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000ff321 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x0000000000198f31 : and ch, dh ; jmp rsp
0x00000000001989f9 : and dh, bl ; jmp rsp
0x000000000006f779 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x0000000000020b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008d857 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000019a4a9 : and eax, edi ; jmp rsp
0x0000000000186d58 : and ebx, esp ; in eax, dx ; push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000196851 : and ecx, ebp ; call rsp
0x0000000000024076 : call rsp
0x000000000002480a : call rsp
0x0000000000024a46 : call rsp
0x0000000000029c4a : call rsp
0x00000000000acb09 : call rsp
0x00000000000bbdb5 : call rsp
0x00000000000bc210 : call rsp
0x00000000000bc26f : call rsp
0x00000000000cf30c : call rsp
0x000000000011ff61 : call rsp
0x000000000012a2b3 : call rsp
0x000000000012a323 : call rsp
0x000000000012a517 : call rsp
0x000000000013c0be : call rsp
0x0000000000172b73 : call rsp
0x000000000017f410 : call rsp
0x0000000000186893 : call rsp
0x00000000001868bb : call rsp
0x00000000001868d3 : call rsp
0x0000000000188a6b : call rsp
0x0000000000188a6a : call rsp
0x0000000000188aa7 : call rsp
0x0000000000188aa6 : call rsp
0x0000000000188aeb : call rsp
0x0000000000188aea : call rsp
0x0000000000188cc3 : call rsp
0x0000000000188cc2 : call rsp
0x0000000000188cdb : call rsp
0x0000000000188cda : call rsp
0x0000000000189203 : call rsp
0x00000000001895a7 : call rsp
0x0000000000189c13 : call rsp
0x0000000000189c2f : call rsp
0x00000000001958d3 : call rsp
0x0000000000195dff : call rsp
0x0000000000196007 : call rsp
0x000000000019600f : call rsp
0x00000000001962f7 : call rsp
0x000000000019668b : call rsp
0x0000000000196793 : call rsp
0x0000000000196853 : call rsp
0x00000000001969d3 : call rsp
0x0000000000196b9b : call rsp
0x0000000000196beb : call rsp
0x0000000000196c3b : call rsp
0x0000000000196d4b : call rsp
0x0000000000197043 : call rsp
0x00000000001971b3 : call rsp
0x00000000001972fb : call rsp
0x000000000019766b : call rsp
0x000000000019772b : call rsp
0x00000000001977b3 : call rsp
0x00000000001977d3 : call rsp
0x00000000001978fb : call rsp
0x0000000000197973 : call rsp
0x0000000000197a13 : call rsp
0x0000000000197ccb : call rsp
0x0000000000197d23 : call rsp
0x0000000000197dab : call rsp
0x0000000000197dfb : call rsp
0x0000000000197eb3 : call rsp
0x0000000000198053 : call rsp
0x000000000019821b : call rsp
0x00000000001982cb : call rsp
0x00000000001984e3 : call rsp
0x0000000000198553 : call rsp
0x0000000000198783 : call rsp
0x00000000001987e3 : call rsp
0x0000000000198c1b : call rsp
0x0000000000198c1a : call rsp
0x0000000000198cc3 : call rsp
0x0000000000198cc2 : call rsp
0x0000000000198d8b : call rsp
0x0000000000198dc3 : call rsp
0x0000000000198edb : call rsp
0x00000000001991c3 : call rsp
0x0000000000199293 : call rsp
0x000000000019930b : call rsp
0x0000000000199393 : call rsp
0x000000000019941b : call rsp
0x000000000019948b : call rsp
0x0000000000199933 : call rsp
0x00000000001999b3 : call rsp
0x0000000000199b4b : call rsp
0x0000000000199c4b : call rsp
0x0000000000199f33 : call rsp
0x0000000000199fa3 : call rsp
0x000000000019a213 : call rsp
0x000000000019a3f3 : call rsp
0x000000000019a463 : call rsp
0x000000000019a6b3 : call rsp
0x000000000019a8d3 : call rsp
0x000000000019a90b : call rsp
0x000000000019aa23 : call rsp
0x000000000019ab13 : call rsp
0x000000000019aba3 : call rsp
0x000000000019acd3 : call rsp
0x000000000019aceb : call rsp
0x000000000019addb : call rsp
0x000000000019adeb : call rsp
0x000000000019ae6b : call rsp
0x000000000019aeab : call rsp
0x000000000019afe3 : call rsp
0x000000000019b0fb : call rsp
0x000000000019b2e3 : call rsp
0x000000000019b403 : call rsp
0x000000000019b443 : call rsp
0x000000000019b45b : call rsp
0x000000000019b4ab : call rsp
0x000000000019b533 : call rsp
0x000000000019b753 : call rsp
0x000000000019b7db : call rsp
0x000000000019b89b : call rsp
0x000000000019b8cb : call rsp
0x000000000019b9ab : call rsp
0x000000000019bab3 : call rsp
0x00000000001a0153 : call rsp
0x00000000001a1683 : call rsp
0x00000000001a7c83 : call rsp
0x0000000000116472 : clc ; add rsp, 8 ; ret
0x0000000000116578 : clc ; add rsp, 8 ; ret
0x0000000000117b02 : clc ; add rsp, 8 ; ret
0x0000000000117bba : clc ; add rsp, 8 ; ret
0x000000000019a3f2 : clc ; call rsp
0x000000000019a462 : clc ; call rsp
0x000000000019a6b2 : clc ; call rsp
0x000000000019a8d2 : clc ; call rsp
0x000000000019a90a : clc ; call rsp
0x000000000019a6aa : clc ; inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x000000000019a4da : clc ; inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x000000000019e598 : clc ; jl 0x19e587 ; jmp rsp
0x000000000019a45a : clc ; jmp qword ptr [rsp + rdx*8 + 1]
0x000000000019a382 : clc ; jmp rsp
0x000000000019a4aa : clc ; jmp rsp
0x000000000019a4e2 : clc ; jmp rsp
0x000000000019a5ea : clc ; jmp rsp
0x000000000019a5e9 : clc ; jmp rsp
0x000000000019a5e8 : clc ; jmp rsp
0x000000000019a68a : clc ; jmp rsp
0x000000000019a689 : clc ; jmp rsp
0x000000000004a1d2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000019a682 : clc ; push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x000000000019804d : cld ; add byte ptr [rax], al ; add al, 0x32 ; out dx, eax ; call rsp
0x00000000001958d2 : cld ; call rsp
0x0000000000195dfe : cld ; call rsp
0x0000000000196006 : cld ; call rsp
0x000000000019600e : cld ; call rsp
0x00000000001962f6 : cld ; call rsp
0x0000000000035057 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000195dfa : cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x000000000019600a : cld ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x00000000001962f2 : cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x00000000001958f6 : cld ; jmp rsp
0x0000000000195de2 : cld ; jmp rsp
0x00000000001962da : cld ; jmp rsp
0x000000000004a18c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000195df6 : cld ; push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000195842 : cld ; push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x00000000001962ee : cld ; push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x00000000000ff320 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x000000000019afe2 : cli ; call rsp
0x000000000019b0fa : cli ; call rsp
0x000000000019b2e2 : cli ; call rsp
0x000000000019b402 : cli ; call rsp
0x000000000019b442 : cli ; call rsp
0x000000000019b45a : cli ; call rsp
0x000000000019b459 : cli ; call rsp
0x000000000019b4aa : cli ; call rsp
0x000000000019b532 : cli ; call rsp
0x000000000019b752 : cli ; call rsp
0x000000000019b7da : cli ; call rsp
0x000000000019b1fa : cli ; dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x000000000019b452 : cli ; dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x000000000019b152 : cli ; dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000019b34a : cli ; dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b6da : cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b6b4 ; cli ; jmp rsp
0x000000000019b19a : cli ; inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x000000000019afda : cli ; inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x000000000019b07a : cli ; jmp rsp
0x000000000019b15a : cli ; jmp rsp
0x000000000019b1a2 : cli ; jmp rsp
0x000000000019b1a1 : cli ; jmp rsp
0x000000000019b202 : cli ; jmp rsp
0x000000000019b201 : cli ; jmp rsp
0x000000000019b312 : cli ; jmp rsp
0x000000000019b352 : cli ; jmp rsp
0x000000000019b642 : cli ; jmp rsp
0x000000000019b662 : cli ; jmp rsp
0x000000000019b6e2 : cli ; jmp rsp
0x000000000019b79a : cli ; jmp rsp
0x000000000019b2da : cli ; lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x000000000019b63a : cli ; lcall ptr [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x000000000019b30a : cli ; ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x000000000019b4a2 : cli ; ljmp ptr [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b4ae ; call rsp
0x00000000001982c9 : cli ; out dx, eax ; call rsp
0x000000000019b072 : cli ; push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000182f4a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000019a905 : cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x000000000017514a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000189c12 : cmc ; call rsp
0x0000000000189c2e : cmc ; call rsp
0x0000000000189c2d : cmc ; call rsp
0x0000000000198eda : cmc ; call rsp
0x0000000000189c26 : cmc ; dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x0000000000198f2a : cmc ; dec dword ptr [rsp + 0x20e40001] ; cmc ; jmp rsp
0x0000000000198fd2 : cmc ; dec esp ; add dword ptr [eax], eax ; cmc ; jmp rsp
0x0000000000198f82 : cmc ; inc esp ; add word ptr [rax], ax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x0000000000198f32 : cmc ; jmp rsp
0x0000000000198f8a : cmc ; jmp rsp
0x0000000000198f89 : cmc ; jmp rsp
0x0000000000198fda : cmc ; jmp rsp
0x0000000000198fd9 : cmc ; jmp rsp
0x0000000000198fd8 : cmc ; jmp rsp
0x000000000019900a : cmc ; jmp rsp
0x0000000000199009 : cmc ; jmp rsp
0x0000000000199002 : cmc ; ljmp ptr [rax + rbp*2 + 0x44740001] ; cmc ; jmp rsp
0x0000000000198ed2 : cmc ; push qword ptr [rcx + 0x14740001] ; cmc ; call rsp
0x0000000000189c2a : cmc ; push rsp ; cmc ; call rsp
0x0000000000189c29 : cmc ; push rsp ; cmc ; call rsp
0x000000000006b2e4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000f693b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000013c30a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000000bc402 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000bc4e2 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000f7720 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000878d3 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000f693a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000013c309 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000000bc401 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000bc4e1 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000878d2 : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000000cae04 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000140856 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000142f14 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000140855 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000142f13 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000019684c : cmp al, 0x62 ; add byte ptr [rax], al ; push rsp ; and ecx, ebp ; call rsp
0x000000000019a124 : cmp al, 0xc3 ; add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000019804c : cmp al, 0xfc ; add byte ptr [rax], al ; add al, 0x32 ; out dx, eax ; call rsp
0x0000000000198a1d : cmp al, byte ptr [rcx] ; add byte ptr [rsp], al ; jmp rsp
0x000000000003b0e5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014368a : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x000000000019b19d : cmp byte ptr [rdx], al ; add ah, ah ; cli ; jmp rsp
0x00000000001af44d : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001989f5 : cmp dword ptr [rcx], eax ; add byte ptr [rdx - 0xd], dl ; jmp rsp
0x0000000000003836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000f7673 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000000f7673 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000014299e : cmp eax, -1 ; je 0x1429b9 ; add rsp, 8 ; ret
0x0000000000198a6d : cmp eax, 0x32640001 ; jmp rsp
0x000000000019b1fd : cmp eax, dword ptr [rdx] ; add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x00000000001382e1 : cmp eax, edx ; je 0x1382f8 ; add rsp, 8 ; ret
0x00000000001972a9 : cmp ebp, ebx ; jmp rsp
0x00000000001972a8 : cmp ebp, ebx ; jmp rsp
0x000000000019aa41 : cmp edi, ecx ; jmp rsp
0x0000000000196ea1 : cmp edx, ebp ; jmp rsp
0x00000000001382e0 : cmp rax, rdx ; je 0x1382f9 ; add rsp, 8 ; ret
0x0000000000199c45 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x0000000000188cc1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call rsp
0x0000000000188cd9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call rsp
0x00000000001986a1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x0000000000108ddf : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000108dde : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000019b1fb : dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x000000000010ce9b : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x000000000006d362 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000019b453 : dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x0000000000188ae7 : dec dword ptr [rcx - 0x56] ; call rsp
0x0000000000188ae6 : dec dword ptr [rcx - 0x56] ; call rsp
0x00000000001892db : dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x000000000012252c : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x0000000000188aa3 : dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000188aa2 : dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000189c27 : dec dword ptr [rsi] ; cmc ; push rsp ; cmc ; call rsp
0x0000000000198f2b : dec dword ptr [rsp + 0x20e40001] ; cmc ; jmp rsp
0x0000000000198dbb : dec dword ptr [rsp + rdx*2 + 0x20a40001] ; hlt ; call rsp
0x0000000000188a9f : dec edi ; lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000188a9e : dec edi ; lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x00000000001891ff : dec edx ; push rcx ; hlt ; call rsp
0x000000000019b9a3 : dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x000000000019b153 : dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x0000000000198fd3 : dec esp ; add dword ptr [eax], eax ; cmc ; jmp rsp
0x000000000019b34b : dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019869b : dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi], al ; int1 ; jmp rsp
0x00000000001989f3 : dec esp ; cmp dword ptr [rcx], eax ; add byte ptr [rdx - 0xd], dl ; jmp rsp
0x00000000001989f2 : dec esp ; cmp dword ptr [rcx], eax ; add byte ptr [rdx - 0xd], dl ; jmp rsp
0x000000000019697b : dec esp ; imul eax, dword ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x196974 ; jmp rsp
0x0000000000196913 : dec esp ; imul eax, dword ptr [rax], 0xe9650400 ; jmp rsp
0x0000000000199653 : dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x000000000019b6db : dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b6b3 ; cli ; jmp rsp
0x000000000019780b : dec esp ; rol dword ptr [rax], 0 ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001974b3 : dec esp ; test eax, 0x4d440000 ; in eax, dx ; jmp rsp
0x00000000001972a3 : dec esp ; wait ; add byte ptr [rax], al ; cmp ebp, ebx ; jmp rsp
0x00000000001999b1 : div esi ; call rsp
0x00000000001999b0 : div esi ; call rsp
0x000000000012cf66 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000087acb : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005b775 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x000000000019a104 : fadd st(2), st(0) ; add dword ptr [rax], eax ; in al, 0xf7 ; push rsp ; ret 1
0x000000000019b799 : fdivr st(2) ; jmp rsp
0x0000000000189021 : fdivr st(3), st(0) ; push rsp ; ret
0x00000000001a9965 : fiadd word ptr [rax] ; add al, cl ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x000000000019a5e5 : fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x0000000000035058 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034f39 : fld xword ptr [rsp + 8] ; ret
0x0000000000035029 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035007 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000350cb : fld xword ptr [rsp - 0x18] ; ret
0x000000000004a21a : fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a9 : fldcw word ptr [rsp - 2] ; ret
0x0000000000197eb1 : fldz ; call rsp
0x000000000019a8d1 : fprem ; call rsp
0x0000000000035130 : fstp st(1) ; add rsp, 8 ; ret
0x000000000019a8cd : hlt ; add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x0000000000105d3b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105dab : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000189202 : hlt ; call rsp
0x00000000001895a6 : hlt ; call rsp
0x0000000000198d8a : hlt ; call rsp
0x0000000000198dc2 : hlt ; call rsp
0x0000000000189c2c : hlt ; cmc ; call rsp
0x00000000001892da : hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x00000000001892d9 : hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x00000000001892d8 : hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x0000000000198dba : hlt ; dec dword ptr [rsp + rdx*2 + 0x20a40001] ; hlt ; call rsp
0x00000000001891fe : hlt ; dec edx ; push rcx ; hlt ; call rsp
0x0000000000198d82 : hlt ; inc dword ptr [rdx + rdx*2 + 0x7e40001] ; hlt ; call rsp
0x00000000001891fa : hlt ; inc eax ; push rcx ; hlt ; dec edx ; push rcx ; hlt ; call rsp
0x0000000000198e82 : hlt ; jmp rsp
0x00000000000e1c96 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000001892d6 : hlt ; push rdx ; hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x000000000019aea8 : hlt ; sar cl, 1 ; call rsp
0x0000000000199c48 : hlt ; sbb edi, esi ; call rsp
0x000000000009f47e : hlt ; sub rsp, 8 ; call 0x8b727
0x00000000000b9fee : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000105165 : idiv bh ; add rsp, 0x408 ; ret
0x000000000018a84a : idiv bh ; loop 0x18a8d3 ; idiv bh ; pop rsp ; jle 0x18a852 ; jmp rdx
0x000000000019938a : idiv bh ; mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x0000000000199302 : idiv bh ; mov esp, 0x74000178 ; adc al, 0xf6 ; call rsp
0x000000000019928a : idiv bh ; mov esp, 0xc4000176 ; or al, 0xf6 ; call rsp
0x00000000001999aa : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x000000000018a84e : idiv bh ; pop rsp ; jle 0x18a84e ; jmp rdx
0x0000000000199f62 : idiv edi ; lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x0000000000199b42 : idiv edi ; mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000199c42 : idiv edi ; mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x0000000000199f2a : idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x000000000019a12a : idiv edi ; push rsp ; ret
0x000000000019697d : imul eax, dword ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x196972 ; jmp rsp
0x0000000000196915 : imul eax, dword ptr [rax], 0xe9650400 ; jmp rsp
0x0000000000197da5 : in al, 0 ; add byte ptr [rsi], al ; out dx, al ; call rsp
0x0000000000198f30 : in al, 0x20 ; cmc ; jmp rsp
0x000000000019b1a0 : in al, 0x2e ; cli ; jmp rsp
0x000000000019aa40 : in al, 0x3b ; stc ; jmp rsp
0x000000000019b350 : in al, 0x57 ; cli ; jmp rsp
0x0000000000198160 : in al, 0x80 ; out dx, eax ; jmp rsp
0x00000000001888c8 : in al, 0x92 ; jmp rsp
0x0000000000198218 : in al, 0x93 ; out dx, eax ; call rsp
0x000000000019a109 : in al, 0xf7 ; push rsp ; ret 1
0x000000000019a108 : in al, 0xf7 ; push rsp ; ret 1
0x00000000001982c8 : in al, 0xfa ; out dx, eax ; call rsp
0x000000000019a685 : in al, 1 ; add byte ptr [rbp - 8], dl ; jmp rsp
0x0000000000198d88 : in al, 7 ; hlt ; call rsp
0x00000000001a1682 : in al, dx ; call rsp
0x000000000004a219 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000f6e71 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f6ebc : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000128a53 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000196be9 : in eax, 0xe9 ; call rsp
0x0000000000196be8 : in eax, 0xe9 ; call rsp
0x0000000000197101 : in eax, 0xea ; jmp rsp
0x000000000019a6ad : in eax, 1 ; add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x0000000000186892 : in eax, dx ; call rsp
0x00000000001868ba : in eax, dx ; call rsp
0x00000000001868d2 : in eax, dx ; call rsp
0x000000000019766a : in eax, dx ; call rsp
0x000000000019772a : in eax, dx ; call rsp
0x00000000001977b2 : in eax, dx ; call rsp
0x00000000001977d2 : in eax, dx ; call rsp
0x00000000001978fa : in eax, dx ; call rsp
0x0000000000197972 : in eax, dx ; call rsp
0x000000000019780a : in eax, dx ; dec esp ; rol dword ptr [rax], 0 ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001974b2 : in eax, dx ; dec esp ; test eax, 0x4d440000 ; in eax, dx ; jmp rsp
0x000000000019762a : in eax, dx ; inc dword ptr [rbp + rsi*4 - 0x6b4c0000] ; in eax, dx ; jmp rsp
0x00000000001974ba : in eax, dx ; jmp rsp
0x00000000001974b9 : in eax, dx ; jmp rsp
0x00000000001974b8 : in eax, dx ; jmp rsp
0x00000000001974e2 : in eax, dx ; jmp rsp
0x0000000000197522 : in eax, dx ; jmp rsp
0x00000000001975ca : in eax, dx ; jmp rsp
0x0000000000197632 : in eax, dx ; jmp rsp
0x0000000000197812 : in eax, dx ; jmp rsp
0x0000000000197842 : in eax, dx ; jmp rsp
0x00000000001178e9 : in eax, dx ; jne 0x117901 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000017413f : in eax, dx ; jne 0x174121 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001977aa : in eax, dx ; lcall ptr [rdi + rdi*4 - 0x44bc0000] ; in eax, dx ; call rsp
0x00000000001974da : in eax, dx ; lcall ptr [rdx + rbp*4 + 0x51740000] ; in eax, dx ; jmp rsp
0x00000000001978f2 : in eax, dx ; push qword ptr [rcx + rcx*8 - 0xfec0000] ; in eax, dx ; call rsp
0x00000000001975c2 : in eax, dx ; push qword ptr [rcx + rsi*4 - 0x7f9c0000] ; in eax, dx ; jmp rsp
0x000000000019751a : in eax, dx ; push qword ptr [rsp + rbp*4 + 0x6b040000] ; in eax, dx ; jmp rsp
0x0000000000197722 : in eax, dx ; push qword ptr [rsp + rdi*4 - 0x506c0000] ; in eax, dx ; call rsp
0x0000000000186d5a : in eax, dx ; push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001982c3 : inc dword ptr [rax + rcx - 0x51bffff] ; out dx, eax ; call rsp
0x000000000019b19b : inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x000000000019a6ab : inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x000000000019762b : inc dword ptr [rbp + rsi*4 - 0x6b4c0000] ; in eax, dx ; jmp rsp
0x0000000000195dfb : inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x000000000019600b : inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x00000000001962f3 : inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000198d83 : inc dword ptr [rdx + rdx*2 + 0x7e40001] ; hlt ; call rsp
0x000000000019ae63 : inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x0000000000187bcf : inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x000000000019accb : inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x000000000019afdb : inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x00000000001891fb : inc eax ; push rcx ; hlt ; dec edx ; push rcx ; hlt ; call rsp
0x0000000000198f83 : inc esp ; add word ptr [rax], ax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x0000000000196d9b : inc esp ; jle 0x196da7 ; add byte ptr [rbx + rdi*8 - 0x17], al ; jmp rsp
0x0000000000199253 : inc esp ; jne 0x199260 ; add byte ptr [rdx + rcx - 0xa], al ; jmp rsp
0x000000000019a4db : inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x0000000000197df9 : insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x000000000009791f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000198c19 : insd dword ptr [rdi], dx ; call rsp
0x00000000001984e2 : int1 ; call rsp
0x00000000001984e1 : int1 ; call rsp
0x0000000000198552 : int1 ; call rsp
0x000000000019869a : int1 ; dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi], al ; int1 ; jmp rsp
0x0000000000187bce : int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000187bd2 : int1 ; jmp rsp
0x000000000019862a : int1 ; jmp rsp
0x00000000001986a2 : int1 ; jmp rsp
0x0000000000187bca : int1 ; push qword ptr [rsi + rbp*2] ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x00000000001979e5 : iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x0000000000188aa0 : iretd ; lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x00000000001158b5 : ja 0x11588c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001888c5 : ja 0x1888bc ; jmp rsp
0x000000000019600d : ja 0x19600d ; call rsp
0x0000000000196009 : ja 0x19600d ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x000000000019600c : ja 0x19600e ; call rsp
0x00000000001969d1 : ja 0x1969be ; call rsp
0x0000000000196be5 : ja 0x196bed ; add byte ptr [rbp - 0x17], al ; call rsp
0x000000000019b9a9 : ja 0x19b9aa ; call rsp
0x00000000000f76ed : ja 0xf7737 ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000196941 : jae 0x19692e ; jmp rsp
0x00000000001991bd : jae 0x1991c6 ; add byte ptr [rbp + rax - 0xa], dl ; call rsp
0x000000000019b8c9 : jae 0x19b8c8 ; call rsp
0x0000000000175149 : jb 0x175148 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000886a2 : jb 0x8868d ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x0000000000196981 : jbe 0x19696e ; jmp rsp
0x0000000000196b95 : jbe 0x196b9d ; add byte ptr [rcx - 0x17], dl ; call rsp
0x000000000019928d : jbe 0x199296 ; add ah, al ; or al, 0xf6 ; call rsp
0x0000000000199659 : jbe 0x199653 ; jmp rsp
0x0000000000199658 : jbe 0x199654 ; jmp rsp
0x000000000011769c : je 0x1176ae ; add rsp, 8 ; ret
0x000000000012b883 : je 0x12b88f ; mov rdi, rsp ; call rax
0x000000000012b96e : je 0x12b97a ; mov rdi, rsp ; call rax
0x00000000001382e3 : je 0x1382f6 ; add rsp, 8 ; ret
0x000000000013ab3d : je 0x13ab98 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abfd : je 0x13ac58 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013acbd : je 0x13ad18 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad7d : je 0x13add8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001429a1 : je 0x1429b6 ; add rsp, 8 ; ret
0x00000000001974e0 : je 0x197536 ; in eax, dx ; jmp rsp
0x0000000000198629 : je 0x19861e ; jmp rsp
0x0000000000198ed8 : je 0x198ef1 ; cmc ; call rsp
0x0000000000199008 : je 0x199051 ; cmc ; jmp rsp
0x0000000000199609 : je 0x199603 ; jmp rsp
0x000000000019b074 : je 0x19b0ae ; add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019b200 : je 0x19b243 ; cli ; jmp rsp
0x000000000019b6e0 : je 0x19b6ae ; cli ; jmp rsp
0x0000000000025b54 : je 0x25b83 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026864 : je 0x26892 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000028044 : je 0x28072 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000282ab : je 0x282da ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028f14 : je 0x28f42 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000029183 : je 0x291b2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000006ac46 : je 0x6ac68 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007df86 : je 0x7df97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bbdac : je 0xbbddb ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bc266 : je 0xbc295 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x0000000000196ab1 : jg 0x196a9e ; jmp rsp
0x0000000000196ddd : jg 0x196de5 ; add ah, al ; add ebp, edx ; jmp rsp
0x000000000019b4a9 : jg 0x19b4a7 ; call rsp
0x000000000019e5c1 : jg 0x19e5ae ; jmp rsp
0x00000000000c7887 : jg 0xc785a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000198e7c : jl 0x198ee2 ; add dword ptr [rax], eax ; adc al, 0x91 ; hlt ; jmp rsp
0x000000000019ab9c : jl 0x19abb3 ; add al, byte ptr [rax] ; stc ; call rsp
0x000000000019b8c4 : jl 0x19b8d2 ; add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019baac : jl 0x19ba7e ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x000000000019e599 : jl 0x19e586 ; jmp rsp
0x0000000000026ca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000196d9d : jle 0x196da5 ; add byte ptr [rbx + rdi*8 - 0x17], al ; jmp rsp
0x000000000019a45b : jmp qword ptr [rsp + rdx*8 + 1]
0x0000000000002a71 : jmp rsp
0x0000000000065a5c : jmp rsp
0x0000000000181df3 : jmp rsp
0x0000000000187bd3 : jmp rsp
0x00000000001888c7 : jmp rsp
0x00000000001888c6 : jmp rsp
0x00000000001888cb : jmp rsp
0x00000000001888ca : jmp rsp
0x00000000001958f7 : jmp rsp
0x0000000000195de3 : jmp rsp
0x00000000001962db : jmp rsp
0x0000000000196733 : jmp rsp
0x00000000001968eb : jmp rsp
0x000000000019691b : jmp rsp
0x0000000000196943 : jmp rsp
0x0000000000196983 : jmp rsp
0x0000000000196a83 : jmp rsp
0x0000000000196ab3 : jmp rsp
0x0000000000196b33 : jmp rsp
0x0000000000196da3 : jmp rsp
0x0000000000196de3 : jmp rsp
0x0000000000196e0b : jmp rsp
0x0000000000196ea3 : jmp rsp
0x0000000000196efb : jmp rsp
0x0000000000196f43 : jmp rsp
0x0000000000197103 : jmp rsp
0x0000000000197123 : jmp rsp
0x00000000001972ab : jmp rsp
0x0000000000197323 : jmp rsp
0x00000000001974bb : jmp rsp
0x00000000001974e3 : jmp rsp
0x0000000000197523 : jmp rsp
0x00000000001975cb : jmp rsp
0x0000000000197633 : jmp rsp
0x0000000000197813 : jmp rsp
0x0000000000197843 : jmp rsp
0x00000000001979eb : jmp rsp
0x0000000000197cf3 : jmp rsp
0x0000000000197e1b : jmp rsp
0x0000000000197fb3 : jmp rsp
0x0000000000198163 : jmp rsp
0x00000000001981a3 : jmp rsp
0x00000000001981eb : jmp rsp
0x00000000001983d3 : jmp rsp
0x0000000000198443 : jmp rsp
0x0000000000198483 : jmp rsp
0x000000000019862b : jmp rsp
0x00000000001986a3 : jmp rsp
0x00000000001988cb : jmp rsp
0x00000000001989fb : jmp rsp
0x00000000001989fa : jmp rsp
0x0000000000198a23 : jmp rsp
0x0000000000198a22 : jmp rsp
0x0000000000198a73 : jmp rsp
0x0000000000198a72 : jmp rsp
0x0000000000198acb : jmp rsp
0x0000000000198aca : jmp rsp
0x0000000000198ac9 : jmp rsp
0x0000000000198e83 : jmp rsp
0x0000000000198f33 : jmp rsp
0x0000000000198f8b : jmp rsp
0x0000000000198fdb : jmp rsp
0x000000000019900b : jmp rsp
0x000000000019925b : jmp rsp
0x000000000019960b : jmp rsp
0x000000000019965b : jmp rsp
0x000000000019977b : jmp rsp
0x00000000001997e3 : jmp rsp
0x0000000000199863 : jmp rsp
0x0000000000199903 : jmp rsp
0x0000000000199a2b : jmp rsp
0x0000000000199abb : jmp rsp
0x0000000000199afb : jmp rsp
0x0000000000199bfb : jmp rsp
0x0000000000199cdb : jmp rsp
0x0000000000199d3b : jmp rsp
0x0000000000199e6b : jmp rsp
0x0000000000199f6b : jmp rsp
0x000000000019a06b : jmp rsp
0x000000000019a0cb : jmp rsp
0x000000000019a15b : jmp rsp
0x000000000019a2d3 : jmp rsp
0x000000000019a383 : jmp rsp
0x000000000019a4ab : jmp rsp
0x000000000019a4e3 : jmp rsp
0x000000000019a5eb : jmp rsp
0x000000000019a68b : jmp rsp
0x000000000019aa43 : jmp rsp
0x000000000019ab3b : jmp rsp
0x000000000019afcb : jmp rsp
0x000000000019b07b : jmp rsp
0x000000000019b15b : jmp rsp
0x000000000019b1a3 : jmp rsp
0x000000000019b203 : jmp rsp
0x000000000019b313 : jmp rsp
0x000000000019b353 : jmp rsp
0x000000000019b643 : jmp rsp
0x000000000019b663 : jmp rsp
0x000000000019b6e3 : jmp rsp
0x000000000019b79b : jmp rsp
0x000000000019e59b : jmp rsp
0x000000000019e5c3 : jmp rsp
0x00000000001a4d83 : jmp rsp
0x0000000000105d3a : jne 0x105d38 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105daa : jne 0x105da8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000112d2e : jne 0x112d67 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116574 : jne 0x11651e ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001178ea : jne 0x117900 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000117bb6 : jne 0x117b6a ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001287bc : jne 0x1287b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014368b : jne 0x14366e ; add rsp, 0x48 ; ret
0x000000000014366d : jne 0x1436a0 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000143735 : jne 0x143748 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001437a8 : jne 0x1437c6 ; add rsp, 0x38 ; ret
0x0000000000174140 : jne 0x174120 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000199255 : jne 0x19925e ; add byte ptr [rdx + rcx - 0xa], al ; jmp rsp
0x0000000000034ad0 : jne 0x34ae6 ; add rsp, 0x28 ; ret
0x0000000000034e0b : jne 0x34e1e ; add rsp, 0x28 ; ret
0x000000000003a61c : jne 0x3a5e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bc61 : jne 0x7bc78 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008d80e : jne 0x8d7d4 ; add rsp, 8 ; ret
0x000000000008d831 : jne 0x8d846 ; add rsp, 8 ; ret
0x00000000000bfe19 : jne 0xbfe31 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000ef91b : jne 0xef909 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7841 : jne 0xf78c9 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000019938d : jnp 0x199396 ; add byte ptr [rsp - 0xa], al ; call rsp
0x00000000001886c1 : jns 0x1886bc ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188741 : jns 0x18873c ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000197e19 : jo 0x197e0b ; jmp rsp
0x0000000000196a81 : jp 0x196a6e ; jmp rsp
0x0000000000186d59 : jrcxz 0x186d4e ; push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001a7c81 : jrcxz 0x1a7c74 ; call rsp
0x0000000000140ca3 : js 0x140cb8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000196005 : js 0x196005 ; call rsp
0x0000000000196004 : js 0x196006 ; call rsp
0x0000000000199305 : js 0x19930e ; add byte ptr [rsp + rdx - 0xa], dh ; call rsp
0x0000000000002f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000116575 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000123205 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011d125 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000070b85 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000074b53 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000007830a : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000000fcdec : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144849 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000001448ae : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000014491e : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000014498e : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000001449fe : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144a69 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144ad3 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144b39 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144b99 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144c03 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144c6e : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000144cd9 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000199f2b : lcall ptr [rbx + rsi*4 + 1] ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000197ceb : lcall ptr [rcx + 0x5e440000] ; out dx, al ; jmp rsp
0x00000000001977ab : lcall ptr [rdi + rdi*4 - 0x44bc0000] ; in eax, dx ; call rsp
0x000000000019b2db : lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x00000000001974db : lcall ptr [rdx + rbp*4 + 0x51740000] ; in eax, dx ; jmp rsp
0x000000000019b63b : lcall ptr [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x0000000000198213 : lcall ptr [rsp + rax + 1] ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x000000000019aea3 : lcall ptr [rsp - 0x2f0bfffe] ; stc ; call rsp
0x00000000000c7982 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ad11e : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000136ef9 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136ff9 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137154 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137294 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000013752e : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe4 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000751a3 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012cac8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cb84 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750c0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136d0a : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000013743a : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c9d6 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad079 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000ad122 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000accd9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbae : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001380a2 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7fc : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf6b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad55a : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e63 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81b : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad291 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000f6ad5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x000000000013b23d : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b37d : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b4b2 : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e715 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9c5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aa35 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aae5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae45 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aeb5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af65 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013afe5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b025 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b095 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5ea : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013b72e : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013abad : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ac6d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ad2d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013aded : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000136ef8 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136ff8 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137153 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137293 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000013752d : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe3 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000751a2 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012cac7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cb83 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750bf : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136d09 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x0000000000137439 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c9d5 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad078 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000ad121 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000accd8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbad : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000001380a1 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7fb : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf6a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad559 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e62 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81a : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad290 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000c7981 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ad11d : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000f6ad4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x000000000013b23c : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b37c : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b4b1 : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e714 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9c4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aa34 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aae4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae44 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aeb4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af64 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013afe4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b024 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b094 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5e9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013b72d : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013abac : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ac6c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013ad2c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013adec : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398c1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000cacdc : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000fe630 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001978f5 : leave ; add byte ptr [rax], al ; adc al, 0xf0 ; in eax, dx ; call rsp
0x000000000019baad : leave ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x000000000019b6e1 : leave ; cli ; jmp rsp
0x000000000019ae69 : leave ; stc ; call rsp
0x00000000000ad075 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000199003 : ljmp ptr [rax + rbp*2 + 0x44740001] ; cmc ; jmp rsp
0x0000000000187817 : ljmp ptr [rax] ; push rsp ; out dx, al ; ljmp ptr [rax + 0x53] ; out dx, al ; jmp rax
0x000000000019847b : ljmp ptr [rbp + rdx + 1] ; add byte ptr [rbx + rsi*8 - 0x10], dl ; jmp rsp
0x000000000019b30b : ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x0000000000198ac3 : ljmp ptr [rcx + rax*2 + 0x46940001] ; jmp rsp
0x0000000000198ac2 : ljmp ptr [rcx + rax*2 + 0x46940001] ; jmp rsp
0x0000000000188ae3 : ljmp ptr [rcx] ; mov ebx, 0xaa49fff3 ; call rsp
0x0000000000188ae2 : ljmp ptr [rcx] ; mov ebx, 0xaa49fff3 ; call rsp
0x0000000000197e13 : ljmp ptr [rdi + 0x70d40000] ; out dx, al ; jmp rsp
0x000000000019ace3 : ljmp ptr [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x000000000019b4a3 : ljmp ptr [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b4ad ; call rsp
0x000000000019b30c : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000019751d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000198ac4 : lodsb al, byte ptr [rsi] ; add dword ptr [r8], eax ; xchg eax, esp ; jmp rsp
0x0000000000188aa1 : lodsb al, byte ptr [rsi] ; dec dword ptr [rdx - 0x45] ; call rsp
0x0000000000196ddc : lodsb al, byte ptr [rsi] ; jg 0x196de6 ; add ah, al ; add ebp, edx ; jmp rsp
0x00000000001a6be4 : lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x0000000000199f64 : lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000008d7d8 : lodsb al, byte ptr [rsi] ; nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000197e14 : lodsb al, byte ptr [rsi] ; out 0, eax ; add ah, dl ; jo 0x197e10 ; jmp rsp
0x0000000000199004 : lodsb al, byte ptr [rsi] ; push 0x44740001 ; cmc ; jmp rsp
0x00000000001b0fe4 : lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fe7 ; jmp qword ptr [rbx]
0x00000000000892d4 : lodsb al, byte ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000001962d9 : lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x000000000008921c : lodsd eax, dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000001895a4 : loop 0x189532 ; hlt ; call rsp
0x000000000018a84c : loop 0x18a8d1 ; idiv bh ; pop rsp ; jle 0x18a850 ; jmp rdx
0x0000000000197d1d : loop 0x197d25 ; add byte ptr [rdx], ah ; out dx, al ; call rsp
0x00000000000ad28f : loop 0xad2e6 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ad558 : loop 0xad5af ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000196b99 : loope 0x196b86 ; call rsp
0x0000000000197ced : loope 0x197cf5 ; add byte ptr [rsi + rbx*2 - 0x12], al ; jmp rsp
0x0000000000197cc5 : loopne 0x197ccd ; add ah, dl ; pop rax ; out dx, al ; call rsp
0x000000000019aa3c : mov ah, 0 ; add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x00000000000bc209 : mov ah, 0x24 ; mov eax, 0x41000000 ; call rsp
0x0000000000198a1c : mov ah, 0x3a ; add dword ptr [rax], eax ; add al, 0x24 ; jmp rsp
0x000000000019b898 : mov ah, 0x40 ; sti ; call rsp
0x0000000000198ed4 : mov ah, 0x61 ; add dword ptr [rax], eax ; je 0x198ef5 ; cmc ; call rsp
0x0000000000195df8 : mov ah, 0x83 ; cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x00000000001981e8 : mov ah, 0x91 ; out dx, eax ; jmp rsp
0x0000000000197630 : mov ah, 0x94 ; in eax, dx ; jmp rsp
0x000000000019ab0c : mov ah, 0xa ; add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x00000000001962f0 : mov ah, 0xaa ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x000000000019751c : mov ah, 0xac ; add byte ptr [rax], al ; add al, 0x6b ; in eax, dx ; jmp rsp
0x0000000000197724 : mov ah, 0xbc ; add byte ptr [rax], al ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x00000000001977d0 : mov ah, 0xc4 ; in eax, dx ; call rsp
0x00000000001978f4 : mov ah, 0xc9 ; add byte ptr [rax], al ; adc al, 0xf0 ; in eax, dx ; call rsp
0x000000000019a684 : mov ah, 0xe4 ; add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x0000000000197eac : mov ah, 0xee ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x00000000001a6be5 : mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001a4d80 : mov al, 2 ; std ; jmp rsp
0x0000000000197665 : mov bh, 0 ; add byte ptr [rsp + rbx*4], dl ; in eax, dx ; call rsp
0x000000000019add9 : mov bh, 0xf9 ; call rsp
0x000000000019ace9 : mov bh, cl ; call rsp
0x0000000000196791 : mov bl, 0xe8 ; call rsp
0x0000000000199861 : mov bl, 0xf6 ; jmp rsp
0x0000000000199f2d : mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000002f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000199f65 : mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x00000000001975c5 : mov cl, 0 ; add byte ptr [rax + rax*4 - 0x13], ah ; jmp rsp
0x00000000000c78ae : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007a60e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e698 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013a9b8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aa28 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aad8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013ae38 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aea8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b018 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b088 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bbc8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc38 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bca8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd18 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b84c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b90c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b9cc : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ba8c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e21d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f661 : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001303dc : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001886c0 : mov dl, 0x79 ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188740 : mov dl, 0x79 ; push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x00000000001072d3 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c51 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000141f7d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044c91 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044d11 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044dbf : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b62e2 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6390 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b6432 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010ecb4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ece4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072dba : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c791 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079832 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071cc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010ec84 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035e08 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000013c3e3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000013c426 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007b52c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000136f50 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000137050 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000199655 : mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x00000000000d6ce2 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000008e837 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x000000000007d722 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000350c9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000fc71f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c9f7d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000cb48d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010c32d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010daad : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011ab22 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011b4b2 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011be43 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011cd73 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000001209dd : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000131da3 : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000c9762 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x00000000000caf32 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000010b6d2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000010d082 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000011a89f : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000011b22f : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000011bbd2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000011cb02 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x0000000000120aa2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x0000000000131842 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x00000000000c9dd3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000cb2e3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000010c183 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000010d903 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000011a969 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000011b2f9 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000011bc99 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x000000000011cbc9 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x0000000000120833 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x0000000000131bf9 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00000000000cb3ad : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000010c24d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000010d9cd : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011aa30 : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011b3c0 : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011bd5d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011cc8d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00000000001208fd : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x0000000000131cbd : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00000000000c9f7c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000cb48c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010c32c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010daac : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011ab21 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011b4b1 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011be42 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011cd72 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000001209dc : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000131da2 : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000081a68 : mov dword ptr [rsp + 0x10], eax ; call rdi
0x0000000000034f35 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000081951 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000007ef07 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x0000000000081a63 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x000000000012c7f7 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000008162f : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00000000000819ab : mov dword ptr [rsp + 0x20], edx ; call rax
0x0000000000100eea : mov dword ptr [rsp + 0x28], eax ; call 0xcd1f6
0x00000000000819a6 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bfad : mov dword ptr [rsp + 0x28], ecx ; call 0x138236
0x00000000000335d9 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x0000000000033632 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x0000000000033676 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x00000000000e1c98 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00000000000bc208 : mov dword ptr [rsp + 0xb8], esi ; call r12
0x0000000000089220 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x00000000000892d8 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000102d46 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013b4ad : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013c2ec : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00000000000f35bf : mov dword ptr [rsp + 8], ebp ; call 0x1f8ae
0x0000000000035003 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a216 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000000bf1e4 : mov dword ptr [rsp], 1 ; jmp 0xbf1b7
0x0000000000089590 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x000000000012a513 : mov dword ptr [rsp], ecx ; call r12
0x00000000000c9dd2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000cb2e2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010c182 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010d902 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011a968 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011b2f8 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011bc98 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000011cbc8 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000120832 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000131bf8 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000cb3ac : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000010c24c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000010d9cc : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000011aa2f : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000011b3bf : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000011bd5c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000011cc8c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000001208fc : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x0000000000131cbc : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000bc20b : mov eax, 0x41000000 ; call rsp
0x0000000000119350 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000000f6b0a : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x00000000000fde9f : mov eax, 1 ; add rsp, 8 ; ret
0x00000000000fe64e : mov eax, 1 ; add rsp, 8 ; ret
0x00000000000ff795 : mov eax, 1 ; add rsp, 8 ; ret
0x00000000000ff7c5 : mov eax, 1 ; add rsp, 8 ; ret
0x000000000014161e : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000071fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000006f8c3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000019703d : mov eax, dword ptr [rax] ; add byte ptr [rbp + rcx*2 - 0x16], ah ; call rsp
0x000000000012e771 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013b239 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b379 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e711 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9c1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aa31 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aae1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae41 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aeb1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af61 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013afe1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b021 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b091 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ab91 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ac51 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ad11 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013add1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000074630 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c8b0e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000000c92b4 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000001430de : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002082a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000025f34 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000102e34 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000f0037 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf0079
0x000000000002436a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000024d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000025113 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000026cad : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000027c01 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000038fe7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000112b95 : mov eax, dword ptr [rsp + 0x38] ; jmp 0x112b63
0x0000000000035839 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cc042 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc7ff : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f6ae8 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000fc749 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000010884a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000001437ce : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000ba004 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000141176 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001411d6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b039 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b066 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b089 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b0b6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000006de36 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000001024c6 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000140d1f : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000cc39a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcc3ae ; call rax
0x00000000000fde50 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000cc270 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000133758 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a3a3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a404 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000008308d : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007912a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d900 : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079a9d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137d61 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e77 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac2c0 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb6f0 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012403b : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116471 : mov eax, edi ; add rsp, 8 ; ret
0x0000000000116577 : mov eax, edi ; add rsp, 8 ; ret
0x0000000000117b01 : mov eax, edi ; add rsp, 8 ; ret
0x0000000000117bb9 : mov eax, edi ; add rsp, 8 ; ret
0x00000000000bb888 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000fdd57 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000841ed : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085901 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d725 : mov eax, edx ; add rsp, 8 ; ret
0x00000000000bfe1c : mov eax, edx ; add rsp, 8 ; ret
0x000000000010cfbd : mov eax, edx ; add rsp, 8 ; ret
0x0000000000141001 : mov eax, edx ; add rsp, 8 ; ret
0x000000000014109d : mov eax, edx ; add rsp, 8 ; ret
0x00000000001412b1 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000141371 : mov eax, edx ; add rsp, 8 ; ret
0x00000000000c9f7f : mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000cb48f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010c32f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010daaf : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011ab24 : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011b4b4 : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011be45 : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000011cd75 : mov eax, esi ; add rsp, 0x48 ; ret
0x00000000001209df : mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000131da5 : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000012e861 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9765 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000caf35 : mov eax, esi ; add rsp, 8 ; ret
0x000000000010b6d5 : mov eax, esi ; add rsp, 8 ; ret
0x000000000010d085 : mov eax, esi ; add rsp, 8 ; ret
0x000000000011a8a2 : mov eax, esi ; add rsp, 8 ; ret
0x000000000011b232 : mov eax, esi ; add rsp, 8 ; ret
0x000000000011bbd5 : mov eax, esi ; add rsp, 8 ; ret
0x000000000011cb05 : mov eax, esi ; add rsp, 8 ; ret
0x0000000000120aa5 : mov eax, esi ; add rsp, 8 ; ret
0x0000000000131845 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000352e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000119077 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000001981a1 : mov ebp, edi ; jmp rsp
0x0000000000188ae5 : mov ebx, 0xaa49fff3 ; call rsp
0x000000000012bf36 : mov ebx, esi ; sub rsp, 8 ; call 0x138238
0x0000000000135bbd : mov ecx, dword ptr [rsp + 0x10] ; call rcx
0x0000000000132785 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x0000000000135425 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x0000000000137e5e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000013258d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000013525c : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000012d51d : mov ecx, dword ptr [rsp + 8] ; call rcx
0x000000000012d62b : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000001977ad : mov edi, 0xbb440000 ; in eax, dx ; call rsp
0x0000000000102d43 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000102e2f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000143699 : mov edi, dword ptr [rsp + 0x18] ; call 0x1f8ae
0x0000000000024071 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x0000000000024a41 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00000000000c92af : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000f360e : mov edi, dword ptr [rsp + 0x20] ; call 0x1f8ae
0x0000000000028aba : mov edi, dword ptr [rsp + 0x20] ; call r14
0x0000000000023e51 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000023ef4 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000003731e : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000002510e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfc : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000024805 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x0000000000025590 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025350 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00000000000248b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000000282af : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000029187 : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000025b58 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000028048 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000028f18 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025f2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026868 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000026ca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000012d539 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00000000000bbdb0 : mov edi, dword ptr [rsp + 0x68] ; call r12
0x00000000000bc26a : mov edi, dword ptr [rsp + 0x68] ; call r12
0x0000000000102d90 : mov edi, dword ptr [rsp] ; call rbx
0x00000000001046c8 : mov edi, dword ptr [rsp] ; call rbx
0x000000000010490c : mov edi, dword ptr [rsp] ; call rbx
0x0000000000136ef6 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136ff6 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137151 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137291 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000013752b : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136d07 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x0000000000137437 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012cac5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000135bba : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132782 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135422 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013258a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000135259 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a510 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a612 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000c8b0b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001430db : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000013809f : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162c : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000012c9d3 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d51a : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012d628 : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000020827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000010eee0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000010eddc : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000848e9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x00000000001958cc : mov esi, 0x64fffc5b ; pop rbx ; cld ; call rsp
0x000000000012c028 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021856 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837f : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000248b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000028043 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028f13 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000845e1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000026863 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000010ede1 : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000011ff59 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000096aea : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x96b05 ; jmp 0x96abf
0x000000000003731b : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000012a60f : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000001971ac : mov esp, 0x14000096 ; adc al, 0xeb ; call rsp
0x0000000000198c14 : mov esp, 0x14000149 ; insd dword ptr [rdi], dx ; call rsp
0x000000000019b0f4 : mov esp, 0x14000234 ; and bh, dl ; call rsp
0x000000000019a8cc : mov esp, 0x340001f4 ; fprem ; call rsp
0x0000000000197da4 : mov esp, 0x40000e4 ; out dx, al ; call rsp
0x0000000000197df4 : mov esp, 0x40000e6 ; insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x0000000000199b44 : mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000196be4 : mov esp, 0x44000077 ; in eax, 0xe9 ; call rsp
0x000000000019938c : mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x0000000000196b94 : mov esp, 0x54000076 ; loope 0x196b8b ; call rsp
0x0000000000199304 : mov esp, 0x74000178 ; adc al, 0xf6 ; call rsp
0x000000000019a3ec : mov esp, 0x940001d1 ; adc edi, eax ; call rsp
0x0000000000197725 : mov esp, 0xaf940000 ; in eax, dx ; call rsp
0x0000000000196e9c : mov esp, 0xb4000084 ; cmp edx, ebp ; jmp rsp
0x000000000019b894 : mov esp, 0xb4000116 ; sti ; call rsp
0x000000000019928c : mov esp, 0xc4000176 ; or al, 0xf6 ; call rsp
0x000000000019b3fc : mov esp, 0xc4000247 ; pop rbp ; cli ; call rsp
0x000000000019796c : mov esp, 0xd40000cc ; std ; in eax, dx ; call rsp
0x0000000000197cc4 : mov esp, 0xd40000e0 ; pop rax ; out dx, al ; call rsp
0x000000000019b74c : mov esp, 0xd400025c ; salc ; cli ; call rsp
0x00000000001969cc : mov esp, 0xe400006c ; ja 0x1969c3 ; call rsp
0x0000000000199c44 : mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x00000000001895a5 : mov esp, esi ; call rsp
0x000000000009f47d : mov esp, esi ; sub rsp, 8 ; call 0x8b728
0x00000000000d6ce1 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000081a67 : mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000081950 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000008162e : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000819aa : mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bfac : mov qword ptr [rsp + 0x28], r9 ; call 0x138237
0x0000000000100ee9 : mov qword ptr [rsp + 0x28], rax ; call 0xcd1f7
0x00000000000335d8 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x0000000000033631 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x0000000000033675 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x00000000000e1c97 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000000bc207 : mov qword ptr [rsp + 0xb8], r14 ; call r12
0x00000000000f35be : mov qword ptr [rsp + 8], r13 ; call 0x1f8af
0x000000000008921f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000892d7 : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000102d45 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000013c2eb : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000008958f : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x000000000012a512 : mov qword ptr [rsp], rcx ; call r12
0x000000000009f47c : mov r12, rsi ; sub rsp, 8 ; call 0x8b729
0x000000000012a614 : mov r13, rsp ; call r15
0x000000000006f8c2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000013b238 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b378 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6a0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012e710 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013a9c0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aa30 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aae0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ae40 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013aeb0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013af60 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013afe0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b020 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b090 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013ab90 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ac50 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ad10 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013add0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000c8b0d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000c92b3 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001430dd : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000025f33 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000102e33 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f0036 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf007a
0x0000000000024369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000025112 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000026cac : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000026cab : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027c00 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000038fe6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000003b038 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b065 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b088 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b0b5 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000006de35 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000001024c5 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000140d1e : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000fde4f : mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000010a3a2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a403 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000008308c : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079129 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d8ff : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079a9c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e76 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac2bf : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb6ef : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012403a : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116470 : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000116576 : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000117b00 : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000117bb8 : mov rax, rdi ; add rsp, 8 ; ret
0x00000000000bb887 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000bb886 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000841ec : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085900 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d724 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bfe1b : mov rax, rdx ; add rsp, 8 ; ret
0x000000000014109c : mov rax, rdx ; add rsp, 8 ; ret
0x00000000000c9764 : mov rax, rsi ; add rsp, 8 ; ret
0x00000000000caf34 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000010b6d4 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000010d084 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000011a8a1 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000011b231 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000011bbd4 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000011cb04 : mov rax, rsi ; add rsp, 8 ; ret
0x0000000000120aa4 : mov rax, rsi ; add rsp, 8 ; ret
0x0000000000131844 : mov rax, rsi ; add rsp, 8 ; ret
0x00000000001159d3 : mov rbp, rsp ; pop rbp ; ret
0x000000000012bf35 : mov rbx, rsi ; sub rsp, 8 ; call 0x138239
0x0000000000135bbc : mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132784 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135424 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013258c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000013525b : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012d51c : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012d62a : mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000102d42 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000143698 : mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8af
0x0000000000024070 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x0000000000024a40 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000f360d : mov rdi, qword ptr [rsp + 0x20] ; call 0x1f8af
0x0000000000028ab9 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e50 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000023ef3 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000003731d : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000024804 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000282ae : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000282ad : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000029186 : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000029185 : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b57 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000025b56 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028047 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028046 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028f17 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028f16 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000026867 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000026866 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000012d538 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00000000000bbdaf : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bbdae : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bc269 : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bc268 : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x000000000012c9d2 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d519 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012d627 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000013809e : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162b : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000136ef5 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136ff5 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137150 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000137290 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000013752a : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136d06 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x0000000000137436 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012cac4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000135bb9 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132781 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000132780 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135421 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135420 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000132589 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000135258 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a50f : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a611 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000c8b0a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001430da : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000012b885 : mov rdi, rsp ; call rax
0x000000000012b970 : mov rdi, rsp ; call rax
0x000000000013a980 : mov rdi, rsp ; call rdx
0x0000000000020826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000848e8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x000000000012c027 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021855 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837e : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000845e0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000010ede0 : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000011ff58 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x000000000003731a : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000013ab94 : mov rsi, rsp ; call qword ptr [rax]
0x000000000013ac54 : mov rsi, rsp ; call qword ptr [rax]
0x000000000013ad14 : mov rsi, rsp ; call qword ptr [rax]
0x000000000013add4 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012e774 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000352e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000119079 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000019b454 : mov word ptr [rcx + 2], cs ; add byte ptr [rsi], ah ; cli ; call rsp
0x0000000000198f2c : mov word ptr [rcx + rax], fs ; in al, 0x20 ; cmc ; jmp rsp
0x0000000000198dbc : mov word ptr [rcx + rax], ss ; movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x0000000000035002 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000034b30 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034b31 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034e60 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034acd : movaps xmm0, xmm1 ; jne 0x34ae9 ; add rsp, 0x28 ; ret
0x0000000000034e08 : movaps xmm0, xmm1 ; jne 0x34e21 ; add rsp, 0x28 ; ret
0x0000000000198dc0 : movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x0000000000198f88 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp rsp
0x0000000000197eb0 : movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x00000000001984e0 : movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call rsp
0x00000000001979e4 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x0000000000196980 : movsb byte ptr [rdi], byte ptr [rsi] ; jbe 0x19696f ; jmp rsp
0x0000000000196ab0 : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196a9f ; jmp rsp
0x00000000001979e8 : movsb byte ptr [rdi], byte ptr [rsi] ; or dh, ch ; jmp rsp
0x00000000001999ac : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x000000000019b65c : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x00000000001977cc : movsb byte ptr [rdi], byte ptr [rsi] ; rol byte ptr [rax], 0 ; mov ah, 0xc4 ; in eax, dx ; call rsp
0x000000000019854c : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, byte ptr [rcx] ; add byte ptr [rsp + rbx*2 - 0xf], dl ; call rsp
0x00000000000bb8f8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000bb8f7 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000004a1d3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a18d : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000010ec2f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003ab4a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000199f69 : movsxd rsi, edi ; jmp rsp
0x000000000003afe9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b016 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000bb8f9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x000000000004a18e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000004a1d4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000003b171 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e697 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013a9b7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aa27 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aad7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013ae37 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013aea7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b017 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b087 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bbc7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc37 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bca7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd17 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b84b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b90b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b9cb : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ba8b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e21c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f660 : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001303db : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a60d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e797 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000136d5f : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001373aa : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000088501 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f7671 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x0000000000189014 : neg edx ; push rsp ; ret
0x0000000000189028 : neg edx ; push rsp ; ret
0x0000000000189094 : neg edx ; push rsp ; ret
0x00000000000ba00f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000ba00e : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006ac4f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000021a2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000021a2e : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077d4f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011f32f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e0ff : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013a93f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003512f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x000000000003512e : nop ; fstp st(1) ; add rsp, 8 ; ret
0x000000000013ab8f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ac4f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013ad0f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013adcf : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000084faf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000195b74 : nop ; push rsp ; cld ; call qword ptr [rax]
0x000000000008d7d9 : nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000c78af : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000174475 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000848e5 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000000845dc : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000013c451 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000fc702 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000189c28 : or al, 0x66 ; cmc ; push rsp ; cmc ; call rsp
0x00000000000e7615 : or al, 0x89 ; push rsp ; ret
0x0000000000199291 : or al, 0xf6 ; call rsp
0x0000000000196685 : or al, byte ptr [rax] ; add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x000000000019ab0d : or al, byte ptr [rdx] ; add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x000000000013bc07 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc77 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bce7 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd57 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010a3a1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a402 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000070a77 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000054b89 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00000000001426b5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000001982c5 : or byte ptr [rcx], al ; add ah, ah ; cli ; out dx, eax ; call rsp
0x0000000000022b4e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000039df3 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003a583 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000006dd60 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000006e2a3 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000077961 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000009f301 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000d7143 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fb683 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fefa3 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010ad5b : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010b5bb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000117833 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000013a1d6 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e7bbb : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001979e9 : or dh, ch ; jmp rsp
0x0000000000199259 : or dh, dh ; jmp rsp
0x00000000000758b4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000006dde3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012cb7f : or eax, 0x4c0000de ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000010c99c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006dde4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000002f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000199258 : or r14b, sil ; jmp rsp
0x0000000000197df5 : out 0, al ; add byte ptr [rsp + rbp*2], al ; out dx, al ; call rsp
0x0000000000197e15 : out 0, eax ; add ah, dl ; jo 0x197e0f ; jmp rsp
0x000000000003731c : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000012a610 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x0000000000199931 : out 0xf6, al ; call rsp
0x000000000019a159 : out 0xf7, al ; jmp rsp
0x000000000019a158 : out 0xf7, al ; jmp rsp
0x0000000000197ead : out dx, al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fldz ; call rsp
0x0000000000197a12 : out dx, al ; call rsp
0x0000000000197cca : out dx, al ; call rsp
0x0000000000197d22 : out dx, al ; call rsp
0x0000000000197daa : out dx, al ; call rsp
0x0000000000197da9 : out dx, al ; call rsp
0x0000000000197dfa : out dx, al ; call rsp
0x0000000000197eb2 : out dx, al ; call rsp
0x00000000001979ea : out dx, al ; jmp rsp
0x0000000000197cf2 : out dx, al ; jmp rsp
0x0000000000197e1a : out dx, al ; jmp rsp
0x0000000000197cea : out dx, al ; lcall ptr [rcx + 0x5e440000] ; out dx, al ; jmp rsp
0x0000000000187816 : out dx, al ; ljmp ptr [rax] ; push rsp ; out dx, al ; ljmp ptr [rax + 0x53] ; out dx, al ; jmp rax
0x0000000000197e12 : out dx, al ; ljmp ptr [rdi + 0x70d40000] ; out dx, al ; jmp rsp
0x0000000000197eaa : out dx, al ; push qword ptr [rsi + rbp*8 - 0x265c0000] ; out dx, al ; call rsp
0x0000000000198052 : out dx, eax ; call rsp
0x000000000019821a : out dx, eax ; call rsp
0x00000000001982ca : out dx, eax ; call rsp
0x00000000001a7c82 : out dx, eax ; call rsp
0x00000000001982c2 : out dx, eax ; inc dword ptr [rax + rcx - 0x51bffff] ; out dx, eax ; call rsp
0x0000000000197fb2 : out dx, eax ; jmp rsp
0x0000000000198162 : out dx, eax ; jmp rsp
0x00000000001981a2 : out dx, eax ; jmp rsp
0x00000000001981ea : out dx, eax ; jmp rsp
0x0000000000198212 : out dx, eax ; lcall ptr [rsp + rax + 1] ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x000000000012cac6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000135bbb : out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132783 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000135423 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013258b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000013525a : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000197faa : out dx, eax ; push qword ptr [rdi + rsi*8 + 0x1f440000] ; out dx, eax ; jmp rsp
0x0000000000187bcd : outsb dx, byte ptr [rsi] ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000187bd1 : outsb dx, byte ptr [rsi] ; int1 ; jmp rsp
0x0000000000187bd0 : outsb dx, byte ptr [rsi] ; int1 ; jmp rsp
0x0000000000196aad : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196aa2 ; jmp rsp
0x0000000000197cc9 : pop rax ; out dx, al ; call rsp
0x000000000019ab39 : pop rax ; stc ; jmp rsp
0x00000000001192b6 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000198e7d : pop rbp ; add dword ptr [rax], eax ; adc al, 0x91 ; hlt ; jmp rsp
0x000000000019b401 : pop rbp ; cli ; call rsp
0x00000000001a167d : pop rbx ; add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x00000000001a167c : pop rbx ; add byte ptr [rax], al ; ror al, 1 ; in al, dx ; call rsp
0x00000000001958d1 : pop rbx ; cld ; call rsp
0x00000000001958d0 : pop rbx ; cld ; call rsp
0x0000000000101fc1 : pop rbx ; push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x000000000019b6dd : pop rcx ; add al, byte ptr [rax] ; je 0x19b6b1 ; cli ; jmp rsp
0x00000000000c7885 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001958f5 : pop rsi ; cld ; jmp rsp
0x0000000000197cf1 : pop rsi ; out dx, al ; jmp rsp
0x0000000000197cf0 : pop rsi ; out dx, al ; jmp rsp
0x0000000000147340 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000198214 : pop rsp ; add al, 1 ; add ah, ah ; xchg eax, ebx ; out dx, eax ; call rsp
0x00000000001467f4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a3c94 : pop rsp ; add dword ptr [rax], 0xed46a800 ; jmp qword ptr [rsi]
0x00000000000d9592 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000148040 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000bb8f5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000195985 : pop rsp ; cld ; call qword ptr [rax]
0x0000000000195849 : pop rsp ; cld ; call rdx
0x0000000000195848 : pop rsp ; cld ; call rdx
0x0000000000195845 : pop rsp ; cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001960d9 : pop rsp ; cld ; jmp rax
0x00000000001957c9 : pop rsp ; cld ; jmp rsi
0x00000000001b9594 : pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x0000000000186899 : pop rsp ; in eax, dx ; call qword ptr [rdi]
0x0000000000186891 : pop rsp ; in eax, dx ; call rsp
0x00000000001868b9 : pop rsp ; in eax, dx ; call rsp
0x00000000001868d1 : pop rsp ; in eax, dx ; call rsp
0x0000000000198551 : pop rsp ; int1 ; call rsp
0x00000000001a9951 : pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001a9969 : pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001887a0 : pop rsp ; jle 0x188799 ; jmp rdi
0x000000000018a850 : pop rsp ; jle 0x18a84c ; jmp rdx
0x0000000000084cab : pop rsp ; jmp rax
0x0000000000086062 : pop rsp ; jmp rax
0x000000000008683e : pop rsp ; jmp rax
0x0000000000086b3d : pop rsp ; jmp rcx
0x0000000000199f2c : pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000102880 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000010289a : pop rsp ; mov esi, 3 ; jmp rax
0x000000000006fb6f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001451d0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000423cd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042465 : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b10ed : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x00000000000b1185 : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000000b106b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010404c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020250 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e63 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020e9a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000213ba : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000223fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022cca : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023046 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000236d2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c6c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029c83 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b5d5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b60d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c01b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c0f0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c140 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c44e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c6c8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002c8bd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002cc72 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d04f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d158 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002efbc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002f261 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002ff9a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000030a89 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032294 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032441 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000395e7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039648 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000039abc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000045614 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000457f9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004584d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000048cd9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004a99e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004aa73 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ac9b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004b6fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d282 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d333 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000503ab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050cce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e04 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050e56 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050fb9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055bf7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e15 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000055e56 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000056ae2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058ade : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058b04 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000058be9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000005bba8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000637ad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000752a8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000776e2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008883f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000989f1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000b7390 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba04b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ba0a9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf7f0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bf85b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c52a8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cc51c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ccdb8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cdf3f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cead8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cece0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf23b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf321 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cf86d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d1ae9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d228e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d38c6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d55b4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5645 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d5663 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d891e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8c4c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d8cc5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dcdc3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000dd008 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e94cc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e956d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e959d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e98b2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaab1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eaadb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eadef : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef2bf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ef6d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f150e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1568 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f162e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f1729 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f6039 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f9912 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fd952 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fda1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febdc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000febf3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010321e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010340a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000104b16 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001052d3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105374 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105a74 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105b9d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000109208 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a08c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a205 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010a2dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000110050 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001102d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000111825 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000113e5c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000115e61 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011db20 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011f58f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000120fc5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000121243 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001213aa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220a5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001220c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012239c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123666 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001236c4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001237e0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123878 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001239f5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123b79 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124354 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012438e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124632 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124aaf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000124d30 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128eec : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000128fd5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129716 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012998b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129aa2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129abb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129ca2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129dab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129de3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012a0f5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c3e6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c673 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c6c6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013287c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000132893 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013468c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001346d8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001347ac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013484c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013d513 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013e82f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f43f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f716 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013fa6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013ff28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140bab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000140c45 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142aa0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000143906 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144733 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144768 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000144780 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021114 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002113c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021164 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002118c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021895 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022842 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022990 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023c19 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023e09 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023eac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f06 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023f1f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024043 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024083 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000245ce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000247c7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024864 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248ca : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000248e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a13 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024a53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024f79 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002531d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000025b1e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002682f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026879 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000027996 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000279d5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028015 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028856 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028896 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028ee5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000298ce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000029f9e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a067 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a17b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002aa1c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002ac86 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002bebf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d77a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e1c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e425 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e7cc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000306f1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000307a2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000325c7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032be9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032c8b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000033330 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000340aa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003721c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000037232 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003785b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000397e0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a4a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b527 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b583 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b9f7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ba53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bb74 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003bf97 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003c6f9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f257 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003f9d9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000421af : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000042c07 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004609d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046f82 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000046fe9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000472c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004777a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486c4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000486dd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000487cd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000488a8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004915f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000492d3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000499b2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a319 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a343 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000052e05 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005316f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005505a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005526f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055423 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000554e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000055580 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006adf9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006b24a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006d500 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006e9b6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ec9f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ecf8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006f2f4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070c93 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070d00 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071a64 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071d7e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071e25 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000725ff : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007276f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000730da : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000731ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000733d3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073a8d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073b9e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073c84 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073e54 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007481f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074864 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074e4c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076cc5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078de6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079268 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079b72 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079ba1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079fbf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007a16a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007afd4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c258 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c9c0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007cdb8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007ce2b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007d891 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007e521 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007f355 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007feaa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000080381 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000813e0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000081ebf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000831ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008335a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000833b4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083c17 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000083d67 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000084788 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000085aef : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086c71 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087155 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008755c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000087c8c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000881be : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088a0b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088edd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000893d2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b5f3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b68a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008dff0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e131 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008e14a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095435 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095521 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095701 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000095fa4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096386 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000964de : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000969c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096ac2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096d21 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096fed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000976d5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009785a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009807e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab50 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aab71 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad2f3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad5e5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad892 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000addb7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ade08 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae217 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae268 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae30b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ae573 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aef2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b0edb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b1b91 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b3663 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b400a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b6a97 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ba626 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf40 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000baf72 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc076 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc723 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc82a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bce64 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bd7c8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000be00b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef0f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bef28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bf1b6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c0012 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c322c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c7e0a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8698 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c893c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8bd0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8cf9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8ef5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8f1b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8fcc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c934e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca0da : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca13b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca1d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca37b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca3db : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca474 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca5a5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca6aa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca7ac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca9e4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cabf5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cac1b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb5eb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb64b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb6e4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb88a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb8eb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb984 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cbebc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cc9c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccb65 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccd0b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9ce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce9e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d41d6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5b83 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5df5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5e2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d5f99 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d65b1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6de9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d743c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d7458 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d8dea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d9c38 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da5bc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000da87b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daa1d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daae2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daea6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daee8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000daf35 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000db0f5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbbb4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbf63 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc0c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc468 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc68e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc78c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc8fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddac6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddc57 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddce9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddd66 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddec0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000de671 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df3da : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df42c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df68a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000df6a9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa05 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfa7f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dfae0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0254 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e05dc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e1d67 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e412d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e41f7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4216 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4822 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4ea0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4f79 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e57b9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5b2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e5f1f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7f54 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e85ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e872c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e8832 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e918f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eab56 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eac20 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ed4f1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000edefc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000efe6b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f06cb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f07b0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f08ab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f1ac9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f40a7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f49a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5cc1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7385 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f7b54 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f86c2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f91c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa181 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fab0d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb01d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb8cb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fbe14 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ffbe4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100883 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100e9b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001016c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101b8a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000101c11 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010210a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010218d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001026fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102791 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102fe6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000103076 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010308a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010405f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001049a5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a3a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104a51 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000105762 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000107645 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000108693 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109ad0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109ae9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac6b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ac81 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4d3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b4e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bb85 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010bbab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c463 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c484 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010c4a3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010cbbc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d535 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d55b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d76f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d802 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dbe3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc04 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dc23 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010df86 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dfb8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e2ec : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e4fb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010eff2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010f5ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fd03 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010fee8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ff90 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ffcf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110793 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001132e7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000113719 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011616a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000116766 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001168b6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001172f3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000117dba : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118a06 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118cdb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118efc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011985d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119ad9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000119be6 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a11d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a261 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a2ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a4ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a621 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a6a2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ac93 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae52 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ae96 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011af46 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b612 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b656 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b706 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba12 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba34 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ba53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c0f3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c114 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c133 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c4e7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c543 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c5d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c906 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c963 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c9f4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011cf2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d23d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011d6b8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dc7b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dca2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dcfb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011dd29 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e054 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e881 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8b3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011e8db : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ed3d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fa5d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fb2a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200d8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001200e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120469 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d74 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000120d93 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012150b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d0f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121d90 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125305 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125347 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125429 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001254e1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001262ea : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000126306 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012719a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000127948 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001279af : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001280a7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012840f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001286e9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012871b : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000128e04 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001291db : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001292b0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a308 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a35a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a476 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a4e1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a5e8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a601 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a79f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a822 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a9ee : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aab0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012aca4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ad62 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bc61 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bee5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c129 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c826 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012cf92 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012d273 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e569 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e5be : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e60d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012eaee : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ef21 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f111 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f12d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f2a1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f2f4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f440 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f54c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012fed2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130834 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013093e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130c5f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314b5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001314c9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ed3 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131ef4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131f13 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132102 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132124 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132143 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013263a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132c93 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132cc1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132f86 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001331fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133223 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013344d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133c64 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133e7f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000134118 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013452c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135303 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135704 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001357b9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135d28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136292 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136552 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001367d4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137c28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137eaf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001380ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138607 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138b45 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138cae : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138d77 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138ea9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001390e7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013999c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399b1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399fb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139a7f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139e28 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a708 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a87e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a89c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b5be : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b609 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013c94a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ce7a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dcab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dd11 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013df1e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e23c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e3ec : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013ef49 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013efc0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f0ce : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013f874 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014028a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000140489 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014054d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014151f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141991 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141b82 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141e52 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000142c96 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001431b1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000143394 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001440c2 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000144277 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000172f0c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000173d37 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cbf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000174cd9 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000175198 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000175239 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b583 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ba53 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b3 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000203e2 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022bb1 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000032fcc : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000033c3e : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003c12c : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003c17b : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003c1b3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003c253 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003f3ef : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003f43e : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003f473 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003f513 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000004239c : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000004983b : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054cb9 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054cd1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006bd1f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006bf94 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006e79a : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006e7df : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006e7ed : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007188e : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073580 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000735ae : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073655 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075021 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007503c : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075055 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000751e3 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000751fc : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075215 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075df9 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000767c4 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000076a69 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000076b08 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000076b3a : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077296 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077aa1 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077e30 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077eaf : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000785ac : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000078be5 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000078fbc : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007906a : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007b6e1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007b7fe : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d137 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d14f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d1bb : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d1dd : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d790 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007d81b : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007e0a7 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007e0f5 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000082ce6 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000082d74 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000085580 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000086f77 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000087a61 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000087acf : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000087e78 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000088d7c : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000089757 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000095a4a : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096bab : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096bd5 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096ee9 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000097923 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acd08 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acd1c : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ace01 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acefe : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acf41 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ae6ff : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ae74e : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ae783 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ae823 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b10bc : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b37ec : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b383b : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b3873 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b3913 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b9f57 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bc919 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bc9df : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bcc27 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bcc6d : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bddf3 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bdf31 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c7637 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c7a39 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c7ad0 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c7b10 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c8d5c : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9560 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9be3 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9c30 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9cbf : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d7fd5 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d9839 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d98b8 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000da3bd : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000da3f0 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de37a : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de406 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de459 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e8299 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e82d7 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000f8c3c : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000f8c9c : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000f8cfe : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fd4a4 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fd660 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fd6ca : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fe794 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fe7e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fe9bb : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000100301 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010562a : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000105f5c : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000105f72 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000105f98 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001082df : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010845f : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000108995 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010c879 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010c8ed : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010d354 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010e0aa : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010e0e3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010e0ff : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010e3cc : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000110a63 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000110cff : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001110cb : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000118bb3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011b11d : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011c330 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011c75f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011e982 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011ea42 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000123169 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000123208 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000124ed7 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000124f1d : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000124f6d : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000125004 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012772f : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001277db : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000129577 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012962f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012c9f7 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012ca1d : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012cdc4 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012de52 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012e41f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012ed41 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012ed87 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000132a86 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000133357 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000133638 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000133687 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000135540 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000137867 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013787c : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000139317 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001393e0 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013948f : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001395f8 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000139647 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a08a : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a0c8 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a4c9 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a4e1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a691 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a6b1 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013b1e2 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013b700 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013b7ab : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013c09e : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013cc13 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013cc8b : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013d341 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013d3ab : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001408ae : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000014227d : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073631 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d126 : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000006d148 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000cd40b : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000cd41b : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000ffd69 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000115a45 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000115a61 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000206c3 : pop rsp ; pop r13 ; ret
0x000000000002268b : pop rsp ; pop r13 ; ret
0x0000000000022704 : pop rsp ; pop r13 ; ret
0x0000000000022b54 : pop rsp ; pop r13 ; ret
0x0000000000029daf : pop rsp ; pop r13 ; ret
0x0000000000029dd3 : pop rsp ; pop r13 ; ret
0x0000000000029e17 : pop rsp ; pop r13 ; ret
0x0000000000029e9e : pop rsp ; pop r13 ; ret
0x000000000002a83b : pop rsp ; pop r13 ; ret
0x000000000002a861 : pop rsp ; pop r13 ; ret
0x000000000002a8e3 : pop rsp ; pop r13 ; ret
0x0000000000032dc7 : pop rsp ; pop r13 ; ret
0x0000000000033b91 : pop rsp ; pop r13 ; ret
0x0000000000036bf6 : pop rsp ; pop r13 ; ret
0x0000000000036c1b : pop rsp ; pop r13 ; ret
0x0000000000039df9 : pop rsp ; pop r13 ; ret
0x0000000000039e3a : pop rsp ; pop r13 ; ret
0x000000000003a589 : pop rsp ; pop r13 ; ret
0x000000000003ae49 : pop rsp ; pop r13 ; ret
0x000000000003aed1 : pop rsp ; pop r13 ; ret
0x000000000004a8dd : pop rsp ; pop r13 ; ret
0x000000000004fff7 : pop rsp ; pop r13 ; ret
0x0000000000054b8f : pop rsp ; pop r13 ; ret
0x0000000000054bb2 : pop rsp ; pop r13 ; ret
0x0000000000054d8b : pop rsp ; pop r13 ; ret
0x0000000000054da1 : pop rsp ; pop r13 ; ret
0x0000000000055b36 : pop rsp ; pop r13 ; ret
0x000000000005b779 : pop rsp ; pop r13 ; ret
0x000000000005b860 : pop rsp ; pop r13 ; ret
0x00000000000634b4 : pop rsp ; pop r13 ; ret
0x000000000006bbd6 : pop rsp ; pop r13 ; ret
0x000000000006dd66 : pop rsp ; pop r13 ; ret
0x000000000006e294 : pop rsp ; pop r13 ; ret
0x000000000006e2a9 : pop rsp ; pop r13 ; ret
0x000000000006e2ba : pop rsp ; pop r13 ; ret
0x000000000006efd1 : pop rsp ; pop r13 ; ret
0x000000000006effd : pop rsp ; pop r13 ; ret
0x00000000000701e8 : pop rsp ; pop r13 ; ret
0x0000000000070206 : pop rsp ; pop r13 ; ret
0x0000000000070281 : pop rsp ; pop r13 ; ret
0x0000000000070e31 : pop rsp ; pop r13 ; ret
0x0000000000070e5d : pop rsp ; pop r13 ; ret
0x00000000000717d0 : pop rsp ; pop r13 ; ret
0x0000000000071916 : pop rsp ; pop r13 ; ret
0x00000000000734ab : pop rsp ; pop r13 ; ret
0x00000000000750f3 : pop rsp ; pop r13 ; ret
0x000000000007510c : pop rsp ; pop r13 ; ret
0x000000000007511d : pop rsp ; pop r13 ; ret
0x0000000000075453 : pop rsp ; pop r13 ; ret
0x00000000000757e1 : pop rsp ; pop r13 ; ret
0x000000000007641d : pop rsp ; pop r13 ; ret
0x0000000000076911 : pop rsp ; pop r13 ; ret
0x00000000000769ca : pop rsp ; pop r13 ; ret
0x0000000000077936 : pop rsp ; pop r13 ; ret
0x0000000000077967 : pop rsp ; pop r13 ; ret
0x0000000000078a66 : pop rsp ; pop r13 ; ret
0x000000000007a458 : pop rsp ; pop r13 ; ret
0x000000000007bbd2 : pop rsp ; pop r13 ; ret
0x000000000007c442 : pop rsp ; pop r13 ; ret
0x000000000007c723 : pop rsp ; pop r13 ; ret
0x000000000007d034 : pop rsp ; pop r13 ; ret
0x000000000007d57a : pop rsp ; pop r13 ; ret
0x000000000007e224 : pop rsp ; pop r13 ; ret
0x0000000000084543 : pop rsp ; pop r13 ; ret
0x00000000000845d8 : pop rsp ; pop r13 ; ret
0x00000000000845ee : pop rsp ; pop r13 ; ret
0x0000000000084e4f : pop rsp ; pop r13 ; ret
0x00000000000850aa : pop rsp ; pop r13 ; ret
0x00000000000850bf : pop rsp ; pop r13 ; ret
0x00000000000850e6 : pop rsp ; pop r13 ; ret
0x0000000000087796 : pop rsp ; pop r13 ; ret
0x000000000008f0a1 : pop rsp ; pop r13 ; ret
0x000000000008f136 : pop rsp ; pop r13 ; ret
0x000000000009f2d8 : pop rsp ; pop r13 ; ret
0x000000000009f307 : pop rsp ; pop r13 ; ret
0x000000000009f3cf : pop rsp ; pop r13 ; ret
0x000000000009f451 : pop rsp ; pop r13 ; ret
0x000000000009f46a : pop rsp ; pop r13 ; ret
0x000000000009f4b4 : pop rsp ; pop r13 ; ret
0x000000000009f51a : pop rsp ; pop r13 ; ret
0x00000000000aa880 : pop rsp ; pop r13 ; ret
0x00000000000aa99f : pop rsp ; pop r13 ; ret
0x00000000000aa9cf : pop rsp ; pop r13 ; ret
0x00000000000b9e85 : pop rsp ; pop r13 ; ret
0x00000000000b9ef5 : pop rsp ; pop r13 ; ret
0x00000000000ba3b9 : pop rsp ; pop r13 ; ret
0x00000000000ba439 : pop rsp ; pop r13 ; ret
0x00000000000ba453 : pop rsp ; pop r13 ; ret
0x00000000000baedb : pop rsp ; pop r13 ; ret
0x00000000000c7c32 : pop rsp ; pop r13 ; ret
0x00000000000c7c67 : pop rsp ; pop r13 ; ret
0x00000000000c7c9e : pop rsp ; pop r13 ; ret
0x00000000000c8508 : pop rsp ; pop r13 ; ret
0x00000000000c989c : pop rsp ; pop r13 ; ret
0x00000000000c9a0d : pop rsp ; pop r13 ; ret
0x00000000000cb06d : pop rsp ; pop r13 ; ret
0x00000000000cb1ec : pop rsp ; pop r13 ; ret
0x00000000000cba85 : pop rsp ; pop r13 ; ret
0x00000000000cbae3 : pop rsp ; pop r13 ; ret
0x00000000000cc1df : pop rsp ; pop r13 ; ret
0x00000000000d7149 : pop rsp ; pop r13 ; ret
0x00000000000e8350 : pop rsp ; pop r13 ; ret
0x00000000000e8375 : pop rsp ; pop r13 ; ret
0x00000000000e8a77 : pop rsp ; pop r13 ; ret
0x00000000000efb18 : pop rsp ; pop r13 ; ret
0x00000000000efde6 : pop rsp ; pop r13 ; ret
0x00000000000efe01 : pop rsp ; pop r13 ; ret
0x00000000000f036c : pop rsp ; pop r13 ; ret
0x00000000000f037c : pop rsp ; pop r13 ; ret
0x00000000000f040b : pop rsp ; pop r13 ; ret
0x00000000000f0452 : pop rsp ; pop r13 ; ret
0x00000000000f74a4 : pop rsp ; pop r13 ; ret
0x00000000000f85ac : pop rsp ; pop r13 ; ret
0x00000000000f9b68 : pop rsp ; pop r13 ; ret
0x00000000000f9bc0 : pop rsp ; pop r13 ; ret
0x00000000000fb675 : pop rsp ; pop r13 ; ret
0x00000000000fb689 : pop rsp ; pop r13 ; ret
0x00000000000fb6fc : pop rsp ; pop r13 ; ret
0x00000000000fc2ee : pop rsp ; pop r13 ; ret
0x00000000000fc4e1 : pop rsp ; pop r13 ; ret
0x00000000000fc59d : pop rsp ; pop r13 ; ret
0x00000000000fc5d1 : pop rsp ; pop r13 ; ret
0x00000000000fd0c1 : pop rsp ; pop r13 ; ret
0x00000000000fd171 : pop rsp ; pop r13 ; ret
0x00000000000fef98 : pop rsp ; pop r13 ; ret
0x00000000000fefa9 : pop rsp ; pop r13 ; ret
0x00000000000ff8db : pop rsp ; pop r13 ; ret
0x00000000000ffa1b : pop rsp ; pop r13 ; ret
0x00000000000ffe91 : pop rsp ; pop r13 ; ret
0x00000000000ffec5 : pop rsp ; pop r13 ; ret
0x0000000000101271 : pop rsp ; pop r13 ; ret
0x0000000000104e34 : pop rsp ; pop r13 ; ret
0x0000000000104e9c : pop rsp ; pop r13 ; ret
0x0000000000105cd2 : pop rsp ; pop r13 ; ret
0x00000000001088e7 : pop rsp ; pop r13 ; ret
0x0000000000108a3d : pop rsp ; pop r13 ; ret
0x0000000000109505 : pop rsp ; pop r13 ; ret
0x00000000001098aa : pop rsp ; pop r13 ; ret
0x00000000001098fb : pop rsp ; pop r13 ; ret
0x000000000010ad4f : pop rsp ; pop r13 ; ret
0x000000000010ad61 : pop rsp ; pop r13 ; ret
0x000000000010b5af : pop rsp ; pop r13 ; ret
0x000000000010b5c1 : pop rsp ; pop r13 ; ret
0x000000000010b80d : pop rsp ; pop r13 ; ret
0x000000000010b997 : pop rsp ; pop r13 ; ret
0x000000000010bdfb : pop rsp ; pop r13 ; ret
0x000000000010c0ca : pop rsp ; pop r13 ; ret
0x000000000010ce86 : pop rsp ; pop r13 ; ret
0x000000000010cea1 : pop rsp ; pop r13 ; ret
0x000000000010d1bd : pop rsp ; pop r13 ; ret
0x000000000010eb5b : pop rsp ; pop r13 ; ret
0x000000000010eb71 : pop rsp ; pop r13 ; ret
0x00000000001163fc : pop rsp ; pop r13 ; ret
0x000000000011706c : pop rsp ; pop r13 ; ret
0x00000000001170c1 : pop rsp ; pop r13 ; ret
0x0000000000117403 : pop rsp ; pop r13 ; ret
0x0000000000117486 : pop rsp ; pop r13 ; ret
0x0000000000117553 : pop rsp ; pop r13 ; ret
0x0000000000117824 : pop rsp ; pop r13 ; ret
0x0000000000117839 : pop rsp ; pop r13 ; ret
0x000000000011784a : pop rsp ; pop r13 ; ret
0x0000000000118523 : pop rsp ; pop r13 ; ret
0x00000000001185a9 : pop rsp ; pop r13 ; ret
0x0000000000118673 : pop rsp ; pop r13 ; ret
0x000000000011a00c : pop rsp ; pop r13 ; ret
0x000000000011b8ac : pop rsp ; pop r13 ; ret
0x000000000011bf7d : pop rsp ; pop r13 ; ret
0x000000000011d0dd : pop rsp ; pop r13 ; ret
0x000000000011d128 : pop rsp ; pop r13 ; ret
0x0000000000120bdd : pop rsp ; pop r13 ; ret
0x000000000012336b : pop rsp ; pop r13 ; ret
0x000000000012b0e2 : pop rsp ; pop r13 ; ret
0x000000000012b170 : pop rsp ; pop r13 ; ret
0x000000000012b1f0 : pop rsp ; pop r13 ; ret
0x000000000012b275 : pop rsp ; pop r13 ; ret
0x000000000012b2f5 : pop rsp ; pop r13 ; ret
0x000000000012b375 : pop rsp ; pop r13 ; ret
0x000000000012b3f5 : pop rsp ; pop r13 ; ret
0x000000000012b470 : pop rsp ; pop r13 ; ret
0x000000000012b4fa : pop rsp ; pop r13 ; ret
0x000000000012b570 : pop rsp ; pop r13 ; ret
0x000000000012b5f0 : pop rsp ; pop r13 ; ret
0x000000000012b67a : pop rsp ; pop r13 ; ret
0x000000000012b6f5 : pop rsp ; pop r13 ; ret
0x000000000012b770 : pop rsp ; pop r13 ; ret
0x000000000012c25e : pop rsp ; pop r13 ; ret
0x000000000012f70d : pop rsp ; pop r13 ; ret
0x00000000001307a2 : pop rsp ; pop r13 ; ret
0x00000000001307df : pop rsp ; pop r13 ; ret
0x000000000013197d : pop rsp ; pop r13 ; ret
0x0000000000131afc : pop rsp ; pop r13 ; ret
0x0000000000132904 : pop rsp ; pop r13 ; ret
0x000000000013291a : pop rsp ; pop r13 ; ret
0x000000000013430b : pop rsp ; pop r13 ; ret
0x0000000000134ac1 : pop rsp ; pop r13 ; ret
0x0000000000134ece : pop rsp ; pop r13 ; ret
0x000000000013549e : pop rsp ; pop r13 ; ret
0x00000000001354b2 : pop rsp ; pop r13 ; ret
0x000000000013798e : pop rsp ; pop r13 ; ret
0x0000000000137ace : pop rsp ; pop r13 ; ret
0x0000000000138457 : pop rsp ; pop r13 ; ret
0x00000000001384aa : pop rsp ; pop r13 ; ret
0x0000000000138517 : pop rsp ; pop r13 ; ret
0x0000000000139285 : pop rsp ; pop r13 ; ret
0x000000000013929a : pop rsp ; pop r13 ; ret
0x000000000013a1dc : pop rsp ; pop r13 ; ret
0x000000000013a249 : pop rsp ; pop r13 ; ret
0x000000000013b49d : pop rsp ; pop r13 ; ret
0x000000000013b4c5 : pop rsp ; pop r13 ; ret
0x000000000013b4e6 : pop rsp ; pop r13 ; ret
0x00000000001426bb : pop rsp ; pop r13 ; ret
0x000000000014296e : pop rsp ; pop r13 ; ret
0x000000000017400e : pop rsp ; pop r13 ; ret
0x0000000000174772 : pop rsp ; pop r13 ; ret
0x00000000000b65d5 : pop rsp ; pop r14 ; ret
0x00000000000bb56d : pop rsp ; pop r14 ; ret
0x00000000000bb645 : pop rsp ; pop r14 ; ret
0x00000000000398c7 : pop rsp ; pop rbp ; ret
0x00000000000cace2 : pop rsp ; pop rbp ; ret
0x00000000000fe636 : pop rsp ; pop rbp ; ret
0x00000000001a0b94 : pop rsp ; push rax ; add byte ptr [rax], al ; pop rax ; stosb byte ptr [rdi], al ; jmp 0x1a0ba2
0x00000000001b1194 : pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x0000000000003838 : pop rsp ; ret
0x000000000001fb13 : pop rsp ; ret
0x000000000001fb79 : pop rsp ; ret
0x000000000001fc09 : pop rsp ; ret
0x000000000002e836 : pop rsp ; ret
0x0000000000035a9a : pop rsp ; ret
0x0000000000035b23 : pop rsp ; ret
0x0000000000035c4c : pop rsp ; ret
0x0000000000035c9d : pop rsp ; ret
0x0000000000035ec6 : pop rsp ; ret
0x0000000000036def : pop rsp ; ret
0x0000000000039cf6 : pop rsp ; ret
0x000000000003a272 : pop rsp ; ret
0x000000000003a2c6 : pop rsp ; ret
0x000000000003adb4 : pop rsp ; ret
0x000000000004509d : pop rsp ; ret
0x0000000000047a16 : pop rsp ; ret
0x00000000000480df : pop rsp ; ret
0x000000000004827f : pop rsp ; ret
0x0000000000052c94 : pop rsp ; ret
0x000000000006a975 : pop rsp ; ret
0x000000000006aad7 : pop rsp ; ret
0x000000000006ab49 : pop rsp ; ret
0x000000000006c47f : pop rsp ; ret
0x000000000006c4a9 : pop rsp ; ret
0x000000000006cb8f : pop rsp ; ret
0x000000000006cc11 : pop rsp ; ret
0x000000000006d202 : pop rsp ; ret
0x000000000006d368 : pop rsp ; ret
0x000000000006db9b : pop rsp ; ret
0x000000000006dc0d : pop rsp ; ret
0x000000000006df3f : pop rsp ; ret
0x000000000006df85 : pop rsp ; ret
0x000000000006dfef : pop rsp ; ret
0x000000000006e0df : pop rsp ; ret
0x000000000006e13e : pop rsp ; ret
0x000000000006ee7d : pop rsp ; ret
0x000000000006eecd : pop rsp ; ret
0x000000000006f1ad : pop rsp ; ret
0x000000000006f1ba : pop rsp ; ret
0x000000000006f66b : pop rsp ; ret
0x000000000006f77f : pop rsp ; ret
0x000000000006f7df : pop rsp ; ret
0x000000000006fa1d : pop rsp ; ret
0x000000000006fa69 : pop rsp ; ret
0x000000000006fc88 : pop rsp ; ret
0x000000000006fdc8 : pop rsp ; ret
0x000000000006fe12 : pop rsp ; ret
0x000000000007083b : pop rsp ; ret
0x00000000000708b0 : pop rsp ; ret
0x0000000000070988 : pop rsp ; ret
0x0000000000070a7d : pop rsp ; ret
0x0000000000070ac4 : pop rsp ; ret
0x0000000000070b74 : pop rsp ; ret
0x0000000000070b88 : pop rsp ; ret
0x0000000000072ade : pop rsp ; ret
0x0000000000072b83 : pop rsp ; ret
0x0000000000073757 : pop rsp ; ret
0x0000000000074b56 : pop rsp ; ret
0x0000000000074b87 : pop rsp ; ret
0x0000000000076bab : pop rsp ; ret
0x00000000000779cc : pop rsp ; ret
0x0000000000077c90 : pop rsp ; ret
0x0000000000077cc3 : pop rsp ; ret
0x0000000000078165 : pop rsp ; ret
0x0000000000078191 : pop rsp ; ret
0x00000000000781d4 : pop rsp ; ret
0x0000000000078268 : pop rsp ; ret
0x00000000000782f6 : pop rsp ; ret
0x000000000007830d : pop rsp ; ret
0x0000000000079949 : pop rsp ; ret
0x000000000007a368 : pop rsp ; ret
0x000000000007a793 : pop rsp ; ret
0x000000000007b59c : pop rsp ; ret
0x000000000007b9b7 : pop rsp ; ret
0x000000000007ba6a : pop rsp ; ret
0x000000000007d39f : pop rsp ; ret
0x000000000007eedc : pop rsp ; ret
0x000000000007ef0c : pop rsp ; ret
0x0000000000084bac : pop rsp ; ret
0x0000000000085f49 : pop rsp ; ret
0x0000000000086735 : pop rsp ; ret
0x0000000000086a15 : pop rsp ; ret
0x0000000000086a7f : pop rsp ; ret
0x000000000008848a : pop rsp ; ret
0x0000000000088bc6 : pop rsp ; ret
0x00000000000891fc : pop rsp ; ret
0x00000000000892b1 : pop rsp ; ret
0x0000000000089653 : pop rsp ; ret
0x00000000000896d8 : pop rsp ; ret
0x0000000000089702 : pop rsp ; ret
0x0000000000089821 : pop rsp ; ret
0x0000000000089860 : pop rsp ; ret
0x000000000008b527 : pop rsp ; ret
0x00000000000943eb : pop rsp ; ret
0x0000000000094d65 : pop rsp ; ret
0x0000000000094f8f : pop rsp ; ret
0x0000000000096a4e : pop rsp ; ret
0x0000000000096c79 : pop rsp ; ret
0x0000000000096ce8 : pop rsp ; ret
0x0000000000096e42 : pop rsp ; ret
0x00000000000abce7 : pop rsp ; ret
0x00000000000ac67b : pop rsp ; ret
0x00000000000acb12 : pop rsp ; ret
0x00000000000ad0ed : pop rsp ; ret
0x00000000000ad15f : pop rsp ; ret
0x00000000000b9e23 : pop rsp ; ret
0x00000000000c8339 : pop rsp ; ret
0x00000000000c962b : pop rsp ; ret
0x00000000000cc0ea : pop rsp ; ret
0x00000000000cc83a : pop rsp ; ret
0x00000000000cdc5f : pop rsp ; ret
0x00000000000cdc84 : pop rsp ; ret
0x00000000000cdcb8 : pop rsp ; ret
0x00000000000cdd04 : pop rsp ; ret
0x00000000000ce6de : pop rsp ; ret
0x00000000000ce6fc : pop rsp ; ret
0x00000000000ce724 : pop rsp ; ret
0x00000000000ce774 : pop rsp ; ret
0x00000000000d17a6 : pop rsp ; ret
0x00000000000d18a6 : pop rsp ; ret
0x00000000000d5c28 : pop rsp ; ret
0x00000000000d5c42 : pop rsp ; ret
0x00000000000d5c72 : pop rsp ; ret
0x00000000000d6f92 : pop rsp ; ret
0x00000000000d6fd5 : pop rsp ; ret
0x00000000000d7cb5 : pop rsp ; ret
0x00000000000dc128 : pop rsp ; ret
0x00000000000e7bc1 : pop rsp ; ret
0x00000000000e8485 : pop rsp ; ret
0x00000000000efcc3 : pop rsp ; ret
0x00000000000efcec : pop rsp ; ret
0x00000000000f5d6f : pop rsp ; ret
0x00000000000f6a13 : pop rsp ; ret
0x00000000000f6e76 : pop rsp ; ret
0x00000000000f6ec1 : pop rsp ; ret
0x00000000000f713d : pop rsp ; ret
0x00000000000f71b6 : pop rsp ; ret
0x00000000000f8233 : pop rsp ; ret
0x00000000000faef2 : pop rsp ; ret
0x00000000000fb7cc : pop rsp ; ret
0x00000000000fb830 : pop rsp ; ret
0x00000000000fc43a : pop rsp ; ret
0x00000000000fc459 : pop rsp ; ret
0x00000000000fc479 : pop rsp ; ret
0x00000000000fc8f2 : pop rsp ; ret
0x00000000000fc949 : pop rsp ; ret
0x00000000000fcb4f : pop rsp ; ret
0x00000000000fcdef : pop rsp ; ret
0x00000000000fce0d : pop rsp ; ret
0x00000000000fced1 : pop rsp ; ret
0x00000000000fcf03 : pop rsp ; ret
0x00000000000fd554 : pop rsp ; ret
0x00000000000ff439 : pop rsp ; ret
0x00000000000ff5c1 : pop rsp ; ret
0x00000000001015e7 : pop rsp ; ret
0x0000000000101995 : pop rsp ; ret
0x00000000001019d1 : pop rsp ; ret
0x0000000000101f3f : pop rsp ; ret
0x0000000000101f73 : pop rsp ; ret
0x000000000010314f : pop rsp ; ret
0x000000000010315e : pop rsp ; ret
0x0000000000104c34 : pop rsp ; ret
0x000000000010548e : pop rsp ; ret
0x000000000010864a : pop rsp ; ret
0x000000000010c9a2 : pop rsp ; ret
0x000000000010c9de : pop rsp ; ret
0x000000000010ebc7 : pop rsp ; ret
0x000000000010ec08 : pop rsp ; ret
0x0000000000112e8c : pop rsp ; ret
0x000000000011532d : pop rsp ; ret
0x0000000000115737 : pop rsp ; ret
0x0000000000115980 : pop rsp ; ret
0x0000000000116a16 : pop rsp ; ret
0x0000000000116a6b : pop rsp ; ret
0x0000000000116d53 : pop rsp ; ret
0x0000000000116d9c : pop rsp ; ret
0x0000000000117f16 : pop rsp ; ret
0x0000000000117f6b : pop rsp ; ret
0x0000000000118253 : pop rsp ; ret
0x000000000011829c : pop rsp ; ret
0x00000000001192bd : pop rsp ; ret
0x00000000001192f0 : pop rsp ; ret
0x0000000000119e1c : pop rsp ; ret
0x000000000011d343 : pop rsp ; ret
0x000000000011d3ca : pop rsp ; ret
0x000000000011d3f2 : pop rsp ; ret
0x0000000000121a40 : pop rsp ; ret
0x0000000000121a71 : pop rsp ; ret
0x0000000000121e14 : pop rsp ; ret
0x0000000000121e3d : pop rsp ; ret
0x0000000000121e78 : pop rsp ; ret
0x0000000000126973 : pop rsp ; ret
0x0000000000127ab9 : pop rsp ; ret
0x0000000000127af9 : pop rsp ; ret
0x0000000000127af9 : pop rsp ; ret
0x0000000000128a58 : pop rsp ; ret
0x0000000000128a78 : pop rsp ; ret
0x000000000012ccbb : pop rsp ; ret
0x000000000012cd24 : pop rsp ; ret
0x000000000012da05 : pop rsp ; ret
0x000000000012e1ac : pop rsp ; ret
0x000000000012e1c5 : pop rsp ; ret
0x000000000012e707 : pop rsp ; ret
0x000000000012e728 : pop rsp ; ret
0x000000000012e8bd : pop rsp ; ret
0x000000000012ec95 : pop rsp ; ret
0x000000000012eddd : pop rsp ; ret
0x00000000001330a6 : pop rsp ; ret
0x00000000001330d9 : pop rsp ; ret
0x00000000001338fd : pop rsp ; ret
0x00000000001339ca : pop rsp ; ret
0x0000000000133ae5 : pop rsp ; ret
0x0000000000133b71 : pop rsp ; ret
0x0000000000137678 : pop rsp ; ret
0x00000000001376c1 : pop rsp ; ret
0x0000000000137ccf : pop rsp ; ret
0x0000000000137cf3 : pop rsp ; ret
0x00000000001386f6 : pop rsp ; ret
0x0000000000139206 : pop rsp ; ret
0x0000000000139220 : pop rsp ; ret
0x000000000013b329 : pop rsp ; ret
0x000000000013bfa2 : pop rsp ; ret
0x000000000013bfc0 : pop rsp ; ret
0x000000000013bfe7 : pop rsp ; ret
0x000000000013c21f : pop rsp ; ret
0x0000000000140e06 : pop rsp ; ret
0x0000000000140e66 : pop rsp ; ret
0x000000000014484c : pop rsp ; ret
0x00000000001448b1 : pop rsp ; ret
0x0000000000144921 : pop rsp ; ret
0x0000000000144991 : pop rsp ; ret
0x0000000000144a01 : pop rsp ; ret
0x0000000000144a6c : pop rsp ; ret
0x0000000000144ad6 : pop rsp ; ret
0x0000000000144b3c : pop rsp ; ret
0x0000000000144b9c : pop rsp ; ret
0x0000000000144c06 : pop rsp ; ret
0x0000000000144c71 : pop rsp ; ret
0x0000000000144cdc : pop rsp ; ret
0x00000000001740f2 : pop rsp ; ret
0x00000000001747f3 : pop rsp ; ret
0x000000000000318d : pop rsp ; ret 0x52c0
0x0000000000194f11 : pop rsp ; sti ; call rax
0x000000000019e594 : pop rsp ; sub al, byte ptr [rax] ; add al, bh ; jl 0x19e58b ; jmp rsp
0x00000000001aef94 : pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001999ad : popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x0000000000199005 : push 0x44740001 ; cmc ; jmp rsp
0x000000000019aa3b : push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x00000000001287bb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000195df7 : push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000198ed3 : push qword ptr [rcx + 0x14740001] ; cmc ; call rsp
0x00000000001978f3 : push qword ptr [rcx + rcx*8 - 0xfec0000] ; in eax, dx ; call rsp
0x000000000019b073 : push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x00000000001975c3 : push qword ptr [rcx + rsi*4 - 0x7f9c0000] ; in eax, dx ; jmp rsp
0x0000000000074b81 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000faeec : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000faeeb : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000faeea : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f76ec : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000197fab : push qword ptr [rdi + rsi*8 + 0x1f440000] ; out dx, eax ; jmp rsp
0x00000000001158b4 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000195843 : push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x00000000001962ef : push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x000000000019ab0b : push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x0000000000198a1b : push qword ptr [rdx + rdi + 0x24040001] ; jmp rsp
0x0000000000198a1a : push qword ptr [rdx + rdi + 0x24040001] ; jmp rsp
0x0000000000187bcb : push qword ptr [rsi + rbp*2] ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x0000000000197eab : push qword ptr [rsi + rbp*8 - 0x265c0000] ; out dx, al ; call rsp
0x000000000019a683 : push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x000000000019751b : push qword ptr [rsp + rbp*4 + 0x6b040000] ; in eax, dx ; jmp rsp
0x0000000000197723 : push qword ptr [rsp + rdi*4 - 0x506c0000] ; in eax, dx ; call rsp
0x0000000000186d5b : push qword ptr [rsp] ; in eax, dx ; jmp qword ptr [rcx]
0x000000000013bc09 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bc79 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bce9 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013bd59 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b867 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b927 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b9e7 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013baa7 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000074fe2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000023ad0 : push rax ; push rsp ; ret
0x00000000001159d0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000019b2e1 : push rbx ; cli ; call rsp
0x000000000013ab3e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abfe : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013acbe : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad7e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000189201 : push rcx ; hlt ; call rsp
0x00000000001891fd : push rcx ; hlt ; dec edx ; push rcx ; hlt ; call rsp
0x00000000001974e1 : push rcx ; in eax, dx ; jmp rsp
0x0000000000120692 : push rcx ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000019b65d : push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b351 : push rdi ; cli ; jmp rsp
0x0000000000101a2a : push rdi ; sub al, 0 ; add rsp, 8 ; ret
0x0000000000198d85 : push rdx ; add dword ptr [rax], eax ; in al, 7 ; hlt ; call rsp
0x00000000001892d7 : push rdx ; hlt ; dec dword ptr [rcx] ; push rsp ; hlt ; call qword ptr [rbx]
0x0000000000023aca : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000019ab11 : push rdx ; stc ; call rsp
0x0000000000101fc2 : push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x000000000019b311 : push rsi ; cli ; jmp rsp
0x00000000001957c8 : push rsi ; pop rsp ; cld ; jmp rsi
0x00000000001b0fe5 : push rsp ; add dword ptr [rax], eax ; js 0x1b0fe6 ; jmp qword ptr [rbx]
0x0000000000198dbd : push rsp ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and ah, dh ; call rsp
0x00000000001bad8c : push rsp ; add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b078c : push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x000000000010eee1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000010eddd : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000003dfe3 : push rsp ; and al, 0x18 ; call 0x3c0a9
0x000000000012c7f8 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000081630 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00000000000819ac : push rsp ; and al, 0x20 ; call rax
0x00000000000ba6ee : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000fdd54 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000848ea : push rsp ; and al, 0x68 ; call rax
0x0000000000085c7a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000004a1d0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a18a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000001989f8 : push rsp ; and dh, bl ; jmp rsp
0x00000000000812c2 : push rsp ; and eax, 0x950f4100 ; ret
0x0000000000196850 : push rsp ; and ecx, ebp ; call rsp
0x00000000001af451 : push rsp ; call rsi
0x00000000001bb8f1 : push rsp ; clc ; call qword ptr [rax]
0x00000000001bb929 : push rsp ; clc ; jmp qword ptr [rcx]
0x000000000019a688 : push rsp ; clc ; jmp rsp
0x0000000000195b79 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b75 : push rsp ; cld ; call qword ptr [rax]
0x00000000001bb58c : push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a6be9 : push rsp ; cli ; call qword ptr [rax]
0x0000000000189c2b : push rsp ; cmc ; call rsp
0x0000000000188cc0 : push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rsp
0x0000000000189020 : push rsp ; fdivr st(3), st(0) ; push rsp ; ret
0x000000000019a5e4 : push rsp ; fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000001892dd : push rsp ; hlt ; call qword ptr [rbx]
0x00000000001892e5 : push rsp ; hlt ; jmp qword ptr [rdi]
0x000000000018932d : push rsp ; hlt ; jmp rbx
0x00000000001a248c : push rsp ; imul eax, dword ptr [rax], 0xecf52000 ; call qword ptr [rsi]
0x00000000000cd9d6 : push rsp ; jne 0xcd963 ; mov eax, 0x7d00 ; ret
0x00000000001a2c8c : push rsp ; jno 0x1a2c96 ; add byte ptr [rax], dh ; sbb ch, ch ; call rdx
0x000000000009f12b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000001962d8 : push rsp ; lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x0000000000196b98 : push rsp ; loope 0x196b87 ; call rsp
0x0000000000186e10 : push rsp ; loopne 0x186e03 ; jmp qword ptr [rcx]
0x0000000000135067 : push rsp ; mov eax, 1 ; ret
0x00000000001a758c : push rsp ; mov edx, 0x73200000 ; out dx, eax ; call rax
0x00000000001886c3 : push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x00000000001886c2 : push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188743 : push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000188742 : push rsp ; mov esi, ebx ; call qword ptr [rdx]
0x0000000000187819 : push rsp ; out dx, al ; ljmp ptr [rax + 0x53] ; out dx, al ; jmp rax
0x00000000001b298c : push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001958f4 : push rsp ; pop rsi ; cld ; jmp rsp
0x0000000000198550 : push rsp ; pop rsp ; int1 ; call rsp
0x00000000001b0b8c : push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b8f ; jmp qword ptr [rcx]
0x0000000000023ad1 : push rsp ; ret
0x0000000000034bc9 : push rsp ; ret
0x000000000008217e : push rsp ; ret
0x000000000008249d : push rsp ; ret
0x00000000000cf390 : push rsp ; ret
0x00000000000e760b : push rsp ; ret
0x00000000000e7617 : push rsp ; ret
0x0000000000189017 : push rsp ; ret
0x0000000000189016 : push rsp ; ret
0x000000000018901b : push rsp ; ret
0x000000000018901a : push rsp ; ret
0x0000000000189023 : push rsp ; ret
0x0000000000189022 : push rsp ; ret
0x000000000018902b : push rsp ; ret
0x000000000018902a : push rsp ; ret
0x0000000000189097 : push rsp ; ret
0x0000000000189096 : push rsp ; ret
0x000000000019a12c : push rsp ; ret
0x00000000001ae78f : push rsp ; ret
0x0000000000189097 : push rsp ; ret
0x0000000000189096 : push rsp ; ret
0x0000000000034df8 : push rsp ; ret 0x2e0f
0x000000000010a434 : push rsp ; ret 0x8940
0x000000000010a4c4 : push rsp ; ret 0x8940
0x000000000010a564 : push rsp ; ret 0x8940
0x000000000010a5f4 : push rsp ; ret 0x8940
0x000000000010a684 : push rsp ; ret 0x8940
0x000000000010a714 : push rsp ; ret 0x8940
0x000000000010a7b4 : push rsp ; ret 0x8940
0x000000000010a854 : push rsp ; ret 0x8940
0x000000000010a8f4 : push rsp ; ret 0x8940
0x000000000010a984 : push rsp ; ret 0x8940
0x000000000010aab4 : push rsp ; ret 0x8940
0x000000000010ab4c : push rsp ; ret 0x8940
0x0000000000034aba : push rsp ; ret 0xf66
0x000000000019a10b : push rsp ; ret 1
0x00000000000e7613 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x0000000000195de0 : push rsp ; xchg ah, bh ; jmp rsp
0x000000000018874b : push rsp ; xor ebx, 0xffffffff ; out 0x88, al ; jmp rsi
0x000000000018874a : push rsp ; xor ebx, 0xffffffff ; out 0x88, al ; jmp rsi
0x000000000019b2dc : pushfq ; add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019aea4 : pushfq ; and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x0000000000197669 : pushfq ; in eax, dx ; call rsp
0x0000000000197cec : pushfq ; loope 0x197cf6 ; add byte ptr [rsi + rbx*2 - 0x12], al ; jmp rsp
0x00000000001977ac : pushfq ; mov edi, 0xbb440000 ; in eax, dx ; call rsp
0x00000000001974dc : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x19753a ; in eax, dx ; jmp rsp
0x00000000001891fc : rcl byte ptr [rcx - 0xc], 0xff ; retf 0xf451 ; call rsp
0x00000000000c9be0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c9cbc : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e8296 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e82d4 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000047a13 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006e0dc : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000006e13b : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000070a7a : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000070ac1 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000010c99f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000010c9db : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000075051 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000075211 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077eab : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007e0f1 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096ba7 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000096ee5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000acf3d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bdf2d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d98b4 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000da3b9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000de402 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fe7e0 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000137878 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a4dd : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013a6ad : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022b50 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000039df5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003a585 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000006dd62 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000006e2a5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000075119 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000077963 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000850e2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000009f303 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000009f466 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000d7145 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000efde2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fb685 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fc599 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fefa5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010ad5d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010b5bd : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000117835 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000137aca : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000013a1d8 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb569 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000003a2c2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006df81 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000074b83 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000077cbf : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000086a7b : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008981d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d7cb1 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e7bbd : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000efce8 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000faeee : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ff435 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001192b9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d33f : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d3c6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000121a6d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000121e39 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ccb7 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012da01 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012e724 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012ec91 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001338f9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000133b6d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010c9d8 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000189200 : retf 0xf451 ; call rsp
0x00000000001977cd : rol byte ptr [rax], 0 ; mov ah, 0xc4 ; in eax, dx ; call rsp
0x000000000010a97d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00000000000d7a71 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x000000000011d0d7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000019780d : rol dword ptr [rax], 0 ; and al, 0xc8 ; in eax, dx ; jmp rsp
0x00000000001a7c7d : rol dword ptr [rax], 0 ; and bl, 0xef ; call rsp
0x00000000001a7c7c : rol dword ptr [rax], 0 ; and bl, 0xef ; call rsp
0x00000000001a1680 : ror al, 1 ; in al, dx ; call rsp
0x000000000008249a : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000000f6e6e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f6eb9 : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e7614 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x0000000000136d5e : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001373a9 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008b521 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000122990 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x0000000000108de2 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000009ebd9 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9ebd8 ; ret
0x000000000019a4dd : salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x0000000000174141 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019b751 : salc ; cli ; call rsp
0x00000000001960a0 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x1960aa ; call rax
0x000000000019aea9 : sar cl, 1 ; call rsp
0x00000000000fea2f : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000feaea : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x000000000019854d : sbb al, byte ptr [rcx] ; add byte ptr [rsp + rbx*2 - 0xf], dl ; call rsp
0x00000000000f6e72 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f6ebd : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000128a54 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f0034 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf007c
0x0000000000075117 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000009f464 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000efde0 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000001455dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000133060 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000001391c0 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x0000000000023acb : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000199c49 : sbb edi, esi ; call rsp
0x000000000019b079 : sbb edx, edi ; jmp rsp
0x000000000019b078 : sbb edx, edi ; jmp rsp
0x0000000000002f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000197729 : scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x000000000012aff8 : sete al ; add rsp, 8 ; ret
0x0000000000136e5c : setne al ; add rsp, 0x70 ; pop rbx ; ret
0x000000000019aa22 : stc ; call rsp
0x000000000019ab12 : stc ; call rsp
0x000000000019aba2 : stc ; call rsp
0x000000000019aba1 : stc ; call rsp
0x000000000019aba0 : stc ; call rsp
0x000000000019acd2 : stc ; call rsp
0x000000000019acea : stc ; call rsp
0x000000000019adda : stc ; call rsp
0x000000000019adea : stc ; call rsp
0x000000000019ae6a : stc ; call rsp
0x000000000019aeaa : stc ; call rsp
0x000000000019ae62 : stc ; inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x000000000019acca : stc ; inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x000000000019aa42 : stc ; jmp rsp
0x000000000019ab3a : stc ; jmp rsp
0x000000000019afca : stc ; jmp rsp
0x000000000019aea2 : stc ; lcall ptr [rsp - 0x2f0bfffe] ; stc ; call rsp
0x000000000019ace2 : stc ; ljmp ptr [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x000000000019aa3a : stc ; push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x000000000019ab0a : stc ; push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x000000000019b9aa : std ; call rsp
0x000000000019bab2 : std ; call rsp
0x000000000019b9a2 : std ; dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x0000000000197971 : std ; in eax, dx ; call rsp
0x00000000001a4d82 : std ; jmp rsp
0x000000000019b89a : sti ; call rsp
0x000000000019b899 : sti ; call rsp
0x000000000019b8ca : sti ; call rsp
0x000000000006d361 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000019afc9 : sti ; stc ; jmp rsp
0x000000000019afc8 : sti ; stc ; jmp rsp
0x00000000001974dd : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; je 0x197539 ; in eax, dx ; jmp rsp
0x0000000000188ae9 : stosb byte ptr [rdi], al ; call rsp
0x0000000000188ae8 : stosb byte ptr [rdi], al ; call rsp
0x00000000001962f5 : stosb byte ptr [rdi], al ; cld ; call rsp
0x00000000001962f4 : stosb byte ptr [rdi], al ; cld ; call rsp
0x00000000001962f1 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000101fc3 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000fdf9f : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fe463 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000ffa61 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000ffaee : sub al, 0 ; add rsp, 8 ; ret
0x0000000000101a2b : sub al, 0 ; add rsp, 8 ; ret
0x000000000019afdd : sub al, 2 ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000019e5bd : sub al, byte ptr [rax] ; add al, al ; jg 0x19e5b2 ; jmp rsp
0x000000000019e595 : sub al, byte ptr [rax] ; add al, bh ; jl 0x19e58a ; jmp rsp
0x0000000000120693 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000132588 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000135257 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000001382f5 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138325 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138355 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000138385 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140d7a : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000140d79 : sub byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000008162a : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000850e0 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000034b32 : sub cl, al ; add rsp, 0x28 ; ret
0x0000000000034e61 : sub cl, al ; add rsp, 0x28 ; ret
0x0000000000034ace : sub cl, al ; jne 0x34ae8 ; add rsp, 0x28 ; ret
0x0000000000034e09 : sub cl, al ; jne 0x34e20 ; add rsp, 0x28 ; ret
0x000000000012c5bd : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000188ae4 : sub dword ptr [rbx - 0x55b6000d], edi ; call rsp
0x0000000000138316 : sub eax, -0x80 ; add rsp, 8 ; ret
0x000000000013748e : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ce094 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000002e69f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019afc5 : sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x0000000000002f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000019b159 : sub edx, edi ; jmp rsp
0x0000000000138315 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000f6e6f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6eba : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128a51 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c30d : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000088e17 : sub rsp, 0x80 ; call 0x115089
0x00000000000c8dc0 : sub rsp, 0x80 ; call 0x115089
0x000000000012bf38 : sub rsp, 8 ; call 0x138236
0x000000000012bf37 : sub rsp, 8 ; call 0x138237
0x000000000009f47f : sub rsp, 8 ; call 0x8b726
0x0000000000125171 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000138377 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019b798 : test al, bl ; cli ; jmp rsp
0x000000000019a4e0 : test byte ptr [rax + rdi*8], ah ; jmp rsp
0x000000000012a50e : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x000000000019ab38 : test byte ptr [rax - 7], bl ; jmp rsp
0x000000000019b19c : test byte ptr [rax], bh ; add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x00000000001982c4 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; in al, 0xfa ; out dx, eax ; call rsp
0x000000000019762c : test byte ptr [rbp - 0x6b4c0000], dh ; in eax, dx ; jmp rsp
0x000000000019b440 : test byte ptr [rcx - 6], ah ; call rsp
0x000000000019afdc : test byte ptr [rdx + rax], ch ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000019ae64 : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x000000000019accc : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x000000000012252e : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x000000000019a6ac : test ch, ah ; add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x000000000019ae68 : test cl, cl ; stc ; call rsp
0x0000000000197fad : test dword ptr [rax], 0xef1f4400 ; jmp rsp
0x0000000000057fd1 : test dword ptr [rsp + rsi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x00000000001974b5 : test eax, 0x4d440000 ; in eax, dx ; jmp rsp
0x000000000011769a : test eax, eax ; je 0x1176b0 ; add rsp, 8 ; ret
0x000000000012b881 : test eax, eax ; je 0x12b891 ; mov rdi, rsp ; call rax
0x000000000012b96c : test eax, eax ; je 0x12b97c ; mov rdi, rsp ; call rax
0x000000000008d80c : test eax, eax ; jne 0x8d7d6 ; add rsp, 8 ; ret
0x000000000008d82f : test eax, eax ; jne 0x8d848 ; add rsp, 8 ; ret
0x000000000012aff6 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00000000001983d1 : test eax, esi ; jmp rsp
0x0000000000117699 : test rax, rax ; je 0x1176b1 ; add rsp, 8 ; ret
0x000000000012b880 : test rax, rax ; je 0x12b892 ; mov rdi, rsp ; call rax
0x000000000012b96b : test rax, rax ; je 0x12b97d ; mov rdi, rsp ; call rax
0x00000000001972a5 : wait ; add byte ptr [rax], al ; cmp ebp, ebx ; jmp rsp
0x0000000000195de1 : xchg ah, bh ; jmp rsp
0x00000000001455df : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145da3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000182f4b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000136d5d : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000198219 : xchg eax, ebx ; out dx, eax ; call rsp
0x0000000000198e81 : xchg eax, ecx ; hlt ; jmp rsp
0x00000000001981e9 : xchg eax, ecx ; out dx, eax ; jmp rsp
0x00000000001a4d7d : xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x00000000001a4d7c : xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000006da0e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001888c4 : xchg eax, edx ; ja 0x1888bd ; jmp rsp
0x00000000001888c9 : xchg eax, edx ; jmp rsp
0x0000000000196684 : xchg eax, esi ; or al, byte ptr [rax] ; add byte ptr [rcx + rdx*4 - 0x18], al ; call rsp
0x000000000019a3f0 : xchg eax, esp ; adc edi, eax ; call rsp
0x000000000019a904 : xchg eax, esp ; cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x0000000000198a6c : xchg eax, esp ; cmp eax, 0x32640001 ; jmp rsp
0x0000000000197631 : xchg eax, esp ; in eax, dx ; jmp rsp
0x0000000000196940 : xchg eax, esp ; jae 0x19692f ; jmp rsp
0x0000000000198628 : xchg eax, esp ; je 0x19861f ; jmp rsp
0x0000000000198ac8 : xchg eax, esp ; jmp rsp
0x0000000000197664 : xchg eax, esp ; mov bh, 0 ; add byte ptr [rsp + rbx*4], dl ; in eax, dx ; call rsp
0x0000000000196aac : xchg eax, esp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x196aa3 ; jmp rsp
0x00000000000fea2e : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000feae9 : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000197728 : xchg eax, esp ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x0000000000140d78 : xchg eax, esp ; sub byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000019afc4 : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x000000000019acd1 : xchg ecx, edi ; call rsp
0x000000000008194e : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000019a4a8 : xor al, 0x21 ; clc ; jmp rsp
0x000000000019b2e0 : xor al, 0x53 ; cli ; call rsp
0x0000000000187bcc : xor al, 0x6e ; int1 ; inc dword ptr [rsi + rbp*2 - 0xf] ; jmp rsp
0x000000000019b9a8 : xor al, 0x77 ; std ; call rsp
0x000000000019acd0 : xor al, 0x87 ; stc ; call rsp
0x000000000019add8 : xor al, 0xb7 ; stc ; call rsp
0x000000000019a8d0 : xor al, 0xd9 ; clc ; call rsp
0x000000000019bab0 : xor al, 0xdf ; std ; call rsp
0x000000000019b0f5 : xor al, 2 ; add byte ptr [rdx], dl ; cli ; call rsp
0x000000000019afe0 : xor al, 3 ; cli ; call rsp
0x0000000000135bb8 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000020b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008d858 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000bd08a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb7e1 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000121a6b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000121e37 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000019566c : xor byte ptr [rsp + rdi*8], 0xff ; adc byte ptr [rdi], ah ; cld ; call rax
0x00000000001954dc : xor byte ptr [rsp + rdi*8], al ; jmp qword ptr [rax]
0x0000000000198051 : xor ch, bh ; call rsp
0x0000000000198a71 : xor dh, bl ; jmp rsp
0x0000000000198a70 : xor dh, bl ; jmp rsp
0x000000000019b075 : xor dword ptr [rdx], eax ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x000000000008e73c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00000000000886a4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008d7da : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000008921d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000892d5 : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008958d : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000000c78b0 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013380c : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000137587 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000142c3b : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bf782 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000136f52 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000137052 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000122215 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011eae8 : xor eax, eax ; add rsp, 0x28 ; ret
0x00000000001370d5 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000137215 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000143e08 : xor eax, eax ; add rsp, 0x38 ; ret
0x000000000014366f : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000143737 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000003a08c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b1de : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b23d : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c8d0 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000101e2c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001023ae : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112f42 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b9e5 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d6d5 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb80e : xor eax, eax ; add rsp, 8 ; ret
0x00000000000e7ae0 : xor eax, eax ; add rsp, 8 ; ret
0x00000000000ff772 : xor eax, eax ; add rsp, 8 ; ret
0x00000000001159d1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008851a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000ad074 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000bfe31 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000ad076 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000f6ad0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000000f6ad2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
